//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Contains details about the accepted inbound connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AcceptInboundConnectionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InboundConnection Connection { get; set; }
	}
	
	/// <summary>
	/// Describes an inbound cross-cluster connection for Amazon OpenSearch Service. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html">Cross-cluster search for Amazon OpenSearch Service</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InboundConnection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInformationContainer LocalDomainInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInformationContainer RemoteDomainInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConnectionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InboundConnectionStatus ConnectionStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConnectionMode ConnectionMode { get; set; }
	}
	
	/// <summary>
	/// Container for information about an OpenSearch Service domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainInformationContainer
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AWSDomainInformation AWSDomainInformation { get; set; }
	}
	
	/// <summary>
	/// Information about an Amazon OpenSearch Service domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AWSDomainInformation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OwnerId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
	}
	
	/// <summary>
	/// The status of an inbound cross-cluster connection for OpenSearch Service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InboundConnectionStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InboundConnectionStatusCode StatusCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InboundConnectionStatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_ACCEPTANCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROVISIONING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 7,
	}
	
	/// <summary>
	/// <p>The connection mode for the cross-cluster connection.</p> <ul> <li> <p> <b>DIRECT</b> - Used for cross-cluster search or cross-cluster replication.</p> </li> <li> <p> <b>VPC_ENDPOINT</b> - Used for remote reindex between Amazon OpenSearch Service VPC domains.</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ConnectionMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPC_ENDPOINT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LimitExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisabledOperationException
	{
	}
	
	/// <summary>
	/// A tag (key-value pair) for an Amazon OpenSearch Service resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tag
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BaseException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalException
	{
	}
	
	/// <summary>
	/// Container for the response returned by the <code>AssociatePackage</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociatePackageResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainPackageDetails DomainPackageDetails { get; set; }
	}
	
	/// <summary>
	/// Information about a package that is associated with a domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainPackageDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PackageType PackageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainPackageStatus DomainPackageStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReferencePath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ErrorDetails ErrorDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PackageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TXT-DICTIONARY")]
		TXTMinusDICTIONARY = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DomainPackageStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASSOCIATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASSOCIATION_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISSOCIATING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISSOCIATION_FAILED = 4,
	}
	
	/// <summary>
	/// Additional information if the package is in an error state. Null otherwise.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ErrorDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConflictException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuthorizeVpcEndpointAccessResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AuthorizedPrincipal AuthorizedPrincipal { get; set; }
	}
	
	/// <summary>
	/// Information about an Amazon Web Services account or service that has access to an Amazon OpenSearch Service domain through the use of an interface VPC endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuthorizedPrincipal
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PrincipalType PrincipalType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Principal { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PrincipalType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_ACCOUNT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_SERVICE = 1,
	}
	
	/// <summary>
	/// Container for the response to a <code>CancelServiceSoftwareUpdate</code> operation. Contains the status of the update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelServiceSoftwareUpdateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceSoftwareOptions ServiceSoftwareOptions { get; set; }
	}
	
	/// <summary>
	/// The current status of the service software for an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html">Service software updates in Amazon OpenSearch Service</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceSoftwareOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrentVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NewVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UpdateAvailable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Cancellable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeploymentStatus UpdateStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset AutomatedUpdateDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> OptionalDeployment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeploymentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_UPDATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_ELIGIBLE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ELIGIBLE = 4,
	}
	
	/// <summary>
	/// The result of a <code>CreateDomain</code> operation. Contains the status of the newly created domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDomainResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainStatus DomainStatus { get; set; }
	}
	
	/// <summary>
	/// The current status of an OpenSearch Service domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointsMap Endpoints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Processing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UpgradeProcessing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ClusterConfig ClusterConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EBSOptions EBSOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessPolicies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotOptions SnapshotOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCDerivedInfo VPCOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CognitoOptions CognitoOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EncryptionAtRestOptions EncryptionAtRestOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NodeToNodeEncryptionOptions NodeToNodeEncryptionOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdvancedOptions AdvancedOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogPublishingOptions LogPublishingOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceSoftwareOptions ServiceSoftwareOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptions DomainEndpointOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdvancedSecurityOptions AdvancedSecurityOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneOptionsOutput AutoTuneOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeProgressDetails ChangeProgressDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OffPeakWindowOptions OffPeakWindowOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SoftwareUpdateOptions SoftwareUpdateOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndpointsMap
	{
	}
	
	/// <summary>
	/// Container for the cluster configuration of an OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html">Creating and managing Amazon OpenSearch Service domains</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClusterConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OpenSearchPartitionInstanceType InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DedicatedMasterEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ZoneAwarenessEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ZoneAwarenessConfig ZoneAwarenessConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OpenSearchPartitionInstanceType DedicatedMasterType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DedicatedMasterCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> WarmEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OpenSearchWarmPartitionInstanceType WarmType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WarmCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColdStorageOptions ColdStorageOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZWithStandbyEnabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OpenSearchPartitionInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m3.medium.search")]
		m3_medium_search = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m3.large.search")]
		m3_large_search = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m3.xlarge.search")]
		m3_xlarge_search = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m3.2xlarge.search")]
		m3_2xlarge_search = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.large.search")]
		m4_large_search = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.xlarge.search")]
		m4_xlarge_search = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.2xlarge.search")]
		m4_2xlarge_search = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.4xlarge.search")]
		m4_4xlarge_search = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.10xlarge.search")]
		m4_10xlarge_search = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.large.search")]
		m5_large_search = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.xlarge.search")]
		m5_xlarge_search = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.2xlarge.search")]
		m5_2xlarge_search = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.4xlarge.search")]
		m5_4xlarge_search = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.12xlarge.search")]
		m5_12xlarge_search = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.24xlarge.search")]
		m5_24xlarge_search = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.large.search")]
		r5_large_search = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.xlarge.search")]
		r5_xlarge_search = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.2xlarge.search")]
		r5_2xlarge_search = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.4xlarge.search")]
		r5_4xlarge_search = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.12xlarge.search")]
		r5_12xlarge_search = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.24xlarge.search")]
		r5_24xlarge_search = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.large.search")]
		c5_large_search = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.xlarge.search")]
		c5_xlarge_search = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.2xlarge.search")]
		c5_2xlarge_search = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.4xlarge.search")]
		c5_4xlarge_search = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.9xlarge.search")]
		c5_9xlarge_search = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.18xlarge.search")]
		c5_18xlarge_search = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t3.nano.search")]
		t3_nano_search = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t3.micro.search")]
		t3_micro_search = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t3.small.search")]
		t3_small_search = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t3.medium.search")]
		t3_medium_search = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t3.large.search")]
		t3_large_search = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t3.xlarge.search")]
		t3_xlarge_search = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t3.2xlarge.search")]
		t3_2xlarge_search = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ultrawarm1.medium.search")]
		ultrawarm1_medium_search = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ultrawarm1.large.search")]
		ultrawarm1_large_search = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ultrawarm1.xlarge.search")]
		ultrawarm1_xlarge_search = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t2.micro.search")]
		t2_micro_search = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t2.small.search")]
		t2_small_search = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t2.medium.search")]
		t2_medium_search = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.large.search")]
		r3_large_search = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.xlarge.search")]
		r3_xlarge_search = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.2xlarge.search")]
		r3_2xlarge_search = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.4xlarge.search")]
		r3_4xlarge_search = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.8xlarge.search")]
		r3_8xlarge_search = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i2.xlarge.search")]
		i2_xlarge_search = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i2.2xlarge.search")]
		i2_2xlarge_search = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="d2.xlarge.search")]
		d2_xlarge_search = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="d2.2xlarge.search")]
		d2_2xlarge_search = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="d2.4xlarge.search")]
		d2_4xlarge_search = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="d2.8xlarge.search")]
		d2_8xlarge_search = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.large.search")]
		c4_large_search = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.xlarge.search")]
		c4_xlarge_search = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.2xlarge.search")]
		c4_2xlarge_search = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.4xlarge.search")]
		c4_4xlarge_search = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.8xlarge.search")]
		c4_8xlarge_search = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.large.search")]
		r4_large_search = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.xlarge.search")]
		r4_xlarge_search = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.2xlarge.search")]
		r4_2xlarge_search = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.4xlarge.search")]
		r4_4xlarge_search = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.8xlarge.search")]
		r4_8xlarge_search = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.16xlarge.search")]
		r4_16xlarge_search = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.large.search")]
		i3_large_search = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.xlarge.search")]
		i3_xlarge_search = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.2xlarge.search")]
		i3_2xlarge_search = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.4xlarge.search")]
		i3_4xlarge_search = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.8xlarge.search")]
		i3_8xlarge_search = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.16xlarge.search")]
		i3_16xlarge_search = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6g.large.search")]
		r6g_large_search = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6g.xlarge.search")]
		r6g_xlarge_search = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6g.2xlarge.search")]
		r6g_2xlarge_search = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6g.4xlarge.search")]
		r6g_4xlarge_search = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6g.8xlarge.search")]
		r6g_8xlarge_search = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6g.12xlarge.search")]
		r6g_12xlarge_search = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m6g.large.search")]
		m6g_large_search = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m6g.xlarge.search")]
		m6g_xlarge_search = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m6g.2xlarge.search")]
		m6g_2xlarge_search = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m6g.4xlarge.search")]
		m6g_4xlarge_search = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m6g.8xlarge.search")]
		m6g_8xlarge_search = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m6g.12xlarge.search")]
		m6g_12xlarge_search = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c6g.large.search")]
		c6g_large_search = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c6g.xlarge.search")]
		c6g_xlarge_search = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c6g.2xlarge.search")]
		c6g_2xlarge_search = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c6g.4xlarge.search")]
		c6g_4xlarge_search = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c6g.8xlarge.search")]
		c6g_8xlarge_search = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c6g.12xlarge.search")]
		c6g_12xlarge_search = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6gd.large.search")]
		r6gd_large_search = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6gd.xlarge.search")]
		r6gd_xlarge_search = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6gd.2xlarge.search")]
		r6gd_2xlarge_search = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6gd.4xlarge.search")]
		r6gd_4xlarge_search = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6gd.8xlarge.search")]
		r6gd_8xlarge_search = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6gd.12xlarge.search")]
		r6gd_12xlarge_search = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6gd.16xlarge.search")]
		r6gd_16xlarge_search = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t4g.small.search")]
		t4g_small_search = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t4g.medium.search")]
		t4g_medium_search = 94,
	}
	
	/// <summary>
	/// The zone awareness configuration for an Amazon OpenSearch Service domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ZoneAwarenessConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AvailabilityZoneCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OpenSearchWarmPartitionInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ultrawarm1.medium.search")]
		ultrawarm1_medium_search = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ultrawarm1.large.search")]
		ultrawarm1_large_search = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ultrawarm1.xlarge.search")]
		ultrawarm1_xlarge_search = 2,
	}
	
	/// <summary>
	/// Container for the parameters required to enable cold storage for an OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cold-storage.html">Cold storage for Amazon OpenSearch Service</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ColdStorageOptions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Enabled { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters required to enable EBS-based storage for an OpenSearch Service domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EBSOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EBSEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VolumeType VolumeType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VolumeSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Throughput { get; set; }
	}
	
	/// <summary>
	/// The type of EBS volume that a domain uses. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-createupdatedomains.html#opensearch-createdomain-configure-ebs">Configuring EBS-based storage</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VolumeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		standard = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gp2 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		io1 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gp3 = 3,
	}
	
	/// <summary>
	/// The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AutomatedSnapshotStartHour { get; set; }
	}
	
	/// <summary>
	/// Information about the subnets and security groups for an Amazon OpenSearch Service domain provisioned within a virtual private cloud (VPC). For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html">Launching your Amazon OpenSearch Service domains using a VPC</a>. This information only exists if the domain was created with <code>VPCOptions</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VPCDerivedInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VPCId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AvailabilityZones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters required to enable Cognito authentication for an OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html">Configuring Amazon Cognito authentication for OpenSearch Dashboards</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CognitoOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserPoolId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityPoolId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	/// <summary>
	/// Specifies whether the domain should encrypt data at rest, and if so, the Key Management Service (KMS) key to use. Can be used only to create a new domain, not update an existing one.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EncryptionAtRestOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
	}
	
	/// <summary>
	/// Enables or disables node-to-node encryption. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ntn.html">Node-to-node encryption for Amazon OpenSearch Service</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NodeToNodeEncryptionOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	/// <summary>
	/// <p>Exposes native OpenSearch configuration values from <code>opensearch.yml</code>. The following advanced options are available: </p> <ul> <li> <p>Allows references to indexes in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. Default is <code>true</code>.</p> </li> <li> <p>Specifies the percentage of heap space allocated to field data. Default is unbounded.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options">Advanced cluster parameters</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AdvancedOptions
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LogPublishingOptions
	{
	}
	
	/// <summary>
	/// Options to configure a custom endpoint for an OpenSearch Service domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainEndpointOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnforceHTTPS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TLSSecurityPolicy TLSSecurityPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CustomEndpointEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomEndpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomEndpointCertificateArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TLSSecurityPolicy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Policy-Min-TLS-1-0-2019-07")]
		PolicyMinusMinMinusTLSMinus1Minus0Minus2019Minus07 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Policy-Min-TLS-1-2-2019-07")]
		PolicyMinusMinMinusTLSMinus1Minus2Minus2019Minus07 = 1,
	}
	
	/// <summary>
	/// Container for fine-grained access control settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AdvancedSecurityOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InternalUserDatabaseEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SAMLOptionsOutput SAMLOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset AnonymousAuthDisableDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AnonymousAuthEnabled { get; set; }
	}
	
	/// <summary>
	/// Describes the SAML application configured for the domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SAMLOptionsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SAMLIdp Idp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SubjectKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RolesKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SessionTimeoutMinutes { get; set; }
	}
	
	/// <summary>
	/// The SAML identity povider information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SAMLIdp
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MetadataContent { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EntityId { get; set; }
	}
	
	/// <summary>
	/// The Auto-Tune settings for a domain, displayed when enabling or disabling Auto-Tune.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoTuneOptionsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseOffPeakWindow { get; set; }
	}
	
	/// <summary>
	/// The Auto-Tune state for the domain. For valid states see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AutoTuneState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLE_IN_PROGRESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLE_IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED_AND_ROLLBACK_SCHEDULED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED_AND_ROLLBACK_IN_PROGRESS = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED_AND_ROLLBACK_COMPLETE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED_AND_ROLLBACK_ERROR = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 8,
	}
	
	/// <summary>
	/// Container for information about a configuration change happening on a domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChangeProgressDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ChangeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Options for a domain's <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html">off-peak window</a>, during which OpenSearch Service can perform mandatory configuration changes on the domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OffPeakWindowOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OffPeakWindow OffPeakWindow { get; set; }
	}
	
	/// <summary>
	/// <p>A custom 10-hour, low-traffic window during which OpenSearch Service can perform mandatory configuration changes on the domain. These actions can include scheduled service software updates and blue/green Auto-Tune enhancements. OpenSearch Service will schedule these actions during the window that you specify.</p> <p>If you don't specify a window start time, it defaults to 10:00 P.M. local time.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html">Defining off-peak maintenance windows for Amazon OpenSearch Service</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OffPeakWindow
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WindowStartTime WindowStartTime { get; set; }
	}
	
	/// <summary>
	/// The desired start time for an <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html">off-peak maintenance window</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WindowStartTime
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Hours { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Minutes { get; set; }
	}
	
	/// <summary>
	/// Options for configuring service software updates for a domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SoftwareUpdateOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoSoftwareUpdateEnabled { get; set; }
	}
	
	/// <summary>
	/// <p>Specifies whether the Amazon OpenSearch Service domain publishes the OpenSearch application and slow logs to Amazon CloudWatch. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createdomain-configure-slow-logs.html">Monitoring OpenSearch logs with Amazon CloudWatch Logs</a>.</p> <note> <p>After you enable log publishing, you still have to enable the collection of slow logs using the OpenSearch REST API.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LogPublishingOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CloudWatchLogsLogGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	/// <summary>
	/// Credentials for the master user for a domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MasterUserOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserPassword { get; set; }
	}
	
	/// <summary>
	/// The SAML authentication configuration for an Amazon OpenSearch Service domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SAMLOptionsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SAMLIdp Idp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterUserName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterBackendRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SubjectKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RolesKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SessionTimeoutMinutes { get; set; }
	}
	
	/// <summary>
	/// The Auto-Tune desired state. Valid values are ENABLED and DISABLED.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AutoTuneDesiredState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	/// <summary>
	/// <note> <p>This object is deprecated. Use the domain's <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html">off-peak window</a> to schedule Auto-Tune optimizations. For migration instructions, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html#off-peak-migrate">Migrating from Auto-Tune maintenance windows</a>.</p> </note> <p>The Auto-Tune maintenance schedule. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoTuneMaintenanceSchedule
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Duration Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CronExpressionForRecurrence { get; set; }
	}
	
	/// <summary>
	/// The duration of a maintenance schedule. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Duration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeUnit Unit { get; set; }
	}
	
	/// <summary>
	/// The unit of a maintenance schedule duration. Valid value is <code>HOUR</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TimeUnit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOURS = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidTypeException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceAlreadyExistsException
	{
	}
	
	/// <summary>
	/// The result of a <code>CreateOutboundConnection</code> request. Contains details about the newly created cross-cluster connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateOutboundConnectionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInformationContainer LocalDomainInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInformationContainer RemoteDomainInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConnectionAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutboundConnectionStatus ConnectionStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConnectionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConnectionMode ConnectionMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConnectionProperties ConnectionProperties { get; set; }
	}
	
	/// <summary>
	/// The status of an outbound cross-cluster connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OutboundConnectionStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OutboundConnectionStatusCode StatusCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OutboundConnectionStatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATION_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_ACCEPTANCE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROVISIONING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTING = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 9,
	}
	
	/// <summary>
	/// The connection properties of an outbound connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConnectionProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CrossClusterSearchConnectionProperties CrossClusterSearch { get; set; }
	}
	
	/// <summary>
	/// Cross cluster search specific connection properties.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CrossClusterSearchConnectionProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneDesiredState SkipUnavailable { get; set; }
	}
	
	/// <summary>
	/// Container for the response returned by the <code>CreatePackage</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreatePackageResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PackageDetails PackageDetails { get; set; }
	}
	
	/// <summary>
	/// Basic information about a package.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PackageDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PackageType PackageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PackageStatus PackageStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailablePackageVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ErrorDetails ErrorDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PackageStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COPYING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COPY_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATION_FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVAILABLE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateVpcEndpointResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpoint VpcEndpoint { get; set; }
	}
	
	/// <summary>
	/// The connection endpoint for connecting to an Amazon OpenSearch Service domain through a proxy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VpcEndpoint
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcEndpointId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcEndpointOwner { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCDerivedInfo VpcOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpointStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VpcEndpointStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 6,
	}
	
	/// <summary>
	/// The results of a <code>DeleteDomain</code> request. Contains the status of the pending deletion, or a "domain not found" error if the domain and all of its resources have been deleted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDomainResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainStatus DomainStatus { get; set; }
	}
	
	/// <summary>
	/// The results of a <code>DeleteInboundConnection</code> operation. Contains details about the deleted inbound connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteInboundConnectionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InboundConnection Connection { get; set; }
	}
	
	/// <summary>
	/// Details about the deleted outbound connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteOutboundConnectionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OutboundConnection Connection { get; set; }
	}
	
	/// <summary>
	/// Specifies details about an outbound cross-cluster connection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OutboundConnection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInformationContainer LocalDomainInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInformationContainer RemoteDomainInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConnectionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConnectionAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutboundConnectionStatus ConnectionStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConnectionMode ConnectionMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConnectionProperties ConnectionProperties { get; set; }
	}
	
	/// <summary>
	/// Container for the response parameters to the <code>DeletePackage</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeletePackageResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PackageDetails PackageDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteVpcEndpointResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpointSummary VpcEndpointSummary { get; set; }
	}
	
	/// <summary>
	/// Summary information for an Amazon OpenSearch Service-managed VPC endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VpcEndpointSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcEndpointId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcEndpointOwner { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpointStatus Status { get; set; }
	}
	
	/// <summary>
	/// Contains the status of the domain specified in the request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDomainResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainStatus DomainStatus { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>DescribeDomainAutoTunes</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDomainAutoTunesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTune[] AutoTunes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information about an Auto-Tune action. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoTune
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneType AutoTuneType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneDetails AutoTuneDetails { get; set; }
	}
	
	/// <summary>
	/// Specifies the Auto-Tune type. Valid value is SCHEDULED_ACTION.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AutoTuneType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCHEDULED_ACTION = 0,
	}
	
	/// <summary>
	/// Specifies details about a scheduled Auto-Tune action. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoTuneDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ScheduledAutoTuneDetails ScheduledAutoTuneDetails { get; set; }
	}
	
	/// <summary>
	/// Specifies details about a scheduled Auto-Tune action. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScheduledAutoTuneDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Date { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScheduledAutoTuneActionType ActionType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScheduledAutoTuneSeverityType Severity { get; set; }
	}
	
	/// <summary>
	/// The Auto-Tune action type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ScheduledAutoTuneActionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JVM_HEAP_SIZE_TUNING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JVM_YOUNG_GEN_TUNING = 1,
	}
	
	/// <summary>
	/// The Auto-Tune action severity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ScheduledAutoTuneSeverityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH = 2,
	}
	
	/// <summary>
	/// The result of a <code>DescribeDomainChangeProgress</code> request. Contains progress information for the requested domain change.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDomainChangeProgressResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeProgressStatusDetails ChangeProgressStatus { get; set; }
	}
	
	/// <summary>
	/// The progress details of a specific domain configuration change.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChangeProgressStatusDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ChangeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OverallChangeStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] PendingProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] CompletedProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalNumberOfStages { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeProgressStage[] ChangeProgressStages { get; set; }
	}
	
	/// <summary>
	/// The overall status value of the domain configuration change.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OverallChangeStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	/// <summary>
	/// Progress details for each stage of a domain update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChangeProgressStage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdated { get; set; }
	}
	
	/// <summary>
	/// Contains the configuration information of the requested domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDomainConfigResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainConfig DomainConfig { get; set; }
	}
	
	/// <summary>
	/// Container for the configuration of an OpenSearch Service domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public VersionStatus EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClusterConfigStatus ClusterConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EBSOptionsStatus EBSOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccessPoliciesStatus AccessPolicies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotOptionsStatus SnapshotOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCDerivedInfoStatus VPCOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CognitoOptionsStatus CognitoOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EncryptionAtRestOptionsStatus EncryptionAtRestOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NodeToNodeEncryptionOptionsStatus NodeToNodeEncryptionOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdvancedOptionsStatus AdvancedOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogPublishingOptionsStatus LogPublishingOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptionsStatus DomainEndpointOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdvancedSecurityOptionsStatus AdvancedSecurityOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneOptionsStatus AutoTuneOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeProgressDetails ChangeProgressDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OffPeakWindowOptionsStatus OffPeakWindowOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SoftwareUpdateOptionsStatus SoftwareUpdateOptions { get; set; }
	}
	
	/// <summary>
	/// The status of the the OpenSearch or Elasticsearch version options for the specified Amazon OpenSearch Service domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VersionStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// Provides the current status of an entity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OptionStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdateDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UpdateVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PendingDeletion { get; set; }
	}
	
	/// <summary>
	/// <p>The state of a requested domain configuration change. Can be one of the following:</p> <ul> <li> <p> <b>Processing</b> - The requested change is still in progress.</p> </li> <li> <p> <b>Active</b> - The requested change is processed and deployed to the domain.</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OptionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RequiresIndexDocuments = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Processing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 2,
	}
	
	/// <summary>
	/// The cluster configuration status for a domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClusterConfigStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ClusterConfig Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// The status of the EBS options for the specified OpenSearch Service domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EBSOptionsStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EBSOptions Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// The configured access rules for the domain's search endpoint, and the current status of those rules.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessPoliciesStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// Container for information about a daily automated snapshot for an OpenSearch Service domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotOptionsStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SnapshotOptions Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// Status of the VPC options for a specified domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VPCDerivedInfoStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VPCDerivedInfo Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// The status of the Cognito options for the specified domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CognitoOptionsStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CognitoOptions Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// Status of the encryption at rest options for the specified OpenSearch Service domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EncryptionAtRestOptionsStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EncryptionAtRestOptions Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// Status of the node-to-node encryption options for the specified domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NodeToNodeEncryptionOptionsStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NodeToNodeEncryptionOptions Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// <p>Status of the advanced options for the specified domain. The following options are available: </p> <ul> <li> <p> <code>"rest.action.multi.allow_explicit_index": "true" | "false"</code> - Note the use of a string rather than a boolean. Specifies whether explicit references to indexes are allowed inside the body of HTTP requests. If you want to configure access policies for domain sub-resources, such as specific indexes and domain APIs, you must disable this property. Default is true.</p> </li> <li> <p> <code>"indices.fielddata.cache.size": "80" </code> - Note the use of a string rather than a boolean. Specifies the percentage of heap space allocated to field data. Default is unbounded.</p> </li> <li> <p> <code>"indices.query.bool.max_clause_count": "1024"</code> - Note the use of a string rather than a boolean. Specifies the maximum number of clauses allowed in a Lucene boolean query. Default is 1,024. Queries with more than the permitted number of clauses result in a <code>TooManyClauses</code> error.</p> </li> <li> <p> <code>"override_main_response_version": "true" | "false"</code> - Note the use of a string rather than a boolean. Specifies whether the domain reports its version as 7.10 to allow Elasticsearch OSS clients and plugins to continue working with it. Default is false when creating a domain and true when upgrading a domain.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options">Advanced cluster parameters</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AdvancedOptionsStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AdvancedOptions Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// The configured log publishing options for the domain and their current status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LogPublishingOptionsStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LogPublishingOptions Options { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// The configured endpoint options for a domain and their current status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainEndpointOptionsStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptions Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// The status of fine-grained access control settings for a domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AdvancedSecurityOptionsStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AdvancedSecurityOptions Options { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// The Auto-Tune status for the domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoTuneOptionsStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneOptions Options { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneStatus Status { get; set; }
	}
	
	/// <summary>
	/// Auto-Tune settings when updating a domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoTuneOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneDesiredState DesiredState { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RollbackOnDisable RollbackOnDisable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneMaintenanceSchedule[] MaintenanceSchedules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseOffPeakWindow { get; set; }
	}
	
	/// <summary>
	/// The rollback state while disabling Auto-Tune for the domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RollbackOnDisable
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_ROLLBACK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEFAULT_ROLLBACK = 1,
	}
	
	/// <summary>
	/// The current status of Auto-Tune for the domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoTuneStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdateDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> UpdateVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PendingDeletion { get; set; }
	}
	
	/// <summary>
	/// The status of <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html">off-peak window</a> options for a domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OffPeakWindowOptionsStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OffPeakWindowOptions Options { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// The status of the service software options for a domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SoftwareUpdateOptionsStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SoftwareUpdateOptions Options { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OptionStatus Status { get; set; }
	}
	
	/// <summary>
	/// The result of a <code>DescribeDomainHealth</code> request. Contains health information for the requested domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDomainHealthResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainState DomainState { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZoneCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ActiveAvailabilityZoneCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StandByAvailabilityZoneCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataNodeCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DedicatedMaster { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterEligibleNodeCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WarmNodeCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MasterNodeStatus MasterNode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainHealth ClusterHealth { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalShards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalUnAssignedShards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentInfo[] EnvironmentInformation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DomainState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Processing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotAvailable = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MasterNodeStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Available = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UnAvailable = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DomainHealth
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Red = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Yellow = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Green = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotAvailable = 3,
	}
	
	/// <summary>
	/// Information about the active domain environment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EnvironmentInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AvailabilityZoneInfo[] AvailabilityZoneInformation { get; set; }
	}
	
	/// <summary>
	/// Information about an Availability Zone on a domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AvailabilityZoneInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZoneName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ZoneStatus ZoneStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConfiguredDataNodeCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailableDataNodeCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalShards { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TotalUnAssignedShards { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ZoneStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StandBy = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotAvailable = 2,
	}
	
	/// <summary>
	/// The result of a <code>DescribeDomainNodes</code> request. Contains information about the nodes on the requested domain. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDomainNodesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainNodesStatus[] DomainNodesStatusList { get; set; }
	}
	
	/// <summary>
	/// Container for information about nodes on the domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainNodesStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NodeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NodeType NodeType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OpenSearchPartitionInstanceType InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ZoneStatus NodeStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VolumeType StorageVolumeType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageSize { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NodeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Data = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ultrawarm = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Master = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DependencyFailureException
	{
	}
	
	/// <summary>
	/// Contains the status of the specified domains or all domains owned by the account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDomainsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainStatus[] DomainStatusList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDryRunProgressResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DryRunProgressStatus DryRunProgressStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainStatus DryRunConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DryRunResults DryRunResults { get; set; }
	}
	
	/// <summary>
	/// Information about the progress of a pre-upgrade dry run analysis.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DryRunProgressStatus
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DryRunId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DryRunStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string UpdateDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ValidationFailure[] ValidationFailures { get; set; }
	}
	
	/// <summary>
	/// A validation failure that occurred as the result of a pre-update validation check (verbose dry run) on a domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationFailure
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Results of a dry run performed in an update domain request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DryRunResults
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Contains a list of connections matching the filter criteria.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeInboundConnectionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InboundConnection[] Connections { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A filter used to limit results when describing inbound or outbound cross-cluster connections. You can specify multiple values per filter. A cross-cluster connection must match at least one of the specified values for it to be returned from an operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Filter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidPaginationTokenException
	{
	}
	
	/// <summary>
	/// Container for the parameters received from the <code>DescribeInstanceTypeLimits</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeInstanceTypeLimitsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LimitsByRole LimitsByRole { get; set; }
	}
	
	/// <summary>
	/// <p> The role of a given instance and all applicable limits. The role performed by a given OpenSearch instance can be one of the following: </p> <ul> <li> <p> <b>data</b> - A data node.</p> </li> <li> <p> <b>master</b> - A dedicated master node.</p> </li> <li> <p> <b>ultra_warm</b> - An UltraWarm node.</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LimitsByRole
	{
	}
	
	/// <summary>
	/// Contains a list of connections matching the filter criteria.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeOutboundConnectionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OutboundConnection[] Connections { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Container for the response returned by the <code>DescribePackages</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribePackagesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PackageDetails[] PackageDetailsList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A filter to apply to the <code>DescribePackage</code> response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribePackagesFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DescribePackagesFilterName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DescribePackagesFilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PackageID = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PackageName = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PackageStatus = 2,
	}
	
	/// <summary>
	/// Container for results of a <code>DescribeReservedInstanceOfferings</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeReservedInstanceOfferingsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservedInstanceOffering[] ReservedInstanceOfferings { get; set; }
	}
	
	/// <summary>
	/// Details of an OpenSearch Reserved Instance offering.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReservedInstanceOffering
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedInstanceOfferingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OpenSearchPartitionInstanceType InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FixedPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> UsagePrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservedInstancePaymentOption PaymentOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecurringCharge[] RecurringCharges { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ReservedInstancePaymentOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_UPFRONT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARTIAL_UPFRONT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_UPFRONT = 2,
	}
	
	/// <summary>
	/// Contains the specific price and frequency of a recurring charges for an OpenSearch Reserved Instance, or for a Reserved Instance offering.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecurringCharge
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RecurringChargeAmount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecurringChargeFrequency { get; set; }
	}
	
	/// <summary>
	/// Container for results from <code>DescribeReservedInstances</code> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeReservedInstancesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservedInstance[] ReservedInstances { get; set; }
	}
	
	/// <summary>
	/// Details of an OpenSearch Reserved Instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReservedInstance
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservationName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedInstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BillingSubscriptionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedInstanceOfferingId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OpenSearchPartitionInstanceType InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> FixedPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> UsagePrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReservedInstancePaymentOption PaymentOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecurringCharge[] RecurringCharges { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeVpcEndpointsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpoint[] VpcEndpoints { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpointError[] VpcEndpointErrors { get; set; }
	}
	
	/// <summary>
	/// Error information when attempting to describe an Amazon OpenSearch Service-managed VPC endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VpcEndpointError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcEndpointId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpointErrorCode ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VpcEndpointErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENDPOINT_NOT_FOUND = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVER_ERROR = 1,
	}
	
	/// <summary>
	/// Container for the response returned by an <code>DissociatePackage</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DissociatePackageResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainPackageDetails DomainPackageDetails { get; set; }
	}
	
	/// <summary>
	/// Container for the response returned by the <code>GetCompatibleVersions</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCompatibleVersionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CompatibleVersionsMap[] CompatibleVersions { get; set; }
	}
	
	/// <summary>
	/// A map of OpenSearch or Elasticsearch versions and the versions you can upgrade them to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CompatibleVersionsMap
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TargetVersions { get; set; }
	}
	
	/// <summary>
	/// Container for response returned by <code>GetPackageVersionHistory</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetPackageVersionHistoryResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageID { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PackageVersionHistory[] PackageVersionHistoryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Details about a package version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PackageVersionHistory
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CommitMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAt { get; set; }
	}
	
	/// <summary>
	/// Container for the response returned by the <code>GetUpgradeHistory</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetUpgradeHistoryResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeHistory[] UpgradeHistories { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// History of the last 10 upgrades and upgrade eligibility checks for an Amazon OpenSearch Service domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpgradeHistory
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string UpgradeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeStatus UpgradeStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeStepItem[] StepsList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UpgradeStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED_WITH_ISSUES = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	/// <summary>
	/// Represents a single step of an upgrade or upgrade eligibility check workflow.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpgradeStepItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeStep UpgradeStep { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeStatus UpgradeStepStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Issues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ProgressPercent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UpgradeStep
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRE_UPGRADE_CHECK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SNAPSHOT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPGRADE = 2,
	}
	
	/// <summary>
	/// Container for the response returned by the <code>GetUpgradeStatus</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetUpgradeStatusResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeStep UpgradeStep { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpgradeStatus StepStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UpgradeName { get; set; }
	}
	
	/// <summary>
	/// The results of a <code>ListDomainNames</code> operation. Contains the names of all domains owned by this account and their respective engine types.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDomainNamesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainInfo[] DomainNames { get; set; }
	}
	
	/// <summary>
	/// Information about an OpenSearch Service domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EngineType EngineType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EngineType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OpenSearch = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Elasticsearch = 1,
	}
	
	/// <summary>
	/// Container for the response parameters to the <code>ListDomainsForPackage</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDomainsForPackageResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainPackageDetails[] DomainPackageDetailsList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInstanceTypeDetailsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceTypeDetails[] InstanceTypeDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Lists all instance types and available features for a given OpenSearch or Elasticsearch version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceTypeDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OpenSearchPartitionInstanceType InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EncryptionEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CognitoEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AppLogsEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AdvancedSecurityEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> WarmEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InstanceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AvailabilityZones { get; set; }
	}
	
	/// <summary>
	/// Container for the response parameters to the <code>ListPackagesForDomain</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListPackagesForDomainResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DomainPackageDetails[] DomainPackageDetailsList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListScheduledActionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ScheduledAction[] ScheduledActions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information about a scheduled configuration change for an OpenSearch Service domain. This actions can be a <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html">service software update</a> or a <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html#auto-tune-types">blue/green Auto-Tune enhancement</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScheduledAction
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionType Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionSeverity Severity { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ScheduledTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScheduledBy ScheduledBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActionStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Mandatory { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Cancellable { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ActionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICE_SOFTWARE_UPDATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JVM_HEAP_SIZE_TUNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JVM_YOUNG_GEN_TUNING = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ActionSeverity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOW = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ScheduledBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOMER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYSTEM = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ActionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_UPDATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_ELIGIBLE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ELIGIBLE = 5,
	}
	
	/// <summary>
	/// The results of a <code>ListTags</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] TagList { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters for response received from the <code>ListVersions</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListVersionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Versions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListVpcEndpointAccessResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AuthorizedPrincipal[] AuthorizedPrincipalList { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListVpcEndpointsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpointSummary[] VpcEndpointSummaryList { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListVpcEndpointsForDomainResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpointSummary[] VpcEndpointSummaryList { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Represents the output of a <code>PurchaseReservedInstanceOffering</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PurchaseReservedInstanceOfferingResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservedInstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReservationName { get; set; }
	}
	
	/// <summary>
	/// Represents the output of a <code>RejectInboundConnection</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RejectInboundConnectionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InboundConnection Connection { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RevokeVpcEndpointAccessResponse
	{
	}
	
	/// <summary>
	/// Represents the output of a <code>StartServiceSoftwareUpdate</code> operation. Contains the status of the update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartServiceSoftwareUpdateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceSoftwareOptions ServiceSoftwareOptions { get; set; }
	}
	
	/// <summary>
	/// The results of an <code>UpdateDomain</code> request. Contains the status of the domain being updated.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDomainConfigResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainConfig DomainConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DryRunResults DryRunResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DryRunProgressStatus DryRunProgressStatus { get; set; }
	}
	
	/// <summary>
	/// Container for the response returned by the <code>UpdatePackage</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdatePackageResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PackageDetails PackageDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateScheduledActionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ScheduledAction ScheduledAction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SlotNotAvailableException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateVpcEndpointResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VpcEndpoint VpcEndpoint { get; set; }
	}
	
	/// <summary>
	/// Container for the response returned by <code>UpgradeDomain</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpgradeDomainResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string UpgradeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PerformCheckOnly { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdvancedOptions AdvancedOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChangeProgressDetails ChangeProgressDetails { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code>AcceptInboundConnection</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AcceptInboundConnectionRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code>AddTags</code> operation. Specifies the tags to attach to the domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddTagsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ARN { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tag[] TagList { get; set; }
	}
	
	/// <summary>
	///  List of limits that are specific to a given instance type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AdditionalLimit
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LimitName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] LimitValues { get; set; }
	}
	
	/// <summary>
	/// Options for enabling and configuring fine-grained access control. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html">Fine-grained access control in Amazon OpenSearch Service</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AdvancedSecurityOptionsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InternalUserDatabaseEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MasterUserOptions MasterUserOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SAMLOptionsInput SAMLOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AnonymousAuthEnabled { get; set; }
	}
	
	/// <summary>
	/// Container for the request parameters to the <code>AssociatePackage</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociatePackageRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuthorizeVpcEndpointAccessRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Account { get; set; }
	}
	
	/// <summary>
	/// Options for configuring Auto-Tune. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoTuneOptionsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneDesiredState DesiredState { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneMaintenanceSchedule[] MaintenanceSchedules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseOffPeakWindow { get; set; }
	}
	
	/// <summary>
	/// Container for the request parameters to cancel a service software update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelServiceSoftwareUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
	}
	
	/// <summary>
	/// Options to specify the subnets and security groups for an Amazon OpenSearch Service VPC endpoint. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html">Launching your Amazon OpenSearch Service domains using a VPC</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VPCOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDomainRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClusterConfig ClusterConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EBSOptions EBSOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessPolicies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotOptions SnapshotOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCOptions VPCOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CognitoOptions CognitoOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EncryptionAtRestOptions EncryptionAtRestOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NodeToNodeEncryptionOptions NodeToNodeEncryptionOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdvancedOptions AdvancedOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogPublishingOptions LogPublishingOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptions DomainEndpointOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdvancedSecurityOptionsInput AdvancedSecurityOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] TagList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneOptionsInput AutoTuneOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OffPeakWindowOptions OffPeakWindowOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SoftwareUpdateOptions SoftwareUpdateOptions { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code>CreateOutboundConnection</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateOutboundConnectionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainInformationContainer LocalDomainInfo { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainInformationContainer RemoteDomainInfo { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ConnectionAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConnectionMode ConnectionMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConnectionProperties ConnectionProperties { get; set; }
	}
	
	/// <summary>
	/// The Amazon S3 location to import the package from.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PackageSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string S3BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Key { get; set; }
	}
	
	/// <summary>
	/// Container for request parameters to the <code>CreatePackage</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreatePackageRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PackageName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PackageType PackageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PackageSource PackageSource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateVpcEndpointRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VPCOptions VpcOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	/// <summary>
	/// <p>Status of SkipUnavailable param for outbound connection.</p> <ul> <li> <p> <b>ENABLED</b> - The SkipUnavailable param is enabled for the connection.</p> </li> <li> <p> <b>DISABLED</b> - The SkipUnavailable param is disabled for the connection.</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SkipUnavailableStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	/// <summary>
	/// Container for the parameters to the <code>DeleteDomain</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDomainRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code>DeleteInboundConnection</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteInboundConnectionRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code>DeleteOutboundConnection</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteOutboundConnectionRequest
	{
	}
	
	/// <summary>
	/// Deletes a package from OpenSearch Service. The package can't be associated with any OpenSearch Service domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeletePackageRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteVpcEndpointRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code>DescribeDomainAutoTunes</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDomainAutoTunesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code>DescribeDomainChangeProgress</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDomainChangeProgressRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code>DescribeDomainConfig</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDomainConfigRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code>DescribeDomainHealth</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDomainHealthRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code>DescribeDomainNodes</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDomainNodesRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code>DescribeDomain</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDomainRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code>DescribeDomains</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDomainsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] DomainNames { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDryRunProgressRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code>DescribeInboundConnections</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeInboundConnectionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code>DescribeInstanceTypeLimits</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeInstanceTypeLimitsRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code>DescribeOutboundConnections</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeOutboundConnectionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Container for the request parameters to the <code>DescribePackage</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribePackagesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DescribePackagesFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Container for the request parameters to a <code>DescribeReservedInstanceOfferings</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeReservedInstanceOfferingsRequest
	{
	}
	
	/// <summary>
	/// Container for the request parameters to the <code>DescribeReservedInstances</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeReservedInstancesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeVpcEndpointsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcEndpointIds { get; set; }
	}
	
	/// <summary>
	/// Container for the request parameters to the <code>DissociatePackage</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DissociatePackageRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NodeStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StandBy = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotAvailable = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DryRunMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Basic = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Verbose = 1,
	}
	
	/// <summary>
	/// Container for the request parameters to <code>GetCompatibleVersions</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCompatibleVersionsRequest
	{
	}
	
	/// <summary>
	/// Container for the request parameters to the <code>GetPackageVersionHistory</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetPackageVersionHistoryRequest
	{
	}
	
	/// <summary>
	/// Container for the request parameters to the <code>GetUpgradeHistory</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetUpgradeHistoryRequest
	{
	}
	
	/// <summary>
	/// Container for the request parameters to the <code>GetUpgradeStatus</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetUpgradeStatusRequest
	{
	}
	
	/// <summary>
	/// Limits on the number of instances that can be created in OpenSearch Service for a given instance type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceCountLimits
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinimumInstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumInstanceCount { get; set; }
	}
	
	/// <summary>
	/// Instance-related attributes that are available for a given instance type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceLimits
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceCountLimits InstanceCountLimits { get; set; }
	}
	
	/// <summary>
	/// A list of storage types for an Amazon OpenSearch Service domain that are available for a given intance type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StorageType
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageTypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StorageSubTypeName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StorageTypeLimit[] StorageTypeLimits { get; set; }
	}
	
	/// <summary>
	/// Limits that are applicable for the given Amazon OpenSearch Service storage type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StorageTypeLimit
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LimitName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] LimitValues { get; set; }
	}
	
	/// <summary>
	/// Limits for a given instance type and for each of its roles.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Limits
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StorageType[] StorageTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceLimits InstanceLimits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdditionalLimit[] AdditionalLimits { get; set; }
	}
	
	/// <summary>
	/// Container for the parameters to the <code>ListDomainNames</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDomainNamesRequest
	{
	}
	
	/// <summary>
	/// Container for the request parameters to the <code>ListDomainsForPackage</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDomainsForPackageRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInstanceTypeDetailsRequest
	{
	}
	
	/// <summary>
	/// Container for the request parameters to the <code>ListPackagesForDomain</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListPackagesForDomainRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListScheduledActionsRequest
	{
	}
	
	/// <summary>
	/// Container for the parameters to the <code>ListTags</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsRequest
	{
	}
	
	/// <summary>
	/// Container for the request parameters to the <code>ListVersions</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListVersionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListVpcEndpointAccessRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListVpcEndpointsForDomainRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListVpcEndpointsRequest
	{
	}
	
	/// <summary>
	/// <p>The type of log file. Can be one of the following:</p> <ul> <li> <p> <b>INDEX_SLOW_LOGS</b> - Index slow logs contain insert requests that took more time than the configured index query log threshold to execute.</p> </li> <li> <p> <b>SEARCH_SLOW_LOGS</b> - Search slow logs contain search queries that took more time than the configured search query log threshold to execute.</p> </li> <li> <p> <b>ES_APPLICATION_LOGS</b> - OpenSearch application logs contain information about errors and warnings raised during the operation of the service and can be useful for troubleshooting.</p> </li> <li> <p> <b>AUDIT_LOGS</b> - Audit logs contain records of user requests for access to the domain.</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LogType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDEX_SLOW_LOGS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEARCH_SLOW_LOGS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ES_APPLICATION_LOGS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUDIT_LOGS = 3,
	}
	
	/// <summary>
	/// Container for request parameters to the <code>PurchaseReservedInstanceOffering</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PurchaseReservedInstanceOfferingRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReservedInstanceOfferingId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReservationName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
	}
	
	/// <summary>
	/// Container for the request parameters to the <code>RejectInboundConnection</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RejectInboundConnectionRequest
	{
	}
	
	/// <summary>
	/// Container for the request parameters to the <code>RemoveTags</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveTagsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ARN { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] TagKeys { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RevokeVpcEndpointAccessRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Account { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ScheduleAt
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TIMESTAMP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OFF_PEAK_WINDOW = 2,
	}
	
	/// <summary>
	/// Container for the request parameters to the <code>StartServiceSoftwareUpdate</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartServiceSoftwareUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScheduleAt ScheduleAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DesiredStartTime { get; set; }
	}
	
	/// <summary>
	/// Container for the request parameters to the <code>UpdateDomain</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDomainConfigRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ClusterConfig ClusterConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EBSOptions EBSOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotOptions SnapshotOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VPCOptions VPCOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CognitoOptions CognitoOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdvancedOptions AdvancedOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessPolicies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogPublishingOptions LogPublishingOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EncryptionAtRestOptions EncryptionAtRestOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainEndpointOptions DomainEndpointOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NodeToNodeEncryptionOptions NodeToNodeEncryptionOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdvancedSecurityOptionsInput AdvancedSecurityOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneOptions AutoTuneOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DryRun { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DryRunMode DryRunMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OffPeakWindowOptions OffPeakWindowOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SoftwareUpdateOptions SoftwareUpdateOptions { get; set; }
	}
	
	/// <summary>
	/// Container for request parameters to the <code>UpdatePackage</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdatePackageRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PackageID { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PackageSource PackageSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PackageDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CommitMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateScheduledActionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActionID { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionType ActionType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScheduleAt ScheduleAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DesiredStartTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateVpcEndpointRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VpcEndpointId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VPCOptions VpcOptions { get; set; }
	}
	
	/// <summary>
	/// Container for the request parameters to the <code>UpgradeDomain</code> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpgradeDomainRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PerformCheckOnly { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AdvancedOptions AdvancedOptions { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Allows the destination Amazon OpenSearch Service domain owner to accept an inbound cross-cluster search connection request. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html">Cross-cluster search for Amazon OpenSearch Service</a>.
		/// AcceptInboundConnection 2021-01-01/opensearch/cc/inboundConnection/{ConnectionId}/accept
		/// </summary>
		/// <param name="ConnectionId">The ID of the inbound connection to accept.
		/// Min length: 10
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<AcceptInboundConnectionResponse> AcceptInboundConnectionAsync(string ConnectionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/cc/inboundConnection/"+ (ConnectionId==null? "" : System.Uri.EscapeDataString(ConnectionId))+"/accept";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AcceptInboundConnectionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Attaches tags to an existing Amazon OpenSearch Service domain. Tags are a set of case-sensitive key-value pairs. A domain can have up to 10 tags. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-awsresourcetagging.html">Tagging Amazon OpenSearch Service domains</a>.
		/// AddTags 2021-01-01/tags
		/// </summary>
		/// <returns>Success</returns>
		public async Task AddTagsAsync(AddTagsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/tags";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Associates a package with an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.
		/// AssociatePackage 2021-01-01/packages/associate/{PackageID}/{DomainName}
		/// </summary>
		/// <param name="PackageID">Internal ID of the package to associate with a domain. Use <code>DescribePackages</code> to find this value. </param>
		/// <param name="DomainName">Name of the domain to associate the package with.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task<AssociatePackageResponse> AssociatePackageAsync(string PackageID, string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/packages/associate/"+ (PackageID==null? "" : System.Uri.EscapeDataString(PackageID))+"/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AssociatePackageResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Provides access to an Amazon OpenSearch Service domain through the use of an interface VPC endpoint.
		/// AuthorizeVpcEndpointAccess 2021-01-01/opensearch/domain/{DomainName}/authorizeVpcEndpointAccess
		/// </summary>
		/// <param name="DomainName">The name of the OpenSearch Service domain to provide access to.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task<AuthorizeVpcEndpointAccessResponse> AuthorizeVpcEndpointAccessAsync(string DomainName, AuthorizeVpcEndpointAccessPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/authorizeVpcEndpointAccess";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AuthorizeVpcEndpointAccessResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Cancels a scheduled service software update for an Amazon OpenSearch Service domain. You can only perform this operation before the <code>AutomatedUpdateDate</code> and when the domain's <code>UpdateStatus</code> is <code>PENDING_UPDATE</code>. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html">Service software updates in Amazon OpenSearch Service</a>.
		/// CancelServiceSoftwareUpdate 2021-01-01/opensearch/serviceSoftwareUpdate/cancel
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CancelServiceSoftwareUpdateResponse> CancelServiceSoftwareUpdateAsync(CancelServiceSoftwareUpdatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/serviceSoftwareUpdate/cancel";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CancelServiceSoftwareUpdateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html">Creating and managing Amazon OpenSearch Service domains</a>.
		/// CreateDomain 2021-01-01/opensearch/domain
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateDomainResponse> CreateDomainAsync(CreateDomainPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/domain";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateDomainResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new cross-cluster search connection from a source Amazon OpenSearch Service domain to a destination domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html">Cross-cluster search for Amazon OpenSearch Service</a>.
		/// CreateOutboundConnection 2021-01-01/opensearch/cc/outboundConnection
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateOutboundConnectionResponse> CreateOutboundConnectionAsync(CreateOutboundConnectionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/cc/outboundConnection";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateOutboundConnectionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a package for use with Amazon OpenSearch Service domains. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.
		/// CreatePackage 2021-01-01/packages
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreatePackageResponse> CreatePackageAsync(CreatePackagePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/packages";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreatePackageResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates an Amazon OpenSearch Service-managed VPC endpoint.
		/// CreateVpcEndpoint 2021-01-01/opensearch/vpcEndpoints
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateVpcEndpointResponse> CreateVpcEndpointAsync(CreateVpcEndpointPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/vpcEndpoints";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<CreateVpcEndpointResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves all Amazon OpenSearch Service-managed VPC endpoints in the current Amazon Web Services account and Region.
		/// ListVpcEndpoints 2021-01-01/opensearch/vpcEndpoints
		/// </summary>
		/// <param name="nextToken">If your initial <code>ListVpcEndpoints</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>ListVpcEndpoints</code> operations, which returns results in the next page.</param>
		/// <returns>Success</returns>
		public async Task<ListVpcEndpointsResponse> ListVpcEndpointsAsync(string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/vpcEndpoints?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListVpcEndpointsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes an Amazon OpenSearch Service domain and all of its data. You can't recover a domain after you delete it.
		/// DeleteDomain 2021-01-01/opensearch/domain/{DomainName}
		/// </summary>
		/// <param name="DomainName">The name of the domain you want to permanently delete.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteDomainResponse> DeleteDomainAsync(string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteDomainResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes the domain configuration for the specified Amazon OpenSearch Service domain, including the domain ID, domain service endpoint, and domain ARN.
		/// DescribeDomain 2021-01-01/opensearch/domain/{DomainName}
		/// </summary>
		/// <param name="DomainName">The name of the domain that you want information about.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeDomainResponse> DescribeDomainAsync(string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeDomainResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Allows the destination Amazon OpenSearch Service domain owner to delete an existing inbound cross-cluster search connection. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html">Cross-cluster search for Amazon OpenSearch Service</a>.
		/// DeleteInboundConnection 2021-01-01/opensearch/cc/inboundConnection/{ConnectionId}
		/// </summary>
		/// <param name="ConnectionId">The ID of the inbound connection to permanently delete.
		/// Min length: 10
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteInboundConnectionResponse> DeleteInboundConnectionAsync(string ConnectionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/cc/inboundConnection/"+ (ConnectionId==null? "" : System.Uri.EscapeDataString(ConnectionId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteInboundConnectionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Allows the source Amazon OpenSearch Service domain owner to delete an existing outbound cross-cluster search connection. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html">Cross-cluster search for Amazon OpenSearch Service</a>.
		/// DeleteOutboundConnection 2021-01-01/opensearch/cc/outboundConnection/{ConnectionId}
		/// </summary>
		/// <param name="ConnectionId">The ID of the outbound connection you want to permanently delete.
		/// Min length: 10
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteOutboundConnectionResponse> DeleteOutboundConnectionAsync(string ConnectionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/cc/outboundConnection/"+ (ConnectionId==null? "" : System.Uri.EscapeDataString(ConnectionId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteOutboundConnectionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes an Amazon OpenSearch Service package. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.
		/// DeletePackage 2021-01-01/packages/{PackageID}
		/// </summary>
		/// <param name="PackageID">The internal ID of the package you want to delete. Use <code>DescribePackages</code> to find this value.</param>
		/// <returns>Success</returns>
		public async Task<DeletePackageResponse> DeletePackageAsync(string PackageID, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/packages/"+ (PackageID==null? "" : System.Uri.EscapeDataString(PackageID));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeletePackageResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes an Amazon OpenSearch Service-managed interface VPC endpoint.
		/// DeleteVpcEndpoint 2021-01-01/opensearch/vpcEndpoints/{VpcEndpointId}
		/// </summary>
		/// <param name="VpcEndpointId">The unique identifier of the endpoint.
		/// Min length: 5
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteVpcEndpointResponse> DeleteVpcEndpointAsync(string VpcEndpointId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/vpcEndpoints/"+ (VpcEndpointId==null? "" : System.Uri.EscapeDataString(VpcEndpointId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteVpcEndpointResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the list of optimizations that Auto-Tune has made to an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>.
		/// DescribeDomainAutoTunes 2021-01-01/opensearch/domain/{DomainName}/autoTunes
		/// </summary>
		/// <param name="DomainName">Name of the domain that you want Auto-Tune details about.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeDomainAutoTunesResponse> DescribeDomainAutoTunesAsync(string DomainName, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/autoTunes&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeDomainAutoTunesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns information about the current blue/green deployment happening on an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-configuration-changes.html">Making configuration changes in Amazon OpenSearch Service</a>.
		/// DescribeDomainChangeProgress 2021-01-01/opensearch/domain/{DomainName}/progress
		/// </summary>
		/// <param name="DomainName">The name of the domain to get progress information for.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="changeid">The specific change ID for which you want to get progress information. If omitted, the request returns information about the most recent configuration change.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeDomainChangeProgressResponse> DescribeDomainChangeProgressAsync(string DomainName, string changeid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/progress&changeid=" + (changeid==null? "" : System.Uri.EscapeDataString(changeid));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeDomainChangeProgressResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the configuration of an Amazon OpenSearch Service domain.
		/// DescribeDomainConfig 2021-01-01/opensearch/domain/{DomainName}/config
		/// </summary>
		/// <param name="DomainName">Name of the OpenSearch Service domain configuration that you want to describe.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeDomainConfigResponse> DescribeDomainConfigAsync(string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/config";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeDomainConfigResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Modifies the cluster configuration of the specified Amazon OpenSearch Service domain.sl
		/// UpdateDomainConfig 2021-01-01/opensearch/domain/{DomainName}/config
		/// </summary>
		/// <param name="DomainName">The name of the domain that you're updating.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateDomainConfigResponse> UpdateDomainConfigAsync(string DomainName, UpdateDomainConfigPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/config";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateDomainConfigResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns information about domain and node health, the standby Availability Zone, number of nodes per Availability Zone, and shard count per node.
		/// DescribeDomainHealth 2021-01-01/opensearch/domain/{DomainName}/health
		/// </summary>
		/// <param name="DomainName">The name of the domain.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeDomainHealthResponse> DescribeDomainHealthAsync(string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/health";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeDomainHealthResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns information about domain and nodes, including data nodes, master nodes, ultrawarm nodes, Availability Zone(s), standby nodes, node configurations, and node states.
		/// DescribeDomainNodes 2021-01-01/opensearch/domain/{DomainName}/nodes
		/// </summary>
		/// <param name="DomainName">The name of the domain.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeDomainNodesResponse> DescribeDomainNodesAsync(string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/nodes";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeDomainNodesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns domain configuration information about the specified Amazon OpenSearch Service domains.
		/// DescribeDomains 2021-01-01/opensearch/domain-info
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeDomainsResponse> DescribeDomainsAsync(DescribeDomainsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/domain-info";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeDomainsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes the progress of a pre-update dry run analysis on an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-configuration-changes#dryrun">Determining whether a change will cause a blue/green deployment</a>.
		/// DescribeDryRunProgress 2021-01-01/opensearch/domain/{DomainName}/dryRun
		/// </summary>
		/// <param name="DomainName">The name of the domain.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="dryRunId">The unique identifier of the dry run.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="loadDryRunConfig">Whether to include the configuration of the dry run in the response. The configuration specifies the updates that you're planning to make on the domain.</param>
		/// <returns>Success</returns>
		public async Task<DescribeDryRunProgressResponse> DescribeDryRunProgressAsync(string DomainName, string dryRunId, bool loadDryRunConfig, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/dryRun&dryRunId=" + (dryRunId==null? "" : System.Uri.EscapeDataString(dryRunId))+"&loadDryRunConfig="+loadDryRunConfig;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeDryRunProgressResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all the inbound cross-cluster search connections for a destination (remote) Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html">Cross-cluster search for Amazon OpenSearch Service</a>.
		/// DescribeInboundConnections 2021-01-01/opensearch/cc/inboundConnection/search
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeInboundConnectionsResponse> DescribeInboundConnectionsAsync(string MaxResults, string NextToken, DescribeInboundConnectionsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/cc/inboundConnection/search?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeInboundConnectionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes the instance count, storage, and master node limits for a given OpenSearch or Elasticsearch version and instance type.
		/// DescribeInstanceTypeLimits 2021-01-01/opensearch/instanceTypeLimits/{EngineVersion}/{InstanceType}
		/// </summary>
		/// <param name="domainName">The name of the domain. Only specify if you need the limits for an existing domain.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="InstanceType">The OpenSearch Service instance type for which you need limit information.</param>
		/// <param name="EngineVersion">Version of OpenSearch or Elasticsearch, in the format Elasticsearch_X.Y or OpenSearch_X.Y. Defaults to the latest version of OpenSearch.
		/// Min length: 14
		/// Max length: 18
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeInstanceTypeLimitsResponse> DescribeInstanceTypeLimitsAsync(string domainName, DescribeInstanceTypeLimitsInstanceType InstanceType, string EngineVersion, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/instanceTypeLimits/"+ (EngineVersion==null? "" : System.Uri.EscapeDataString(EngineVersion))+"/"+InstanceType+"?domainName=" + (domainName==null? "" : System.Uri.EscapeDataString(domainName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeInstanceTypeLimitsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all the outbound cross-cluster connections for a local (source) Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html">Cross-cluster search for Amazon OpenSearch Service</a>.
		/// DescribeOutboundConnections 2021-01-01/opensearch/cc/outboundConnection/search
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeOutboundConnectionsResponse> DescribeOutboundConnectionsAsync(string MaxResults, string NextToken, DescribeOutboundConnectionsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/cc/outboundConnection/search?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeOutboundConnectionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes all packages available to OpenSearch Service. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.
		/// DescribePackages 2021-01-01/packages/describe
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribePackagesResponse> DescribePackagesAsync(string MaxResults, string NextToken, DescribePackagesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/packages/describe?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribePackagesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes the available Amazon OpenSearch Service Reserved Instance offerings for a given Region. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ri.html">Reserved Instances in Amazon OpenSearch Service</a>.
		/// DescribeReservedInstanceOfferings 2021-01-01/opensearch/reservedInstanceOfferings
		/// </summary>
		/// <param name="offeringId">The Reserved Instance identifier filter value. Use this parameter to show only the available instance types that match the specified reservation identifier.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="maxResults">An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
		/// Maximum: 100
		// </param>
		/// <param name="nextToken">If your initial <code>DescribeReservedInstanceOfferings</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>DescribeReservedInstanceOfferings</code> operations, which returns results in the next page.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeReservedInstanceOfferingsResponse> DescribeReservedInstanceOfferingsAsync(string offeringId, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/reservedInstanceOfferings?offeringId=" + (offeringId==null? "" : System.Uri.EscapeDataString(offeringId))+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeReservedInstanceOfferingsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes the Amazon OpenSearch Service instances that you have reserved in a given Region. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ri.html">Reserved Instances in Amazon OpenSearch Service</a>.
		/// DescribeReservedInstances 2021-01-01/opensearch/reservedInstances
		/// </summary>
		/// <param name="reservationId">The reserved instance identifier filter value. Use this parameter to show only the reservation that matches the specified reserved OpenSearch instance ID.
		/// Min length: 36
		/// Max length: 36
		// </param>
		/// <param name="maxResults">An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
		/// Maximum: 100
		// </param>
		/// <param name="nextToken">If your initial <code>DescribeReservedInstances</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>DescribeReservedInstances</code> operations, which returns results in the next page.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeReservedInstancesResponse> DescribeReservedInstancesAsync(string reservationId, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/reservedInstances?reservationId=" + (reservationId==null? "" : System.Uri.EscapeDataString(reservationId))+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeReservedInstancesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Describes one or more Amazon OpenSearch Service-managed VPC endpoints.
		/// DescribeVpcEndpoints 2021-01-01/opensearch/vpcEndpoints/describe
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeVpcEndpointsResponse> DescribeVpcEndpointsAsync(DescribeVpcEndpointsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/vpcEndpoints/describe";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DescribeVpcEndpointsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Removes a package from the specified Amazon OpenSearch Service domain. The package can't be in use with any OpenSearch index for the dissociation to succeed. The package is still available in OpenSearch Service for association later. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.
		/// DissociatePackage 2021-01-01/packages/dissociate/{PackageID}/{DomainName}
		/// </summary>
		/// <param name="PackageID">Internal ID of the package to dissociate from the domain. Use <code>ListPackagesForDomain</code> to find this value.</param>
		/// <param name="DomainName">Name of the domain to dissociate the package from.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task<DissociatePackageResponse> DissociatePackageAsync(string PackageID, string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/packages/dissociate/"+ (PackageID==null? "" : System.Uri.EscapeDataString(PackageID))+"/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DissociatePackageResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a map of OpenSearch or Elasticsearch versions and the versions you can upgrade them to.
		/// GetCompatibleVersions 2021-01-01/opensearch/compatibleVersions
		/// </summary>
		/// <param name="domainName">The name of an existing domain. Provide this parameter to limit the results to a single domain.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task<GetCompatibleVersionsResponse> GetCompatibleVersionsAsync(string domainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/compatibleVersions?domainName=" + (domainName==null? "" : System.Uri.EscapeDataString(domainName));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCompatibleVersionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns a list of Amazon OpenSearch Service package versions, along with their creation time, commit message, and plugin properties (if the package is a zip plugin package). For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.
		/// GetPackageVersionHistory 2021-01-01/packages/{PackageID}/history
		/// </summary>
		/// <param name="PackageID">The unique identifier of the package.</param>
		/// <param name="maxResults">An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
		/// Maximum: 100
		// </param>
		/// <param name="nextToken">If your initial <code>GetPackageVersionHistory</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>GetPackageVersionHistory</code> operations, which returns results in the next page. </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetPackageVersionHistoryResponse> GetPackageVersionHistoryAsync(string PackageID, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/packages/"+ (PackageID==null? "" : System.Uri.EscapeDataString(PackageID))+"/history&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetPackageVersionHistoryResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves the complete history of the last 10 upgrades performed on an Amazon OpenSearch Service domain.
		/// GetUpgradeHistory 2021-01-01/opensearch/upgradeDomain/{DomainName}/history
		/// </summary>
		/// <param name="DomainName">The name of an existing domain.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="maxResults">An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
		/// Maximum: 100
		// </param>
		/// <param name="nextToken">If your initial <code>GetUpgradeHistory</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>GetUpgradeHistory</code> operations, which returns results in the next page.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetUpgradeHistoryResponse> GetUpgradeHistoryAsync(string DomainName, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/upgradeDomain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/history&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetUpgradeHistoryResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the most recent status of the last upgrade or upgrade eligibility check performed on an Amazon OpenSearch Service domain.
		/// GetUpgradeStatus 2021-01-01/opensearch/upgradeDomain/{DomainName}/status
		/// </summary>
		/// <param name="DomainName">The domain of the domain to get upgrade status information for.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task<GetUpgradeStatusResponse> GetUpgradeStatusAsync(string DomainName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/upgradeDomain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/status";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetUpgradeStatusResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns the names of all Amazon OpenSearch Service domains owned by the current user in the active Region.
		/// ListDomainNames 2021-01-01/domain
		/// </summary>
		/// <param name="engineType">Filters the output by domain engine type.</param>
		/// <returns>Success</returns>
		public async Task<ListDomainNamesResponse> ListDomainNamesAsync(EngineType engineType, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/domain?engineType=" + engineType;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListDomainNamesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all Amazon OpenSearch Service domains associated with a given package. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.
		/// ListDomainsForPackage 2021-01-01/packages/{PackageID}/domains
		/// </summary>
		/// <param name="PackageID">The unique identifier of the package for which to list associated domains.</param>
		/// <param name="maxResults">An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
		/// Maximum: 100
		// </param>
		/// <param name="nextToken">If your initial <code>ListDomainsForPackage</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>ListDomainsForPackage</code> operations, which returns results in the next page.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDomainsForPackageResponse> ListDomainsForPackageAsync(string PackageID, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/packages/"+ (PackageID==null? "" : System.Uri.EscapeDataString(PackageID))+"/domains&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListDomainsForPackageResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all instance types and available features for a given OpenSearch or Elasticsearch version.
		/// ListInstanceTypeDetails 2021-01-01/opensearch/instanceTypeDetails/{EngineVersion}
		/// </summary>
		/// <param name="EngineVersion">The version of OpenSearch or Elasticsearch, in the format Elasticsearch_X.Y or OpenSearch_X.Y. Defaults to the latest version of OpenSearch.
		/// Min length: 14
		/// Max length: 18
		// </param>
		/// <param name="domainName">The name of the domain.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="maxResults">An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
		/// Maximum: 100
		// </param>
		/// <param name="nextToken">If your initial <code>ListInstanceTypeDetails</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>ListInstanceTypeDetails</code> operations, which returns results in the next page.</param>
		/// <param name="retrieveAZs">An optional parameter that specifies the Availability Zones for the domain.</param>
		/// <param name="instanceType">An optional parameter that lists information for a given instance type.
		/// Min length: 10
		/// Max length: 40
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListInstanceTypeDetailsResponse> ListInstanceTypeDetailsAsync(string EngineVersion, string domainName, int maxResults, string nextToken, bool retrieveAZs, string instanceType, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/instanceTypeDetails/"+ (EngineVersion==null? "" : System.Uri.EscapeDataString(EngineVersion))+"&domainName=" + (domainName==null? "" : System.Uri.EscapeDataString(domainName))+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&retrieveAZs="+retrieveAZs+"&instanceType=" + (instanceType==null? "" : System.Uri.EscapeDataString(instanceType))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListInstanceTypeDetailsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all packages associated with an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.
		/// ListPackagesForDomain 2021-01-01/domain/{DomainName}/packages
		/// </summary>
		/// <param name="DomainName">The name of the domain for which you want to list associated packages.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="maxResults">An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
		/// Maximum: 100
		// </param>
		/// <param name="nextToken">If your initial <code>ListPackagesForDomain</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>ListPackagesForDomain</code> operations, which returns results in the next page.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListPackagesForDomainResponse> ListPackagesForDomainAsync(string DomainName, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/packages&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListPackagesForDomainResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves a list of configuration changes that are scheduled for a domain. These changes can be <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html">service software updates</a> or <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html#auto-tune-types">blue/green Auto-Tune enhancements</a>.
		/// ListScheduledActions 2021-01-01/opensearch/domain/{DomainName}/scheduledActions
		/// </summary>
		/// <param name="DomainName">The name of the domain.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="maxResults">An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
		/// Maximum: 100
		// </param>
		/// <param name="nextToken">If your initial <code>ListScheduledActions</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>ListScheduledActions</code> operations, which returns results in the next page.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListScheduledActionsResponse> ListScheduledActionsAsync(string DomainName, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/scheduledActions&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListScheduledActionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns all resource tags for an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-awsresourcetagging.html">Tagging Amazon OpenSearch Service domains</a>.
		/// ListTags 2021-01-01/tags/#arn
		/// </summary>
		/// <param name="arn">Amazon Resource Name (ARN) for the domain to view tags for.
		/// Min length: 20
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<ListTagsResponse> ListTagsAsync(string arn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/tags/#arn?arn=" + (arn==null? "" : System.Uri.EscapeDataString(arn));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListTagsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all versions of OpenSearch and Elasticsearch that Amazon OpenSearch Service supports.
		/// ListVersions 2021-01-01/opensearch/versions
		/// </summary>
		/// <param name="maxResults">An optional parameter that specifies the maximum number of results to return. You can use <code>nextToken</code> to get the next page of results.
		/// Maximum: 100
		// </param>
		/// <param name="nextToken">If your initial <code>ListVersions</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>ListVersions</code> operations, which returns results in the next page.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListVersionsResponse> ListVersionsAsync(int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/versions?maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListVersionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about each Amazon Web Services principal that is allowed to access a given Amazon OpenSearch Service domain through the use of an interface VPC endpoint.
		/// ListVpcEndpointAccess 2021-01-01/opensearch/domain/{DomainName}/listVpcEndpointAccess
		/// </summary>
		/// <param name="DomainName">The name of the OpenSearch Service domain to retrieve access information for.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="nextToken">If your initial <code>ListVpcEndpointAccess</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>ListVpcEndpointAccess</code> operations, which returns results in the next page.</param>
		/// <returns>Success</returns>
		public async Task<ListVpcEndpointAccessResponse> ListVpcEndpointAccessAsync(string DomainName, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/listVpcEndpointAccess&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListVpcEndpointAccessResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves all Amazon OpenSearch Service-managed VPC endpoints associated with a particular domain.
		/// ListVpcEndpointsForDomain 2021-01-01/opensearch/domain/{DomainName}/vpcEndpoints
		/// </summary>
		/// <param name="DomainName">The name of the domain to list associated VPC endpoints for.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <param name="nextToken">If your initial <code>ListEndpointsForDomain</code> operation returns a <code>nextToken</code>, you can include the returned <code>nextToken</code> in subsequent <code>ListEndpointsForDomain</code> operations, which returns results in the next page.</param>
		/// <returns>Success</returns>
		public async Task<ListVpcEndpointsForDomainResponse> ListVpcEndpointsForDomainAsync(string DomainName, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/vpcEndpoints&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListVpcEndpointsForDomainResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Allows you to purchase Amazon OpenSearch Service Reserved Instances.
		/// PurchaseReservedInstanceOffering 2021-01-01/opensearch/purchaseReservedInstanceOffering
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PurchaseReservedInstanceOfferingResponse> PurchaseReservedInstanceOfferingAsync(PurchaseReservedInstanceOfferingPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/purchaseReservedInstanceOffering";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PurchaseReservedInstanceOfferingResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Allows the remote Amazon OpenSearch Service domain owner to reject an inbound cross-cluster connection request.
		/// RejectInboundConnection 2021-01-01/opensearch/cc/inboundConnection/{ConnectionId}/reject
		/// </summary>
		/// <param name="ConnectionId">The unique identifier of the inbound connection to reject.
		/// Min length: 10
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<RejectInboundConnectionResponse> RejectInboundConnectionAsync(string ConnectionId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/cc/inboundConnection/"+ (ConnectionId==null? "" : System.Uri.EscapeDataString(ConnectionId))+"/reject";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<RejectInboundConnectionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Removes the specified set of tags from an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains.html#managedomains-awsresorcetagging"> Tagging Amazon OpenSearch Service domains</a>.
		/// RemoveTags 2021-01-01/tags-removal
		/// </summary>
		/// <returns>Success</returns>
		public async Task RemoveTagsAsync(RemoveTagsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/tags-removal";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Revokes access to an Amazon OpenSearch Service domain that was provided through an interface VPC endpoint.
		/// RevokeVpcEndpointAccess 2021-01-01/opensearch/domain/{DomainName}/revokeVpcEndpointAccess
		/// </summary>
		/// <param name="DomainName">The name of the OpenSearch Service domain.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task<RevokeVpcEndpointAccessResponse> RevokeVpcEndpointAccessAsync(string DomainName, RevokeVpcEndpointAccessPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/revokeVpcEndpointAccess";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<RevokeVpcEndpointAccessResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Schedules a service software update for an Amazon OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html">Service software updates in Amazon OpenSearch Service</a>.
		/// StartServiceSoftwareUpdate 2021-01-01/opensearch/serviceSoftwareUpdate/start
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartServiceSoftwareUpdateResponse> StartServiceSoftwareUpdateAsync(StartServiceSoftwareUpdatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/serviceSoftwareUpdate/start";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<StartServiceSoftwareUpdateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates a package for use with Amazon OpenSearch Service domains. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html">Custom packages for Amazon OpenSearch Service</a>.
		/// UpdatePackage 2021-01-01/packages/update
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdatePackageResponse> UpdatePackageAsync(UpdatePackagePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/packages/update";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdatePackageResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Reschedules a planned domain configuration change for a later time. This change can be a scheduled <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html">service software update</a> or a <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html#auto-tune-types">blue/green Auto-Tune enhancement</a>.
		/// UpdateScheduledAction 2021-01-01/opensearch/domain/{DomainName}/scheduledAction/update
		/// </summary>
		/// <param name="DomainName">The name of the domain to reschedule an action for.
		/// Min length: 3
		/// Max length: 28
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateScheduledActionResponse> UpdateScheduledActionAsync(string DomainName, UpdateScheduledActionPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/domain/"+ (DomainName==null? "" : System.Uri.EscapeDataString(DomainName))+"/scheduledAction/update";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateScheduledActionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Modifies an Amazon OpenSearch Service-managed interface VPC endpoint.
		/// UpdateVpcEndpoint 2021-01-01/opensearch/vpcEndpoints/update
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateVpcEndpointResponse> UpdateVpcEndpointAsync(UpdateVpcEndpointPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/vpcEndpoints/update";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateVpcEndpointResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Allows you to either upgrade your Amazon OpenSearch Service domain or perform an upgrade eligibility check to a compatible version of OpenSearch or Elasticsearch.
		/// UpgradeDomain 2021-01-01/opensearch/upgradeDomain
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpgradeDomainResponse> UpgradeDomainAsync(UpgradeDomainPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "2021-01-01/opensearch/upgradeDomain";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpgradeDomainResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
	
	public class AddTagsPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the domain. See <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html">Identifiers for IAM Entities </a> in <i>Using AWS Identity and Access Management</i> for more information. 
		/// Required
		/// Min length: 20
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(20)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string ARN { get; set; }
		
		/// <summary>
		/// A list of tags attached to a domain.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tag[] TagList { get; set; }
	}
	
	public class AuthorizeVpcEndpointAccessPostBody
	{
		
		/// <summary>
		/// The Amazon Web Services account ID to grant access to.
		/// Required
		/// Pattern: ^[0-9]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]+$")]
		public string Account { get; set; }
	}
	
	public class CancelServiceSoftwareUpdatePostBody
	{
		
		/// <summary>
		/// The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
	}
	
	public class CreateDomainPostBody
	{
		
		/// <summary>
		/// The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// String of format Elasticsearch_X.Y or OpenSearch_X.Y to specify the engine version for the OpenSearch Service domain. For example, <code>OpenSearch_1.0</code> or <code>Elasticsearch_7.9</code>. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains">Creating and managing Amazon OpenSearch Service domains</a>.
		/// Min length: 14
		/// Max length: 18
		/// Pattern: ^Elasticsearch_[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(14)]
		[System.ComponentModel.DataAnnotations.MaxLength(18)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^Elasticsearch_[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$")]
		public string EngineVersion { get; set; }
		
		/// <summary>
		/// Container for the cluster configuration of an OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html">Creating and managing Amazon OpenSearch Service domains</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDomainPostBodyClusterConfig ClusterConfig { get; set; }
		
		/// <summary>
		/// Container for the parameters required to enable EBS-based storage for an OpenSearch Service domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDomainPostBodyEBSOptions EBSOptions { get; set; }
		
		/// <summary>
		/// Access policy rules for an Amazon OpenSearch Service domain endpoint. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-access-policies">Configuring access policies</a>. The maximum size of a policy document is 100 KB.
		/// Min length: 0
		/// Max length: 102400
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(102400)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string AccessPolicies { get; set; }
		
		/// <summary>
		/// The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDomainPostBodySnapshotOptions SnapshotOptions { get; set; }
		
		/// <summary>
		/// Options to specify the subnets and security groups for an Amazon OpenSearch Service VPC endpoint. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html">Launching your Amazon OpenSearch Service domains using a VPC</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDomainPostBodyVPCOptions VPCOptions { get; set; }
		
		/// <summary>
		/// Container for the parameters required to enable Cognito authentication for an OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html">Configuring Amazon Cognito authentication for OpenSearch Dashboards</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDomainPostBodyCognitoOptions CognitoOptions { get; set; }
		
		/// <summary>
		/// Specifies whether the domain should encrypt data at rest, and if so, the Key Management Service (KMS) key to use. Can be used only to create a new domain, not update an existing one.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDomainPostBodyEncryptionAtRestOptions EncryptionAtRestOptions { get; set; }
		
		/// <summary>
		/// Enables or disables node-to-node encryption. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ntn.html">Node-to-node encryption for Amazon OpenSearch Service</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDomainPostBodyNodeToNodeEncryptionOptions NodeToNodeEncryptionOptions { get; set; }
		
		/// <summary>
		/// <p>Exposes native OpenSearch configuration values from <code>opensearch.yml</code>. The following advanced options are available: </p> <ul> <li> <p>Allows references to indexes in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. Default is <code>true</code>.</p> </li> <li> <p>Specifies the percentage of heap space allocated to field data. Default is unbounded.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options">Advanced cluster parameters</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> AdvancedOptions { get; set; }
		
		/// <summary>
		/// Key-value pairs to configure log publishing.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, LogPublishingOption> LogPublishingOptions { get; set; }
		
		/// <summary>
		/// Options to configure a custom endpoint for an OpenSearch Service domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDomainPostBodyDomainEndpointOptions DomainEndpointOptions { get; set; }
		
		/// <summary>
		/// Options for enabling and configuring fine-grained access control. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html">Fine-grained access control in Amazon OpenSearch Service</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDomainPostBodyAdvancedSecurityOptions AdvancedSecurityOptions { get; set; }
		
		/// <summary>
		/// A list of tags attached to a domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] TagList { get; set; }
		
		/// <summary>
		/// Options for configuring Auto-Tune. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDomainPostBodyAutoTuneOptions AutoTuneOptions { get; set; }
		
		/// <summary>
		/// Options for a domain's <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html">off-peak window</a>, during which OpenSearch Service can perform mandatory configuration changes on the domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDomainPostBodyOffPeakWindowOptions OffPeakWindowOptions { get; set; }
		
		/// <summary>
		/// Options for configuring service software updates for a domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateDomainPostBodySoftwareUpdateOptions SoftwareUpdateOptions { get; set; }
	}
	
	public class CreateDomainPostBodyClusterConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OpenSearchPartitionInstanceType InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DedicatedMasterEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ZoneAwarenessEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ZoneAwarenessConfig ZoneAwarenessConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OpenSearchPartitionInstanceType DedicatedMasterType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DedicatedMasterCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> WarmEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OpenSearchWarmPartitionInstanceType WarmType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WarmCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColdStorageOptions ColdStorageOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZWithStandbyEnabled { get; set; }
	}
	
	public class CreateDomainPostBodyEBSOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EBSEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VolumeType VolumeType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VolumeSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Throughput { get; set; }
	}
	
	public class CreateDomainPostBodySnapshotOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AutomatedSnapshotStartHour { get; set; }
	}
	
	public class CreateDomainPostBodyVPCOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	public class CreateDomainPostBodyCognitoOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserPoolId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityPoolId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	public class CreateDomainPostBodyEncryptionAtRestOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
	}
	
	public class CreateDomainPostBodyNodeToNodeEncryptionOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	public class CreateDomainPostBodyDomainEndpointOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnforceHTTPS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TLSSecurityPolicy TLSSecurityPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CustomEndpointEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomEndpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomEndpointCertificateArn { get; set; }
	}
	
	public class CreateDomainPostBodyAdvancedSecurityOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InternalUserDatabaseEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MasterUserOptions MasterUserOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SAMLOptionsInput SAMLOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AnonymousAuthEnabled { get; set; }
	}
	
	public class CreateDomainPostBodyAutoTuneOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneDesiredState DesiredState { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneMaintenanceSchedule[] MaintenanceSchedules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseOffPeakWindow { get; set; }
	}
	
	public class CreateDomainPostBodyOffPeakWindowOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OffPeakWindow OffPeakWindow { get; set; }
	}
	
	public class CreateDomainPostBodySoftwareUpdateOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoSoftwareUpdateEnabled { get; set; }
	}
	
	public class CreateOutboundConnectionPostBody
	{
		
		/// <summary>
		/// Container for information about an OpenSearch Service domain.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateOutboundConnectionPostBodyLocalDomainInfo LocalDomainInfo { get; set; }
		
		/// <summary>
		/// Container for information about an OpenSearch Service domain.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateOutboundConnectionPostBodyRemoteDomainInfo RemoteDomainInfo { get; set; }
		
		/// <summary>
		/// Name of the connection.
		/// Required
		/// Min length: 2
		/// Max length: 100
		/// Pattern: [a-zA-Z][a-zA-Z0-9\-\_]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(2)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z][a-zA-Z0-9\-\_]+")]
		public string ConnectionAlias { get; set; }
		
		/// <summary>
		/// <p>The connection mode for the cross-cluster connection.</p> <ul> <li> <p> <b>DIRECT</b> - Used for cross-cluster search or cross-cluster replication.</p> </li> <li> <p> <b>VPC_ENDPOINT</b> - Used for remote reindex between Amazon OpenSearch Service VPC domains.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ConnectionMode ConnectionMode { get; set; }
		
		/// <summary>
		/// The connection properties of an outbound connection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateOutboundConnectionPostBodyConnectionProperties ConnectionProperties { get; set; }
	}
	
	public class CreateOutboundConnectionPostBodyLocalDomainInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AWSDomainInformation AWSDomainInformation { get; set; }
	}
	
	public class CreateOutboundConnectionPostBodyRemoteDomainInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AWSDomainInformation AWSDomainInformation { get; set; }
	}
	
	public class CreateOutboundConnectionPostBodyConnectionProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Endpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CrossClusterSearchConnectionProperties CrossClusterSearch { get; set; }
	}
	
	public class CreatePackagePostBody
	{
		
		/// <summary>
		/// Unique name for the package.
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string PackageName { get; set; }
		
		/// <summary>
		/// The type of package.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreatePackagePostBodyPackageType PackageType { get; set; }
		
		/// <summary>
		/// Description of the package.
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string PackageDescription { get; set; }
		
		/// <summary>
		/// The Amazon S3 location to import the package from.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreatePackagePostBodyPackageSource PackageSource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreatePackagePostBodyPackageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TXT-DICTIONARY")]
		TXTMinusDICTIONARY = 0,
	}
	
	public class CreatePackagePostBodyPackageSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string S3BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Key { get; set; }
	}
	
	public class CreateVpcEndpointPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the domain to create the endpoint for.
		/// Required
		/// Min length: 1
		/// Max length: 512
		/// Pattern: arn:aws[a-z\-]*:[a-z]+:[a-z0-9\-]+:[0-9]+:domain\/[a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(512)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:aws[a-z\-]*:[a-z]+:[a-z0-9\-]+:[0-9]+:domain\/[a-z0-9\-]+")]
		public string DomainArn { get; set; }
		
		/// <summary>
		/// Options to specify the subnets and security groups for an Amazon OpenSearch Service VPC endpoint. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html">Launching your Amazon OpenSearch Service domains using a VPC</a>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateVpcEndpointPostBodyVpcOptions VpcOptions { get; set; }
		
		/// <summary>
		/// Unique, case-sensitive identifier to ensure idempotency of the request.
		/// Min length: 1
		/// Max length: 64
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		public string ClientToken { get; set; }
	}
	
	public class CreateVpcEndpointPostBodyVpcOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	public class UpdateDomainConfigPostBody
	{
		
		/// <summary>
		/// Container for the cluster configuration of an OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html">Creating and managing Amazon OpenSearch Service domains</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDomainConfigPostBodyClusterConfig ClusterConfig { get; set; }
		
		/// <summary>
		/// Container for the parameters required to enable EBS-based storage for an OpenSearch Service domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDomainConfigPostBodyEBSOptions EBSOptions { get; set; }
		
		/// <summary>
		/// The time, in UTC format, when OpenSearch Service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDomainConfigPostBodySnapshotOptions SnapshotOptions { get; set; }
		
		/// <summary>
		/// Options to specify the subnets and security groups for an Amazon OpenSearch Service VPC endpoint. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html">Launching your Amazon OpenSearch Service domains using a VPC</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDomainConfigPostBodyVPCOptions VPCOptions { get; set; }
		
		/// <summary>
		/// Container for the parameters required to enable Cognito authentication for an OpenSearch Service domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html">Configuring Amazon Cognito authentication for OpenSearch Dashboards</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDomainConfigPostBodyCognitoOptions CognitoOptions { get; set; }
		
		/// <summary>
		/// <p>Exposes native OpenSearch configuration values from <code>opensearch.yml</code>. The following advanced options are available: </p> <ul> <li> <p>Allows references to indexes in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. Default is <code>true</code>.</p> </li> <li> <p>Specifies the percentage of heap space allocated to field data. Default is unbounded.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options">Advanced cluster parameters</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> AdvancedOptions { get; set; }
		
		/// <summary>
		/// Access policy rules for an Amazon OpenSearch Service domain endpoint. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-access-policies">Configuring access policies</a>. The maximum size of a policy document is 100 KB.
		/// Min length: 0
		/// Max length: 102400
		/// Pattern: .*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(102400)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string AccessPolicies { get; set; }
		
		/// <summary>
		/// Options to publish OpenSearch logs to Amazon CloudWatch Logs.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, LogPublishingOption> LogPublishingOptions { get; set; }
		
		/// <summary>
		/// Specifies whether the domain should encrypt data at rest, and if so, the Key Management Service (KMS) key to use. Can be used only to create a new domain, not update an existing one.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDomainConfigPostBodyEncryptionAtRestOptions EncryptionAtRestOptions { get; set; }
		
		/// <summary>
		/// Options to configure a custom endpoint for an OpenSearch Service domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDomainConfigPostBodyDomainEndpointOptions DomainEndpointOptions { get; set; }
		
		/// <summary>
		/// Enables or disables node-to-node encryption. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ntn.html">Node-to-node encryption for Amazon OpenSearch Service</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDomainConfigPostBodyNodeToNodeEncryptionOptions NodeToNodeEncryptionOptions { get; set; }
		
		/// <summary>
		/// Options for enabling and configuring fine-grained access control. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html">Fine-grained access control in Amazon OpenSearch Service</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDomainConfigPostBodyAdvancedSecurityOptions AdvancedSecurityOptions { get; set; }
		
		/// <summary>
		/// Auto-Tune settings when updating a domain. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html">Auto-Tune for Amazon OpenSearch Service</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDomainConfigPostBodyAutoTuneOptions AutoTuneOptions { get; set; }
		
		/// <summary>
		/// This flag, when set to True, specifies whether the <code>UpdateDomain</code> request should return the results of a dry run analysis without actually applying the change. A dry run determines what type of deployment the update will cause.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DryRun { get; set; }
		
		/// <summary>
		/// <p>The type of dry run to perform.</p> <ul> <li> <p> <code>Basic</code> only returns the type of deployment (blue/green or dynamic) that the update will cause.</p> </li> <li> <p> <code>Verbose</code> runs an additional check to validate the changes you're making. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-configuration-changes#validation-check">Validating a domain update</a>.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DryRunMode DryRunMode { get; set; }
		
		/// <summary>
		/// Options for a domain's <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html">off-peak window</a>, during which OpenSearch Service can perform mandatory configuration changes on the domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDomainConfigPostBodyOffPeakWindowOptions OffPeakWindowOptions { get; set; }
		
		/// <summary>
		/// Options for configuring service software updates for a domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateDomainConfigPostBodySoftwareUpdateOptions SoftwareUpdateOptions { get; set; }
	}
	
	public class UpdateDomainConfigPostBodyClusterConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OpenSearchPartitionInstanceType InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DedicatedMasterEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ZoneAwarenessEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ZoneAwarenessConfig ZoneAwarenessConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OpenSearchPartitionInstanceType DedicatedMasterType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DedicatedMasterCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> WarmEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OpenSearchWarmPartitionInstanceType WarmType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WarmCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ColdStorageOptions ColdStorageOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MultiAZWithStandbyEnabled { get; set; }
	}
	
	public class UpdateDomainConfigPostBodyEBSOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EBSEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VolumeType VolumeType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VolumeSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Throughput { get; set; }
	}
	
	public class UpdateDomainConfigPostBodySnapshotOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AutomatedSnapshotStartHour { get; set; }
	}
	
	public class UpdateDomainConfigPostBodyVPCOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	public class UpdateDomainConfigPostBodyCognitoOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserPoolId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityPoolId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	public class UpdateDomainConfigPostBodyEncryptionAtRestOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyId { get; set; }
	}
	
	public class UpdateDomainConfigPostBodyDomainEndpointOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnforceHTTPS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TLSSecurityPolicy TLSSecurityPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CustomEndpointEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomEndpoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomEndpointCertificateArn { get; set; }
	}
	
	public class UpdateDomainConfigPostBodyNodeToNodeEncryptionOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	public class UpdateDomainConfigPostBodyAdvancedSecurityOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InternalUserDatabaseEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MasterUserOptions MasterUserOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SAMLOptionsInput SAMLOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AnonymousAuthEnabled { get; set; }
	}
	
	public class UpdateDomainConfigPostBodyAutoTuneOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneDesiredState DesiredState { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RollbackOnDisable RollbackOnDisable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTuneMaintenanceSchedule[] MaintenanceSchedules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseOffPeakWindow { get; set; }
	}
	
	public class UpdateDomainConfigPostBodyOffPeakWindowOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OffPeakWindow OffPeakWindow { get; set; }
	}
	
	public class UpdateDomainConfigPostBodySoftwareUpdateOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoSoftwareUpdateEnabled { get; set; }
	}
	
	public class DescribeDomainsPostBody
	{
		
		/// <summary>
		/// A list of OpenSearch Service domain names.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] DomainNames { get; set; }
	}
	
	public class DescribeInboundConnectionsPostBody
	{
		
		/// <summary>
		///  A list of filters used to match properties for inbound cross-cluster connections.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		/// <summary>
		/// An optional parameter that specifies the maximum number of results to return for a given request.
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(System.Int32.MinValue, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	public enum DescribeInstanceTypeLimitsInstanceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m3.medium.search")]
		m3_medium_search = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m3.large.search")]
		m3_large_search = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m3.xlarge.search")]
		m3_xlarge_search = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m3.2xlarge.search")]
		m3_2xlarge_search = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.large.search")]
		m4_large_search = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.xlarge.search")]
		m4_xlarge_search = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.2xlarge.search")]
		m4_2xlarge_search = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.4xlarge.search")]
		m4_4xlarge_search = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m4.10xlarge.search")]
		m4_10xlarge_search = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.large.search")]
		m5_large_search = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.xlarge.search")]
		m5_xlarge_search = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.2xlarge.search")]
		m5_2xlarge_search = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.4xlarge.search")]
		m5_4xlarge_search = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.12xlarge.search")]
		m5_12xlarge_search = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m5.24xlarge.search")]
		m5_24xlarge_search = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.large.search")]
		r5_large_search = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.xlarge.search")]
		r5_xlarge_search = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.2xlarge.search")]
		r5_2xlarge_search = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.4xlarge.search")]
		r5_4xlarge_search = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.12xlarge.search")]
		r5_12xlarge_search = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r5.24xlarge.search")]
		r5_24xlarge_search = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.large.search")]
		c5_large_search = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.xlarge.search")]
		c5_xlarge_search = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.2xlarge.search")]
		c5_2xlarge_search = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.4xlarge.search")]
		c5_4xlarge_search = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.9xlarge.search")]
		c5_9xlarge_search = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c5.18xlarge.search")]
		c5_18xlarge_search = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t3.nano.search")]
		t3_nano_search = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t3.micro.search")]
		t3_micro_search = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t3.small.search")]
		t3_small_search = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t3.medium.search")]
		t3_medium_search = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t3.large.search")]
		t3_large_search = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t3.xlarge.search")]
		t3_xlarge_search = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t3.2xlarge.search")]
		t3_2xlarge_search = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ultrawarm1.medium.search")]
		ultrawarm1_medium_search = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ultrawarm1.large.search")]
		ultrawarm1_large_search = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ultrawarm1.xlarge.search")]
		ultrawarm1_xlarge_search = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t2.micro.search")]
		t2_micro_search = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t2.small.search")]
		t2_small_search = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t2.medium.search")]
		t2_medium_search = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.large.search")]
		r3_large_search = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.xlarge.search")]
		r3_xlarge_search = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.2xlarge.search")]
		r3_2xlarge_search = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.4xlarge.search")]
		r3_4xlarge_search = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r3.8xlarge.search")]
		r3_8xlarge_search = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i2.xlarge.search")]
		i2_xlarge_search = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i2.2xlarge.search")]
		i2_2xlarge_search = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="d2.xlarge.search")]
		d2_xlarge_search = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="d2.2xlarge.search")]
		d2_2xlarge_search = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="d2.4xlarge.search")]
		d2_4xlarge_search = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="d2.8xlarge.search")]
		d2_8xlarge_search = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.large.search")]
		c4_large_search = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.xlarge.search")]
		c4_xlarge_search = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.2xlarge.search")]
		c4_2xlarge_search = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.4xlarge.search")]
		c4_4xlarge_search = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c4.8xlarge.search")]
		c4_8xlarge_search = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.large.search")]
		r4_large_search = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.xlarge.search")]
		r4_xlarge_search = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.2xlarge.search")]
		r4_2xlarge_search = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.4xlarge.search")]
		r4_4xlarge_search = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.8xlarge.search")]
		r4_8xlarge_search = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r4.16xlarge.search")]
		r4_16xlarge_search = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.large.search")]
		i3_large_search = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.xlarge.search")]
		i3_xlarge_search = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.2xlarge.search")]
		i3_2xlarge_search = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.4xlarge.search")]
		i3_4xlarge_search = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.8xlarge.search")]
		i3_8xlarge_search = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i3.16xlarge.search")]
		i3_16xlarge_search = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6g.large.search")]
		r6g_large_search = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6g.xlarge.search")]
		r6g_xlarge_search = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6g.2xlarge.search")]
		r6g_2xlarge_search = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6g.4xlarge.search")]
		r6g_4xlarge_search = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6g.8xlarge.search")]
		r6g_8xlarge_search = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6g.12xlarge.search")]
		r6g_12xlarge_search = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m6g.large.search")]
		m6g_large_search = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m6g.xlarge.search")]
		m6g_xlarge_search = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m6g.2xlarge.search")]
		m6g_2xlarge_search = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m6g.4xlarge.search")]
		m6g_4xlarge_search = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m6g.8xlarge.search")]
		m6g_8xlarge_search = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="m6g.12xlarge.search")]
		m6g_12xlarge_search = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c6g.large.search")]
		c6g_large_search = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c6g.xlarge.search")]
		c6g_xlarge_search = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c6g.2xlarge.search")]
		c6g_2xlarge_search = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c6g.4xlarge.search")]
		c6g_4xlarge_search = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c6g.8xlarge.search")]
		c6g_8xlarge_search = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="c6g.12xlarge.search")]
		c6g_12xlarge_search = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6gd.large.search")]
		r6gd_large_search = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6gd.xlarge.search")]
		r6gd_xlarge_search = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6gd.2xlarge.search")]
		r6gd_2xlarge_search = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6gd.4xlarge.search")]
		r6gd_4xlarge_search = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6gd.8xlarge.search")]
		r6gd_8xlarge_search = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6gd.12xlarge.search")]
		r6gd_12xlarge_search = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="r6gd.16xlarge.search")]
		r6gd_16xlarge_search = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t4g.small.search")]
		t4g_small_search = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="t4g.medium.search")]
		t4g_medium_search = 94,
	}
	
	public class DescribeOutboundConnectionsPostBody
	{
		
		/// <summary>
		/// List of filter names and values that you can use for requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
		
		/// <summary>
		/// An optional parameter that specifies the maximum number of results to return for a given request.
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(System.Int32.MinValue, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	public class DescribePackagesPostBody
	{
		
		/// <summary>
		/// A list of <code>DescribePackagesFilter</code> to filter the packages included in a <code>DescribePackages</code> response.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DescribePackagesFilter[] Filters { get; set; }
		
		/// <summary>
		/// An optional parameter that specifies the maximum number of results to return for a given request.
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(System.Int32.MinValue, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// When <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	public class DescribeVpcEndpointsPostBody
	{
		
		/// <summary>
		/// The unique identifiers of the endpoints to get information about.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] VpcEndpointIds { get; set; }
	}
	
	public class PurchaseReservedInstanceOfferingPostBody
	{
		
		/// <summary>
		/// The ID of the Reserved Instance offering to purchase.
		/// Required
		/// Min length: 36
		/// Max length: 36
		/// Pattern: \p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(36)]
		[System.ComponentModel.DataAnnotations.MaxLength(36)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}")]
		public string ReservedInstanceOfferingId { get; set; }
		
		/// <summary>
		/// A customer-specified identifier to track this reservation.
		/// Required
		/// Min length: 5
		/// Max length: 64
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(5)]
		[System.ComponentModel.DataAnnotations.MaxLength(64)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string ReservationName { get; set; }
		
		/// <summary>
		/// Number of instances in an OpenSearch Service cluster.
		/// Minimum: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
	}
	
	public class RemoveTagsPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the domain. See <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html">Identifiers for IAM Entities </a> in <i>Using AWS Identity and Access Management</i> for more information. 
		/// Required
		/// Min length: 20
		/// Max length: 2048
		/// Pattern: .*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(20)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*")]
		public string ARN { get; set; }
		
		/// <summary>
		/// The list of tag keys to remove from the domain.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] TagKeys { get; set; }
	}
	
	public class RevokeVpcEndpointAccessPostBody
	{
		
		/// <summary>
		/// The account ID to revoke access from.
		/// Required
		/// Pattern: ^[0-9]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9]+$")]
		public string Account { get; set; }
	}
	
	public class StartServiceSoftwareUpdatePostBody
	{
		
		/// <summary>
		/// The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// <p>When to start the service software update.</p> <ul> <li> <p> <code>NOW</code> - Immediately schedules the update to happen in the current hour if there's capacity available.</p> </li> <li> <p> <code>TIMESTAMP</code> - Lets you specify a custom date and time to apply the update. If you specify this value, you must also provide a value for <code>DesiredStartTime</code>.</p> </li> <li> <p> <code>OFF_PEAK_WINDOW</code> - Marks the update to be picked up during an upcoming off-peak window. There's no guarantee that the update will happen during the next immediate window. Depending on capacity, it might happen in subsequent days.</p> </li> </ul> <p>Default: <code>NOW</code> if you don't specify a value for <code>DesiredStartTime</code>, and <code>TIMESTAMP</code> if you do.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ScheduleAt ScheduleAt { get; set; }
		
		/// <summary>
		/// The Epoch timestamp when you want the service software update to start. You only need to specify this parameter if you set <code>ScheduleAt</code> to <code>TIMESTAMP</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DesiredStartTime { get; set; }
	}
	
	public class UpdatePackagePostBody
	{
		
		/// <summary>
		/// The unique identifier for the package.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PackageID { get; set; }
		
		/// <summary>
		/// The Amazon S3 location to import the package from.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdatePackagePostBodyPackageSource PackageSource { get; set; }
		
		/// <summary>
		/// A new description of the package.
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string PackageDescription { get; set; }
		
		/// <summary>
		/// Commit message for the updated file, which is shown as part of <code>GetPackageVersionHistoryResponse</code>.
		/// Max length: 160
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(160)]
		public string CommitMessage { get; set; }
	}
	
	public class UpdatePackagePostBodyPackageSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string S3BucketName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Key { get; set; }
	}
	
	public class UpdateScheduledActionPutBody
	{
		
		/// <summary>
		/// The unique identifier of the action to reschedule. To retrieve this ID, send a <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_ListScheduledActions.html">ListScheduledActions</a> request.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActionID { get; set; }
		
		/// <summary>
		/// The type of action to reschedule. Can be one of <code>SERVICE_SOFTWARE_UPDATE</code>, <code>JVM_HEAP_SIZE_TUNING</code>, or <code>JVM_YOUNG_GEN_TUNING</code>. To retrieve this value, send a <a href="https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_ListScheduledActions.html">ListScheduledActions</a> request.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionType ActionType { get; set; }
		
		/// <summary>
		/// <p>When to schedule the action.</p> <ul> <li> <p> <code>NOW</code> - Immediately schedules the update to happen in the current hour if there's capacity available.</p> </li> <li> <p> <code>TIMESTAMP</code> - Lets you specify a custom date and time to apply the update. If you specify this value, you must also provide a value for <code>DesiredStartTime</code>.</p> </li> <li> <p> <code>OFF_PEAK_WINDOW</code> - Marks the action to be picked up during an upcoming off-peak window. There's no guarantee that the change will be implemented during the next immediate window. Depending on capacity, it might happen in subsequent days.</p> </li> </ul>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScheduleAt ScheduleAt { get; set; }
		
		/// <summary>
		/// The time to implement the change, in Coordinated Universal Time (UTC). Only specify this parameter if you set <code>ScheduleAt</code> to <code>TIMESTAMP</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DesiredStartTime { get; set; }
	}
	
	public class UpdateVpcEndpointPostBody
	{
		
		/// <summary>
		/// The unique identifier of the endpoint.
		/// Required
		/// Min length: 5
		/// Max length: 256
		/// Pattern: ^aos-[a-zA-Z0-9]*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(5)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^aos-[a-zA-Z0-9]*$")]
		public string VpcEndpointId { get; set; }
		
		/// <summary>
		/// Options to specify the subnets and security groups for an Amazon OpenSearch Service VPC endpoint. For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html">Launching your Amazon OpenSearch Service domains using a VPC</a>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateVpcEndpointPostBodyVpcOptions VpcOptions { get; set; }
	}
	
	public class UpdateVpcEndpointPostBodyVpcOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	public class UpgradeDomainPostBody
	{
		
		/// <summary>
		/// The name of an OpenSearch Service domain. Domain names are unique across the domains owned by an account within an Amazon Web Services Region.
		/// Required
		/// Min length: 3
		/// Max length: 28
		/// Pattern: [a-z][a-z0-9\-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(3)]
		[System.ComponentModel.DataAnnotations.MaxLength(28)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z][a-z0-9\-]+")]
		public string DomainName { get; set; }
		
		/// <summary>
		/// OpenSearch or Elasticsearch version to which you want to upgrade, in the format Opensearch_X.Y or Elasticsearch_X.Y.
		/// Required
		/// Min length: 14
		/// Max length: 18
		/// Pattern: ^Elasticsearch_[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(14)]
		[System.ComponentModel.DataAnnotations.MaxLength(18)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^Elasticsearch_[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$")]
		public string TargetVersion { get; set; }
		
		/// <summary>
		/// When true, indicates that an upgrade eligibility check needs to be performed. Does not actually perform the upgrade.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> PerformCheckOnly { get; set; }
		
		/// <summary>
		/// <p>Exposes native OpenSearch configuration values from <code>opensearch.yml</code>. The following advanced options are available: </p> <ul> <li> <p>Allows references to indexes in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. Default is <code>true</code>.</p> </li> <li> <p>Specifies the percentage of heap space allocated to field data. Default is unbounded.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options">Advanced cluster parameters</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> AdvancedOptions { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

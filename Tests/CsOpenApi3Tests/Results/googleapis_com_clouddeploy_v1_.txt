//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// The request object used by `AbandonRelease`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AbandonReleaseRequest
	{
	}
	
	/// <summary>
	/// The response object for `AbandonRelease`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AbandonReleaseResponse
	{
	}
	
	/// <summary>
	/// An advanceChildRollout Job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AdvanceChildRolloutJob
	{
	}
	
	/// <summary>
	/// AdvanceChildRolloutJobRun contains information specific to a advanceChildRollout `JobRun`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AdvanceChildRolloutJobRun
	{
		
		/// <summary>
		/// Output only. Name of the `ChildRollout`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/a-z{0,62}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rollout")]
		public string Rollout { get; set; }
		
		/// <summary>
		/// Output only. the ID of the ChildRollout's Phase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rolloutPhaseId")]
		public string RolloutPhaseId { get; set; }
	}
	
	/// <summary>
	/// Contains the information of an automated advance-rollout operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AdvanceRolloutOperation
	{
		
		/// <summary>
		/// Output only. The phase the rollout will be advanced to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationPhase")]
		public string DestinationPhase { get; set; }
		
		/// <summary>
		/// Output only. The name of the rollout that initiates the `AutomationRun`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rollout")]
		public string Rollout { get; set; }
		
		/// <summary>
		/// Output only. The phase of a deployment that initiated the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourcePhase")]
		public string SourcePhase { get; set; }
		
		/// <summary>
		/// Output only. How long the operation will be paused.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait")]
		public string Wait { get; set; }
	}
	
	/// <summary>
	/// The request object used by `AdvanceRollout`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AdvanceRolloutRequest
	{
		
		/// <summary>
		/// Required. The phase ID to advance the `Rollout` to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phaseId")]
		public string PhaseId { get; set; }
	}
	
	/// <summary>
	/// The response object from `AdvanceRollout`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AdvanceRolloutResponse
	{
	}
	
	/// <summary>
	/// The `AdvanceRollout` automation rule will automatically advance a successful Rollout to the next phase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AdvanceRolloutRule
	{
		
		/// <summary>
		/// `AutomationRuleCondition` contains conditions relevant to an `Automation` rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public AutomationRuleCondition Condition { get; set; }
		
		/// <summary>
		/// Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `a-z{0,62}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Optional. Proceeds only after phase name matched any one in the list. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourcePhases")]
		public string[] SourcePhases { get; set; }
		
		/// <summary>
		/// Optional. How long to wait after a rollout is finished.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait")]
		public string Wait { get; set; }
	}
	
	/// <summary>
	/// `AutomationRuleCondition` contains conditions relevant to an `Automation` rule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutomationRuleCondition
	{
		
		/// <summary>
		/// `TargetsPresentCondition` contains information on any Targets referenced in the Delivery Pipeline that do not actually exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetsPresentCondition")]
		public TargetsPresentCondition TargetsPresentCondition { get; set; }
	}
	
	/// <summary>
	/// `TargetsPresentCondition` contains information on any Targets referenced in the Delivery Pipeline that do not actually exist.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TargetsPresentCondition
	{
		
		/// <summary>
		/// The list of Target names that do not exist. For example, `projects/{project_id}/locations/{location_name}/targets/{target_name}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="missingTargets")]
		public string[] MissingTargets { get; set; }
		
		/// <summary>
		/// True if there aren't any missing Targets.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Boolean> Status { get; set; }
		
		/// <summary>
		/// Last time the condition was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Information specifying an Anthos Cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnthosCluster
	{
		
		/// <summary>
		/// Membership of the GKE Hub-registered cluster to which to apply the Skaffold configuration. Format is `projects/{project}/locations/{location}/memberships/{membership_name}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="membership")]
		public string Membership { get; set; }
	}
	
	/// <summary>
	/// The request object used by `ApproveRollout`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApproveRolloutRequest
	{
		
		/// <summary>
		/// Required. True = approve; false = reject
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="approved")]
		public System.Nullable<System.Boolean> Approved { get; set; }
	}
	
	/// <summary>
	/// The response object from `ApproveRollout`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApproveRolloutResponse
	{
	}
	
	/// <summary>
	/// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuditConfig
	{
		
		/// <summary>
		/// The configuration for logging of each type of permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditLogConfigs")]
		public AuditLogConfig[] AuditLogConfigs { get; set; }
		
		/// <summary>
		/// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuditLogConfig
	{
		
		/// <summary>
		/// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exemptedMembers")]
		public string[] ExemptedMembers { get; set; }
		
		/// <summary>
		/// The log type that this config enables.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logType")]
		public System.Nullable<AuditLogConfigLogType> LogType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AuditLogConfigLogType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOG_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADMIN_READ = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_WRITE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_READ = 3,
	}
	
	/// <summary>
	/// An `Automation` resource in the Cloud Deploy API. An `Automation` enables the automation of manually driven actions for a Delivery Pipeline, which includes Release promotion among Targets, Rollout repair and Rollout deployment strategy advancement. The intention of Automation is to reduce manual intervention in the continuous delivery process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Automation
	{
		
		/// <summary>
		/// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. Annotations must meet the following constraints: * Annotations are key/value pairs. * Valid annotation keys have two segments: an optional prefix and name, separated by a slash (`/`). * The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character (`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between. * The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots(`.`), not longer than 253 characters in total, followed by a slash (`/`). See https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set for more details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotations")]
		public System.Collections.Generic.Dictionary<string, string> Annotations { get; set; }
		
		/// <summary>
		/// Output only. Time at which the automation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Optional. Description of the `Automation`. Max length is 255 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Optional. The weak etag of the `Automation` resource. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 63 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. Name of the `Automation`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automations/{automation}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. List of Automation rules associated with the Automation resource. Must have at least one rule and limited to 250 rules per Delivery Pipeline. Note: the order of the rules here is not the same as the order of execution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rules")]
		public AutomationRule[] Rules { get; set; }
		
		/// <summary>
		/// AutomationResourceSelector contains the information to select the resources to which an Automation is going to be applied.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selector")]
		public AutomationResourceSelector Selector { get; set; }
		
		/// <summary>
		/// Required. Email address of the user-managed IAM service account that creates Cloud Deploy release and rollout resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
		
		/// <summary>
		/// Optional. When Suspended, automation is deactivated from execution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suspended")]
		public System.Nullable<System.Boolean> Suspended { get; set; }
		
		/// <summary>
		/// Output only. Unique identifier of the `Automation`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
		
		/// <summary>
		/// Output only. Time at which the automation was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// `AutomationRule` defines the automation activities.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutomationRule
	{
		
		/// <summary>
		/// The `AdvanceRollout` automation rule will automatically advance a successful Rollout to the next phase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="advanceRolloutRule")]
		public AdvanceRolloutRule AdvanceRolloutRule { get; set; }
		
		/// <summary>
		/// `PromoteRelease` rule will automatically promote a release from the current target to a specified target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promoteReleaseRule")]
		public PromoteReleaseRule PromoteReleaseRule { get; set; }
		
		/// <summary>
		/// The `RepairRolloutRule` automation rule will automatically repair a failed `Rollout`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repairRolloutRule")]
		public RepairRolloutRule RepairRolloutRule { get; set; }
	}
	
	/// <summary>
	/// `PromoteRelease` rule will automatically promote a release from the current target to a specified target.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PromoteReleaseRule
	{
		
		/// <summary>
		/// `AutomationRuleCondition` contains conditions relevant to an `Automation` rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public AutomationRuleCondition Condition { get; set; }
		
		/// <summary>
		/// Optional. The starting phase of the rollout created by this operation. Default to the first phase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationPhase")]
		public string DestinationPhase { get; set; }
		
		/// <summary>
		/// Optional. The ID of the stage in the pipeline to which this `Release` is deploying. If unspecified, default it to the next stage in the promotion flow. The value of this field could be one of the following: * The last segment of a target name. It only needs the ID to determine if the target is one of the stages in the promotion sequence defined in the pipeline. * "@next", the next target in the promotion sequence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationTargetId")]
		public string DestinationTargetId { get; set; }
		
		/// <summary>
		/// Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `a-z{0,62}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Optional. How long the release need to be paused until being promoted to the next target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait")]
		public string Wait { get; set; }
	}
	
	/// <summary>
	/// The `RepairRolloutRule` automation rule will automatically repair a failed `Rollout`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RepairRolloutRule
	{
		
		/// <summary>
		/// `AutomationRuleCondition` contains conditions relevant to an `Automation` rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public AutomationRuleCondition Condition { get; set; }
		
		/// <summary>
		/// Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `a-z{0,62}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Optional. Jobs to repair. Proceeds only after job name matched any one in the list, or for all jobs if unspecified or empty. The phase that includes the job must match the phase ID specified in `source_phase`. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobs")]
		public string[] Jobs { get; set; }
		
		/// <summary>
		/// Required. Defines the types of automatic repair actions for failed jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repairModes")]
		public RepairMode[] RepairModes { get; set; }
		
		/// <summary>
		/// Optional. Phases within which jobs are subject to automatic repair actions on failure. Proceeds only after phase name matched any one in the list, or for all phases if unspecified. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourcePhases")]
		public string[] SourcePhases { get; set; }
	}
	
	/// <summary>
	/// Configuration of the repair action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RepairMode
	{
		
		/// <summary>
		/// Retries the failed job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retry")]
		public Retry Retry { get; set; }
		
		/// <summary>
		/// Rolls back a `Rollout`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rollback")]
		public Rollback Rollback { get; set; }
	}
	
	/// <summary>
	/// Retries the failed job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Retry
	{
		
		/// <summary>
		/// Required. Total number of retries. Retry is skipped if set to 0; The minimum value is 1, and the maximum value is 10.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attempts")]
		public string Attempts { get; set; }
		
		/// <summary>
		/// Optional. The pattern of how wait time will be increased. Default is linear. Backoff mode will be ignored if `wait` is 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backoffMode")]
		public System.Nullable<RetryBackoffMode> BackoffMode { get; set; }
		
		/// <summary>
		/// Optional. How long to wait for the first retry. Default is 0, and the maximum value is 14d.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait")]
		public string Wait { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RetryBackoffMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BACKOFF_MODE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BACKOFF_MODE_LINEAR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BACKOFF_MODE_EXPONENTIAL = 2,
	}
	
	/// <summary>
	/// Rolls back a `Rollout`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Rollback
	{
		
		/// <summary>
		/// Optional. The starting phase ID for the `Rollout`. If unspecified, the `Rollout` will start in the stable phase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationPhase")]
		public string DestinationPhase { get; set; }
	}
	
	/// <summary>
	/// AutomationResourceSelector contains the information to select the resources to which an Automation is going to be applied.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutomationResourceSelector
	{
		
		/// <summary>
		/// Contains attributes about a target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targets")]
		public TargetAttribute[] Targets { get; set; }
	}
	
	/// <summary>
	/// Contains criteria for selecting Targets. Attributes provided must match the target resource in order for policy restrictions to apply. E.g. if id "prod" and labels "foo: bar" are given the target resource must match both that id and have that label in order to be selected.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TargetAttribute
	{
		
		/// <summary>
		/// ID of the `Target`. The value of this field could be one of the following: * The last segment of a target name. It only needs the ID to determine which target is being referred to * "*", all targets in a location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Target labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
	}
	
	/// <summary>
	/// Payload proto for "clouddeploy.googleapis.com/automation" Platform Log event that describes the Automation related events.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutomationEvent
	{
		
		/// <summary>
		/// The name of the `AutomationRun`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automation")]
		public string Automation { get; set; }
		
		/// <summary>
		/// Debug message for when there is an update on the AutomationRun. Provides further details about the resource creation or state change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Unique identifier of the `DeliveryPipeline`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pipelineUid")]
		public string PipelineUid { get; set; }
		
		/// <summary>
		/// Type of this notification, e.g. for a Pub/Sub failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<AutomationEventType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AutomationEventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_PUBSUB_NOTIFICATION_FAILURE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_RESOURCE_STATE_CHANGE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_PROCESS_ABORTED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_RESTRICTION_VIOLATED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_RESOURCE_DELETED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_ROLLOUT_UPDATE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_RENDER_STATUES_CHANGE = 7,
	}
	
	/// <summary>
	/// AutomationRolloutMetadata contains Automation-related actions that were performed on a rollout.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutomationRolloutMetadata
	{
		
		/// <summary>
		/// Output only. The IDs of the AutomationRuns initiated by an advance rollout rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="advanceAutomationRuns")]
		public string[] AdvanceAutomationRuns { get; set; }
		
		/// <summary>
		/// Output only. The ID of the AutomationRun initiated by a promote release rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promoteAutomationRun")]
		public string PromoteAutomationRun { get; set; }
		
		/// <summary>
		/// Output only. The IDs of the AutomationRuns initiated by a repair rollout rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repairAutomationRuns")]
		public string[] RepairAutomationRuns { get; set; }
	}
	
	/// <summary>
	/// An `AutomationRun` resource in the Cloud Deploy API. An `AutomationRun` represents an execution instance of an automation rule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutomationRun
	{
		
		/// <summary>
		/// Contains the information of an automated advance-rollout operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="advanceRolloutOperation")]
		public AdvanceRolloutOperation AdvanceRolloutOperation { get; set; }
		
		/// <summary>
		/// Output only. The ID of the automation that initiated the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automationId")]
		public string AutomationId { get; set; }
		
		/// <summary>
		/// An `Automation` resource in the Cloud Deploy API. An `Automation` enables the automation of manually driven actions for a Delivery Pipeline, which includes Release promotion among Targets, Rollout repair and Rollout deployment strategy advancement. The intention of Automation is to reduce manual intervention in the continuous delivery process.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automationSnapshot")]
		public Automation AutomationSnapshot { get; set; }
		
		/// <summary>
		/// Output only. Time at which the `AutomationRun` was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The weak etag of the `AutomationRun` resource. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Output only. Time the `AutomationRun` expires. An `AutomationRun` expires after 14 days from its creation date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expireTime")]
		public string ExpireTime { get; set; }
		
		/// <summary>
		/// Output only. Name of the `AutomationRun`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automationRuns/{automation_run}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Contains the information of an automated promote-release operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promoteReleaseOperation")]
		public PromoteReleaseOperation PromoteReleaseOperation { get; set; }
		
		/// <summary>
		/// Contains the information for an automated `repair rollout` operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repairRolloutOperation")]
		public RepairRolloutOperation RepairRolloutOperation { get; set; }
		
		/// <summary>
		/// Output only. The ID of the automation rule that initiated the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ruleId")]
		public string RuleId { get; set; }
		
		/// <summary>
		/// Output only. Email address of the user-managed IAM service account that performs the operations against Cloud Deploy resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
		
		/// <summary>
		/// Output only. Current state of the `AutomationRun`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<AutomationRunState> State { get; set; }
		
		/// <summary>
		/// Output only. Explains the current state of the `AutomationRun`. Present only when an explanation is needed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stateDescription")]
		public string StateDescription { get; set; }
		
		/// <summary>
		/// Output only. The ID of the target that represents the promotion stage that initiates the `AutomationRun`. The value of this field is the last segment of a target name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetId")]
		public string TargetId { get; set; }
		
		/// <summary>
		/// Output only. Time at which the automationRun was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// Output only. Earliest time the `AutomationRun` will attempt to resume. Wait-time is configured by `wait` in automation rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="waitUntilTime")]
		public string WaitUntilTime { get; set; }
	}
	
	/// <summary>
	/// Contains the information of an automated promote-release operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PromoteReleaseOperation
	{
		
		/// <summary>
		/// Output only. The starting phase of the rollout created by this operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phase")]
		public string Phase { get; set; }
		
		/// <summary>
		/// Output only. The name of the rollout that initiates the `AutomationRun`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rollout")]
		public string Rollout { get; set; }
		
		/// <summary>
		/// Output only. The ID of the target that represents the promotion stage to which the release will be promoted. The value of this field is the last segment of a target name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetId")]
		public string TargetId { get; set; }
		
		/// <summary>
		/// Output only. How long the operation will be paused.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait")]
		public string Wait { get; set; }
	}
	
	/// <summary>
	/// Contains the information for an automated `repair rollout` operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RepairRolloutOperation
	{
		
		/// <summary>
		/// Output only. The index of the current repair action in the repair sequence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currentRepairModeIndex")]
		public string CurrentRepairModeIndex { get; set; }
		
		/// <summary>
		/// Output only. The job ID for the Job to repair.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		/// <summary>
		/// Output only. The phase ID of the phase that includes the job being repaired.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phaseId")]
		public string PhaseId { get; set; }
		
		/// <summary>
		/// Output only. Records of the repair attempts. Each repair phase may have multiple retry attempts or single rollback attempt.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repairPhases")]
		public RepairPhase[] RepairPhases { get; set; }
		
		/// <summary>
		/// Output only. The name of the rollout that initiates the `AutomationRun`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rollout")]
		public string Rollout { get; set; }
	}
	
	/// <summary>
	/// RepairPhase tracks the repair attempts that have been made for each `RepairMode` specified in the `Automation` resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RepairPhase
	{
		
		/// <summary>
		/// RetryPhase contains the retry attempts and the metadata for initiating a new attempt.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retry")]
		public RetryPhase Retry { get; set; }
		
		/// <summary>
		/// RollbackAttempt represents an action of rolling back a Cloud Deploy 'Target'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rollback")]
		public RollbackAttempt Rollback { get; set; }
	}
	
	/// <summary>
	/// RetryPhase contains the retry attempts and the metadata for initiating a new attempt.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RetryPhase
	{
		
		/// <summary>
		/// Output only. Detail of a retry action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attempts")]
		public RetryAttempt[] Attempts { get; set; }
		
		/// <summary>
		/// Output only. The pattern of how the wait time of the retry attempt is calculated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backoffMode")]
		public RetryBackoffMode BackoffMode { get; set; }
		
		/// <summary>
		/// Output only. The job ID for the Job to retry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		/// <summary>
		/// Output only. The phase ID of the phase that includes the job being retried.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phaseId")]
		public string PhaseId { get; set; }
		
		/// <summary>
		/// Output only. The number of attempts that have been made.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalAttempts")]
		public string TotalAttempts { get; set; }
	}
	
	/// <summary>
	/// RetryAttempt represents an action of retrying the failed Cloud Deploy job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RetryAttempt
	{
		
		/// <summary>
		/// Output only. The index of this retry attempt.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attempt")]
		public string Attempt { get; set; }
		
		/// <summary>
		/// Output only. Valid state of this retry action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<RetryAttemptState> State { get; set; }
		
		/// <summary>
		/// Output only. Description of the state of the Retry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stateDesc")]
		public string StateDesc { get; set; }
		
		/// <summary>
		/// Output only. How long the operation will be paused.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait")]
		public string Wait { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RetryAttemptState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPAIR_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPAIR_STATE_SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPAIR_STATE_CANCELLED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPAIR_STATE_FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPAIR_STATE_IN_PROGRESS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPAIR_STATE_PENDING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPAIR_STATE_SKIPPED = 6,
	}
	
	/// <summary>
	/// RollbackAttempt represents an action of rolling back a Cloud Deploy 'Target'.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RollbackAttempt
	{
		
		/// <summary>
		/// Output only. The phase to which the rollout will be rolled back to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationPhase")]
		public string DestinationPhase { get; set; }
		
		/// <summary>
		/// Output only. ID of the rollback `Rollout` to create.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rolloutId")]
		public string RolloutId { get; set; }
		
		/// <summary>
		/// Output only. Valid state of this rollback action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public RetryAttemptState State { get; set; }
		
		/// <summary>
		/// Output only. Description of the state of the Rollback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stateDesc")]
		public string StateDesc { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AutomationRunState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 5,
	}
	
	/// <summary>
	/// Payload proto for "clouddeploy.googleapis.com/automation_run" Platform Log event that describes the AutomationRun related events.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutomationRunEvent
	{
		
		/// <summary>
		/// Identifier of the `Automation`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automationId")]
		public string AutomationId { get; set; }
		
		/// <summary>
		/// The name of the `AutomationRun`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automationRun")]
		public string AutomationRun { get; set; }
		
		/// <summary>
		/// ID of the `Target` to which the `AutomationRun` is created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationTargetId")]
		public string DestinationTargetId { get; set; }
		
		/// <summary>
		/// Debug message for when there is an update on the AutomationRun. Provides further details about the resource creation or state change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Unique identifier of the `DeliveryPipeline`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pipelineUid")]
		public string PipelineUid { get; set; }
		
		/// <summary>
		/// Identifier of the `Automation` rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ruleId")]
		public string RuleId { get; set; }
		
		/// <summary>
		/// Type of this notification, e.g. for a Pub/Sub failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AutomationEventType Type { get; set; }
	}
	
	/// <summary>
	/// Associates `members`, or principals, with a `role`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Binding
	{
		
		/// <summary>
		/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public Expr Condition { get; set; }
		
		/// <summary>
		/// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public string[] Members { get; set; }
		
		/// <summary>
		/// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
	}
	
	/// <summary>
	/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Expr
	{
		
		/// <summary>
		/// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Textual representation of an expression in Common Expression Language syntax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expression")]
		public string Expression { get; set; }
		
		/// <summary>
		/// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Description of an a image to use during Skaffold rendering.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildArtifact
	{
		
		/// <summary>
		/// Image name in Skaffold configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		/// <summary>
		/// Image tag to use. This will generally be the full path to an image, such as "gcr.io/my-project/busybox:1.2.3" or "gcr.io/my-project/busybox@sha256:abc123".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tag")]
		public string Tag { get; set; }
	}
	
	/// <summary>
	/// Canary represents the canary deployment strategy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Canary
	{
		
		/// <summary>
		/// CanaryDeployment represents the canary deployment configuration
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canaryDeployment")]
		public CanaryDeployment CanaryDeployment { get; set; }
		
		/// <summary>
		/// CustomCanaryDeployment represents the custom canary deployment configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customCanaryDeployment")]
		public CustomCanaryDeployment CustomCanaryDeployment { get; set; }
		
		/// <summary>
		/// RuntimeConfig contains the runtime specific configurations for a deployment strategy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtimeConfig")]
		public RuntimeConfig RuntimeConfig { get; set; }
	}
	
	/// <summary>
	/// CanaryDeployment represents the canary deployment configuration
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CanaryDeployment
	{
		
		/// <summary>
		/// Required. The percentage based deployments that will occur as a part of a `Rollout`. List is expected in ascending order and each integer n is 0 <= n < 100.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="percentages")]
		public int[] Percentages { get; set; }
		
		/// <summary>
		/// Postdeploy contains the postdeploy job configuration information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postdeploy")]
		public Postdeploy Postdeploy { get; set; }
		
		/// <summary>
		/// Predeploy contains the predeploy job configuration information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predeploy")]
		public Predeploy Predeploy { get; set; }
		
		/// <summary>
		/// Whether to run verify tests after each percentage deployment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verify")]
		public System.Nullable<System.Boolean> Verify { get; set; }
	}
	
	/// <summary>
	/// Postdeploy contains the postdeploy job configuration information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Postdeploy
	{
		
		/// <summary>
		/// Optional. A sequence of Skaffold custom actions to invoke during execution of the postdeploy job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actions")]
		public string[] Actions { get; set; }
	}
	
	/// <summary>
	/// Predeploy contains the predeploy job configuration information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Predeploy
	{
		
		/// <summary>
		/// Optional. A sequence of Skaffold custom actions to invoke during execution of the predeploy job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actions")]
		public string[] Actions { get; set; }
	}
	
	/// <summary>
	/// CustomCanaryDeployment represents the custom canary deployment configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomCanaryDeployment
	{
		
		/// <summary>
		/// Required. Configuration for each phase in the canary deployment in the order executed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phaseConfigs")]
		public PhaseConfig[] PhaseConfigs { get; set; }
	}
	
	/// <summary>
	/// PhaseConfig represents the configuration for a phase in the custom canary deployment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhaseConfig
	{
		
		/// <summary>
		/// Required. Percentage deployment for the phase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="percentage")]
		public System.Nullable<System.Int32> Percentage { get; set; }
		
		/// <summary>
		/// Required. The ID to assign to the `Rollout` phase. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phaseId")]
		public string PhaseId { get; set; }
		
		/// <summary>
		/// Postdeploy contains the postdeploy job configuration information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postdeploy")]
		public Postdeploy Postdeploy { get; set; }
		
		/// <summary>
		/// Predeploy contains the predeploy job configuration information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predeploy")]
		public Predeploy Predeploy { get; set; }
		
		/// <summary>
		/// Skaffold profiles to use when rendering the manifest for this phase. These are in addition to the profiles list specified in the `DeliveryPipeline` stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profiles")]
		public string[] Profiles { get; set; }
		
		/// <summary>
		/// Whether to run verify tests after the deployment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verify")]
		public System.Nullable<System.Boolean> Verify { get; set; }
	}
	
	/// <summary>
	/// RuntimeConfig contains the runtime specific configurations for a deployment strategy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RuntimeConfig
	{
		
		/// <summary>
		/// CloudRunConfig contains the Cloud Run runtime configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudRun")]
		public CloudRunConfig CloudRun { get; set; }
		
		/// <summary>
		/// KubernetesConfig contains the Kubernetes runtime configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kubernetes")]
		public KubernetesConfig Kubernetes { get; set; }
	}
	
	/// <summary>
	/// CloudRunConfig contains the Cloud Run runtime configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudRunConfig
	{
		
		/// <summary>
		/// Whether Cloud Deploy should update the traffic stanza in a Cloud Run Service on the user's behalf to facilitate traffic splitting. This is required to be true for CanaryDeployments, but optional for CustomCanaryDeployments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automaticTrafficControl")]
		public System.Nullable<System.Boolean> AutomaticTrafficControl { get; set; }
		
		/// <summary>
		/// Optional. A list of tags that are added to the canary revision while the canary deployment is in progress.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canaryRevisionTags")]
		public string[] CanaryRevisionTags { get; set; }
		
		/// <summary>
		/// Optional. A list of tags that are added to the prior revision while the canary deployment is in progress.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priorRevisionTags")]
		public string[] PriorRevisionTags { get; set; }
		
		/// <summary>
		/// Optional. A list of tags that are added to the final stable revision after the canary deployment is completed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stableRevisionTags")]
		public string[] StableRevisionTags { get; set; }
	}
	
	/// <summary>
	/// KubernetesConfig contains the Kubernetes runtime configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KubernetesConfig
	{
		
		/// <summary>
		/// Information about the Kubernetes Gateway API service mesh configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gatewayServiceMesh")]
		public GatewayServiceMesh GatewayServiceMesh { get; set; }
		
		/// <summary>
		/// Information about the Kubernetes Service networking configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceNetworking")]
		public ServiceNetworking ServiceNetworking { get; set; }
	}
	
	/// <summary>
	/// Information about the Kubernetes Gateway API service mesh configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GatewayServiceMesh
	{
		
		/// <summary>
		/// Required. Name of the Kubernetes Deployment whose traffic is managed by the specified HTTPRoute and Service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployment")]
		public string Deployment { get; set; }
		
		/// <summary>
		/// Required. Name of the Gateway API HTTPRoute.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="httpRoute")]
		public string HttpRoute { get; set; }
		
		/// <summary>
		/// Optional. The time to wait for route updates to propagate. The maximum configurable time is 3 hours, in seconds format. If unspecified, there is no wait time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routeUpdateWaitTime")]
		public string RouteUpdateWaitTime { get; set; }
		
		/// <summary>
		/// Required. Name of the Kubernetes Service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
	}
	
	/// <summary>
	/// Information about the Kubernetes Service networking configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceNetworking
	{
		
		/// <summary>
		/// Required. Name of the Kubernetes Deployment whose traffic is managed by the specified Service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployment")]
		public string Deployment { get; set; }
		
		/// <summary>
		/// Optional. Whether to disable Pod overprovisioning. If Pod overprovisioning is disabled then Cloud Deploy will limit the number of total Pods used for the deployment strategy to the number of Pods the Deployment has on the cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disablePodOverprovisioning")]
		public System.Nullable<System.Boolean> DisablePodOverprovisioning { get; set; }
		
		/// <summary>
		/// Required. Name of the Kubernetes Service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
	}
	
	/// <summary>
	/// The request object used by `CancelAutomationRun`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelAutomationRunRequest
	{
	}
	
	/// <summary>
	/// The response object from `CancelAutomationRun`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelAutomationRunResponse
	{
	}
	
	/// <summary>
	/// The request message for Operations.CancelOperation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelOperationRequest
	{
	}
	
	/// <summary>
	/// The request object used by `CancelRollout`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelRolloutRequest
	{
	}
	
	/// <summary>
	/// The response object from `CancelRollout`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelRolloutResponse
	{
	}
	
	/// <summary>
	/// ChildRollouts job composition
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChildRolloutJobs
	{
		
		/// <summary>
		/// Output only. List of AdvanceChildRolloutJobs
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="advanceRolloutJobs")]
		public Job[] AdvanceRolloutJobs { get; set; }
		
		/// <summary>
		/// Output only. List of CreateChildRolloutJobs
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createRolloutJobs")]
		public Job[] CreateRolloutJobs { get; set; }
	}
	
	/// <summary>
	/// Job represents an operation for a `Rollout`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Job
	{
		
		/// <summary>
		/// An advanceChildRollout Job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="advanceChildRolloutJob")]
		public AdvanceChildRolloutJob AdvanceChildRolloutJob { get; set; }
		
		/// <summary>
		/// A createChildRollout Job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createChildRolloutJob")]
		public CreateChildRolloutJob CreateChildRolloutJob { get; set; }
		
		/// <summary>
		/// A deploy Job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployJob")]
		public DeployJob DeployJob { get; set; }
		
		/// <summary>
		/// Output only. The ID of the Job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Output only. The name of the `JobRun` responsible for the most recent invocation of this Job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobRun")]
		public string JobRun { get; set; }
		
		/// <summary>
		/// A postdeploy Job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postdeployJob")]
		public PostdeployJob PostdeployJob { get; set; }
		
		/// <summary>
		/// A predeploy Job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predeployJob")]
		public PredeployJob PredeployJob { get; set; }
		
		/// <summary>
		/// Output only. Additional information on why the Job was skipped, if available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skipMessage")]
		public string SkipMessage { get; set; }
		
		/// <summary>
		/// Output only. The current state of the Job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<JobState> State { get; set; }
		
		/// <summary>
		/// A verify Job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verifyJob")]
		public VerifyJob VerifyJob { get; set; }
	}
	
	/// <summary>
	/// A createChildRollout Job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateChildRolloutJob
	{
	}
	
	/// <summary>
	/// A deploy Job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeployJob
	{
	}
	
	/// <summary>
	/// A postdeploy Job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PostdeployJob
	{
		
		/// <summary>
		/// Output only. The custom actions that the postdeploy Job executes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actions")]
		public string[] Actions { get; set; }
	}
	
	/// <summary>
	/// A predeploy Job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PredeployJob
	{
		
		/// <summary>
		/// Output only. The custom actions that the predeploy Job executes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actions")]
		public string[] Actions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JobState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ABORTED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKIPPED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IGNORED = 8,
	}
	
	/// <summary>
	/// A verify Job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VerifyJob
	{
	}
	
	/// <summary>
	/// Information specifying where to deploy a Cloud Run Service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudRunLocation
	{
		
		/// <summary>
		/// Required. The location for the Cloud Run Service. Format must be `projects/{project}/locations/{location}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
	}
	
	/// <summary>
	/// CloudRunMetadata contains information from a Cloud Run deployment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudRunMetadata
	{
		
		/// <summary>
		/// Output only. The name of the Cloud Run job that is associated with a `Rollout`. Format is `projects/{project}/locations/{location}/jobs/{job_name}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="job")]
		public string Job { get; set; }
		
		/// <summary>
		/// Output only. The Cloud Run Revision id associated with a `Rollout`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public string Revision { get; set; }
		
		/// <summary>
		/// Output only. The name of the Cloud Run Service that is associated with a `Rollout`. Format is `projects/{project}/locations/{location}/services/{service}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// Output only. The Cloud Run Service urls that are associated with a `Rollout`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceUrls")]
		public string[] ServiceUrls { get; set; }
	}
	
	/// <summary>
	/// CloudRunRenderMetadata contains Cloud Run information associated with a `Release` render.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudRunRenderMetadata
	{
		
		/// <summary>
		/// Output only. The name of the Cloud Run Service in the rendered manifest. Format is `projects/{project}/locations/{location}/services/{service}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
	}
	
	/// <summary>
	/// Service-wide configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Config
	{
		
		/// <summary>
		/// Default Skaffold version that is assigned when a Release is created without specifying a Skaffold version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultSkaffoldVersion")]
		public string DefaultSkaffoldVersion { get; set; }
		
		/// <summary>
		/// Name of the configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// All supported versions of Skaffold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportedVersions")]
		public SkaffoldVersion[] SupportedVersions { get; set; }
	}
	
	/// <summary>
	/// Details of a supported Skaffold version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SkaffoldVersion
	{
		
		/// <summary>
		/// The time at which this version of Skaffold will enter maintenance mode.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maintenanceModeTime")]
		public string MaintenanceModeTime { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportEndDate")]
		public Date SupportEndDate { get; set; }
		
		/// <summary>
		/// The time at which this version of Skaffold will no longer be supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportExpirationTime")]
		public string SupportExpirationTime { get; set; }
		
		/// <summary>
		/// Release version number. For example, "1.20.3".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Date
	{
		
		/// <summary>
		/// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="day")]
		public System.Nullable<System.Int32> Day { get; set; }
		
		/// <summary>
		/// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="month")]
		public System.Nullable<System.Int32> Month { get; set; }
		
		/// <summary>
		/// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="year")]
		public System.Nullable<System.Int32> Year { get; set; }
	}
	
	/// <summary>
	/// CreateChildRolloutJobRun contains information specific to a createChildRollout `JobRun`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateChildRolloutJobRun
	{
		
		/// <summary>
		/// Output only. Name of the `ChildRollout`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/a-z{0,62}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rollout")]
		public string Rollout { get; set; }
		
		/// <summary>
		/// Output only. The ID of the childRollout Phase initiated by this JobRun.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rolloutPhaseId")]
		public string RolloutPhaseId { get; set; }
	}
	
	/// <summary>
	/// CustomMetadata contains information from a user defined operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomMetadata
	{
		
		/// <summary>
		/// Output only. Key-value pairs provided by the user defined operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public System.Collections.Generic.Dictionary<string, string> Values { get; set; }
	}
	
	/// <summary>
	/// Information specifying a Custom Target.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomTarget
	{
		
		/// <summary>
		/// Required. The name of the CustomTargetType. Format must be `projects/{project}/locations/{location}/customTargetTypes/{custom_target_type}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customTargetType")]
		public string CustomTargetType { get; set; }
	}
	
	/// <summary>
	/// CustomTargetDeployMetadata contains information from a Custom Target deploy operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomTargetDeployMetadata
	{
		
		/// <summary>
		/// Output only. Skip message provided in the results of a custom deploy operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skipMessage")]
		public string SkipMessage { get; set; }
	}
	
	/// <summary>
	/// CustomTargetSkaffoldActions represents the `CustomTargetType` configuration using Skaffold custom actions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomTargetSkaffoldActions
	{
		
		/// <summary>
		/// Required. The Skaffold custom action responsible for deploy operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployAction")]
		public string DeployAction { get; set; }
		
		/// <summary>
		/// Optional. List of Skaffold modules Cloud Deploy will include in the Skaffold Config as required before performing diagnose.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="includeSkaffoldModules")]
		public SkaffoldModules[] IncludeSkaffoldModules { get; set; }
		
		/// <summary>
		/// Optional. The Skaffold custom action responsible for render operations. If not provided then Cloud Deploy will perform the render operations via `skaffold render`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="renderAction")]
		public string RenderAction { get; set; }
	}
	
	/// <summary>
	/// Skaffold Config modules and their remote source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SkaffoldModules
	{
		
		/// <summary>
		/// Optional. The Skaffold Config modules to use from the specified source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="configs")]
		public string[] Configs { get; set; }
		
		/// <summary>
		/// Git repository containing Skaffold Config modules.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="git")]
		public SkaffoldGitSource Git { get; set; }
		
		/// <summary>
		/// Cloud Storage bucket containing Skaffold Config modules.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="googleCloudStorage")]
		public SkaffoldGCSSource GoogleCloudStorage { get; set; }
	}
	
	/// <summary>
	/// Git repository containing Skaffold Config modules.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SkaffoldGitSource
	{
		
		/// <summary>
		/// Optional. Relative path from the repository root to the Skaffold file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Optional. Git ref the package should be cloned from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// Required. Git repository the package should be cloned from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repo")]
		public string Repo { get; set; }
	}
	
	/// <summary>
	/// Cloud Storage bucket containing Skaffold Config modules.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SkaffoldGCSSource
	{
		
		/// <summary>
		/// Optional. Relative path from the source to the Skaffold file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Required. Cloud Storage source paths to copy recursively. For example, providing "gs://my-bucket/dir/configs/*" will result in Skaffold copying all files within the "dir/configs" directory in the bucket "my-bucket".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
	}
	
	/// <summary>
	/// A `CustomTargetType` resource in the Cloud Deploy API. A `CustomTargetType` defines a type of custom target that can be referenced in a `Target` in order to facilitate deploying to a runtime that does not have a 1P integration with Cloud Deploy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomTargetType
	{
		
		/// <summary>
		/// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotations")]
		public System.Collections.Generic.Dictionary<string, string> Annotations { get; set; }
		
		/// <summary>
		/// Output only. Time at which the `CustomTargetType` was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// CustomTargetSkaffoldActions represents the `CustomTargetType` configuration using Skaffold custom actions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customActions")]
		public CustomTargetSkaffoldActions CustomActions { get; set; }
		
		/// <summary>
		/// Output only. Resource id of the `CustomTargetType`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customTargetTypeId")]
		public string CustomTargetTypeId { get; set; }
		
		/// <summary>
		/// Optional. Description of the `CustomTargetType`. Max length is 255 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Optional. Name of the `CustomTargetType`. Format is `projects/{project}/locations/{location}/customTargetTypes/a-z{0,62}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Unique identifier of the `CustomTargetType`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
		
		/// <summary>
		/// Output only. Most recent time at which the `CustomTargetType` was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Execution using the default Cloud Build pool.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultPool
	{
		
		/// <summary>
		/// Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket ("gs://my-bucket") or a path within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default bucket located in the same region will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artifactStorage")]
		public string ArtifactStorage { get; set; }
		
		/// <summary>
		/// Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
	}
	
	/// <summary>
	/// A `DeliveryPipeline` resource in the Cloud Deploy API. A `DeliveryPipeline` defines a pipeline through which a Skaffold configuration can progress.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeliveryPipeline
	{
		
		/// <summary>
		/// User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotations")]
		public System.Collections.Generic.Dictionary<string, string> Annotations { get; set; }
		
		/// <summary>
		/// PipelineCondition contains all conditions relevant to a Delivery Pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public PipelineCondition Condition { get; set; }
		
		/// <summary>
		/// Output only. Time at which the pipeline was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Description of the `DeliveryPipeline`. Max length is 255 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Optional. Name of the `DeliveryPipeline`. Format is `projects/{project}/locations/{location}/deliveryPipelines/a-z{0,62}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// SerialPipeline defines a sequential set of stages for a `DeliveryPipeline`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serialPipeline")]
		public SerialPipeline SerialPipeline { get; set; }
		
		/// <summary>
		/// When suspended, no new releases or rollouts can be created, but in-progress ones will complete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suspended")]
		public System.Nullable<System.Boolean> Suspended { get; set; }
		
		/// <summary>
		/// Output only. Unique identifier of the `DeliveryPipeline`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
		
		/// <summary>
		/// Output only. Most recent time at which the pipeline was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// PipelineCondition contains all conditions relevant to a Delivery Pipeline.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PipelineCondition
	{
		
		/// <summary>
		/// PipelineReadyCondition contains information around the status of the Pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pipelineReadyCondition")]
		public PipelineReadyCondition PipelineReadyCondition { get; set; }
		
		/// <summary>
		/// `TargetsPresentCondition` contains information on any Targets referenced in the Delivery Pipeline that do not actually exist.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetsPresentCondition")]
		public TargetsPresentCondition TargetsPresentCondition { get; set; }
		
		/// <summary>
		/// TargetsTypeCondition contains information on whether the Targets defined in the Delivery Pipeline are of the same type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetsTypeCondition")]
		public TargetsTypeCondition TargetsTypeCondition { get; set; }
	}
	
	/// <summary>
	/// PipelineReadyCondition contains information around the status of the Pipeline.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PipelineReadyCondition
	{
		
		/// <summary>
		/// True if the Pipeline is in a valid state. Otherwise at least one condition in `PipelineCondition` is in an invalid state. Iterate over those conditions and see which condition(s) has status = false to find out what is wrong with the Pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Boolean> Status { get; set; }
		
		/// <summary>
		/// Last time the condition was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// TargetsTypeCondition contains information on whether the Targets defined in the Delivery Pipeline are of the same type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TargetsTypeCondition
	{
		
		/// <summary>
		/// Human readable error message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorDetails")]
		public string ErrorDetails { get; set; }
		
		/// <summary>
		/// True if the targets are all a comparable type. For example this is true if all targets are GKE clusters. This is false if some targets are Cloud Run targets and others are GKE clusters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Boolean> Status { get; set; }
	}
	
	/// <summary>
	/// SerialPipeline defines a sequential set of stages for a `DeliveryPipeline`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SerialPipeline
	{
		
		/// <summary>
		/// Each stage specifies configuration for a `Target`. The ordering of this list defines the promotion flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stages")]
		public Stage[] Stages { get; set; }
	}
	
	/// <summary>
	/// Stage specifies a location to which to deploy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Stage
	{
		
		/// <summary>
		/// Optional. The deploy parameters to use for the target in this stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployParameters")]
		public DeployParameters[] DeployParameters { get; set; }
		
		/// <summary>
		/// Skaffold profiles to use when rendering the manifest for this stage's `Target`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profiles")]
		public string[] Profiles { get; set; }
		
		/// <summary>
		/// Strategy contains deployment strategy information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="strategy")]
		public Strategy Strategy { get; set; }
		
		/// <summary>
		/// The target_id to which this stage points. This field refers exclusively to the last segment of a target name. For example, this field would just be `my-target` (rather than `projects/project/locations/location/targets/my-target`). The location of the `Target` is inferred to be the same as the location of the `DeliveryPipeline` that contains this `Stage`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetId")]
		public string TargetId { get; set; }
	}
	
	/// <summary>
	/// DeployParameters contains deploy parameters information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeployParameters
	{
		
		/// <summary>
		/// Optional. Deploy parameters are applied to targets with match labels. If unspecified, deploy parameters are applied to all targets (including child targets of a multi-target).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="matchTargetLabels")]
		public System.Collections.Generic.Dictionary<string, string> MatchTargetLabels { get; set; }
		
		/// <summary>
		/// Required. Values are deploy parameters in key-value pairs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public System.Collections.Generic.Dictionary<string, string> Values { get; set; }
	}
	
	/// <summary>
	/// Strategy contains deployment strategy information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Strategy
	{
		
		/// <summary>
		/// Canary represents the canary deployment strategy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canary")]
		public Canary Canary { get; set; }
		
		/// <summary>
		/// Standard represents the standard deployment strategy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="standard")]
		public Standard Standard { get; set; }
	}
	
	/// <summary>
	/// Standard represents the standard deployment strategy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Standard
	{
		
		/// <summary>
		/// Postdeploy contains the postdeploy job configuration information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postdeploy")]
		public Postdeploy Postdeploy { get; set; }
		
		/// <summary>
		/// Predeploy contains the predeploy job configuration information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predeploy")]
		public Predeploy Predeploy { get; set; }
		
		/// <summary>
		/// Whether to verify a deployment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verify")]
		public System.Nullable<System.Boolean> Verify { get; set; }
	}
	
	/// <summary>
	/// Payload proto for "clouddeploy.googleapis.com/deliverypipeline_notification" Platform Log event that describes the failure to send delivery pipeline status change Pub/Sub notification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeliveryPipelineNotificationEvent
	{
		
		/// <summary>
		/// The name of the `Delivery Pipeline`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deliveryPipeline")]
		public string DeliveryPipeline { get; set; }
		
		/// <summary>
		/// Debug message for when a notification fails to send.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Type of this notification, e.g. for a Pub/Sub failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AutomationEventType Type { get; set; }
	}
	
	/// <summary>
	/// The artifacts produced by a deploy operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeployArtifact
	{
		
		/// <summary>
		/// Output only. URI of a directory containing the artifacts. All paths are relative to this location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artifactUri")]
		public string ArtifactUri { get; set; }
		
		/// <summary>
		/// Output only. File paths of the manifests applied during the deploy operation relative to the URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manifestPaths")]
		public string[] ManifestPaths { get; set; }
	}
	
	/// <summary>
	/// DeployJobRun contains information specific to a deploy `JobRun`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeployJobRun
	{
		
		/// <summary>
		/// The artifacts produced by a deploy operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artifact")]
		public DeployArtifact Artifact { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the Cloud Build `Build` object that is used to deploy. Format is `projects/{project}/locations/{location}/builds/{build}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="build")]
		public string Build { get; set; }
		
		/// <summary>
		/// Output only. The reason the deploy failed. This will always be unspecified while the deploy is in progress or if it succeeded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureCause")]
		public System.Nullable<DeployJobRunFailureCause> FailureCause { get; set; }
		
		/// <summary>
		/// Output only. Additional information about the deploy failure, if available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureMessage")]
		public string FailureMessage { get; set; }
		
		/// <summary>
		/// DeployJobRunMetadata surfaces information associated with a `DeployJobRun` to the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public DeployJobRunMetadata Metadata { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeployJobRunFailureCause
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILURE_CAUSE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_BUILD_UNAVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTION_FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEADLINE_EXCEEDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MISSING_RESOURCES_FOR_CANARY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_BUILD_REQUEST_FAILED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPLOY_FEATURE_NOT_SUPPORTED = 6,
	}
	
	/// <summary>
	/// DeployJobRunMetadata surfaces information associated with a `DeployJobRun` to the user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeployJobRunMetadata
	{
		
		/// <summary>
		/// CloudRunMetadata contains information from a Cloud Run deployment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudRun")]
		public CloudRunMetadata CloudRun { get; set; }
		
		/// <summary>
		/// CustomMetadata contains information from a user defined operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom")]
		public CustomMetadata Custom { get; set; }
		
		/// <summary>
		/// CustomTargetDeployMetadata contains information from a Custom Target deploy operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customTarget")]
		public CustomTargetDeployMetadata CustomTarget { get; set; }
	}
	
	/// <summary>
	/// Deployment job composition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeploymentJobs
	{
		
		/// <summary>
		/// Job represents an operation for a `Rollout`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployJob")]
		public Job DeployJob { get; set; }
		
		/// <summary>
		/// Job represents an operation for a `Rollout`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postdeployJob")]
		public Job PostdeployJob { get; set; }
		
		/// <summary>
		/// Job represents an operation for a `Rollout`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predeployJob")]
		public Job PredeployJob { get; set; }
		
		/// <summary>
		/// Job represents an operation for a `Rollout`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verifyJob")]
		public Job VerifyJob { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Empty
	{
	}
	
	/// <summary>
	/// Configuration of the environment to use when calling Skaffold.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExecutionConfig
	{
		
		/// <summary>
		/// Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket ("gs://my-bucket") or a path within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default bucket located in the same region will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artifactStorage")]
		public string ArtifactStorage { get; set; }
		
		/// <summary>
		/// Execution using the default Cloud Build pool.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultPool")]
		public DefaultPool DefaultPool { get; set; }
		
		/// <summary>
		/// Optional. Execution timeout for a Cloud Build Execution. This must be between 10m and 24h in seconds format. If unspecified, a default timeout of 1h is used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executionTimeout")]
		public string ExecutionTimeout { get; set; }
		
		/// <summary>
		/// Execution using a private Cloud Build pool.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="privatePool")]
		public PrivatePool PrivatePool { get; set; }
		
		/// <summary>
		/// Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) is used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
		
		/// <summary>
		/// Required. Usages when this configuration should be applied.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usages")]
		public string[] Usages { get; set; }
		
		/// <summary>
		/// Optional. The resource name of the `WorkerPool`, with the format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. If this optional field is unspecified, the default Cloud Build pool will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerPool")]
		public string WorkerPool { get; set; }
	}
	
	/// <summary>
	/// Execution using a private Cloud Build pool.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PrivatePool
	{
		
		/// <summary>
		/// Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket ("gs://my-bucket") or a path within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default bucket located in the same region will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artifactStorage")]
		public string ArtifactStorage { get; set; }
		
		/// <summary>
		/// Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
		
		/// <summary>
		/// Required. Resource name of the Cloud Build worker pool to use. The format is `projects/{project}/locations/{location}/workerPools/{pool}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerPool")]
		public string WorkerPool { get; set; }
	}
	
	/// <summary>
	/// Information specifying a GKE Cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GkeCluster
	{
		
		/// <summary>
		/// Information specifying a GKE Cluster. Format is `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cluster")]
		public string Cluster { get; set; }
		
		/// <summary>
		/// Optional. If true, `cluster` is accessed using the private IP address of the control plane endpoint. Otherwise, the default IP address of the control plane endpoint is used. The default IP address is the private IP address for clusters with private control-plane endpoints and the public IP address otherwise. Only specify this option when `cluster` is a [private GKE cluster](https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="internalIp")]
		public System.Nullable<System.Boolean> InternalIp { get; set; }
	}
	
	/// <summary>
	/// The request object used by `IgnoreJob`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IgnoreJobRequest
	{
		
		/// <summary>
		/// Required. The job ID for the Job to ignore.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		/// <summary>
		/// Required. The phase ID the Job to ignore belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phaseId")]
		public string PhaseId { get; set; }
	}
	
	/// <summary>
	/// The response object from `IgnoreJob`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IgnoreJobResponse
	{
	}
	
	/// <summary>
	/// A `JobRun` resource in the Cloud Deploy API. A `JobRun` contains information of a single `Rollout` job evaluation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobRun
	{
		
		/// <summary>
		/// AdvanceChildRolloutJobRun contains information specific to a advanceChildRollout `JobRun`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="advanceChildRolloutJobRun")]
		public AdvanceChildRolloutJobRun AdvanceChildRolloutJobRun { get; set; }
		
		/// <summary>
		/// CreateChildRolloutJobRun contains information specific to a createChildRollout `JobRun`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createChildRolloutJobRun")]
		public CreateChildRolloutJobRun CreateChildRolloutJobRun { get; set; }
		
		/// <summary>
		/// Output only. Time at which the `JobRun` was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// DeployJobRun contains information specific to a deploy `JobRun`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployJobRun")]
		public DeployJobRun DeployJobRun { get; set; }
		
		/// <summary>
		/// Output only. Time at which the `JobRun` ended.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Output only. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Output only. ID of the `Rollout` job this `JobRun` corresponds to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		/// <summary>
		/// Optional. Name of the `JobRun`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{releases}/rollouts/{rollouts}/jobRuns/{uuid}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. ID of the `Rollout` phase this `JobRun` belongs in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phaseId")]
		public string PhaseId { get; set; }
		
		/// <summary>
		/// PostdeployJobRun contains information specific to a postdeploy `JobRun`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postdeployJobRun")]
		public PostdeployJobRun PostdeployJobRun { get; set; }
		
		/// <summary>
		/// PredeployJobRun contains information specific to a predeploy `JobRun`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predeployJobRun")]
		public PredeployJobRun PredeployJobRun { get; set; }
		
		/// <summary>
		/// Output only. Time at which the `JobRun` was started.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Output only. The current state of the `JobRun`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<JobRunState> State { get; set; }
		
		/// <summary>
		/// Output only. Unique identifier of the `JobRun`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
		
		/// <summary>
		/// VerifyJobRun contains information specific to a verify `JobRun`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verifyJobRun")]
		public VerifyJobRun VerifyJobRun { get; set; }
	}
	
	/// <summary>
	/// PostdeployJobRun contains information specific to a postdeploy `JobRun`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PostdeployJobRun
	{
		
		/// <summary>
		/// Output only. The resource name of the Cloud Build `Build` object that is used to execute the custom actions associated with the postdeploy Job. Format is `projects/{project}/locations/{location}/builds/{build}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="build")]
		public string Build { get; set; }
		
		/// <summary>
		/// Output only. The reason the postdeploy failed. This will always be unspecified while the postdeploy is in progress or if it succeeded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureCause")]
		public System.Nullable<PostdeployJobRunFailureCause> FailureCause { get; set; }
		
		/// <summary>
		/// Output only. Additional information about the postdeploy failure, if available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureMessage")]
		public string FailureMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostdeployJobRunFailureCause
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILURE_CAUSE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_BUILD_UNAVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTION_FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEADLINE_EXCEEDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_BUILD_REQUEST_FAILED = 4,
	}
	
	/// <summary>
	/// PredeployJobRun contains information specific to a predeploy `JobRun`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PredeployJobRun
	{
		
		/// <summary>
		/// Output only. The resource name of the Cloud Build `Build` object that is used to execute the custom actions associated with the predeploy Job. Format is `projects/{project}/locations/{location}/builds/{build}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="build")]
		public string Build { get; set; }
		
		/// <summary>
		/// Output only. The reason the predeploy failed. This will always be unspecified while the predeploy is in progress or if it succeeded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureCause")]
		public PostdeployJobRunFailureCause FailureCause { get; set; }
		
		/// <summary>
		/// Output only. Additional information about the predeploy failure, if available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureMessage")]
		public string FailureMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JobRunState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATED = 5,
	}
	
	/// <summary>
	/// VerifyJobRun contains information specific to a verify `JobRun`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VerifyJobRun
	{
		
		/// <summary>
		/// Output only. URI of a directory containing the verify artifacts. This contains the Skaffold event log.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artifactUri")]
		public string ArtifactUri { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the Cloud Build `Build` object that is used to verify. Format is `projects/{project}/locations/{location}/builds/{build}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="build")]
		public string Build { get; set; }
		
		/// <summary>
		/// Output only. File path of the Skaffold event log relative to the artifact URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventLogPath")]
		public string EventLogPath { get; set; }
		
		/// <summary>
		/// Output only. The reason the verify failed. This will always be unspecified while the verify is in progress or if it succeeded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureCause")]
		public System.Nullable<VerifyJobRunFailureCause> FailureCause { get; set; }
		
		/// <summary>
		/// Output only. Additional information about the verify failure, if available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureMessage")]
		public string FailureMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VerifyJobRunFailureCause
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILURE_CAUSE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_BUILD_UNAVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTION_FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEADLINE_EXCEEDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERIFICATION_CONFIG_NOT_FOUND = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_BUILD_REQUEST_FAILED = 5,
	}
	
	/// <summary>
	/// Payload proto for "clouddeploy.googleapis.com/jobrun_notification" Platform Log event that describes the failure to send JobRun resource update Pub/Sub notification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobRunNotificationEvent
	{
		
		/// <summary>
		/// The name of the `JobRun`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobRun")]
		public string JobRun { get; set; }
		
		/// <summary>
		/// Debug message for when a notification fails to send.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Unique identifier of the `DeliveryPipeline`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pipelineUid")]
		public string PipelineUid { get; set; }
		
		/// <summary>
		/// Unique identifier of the `Release`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="releaseUid")]
		public string ReleaseUid { get; set; }
		
		/// <summary>
		/// Unique identifier of the `Rollout`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rolloutUid")]
		public string RolloutUid { get; set; }
		
		/// <summary>
		/// ID of the `Target`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetId")]
		public string TargetId { get; set; }
		
		/// <summary>
		/// Type of this notification, e.g. for a Pub/Sub failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AutomationEventType Type { get; set; }
	}
	
	/// <summary>
	/// The response object from `ListAutomationRuns`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAutomationRunsResponse
	{
		
		/// <summary>
		/// The `AutomationRuns` objects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automationRuns")]
		public AutomationRun[] AutomationRuns { get; set; }
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Locations that could not be reached.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unreachable")]
		public string[] Unreachable { get; set; }
	}
	
	/// <summary>
	/// The response object from `ListAutomations`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAutomationsResponse
	{
		
		/// <summary>
		/// The `Automation` objects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automations")]
		public Automation[] Automations { get; set; }
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Locations that could not be reached.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unreachable")]
		public string[] Unreachable { get; set; }
	}
	
	/// <summary>
	/// The response object from `ListCustomTargetTypes.`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListCustomTargetTypesResponse
	{
		
		/// <summary>
		/// The `CustomTargetType` objects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customTargetTypes")]
		public CustomTargetType[] CustomTargetTypes { get; set; }
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Locations that could not be reached.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unreachable")]
		public string[] Unreachable { get; set; }
	}
	
	/// <summary>
	/// The response object from `ListDeliveryPipelines`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDeliveryPipelinesResponse
	{
		
		/// <summary>
		/// The `DeliveryPipeline` objects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deliveryPipelines")]
		public DeliveryPipeline[] DeliveryPipelines { get; set; }
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Locations that could not be reached.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unreachable")]
		public string[] Unreachable { get; set; }
	}
	
	/// <summary>
	/// ListJobRunsResponse is the response object returned by `ListJobRuns`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListJobRunsResponse
	{
		
		/// <summary>
		/// The `JobRun` objects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobRuns")]
		public JobRun[] JobRuns { get; set; }
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Locations that could not be reached
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unreachable")]
		public string[] Unreachable { get; set; }
	}
	
	/// <summary>
	/// The response message for Locations.ListLocations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListLocationsResponse
	{
		
		/// <summary>
		/// A list of locations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locations")]
		public Location[] Locations { get; set; }
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// A resource that represents a Google Cloud location.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Location
	{
		
		/// <summary>
		/// The friendly name for this location, typically a nearby city name. For example, "Tokyo".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// The canonical id for this location. For example: `"us-east1"`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locationId")]
		public string LocationId { get; set; }
		
		/// <summary>
		/// Service-specific metadata. For example the available capacity at the given location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The response message for Operations.ListOperations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListOperationsResponse
	{
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A list of operations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operations")]
		public Operation[] Operations { get; set; }
	}
	
	/// <summary>
	/// This resource represents a long-running operation that is the result of a network API call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Operation
	{
		
		/// <summary>
		/// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="done")]
		public System.Nullable<System.Boolean> Done { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public Status Error { get; set; }
		
		/// <summary>
		/// Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public System.Collections.Generic.Dictionary<string, object> Response { get; set; }
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Status
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// The response object from `ListReleases`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListReleasesResponse
	{
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The `Release` objects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="releases")]
		public Release[] Releases { get; set; }
		
		/// <summary>
		/// Locations that could not be reached.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unreachable")]
		public string[] Unreachable { get; set; }
	}
	
	/// <summary>
	/// A `Release` resource in the Cloud Deploy API. A `Release` defines a specific Skaffold configuration instance that can be deployed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Release
	{
		
		/// <summary>
		/// Output only. Indicates whether this is an abandoned release.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abandoned")]
		public System.Nullable<System.Boolean> Abandoned { get; set; }
		
		/// <summary>
		/// User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotations")]
		public System.Collections.Generic.Dictionary<string, string> Annotations { get; set; }
		
		/// <summary>
		/// List of artifacts to pass through to Skaffold command.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="buildArtifacts")]
		public BuildArtifact[] BuildArtifacts { get; set; }
		
		/// <summary>
		/// ReleaseCondition contains all conditions relevant to a Release.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public ReleaseCondition Condition { get; set; }
		
		/// <summary>
		/// Output only. Time at which the `Release` was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. Snapshot of the custom target types referenced by the targets taken at release creation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customTargetTypeSnapshots")]
		public CustomTargetType[] CustomTargetTypeSnapshots { get; set; }
		
		/// <summary>
		/// A `DeliveryPipeline` resource in the Cloud Deploy API. A `DeliveryPipeline` defines a pipeline through which a Skaffold configuration can progress.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deliveryPipelineSnapshot")]
		public DeliveryPipeline DeliveryPipelineSnapshot { get; set; }
		
		/// <summary>
		/// Optional. The deploy parameters to use for all targets in this release.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployParameters")]
		public System.Collections.Generic.Dictionary<string, string> DeployParameters { get; set; }
		
		/// <summary>
		/// Description of the `Release`. Max length is 255 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Optional. Name of the `Release`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/a-z{0,62}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Time at which the render completed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="renderEndTime")]
		public string RenderEndTime { get; set; }
		
		/// <summary>
		/// Output only. Time at which the render began.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="renderStartTime")]
		public string RenderStartTime { get; set; }
		
		/// <summary>
		/// Output only. Current state of the render operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="renderState")]
		public System.Nullable<ReleaseRenderState> RenderState { get; set; }
		
		/// <summary>
		/// Filepath of the Skaffold config inside of the config URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skaffoldConfigPath")]
		public string SkaffoldConfigPath { get; set; }
		
		/// <summary>
		/// Cloud Storage URI of tar.gz archive containing Skaffold configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skaffoldConfigUri")]
		public string SkaffoldConfigUri { get; set; }
		
		/// <summary>
		/// The Skaffold version to use when operating on this release, such as "1.20.0". Not all versions are valid; Cloud Deploy supports a specific set of versions. If unset, the most recent supported Skaffold version will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skaffoldVersion")]
		public string SkaffoldVersion { get; set; }
		
		/// <summary>
		/// Output only. Map from target ID to the target artifacts created during the render operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetArtifacts")]
		public System.Collections.Generic.Dictionary<string, TargetArtifact> TargetArtifacts { get; set; }
		
		/// <summary>
		/// Output only. Map from target ID to details of the render operation for that target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetRenders")]
		public System.Collections.Generic.Dictionary<string, TargetRender> TargetRenders { get; set; }
		
		/// <summary>
		/// Output only. Snapshot of the targets taken at release creation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSnapshots")]
		public Target[] TargetSnapshots { get; set; }
		
		/// <summary>
		/// Output only. Unique identifier of the `Release`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
	}
	
	/// <summary>
	/// ReleaseCondition contains all conditions relevant to a Release.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReleaseCondition
	{
		
		/// <summary>
		/// ReleaseReadyCondition contains information around the status of the Release. If a release is not ready, you cannot create a rollout with the release.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="releaseReadyCondition")]
		public ReleaseReadyCondition ReleaseReadyCondition { get; set; }
		
		/// <summary>
		/// SkaffoldSupportedCondition contains information about when support for the release's version of Skaffold ends.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skaffoldSupportedCondition")]
		public SkaffoldSupportedCondition SkaffoldSupportedCondition { get; set; }
	}
	
	/// <summary>
	/// ReleaseReadyCondition contains information around the status of the Release. If a release is not ready, you cannot create a rollout with the release.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReleaseReadyCondition
	{
		
		/// <summary>
		/// True if the Release is in a valid state. Otherwise at least one condition in `ReleaseCondition` is in an invalid state. Iterate over those conditions and see which condition(s) has status = false to find out what is wrong with the Release.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Boolean> Status { get; set; }
	}
	
	/// <summary>
	/// SkaffoldSupportedCondition contains information about when support for the release's version of Skaffold ends.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SkaffoldSupportedCondition
	{
		
		/// <summary>
		/// The time at which this release's version of Skaffold will enter maintenance mode.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maintenanceModeTime")]
		public string MaintenanceModeTime { get; set; }
		
		/// <summary>
		/// The Skaffold support state for this release's version of Skaffold.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skaffoldSupportState")]
		public System.Nullable<SkaffoldSupportedConditionSkaffoldSupportState> SkaffoldSupportState { get; set; }
		
		/// <summary>
		/// True if the version of Skaffold used by this release is supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Boolean> Status { get; set; }
		
		/// <summary>
		/// The time at which this release's version of Skaffold will no longer be supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportExpirationTime")]
		public string SupportExpirationTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SkaffoldSupportedConditionSkaffoldSupportState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKAFFOLD_SUPPORT_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKAFFOLD_SUPPORT_STATE_SUPPORTED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKAFFOLD_SUPPORT_STATE_MAINTENANCE_MODE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKAFFOLD_SUPPORT_STATE_UNSUPPORTED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ReleaseRenderState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RENDER_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 3,
	}
	
	/// <summary>
	/// The artifacts produced by a target render operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TargetArtifact
	{
		
		/// <summary>
		/// Output only. URI of a directory containing the artifacts. This contains deployment configuration used by Skaffold during a rollout, and all paths are relative to this location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="artifactUri")]
		public string ArtifactUri { get; set; }
		
		/// <summary>
		/// Output only. File path of the rendered manifest relative to the URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manifestPath")]
		public string ManifestPath { get; set; }
		
		/// <summary>
		/// Output only. Map from the phase ID to the phase artifacts for the `Target`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phaseArtifacts")]
		public System.Collections.Generic.Dictionary<string, PhaseArtifact> PhaseArtifacts { get; set; }
		
		/// <summary>
		/// Output only. File path of the resolved Skaffold configuration relative to the URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skaffoldConfigPath")]
		public string SkaffoldConfigPath { get; set; }
	}
	
	/// <summary>
	/// Contains the paths to the artifacts, relative to the URI, for a phase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhaseArtifact
	{
		
		/// <summary>
		/// Output only. File path of the directory of rendered job manifests relative to the URI. This is only set if it is applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobManifestsPath")]
		public string JobManifestsPath { get; set; }
		
		/// <summary>
		/// Output only. File path of the rendered manifest relative to the URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manifestPath")]
		public string ManifestPath { get; set; }
		
		/// <summary>
		/// Output only. File path of the resolved Skaffold configuration relative to the URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skaffoldConfigPath")]
		public string SkaffoldConfigPath { get; set; }
	}
	
	/// <summary>
	/// Details of rendering for a single target.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TargetRender
	{
		
		/// <summary>
		/// Output only. Reason this render failed. This will always be unspecified while the render in progress.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureCause")]
		public System.Nullable<TargetRenderFailureCause> FailureCause { get; set; }
		
		/// <summary>
		/// Output only. Additional information about the render failure, if available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureMessage")]
		public string FailureMessage { get; set; }
		
		/// <summary>
		/// RenderMetadata includes information associated with a `Release` render.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public RenderMetadata Metadata { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the Cloud Build `Build` object that is used to render the manifest for this target. Format is `projects/{project}/locations/{location}/builds/{build}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="renderingBuild")]
		public string RenderingBuild { get; set; }
		
		/// <summary>
		/// Output only. Current state of the render operation for this Target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="renderingState")]
		public System.Nullable<TargetRenderRenderingState> RenderingState { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TargetRenderFailureCause
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILURE_CAUSE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_BUILD_UNAVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTION_FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_BUILD_REQUEST_FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERIFICATION_CONFIG_NOT_FOUND = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM_ACTION_NOT_FOUND = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPLOYMENT_STRATEGY_NOT_SUPPORTED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RENDER_FEATURE_NOT_SUPPORTED = 7,
	}
	
	/// <summary>
	/// RenderMetadata includes information associated with a `Release` render.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RenderMetadata
	{
		
		/// <summary>
		/// CloudRunRenderMetadata contains Cloud Run information associated with a `Release` render.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudRun")]
		public CloudRunRenderMetadata CloudRun { get; set; }
		
		/// <summary>
		/// CustomMetadata contains information from a user defined operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom")]
		public CustomMetadata Custom { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TargetRenderRenderingState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TARGET_RENDER_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 3,
	}
	
	/// <summary>
	/// A `Target` resource in the Cloud Deploy API. A `Target` defines a location to which a Skaffold configuration can be deployed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Target
	{
		
		/// <summary>
		/// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotations")]
		public System.Collections.Generic.Dictionary<string, string> Annotations { get; set; }
		
		/// <summary>
		/// Information specifying an Anthos Cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="anthosCluster")]
		public AnthosCluster AnthosCluster { get; set; }
		
		/// <summary>
		/// Output only. Time at which the `Target` was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Information specifying a Custom Target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customTarget")]
		public CustomTarget CustomTarget { get; set; }
		
		/// <summary>
		/// Optional. The deploy parameters to use for this target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployParameters")]
		public System.Collections.Generic.Dictionary<string, string> DeployParameters { get; set; }
		
		/// <summary>
		/// Optional. Description of the `Target`. Max length is 255 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used in a single configuration; using the same value multiple times is an error. When one or more configurations are specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are specified, execution will use the default specified in `DefaultPool`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executionConfigs")]
		public ExecutionConfig[] ExecutionConfigs { get; set; }
		
		/// <summary>
		/// Information specifying a GKE Cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gke")]
		public GkeCluster Gke { get; set; }
		
		/// <summary>
		/// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Information specifying a multiTarget.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="multiTarget")]
		public MultiTarget MultiTarget { get; set; }
		
		/// <summary>
		/// Optional. Name of the `Target`. Format is `projects/{project}/locations/{location}/targets/a-z{0,62}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Optional. Whether or not the `Target` requires approval.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requireApproval")]
		public System.Nullable<System.Boolean> RequireApproval { get; set; }
		
		/// <summary>
		/// Information specifying where to deploy a Cloud Run Service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="run")]
		public CloudRunLocation Run { get; set; }
		
		/// <summary>
		/// Output only. Resource id of the `Target`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetId")]
		public string TargetId { get; set; }
		
		/// <summary>
		/// Output only. Unique identifier of the `Target`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
		
		/// <summary>
		/// Output only. Most recent time at which the `Target` was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Information specifying a multiTarget.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MultiTarget
	{
		
		/// <summary>
		/// Required. The target_ids of this multiTarget.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetIds")]
		public string[] TargetIds { get; set; }
	}
	
	/// <summary>
	/// ListRolloutsResponse is the response object reutrned by `ListRollouts`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRolloutsResponse
	{
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The `Rollout` objects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rollouts")]
		public Rollout[] Rollouts { get; set; }
		
		/// <summary>
		/// Locations that could not be reached.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unreachable")]
		public string[] Unreachable { get; set; }
	}
	
	/// <summary>
	/// A `Rollout` resource in the Cloud Deploy API. A `Rollout` contains information around a specific deployment to a `Target`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Rollout
	{
		
		/// <summary>
		/// User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotations")]
		public System.Collections.Generic.Dictionary<string, string> Annotations { get; set; }
		
		/// <summary>
		/// Output only. Approval state of the `Rollout`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="approvalState")]
		public System.Nullable<RolloutApprovalState> ApprovalState { get; set; }
		
		/// <summary>
		/// Output only. Time at which the `Rollout` was approved.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="approveTime")]
		public string ApproveTime { get; set; }
		
		/// <summary>
		/// Output only. Name of the `ControllerRollout`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/a-z{0,62}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="controllerRollout")]
		public string ControllerRollout { get; set; }
		
		/// <summary>
		/// Output only. Time at which the `Rollout` was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. Time at which the `Rollout` finished deploying.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployEndTime")]
		public string DeployEndTime { get; set; }
		
		/// <summary>
		/// Output only. The reason this rollout failed. This will always be unspecified while the rollout is in progress.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployFailureCause")]
		public System.Nullable<RolloutDeployFailureCause> DeployFailureCause { get; set; }
		
		/// <summary>
		/// Output only. Time at which the `Rollout` started deploying.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployStartTime")]
		public string DeployStartTime { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the Cloud Build `Build` object that is used to deploy the Rollout. Format is `projects/{project}/locations/{location}/builds/{build}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deployingBuild")]
		public string DeployingBuild { get; set; }
		
		/// <summary>
		/// Description of the `Rollout` for user purposes. Max length is 255 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Output only. Time at which the `Rollout` was enqueued.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enqueueTime")]
		public string EnqueueTime { get; set; }
		
		/// <summary>
		/// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Output only. Additional information about the rollout failure, if available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public string FailureReason { get; set; }
		
		/// <summary>
		/// Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Metadata includes information associated with a `Rollout`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public Metadata Metadata { get; set; }
		
		/// <summary>
		/// Optional. Name of the `Rollout`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/a-z{0,62}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The phases that represent the workflows of this `Rollout`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phases")]
		public Phase[] Phases { get; set; }
		
		/// <summary>
		/// Output only. Name of the `Rollout` that is rolled back by this `Rollout`. Empty if this `Rollout` wasn't created as a rollback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rollbackOfRollout")]
		public string RollbackOfRollout { get; set; }
		
		/// <summary>
		/// Output only. Names of `Rollouts` that rolled back this `Rollout`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rolledBackByRollouts")]
		public string[] RolledBackByRollouts { get; set; }
		
		/// <summary>
		/// Output only. Current state of the `Rollout`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<RolloutState> State { get; set; }
		
		/// <summary>
		/// Required. The ID of Target to which this `Rollout` is deploying.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetId")]
		public string TargetId { get; set; }
		
		/// <summary>
		/// Output only. Unique identifier of the `Rollout`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RolloutApprovalState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVAL_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEEDS_APPROVAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOES_NOT_NEED_APPROVAL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RolloutDeployFailureCause
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILURE_CAUSE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_BUILD_UNAVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTION_FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEADLINE_EXCEEDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RELEASE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RELEASE_ABANDONED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERIFICATION_CONFIG_NOT_FOUND = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_BUILD_REQUEST_FAILED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPERATION_FEATURE_NOT_SUPPORTED = 8,
	}
	
	/// <summary>
	/// Metadata includes information associated with a `Rollout`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Metadata
	{
		
		/// <summary>
		/// AutomationRolloutMetadata contains Automation-related actions that were performed on a rollout.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automation")]
		public AutomationRolloutMetadata Automation { get; set; }
		
		/// <summary>
		/// CloudRunMetadata contains information from a Cloud Run deployment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudRun")]
		public CloudRunMetadata CloudRun { get; set; }
		
		/// <summary>
		/// CustomMetadata contains information from a user defined operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom")]
		public CustomMetadata Custom { get; set; }
	}
	
	/// <summary>
	/// Phase represents a collection of jobs that are logically grouped together for a `Rollout`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Phase
	{
		
		/// <summary>
		/// ChildRollouts job composition
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="childRolloutJobs")]
		public ChildRolloutJobs ChildRolloutJobs { get; set; }
		
		/// <summary>
		/// Deployment job composition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deploymentJobs")]
		public DeploymentJobs DeploymentJobs { get; set; }
		
		/// <summary>
		/// Output only. The ID of the Phase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Output only. Additional information on why the Phase was skipped, if available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="skipMessage")]
		public string SkipMessage { get; set; }
		
		/// <summary>
		/// Output only. Current state of the Phase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<PhaseState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PhaseState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ABORTED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKIPPED = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RolloutState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_APPROVAL = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVAL_REJECTED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_RELEASE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLING = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HALTED = 10,
	}
	
	/// <summary>
	/// The response object from `ListTargets`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTargetsResponse
	{
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The `Target` objects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targets")]
		public Target[] Targets { get; set; }
		
		/// <summary>
		/// Locations that could not be reached.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unreachable")]
		public string[] Unreachable { get; set; }
	}
	
	/// <summary>
	/// Represents the metadata of the long-running operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OperationMetadata
	{
		
		/// <summary>
		/// Output only. API version used to start the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiVersion")]
		public string ApiVersion { get; set; }
		
		/// <summary>
		/// Output only. The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestedCancellation")]
		public System.Nullable<System.Boolean> RequestedCancellation { get; set; }
		
		/// <summary>
		/// Output only. Human-readable status of the operation, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="statusMessage")]
		public string StatusMessage { get; set; }
		
		/// <summary>
		/// Output only. Server-defined resource path for the target of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public string Target { get; set; }
		
		/// <summary>
		/// Output only. Name of the verb executed by the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verb")]
		public string Verb { get; set; }
	}
	
	/// <summary>
	/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Policy
	{
		
		/// <summary>
		/// Specifies cloud audit logging configuration for this policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditConfigs")]
		public AuditConfig[] AuditConfigs { get; set; }
		
		/// <summary>
		/// Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindings")]
		public Binding[] Bindings { get; set; }
		
		/// <summary>
		/// `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	/// <summary>
	/// Payload proto for "clouddeploy.googleapis.com/release_notification" Platform Log event that describes the failure to send release status change Pub/Sub notification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReleaseNotificationEvent
	{
		
		/// <summary>
		/// Debug message for when a notification fails to send.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// The name of the `Release`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="release")]
		public string Release { get; set; }
		
		/// <summary>
		/// Type of this notification, e.g. for a Pub/Sub failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AutomationEventType Type { get; set; }
	}
	
	/// <summary>
	/// Payload proto for "clouddeploy.googleapis.com/release_render" Platform Log event that describes the render status change.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReleaseRenderEvent
	{
		
		/// <summary>
		/// Debug message for when a render transition occurs. Provides further details as rendering progresses through render states.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// The name of the release.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="release")]
		public string Release { get; set; }
		
		/// <summary>
		/// The state of the release render.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="releaseRenderState")]
		public ReleaseRenderState ReleaseRenderState { get; set; }
	}
	
	/// <summary>
	/// RetryJobRequest is the request object used by `RetryJob`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RetryJobRequest
	{
		
		/// <summary>
		/// Required. The job ID for the Job to retry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		/// <summary>
		/// Required. The phase ID the Job to retry belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phaseId")]
		public string PhaseId { get; set; }
	}
	
	/// <summary>
	/// The response object from 'RetryJob'.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RetryJobResponse
	{
	}
	
	/// <summary>
	/// Configs for the Rollback rollout.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RollbackTargetConfig
	{
		
		/// <summary>
		/// A `Rollout` resource in the Cloud Deploy API. A `Rollout` contains information around a specific deployment to a `Target`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rollout")]
		public Rollout Rollout { get; set; }
		
		/// <summary>
		/// Optional. The starting phase ID for the `Rollout`. If unspecified, the `Rollout` will start in the stable phase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startingPhaseId")]
		public string StartingPhaseId { get; set; }
	}
	
	/// <summary>
	/// The request object for `RollbackTarget`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RollbackTargetRequest
	{
		
		/// <summary>
		/// Optional. ID of the `Release` to roll back to. If this isn't specified, the previous successful `Rollout` to the specified target will be used to determine the `Release`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="releaseId")]
		public string ReleaseId { get; set; }
		
		/// <summary>
		/// Configs for the Rollback rollout.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rollbackConfig")]
		public RollbackTargetConfig RollbackConfig { get; set; }
		
		/// <summary>
		/// Required. ID of the rollback `Rollout` to create.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rolloutId")]
		public string RolloutId { get; set; }
		
		/// <summary>
		/// Optional. If provided, this must be the latest `Rollout` that is on the `Target`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rolloutToRollBack")]
		public string RolloutToRollBack { get; set; }
		
		/// <summary>
		/// Required. ID of the `Target` that is being rolled back.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetId")]
		public string TargetId { get; set; }
		
		/// <summary>
		/// Optional. If set to true, the request is validated and the user is provided with a `RollbackTargetResponse`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validateOnly")]
		public System.Nullable<System.Boolean> ValidateOnly { get; set; }
	}
	
	/// <summary>
	/// The response object from `RollbackTarget`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RollbackTargetResponse
	{
		
		/// <summary>
		/// Configs for the Rollback rollout.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rollbackConfig")]
		public RollbackTargetConfig RollbackConfig { get; set; }
	}
	
	/// <summary>
	/// Payload proto for "clouddeploy.googleapis.com/rollout_notification" Platform Log event that describes the failure to send rollout status change Pub/Sub notification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RolloutNotificationEvent
	{
		
		/// <summary>
		/// Debug message for when a notification fails to send.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Unique identifier of the `DeliveryPipeline`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pipelineUid")]
		public string PipelineUid { get; set; }
		
		/// <summary>
		/// Unique identifier of the `Release`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="releaseUid")]
		public string ReleaseUid { get; set; }
		
		/// <summary>
		/// The name of the `Rollout`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rollout")]
		public string Rollout { get; set; }
		
		/// <summary>
		/// ID of the `Target` that the rollout is deployed to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetId")]
		public string TargetId { get; set; }
		
		/// <summary>
		/// Type of this notification, e.g. for a Pub/Sub failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AutomationEventType Type { get; set; }
	}
	
	/// <summary>
	/// Payload proto for "clouddeploy.googleapis.com/rollout_update" Platform Log event that describes the rollout update event.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RolloutUpdateEvent
	{
		
		/// <summary>
		/// Debug message for when a rollout update event occurs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Unique identifier of the pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pipelineUid")]
		public string PipelineUid { get; set; }
		
		/// <summary>
		/// Unique identifier of the release.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="releaseUid")]
		public string ReleaseUid { get; set; }
		
		/// <summary>
		/// The name of the rollout.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rollout")]
		public string Rollout { get; set; }
		
		/// <summary>
		/// The type of the rollout update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rolloutUpdateType")]
		public System.Nullable<RolloutUpdateEventRolloutUpdateType> RolloutUpdateType { get; set; }
		
		/// <summary>
		/// ID of the target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetId")]
		public string TargetId { get; set; }
		
		/// <summary>
		/// Type of this notification, e.g. for a rollout update event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AutomationEventType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RolloutUpdateEventRolloutUpdateType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLOUT_UPDATE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_RELEASE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HALTED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVAL_REQUIRED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADVANCE_REQUIRED = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADVANCED = 13,
	}
	
	/// <summary>
	/// Request message for `SetIamPolicy` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetIamPolicyRequest
	{
		
		/// <summary>
		/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policy")]
		public Policy Policy { get; set; }
		
		/// <summary>
		/// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Payload proto for "clouddeploy.googleapis.com/target_notification" Platform Log event that describes the failure to send target status change Pub/Sub notification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TargetNotificationEvent
	{
		
		/// <summary>
		/// Debug message for when a notification fails to send.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// The name of the `Target`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public string Target { get; set; }
		
		/// <summary>
		/// Type of this notification, e.g. for a Pub/Sub failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AutomationEventType Type { get; set; }
	}
	
	/// <summary>
	/// The request object used by `TerminateJobRun`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TerminateJobRunRequest
	{
	}
	
	/// <summary>
	/// The response object from `TerminateJobRun`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TerminateJobRunResponse
	{
	}
	
	/// <summary>
	/// Request message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TestIamPermissionsRequest
	{
		
		/// <summary>
		/// The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	/// <summary>
	/// Response message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TestIamPermissionsResponse
	{
		
		/// <summary>
		/// A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Deletes a single Target.
		/// Clouddeploy_projects_locations_targets_delete v1/{name}
		/// </summary>
		/// <param name="name">Required. The name of the `Target` to delete. Format should be `projects/{project_id}/locations/{location_name}/targets/{target_name}`.</param>
		/// <param name="allowMissing">Optional. If set to true, then deleting an already deleted or non-existing `Target` will succeed.</param>
		/// <param name="etag">Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.</param>
		/// <param name="requestId">Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).</param>
		/// <param name="validateOnly">Optional. If set, validate the request and preview the review, but do not actually post it.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Clouddeploy_projects_locations_targets_deleteAsync(string name, bool allowMissing, string etag, string requestId, bool validateOnly, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&allowMissing="+allowMissing+"&etag=" + (etag==null? "" : System.Uri.EscapeDataString(etag))+"&requestId=" + (requestId==null? "" : System.Uri.EscapeDataString(requestId))+"&validateOnly="+validateOnly;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Operation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Gets details of a single Target.
		/// Clouddeploy_projects_locations_targets_get v1/{name}
		/// </summary>
		/// <param name="name">Required. Name of the `Target`. Format must be `projects/{project_id}/locations/{location_name}/targets/{target_name}`.</param>
		/// <returns>Successful response</returns>
		public async Task<Target> Clouddeploy_projects_locations_targets_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Target>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the parameters of a single Target.
		/// Clouddeploy_projects_locations_targets_patch v1/{name}
		/// </summary>
		/// <param name="name">Optional. Name of the `Target`. Format is `projects/{project}/locations/{location}/targets/a-z{0,62}`.</param>
		/// <param name="allowMissing">Optional. If set to true, updating a `Target` that does not exist will result in the creation of a new `Target`.</param>
		/// <param name="requestId">Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).</param>
		/// <param name="updateMask">Required. Field mask is used to specify the fields to be overwritten in the Target resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.</param>
		/// <param name="validateOnly">Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Clouddeploy_projects_locations_targets_patchAsync(string name, bool allowMissing, string requestId, string updateMask, bool validateOnly, Target requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&allowMissing="+allowMissing+"&requestId=" + (requestId==null? "" : System.Uri.EscapeDataString(requestId))+"&updateMask=" + (updateMask==null? "" : System.Uri.EscapeDataString(updateMask))+"&validateOnly="+validateOnly;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Operation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists information about the supported locations for this service.
		/// Clouddeploy_projects_locations_list v1/{name}/locations
		/// </summary>
		/// <param name="name">The resource that owns the locations collection, if applicable.</param>
		/// <param name="filter">A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).</param>
		/// <param name="pageSize">The maximum number of results to return. If not set, the service selects a default.</param>
		/// <param name="pageToken">A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.</param>
		/// <returns>Successful response</returns>
		public async Task<ListLocationsResponse> Clouddeploy_projects_locations_listAsync(string name, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/locations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListLocationsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
		/// Clouddeploy_projects_locations_operations_list v1/{name}/operations
		/// </summary>
		/// <param name="name">The name of the operation's parent resource.</param>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListOperationsResponse> Clouddeploy_projects_locations_operations_listAsync(string name, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/operations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListOperationsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Abandons a Release in the Delivery Pipeline.
		/// Clouddeploy_projects_locations_deliveryPipelines_releases_abandon v1/{name}:abandon
		/// </summary>
		/// <param name="name">Required. Name of the Release. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}`.</param>
		/// <returns>Successful response</returns>
		public async Task<AbandonReleaseResponse> Clouddeploy_projects_locations_deliveryPipelines_releases_abandonAsync(string name, AbandonReleaseRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":abandon";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AbandonReleaseResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Advances a Rollout in a given project and location.
		/// Clouddeploy_projects_locations_deliveryPipelines_releases_rollouts_advance v1/{name}:advance
		/// </summary>
		/// <param name="name">Required. Name of the Rollout. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.</param>
		/// <returns>Successful response</returns>
		public async Task<AdvanceRolloutResponse> Clouddeploy_projects_locations_deliveryPipelines_releases_rollouts_advanceAsync(string name, AdvanceRolloutRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":advance";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<AdvanceRolloutResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Approves a Rollout.
		/// Clouddeploy_projects_locations_deliveryPipelines_releases_rollouts_approve v1/{name}:approve
		/// </summary>
		/// <param name="name">Required. Name of the Rollout. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.</param>
		/// <returns>Successful response</returns>
		public async Task<ApproveRolloutResponse> Clouddeploy_projects_locations_deliveryPipelines_releases_rollouts_approveAsync(string name, ApproveRolloutRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":approve";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ApproveRolloutResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
		/// Clouddeploy_projects_locations_operations_cancel v1/{name}:cancel
		/// </summary>
		/// <param name="name">The name of the operation resource to be cancelled.</param>
		/// <returns>Successful response</returns>
		public async Task<Empty> Clouddeploy_projects_locations_operations_cancelAsync(string name, CancelOperationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":cancel";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Empty>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a `Rollout` to roll back the specified target.
		/// Clouddeploy_projects_locations_deliveryPipelines_rollbackTarget v1/{name}:rollbackTarget
		/// </summary>
		/// <param name="name">Required. The `DeliveryPipeline` for which the rollback `Rollout` should be created. Format should be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.</param>
		/// <returns>Successful response</returns>
		public async Task<RollbackTargetResponse> Clouddeploy_projects_locations_deliveryPipelines_rollbackTargetAsync(string name, RollbackTargetRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":rollbackTarget";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<RollbackTargetResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Terminates a Job Run in a given project and location.
		/// Clouddeploy_projects_locations_deliveryPipelines_releases_rollouts_jobRuns_terminate v1/{name}:terminate
		/// </summary>
		/// <param name="name">Required. Name of the `JobRun`. Format must be `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}/jobRuns/{jobRun}`.</param>
		/// <returns>Successful response</returns>
		public async Task<TerminateJobRunResponse> Clouddeploy_projects_locations_deliveryPipelines_releases_rollouts_jobRuns_terminateAsync(string name, TerminateJobRunRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":terminate";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TerminateJobRunResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists AutomationRuns in a given project and location.
		/// Clouddeploy_projects_locations_deliveryPipelines_automationRuns_list v1/{parent}/automationRuns
		/// </summary>
		/// <param name="parent">Required. The parent `Delivery Pipeline`, which owns this collection of automationRuns. Format must be `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}`.</param>
		/// <param name="filter">Filter automationRuns to be returned. All fields can be used in the filter.</param>
		/// <param name="orderBy">Field to sort by.</param>
		/// <param name="pageSize">The maximum number of automationRuns to return. The service may return fewer than this value. If unspecified, at most 50 automationRuns will be returned. The maximum value is 1000; values above 1000 will be set to 1000.</param>
		/// <param name="pageToken">A page token, received from a previous `ListAutomationRuns` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListAutomationRunsResponse> Clouddeploy_projects_locations_deliveryPipelines_automationRuns_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/automationRuns&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListAutomationRunsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists Automations in a given project and location.
		/// Clouddeploy_projects_locations_deliveryPipelines_automations_list v1/{parent}/automations
		/// </summary>
		/// <param name="parent">Required. The parent `Delivery Pipeline`, which owns this collection of automations. Format must be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.</param>
		/// <param name="filter">Filter automations to be returned. All fields can be used in the filter.</param>
		/// <param name="orderBy">Field to sort by.</param>
		/// <param name="pageSize">The maximum number of automations to return. The service may return fewer than this value. If unspecified, at most 50 automations will be returned. The maximum value is 1000; values above 1000 will be set to 1000.</param>
		/// <param name="pageToken">A page token, received from a previous `ListAutomations` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListAutomationsResponse> Clouddeploy_projects_locations_deliveryPipelines_automations_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/automations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListAutomationsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new Automation in a given project and location.
		/// Clouddeploy_projects_locations_deliveryPipelines_automations_create v1/{parent}/automations
		/// </summary>
		/// <param name="parent">Required. The parent collection in which the `Automation` should be created. Format should be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.</param>
		/// <param name="automationId">Required. ID of the `Automation`.</param>
		/// <param name="requestId">Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).</param>
		/// <param name="validateOnly">Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Clouddeploy_projects_locations_deliveryPipelines_automations_createAsync(string parent, string automationId, string requestId, bool validateOnly, Automation requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/automations&automationId=" + (automationId==null? "" : System.Uri.EscapeDataString(automationId))+"&requestId=" + (requestId==null? "" : System.Uri.EscapeDataString(requestId))+"&validateOnly="+validateOnly;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Operation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists CustomTargetTypes in a given project and location.
		/// Clouddeploy_projects_locations_customTargetTypes_list v1/{parent}/customTargetTypes
		/// </summary>
		/// <param name="parent">Required. The parent that owns this collection of custom target types. Format must be `projects/{project_id}/locations/{location_name}`.</param>
		/// <param name="filter">Optional. Filter custom target types to be returned. See https://google.aip.dev/160 for more details.</param>
		/// <param name="orderBy">Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details.</param>
		/// <param name="pageSize">Optional. The maximum number of `CustomTargetType` objects to return. The service may return fewer than this value. If unspecified, at most 50 `CustomTargetType` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000.</param>
		/// <param name="pageToken">Optional. A page token, received from a previous `ListCustomTargetTypes` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListCustomTargetTypesResponse> Clouddeploy_projects_locations_customTargetTypes_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/customTargetTypes&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListCustomTargetTypesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new CustomTargetType in a given project and location.
		/// Clouddeploy_projects_locations_customTargetTypes_create v1/{parent}/customTargetTypes
		/// </summary>
		/// <param name="parent">Required. The parent collection in which the `CustomTargetType` should be created in. Format should be `projects/{project_id}/locations/{location_name}`.</param>
		/// <param name="customTargetTypeId">Required. ID of the `CustomTargetType`.</param>
		/// <param name="requestId">Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).</param>
		/// <param name="validateOnly">Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Clouddeploy_projects_locations_customTargetTypes_createAsync(string parent, string customTargetTypeId, string requestId, bool validateOnly, CustomTargetType requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/customTargetTypes&customTargetTypeId=" + (customTargetTypeId==null? "" : System.Uri.EscapeDataString(customTargetTypeId))+"&requestId=" + (requestId==null? "" : System.Uri.EscapeDataString(requestId))+"&validateOnly="+validateOnly;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Operation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists DeliveryPipelines in a given project and location.
		/// Clouddeploy_projects_locations_deliveryPipelines_list v1/{parent}/deliveryPipelines
		/// </summary>
		/// <param name="parent">Required. The parent, which owns this collection of pipelines. Format must be `projects/{project_id}/locations/{location_name}`.</param>
		/// <param name="filter">Filter pipelines to be returned. See https://google.aip.dev/160 for more details.</param>
		/// <param name="orderBy">Field to sort by. See https://google.aip.dev/132#ordering for more details.</param>
		/// <param name="pageSize">The maximum number of pipelines to return. The service may return fewer than this value. If unspecified, at most 50 pipelines will be returned. The maximum value is 1000; values above 1000 will be set to 1000.</param>
		/// <param name="pageToken">A page token, received from a previous `ListDeliveryPipelines` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListDeliveryPipelinesResponse> Clouddeploy_projects_locations_deliveryPipelines_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/deliveryPipelines&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListDeliveryPipelinesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new DeliveryPipeline in a given project and location.
		/// Clouddeploy_projects_locations_deliveryPipelines_create v1/{parent}/deliveryPipelines
		/// </summary>
		/// <param name="parent">Required. The parent collection in which the `DeliveryPipeline` should be created. Format should be `projects/{project_id}/locations/{location_name}`.</param>
		/// <param name="deliveryPipelineId">Required. ID of the `DeliveryPipeline`.</param>
		/// <param name="requestId">Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).</param>
		/// <param name="validateOnly">Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Clouddeploy_projects_locations_deliveryPipelines_createAsync(string parent, string deliveryPipelineId, string requestId, bool validateOnly, DeliveryPipeline requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/deliveryPipelines&deliveryPipelineId=" + (deliveryPipelineId==null? "" : System.Uri.EscapeDataString(deliveryPipelineId))+"&requestId=" + (requestId==null? "" : System.Uri.EscapeDataString(requestId))+"&validateOnly="+validateOnly;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Operation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists JobRuns in a given project and location.
		/// Clouddeploy_projects_locations_deliveryPipelines_releases_rollouts_jobRuns_list v1/{parent}/jobRuns
		/// </summary>
		/// <param name="parent">Required. The `Rollout` which owns this collection of `JobRun` objects.</param>
		/// <param name="filter">Optional. Filter results to be returned. See https://google.aip.dev/160 for more details.</param>
		/// <param name="orderBy">Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details.</param>
		/// <param name="pageSize">Optional. The maximum number of `JobRun` objects to return. The service may return fewer than this value. If unspecified, at most 50 `JobRun` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000.</param>
		/// <param name="pageToken">Optional. A page token, received from a previous `ListJobRuns` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListJobRunsResponse> Clouddeploy_projects_locations_deliveryPipelines_releases_rollouts_jobRuns_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/jobRuns&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListJobRunsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists Releases in a given project and location.
		/// Clouddeploy_projects_locations_deliveryPipelines_releases_list v1/{parent}/releases
		/// </summary>
		/// <param name="parent">Required. The `DeliveryPipeline` which owns this collection of `Release` objects.</param>
		/// <param name="filter">Optional. Filter releases to be returned. See https://google.aip.dev/160 for more details.</param>
		/// <param name="orderBy">Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details.</param>
		/// <param name="pageSize">Optional. The maximum number of `Release` objects to return. The service may return fewer than this value. If unspecified, at most 50 `Release` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000.</param>
		/// <param name="pageToken">Optional. A page token, received from a previous `ListReleases` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListReleasesResponse> Clouddeploy_projects_locations_deliveryPipelines_releases_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/releases&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListReleasesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new Release in a given project and location.
		/// Clouddeploy_projects_locations_deliveryPipelines_releases_create v1/{parent}/releases
		/// </summary>
		/// <param name="parent">Required. The parent collection in which the `Release` should be created. Format should be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.</param>
		/// <param name="releaseId">Required. ID of the `Release`.</param>
		/// <param name="requestId">Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).</param>
		/// <param name="validateOnly">Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Clouddeploy_projects_locations_deliveryPipelines_releases_createAsync(string parent, string releaseId, string requestId, bool validateOnly, Release requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/releases&releaseId=" + (releaseId==null? "" : System.Uri.EscapeDataString(releaseId))+"&requestId=" + (requestId==null? "" : System.Uri.EscapeDataString(requestId))+"&validateOnly="+validateOnly;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Operation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists Rollouts in a given project and location.
		/// Clouddeploy_projects_locations_deliveryPipelines_releases_rollouts_list v1/{parent}/rollouts
		/// </summary>
		/// <param name="parent">Required. The `Release` which owns this collection of `Rollout` objects.</param>
		/// <param name="filter">Optional. Filter rollouts to be returned. See https://google.aip.dev/160 for more details.</param>
		/// <param name="orderBy">Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details.</param>
		/// <param name="pageSize">Optional. The maximum number of `Rollout` objects to return. The service may return fewer than this value. If unspecified, at most 50 `Rollout` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000.</param>
		/// <param name="pageToken">Optional. A page token, received from a previous `ListRollouts` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListRolloutsResponse> Clouddeploy_projects_locations_deliveryPipelines_releases_rollouts_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/rollouts&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListRolloutsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new Rollout in a given project and location.
		/// Clouddeploy_projects_locations_deliveryPipelines_releases_rollouts_create v1/{parent}/rollouts
		/// </summary>
		/// <param name="parent">Required. The parent collection in which the `Rollout` should be created. Format should be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}`.</param>
		/// <param name="requestId">Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).</param>
		/// <param name="rolloutId">Required. ID of the `Rollout`.</param>
		/// <param name="startingPhaseId">Optional. The starting phase ID for the `Rollout`. If empty the `Rollout` will start at the first phase.</param>
		/// <param name="validateOnly">Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Clouddeploy_projects_locations_deliveryPipelines_releases_rollouts_createAsync(string parent, string requestId, string rolloutId, string startingPhaseId, bool validateOnly, Rollout requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/rollouts&requestId=" + (requestId==null? "" : System.Uri.EscapeDataString(requestId))+"&rolloutId=" + (rolloutId==null? "" : System.Uri.EscapeDataString(rolloutId))+"&startingPhaseId=" + (startingPhaseId==null? "" : System.Uri.EscapeDataString(startingPhaseId))+"&validateOnly="+validateOnly;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Operation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists Targets in a given project and location.
		/// Clouddeploy_projects_locations_targets_list v1/{parent}/targets
		/// </summary>
		/// <param name="parent">Required. The parent, which owns this collection of targets. Format must be `projects/{project_id}/locations/{location_name}`.</param>
		/// <param name="filter">Optional. Filter targets to be returned. See https://google.aip.dev/160 for more details.</param>
		/// <param name="orderBy">Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details.</param>
		/// <param name="pageSize">Optional. The maximum number of `Target` objects to return. The service may return fewer than this value. If unspecified, at most 50 `Target` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000.</param>
		/// <param name="pageToken">Optional. A page token, received from a previous `ListTargets` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListTargetsResponse> Clouddeploy_projects_locations_targets_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/targets&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListTargetsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new Target in a given project and location.
		/// Clouddeploy_projects_locations_targets_create v1/{parent}/targets
		/// </summary>
		/// <param name="parent">Required. The parent collection in which the `Target` should be created. Format should be `projects/{project_id}/locations/{location_name}`.</param>
		/// <param name="requestId">Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).</param>
		/// <param name="targetId">Required. ID of the `Target`.</param>
		/// <param name="validateOnly">Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Clouddeploy_projects_locations_targets_createAsync(string parent, string requestId, string targetId, bool validateOnly, Target requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/targets&requestId=" + (requestId==null? "" : System.Uri.EscapeDataString(requestId))+"&targetId=" + (targetId==null? "" : System.Uri.EscapeDataString(targetId))+"&validateOnly="+validateOnly;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Operation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
		/// Clouddeploy_projects_locations_targets_getIamPolicy v1/{resource}:getIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <param name="options_requestedPolicyVersion">Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).</param>
		/// <returns>Successful response</returns>
		public async Task<Policy> Clouddeploy_projects_locations_targets_getIamPolicyAsync(string resource, int options_requestedPolicyVersion, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":getIamPolicy&options.requestedPolicyVersion="+options_requestedPolicyVersion;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Policy>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
		/// Clouddeploy_projects_locations_targets_setIamPolicy v1/{resource}:setIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<Policy> Clouddeploy_projects_locations_targets_setIamPolicyAsync(string resource, SetIamPolicyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":setIamPolicy";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<Policy>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.
		/// Clouddeploy_projects_locations_targets_testIamPermissions v1/{resource}:testIamPermissions
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<TestIamPermissionsResponse> Clouddeploy_projects_locations_targets_testIamPermissionsAsync(string resource, TestIamPermissionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":testIamPermissions";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<TestIamPermissionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Ignores the specified Job in a Rollout.
		/// Clouddeploy_projects_locations_deliveryPipelines_releases_rollouts_ignoreJob v1/{rollout}:ignoreJob
		/// </summary>
		/// <param name="rollout">Required. Name of the Rollout. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.</param>
		/// <returns>Successful response</returns>
		public async Task<IgnoreJobResponse> Clouddeploy_projects_locations_deliveryPipelines_releases_rollouts_ignoreJobAsync(string rollout, IgnoreJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (rollout==null? "" : System.Uri.EscapeDataString(rollout))+":ignoreJob";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<IgnoreJobResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retries the specified Job in a Rollout.
		/// Clouddeploy_projects_locations_deliveryPipelines_releases_rollouts_retryJob v1/{rollout}:retryJob
		/// </summary>
		/// <param name="rollout">Required. Name of the Rollout. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.</param>
		/// <returns>Successful response</returns>
		public async Task<RetryJobResponse> Clouddeploy_projects_locations_deliveryPipelines_releases_rollouts_retryJobAsync(string rollout, RetryJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (rollout==null? "" : System.Uri.EscapeDataString(rollout))+":retryJob";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<RetryJobResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

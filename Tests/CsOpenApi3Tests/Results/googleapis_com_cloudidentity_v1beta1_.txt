//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// LRO response metadata for InboundSamlSsoProfilesService.AddIdpCredential.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddIdpCredentialOperationMetadata
	{
	}
	
	/// <summary>
	/// The request for creating an IdpCredential with its associated payload. An InboundSamlSsoProfile can own up to 2 credentials.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddIdpCredentialRequest
	{
		
		/// <summary>
		/// PEM encoded x509 certificate containing the public key for verifying IdP signatures.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pemData")]
		public string PemData { get; set; }
	}
	
	/// <summary>
	/// Resource representing the Android specific attributes of a Device.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AndroidAttributes
	{
		
		/// <summary>
		/// Whether the device passes Android CTS compliance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ctsProfileMatch")]
		public System.Nullable<System.Boolean> CtsProfileMatch { get; set; }
		
		/// <summary>
		/// Whether applications from unknown sources can be installed on device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabledUnknownSources")]
		public System.Nullable<System.Boolean> EnabledUnknownSources { get; set; }
		
		/// <summary>
		/// Whether any potentially harmful apps were detected on the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hasPotentiallyHarmfulApps")]
		public System.Nullable<System.Boolean> HasPotentiallyHarmfulApps { get; set; }
		
		/// <summary>
		/// Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ownerProfileAccount")]
		public System.Nullable<System.Boolean> OwnerProfileAccount { get; set; }
		
		/// <summary>
		/// Ownership privileges on device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ownershipPrivilege")]
		public System.Nullable<AndroidAttributesOwnershipPrivilege> OwnershipPrivilege { get; set; }
		
		/// <summary>
		/// Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the "Enforce Work Profile" policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportsWorkProfile")]
		public System.Nullable<System.Boolean> SupportsWorkProfile { get; set; }
		
		/// <summary>
		/// Whether Android verified boot status is GREEN.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verifiedBoot")]
		public System.Nullable<System.Boolean> VerifiedBoot { get; set; }
		
		/// <summary>
		/// Whether Google Play Protect Verify Apps is enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verifyAppsEnabled")]
		public System.Nullable<System.Boolean> VerifyAppsEnabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AndroidAttributesOwnershipPrivilege
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OWNERSHIP_PRIVILEGE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEVICE_ADMINISTRATOR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROFILE_OWNER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEVICE_OWNER = 3,
	}
	
	/// <summary>
	/// Request message for approving the device to access user data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApproveDeviceUserRequest
	{
		
		/// <summary>
		/// Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public string Customer { get; set; }
	}
	
	/// <summary>
	/// Response message for approving the device to access user data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApproveDeviceUserResponse
	{
		
		/// <summary>
		/// Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceUser")]
		public DeviceUser DeviceUser { get; set; }
	}
	
	/// <summary>
	/// Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeviceUser
	{
		
		/// <summary>
		/// Compromised State of the DeviceUser object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="compromisedState")]
		public System.Nullable<DeviceUserCompromisedState> CompromisedState { get; set; }
		
		/// <summary>
		/// When the user first signed in to the device
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. Most recent time when user registered with this service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="firstSyncTime")]
		public string FirstSyncTime { get; set; }
		
		/// <summary>
		/// Output only. Default locale used on device, in IETF BCP-47 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// Output only. Last time when user synced with policies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastSyncTime")]
		public string LastSyncTime { get; set; }
		
		/// <summary>
		/// Output only. Management state of the user on the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="managementState")]
		public System.Nullable<DeviceUserManagementState> ManagementState { get; set; }
		
		/// <summary>
		/// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the DeviceUser in format: `devices/{device_id}/deviceUsers/{device_user_id}`, where `device_user_id` uniquely identifies a user's use of a device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Password state of the DeviceUser object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="passwordState")]
		public System.Nullable<DeviceUserPasswordState> PasswordState { get; set; }
		
		/// <summary>
		/// Output only. User agent on the device for this specific user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userAgent")]
		public string UserAgent { get; set; }
		
		/// <summary>
		/// Email address of the user registered on the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userEmail")]
		public string UserEmail { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeviceUserCompromisedState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPROMISED_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPROMISED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_COMPROMISED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeviceUserManagementState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANAGEMENT_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WIPING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WIPED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BLOCKED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_APPROVAL = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNENROLLED = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeviceUserPasswordState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PASSWORD_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PASSWORD_SET = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PASSWORD_NOT_SET = 2,
	}
	
	/// <summary>
	/// Request message for blocking account on device.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BlockDeviceUserRequest
	{
		
		/// <summary>
		/// Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public string Customer { get; set; }
	}
	
	/// <summary>
	/// Response message for blocking the device from accessing user data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BlockDeviceUserResponse
	{
		
		/// <summary>
		/// Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceUser")]
		public DeviceUser DeviceUser { get; set; }
	}
	
	/// <summary>
	/// Request to cancel sent invitation for target email in UserInvitation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelUserInvitationRequest
	{
	}
	
	/// <summary>
	/// Request message for cancelling an unfinished device wipe.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelWipeDeviceRequest
	{
		
		/// <summary>
		/// Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public string Customer { get; set; }
	}
	
	/// <summary>
	/// Response message for cancelling an unfinished device wipe.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelWipeDeviceResponse
	{
		
		/// <summary>
		/// A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="device")]
		public Device Device { get; set; }
	}
	
	/// <summary>
	/// A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Device
	{
		
		/// <summary>
		/// Resource representing the Android specific attributes of a Device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="androidSpecificAttributes")]
		public AndroidAttributes AndroidSpecificAttributes { get; set; }
		
		/// <summary>
		/// Asset tag of the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assetTag")]
		public string AssetTag { get; set; }
		
		/// <summary>
		/// Output only. Baseband version of the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="basebandVersion")]
		public string BasebandVersion { get; set; }
		
		/// <summary>
		/// Output only. Device bootloader version. Example: 0.6.7.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bootloaderVersion")]
		public string BootloaderVersion { get; set; }
		
		/// <summary>
		/// Output only. Device brand. Example: Samsung.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="brand")]
		public string Brand { get; set; }
		
		/// <summary>
		/// Output only. Build number of the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="buildNumber")]
		public string BuildNumber { get; set; }
		
		/// <summary>
		/// List of the clients the device is reporting to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientTypes")]
		public string[] ClientTypes { get; set; }
		
		/// <summary>
		/// Output only. Represents whether the Device is compromised.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="compromisedState")]
		public System.Nullable<DeviceCompromisedState> CompromisedState { get; set; }
		
		/// <summary>
		/// Output only. When the Company-Owned device was imported. This field is empty for BYOD devices.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Unique identifier for the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceId")]
		public string DeviceId { get; set; }
		
		/// <summary>
		/// Output only. Type of device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceType")]
		public System.Nullable<DeviceDeviceType> DeviceType { get; set; }
		
		/// <summary>
		/// Output only. Whether developer options is enabled on device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabledDeveloperOptions")]
		public System.Nullable<System.Boolean> EnabledDeveloperOptions { get; set; }
		
		/// <summary>
		/// Output only. Whether USB debugging is enabled on device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabledUsbDebugging")]
		public System.Nullable<System.Boolean> EnabledUsbDebugging { get; set; }
		
		/// <summary>
		/// Output only. Device encryption state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionState")]
		public System.Nullable<DeviceEncryptionState> EncryptionState { get; set; }
		
		/// <summary>
		/// Resource representing the Endpoint Verification-specific attributes of a Device. https://cloud.google.com/endpoint-verification/docs/overview
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endpointVerificationSpecificAttributes")]
		public EndpointVerificationSpecificAttributes EndpointVerificationSpecificAttributes { get; set; }
		
		/// <summary>
		/// Host name of the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hostname")]
		public string Hostname { get; set; }
		
		/// <summary>
		/// Output only. IMEI number of device if GSM device; empty otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imei")]
		public string Imei { get; set; }
		
		/// <summary>
		/// Output only. Kernel version of the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kernelVersion")]
		public string KernelVersion { get; set; }
		
		/// <summary>
		/// Most recent time when device synced with this service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastSyncTime")]
		public string LastSyncTime { get; set; }
		
		/// <summary>
		/// Output only. Management state of the device
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="managementState")]
		public System.Nullable<DeviceManagementState> ManagementState { get; set; }
		
		/// <summary>
		/// Output only. Device manufacturer. Example: Motorola.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manufacturer")]
		public string Manufacturer { get; set; }
		
		/// <summary>
		/// Output only. MEID number of device if CDMA device; empty otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meid")]
		public string Meid { get; set; }
		
		/// <summary>
		/// Output only. Model name of device. Example: Pixel 3.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="model")]
		public string Model { get; set; }
		
		/// <summary>
		/// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}`, where device_id is the unique id assigned to the Device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Mobile or network operator of device, if available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkOperator")]
		public string NetworkOperator { get; set; }
		
		/// <summary>
		/// Output only. OS version of the device. Example: Android 8.1.0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="osVersion")]
		public string OsVersion { get; set; }
		
		/// <summary>
		/// Output only. Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account's domain has only one account. Examples: "com.example", "xyz.com".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="otherAccounts")]
		public string[] OtherAccounts { get; set; }
		
		/// <summary>
		/// Output only. Whether the device is owned by the company or an individual
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ownerType")]
		public System.Nullable<DeviceOwnerType> OwnerType { get; set; }
		
		/// <summary>
		/// Output only. OS release version. Example: 6.0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="releaseVersion")]
		public string ReleaseVersion { get; set; }
		
		/// <summary>
		/// Output only. OS security patch update time on device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityPatchTime")]
		public string SecurityPatchTime { get; set; }
		
		/// <summary>
		/// Serial Number of device. Example: HT82V1A01076.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serialNumber")]
		public string SerialNumber { get; set; }
		
		/// <summary>
		/// WiFi MAC addresses of device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wifiMacAddresses")]
		public string[] WifiMacAddresses { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeviceCompromisedState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPROMISED_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPROMISED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNCOMPROMISED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeviceDeviceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEVICE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANDROID = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IOS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GOOGLE_SYNC = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WINDOWS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAC_OS = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LINUX = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHROME_OS = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeviceEncryptionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENCRYPTION_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNSUPPORTED_BY_DEVICE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENCRYPTED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_ENCRYPTED = 3,
	}
	
	/// <summary>
	/// Resource representing the Endpoint Verification-specific attributes of a Device. https://cloud.google.com/endpoint-verification/docs/overview
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndpointVerificationSpecificAttributes
	{
		
		/// <summary>
		/// Details of certificates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="certificateAttributes")]
		public CertificateAttributes[] CertificateAttributes { get; set; }
	}
	
	/// <summary>
	/// Stores information about a certificate.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CertificateAttributes
	{
		
		/// <summary>
		/// CertificateTemplate (v3 Extension in X.509).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="certificateTemplate")]
		public CertificateTemplate CertificateTemplate { get; set; }
		
		/// <summary>
		/// The encoded certificate fingerprint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fingerprint")]
		public string Fingerprint { get; set; }
		
		/// <summary>
		/// The name of the issuer of this certificate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="issuer")]
		public string Issuer { get; set; }
		
		/// <summary>
		/// Serial number of the certificate, Example: "123456789".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serialNumber")]
		public string SerialNumber { get; set; }
		
		/// <summary>
		/// The subject name of this certificate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject")]
		public string Subject { get; set; }
		
		/// <summary>
		/// The certificate thumbprint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbprint")]
		public string Thumbprint { get; set; }
		
		/// <summary>
		/// Validation state of this certificate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validationState")]
		public System.Nullable<CertificateAttributesValidationState> ValidationState { get; set; }
		
		/// <summary>
		/// Certificate not valid at or after this timestamp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validityExpirationTime")]
		public string ValidityExpirationTime { get; set; }
		
		/// <summary>
		/// Certificate not valid before this timestamp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validityStartTime")]
		public string ValidityStartTime { get; set; }
	}
	
	/// <summary>
	/// CertificateTemplate (v3 Extension in X.509).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CertificateTemplate
	{
		
		/// <summary>
		/// The template id of the template. Example: "1.3.6.1.4.1.311.21.8.15608621.11768144.5720724.16068415.6889630.81.2472537.7784047".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The Major version of the template. Example: 100.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="majorVersion")]
		public System.Nullable<System.Int32> MajorVersion { get; set; }
		
		/// <summary>
		/// The minor version of the template. Example: 12.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minorVersion")]
		public System.Nullable<System.Int32> MinorVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CertificateAttributesValidationState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CERTIFICATE_VALIDATION_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATION_SUCCESSFUL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATION_FAILED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeviceManagementState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANAGEMENT_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BLOCKED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNPROVISIONED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WIPING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WIPED = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeviceOwnerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEVICE_OWNERSHIP_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPANY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BYOD = 2,
	}
	
	/// <summary>
	/// Request message for cancelling an unfinished user account wipe.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelWipeDeviceUserRequest
	{
		
		/// <summary>
		/// Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public string Customer { get; set; }
	}
	
	/// <summary>
	/// Response message for cancelling an unfinished user account wipe.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelWipeDeviceUserResponse
	{
		
		/// <summary>
		/// Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceUser")]
		public DeviceUser DeviceUser { get; set; }
	}
	
	/// <summary>
	/// The response message for MembershipsService.CheckTransitiveMembership.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CheckTransitiveMembershipResponse
	{
		
		/// <summary>
		/// Response does not include the possible roles of a member since the behavior of this rpc is not all-or-nothing unlike the other rpcs. So, it may not be possible to list all the roles definitively, due to possible lack of authorization in some of the paths.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hasMembership")]
		public System.Nullable<System.Boolean> HasMembership { get; set; }
	}
	
	/// <summary>
	/// Represents the state associated with an API client calling the Devices API. Resource representing ClientState and supports updates from API users
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClientState
	{
		
		/// <summary>
		/// The caller can specify asset tags for this resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assetTags")]
		public string[] AssetTags { get; set; }
		
		/// <summary>
		/// The compliance state of the resource as specified by the API client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="complianceState")]
		public System.Nullable<ClientStateComplianceState> ComplianceState { get; set; }
		
		/// <summary>
		/// Output only. The time the client state data was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// This field may be used to store a unique identifier for the API resource within which these CustomAttributes are a field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customId")]
		public string CustomId { get; set; }
		
		/// <summary>
		/// The token that needs to be passed back for concurrency control in updates. Token needs to be passed back in UpdateRequest
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// The Health score of the resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="healthScore")]
		public System.Nullable<ClientStateHealthScore> HealthScore { get; set; }
		
		/// <summary>
		/// The map of key-value attributes stored by callers specific to a device. The total serialized length of this map may not exceed 10KB. No limit is placed on the number of attributes in a map.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyValuePairs")]
		public System.Collections.Generic.Dictionary<string, CustomAttributeValue> KeyValuePairs { get; set; }
		
		/// <summary>
		/// Output only. The time the client state data was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastUpdateTime")]
		public string LastUpdateTime { get; set; }
		
		/// <summary>
		/// The management state of the resource as specified by the API client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="managed")]
		public System.Nullable<ClientStateManaged> Managed { get; set; }
		
		/// <summary>
		/// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the ClientState in format: `devices/{device_id}/deviceUsers/{device_user_id}/clientState/{partner_id}`, where partner_id corresponds to the partner storing the data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The owner of the ClientState
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ownerType")]
		public System.Nullable<ClientStateOwnerType> OwnerType { get; set; }
		
		/// <summary>
		/// A descriptive cause of the health score.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scoreReason")]
		public string ScoreReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ClientStateComplianceState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLIANCE_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLIANT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NON_COMPLIANT = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ClientStateHealthScore
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HEALTH_SCORE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERY_POOR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POOR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEUTRAL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GOOD = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERY_GOOD = 5,
	}
	
	/// <summary>
	/// Additional custom attribute values may be one of these types
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomAttributeValue
	{
		
		/// <summary>
		/// Represents a boolean value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boolValue")]
		public System.Nullable<System.Boolean> BoolValue { get; set; }
		
		/// <summary>
		/// Represents a double value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numberValue")]
		public System.Nullable<System.Double> NumberValue { get; set; }
		
		/// <summary>
		/// Represents a string value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stringValue")]
		public string StringValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ClientStateManaged
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANAGED_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANAGED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNMANAGED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ClientStateOwnerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OWNER_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OWNER_TYPE_CUSTOMER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OWNER_TYPE_PARTNER = 2,
	}
	
	/// <summary>
	/// Request message for creating a Company Owned device.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDeviceRequest
	{
		
		/// <summary>
		/// Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public string Customer { get; set; }
		
		/// <summary>
		/// A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="device")]
		public Device Device { get; set; }
	}
	
	/// <summary>
	/// LRO response metadata for InboundSamlSsoProfilesService.CreateInboundSamlSsoProfile.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateInboundSamlSsoProfileOperationMetadata
	{
	}
	
	/// <summary>
	/// LRO response metadata for InboundSsoAssignmentsService.CreateInboundSsoAssignment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateInboundSsoAssignmentOperationMetadata
	{
	}
	
	/// <summary>
	/// LRO response metadata for InboundSamlSsoProfilesService.DeleteIdpCredential.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteIdpCredentialOperationMetadata
	{
	}
	
	/// <summary>
	/// LRO response metadata for InboundSamlSsoProfilesService.DeleteInboundSamlSsoProfile.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteInboundSamlSsoProfileOperationMetadata
	{
	}
	
	/// <summary>
	/// LRO response metadata for InboundSsoAssignmentsService.DeleteInboundSsoAssignment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteInboundSsoAssignmentOperationMetadata
	{
	}
	
	/// <summary>
	/// Information of a DSA public key.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DsaPublicKeyInfo
	{
		
		/// <summary>
		/// Key size in bits (size of parameter P).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keySize")]
		public System.Nullable<System.Int32> KeySize { get; set; }
	}
	
	/// <summary>
	/// Dynamic group metadata like queries and status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DynamicGroupMetadata
	{
		
		/// <summary>
		/// Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 500 dynamic groups.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queries")]
		public DynamicGroupQuery[] Queries { get; set; }
		
		/// <summary>
		/// The current status of a dynamic group along with timestamp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DynamicGroupStatus Status { get; set; }
	}
	
	/// <summary>
	/// Defines a query on a resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DynamicGroupQuery
	{
		
		/// <summary>
		/// Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department=='engineering')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area=='foo' && loc.building_id=='bar')` All users with any variation of the name John Doe (case-insensitive queries add `equalsIgnoreCase()` to the value being queried). `user.name.value.equalsIgnoreCase('jOhn DoE')`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string Query { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resourceType")]
		public System.Nullable<DynamicGroupQueryResourceType> ResourceType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DynamicGroupQueryResourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER = 1,
	}
	
	/// <summary>
	/// The current status of a dynamic group along with timestamp.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DynamicGroupStatus
	{
		
		/// <summary>
		/// Status of the dynamic group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<DynamicGroupStatusStatus> Status { get; set; }
		
		/// <summary>
		/// The latest time at which the dynamic group is guaranteed to be in the given status. If status is `UP_TO_DATE`, the latest time at which the dynamic group was confirmed to be up-to-date. If status is `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="statusTime")]
		public string StatusTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DynamicGroupStatusStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATUS_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UP_TO_DATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING_MEMBERSHIPS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_QUERY = 3,
	}
	
	/// <summary>
	/// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EntityKey
	{
		
		/// <summary>
		/// The ID of the entity. For Google-managed entities, the `id` must be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="namespace")]
		public string Namespace { get; set; }
	}
	
	/// <summary>
	/// The `MembershipRole` expiry details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExpiryDetail
	{
		
		/// <summary>
		/// The time at which the `MembershipRole` will expire.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expireTime")]
		public string ExpireTime { get; set; }
	}
	
	/// <summary>
	/// The response message for MembershipsService.GetMembershipGraph.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetMembershipGraphResponse
	{
		
		/// <summary>
		/// The membership graph's path information represented as an adjacency list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="adjacencyList")]
		public MembershipAdjacencyList[] AdjacencyList { get; set; }
		
		/// <summary>
		/// The resources representing each group in the adjacency list. Each group in this list can be correlated to a 'group' of the MembershipAdjacencyList using the 'name' of the Group resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groups")]
		public Group[] Groups { get; set; }
	}
	
	/// <summary>
	/// Membership graph's path information as an adjacency list.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MembershipAdjacencyList
	{
		
		/// <summary>
		/// Each edge contains information about the member that belongs to this group. Note: Fields returned here will help identify the specific Membership resource (e.g name, preferred_member_key and role), but may not be a comprehensive list of all fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="edges")]
		public Membership[] Edges { get; set; }
		
		/// <summary>
		/// Resource name of the group that the members belong to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="group")]
		public string Group { get; set; }
	}
	
	/// <summary>
	/// A membership within the Cloud Identity Groups API. A `Membership` defines a relationship between a `Group` and an entity belonging to that `Group`, referred to as a "member".
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Membership
	{
		
		/// <summary>
		/// Output only. The time when the `Membership` was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. Delivery setting associated with the membership.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deliverySetting")]
		public System.Nullable<MembershipDeliverySetting> DeliverySetting { get; set; }
		
		/// <summary>
		/// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="memberKey")]
		public EntityKey MemberKey { get; set; }
		
		/// <summary>
		/// Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group_id}/memberships/{membership_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preferredMemberKey")]
		public EntityKey PreferredMemberKey { get; set; }
		
		/// <summary>
		/// The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="roles")]
		public MembershipRole[] Roles { get; set; }
		
		/// <summary>
		/// Output only. The type of the membership.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<MembershipType> Type { get; set; }
		
		/// <summary>
		/// Output only. The time when the `Membership` was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MembershipDeliverySetting
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELIVERY_SETTING_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_MAIL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIGEST = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAILY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 5,
	}
	
	/// <summary>
	/// A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MembershipRole
	{
		
		/// <summary>
		/// The `MembershipRole` expiry details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expiryDetail")]
		public ExpiryDetail ExpiryDetail { get; set; }
		
		/// <summary>
		/// The name of the `MembershipRole`. Must be one of `OWNER`, `MANAGER`, `MEMBER`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Evaluations of restrictions applied to parent group on this membership.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="restrictionEvaluations")]
		public RestrictionEvaluations RestrictionEvaluations { get; set; }
	}
	
	/// <summary>
	/// Evaluations of restrictions applied to parent group on this membership.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestrictionEvaluations
	{
		
		/// <summary>
		/// The evaluated state of this restriction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="memberRestrictionEvaluation")]
		public MembershipRoleRestrictionEvaluation MemberRestrictionEvaluation { get; set; }
	}
	
	/// <summary>
	/// The evaluated state of this restriction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MembershipRoleRestrictionEvaluation
	{
		
		/// <summary>
		/// Output only. The current state of the restriction
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<MembershipRoleRestrictionEvaluationState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MembershipRoleRestrictionEvaluationState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLIANT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORWARD_COMPLIANT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NON_COMPLIANT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EVALUATING = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MembershipType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICE_ACCOUNT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GROUP = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHARED_DRIVE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OTHER = 5,
	}
	
	/// <summary>
	/// A group within the Cloud Identity Groups API. A `Group` is a collection of entities, where each entity is either a user, another group, or a service account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Group
	{
		
		/// <summary>
		/// Output only. Additional group keys associated with the Group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalGroupKeys")]
		public EntityKey[] AdditionalGroupKeys { get; set; }
		
		/// <summary>
		/// Output only. The time when the `Group` was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// An extended description to help users determine the purpose of a `Group`. Must not be longer than 4,096 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The display name of the `Group`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Dynamic group metadata like queries and status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dynamicGroupMetadata")]
		public DynamicGroupMetadata DynamicGroupMetadata { get; set; }
		
		/// <summary>
		/// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupKey")]
		public EntityKey GroupKey { get; set; }
		
		/// <summary>
		/// Required. One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value. Google Groups are the default type of group and have a label with a key of `cloudidentity.googleapis.com/groups.discussion_forum` and an empty value. Existing Google Groups can have an additional label with a key of `cloudidentity.googleapis.com/groups.security` and an empty value added to them. **This is an immutable change and the security label cannot be removed once added.** Dynamic groups have a label with a key of `cloudidentity.googleapis.com/groups.dynamic`. Identity-mapped groups for Cloud Search have a label with a key of `system/groups/external` and an empty value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Group`. Shall be of the form `groups/{group_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. Immutable. The resource name of the entity under which this `Group` resides in the Cloud Identity resource hierarchy. Must be of the form `identitysources/{identity_source}` for external [identity-mapped groups](https://support.google.com/a/answer/9039510) or `customers/{customer_id}` for Google Groups. The `customer_id` must begin with "C" (for example, 'C046psxkn'). [Find your customer ID.] (https://support.google.com/cloudidentity/answer/10070793)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// Optional. The POSIX groups associated with the `Group`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="posixGroups")]
		public PosixGroup[] PosixGroups { get; set; }
		
		/// <summary>
		/// Output only. The time when the `Group` was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// POSIX Group definition to represent a group in a POSIX compliant system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PosixGroup
	{
		
		/// <summary>
		/// GID of the POSIX group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gid")]
		public string Gid { get; set; }
		
		/// <summary>
		/// Name of the POSIX group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// System identifier for which group name and gid apply to. If not specified it will default to empty value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="systemId")]
		public string SystemId { get; set; }
	}
	
	/// <summary>
	/// Resource representing the Android specific attributes of a Device.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1AndroidAttributes
	{
		
		/// <summary>
		/// Whether the device passes Android CTS compliance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ctsProfileMatch")]
		public System.Nullable<System.Boolean> CtsProfileMatch { get; set; }
		
		/// <summary>
		/// Whether applications from unknown sources can be installed on device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabledUnknownSources")]
		public System.Nullable<System.Boolean> EnabledUnknownSources { get; set; }
		
		/// <summary>
		/// Whether any potentially harmful apps were detected on the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hasPotentiallyHarmfulApps")]
		public System.Nullable<System.Boolean> HasPotentiallyHarmfulApps { get; set; }
		
		/// <summary>
		/// Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ownerProfileAccount")]
		public System.Nullable<System.Boolean> OwnerProfileAccount { get; set; }
		
		/// <summary>
		/// Ownership privileges on device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ownershipPrivilege")]
		public AndroidAttributesOwnershipPrivilege OwnershipPrivilege { get; set; }
		
		/// <summary>
		/// Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the "Enforce Work Profile" policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="supportsWorkProfile")]
		public System.Nullable<System.Boolean> SupportsWorkProfile { get; set; }
		
		/// <summary>
		/// Whether Android verified boot status is GREEN.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verifiedBoot")]
		public System.Nullable<System.Boolean> VerifiedBoot { get; set; }
		
		/// <summary>
		/// Whether Google Play Protect Verify Apps is enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verifyAppsEnabled")]
		public System.Nullable<System.Boolean> VerifyAppsEnabled { get; set; }
	}
	
	/// <summary>
	/// Metadata for ApproveDeviceUser LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1ApproveDeviceUserMetadata
	{
	}
	
	/// <summary>
	/// Response message for approving the device to access user data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1ApproveDeviceUserResponse
	{
		
		/// <summary>
		/// Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceUser")]
		public GoogleAppsCloudidentityDevicesV1DeviceUser DeviceUser { get; set; }
	}
	
	/// <summary>
	/// Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1DeviceUser
	{
		
		/// <summary>
		/// Compromised State of the DeviceUser object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="compromisedState")]
		public DeviceUserCompromisedState CompromisedState { get; set; }
		
		/// <summary>
		/// When the user first signed in to the device
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. Most recent time when user registered with this service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="firstSyncTime")]
		public string FirstSyncTime { get; set; }
		
		/// <summary>
		/// Output only. Default locale used on device, in IETF BCP-47 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// Output only. Last time when user synced with policies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastSyncTime")]
		public string LastSyncTime { get; set; }
		
		/// <summary>
		/// Output only. Management state of the user on the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="managementState")]
		public DeviceUserManagementState ManagementState { get; set; }
		
		/// <summary>
		/// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the DeviceUser in format: `devices/{device}/deviceUsers/{device_user}`, where `device_user` uniquely identifies a user's use of a device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Password state of the DeviceUser object
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="passwordState")]
		public DeviceUserPasswordState PasswordState { get; set; }
		
		/// <summary>
		/// Output only. User agent on the device for this specific user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userAgent")]
		public string UserAgent { get; set; }
		
		/// <summary>
		/// Email address of the user registered on the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userEmail")]
		public string UserEmail { get; set; }
	}
	
	/// <summary>
	/// Metadata for BlockDeviceUser LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1BlockDeviceUserMetadata
	{
	}
	
	/// <summary>
	/// Response message for blocking the device from accessing user data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1BlockDeviceUserResponse
	{
		
		/// <summary>
		/// Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceUser")]
		public GoogleAppsCloudidentityDevicesV1DeviceUser DeviceUser { get; set; }
	}
	
	/// <summary>
	/// Metadata for CancelWipeDevice LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1CancelWipeDeviceMetadata
	{
	}
	
	/// <summary>
	/// Response message for cancelling an unfinished device wipe.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1CancelWipeDeviceResponse
	{
		
		/// <summary>
		///  A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="device")]
		public GoogleAppsCloudidentityDevicesV1Device Device { get; set; }
	}
	
	/// <summary>
	///  A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1Device
	{
		
		/// <summary>
		/// Resource representing the Android specific attributes of a Device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="androidSpecificAttributes")]
		public GoogleAppsCloudidentityDevicesV1AndroidAttributes AndroidSpecificAttributes { get; set; }
		
		/// <summary>
		/// Asset tag of the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assetTag")]
		public string AssetTag { get; set; }
		
		/// <summary>
		/// Output only. Baseband version of the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="basebandVersion")]
		public string BasebandVersion { get; set; }
		
		/// <summary>
		/// Output only. Device bootloader version. Example: 0.6.7.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bootloaderVersion")]
		public string BootloaderVersion { get; set; }
		
		/// <summary>
		/// Output only. Device brand. Example: Samsung.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="brand")]
		public string Brand { get; set; }
		
		/// <summary>
		/// Output only. Build number of the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="buildNumber")]
		public string BuildNumber { get; set; }
		
		/// <summary>
		/// Output only. Represents whether the Device is compromised.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="compromisedState")]
		public DeviceCompromisedState CompromisedState { get; set; }
		
		/// <summary>
		/// Output only. When the Company-Owned device was imported. This field is empty for BYOD devices.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Unique identifier for the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceId")]
		public string DeviceId { get; set; }
		
		/// <summary>
		/// Output only. Type of device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceType")]
		public DeviceDeviceType DeviceType { get; set; }
		
		/// <summary>
		/// Output only. Whether developer options is enabled on device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabledDeveloperOptions")]
		public System.Nullable<System.Boolean> EnabledDeveloperOptions { get; set; }
		
		/// <summary>
		/// Output only. Whether USB debugging is enabled on device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabledUsbDebugging")]
		public System.Nullable<System.Boolean> EnabledUsbDebugging { get; set; }
		
		/// <summary>
		/// Output only. Device encryption state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionState")]
		public DeviceEncryptionState EncryptionState { get; set; }
		
		/// <summary>
		/// Host name of the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hostname")]
		public string Hostname { get; set; }
		
		/// <summary>
		/// Output only. IMEI number of device if GSM device; empty otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imei")]
		public string Imei { get; set; }
		
		/// <summary>
		/// Output only. Kernel version of the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kernelVersion")]
		public string KernelVersion { get; set; }
		
		/// <summary>
		/// Most recent time when device synced with this service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastSyncTime")]
		public string LastSyncTime { get; set; }
		
		/// <summary>
		/// Output only. Management state of the device
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="managementState")]
		public DeviceManagementState ManagementState { get; set; }
		
		/// <summary>
		/// Output only. Device manufacturer. Example: Motorola.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="manufacturer")]
		public string Manufacturer { get; set; }
		
		/// <summary>
		/// Output only. MEID number of device if CDMA device; empty otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meid")]
		public string Meid { get; set; }
		
		/// <summary>
		/// Output only. Model name of device. Example: Pixel 3.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="model")]
		public string Model { get; set; }
		
		/// <summary>
		/// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device}`, where device is the unique id assigned to the Device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. Mobile or network operator of device, if available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkOperator")]
		public string NetworkOperator { get; set; }
		
		/// <summary>
		/// Output only. OS version of the device. Example: Android 8.1.0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="osVersion")]
		public string OsVersion { get; set; }
		
		/// <summary>
		/// Output only. Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account's domain has only one account. Examples: "com.example", "xyz.com".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="otherAccounts")]
		public string[] OtherAccounts { get; set; }
		
		/// <summary>
		/// Output only. Whether the device is owned by the company or an individual
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ownerType")]
		public DeviceOwnerType OwnerType { get; set; }
		
		/// <summary>
		/// Output only. OS release version. Example: 6.0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="releaseVersion")]
		public string ReleaseVersion { get; set; }
		
		/// <summary>
		/// Output only. OS security patch update time on device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityPatchTime")]
		public string SecurityPatchTime { get; set; }
		
		/// <summary>
		/// Serial Number of device. Example: HT82V1A01076.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serialNumber")]
		public string SerialNumber { get; set; }
		
		/// <summary>
		/// WiFi MAC addresses of device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wifiMacAddresses")]
		public string[] WifiMacAddresses { get; set; }
	}
	
	/// <summary>
	/// Metadata for CancelWipeDeviceUser LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserMetadata
	{
	}
	
	/// <summary>
	/// Response message for cancelling an unfinished user account wipe.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1CancelWipeDeviceUserResponse
	{
		
		/// <summary>
		/// Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceUser")]
		public GoogleAppsCloudidentityDevicesV1DeviceUser DeviceUser { get; set; }
	}
	
	/// <summary>
	/// Represents the state associated with an API client calling the Devices API. Resource representing ClientState and supports updates from API users
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1ClientState
	{
		
		/// <summary>
		/// The caller can specify asset tags for this resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assetTags")]
		public string[] AssetTags { get; set; }
		
		/// <summary>
		/// The compliance state of the resource as specified by the API client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="complianceState")]
		public ClientStateComplianceState ComplianceState { get; set; }
		
		/// <summary>
		/// Output only. The time the client state data was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// This field may be used to store a unique identifier for the API resource within which these CustomAttributes are a field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customId")]
		public string CustomId { get; set; }
		
		/// <summary>
		/// The token that needs to be passed back for concurrency control in updates. Token needs to be passed back in UpdateRequest
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// The Health score of the resource. The Health score is the callers specification of the condition of the device from a usability point of view. For example, a third-party device management provider may specify a health score based on its compliance with organizational policies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="healthScore")]
		public ClientStateHealthScore HealthScore { get; set; }
		
		/// <summary>
		/// The map of key-value attributes stored by callers specific to a device. The total serialized length of this map may not exceed 10KB. No limit is placed on the number of attributes in a map.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyValuePairs")]
		public System.Collections.Generic.Dictionary<string, GoogleAppsCloudidentityDevicesV1CustomAttributeValue> KeyValuePairs { get; set; }
		
		/// <summary>
		/// Output only. The time the client state data was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastUpdateTime")]
		public string LastUpdateTime { get; set; }
		
		/// <summary>
		/// The management state of the resource as specified by the API client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="managed")]
		public ClientStateManaged Managed { get; set; }
		
		/// <summary>
		/// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the ClientState in format: `devices/{device}/deviceUsers/{device_user}/clientState/{partner}`, where partner corresponds to the partner storing the data. For partners belonging to the "BeyondCorp Alliance", this is the partner ID specified to you by Google. For all other callers, this is a string of the form: `{customer}-suffix`, where `customer` is your customer ID. The *suffix* is any string the caller specifies. This string will be displayed verbatim in the administration console. This suffix is used in setting up Custom Access Levels in Context-Aware Access. Your organization's customer ID can be obtained from the URL: `GET https://www.googleapis.com/admin/directory/v1/customers/my_customer` The `id` field in the response contains the customer ID starting with the letter 'C'. The customer ID to be used in this API is the string after the letter 'C' (not including 'C')
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The owner of the ClientState
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ownerType")]
		public ClientStateOwnerType OwnerType { get; set; }
		
		/// <summary>
		/// A descriptive cause of the health score.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scoreReason")]
		public string ScoreReason { get; set; }
	}
	
	/// <summary>
	/// Additional custom attribute values may be one of these types
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1CustomAttributeValue
	{
		
		/// <summary>
		/// Represents a boolean value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boolValue")]
		public System.Nullable<System.Boolean> BoolValue { get; set; }
		
		/// <summary>
		/// Represents a double value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numberValue")]
		public System.Nullable<System.Double> NumberValue { get; set; }
		
		/// <summary>
		/// Represents a string value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stringValue")]
		public string StringValue { get; set; }
	}
	
	/// <summary>
	/// Metadata for CreateDevice LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1CreateDeviceMetadata
	{
	}
	
	/// <summary>
	/// Metadata for DeleteDevice LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1DeleteDeviceMetadata
	{
	}
	
	/// <summary>
	/// Metadata for DeleteDeviceUser LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1DeleteDeviceUserMetadata
	{
	}
	
	/// <summary>
	/// Metadata for ListEndpointApps LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1ListEndpointAppsMetadata
	{
	}
	
	/// <summary>
	/// Metadata for SignoutDeviceUser LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1SignoutDeviceUserMetadata
	{
	}
	
	/// <summary>
	/// Metadata for UpdateClientState LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1UpdateClientStateMetadata
	{
	}
	
	/// <summary>
	/// Metadata for UpdateDevice LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1UpdateDeviceMetadata
	{
	}
	
	/// <summary>
	/// Metadata for WipeDevice LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1WipeDeviceMetadata
	{
	}
	
	/// <summary>
	/// Response message for wiping all data on the device.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1WipeDeviceResponse
	{
		
		/// <summary>
		///  A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="device")]
		public GoogleAppsCloudidentityDevicesV1Device Device { get; set; }
	}
	
	/// <summary>
	/// Metadata for WipeDeviceUser LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1WipeDeviceUserMetadata
	{
	}
	
	/// <summary>
	/// Response message for wiping the user's account from the device.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleAppsCloudidentityDevicesV1WipeDeviceUserResponse
	{
		
		/// <summary>
		/// Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceUser")]
		public GoogleAppsCloudidentityDevicesV1DeviceUser DeviceUser { get; set; }
	}
	
	/// <summary>
	/// Message representing a transitive group of a user or a group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GroupRelation
	{
		
		/// <summary>
		/// Display name for this group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Resource name for this group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="group")]
		public string Group { get; set; }
		
		/// <summary>
		/// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupKey")]
		public EntityKey GroupKey { get; set; }
		
		/// <summary>
		/// Labels for Group resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// The relation between the member and the transitive group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relationType")]
		public System.Nullable<GroupRelationRelationType> RelationType { get; set; }
		
		/// <summary>
		/// Membership roles of the member for the group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="roles")]
		public TransitiveMembershipRole[] Roles { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GroupRelationRelationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RELATION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDIRECT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_AND_INDIRECT = 3,
	}
	
	/// <summary>
	/// Message representing the role of a TransitiveMembership.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransitiveMembershipRole
	{
		
		/// <summary>
		/// TransitiveMembershipRole in string format. Currently supported TransitiveMembershipRoles: `"MEMBER"`, `"OWNER"`, and `"MANAGER"`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
	}
	
	/// <summary>
	/// Credential for verifying signatures produced by the Identity Provider.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdpCredential
	{
		
		/// <summary>
		/// Information of a DSA public key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dsaKeyInfo")]
		public DsaPublicKeyInfo DsaKeyInfo { get; set; }
		
		/// <summary>
		/// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the credential.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Information of a RSA public key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rsaKeyInfo")]
		public RsaPublicKeyInfo RsaKeyInfo { get; set; }
		
		/// <summary>
		/// Output only. Time when the `IdpCredential` was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Information of a RSA public key.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RsaPublicKeyInfo
	{
		
		/// <summary>
		/// Key size in bits (size of the modulus).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keySize")]
		public System.Nullable<System.Int32> KeySize { get; set; }
	}
	
	/// <summary>
	/// A [SAML 2.0](https://www.oasis-open.org/standards#samlv2.0) federation between a Google enterprise customer and a SAML identity provider.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InboundSamlSsoProfile
	{
		
		/// <summary>
		/// Immutable. The customer. For example: `customers/C0123abc`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public string Customer { get; set; }
		
		/// <summary>
		/// Human-readable name of the SAML SSO profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// SAML IDP (identity provider) configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idpConfig")]
		public SamlIdpConfig IdpConfig { get; set; }
		
		/// <summary>
		/// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the SAML SSO profile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// SAML SP (service provider) configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="spConfig")]
		public SamlSpConfig SpConfig { get; set; }
	}
	
	/// <summary>
	/// SAML IDP (identity provider) configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SamlIdpConfig
	{
		
		/// <summary>
		/// The **Change Password URL** of the identity provider. Users will be sent to this URL when changing their passwords at `myaccount.google.com`. This takes precedence over the change password URL configured at customer-level. Must use `HTTPS`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="changePasswordUri")]
		public string ChangePasswordUri { get; set; }
		
		/// <summary>
		/// Required. The SAML **Entity ID** of the identity provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityId")]
		public string EntityId { get; set; }
		
		/// <summary>
		/// The **Logout Redirect URL** (sign-out page URL) of the identity provider. When a user clicks the sign-out link on a Google page, they will be redirected to this URL. This is a pure redirect with no attached SAML `LogoutRequest` i.e. SAML single logout is not supported. Must use `HTTPS`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logoutRedirectUri")]
		public string LogoutRedirectUri { get; set; }
		
		/// <summary>
		/// Required. The `SingleSignOnService` endpoint location (sign-in page URL) of the identity provider. This is the URL where the `AuthnRequest` will be sent. Must use `HTTPS`. Assumed to accept the `HTTP-Redirect` binding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="singleSignOnServiceUri")]
		public string SingleSignOnServiceUri { get; set; }
	}
	
	/// <summary>
	/// SAML SP (service provider) configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SamlSpConfig
	{
		
		/// <summary>
		/// Output only. The SAML **Assertion Consumer Service (ACS) URL** to be used for the IDP-initiated login. Assumed to accept response messages via the `HTTP-POST` binding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assertionConsumerServiceUri")]
		public string AssertionConsumerServiceUri { get; set; }
		
		/// <summary>
		/// Output only. The SAML **Entity ID** for this service provider.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entityId")]
		public string EntityId { get; set; }
	}
	
	/// <summary>
	/// Targets with "set" SSO assignments and their respective assignments.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InboundSsoAssignment
	{
		
		/// <summary>
		/// Immutable. The customer. For example: `customers/C0123abc`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public string Customer { get; set; }
		
		/// <summary>
		/// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Inbound SSO Assignment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Must be zero (which is the default value so it can be omitted) for assignments with `target_org_unit` set and must be greater-than-or-equal-to one for assignments with `target_group` set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rank")]
		public System.Nullable<System.Int32> Rank { get; set; }
		
		/// <summary>
		/// Details that are applicable when `sso_mode` == `SAML_SSO`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="samlSsoInfo")]
		public SamlSsoInfo SamlSsoInfo { get; set; }
		
		/// <summary>
		/// Controls sign-in behavior.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="signInBehavior")]
		public SignInBehavior SignInBehavior { get; set; }
		
		/// <summary>
		/// Inbound SSO behavior.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ssoMode")]
		public System.Nullable<InboundSsoAssignmentSsoMode> SsoMode { get; set; }
		
		/// <summary>
		/// Immutable. Must be of the form `groups/{group}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetGroup")]
		public string TargetGroup { get; set; }
		
		/// <summary>
		/// Immutable. Must be of the form `orgUnits/{org_unit}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetOrgUnit")]
		public string TargetOrgUnit { get; set; }
	}
	
	/// <summary>
	/// Details that are applicable when `sso_mode` == `SAML_SSO`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SamlSsoInfo
	{
		
		/// <summary>
		/// Required. Name of the `InboundSamlSsoProfile` to use. Must be of the form `inboundSamlSsoProfiles/{inbound_saml_sso_profile}`. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inboundSamlSsoProfile")]
		public string InboundSamlSsoProfile { get; set; }
	}
	
	/// <summary>
	/// Controls sign-in behavior.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SignInBehavior
	{
		
		/// <summary>
		/// When to redirect sign-ins to the IdP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redirectCondition")]
		public System.Nullable<SignInBehaviorRedirectCondition> RedirectCondition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SignInBehaviorRedirectCondition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REDIRECT_CONDITION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEVER = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InboundSsoAssignmentSsoMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSO_MODE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSO_OFF = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAML_SSO = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOMAIN_WIDE_SAML_IF_ENABLED = 3,
	}
	
	/// <summary>
	/// Response for IsInvitableUser RPC.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IsInvitableUserResponse
	{
		
		/// <summary>
		/// Returns true if the email address is invitable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isInvitableUser")]
		public System.Nullable<System.Boolean> IsInvitableUser { get; set; }
	}
	
	/// <summary>
	/// Response message that is returned in LRO result of ListClientStates Operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListClientStatesResponse
	{
		
		/// <summary>
		/// Client states meeting the list restrictions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientStates")]
		public ClientState[] ClientStates { get; set; }
		
		/// <summary>
		/// Token to retrieve the next page of results. Empty if there are no more results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message that is returned from the ListDeviceUsers method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDeviceUsersResponse
	{
		
		/// <summary>
		/// Devices meeting the list restrictions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceUsers")]
		public DeviceUser[] DeviceUsers { get; set; }
		
		/// <summary>
		/// Token to retrieve the next page of results. Empty if there are no more results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message that is returned from the ListDevices method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDevicesResponse
	{
		
		/// <summary>
		/// Devices meeting the list restrictions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="devices")]
		public Device[] Devices { get; set; }
		
		/// <summary>
		/// Token to retrieve the next page of results. Empty if there are no more results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The response message for GroupsService.ListGroups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListGroupsResponse
	{
		
		/// <summary>
		/// The `Group` resources under the specified `parent`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groups")]
		public Group[] Groups { get; set; }
		
		/// <summary>
		/// A continuation token to retrieve the next page of results, or empty if there are no more results available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response of the InboundSamlSsoProfilesService.ListIdpCredentials method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListIdpCredentialsResponse
	{
		
		/// <summary>
		/// The IdpCredentials from the specified InboundSamlSsoProfile.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idpCredentials")]
		public IdpCredential[] IdpCredentials { get; set; }
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response of the InboundSamlSsoProfilesService.ListInboundSamlSsoProfiles method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInboundSamlSsoProfilesResponse
	{
		
		/// <summary>
		/// List of InboundSamlSsoProfiles.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inboundSamlSsoProfiles")]
		public InboundSamlSsoProfile[] InboundSamlSsoProfiles { get; set; }
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response of the InboundSsoAssignmentsService.ListInboundSsoAssignments method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInboundSsoAssignmentsResponse
	{
		
		/// <summary>
		/// The assignments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inboundSsoAssignments")]
		public InboundSsoAssignment[] InboundSsoAssignments { get; set; }
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The response message for MembershipsService.ListMemberships.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListMembershipsResponse
	{
		
		/// <summary>
		/// The `Membership`s under the specified `parent`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="memberships")]
		public Membership[] Memberships { get; set; }
		
		/// <summary>
		/// A continuation token to retrieve the next page of results, or empty if there are no more results available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The response message for OrgMembershipsService.ListOrgMemberships.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListOrgMembershipsResponse
	{
		
		/// <summary>
		/// A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The non-vacuous membership in an orgUnit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orgMemberships")]
		public OrgMembership[] OrgMemberships { get; set; }
	}
	
	/// <summary>
	/// A membership in an OrgUnit. An `OrgMembership` defines a relationship between an `OrgUnit` and an entity belonging to that `OrgUnit`, referred to as a "member".
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OrgMembership
	{
		
		/// <summary>
		/// Immutable. Org member id as full resource name. Format for shared drive resource: //drive.googleapis.com/drives/{$memberId} where `$memberId` is the `id` from [Drive API (V3) `Drive` resource](https://developers.google.com/drive/api/v3/reference/drives#resource).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member")]
		public string Member { get; set; }
		
		/// <summary>
		/// Uri with which you can read the member. This follows https://aip.dev/122 Format for shared drive resource: https://drive.googleapis.com/drive/v3/drives/{$memberId} where `$memberId` is the `id` from [Drive API (V3) `Drive` resource](https://developers.google.com/drive/api/v3/reference/drives#resource).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="memberUri")]
		public string MemberUri { get; set; }
		
		/// <summary>
		/// Required. Immutable. The [resource name](https://cloud.google.com/apis/design/resource_names) of the OrgMembership. Format: orgUnits/{$orgUnitId}/memberships/{$membership} The `$orgUnitId` is the `orgUnitId` from the [Admin SDK `OrgUnit` resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits). The `$membership` shall be of the form `{$entityType};{$memberId}`, where `$entityType` is the enum value of [OrgMembership.EntityType], and `memberId` is the `id` from [Drive API (V3) `Drive` resource](https://developers.google.com/drive/api/v3/reference/drives#resource) for OrgMembership.EntityType.SHARED_DRIVE.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Immutable. Entity type for the org member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<OrgMembershipType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OrgMembershipType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENTITY_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHARED_DRIVE = 1,
	}
	
	/// <summary>
	/// Response message for UserInvitation listing request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListUserInvitationsResponse
	{
		
		/// <summary>
		/// The token for the next page. If not empty, indicates that there may be more `UserInvitation` resources that match the listing request; this value can be used in a subsequent ListUserInvitationsRequest to get continued results with the current list call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The list of UserInvitation resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userInvitations")]
		public UserInvitation[] UserInvitations { get; set; }
	}
	
	/// <summary>
	/// The `UserInvitation` resource represents an email that can be sent to an unmanaged user account inviting them to join the customer's Google Workspace or Cloud Identity account. An unmanaged account shares an email address domain with the Google Workspace or Cloud Identity account but is not managed by it yet. If the user accepts the `UserInvitation`, the user account will become managed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserInvitation
	{
		
		/// <summary>
		/// Number of invitation emails sent to the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mailsSentCount")]
		public string MailsSentCount { get; set; }
		
		/// <summary>
		/// Shall be of the form `customers/{customer}/userinvitations/{user_email_address}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// State of the `UserInvitation`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<UserInvitationState> State { get; set; }
		
		/// <summary>
		/// Time when the `UserInvitation` was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UserInvitationState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_YET_SENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVITED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCEPTED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DECLINED = 4,
	}
	
	/// <summary>
	/// The response message for GroupsService.LookupGroupName.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LookupGroupNameResponse
	{
		
		/// <summary>
		/// Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the looked-up `Group`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The response message for MembershipsService.LookupMembershipName.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LookupMembershipNameResponse
	{
		
		/// <summary>
		/// The [resource name](https://cloud.google.com/apis/design/resource_names) of the looked-up `Membership`. Must be of the form `groups/{group_id}/memberships/{membership_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Response containing resource names of the DeviceUsers associated with the caller's credentials.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LookupSelfDeviceUsersResponse
	{
		
		/// <summary>
		/// The customer Id that may be passed back to other Devices API methods such as List, Get, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public string Customer { get; set; }
		
		/// <summary>
		/// [Resource names](https://cloud.google.com/apis/design/resource_names) of the DeviceUsers in the format: `devices/{device_id}/deviceUsers/{user_resource_id}`, where device_id is the unique ID assigned to a Device and user_resource_id is the unique user ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="names")]
		public string[] Names { get; set; }
		
		/// <summary>
		/// Token to retrieve the next page of results. Empty if there are no more results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Message representing a transitive membership of a group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MemberRelation
	{
		
		/// <summary>
		/// Resource name for this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member")]
		public string Member { get; set; }
		
		/// <summary>
		/// Entity key has an id and a namespace. In case of discussion forums, the id will be an email address without a namespace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preferredMemberKey")]
		public EntityKey[] PreferredMemberKey { get; set; }
		
		/// <summary>
		/// The relation between the group and the transitive membership.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relationType")]
		public GroupRelationRelationType RelationType { get; set; }
		
		/// <summary>
		/// The membership role details (i.e name of role and expiry time).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="roles")]
		public TransitiveMembershipRole[] Roles { get; set; }
	}
	
	/// <summary>
	/// The definition of MemberRestriction
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MemberRestriction
	{
		
		/// <summary>
		/// The evaluated state of this restriction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluation")]
		public RestrictionEvaluation Evaluation { get; set; }
		
		/// <summary>
		/// Member Restriction as defined by CEL expression. Supported restrictions are: `member.customer_id` and `member.type`. Valid values for `member.type` are `1`, `2` and `3`. They correspond to USER, SERVICE_ACCOUNT, and GROUP respectively. The value for `member.customer_id` only supports `groupCustomerId()` currently which means the customer id of the group will be used for restriction. Supported operators are `&&`, `||` and `==`, corresponding to AND, OR, and EQUAL. Examples: Allow only service accounts of given customer to be members. `member.type == 2 && member.customer_id == groupCustomerId()` Allow only users or groups to be members. `member.type == 1 || member.type == 3`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string Query { get; set; }
	}
	
	/// <summary>
	/// The evaluated state of this restriction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestrictionEvaluation
	{
		
		/// <summary>
		/// Output only. The current state of the restriction
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<RestrictionEvaluationState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RestrictionEvaluationState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EVALUATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLIANT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORWARD_COMPLIANT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NON_COMPLIANT = 4,
	}
	
	/// <summary>
	/// Message containing membership relation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MembershipRelation
	{
		
		/// <summary>
		/// An extended description to help users determine the purpose of a `Group`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The display name of the `Group`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Group`. Shall be of the form `groups/{group_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="group")]
		public string Group { get; set; }
		
		/// <summary>
		/// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupKey")]
		public EntityKey GroupKey { get; set; }
		
		/// <summary>
		/// One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group_id}/memberships/{membership_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="membership")]
		public string Membership { get; set; }
		
		/// <summary>
		/// The `MembershipRole`s that apply to the `Membership`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="roles")]
		public MembershipRole[] Roles { get; set; }
	}
	
	/// <summary>
	/// The request message for MembershipsService.ModifyMembershipRoles.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyMembershipRolesRequest
	{
		
		/// <summary>
		/// The `MembershipRole`s to be added. Adding or removing roles in the same request as updating roles is not supported. Must not be set if `update_roles_params` is set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addRoles")]
		public MembershipRole[] AddRoles { get; set; }
		
		/// <summary>
		/// The `name`s of the `MembershipRole`s to be removed. Adding or removing roles in the same request as updating roles is not supported. It is not possible to remove the `MEMBER` `MembershipRole`. If you wish to delete a `Membership`, call MembershipsService.DeleteMembership instead. Must not contain `MEMBER`. Must not be set if `update_roles_params` is set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="removeRoles")]
		public string[] RemoveRoles { get; set; }
		
		/// <summary>
		/// The `MembershipRole`s to be updated. Updating roles in the same request as adding or removing roles is not supported. Must not be set if either `add_roles` or `remove_roles` is set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateRolesParams")]
		public UpdateMembershipRolesParams[] UpdateRolesParams { get; set; }
	}
	
	/// <summary>
	/// The details of an update to a `MembershipRole`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateMembershipRolesParams
	{
		
		/// <summary>
		/// The fully-qualified names of fields to update. May only contain the field `expiry_detail.expire_time`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldMask")]
		public string FieldMask { get; set; }
		
		/// <summary>
		/// A membership role within the Cloud Identity Groups API. A `MembershipRole` defines the privileges granted to a `Membership`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="membershipRole")]
		public MembershipRole MembershipRole { get; set; }
	}
	
	/// <summary>
	/// The response message for MembershipsService.ModifyMembershipRoles.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyMembershipRolesResponse
	{
		
		/// <summary>
		/// A membership within the Cloud Identity Groups API. A `Membership` defines a relationship between a `Group` and an entity belonging to that `Group`, referred to as a "member".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="membership")]
		public Membership Membership { get; set; }
	}
	
	/// <summary>
	/// The request message for OrgMembershipsService.MoveOrgMembership.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MoveOrgMembershipRequest
	{
		
		/// <summary>
		/// Required. Immutable. Customer on whose membership change is made. All authorization will happen on the role assignments of this customer. Format: customers/{$customerId} where `$customerId` is the `id` from the [Admin SDK `Customer` resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers). You may also use `customers/my_customer` to specify your own organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public string Customer { get; set; }
		
		/// <summary>
		/// Required. Immutable. OrgUnit where the membership will be moved to. Format: orgUnits/{$orgUnitId} where `$orgUnitId` is the `orgUnitId` from the [Admin SDK `OrgUnit` resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationOrgUnit")]
		public string DestinationOrgUnit { get; set; }
	}
	
	/// <summary>
	/// This resource represents a long-running operation that is the result of a network API call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Operation
	{
		
		/// <summary>
		/// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="done")]
		public System.Nullable<System.Boolean> Done { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public Status Error { get; set; }
		
		/// <summary>
		/// Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public System.Collections.Generic.Dictionary<string, object> Response { get; set; }
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Status
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// The response message for MembershipsService.SearchDirectGroups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchDirectGroupsResponse
	{
		
		/// <summary>
		/// List of direct groups satisfying the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="memberships")]
		public MembershipRelation[] Memberships { get; set; }
		
		/// <summary>
		/// Token to retrieve the next page of results, or empty if there are no more results available for listing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The response message for GroupsService.SearchGroups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchGroupsResponse
	{
		
		/// <summary>
		/// The `Group` resources that match the search query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groups")]
		public Group[] Groups { get; set; }
		
		/// <summary>
		/// A continuation token to retrieve the next page of results, or empty if there are no more results available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The response message for MembershipsService.SearchTransitiveGroups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchTransitiveGroupsResponse
	{
		
		/// <summary>
		/// List of transitive groups satisfying the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="memberships")]
		public GroupRelation[] Memberships { get; set; }
		
		/// <summary>
		/// Token to retrieve the next page of results, or empty if there are no more results available for listing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The response message for MembershipsService.SearchTransitiveMemberships.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchTransitiveMembershipsResponse
	{
		
		/// <summary>
		/// List of transitive memberships satisfying the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="memberships")]
		public MemberRelation[] Memberships { get; set; }
		
		/// <summary>
		/// Token to retrieve the next page of results, or empty if there are no more results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The definiion of security settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SecuritySettings
	{
		
		/// <summary>
		/// The definition of MemberRestriction
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="memberRestriction")]
		public MemberRestriction MemberRestriction { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the security settings. Shall be of the form `groups/{group_id}/securitySettings`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// A request to send email for inviting target user corresponding to the UserInvitation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendUserInvitationRequest
	{
	}
	
	/// <summary>
	/// LRO response metadata for InboundSamlSsoProfilesService.UpdateInboundSamlSsoProfile.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateInboundSamlSsoProfileOperationMetadata
	{
	}
	
	/// <summary>
	/// LRO response metadata for InboundSsoAssignmentsService.UpdateInboundSsoAssignment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateInboundSsoAssignmentOperationMetadata
	{
	}
	
	/// <summary>
	/// Request message for wiping all data on the device.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WipeDeviceRequest
	{
		
		/// <summary>
		/// Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public string Customer { get; set; }
		
		/// <summary>
		/// Optional. Specifies if a user is able to factory reset a device after a Device Wipe. On iOS, this is called "Activation Lock", while on Android, this is known as "Factory Reset Protection". If true, this protection will be removed from the device, so that a user can successfully factory reset. If false, the setting is untouched on the device.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="removeResetLock")]
		public System.Nullable<System.Boolean> RemoveResetLock { get; set; }
	}
	
	/// <summary>
	/// Response message for wiping all data on the device.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WipeDeviceResponse
	{
		
		/// <summary>
		/// A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="device")]
		public Device Device { get; set; }
	}
	
	/// <summary>
	/// Request message for starting an account wipe on device.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WipeDeviceUserRequest
	{
		
		/// <summary>
		/// Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public string Customer { get; set; }
	}
	
	/// <summary>
	/// Response message for wiping the user's account from the device.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WipeDeviceUserResponse
	{
		
		/// <summary>
		/// Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deviceUser")]
		public DeviceUser DeviceUser { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Lists/Searches devices.
		/// Cloudidentity_devices_list v1beta1/devices
		/// </summary>
		/// <param name="customer">Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer.</param>
		/// <param name="filter">Optional. Additional restrictions when fetching list of devices. For a list of search fields, refer to [Mobile device search fields](https://developers.google.com/admin-sdk/directory/v1/search-operators). Multiple search fields are separated by the space character.</param>
		/// <param name="orderBy">Optional. Order specification for devices in the response. Only one of the following field names may be used to specify the order: `create_time`, `last_sync_time`, `model`, `os_version`, `device_type` and `serial_number`. `desc` may be specified optionally to specify results to be sorted in descending order. Default order is ascending.</param>
		/// <param name="pageSize">Optional. The maximum number of Devices to return. If unspecified, at most 20 Devices will be returned. The maximum value is 100; values above 100 will be coerced to 100.</param>
		/// <param name="pageToken">Optional. A page token, received from a previous `ListDevices` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDevices` must match the call that provided the page token.</param>
		/// <param name="view">Optional. The view to use for the List request.</param>
		/// <returns>Successful response</returns>
		public async Task<ListDevicesResponse> Cloudidentity_devices_listAsync(string customer, string filter, string orderBy, int pageSize, string pageToken, Cloudidentity_devices_listView view, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/devices?customer=" + (customer==null? "" : System.Uri.EscapeDataString(customer))+"&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&view=" + view;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListDevicesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a device. Only company-owned device may be created. **Note**: This method is available only to customers who have one of the following SKUs: Enterprise Standard, Enterprise Plus, Enterprise for Education, and Cloud Identity Premium
		/// Cloudidentity_devices_create v1beta1/devices
		/// </summary>
		/// <returns>Successful response</returns>
		public async Task<Operation> Cloudidentity_devices_createAsync(CreateDeviceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/devices";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the `Group` resources under a customer or namespace.
		/// Cloudidentity_groups_list v1beta1/groups
		/// </summary>
		/// <param name="pageSize">The maximum number of results to return. Note that the number of results returned may be less than this value even if there are more available results. To fetch all results, clients must continue calling this method repeatedly until the response no longer contains a `next_page_token`. If unspecified, defaults to 200 for `View.BASIC` and to 50 for `View.FULL`. Must not be greater than 1000 for `View.BASIC` or 500 for `View.FULL`.</param>
		/// <param name="pageToken">The `next_page_token` value returned from a previous list request, if any.</param>
		/// <param name="parent">Required. The parent resource under which to list all `Group` resources. Must be of the form `identitysources/{identity_source_id}` for external- identity-mapped groups or `customers/{customer_id}` for Google Groups. The `customer_id` must begin with "C" (for example, 'C046psxkn'). [Find your customer ID.] (https://support.google.com/cloudidentity/answer/10070793)</param>
		/// <param name="view">The level of detail to be returned. If unspecified, defaults to `View.BASIC`.</param>
		/// <returns>Successful response</returns>
		public async Task<ListGroupsResponse> Cloudidentity_groups_listAsync(int pageSize, string pageToken, string parent, Cloudidentity_groups_listView view, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/groups?pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&parent=" + (parent==null? "" : System.Uri.EscapeDataString(parent))+"&view=" + view;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListGroupsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a `Group`.
		/// Cloudidentity_groups_create v1beta1/groups
		/// </summary>
		/// <param name="initialGroupConfig">Required. The initial configuration option for the `Group`.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Cloudidentity_groups_createAsync(Cloudidentity_groups_createInitialGroupConfig initialGroupConfig, Group requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/groups?initialGroupConfig=" + initialGroupConfig;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Looks up the [resource name](https://cloud.google.com/apis/design/resource_names) of a `Group` by its `EntityKey`.
		/// Cloudidentity_groups_lookup v1beta1/groups:lookup
		/// </summary>
		/// <param name="groupKey_id">The ID of the entity. For Google-managed entities, the `id` must be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.</param>
		/// <param name="groupKey_namespace">The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}`.</param>
		/// <returns>Successful response</returns>
		public async Task<LookupGroupNameResponse> Cloudidentity_groups_lookupAsync(string groupKey_id, string groupKey_namespace, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/groups:lookup?groupKey.id=" + (groupKey_id==null? "" : System.Uri.EscapeDataString(groupKey_id))+"&groupKey.namespace=" + (groupKey_namespace==null? "" : System.Uri.EscapeDataString(groupKey_namespace));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<LookupGroupNameResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Searches for `Group` resources matching a specified query.
		/// Cloudidentity_groups_search v1beta1/groups:search
		/// </summary>
		/// <param name="orderBy">The ordering of groups for the display name or email in the search groups response. The syntax for this field can be found at https://cloud.google.com/apis/design/design_patterns#sorting_order. Example: Sort by the ascending name: order_by="display_name" Sort by the descending group key email: order_by="group_key desc"</param>
		/// <param name="pageSize">The maximum number of results to return. Note that the number of results returned may be less than this value even if there are more available results. To fetch all results, clients must continue calling this method repeatedly until the response no longer contains a `next_page_token`. If unspecified, defaults to 200 for `GroupView.BASIC` and to 50 for `GroupView.FULL`. Must not be greater than 1000 for `GroupView.BASIC` or 500 for `GroupView.FULL`.</param>
		/// <param name="pageToken">The `next_page_token` value returned from a previous search request, if any.</param>
		/// <param name="query">Required. The search query. * Must be specified in [Common Expression Language](https://opensource.google/projects/cel). * Must contain equality operators on the parent, e.g. `parent == 'customers/{customer_id}'`. The `customer_id` must begin with "C" (for example, 'C046psxkn'). [Find your customer ID.] (https://support.google.com/cloudidentity/answer/10070793) * Can contain optional inclusion operators on `labels` such as `'cloudidentity.googleapis.com/groups.discussion_forum' in labels`). * Can contain an optional equality operator on `domain_name`. e.g. `domain_name == 'examplepetstore.com'` * Can contain optional `startsWith/contains/equality` operators on `group_key`, e.g. `group_key.startsWith('dev')`, `group_key.contains('dev'), group_key == 'dev@examplepetstore.com'` * Can contain optional `startsWith/contains/equality` operators on `display_name`, such as `display_name.startsWith('dev')` , `display_name.contains('dev')`, `display_name == 'dev'`</param>
		/// <param name="view">The level of detail to be returned. If unspecified, defaults to `View.BASIC`.</param>
		/// <returns>Successful response</returns>
		public async Task<SearchGroupsResponse> Cloudidentity_groups_searchAsync(string orderBy, int pageSize, string pageToken, string query, Cloudidentity_groups_searchView view, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/groups:search?orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&query=" + (query==null? "" : System.Uri.EscapeDataString(query))+"&view=" + view;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<SearchGroupsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists InboundSamlSsoProfiles for a customer.
		/// Cloudidentity_inboundSamlSsoProfiles_list v1beta1/inboundSamlSsoProfiles
		/// </summary>
		/// <param name="filter">A [Common Expression Language](https://github.com/google/cel-spec) expression to filter the results. The only supported filter is filtering by customer. For example: `customer=="customers/C0123abc"`. Omitting the filter or specifying a filter of `customer=="customers/my_customer"` will return the profiles for the customer that the caller (authenticated user) belongs to.</param>
		/// <param name="pageSize">The maximum number of InboundSamlSsoProfiles to return. The service may return fewer than this value. If omitted (or defaulted to zero) the server will use a sensible default. This default may change over time. The maximum allowed value is 100. Requests with page_size greater than that will be silently interpreted as having this maximum value.</param>
		/// <param name="pageToken">A page token, received from a previous `ListInboundSamlSsoProfiles` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListInboundSamlSsoProfiles` must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListInboundSamlSsoProfilesResponse> Cloudidentity_inboundSamlSsoProfiles_listAsync(string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/inboundSamlSsoProfiles?filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListInboundSamlSsoProfilesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an InboundSamlSsoProfile for a customer.
		/// Cloudidentity_inboundSamlSsoProfiles_create v1beta1/inboundSamlSsoProfiles
		/// </summary>
		/// <returns>Successful response</returns>
		public async Task<Operation> Cloudidentity_inboundSamlSsoProfiles_createAsync(InboundSamlSsoProfile requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/inboundSamlSsoProfiles";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the InboundSsoAssignments for a `Customer`.
		/// Cloudidentity_inboundSsoAssignments_list v1beta1/inboundSsoAssignments
		/// </summary>
		/// <param name="filter">A CEL expression to filter the results. The only supported filter is filtering by customer. For example: `customer==customers/C0123abc`. Omitting the filter or specifying a filter of `customer==customers/my_customer` will return the assignments for the customer that the caller (authenticated user) belongs to.</param>
		/// <param name="pageSize">The maximum number of assignments to return. The service may return fewer than this value. If omitted (or defaulted to zero) the server will use a sensible default. This default may change over time. The maximum allowed value is 100, though requests with page_size greater than that will be silently interpreted as having this maximum value. This may increase in the futue.</param>
		/// <param name="pageToken">A page token, received from a previous `ListInboundSsoAssignments` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListInboundSsoAssignments` must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListInboundSsoAssignmentsResponse> Cloudidentity_inboundSsoAssignments_listAsync(string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/inboundSsoAssignments?filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListInboundSsoAssignmentsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an InboundSsoAssignment for users and devices in a `Customer` under a given `Group` or `OrgUnit`.
		/// Cloudidentity_inboundSsoAssignments_create v1beta1/inboundSsoAssignments
		/// </summary>
		/// <returns>Successful response</returns>
		public async Task<Operation> Cloudidentity_inboundSsoAssignments_createAsync(InboundSsoAssignment requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/inboundSsoAssignments";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes an InboundSsoAssignment. To disable SSO, Create (or Update) an assignment that has `sso_mode` == `SSO_OFF`.
		/// Cloudidentity_inboundSsoAssignments_delete v1beta1/{name}
		/// </summary>
		/// <param name="name">Required. The [resource name](https://cloud.google.com/apis/design/resource_names) of the InboundSsoAssignment to delete. Format: `inboundSsoAssignments/{assignment}`</param>
		/// <param name="customer">Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Cloudidentity_inboundSsoAssignments_deleteAsync(string name, string customer, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&customer=" + (customer==null? "" : System.Uri.EscapeDataString(customer));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets an InboundSsoAssignment.
		/// Cloudidentity_inboundSsoAssignments_get v1beta1/{name}
		/// </summary>
		/// <param name="name">Required. The [resource name](https://cloud.google.com/apis/design/resource_names) of the InboundSsoAssignment to fetch. Format: `inboundSsoAssignments/{assignment}`</param>
		/// <param name="readMask">Field-level read mask of which fields to return. "*" returns all fields. If not specified, all fields will be returned. May only contain the following field: `member_restriction`.</param>
		/// <returns>Successful response</returns>
		public async Task<InboundSsoAssignment> Cloudidentity_inboundSsoAssignments_getAsync(string name, string readMask, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&readMask=" + (readMask==null? "" : System.Uri.EscapeDataString(readMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<InboundSsoAssignment>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates an InboundSsoAssignment. The body of this request is the `inbound_sso_assignment` field and the `update_mask` is relative to that. For example: a PATCH to `/v1beta1/inboundSsoAssignments/0abcdefg1234567&update_mask=rank` with a body of `{ "rank": 1 }` moves that (presumably group-targeted) SSO assignment to the highest priority and shifts any other group-targeted assignments down in priority.
		/// Cloudidentity_inboundSsoAssignments_patch v1beta1/{name}
		/// </summary>
		/// <param name="name">Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Inbound SSO Assignment.</param>
		/// <param name="updateMask">Required. The list of fields to be updated.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Cloudidentity_inboundSsoAssignments_patchAsync(string name, string updateMask, InboundSsoAssignment requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&updateMask=" + (updateMask==null? "" : System.Uri.EscapeDataString(updateMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Approves device to access user data.
		/// Cloudidentity_devices_deviceUsers_approve v1beta1/{name}:approve
		/// </summary>
		/// <param name="name">Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}/deviceUsers/{device_user_id}`, where device_id is the unique ID assigned to the Device, and device_user_id is the unique ID assigned to the User.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Cloudidentity_devices_deviceUsers_approveAsync(string name, ApproveDeviceUserRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":approve";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Blocks device from accessing user data
		/// Cloudidentity_devices_deviceUsers_block v1beta1/{name}:block
		/// </summary>
		/// <param name="name">Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}/deviceUsers/{device_user_id}`, where device_id is the unique ID assigned to the Device, and device_user_id is the unique ID assigned to the User.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Cloudidentity_devices_deviceUsers_blockAsync(string name, BlockDeviceUserRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":block";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Cancels a UserInvitation that was already sent.
		/// Cloudidentity_customers_userinvitations_cancel v1beta1/{name}:cancel
		/// </summary>
		/// <param name="name">Required. `UserInvitation` name in the format `customers/{customer}/userinvitations/{user_email_address}`</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Cloudidentity_customers_userinvitations_cancelAsync(string name, CancelUserInvitationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":cancel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Cancels an unfinished user account wipe. This operation can be used to cancel device wipe in the gap between the wipe operation returning success and the device being wiped.
		/// Cloudidentity_devices_deviceUsers_cancelWipe v1beta1/{name}:cancelWipe
		/// </summary>
		/// <param name="name">Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}/deviceUsers/{device_user_id}`, where device_id is the unique ID assigned to the Device, and device_user_id is the unique ID assigned to the User.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Cloudidentity_devices_deviceUsers_cancelWipeAsync(string name, CancelWipeDeviceUserRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":cancelWipe";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Verifies whether a user account is eligible to receive a UserInvitation (is an unmanaged account). Eligibility is based on the following criteria: * the email address is a consumer account and it's the primary email address of the account, and * the domain of the email address matches an existing verified Google Workspace or Cloud Identity domain If both conditions are met, the user is eligible. **Note:** This method is not supported for Workspace Essentials customers.
		/// Cloudidentity_customers_userinvitations_isInvitableUser v1beta1/{name}:isInvitableUser
		/// </summary>
		/// <param name="name">Required. `UserInvitation` name in the format `customers/{customer}/userinvitations/{user_email_address}`</param>
		/// <returns>Successful response</returns>
		public async Task<IsInvitableUserResponse> Cloudidentity_customers_userinvitations_isInvitableUserAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":isInvitableUser";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<IsInvitableUserResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Modifies the `MembershipRole`s of a `Membership`.
		/// Cloudidentity_groups_memberships_modifyMembershipRoles v1beta1/{name}:modifyMembershipRoles
		/// </summary>
		/// <param name="name">Required. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership` whose roles are to be modified. Must be of the form `groups/{group_id}/memberships/{membership_id}`.</param>
		/// <returns>Successful response</returns>
		public async Task<ModifyMembershipRolesResponse> Cloudidentity_groups_memberships_modifyMembershipRolesAsync(string name, ModifyMembershipRolesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":modifyMembershipRoles";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ModifyMembershipRolesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Move an OrgMembership to a new OrgUnit. NOTE: This is an atomic copy-and-delete. The resource will have a new copy under the destination OrgUnit and be deleted from the source OrgUnit. The resource can only be searched under the destination OrgUnit afterwards.
		/// Cloudidentity_orgUnits_memberships_move v1beta1/{name}:move
		/// </summary>
		/// <param name="name">Required. Immutable. The [resource name](https://cloud.google.com/apis/design/resource_names) of the OrgMembership. Format: orgUnits/{$orgUnitId}/memberships/{$membership} The `$orgUnitId` is the `orgUnitId` from the [Admin SDK `OrgUnit` resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits). To manage a Membership without specifying source `orgUnitId`, this API also supports the wildcard character '-' for `$orgUnitId` per https://google.aip.dev/159. The `$membership` shall be of the form `{$entityType};{$memberId}`, where `$entityType` is the enum value of OrgMembership.EntityType, and `memberId` is the `id` from [Drive API (V3) `Drive` resource](https://developers.google.com/drive/api/v3/reference/drives#resource) for OrgMembership.EntityType.SHARED_DRIVE.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Cloudidentity_orgUnits_memberships_moveAsync(string name, MoveOrgMembershipRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":move";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Sends a UserInvitation to email. If the `UserInvitation` does not exist for this request and it is a valid request, the request creates a `UserInvitation`. **Note:** The `get` and `list` methods have a 48-hour delay where newly-created consumer accounts will not appear in the results. You can still send a `UserInvitation` to those accounts if you know the unmanaged email address and IsInvitableUser==True.
		/// Cloudidentity_customers_userinvitations_send v1beta1/{name}:send
		/// </summary>
		/// <param name="name">Required. `UserInvitation` name in the format `customers/{customer}/userinvitations/{user_email_address}`</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Cloudidentity_customers_userinvitations_sendAsync(string name, SendUserInvitationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":send";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Wipes the user's account on a device.
		/// Cloudidentity_devices_deviceUsers_wipe v1beta1/{name}:wipe
		/// </summary>
		/// <param name="name">Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device_id}/deviceUsers/{device_user_id}`, where device_id is the unique ID assigned to the Device, and device_user_id is the unique ID assigned to the User.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Cloudidentity_devices_deviceUsers_wipeAsync(string name, WipeDeviceUserRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":wipe";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists/Searches DeviceUsers.
		/// Cloudidentity_devices_deviceUsers_list v1beta1/{parent}/deviceUsers
		/// </summary>
		/// <param name="parent">Required. To list all DeviceUsers, set this to "devices/-". To list all DeviceUsers owned by a device, set this to the resource name of the device. Format: devices/{device}</param>
		/// <param name="customer">Optional. [Resource name](https://cloud.google.com/apis/design/resource_names) of the customer. If you're using this API for your own organization, use `customers/my_customer` If you're using this API to manage another organization, use `customers/{customer_id}`, where customer_id is the customer to whom the device belongs.</param>
		/// <param name="filter">Optional. Additional restrictions when fetching list of devices. For a list of search fields, refer to [Mobile device search fields](https://developers.google.com/admin-sdk/directory/v1/search-operators). Multiple search fields are separated by the space character.</param>
		/// <param name="orderBy">Optional. Order specification for devices in the response.</param>
		/// <param name="pageSize">Optional. The maximum number of DeviceUsers to return. If unspecified, at most 5 DeviceUsers will be returned. The maximum value is 20; values above 20 will be coerced to 20.</param>
		/// <param name="pageToken">Optional. A page token, received from a previous `ListDeviceUsers` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListBooks` must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListDeviceUsersResponse> Cloudidentity_devices_deviceUsers_listAsync(string parent, string customer, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/deviceUsers&customer=" + (customer==null? "" : System.Uri.EscapeDataString(customer))+"&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListDeviceUsersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of IdpCredentials in an InboundSamlSsoProfile.
		/// Cloudidentity_inboundSamlSsoProfiles_idpCredentials_list v1beta1/{parent}/idpCredentials
		/// </summary>
		/// <param name="parent">Required. The parent, which owns this collection of `IdpCredential`s. Format: `inboundSamlSsoProfiles/{sso_profile_id}`</param>
		/// <param name="pageSize">The maximum number of `IdpCredential`s to return. The service may return fewer than this value.</param>
		/// <param name="pageToken">A page token, received from a previous `ListIdpCredentials` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListIdpCredentials` must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListIdpCredentialsResponse> Cloudidentity_inboundSamlSsoProfiles_idpCredentials_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/idpCredentials&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListIdpCredentialsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds an IdpCredential. Up to 2 credentials are allowed.
		/// Cloudidentity_inboundSamlSsoProfiles_idpCredentials_add v1beta1/{parent}/idpCredentials:add
		/// </summary>
		/// <param name="parent">Required. The InboundSamlSsoProfile that owns the IdpCredential. Format: `inboundSamlSsoProfiles/{sso_profile_id}`</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Cloudidentity_inboundSamlSsoProfiles_idpCredentials_addAsync(string parent, AddIdpCredentialRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/idpCredentials:add";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List OrgMembership resources in an OrgUnit treated as 'parent'. Parent format: orgUnits/{$orgUnitId} where `$orgUnitId` is the `orgUnitId` from the [Admin SDK `OrgUnit` resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits)
		/// Cloudidentity_orgUnits_memberships_list v1beta1/{parent}/memberships
		/// </summary>
		/// <param name="parent">Required. Immutable. OrgUnit which is queried for a list of memberships. Format: orgUnits/{$orgUnitId} where `$orgUnitId` is the `orgUnitId` from the [Admin SDK `OrgUnit` resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/orgunits).</param>
		/// <param name="customer">Required. Immutable. Customer that this OrgMembership belongs to. All authorization will happen on the role assignments of this customer. Format: customers/{$customerId} where `$customerId` is the `id` from the [Admin SDK `Customer` resource](https://developers.google.com/admin-sdk/directory/reference/rest/v1/customers). You may also use `customers/my_customer` to specify your own organization.</param>
		/// <param name="filter">The search query. Must be specified in [Common Expression Language](https://opensource.google/projects/cel). May only contain equality operators on the `type` (e.g., `type == 'shared_drive'`).</param>
		/// <param name="pageSize">The maximum number of results to return. The service may return fewer than this value. If omitted (or defaulted to zero) the server will default to 50. The maximum allowed value is 100, though requests with page_size greater than that will be silently interpreted as 100.</param>
		/// <param name="pageToken">A page token, received from a previous `OrgMembershipsService.ListOrgMemberships` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListOrgMembershipsRequest` must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListOrgMembershipsResponse> Cloudidentity_orgUnits_memberships_listAsync(string parent, string customer, string filter, Cloudidentity_orgUnits_memberships_listPageSize pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/memberships&customer=" + (customer==null? "" : System.Uri.EscapeDataString(customer))+"&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListOrgMembershipsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a `Membership`.
		/// Cloudidentity_groups_memberships_create v1beta1/{parent}/memberships
		/// </summary>
		/// <param name="parent">Required. The parent `Group` resource under which to create the `Membership`. Must be of the form `groups/{group_id}`.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Cloudidentity_groups_memberships_createAsync(string parent, Membership requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/memberships";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Check a potential member for membership in a group. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. A member has membership to a group as long as there is a single viewable transitive membership between the group and the member. The actor must have view permissions to at least one transitive membership between the member and group.
		/// Cloudidentity_groups_memberships_checkTransitiveMembership v1beta1/{parent}/memberships:checkTransitiveMembership
		/// </summary>
		/// <param name="parent">[Resource name](https://cloud.google.com/apis/design/resource_names) of the group to check the transitive membership in. Format: `groups/{group_id}`, where `group_id` is the unique id assigned to the Group to which the Membership belongs to.</param>
		/// <param name="query">Required. A CEL expression that MUST include member specification. This is a `required` field. Certain groups are uniquely identified by both a 'member_key_id' and a 'member_key_namespace', which requires an additional query input: 'member_key_namespace'. Example query: `member_key_id == 'member_key_id_value'`</param>
		/// <returns>Successful response</returns>
		public async Task<CheckTransitiveMembershipResponse> Cloudidentity_groups_memberships_checkTransitiveMembershipAsync(string parent, string query, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/memberships:checkTransitiveMembership&query=" + (query==null? "" : System.Uri.EscapeDataString(query));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CheckTransitiveMembershipResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a membership graph of just a member or both a member and a group. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. Given a member, the response will contain all membership paths from the member. Given both a group and a member, the response will contain all membership paths between the group and the member.
		/// Cloudidentity_groups_memberships_getMembershipGraph v1beta1/{parent}/memberships:getMembershipGraph
		/// </summary>
		/// <param name="parent">Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the group to search transitive memberships in. Format: `groups/{group_id}`, where `group_id` is the unique ID assigned to the Group to which the Membership belongs to. group_id can be a wildcard collection id "-". When a group_id is specified, the membership graph will be constrained to paths between the member (defined in the query) and the parent. If a wildcard collection is provided, all membership paths connected to the member will be returned.</param>
		/// <param name="query">Required. A CEL expression that MUST include member specification AND label(s). Certain groups are uniquely identified by both a 'member_key_id' and a 'member_key_namespace', which requires an additional query input: 'member_key_namespace'. Example query: `member_key_id == 'member_key_id_value' && in labels`</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Cloudidentity_groups_memberships_getMembershipGraphAsync(string parent, string query, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/memberships:getMembershipGraph&query=" + (query==null? "" : System.Uri.EscapeDataString(query));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Looks up the [resource name](https://cloud.google.com/apis/design/resource_names) of a `Membership` by its `EntityKey`.
		/// Cloudidentity_groups_memberships_lookup v1beta1/{parent}/memberships:lookup
		/// </summary>
		/// <param name="parent">Required. The parent `Group` resource under which to lookup the `Membership` name. Must be of the form `groups/{group_id}`.</param>
		/// <param name="memberKey_id">The ID of the entity. For Google-managed entities, the `id` must be the email address of an existing group or user. For external-identity-mapped entities, the `id` must be a string conforming to the Identity Source's requirements. Must be unique within a `namespace`.</param>
		/// <param name="memberKey_namespace">The namespace in which the entity exists. If not specified, the `EntityKey` represents a Google-managed entity such as a Google user or a Google Group. If specified, the `EntityKey` represents an external-identity-mapped group. The namespace must correspond to an identity source created in Admin Console and must be in the form of `identitysources/{identity_source_id}`.</param>
		/// <returns>Successful response</returns>
		public async Task<LookupMembershipNameResponse> Cloudidentity_groups_memberships_lookupAsync(string parent, string memberKey_id, string memberKey_namespace, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/memberships:lookup&memberKey.id=" + (memberKey_id==null? "" : System.Uri.EscapeDataString(memberKey_id))+"&memberKey.namespace=" + (memberKey_namespace==null? "" : System.Uri.EscapeDataString(memberKey_namespace));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<LookupMembershipNameResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Searches direct groups of a member.
		/// Cloudidentity_groups_memberships_searchDirectGroups v1beta1/{parent}/memberships:searchDirectGroups
		/// </summary>
		/// <param name="parent">[Resource name](https://cloud.google.com/apis/design/resource_names) of the group to search transitive memberships in. Format: groups/{group_id}, where group_id is always '-' as this API will search across all groups for a given member.</param>
		/// <param name="orderBy">The ordering of membership relation for the display name or email in the response. The syntax for this field can be found at https://cloud.google.com/apis/design/design_patterns#sorting_order. Example: Sort by the ascending display name: order_by="group_name" or order_by="group_name asc". Sort by the descending display name: order_by="group_name desc". Sort by the ascending group key: order_by="group_key" or order_by="group_key asc". Sort by the descending group key: order_by="group_key desc".</param>
		/// <param name="pageSize">The default page size is 200 (max 1000).</param>
		/// <param name="pageToken">The next_page_token value returned from a previous list request, if any</param>
		/// <param name="query">Required. A CEL expression that MUST include member specification AND label(s). Users can search on label attributes of groups. CONTAINS match ('in') is supported on labels. Identity-mapped groups are uniquely identified by both a `member_key_id` and a `member_key_namespace`, which requires an additional query input: `member_key_namespace`. Example query: `member_key_id == 'member_key_id_value' && 'label_value' in labels`</param>
		/// <returns>Successful response</returns>
		public async Task<SearchDirectGroupsResponse> Cloudidentity_groups_memberships_searchDirectGroupsAsync(string parent, string orderBy, int pageSize, string pageToken, string query, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/memberships:searchDirectGroups&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&query=" + (query==null? "" : System.Uri.EscapeDataString(query));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<SearchDirectGroupsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Search transitive groups of a member. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. A transitive group is any group that has a direct or indirect membership to the member. Actor must have view permissions all transitive groups.
		/// Cloudidentity_groups_memberships_searchTransitiveGroups v1beta1/{parent}/memberships:searchTransitiveGroups
		/// </summary>
		/// <param name="parent">[Resource name](https://cloud.google.com/apis/design/resource_names) of the group to search transitive memberships in. Format: `groups/{group_id}`, where `group_id` is always '-' as this API will search across all groups for a given member.</param>
		/// <param name="pageSize">The default page size is 200 (max 1000).</param>
		/// <param name="pageToken">The next_page_token value returned from a previous list request, if any.</param>
		/// <param name="query">Required. A CEL expression that MUST include member specification AND label(s). This is a `required` field. Users can search on label attributes of groups. CONTAINS match ('in') is supported on labels. Identity-mapped groups are uniquely identified by both a `member_key_id` and a `member_key_namespace`, which requires an additional query input: `member_key_namespace`. Example query: `member_key_id == 'member_key_id_value' && in labels` Query may optionally contain equality operators on the parent of the group restricting the search within a particular customer, e.g. `parent == 'customers/{customer_id}'`. The `customer_id` must begin with "C" (for example, 'C046psxkn'). This filtering is only supported for Admins with groups read permissons on the input customer. Example query: `member_key_id == 'member_key_id_value' && in labels && parent == 'customers/C046psxkn'`</param>
		/// <returns>Successful response</returns>
		public async Task<SearchTransitiveGroupsResponse> Cloudidentity_groups_memberships_searchTransitiveGroupsAsync(string parent, int pageSize, string pageToken, string query, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/memberships:searchTransitiveGroups&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&query=" + (query==null? "" : System.Uri.EscapeDataString(query));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<SearchTransitiveGroupsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Search transitive memberships of a group. **Note:** This feature is only available to Google Workspace Enterprise Standard, Enterprise Plus, and Enterprise for Education; and Cloud Identity Premium accounts. A transitive membership is any direct or indirect membership of a group. Actor must have view permissions to all transitive memberships.
		/// Cloudidentity_groups_memberships_searchTransitiveMemberships v1beta1/{parent}/memberships:searchTransitiveMemberships
		/// </summary>
		/// <param name="parent">[Resource name](https://cloud.google.com/apis/design/resource_names) of the group to search transitive memberships in. Format: `groups/{group_id}`, where `group_id` is the unique ID assigned to the Group.</param>
		/// <param name="pageSize">The default page size is 200 (max 1000).</param>
		/// <param name="pageToken">The next_page_token value returned from a previous list request, if any.</param>
		/// <returns>Successful response</returns>
		public async Task<SearchTransitiveMembershipsResponse> Cloudidentity_groups_memberships_searchTransitiveMembershipsAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/memberships:searchTransitiveMemberships&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<SearchTransitiveMembershipsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves a list of UserInvitation resources. **Note:** New consumer accounts with the customer's verified domain created within the previous 48 hours will not appear in the result. This delay also applies to newly-verified domains.
		/// Cloudidentity_customers_userinvitations_list v1beta1/{parent}/userinvitations
		/// </summary>
		/// <param name="parent">Required. The customer ID of the Google Workspace or Cloud Identity account the UserInvitation resources are associated with.</param>
		/// <param name="filter">Optional. A query string for filtering `UserInvitation` results by their current state, in the format: `"state=='invited'"`.</param>
		/// <param name="orderBy">Optional. The sort order of the list results. You can sort the results in descending order based on either email or last update timestamp but not both, using `order_by="email desc"`. Currently, sorting is supported for `update_time asc`, `update_time desc`, `email asc`, and `email desc`. If not specified, results will be returned based on `email asc` order.</param>
		/// <param name="pageSize">Optional. The maximum number of UserInvitation resources to return. If unspecified, at most 100 resources will be returned. The maximum value is 200; values above 200 will be set to 200.</param>
		/// <param name="pageToken">Optional. A page token, received from a previous `ListUserInvitations` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListBooks` must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListUserInvitationsResponse> Cloudidentity_customers_userinvitations_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/userinvitations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListUserInvitationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Looks up resource names of the DeviceUsers associated with the caller's credentials, as well as the properties provided in the request. This method must be called with end-user credentials with the scope: https://www.googleapis.com/auth/cloud-identity.devices.lookup If multiple properties are provided, only DeviceUsers having all of these properties are considered as matches - i.e. the query behaves like an AND. Different platforms require different amounts of information from the caller to ensure that the DeviceUser is uniquely identified. - iOS: No properties need to be passed, the caller's credentials are sufficient to identify the corresponding DeviceUser. - Android: Specifying the 'android_id' field is required. - Desktop: Specifying the 'raw_resource_id' field is required.
		/// Cloudidentity_devices_deviceUsers_lookup v1beta1/{parent}:lookup
		/// </summary>
		/// <param name="parent">Must be set to "devices/-/deviceUsers" to search across all DeviceUser belonging to the user.</param>
		/// <param name="androidId">Android Id returned by [Settings.Secure#ANDROID_ID](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID).</param>
		/// <param name="pageSize">The maximum number of DeviceUsers to return. If unspecified, at most 20 DeviceUsers will be returned. The maximum value is 20; values above 20 will be coerced to 20.</param>
		/// <param name="pageToken">A page token, received from a previous `LookupDeviceUsers` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `LookupDeviceUsers` must match the call that provided the page token.</param>
		/// <param name="rawResourceId">Raw Resource Id used by Google Endpoint Verification. If the user is enrolled into Google Endpoint Verification, this id will be saved as the 'device_resource_id' field in the following platform dependent files. Mac: ~/.secureConnect/context_aware_config.json Windows: C:\Users\%USERPROFILE%\.secureConnect\context_aware_config.json Linux: ~/.secureConnect/context_aware_config.json</param>
		/// <param name="userId">The user whose DeviceUser's resource name will be fetched. Must be set to 'me' to fetch the DeviceUser's resource name for the calling user.</param>
		/// <returns>Successful response</returns>
		public async Task<LookupSelfDeviceUsersResponse> Cloudidentity_devices_deviceUsers_lookupAsync(string parent, string androidId, int pageSize, string pageToken, string rawResourceId, string userId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+":lookup&androidId=" + (androidId==null? "" : System.Uri.EscapeDataString(androidId))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&rawResourceId=" + (rawResourceId==null? "" : System.Uri.EscapeDataString(rawResourceId))+"&userId=" + (userId==null? "" : System.Uri.EscapeDataString(userId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<LookupSelfDeviceUsersResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum Cloudidentity_devices_listView
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VIEW_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPANY_INVENTORY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER_ASSIGNED_DEVICES = 2,
	}
	
	public enum Cloudidentity_groups_listView
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VIEW_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BASIC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FULL = 2,
	}
	
	public enum Cloudidentity_groups_createInitialGroupConfig
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INITIAL_GROUP_CONFIG_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WITH_INITIAL_OWNER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMPTY = 2,
	}
	
	public enum Cloudidentity_groups_searchView
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BASIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FULL = 1,
	}
	
	public enum Cloudidentity_orgUnits_memberships_listPageSize
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BASIC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FULL = 1,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

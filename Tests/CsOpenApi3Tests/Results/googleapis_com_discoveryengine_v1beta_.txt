//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleApiHttpBody
	{
		
		/// <summary>
		/// The HTTP Content-Type header value specifying the content type of the body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentType")]
		public string ContentType { get; set; }
		
		/// <summary>
		/// The HTTP request/response body as raw binary.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		/// <summary>
		/// Application specific response metadata. Must be set in the first response for streaming APIs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="extensions")]
		public string[] Extensions { get; set; }
	}
	
	/// <summary>
	/// A description of the context in which an error occurred.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineLoggingErrorContext
	{
		
		/// <summary>
		/// HTTP request data that is related to a reported error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="httpRequest")]
		public GoogleCloudDiscoveryengineLoggingHttpRequestContext HttpRequest { get; set; }
		
		/// <summary>
		/// Indicates a location in the source code of the service for which errors are reported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportLocation")]
		public GoogleCloudDiscoveryengineLoggingSourceLocation ReportLocation { get; set; }
	}
	
	/// <summary>
	/// HTTP request data that is related to a reported error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineLoggingHttpRequestContext
	{
		
		/// <summary>
		/// The HTTP response status code for the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="responseStatusCode")]
		public System.Nullable<System.Int32> ResponseStatusCode { get; set; }
	}
	
	/// <summary>
	/// Indicates a location in the source code of the service for which errors are reported.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineLoggingSourceLocation
	{
		
		/// <summary>
		/// Human-readable name of a function or method—for example, `google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="functionName")]
		public string FunctionName { get; set; }
	}
	
	/// <summary>
	/// An error log which is reported to the Error Reporting system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineLoggingErrorLog
	{
		
		/// <summary>
		/// A description of the context in which an error occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="context")]
		public GoogleCloudDiscoveryengineLoggingErrorContext Context { get; set; }
		
		/// <summary>
		/// The error payload that is populated on LRO import APIs, including the following: * `google.cloud.discoveryengine.v1alpha.DocumentService.ImportDocuments` * `google.cloud.discoveryengine.v1alpha.UserEventService.ImportUserEvents`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="importPayload")]
		public GoogleCloudDiscoveryengineLoggingImportErrorContext ImportPayload { get; set; }
		
		/// <summary>
		/// A message describing the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// The API request payload, represented as a protocol buffer. Most API request types are supported—for example: * `type.googleapis.com/google.cloud.discoveryengine.v1alpha.DocumentService.CreateDocumentRequest` * `type.googleapis.com/google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEventRequest`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestPayload")]
		public System.Collections.Generic.Dictionary<string, object> RequestPayload { get; set; }
		
		/// <summary>
		/// The API response payload, represented as a protocol buffer. This is used to log some "soft errors", where the response is valid but we consider there are some quality issues like unjoined events. The following API responses are supported, and no PII is included: * `google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend` * `google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEvent` * `google.cloud.discoveryengine.v1alpha.UserEventService.CollectUserEvent`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="responsePayload")]
		public System.Collections.Generic.Dictionary<string, object> ResponsePayload { get; set; }
		
		/// <summary>
		/// Describes a running service that sends errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceContext")]
		public GoogleCloudDiscoveryengineLoggingServiceContext ServiceContext { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
	}
	
	/// <summary>
	/// The error payload that is populated on LRO import APIs, including the following: * `google.cloud.discoveryengine.v1alpha.DocumentService.ImportDocuments` * `google.cloud.discoveryengine.v1alpha.UserEventService.ImportUserEvents`
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineLoggingImportErrorContext
	{
		
		/// <summary>
		/// The detailed content which caused the error on importing a document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="document")]
		public string Document { get; set; }
		
		/// <summary>
		/// Google Cloud Storage file path of the import source. Can be set for batch operation error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsPath")]
		public string GcsPath { get; set; }
		
		/// <summary>
		/// Line number of the content in file. Should be empty for permission or batch operation error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lineNumber")]
		public string LineNumber { get; set; }
		
		/// <summary>
		/// The operation resource name of the LRO.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// The detailed content which caused the error on importing a user event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userEvent")]
		public string UserEvent { get; set; }
	}
	
	/// <summary>
	/// Describes a running service that sends errors.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineLoggingServiceContext
	{
		
		/// <summary>
		/// An identifier of the service—for example, `discoveryengine.googleapis.com`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleRpcStatus
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Metadata for Create Schema LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1CreateSchemaMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Metadata for DeleteSchema LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1DeleteSchemaMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the ImportDocuments operation. This is returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1ImportDocumentsMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Count of entries that encountered errors while processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureCount")]
		public string FailureCount { get; set; }
		
		/// <summary>
		/// Count of entries that were processed successfully.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successCount")]
		public string SuccessCount { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response of the ImportDocumentsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1ImportDocumentsResponse
	{
		
		/// <summary>
		/// Configuration of destination for Import related errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorConfig")]
		public GoogleCloudDiscoveryengineV1ImportErrorConfig ErrorConfig { get; set; }
		
		/// <summary>
		/// A sample of errors encountered while processing the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorSamples")]
		public GoogleRpcStatus[] ErrorSamples { get; set; }
	}
	
	/// <summary>
	/// Configuration of destination for Import related errors.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1ImportErrorConfig
	{
		
		/// <summary>
		/// Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsPrefix")]
		public string GcsPrefix { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the ImportSuggestionDenyListEntries operation. This is returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response message for CompletionService.ImportSuggestionDenyListEntries method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesResponse
	{
		
		/// <summary>
		/// A sample of errors encountered while processing the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorSamples")]
		public GoogleRpcStatus[] ErrorSamples { get; set; }
		
		/// <summary>
		/// Count of deny list entries that failed to be imported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failedEntriesCount")]
		public string FailedEntriesCount { get; set; }
		
		/// <summary>
		/// Count of deny list entries successfully imported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="importedEntriesCount")]
		public string ImportedEntriesCount { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the Import operation. This is returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1ImportUserEventsMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Count of entries that encountered errors while processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureCount")]
		public string FailureCount { get; set; }
		
		/// <summary>
		/// Count of entries that were processed successfully.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successCount")]
		public string SuccessCount { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1ImportUserEventsResponse
	{
		
		/// <summary>
		/// Configuration of destination for Import related errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorConfig")]
		public GoogleCloudDiscoveryengineV1ImportErrorConfig ErrorConfig { get; set; }
		
		/// <summary>
		/// A sample of errors encountered while processing the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorSamples")]
		public GoogleRpcStatus[] ErrorSamples { get; set; }
		
		/// <summary>
		/// Count of user events imported with complete existing Documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="joinedEventsCount")]
		public string JoinedEventsCount { get; set; }
		
		/// <summary>
		/// Count of user events imported, but with Document information not found in the existing Branch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unjoinedEventsCount")]
		public string UnjoinedEventsCount { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the PurgeDocuments operation. This will be returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1PurgeDocumentsMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Count of entries that encountered errors while processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureCount")]
		public string FailureCount { get; set; }
		
		/// <summary>
		/// Count of entries that were deleted successfully.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successCount")]
		public string SuccessCount { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response message for DocumentService.PurgeDocuments method. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1PurgeDocumentsResponse
	{
		
		/// <summary>
		/// The total count of documents purged as a result of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purgeCount")]
		public string PurgeCount { get; set; }
		
		/// <summary>
		/// A sample of document names that will be deleted. Only populated if `force` is set to false. A max of 100 names will be returned and the names are chosen at random.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purgeSample")]
		public string[] PurgeSample { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the PurgeSuggestionDenyListEntries operation. This is returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response message for CompletionService.PurgeSuggestionDenyListEntries method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse
	{
		
		/// <summary>
		/// A sample of errors encountered while processing the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorSamples")]
		public GoogleRpcStatus[] ErrorSamples { get; set; }
		
		/// <summary>
		/// Number of suggestion deny list entries purged.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purgeCount")]
		public string PurgeCount { get; set; }
	}
	
	/// <summary>
	/// Defines the structure and layout of a type of document data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1Schema
	{
		
		/// <summary>
		/// The JSON representation of the schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jsonSchema")]
		public string JsonSchema { get; set; }
		
		/// <summary>
		/// Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The structured representation of the schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="structSchema")]
		public System.Collections.Generic.Dictionary<string, object> StructSchema { get; set; }
	}
	
	/// <summary>
	/// Metadata for UpdateSchema LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1UpdateSchemaMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the SiteSearchEngineService.BatchCreateTargetSites operation. This will be returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSiteMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response message for SiteSearchEngineService.BatchCreateTargetSites method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSitesResponse
	{
		
		/// <summary>
		/// TargetSites created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSites")]
		public GoogleCloudDiscoveryengineV1alphaTargetSite[] TargetSites { get; set; }
	}
	
	/// <summary>
	/// A target site for the SiteSearchEngine.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaTargetSite
	{
		
		/// <summary>
		/// Input only. If set to false, a uri_pattern is generated to include all pages whose address contains the provided_uri_pattern. If set to true, an uri_pattern is generated to try to be an exact match of the provided_uri_pattern or just the specific page if the provided_uri_pattern is a specific one. provided_uri_pattern is always normalized to generate the URI pattern to be used by the search engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exactMatch")]
		public System.Nullable<System.Boolean> ExactMatch { get; set; }
		
		/// <summary>
		/// Site search indexing failure reasons.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason FailureReason { get; set; }
		
		/// <summary>
		/// Output only. This is system-generated based on the provided_uri_pattern.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="generatedUriPattern")]
		public string GeneratedUriPattern { get; set; }
		
		/// <summary>
		/// Output only. Indexing status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="indexingStatus")]
		public System.Nullable<GoogleCloudDiscoveryengineV1alphaTargetSiteIndexingStatus> IndexingStatus { get; set; }
		
		/// <summary>
		/// Output only. The fully qualified resource name of the target site. `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}` The `target_site_id` is system-generated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. Input only. The user provided URI pattern from which the `generated_uri_pattern` is generated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="providedUriPattern")]
		public string ProvidedUriPattern { get; set; }
		
		/// <summary>
		/// Verification information for target sites in advanced site search.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="siteVerificationInfo")]
		public GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo SiteVerificationInfo { get; set; }
		
		/// <summary>
		/// The type of the target site, e.g. whether the site is to be included or excluded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudDiscoveryengineV1alphaTargetSiteType> Type { get; set; }
		
		/// <summary>
		/// Output only. The target site's last updated time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Site search indexing failure reasons.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason
	{
		
		[System.Runtime.Serialization.DataMember(Name="quotaFailure")]
		public GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonQuotaFailure QuotaFailure { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonQuotaFailure
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1alphaTargetSiteIndexingStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDEXING_STATUS_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 4,
	}
	
	/// <summary>
	/// Verification information for target sites in advanced site search.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo
	{
		
		/// <summary>
		/// Site verification state indicating the ownership and validity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="siteVerificationState")]
		public System.Nullable<GoogleCloudDiscoveryengineV1alphaSiteVerificationInfoSiteVerificationState> SiteVerificationState { get; set; }
		
		/// <summary>
		/// Latest site verification time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verifyTime")]
		public string VerifyTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1alphaSiteVerificationInfoSiteVerificationState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SITE_VERIFICATION_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VERIFIED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNVERIFIED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXEMPTED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1alphaTargetSiteType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INCLUDE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXCLUDE = 2,
	}
	
	/// <summary>
	/// Metadata related to the progress of the DataStoreService.CreateDataStore operation. This will be returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaCreateDataStoreMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the EngineService.CreateEngine operation. This will be returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaCreateEngineMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Metadata for Create Schema LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaCreateSchemaMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the SiteSearchEngineService.CreateTargetSite operation. This will be returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaCreateTargetSiteMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// DataStore captures global settings and configs at the DataStore level.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaDataStore
	{
		
		/// <summary>
		/// Immutable. The content config of the data store. If this field is unset, the server behavior defaults to ContentConfig.NO_CONTENT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentConfig")]
		public System.Nullable<GoogleCloudDiscoveryengineV1alphaDataStoreContentConfig> ContentConfig { get; set; }
		
		/// <summary>
		/// Output only. Timestamp the DataStore was created at.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The id of the default Schema asscociated to this data store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultSchemaId")]
		public string DefaultSchemaId { get; set; }
		
		/// <summary>
		/// Required. The data store display name. This field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Immutable. The industry vertical that the data store registers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="industryVertical")]
		public System.Nullable<GoogleCloudDiscoveryengineV1alphaDataStoreIndustryVertical> IndustryVertical { get; set; }
		
		/// <summary>
		/// Immutable. The full resource name of the data store. Format: `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The solutions that the data store enrolls. Available solutions for each industry_vertical: * `MEDIA`: `SOLUTION_TYPE_RECOMMENDATION` and `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH` is automatically enrolled. Other solutions cannot be enrolled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="solutionTypes")]
		public string[] SolutionTypes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1alphaDataStoreContentConfig
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTENT_CONFIG_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_CONTENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTENT_REQUIRED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLIC_WEBSITE = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1alphaDataStoreIndustryVertical
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDUSTRY_VERTICAL_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GENERIC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIA = 2,
	}
	
	/// <summary>
	/// Metadata related to the progress of the DataStoreService.DeleteDataStore operation. This will be returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaDeleteDataStoreMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the EngineService.DeleteEngine operation. This will be returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaDeleteEngineMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Metadata for DeleteSchema LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaDeleteSchemaMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the SiteSearchEngineService.DeleteTargetSite operation. This will be returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaDeleteTargetSiteMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the SiteSearchEngineService.DisableAdvancedSiteSearch operation. This will be returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response message for SiteSearchEngineService.DisableAdvancedSiteSearch method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchResponse
	{
	}
	
	/// <summary>
	/// A singleton resource of DataStore. It's empty when DataStore is created, which defaults to digital parser. The first call to DataStoreService.UpdateDocumentProcessingConfig method will initialize the config.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig
	{
		
		/// <summary>
		/// Output only. The full resource name of the Document Processing Config. Format: `projects/*/locations/*/collections/*/dataStores/*/documentProcessingConfig`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The OCR options for parsing documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ocrConfig")]
		public GoogleCloudDiscoveryengineV1alphaOcrConfig OcrConfig { get; set; }
	}
	
	/// <summary>
	/// The OCR options for parsing documents.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaOcrConfig
	{
		
		/// <summary>
		/// Required. If OCR is enabled or not. OCR must be enabled for other OcrConfig options to apply. We will only perform OCR on the first 80 pages of the PDF files.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Apply additional enhanced OCR processing to a list of document elements. Supported values: * `table`: advanced table parsing model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enhancedDocumentElements")]
		public string[] EnhancedDocumentElements { get; set; }
		
		/// <summary>
		/// If true, will use native text instead of OCR text on pages containing native text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useNativeText")]
		public System.Nullable<System.Boolean> UseNativeText { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the SiteSearchEngineService.EnableAdvancedSiteSearch operation. This will be returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response message for SiteSearchEngineService.EnableAdvancedSiteSearch method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchResponse
	{
	}
	
	/// <summary>
	/// Metadata that describes the training and serving parameters of an Engine.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaEngine
	{
		
		/// <summary>
		/// Configurations for a Chat Engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="chatEngineConfig")]
		public GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig ChatEngineConfig { get; set; }
		
		/// <summary>
		/// Additional information of a Chat Engine. Fields in this message are output only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="chatEngineMetadata")]
		public GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata ChatEngineMetadata { get; set; }
		
		/// <summary>
		/// Common configurations for an Engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="commonConfig")]
		public GoogleCloudDiscoveryengineV1alphaEngineCommonConfig CommonConfig { get; set; }
		
		/// <summary>
		/// Output only. Timestamp the Recommendation Engine was created at.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The data stores associated with this engine. For SOLUTION_TYPE_SEARCH and SOLUTION_TYPE_RECOMMENDATION type of engines, they can only associate with at most one data store. If solution_type is SOLUTION_TYPE_CHAT, multiple DataStores in the same Collection can be associated here. Note that when used in CreateEngineRequest, one DataStore id must be provided as the system will use it for necessary intializations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataStoreIds")]
		public string[] DataStoreIds { get; set; }
		
		/// <summary>
		/// Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to `GENERIC`. Vertical on Engine has to match vertical of the DataStore liniked to the engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="industryVertical")]
		public GoogleCloudDiscoveryengineV1alphaDataStoreIndustryVertical IndustryVertical { get; set; }
		
		/// <summary>
		/// Additional config specs for a Media Recommendation engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mediaRecommendationEngineConfig")]
		public GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig MediaRecommendationEngineConfig { get; set; }
		
		/// <summary>
		/// Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded string with a length limit of 1024 characters. Format: `projects/{project_number}/locations/{location}/collections/{collection}/engines/{engine}` engine should be 1-63 characters, and valid characters are /a-z0-9*/. Otherwise, an INVALID_ARGUMENT error is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Additional information of a recommendation engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recommendationMetadata")]
		public GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata RecommendationMetadata { get; set; }
		
		/// <summary>
		/// Configurations for a Search Engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchEngineConfig")]
		public GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig SearchEngineConfig { get; set; }
		
		/// <summary>
		/// Additional config specs for a `similar-items` engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="similarDocumentsConfig")]
		public GoogleCloudDiscoveryengineV1alphaEngineSimilarDocumentsEngineConfig SimilarDocumentsConfig { get; set; }
		
		/// <summary>
		/// Required. The solutions of the engine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="solutionType")]
		public System.Nullable<GoogleCloudDiscoveryengineV1alphaEngineSolutionType> SolutionType { get; set; }
		
		/// <summary>
		/// Output only. Timestamp the Recommendation Engine was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Configurations for a Chat Engine.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig
	{
		
		/// <summary>
		/// Configurations for generating a Dialogflow agent. Note that these configurations are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="agentCreationConfig")]
		public GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig AgentCreationConfig { get; set; }
		
		/// <summary>
		/// The resource name of an exist Dialogflow agent to link to this Chat Engine. Customers can either provide `agent_creation_config` to create agent or provide an agent name that links the agent with the Chat engine. Format: `projects//locations//agents/`. Note that the `dialogflow_agent_to_link` are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation. Please use ChatEngineMetadata.dialogflow_agent for actual agent association after Engine is created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dialogflowAgentToLink")]
		public string DialogflowAgentToLink { get; set; }
	}
	
	/// <summary>
	/// Configurations for generating a Dialogflow agent. Note that these configurations are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig
	{
		
		/// <summary>
		/// Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="business")]
		public string Business { get; set; }
		
		/// <summary>
		/// Required. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultLanguageCode")]
		public string DefaultLanguageCode { get; set; }
		
		/// <summary>
		/// Agent location for Agent creation, supported values: global/us/eu. If not provided, us Engine will create Agent using us-central-1 by default; eu Engine will create Agent using eu-west-1 by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeZone")]
		public string TimeZone { get; set; }
	}
	
	/// <summary>
	/// Additional information of a Chat Engine. Fields in this message are output only.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata
	{
		
		/// <summary>
		/// The resource name of a Dialogflow agent, that this Chat Engine refers to. Format: `projects//locations//agents/`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dialogflowAgent")]
		public string DialogflowAgent { get; set; }
	}
	
	/// <summary>
	/// Common configurations for an Engine.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaEngineCommonConfig
	{
		
		/// <summary>
		/// The name of the company, business or entity that is associated with the engine. Setting this may help improve LLM related features.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="companyName")]
		public string CompanyName { get; set; }
	}
	
	/// <summary>
	/// Additional config specs for a Media Recommendation engine.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig
	{
		
		/// <summary>
		/// The optimization objective e.g. `cvr`. This field together with optimization_objective describe engine metadata to use to control engine training and serving. Currently supported values: `ctr`, `cvr`. If not specified, we choose default based on engine type. Default depends on type of recommendation: `recommended-for-you` => `ctr` `others-you-may-like` => `ctr`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="optimizationObjective")]
		public string OptimizationObjective { get; set; }
		
		/// <summary>
		/// Custom threshold for `cvr` optimization_objective.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="optimizationObjectiveConfig")]
		public GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig OptimizationObjectiveConfig { get; set; }
		
		/// <summary>
		/// The training state that the engine is in (e.g. `TRAINING` or `PAUSED`). Since part of the cost of running the service is frequency of training - this can be used to determine when to train engine in order to control cost. If not specified: the default value for `CreateEngine` method is `TRAINING`. The default value for `UpdateEngine` method is to keep the state the same as before.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trainingState")]
		public System.Nullable<GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState> TrainingState { get; set; }
		
		/// <summary>
		/// Required. The type of engine e.g. `recommended-for-you`. This field together with optimization_objective describe engine metadata to use to control engine training and serving. Currently supported values: `recommended-for-you`, `others-you-may-like`, `more-like-this`, `most-popular-items`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Custom threshold for `cvr` optimization_objective.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig
	{
		
		/// <summary>
		/// Required. The name of the field to target. Currently supported values: `watch-percentage`, `watch-time`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetField")]
		public string TargetField { get; set; }
		
		/// <summary>
		/// Required. The threshold to be applied to the target (e.g., 0.5).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetFieldValueFloat")]
		public System.Nullable<System.Single> TargetFieldValueFloat { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigTrainingState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRAINING_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAUSED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRAINING = 2,
	}
	
	/// <summary>
	/// Additional information of a recommendation engine.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata
	{
		
		/// <summary>
		/// Output only. The state of data requirements for this engine: `DATA_OK` and `DATA_ERROR`. Engine cannot be trained if the data is in `DATA_ERROR` state. Engine can have `DATA_ERROR` state even if serving state is `ACTIVE`: engines were trained successfully before, but cannot be refreshed because the underlying engine no longer has sufficient data for training.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataState")]
		public System.Nullable<GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadataDataState> DataState { get; set; }
		
		/// <summary>
		/// Output only. The timestamp when the latest successful tune finished. Only applicable on Media Recommendation engines.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastTuneTime")]
		public string LastTuneTime { get; set; }
		
		/// <summary>
		/// Output only. The serving state of the engine: `ACTIVE`, `NOT_ACTIVE`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servingState")]
		public System.Nullable<GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadataServingState> ServingState { get; set; }
		
		/// <summary>
		/// Output only. The latest tune operation id associated with the engine. Only applicable on Media Recommendation engines. If present, this operation id can be used to determine if there is an ongoing tune for this engine. To check the operation status, send the GetOperation request with this operation id in the engine resource format. If no tuning has happened for this engine, the string is empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tuningOperation")]
		public string TuningOperation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadataDataState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_OK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_ERROR = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadataServingState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVING_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TUNED = 3,
	}
	
	/// <summary>
	/// Configurations for a Search Engine.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig
	{
		
		/// <summary>
		/// The add-on that this search engine enables.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchAddOns")]
		public string[] SearchAddOns { get; set; }
		
		/// <summary>
		/// The search feature tier of this engine. Different tiers might have different pricing. To learn more, please check the pricing documentation. Defaults to SearchTier.SEARCH_TIER_STANDARD if not specified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchTier")]
		public System.Nullable<GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier> SearchTier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfigSearchTier
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEARCH_TIER_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEARCH_TIER_STANDARD = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEARCH_TIER_ENTERPRISE = 2,
	}
	
	/// <summary>
	/// Additional config specs for a `similar-items` engine.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaEngineSimilarDocumentsEngineConfig
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1alphaEngineSolutionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOLUTION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOLUTION_TYPE_RECOMMENDATION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOLUTION_TYPE_SEARCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOLUTION_TYPE_CHAT = 3,
	}
	
	/// <summary>
	/// Metadata related to the progress of the EstimateDataSize operation. This is returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaEstimateDataSizeMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
	}
	
	/// <summary>
	/// Response of the EstimateDataSize request. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaEstimateDataSizeResponse
	{
		
		/// <summary>
		/// Data size in terms of bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataSizeBytes")]
		public string DataSizeBytes { get; set; }
		
		/// <summary>
		/// Total number of documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documentCount")]
		public string DocumentCount { get; set; }
	}
	
	/// <summary>
	/// Configurations for fields of a schema. For example, configuring a field is indexable, or searchable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaFieldConfig
	{
		
		/// <summary>
		/// If completable_option is COMPLETABLE_ENABLED, field values are directly used and returned as suggestions for Autocomplete in CompletionService.CompleteQuery. If completable_option is unset, the server behavior defaults to COMPLETABLE_DISABLED for fields that support setting completable options, which are just `string` fields. For those fields that do not support setting completable options, the server will skip completable option setting, and setting completable_option for those fields will throw `INVALID_ARGUMENT` error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="completableOption")]
		public System.Nullable<GoogleCloudDiscoveryengineV1alphaFieldConfigCompletableOption> CompletableOption { get; set; }
		
		/// <summary>
		/// If dynamic_facetable_option is DYNAMIC_FACETABLE_ENABLED, field values are available for dynamic facet. Could only be DYNAMIC_FACETABLE_DISABLED if FieldConfig.indexable_option is INDEXABLE_DISABLED. Otherwise, an `INVALID_ARGUMENT` error will be returned. If dynamic_facetable_option is unset, the server behavior defaults to DYNAMIC_FACETABLE_DISABLED for fields that support setting dynamic facetable options. For those fields that do not support setting dynamic facetable options, such as `object` and `boolean`, the server will skip dynamic facetable option setting, and setting dynamic_facetable_option for those fields will throw `INVALID_ARGUMENT` error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dynamicFacetableOption")]
		public System.Nullable<GoogleCloudDiscoveryengineV1alphaFieldConfigDynamicFacetableOption> DynamicFacetableOption { get; set; }
		
		/// <summary>
		/// Required. Field path of the schema field. For example: `title`, `description`, `release_info.release_year`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldPath")]
		public string FieldPath { get; set; }
		
		/// <summary>
		/// Output only. Raw type of the field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldType")]
		public System.Nullable<GoogleCloudDiscoveryengineV1alphaFieldConfigFieldType> FieldType { get; set; }
		
		/// <summary>
		/// If indexable_option is INDEXABLE_ENABLED, field values are indexed so that it can be filtered or faceted in SearchService.Search. If indexable_option is unset, the server behavior defaults to INDEXABLE_DISABLED for fields that support setting indexable options. For those fields that do not support setting indexable options, such as `object` and `boolean` and key properties, the server will skip indexable_option setting, and setting indexable_option for those fields will throw `INVALID_ARGUMENT` error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="indexableOption")]
		public System.Nullable<GoogleCloudDiscoveryengineV1alphaFieldConfigIndexableOption> IndexableOption { get; set; }
		
		/// <summary>
		/// Output only. Type of the key property that this field is mapped to. Empty string if this is not annotated as mapped to a key property. Example types are `title`, `description`. Full list is defined by `keyPropertyMapping` in the schema field annotation. If the schema field has a `KeyPropertyMapping` annotation, `indexable_option` and `searchable_option` of this field cannot be modified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="keyPropertyType")]
		public string KeyPropertyType { get; set; }
		
		/// <summary>
		/// If recs_filterable_option is FILTERABLE_ENABLED, field values are filterable by filter expression in RecommendationService.Recommend. If FILTERABLE_ENABLED but the field type is numerical, field values are not filterable by text queries in RecommendationService.Recommend. Only textual fields are supported. If recs_filterable_option is unset, the default setting is FILTERABLE_DISABLED for fields that support setting filterable options. When a field set to [FILTERABLE_DISABLED] is filtered, a warning is generated and an empty result is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recsFilterableOption")]
		public System.Nullable<GoogleCloudDiscoveryengineV1alphaFieldConfigRecsFilterableOption> RecsFilterableOption { get; set; }
		
		/// <summary>
		/// If retrievable_option is RETRIEVABLE_ENABLED, field values are included in the search results. If retrievable_option is unset, the server behavior defaults to RETRIEVABLE_DISABLED for fields that support setting retrievable options. For those fields that do not support setting retrievable options, such as `object` and `boolean`, the server will skip retrievable option setting, and setting retrievable_option for those fields will throw `INVALID_ARGUMENT` error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retrievableOption")]
		public System.Nullable<GoogleCloudDiscoveryengineV1alphaFieldConfigRetrievableOption> RetrievableOption { get; set; }
		
		/// <summary>
		/// If searchable_option is SEARCHABLE_ENABLED, field values are searchable by text queries in SearchService.Search. If SEARCHABLE_ENABLED but field type is numerical, field values will not be searchable by text queries in SearchService.Search, as there are no text values associated to numerical fields. If searchable_option is unset, the server behavior defaults to SEARCHABLE_DISABLED for fields that support setting searchable options. Only `string` fields that have no key property mapping support setting searchable_option. For those fields that do not support setting searchable options, the server will skip searchable option setting, and setting searchable_option for those fields will throw `INVALID_ARGUMENT` error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchableOption")]
		public System.Nullable<GoogleCloudDiscoveryengineV1alphaFieldConfigSearchableOption> SearchableOption { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1alphaFieldConfigCompletableOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETABLE_OPTION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETABLE_ENABLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETABLE_DISABLED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1alphaFieldConfigDynamicFacetableOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DYNAMIC_FACETABLE_OPTION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DYNAMIC_FACETABLE_ENABLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DYNAMIC_FACETABLE_DISABLED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1alphaFieldConfigFieldType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIELD_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OBJECT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STRING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NUMBER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTEGER = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOOLEAN = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GEOLOCATION = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1alphaFieldConfigIndexableOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDEXABLE_OPTION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDEXABLE_ENABLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INDEXABLE_DISABLED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1alphaFieldConfigRecsFilterableOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTERABLE_OPTION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTERABLE_ENABLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTERABLE_DISABLED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1alphaFieldConfigRetrievableOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RETRIEVABLE_OPTION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RETRIEVABLE_ENABLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RETRIEVABLE_DISABLED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1alphaFieldConfigSearchableOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEARCHABLE_OPTION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEARCHABLE_ENABLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEARCHABLE_DISABLED = 2,
	}
	
	/// <summary>
	/// Metadata related to the progress of the ImportDocuments operation. This is returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaImportDocumentsMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Count of entries that encountered errors while processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureCount")]
		public string FailureCount { get; set; }
		
		/// <summary>
		/// Count of entries that were processed successfully.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successCount")]
		public string SuccessCount { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response of the ImportDocumentsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaImportDocumentsResponse
	{
		
		/// <summary>
		/// Configuration of destination for Import related errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorConfig")]
		public GoogleCloudDiscoveryengineV1alphaImportErrorConfig ErrorConfig { get; set; }
		
		/// <summary>
		/// A sample of errors encountered while processing the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorSamples")]
		public GoogleRpcStatus[] ErrorSamples { get; set; }
	}
	
	/// <summary>
	/// Configuration of destination for Import related errors.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaImportErrorConfig
	{
		
		/// <summary>
		/// Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsPrefix")]
		public string GcsPrefix { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the ImportSuggestionDenyListEntries operation. This is returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response message for CompletionService.ImportSuggestionDenyListEntries method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse
	{
		
		/// <summary>
		/// A sample of errors encountered while processing the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorSamples")]
		public GoogleRpcStatus[] ErrorSamples { get; set; }
		
		/// <summary>
		/// Count of deny list entries that failed to be imported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failedEntriesCount")]
		public string FailedEntriesCount { get; set; }
		
		/// <summary>
		/// Count of deny list entries successfully imported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="importedEntriesCount")]
		public string ImportedEntriesCount { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the Import operation. This is returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaImportUserEventsMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Count of entries that encountered errors while processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureCount")]
		public string FailureCount { get; set; }
		
		/// <summary>
		/// Count of entries that were processed successfully.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successCount")]
		public string SuccessCount { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse
	{
		
		/// <summary>
		/// Configuration of destination for Import related errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorConfig")]
		public GoogleCloudDiscoveryengineV1alphaImportErrorConfig ErrorConfig { get; set; }
		
		/// <summary>
		/// A sample of errors encountered while processing the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorSamples")]
		public GoogleRpcStatus[] ErrorSamples { get; set; }
		
		/// <summary>
		/// Count of user events imported with complete existing Documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="joinedEventsCount")]
		public string JoinedEventsCount { get; set; }
		
		/// <summary>
		/// Count of user events imported, but with Document information not found in the existing Branch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unjoinedEventsCount")]
		public string UnjoinedEventsCount { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the PurgeDocuments operation. This will be returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaPurgeDocumentsMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Count of entries that encountered errors while processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureCount")]
		public string FailureCount { get; set; }
		
		/// <summary>
		/// Count of entries that were deleted successfully.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successCount")]
		public string SuccessCount { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response message for DocumentService.PurgeDocuments method. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaPurgeDocumentsResponse
	{
		
		/// <summary>
		/// The total count of documents purged as a result of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purgeCount")]
		public string PurgeCount { get; set; }
		
		/// <summary>
		/// A sample of document names that will be deleted. Only populated if `force` is set to false. A max of 100 names will be returned and the names are chosen at random.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purgeSample")]
		public string[] PurgeSample { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the PurgeSuggestionDenyListEntries operation. This is returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response message for CompletionService.PurgeSuggestionDenyListEntries method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesResponse
	{
		
		/// <summary>
		/// A sample of errors encountered while processing the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorSamples")]
		public GoogleRpcStatus[] ErrorSamples { get; set; }
		
		/// <summary>
		/// Number of suggestion deny list entries purged.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purgeCount")]
		public string PurgeCount { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the PurgeUserEvents operation. This will be returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaPurgeUserEventsMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Count of entries that encountered errors while processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureCount")]
		public string FailureCount { get; set; }
		
		/// <summary>
		/// Count of entries that were deleted successfully.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successCount")]
		public string SuccessCount { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response of the PurgeUserEventsRequest. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse
	{
		
		/// <summary>
		/// The total count of events purged as a result of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purgeCount")]
		public string PurgeCount { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the SiteSearchEngineService.RecrawlUris operation. This will be returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Unique URIs in the request that don't match any TargetSite in the DataStore, only match TargetSites that haven't been fully indexed, or match a TargetSite with type EXCLUDE.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invalidUris")]
		public string[] InvalidUris { get; set; }
		
		/// <summary>
		/// Total number of URIs that have yet to be crawled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pendingCount")]
		public System.Nullable<System.Int32> PendingCount { get; set; }
		
		/// <summary>
		/// Total number of URIs that were rejected due to insufficient indexing resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quotaExceededCount")]
		public System.Nullable<System.Int32> QuotaExceededCount { get; set; }
		
		/// <summary>
		/// Total number of URIs that have been crawled so far.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successCount")]
		public System.Nullable<System.Int32> SuccessCount { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// Total number of unique URIs in the request that are not in invalid_uris.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validUrisCount")]
		public System.Nullable<System.Int32> ValidUrisCount { get; set; }
	}
	
	/// <summary>
	/// Response message for SiteSearchEngineService.RecrawlUris method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponse
	{
		
		/// <summary>
		/// URIs that were not crawled before the LRO terminated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failedUris")]
		public string[] FailedUris { get; set; }
		
		/// <summary>
		/// Details for a sample of up to 10 `failed_uris`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureSamples")]
		public GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfo[] FailureSamples { get; set; }
	}
	
	/// <summary>
	/// Details about why a particular URI failed to be crawled. Each FailureInfo contains one FailureReason per CorpusType.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfo
	{
		
		/// <summary>
		/// List of failure reasons by corpus type (e.g. desktop, mobile).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureReasons")]
		public GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason[] FailureReasons { get; set; }
		
		/// <summary>
		/// URI that failed to be crawled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Details about why crawling failed for a particular CorpusType, e.g. DESKTOP and MOBILE crawling may fail for different reasons.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason
	{
		
		/// <summary>
		/// DESKTOP, MOBILE, or CORPUS_TYPE_UNSPECIFIED.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="corpusType")]
		public System.Nullable<GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReasonCorpusType> CorpusType { get; set; }
		
		/// <summary>
		/// Reason why the URI was not crawled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorMessage")]
		public string ErrorMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReasonCorpusType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CORPUS_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESKTOP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOBILE = 2,
	}
	
	/// <summary>
	/// Defines the structure and layout of a type of document data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaSchema
	{
		
		/// <summary>
		/// Output only. Configurations for fields of the schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldConfigs")]
		public GoogleCloudDiscoveryengineV1alphaFieldConfig[] FieldConfigs { get; set; }
		
		/// <summary>
		/// The JSON representation of the schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jsonSchema")]
		public string JsonSchema { get; set; }
		
		/// <summary>
		/// Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The structured representation of the schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="structSchema")]
		public System.Collections.Generic.Dictionary<string, object> StructSchema { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the TrainCustomModel operation. This is returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaTrainCustomModelMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response of the TrainCustomModelRequest. This message is returned by the google.longrunning.Operations.response field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaTrainCustomModelResponse
	{
		
		/// <summary>
		/// Configuration of destination for Import related errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorConfig")]
		public GoogleCloudDiscoveryengineV1alphaImportErrorConfig ErrorConfig { get; set; }
		
		/// <summary>
		/// A sample of errors encountered while processing the data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorSamples")]
		public GoogleRpcStatus[] ErrorSamples { get; set; }
		
		/// <summary>
		/// The trained model status. Possible values are: * **bad-data**: The training data quality is bad. * **no-improvement**: Tuning didn't improve performance. Won't deploy. * **in-progress**: Model training is in progress. * **ready**: The model is ready for serving.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelStatus")]
		public string ModelStatus { get; set; }
	}
	
	/// <summary>
	/// Metadata associated with a tune operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaTuneEngineMetadata
	{
		
		/// <summary>
		/// Required. The resource name of the engine that this tune applies to. Format: `projects/{project_number}/locations/{location_id}/collections/{collection_id}/engines/{engine_id}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="engine")]
		public string Engine { get; set; }
	}
	
	/// <summary>
	/// Response associated with a tune operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaTuneEngineResponse
	{
	}
	
	/// <summary>
	/// Metadata for UpdateSchema LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaUpdateSchemaMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the SiteSearchEngineService.UpdateTargetSite operation. This will be returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1alphaUpdateTargetSiteMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// BigQuery source import data from.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaBigQuerySource
	{
		
		/// <summary>
		/// The schema to use when parsing the data from the source. Supported values for user event imports: * `user_event` (default): One UserEvent per row. Supported values for document imports: * `document` (default): One Document format per row. Each document must have a valid Document.id and one of Document.json_data or Document.struct_data. * `custom`: One custom data per row in arbitrary format that conforms to the defined Schema of the data store. This can only be used by Gen App Builder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataSchema")]
		public string DataSchema { get; set; }
		
		/// <summary>
		/// Required. The BigQuery data set to copy the data from with a length limit of 1,024 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datasetId")]
		public string DatasetId { get; set; }
		
		/// <summary>
		/// Intermediate Cloud Storage directory used for the import with a length limit of 2,000 characters. Can be specified if one wants to have the BigQuery export to a specific Cloud Storage directory.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsStagingDir")]
		public string GcsStagingDir { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partitionDate")]
		public GoogleTypeDate PartitionDate { get; set; }
		
		/// <summary>
		/// The project ID (can be project # or ID) that the BigQuery source is in with a length limit of 128 characters. If not specified, inherits the project ID from the parent request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
		
		/// <summary>
		/// Required. The BigQuery table to copy the data from with a length limit of 1,024 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tableId")]
		public string TableId { get; set; }
	}
	
	/// <summary>
	/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeDate
	{
		
		/// <summary>
		/// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="day")]
		public System.Nullable<System.Int32> Day { get; set; }
		
		/// <summary>
		/// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="month")]
		public System.Nullable<System.Int32> Month { get; set; }
		
		/// <summary>
		/// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="year")]
		public System.Nullable<System.Int32> Year { get; set; }
	}
	
	/// <summary>
	/// Response message for CompletionService.CompleteQuery method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaCompleteQueryResponse
	{
		
		/// <summary>
		/// Results of the matched query suggestions. The result list is ordered and the first result is a top suggestion.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="querySuggestions")]
		public GoogleCloudDiscoveryengineV1betaCompleteQueryResponseQuerySuggestion[] QuerySuggestions { get; set; }
		
		/// <summary>
		/// True if the returned suggestions are all tail suggestions. For tail matching to be triggered, include_tail_suggestions in the request must be true and there must be no suggestions that match the full query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tailMatchTriggered")]
		public System.Nullable<System.Boolean> TailMatchTriggered { get; set; }
	}
	
	/// <summary>
	/// Suggestions as search queries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaCompleteQueryResponseQuerySuggestion
	{
		
		/// <summary>
		/// The unique document field paths that serve as the source of this suggestion if it was generated from completable fields. This field is only populated for the document-completable model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="completableFieldPaths")]
		public string[] CompletableFieldPaths { get; set; }
		
		/// <summary>
		/// The suggestion for the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suggestion")]
		public string Suggestion { get; set; }
	}
	
	/// <summary>
	/// Detailed completion information including completion attribution token and clicked completion info.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaCompletionInfo
	{
		
		/// <summary>
		/// End user selected CompleteQueryResponse.QuerySuggestion.suggestion position, starting from 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selectedPosition")]
		public System.Nullable<System.Int32> SelectedPosition { get; set; }
		
		/// <summary>
		/// End user selected CompleteQueryResponse.QuerySuggestion.suggestion.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selectedSuggestion")]
		public string SelectedSuggestion { get; set; }
	}
	
	/// <summary>
	/// External conversation proto definition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaConversation
	{
		
		/// <summary>
		/// Output only. The time the conversation finished.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Conversation messages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="messages")]
		public GoogleCloudDiscoveryengineV1betaConversationMessage[] Messages { get; set; }
		
		/// <summary>
		/// Immutable. Fully qualified name `project/*/locations/global/collections/{collection}/dataStore/*/conversations/*` or `project/*/locations/global/collections/{collection}/engines/*/conversations/*`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The time the conversation started.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// The state of the Conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudDiscoveryengineV1betaConversationState> State { get; set; }
		
		/// <summary>
		/// A unique identifier for tracking users.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userPseudoId")]
		public string UserPseudoId { get; set; }
	}
	
	/// <summary>
	/// Defines a conversation message.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaConversationMessage
	{
		
		/// <summary>
		/// Output only. Message creation timestamp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Defines a reply message to user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply")]
		public GoogleCloudDiscoveryengineV1betaReply Reply { get; set; }
		
		/// <summary>
		/// Defines text input.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userInput")]
		public GoogleCloudDiscoveryengineV1betaTextInput UserInput { get; set; }
	}
	
	/// <summary>
	/// Defines a reply message to user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaReply
	{
		
		/// <summary>
		/// References in the reply.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="references")]
		public GoogleCloudDiscoveryengineV1betaReplyReference[] References { get; set; }
		
		/// <summary>
		/// DEPRECATED: use `summary` instead. Text reply.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply")]
		public string Reply { get; set; }
		
		/// <summary>
		/// Summary of the top N search result specified by the summary spec.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="summary")]
		public GoogleCloudDiscoveryengineV1betaSearchResponseSummary Summary { get; set; }
	}
	
	/// <summary>
	/// Defines reference in reply.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaReplyReference
	{
		
		/// <summary>
		/// Anchor text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="anchorText")]
		public string AnchorText { get; set; }
		
		/// <summary>
		/// Anchor text end index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end")]
		public System.Nullable<System.Int32> End { get; set; }
		
		/// <summary>
		/// Anchor text start index.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start")]
		public System.Nullable<System.Int32> Start { get; set; }
		
		/// <summary>
		/// URI link reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Summary of the top N search result specified by the summary spec.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchResponseSummary
	{
		
		/// <summary>
		/// Safety Attribute categories and their associated confidence scores.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="safetyAttributes")]
		public GoogleCloudDiscoveryengineV1betaSearchResponseSummarySafetyAttributes SafetyAttributes { get; set; }
		
		/// <summary>
		/// Additional summary-skipped reasons. This provides the reason for ignored cases. If nothing is skipped, this field is not set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="summarySkippedReasons")]
		public string[] SummarySkippedReasons { get; set; }
		
		/// <summary>
		/// The summary content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="summaryText")]
		public string SummaryText { get; set; }
		
		/// <summary>
		/// Summary with metadata information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="summaryWithMetadata")]
		public GoogleCloudDiscoveryengineV1betaSearchResponseSummarySummaryWithMetadata SummaryWithMetadata { get; set; }
	}
	
	/// <summary>
	/// Safety Attribute categories and their associated confidence scores.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchResponseSummarySafetyAttributes
	{
		
		/// <summary>
		/// The display names of Safety Attribute categories associated with the generated content. Order matches the Scores.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categories")]
		public string[] Categories { get; set; }
		
		/// <summary>
		/// The confidence scores of the each category, higher value means higher confidence. Order matches the Categories.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scores")]
		public double[] Scores { get; set; }
	}
	
	/// <summary>
	/// Summary with metadata information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchResponseSummarySummaryWithMetadata
	{
		
		/// <summary>
		/// Citation metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="citationMetadata")]
		public GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationMetadata CitationMetadata { get; set; }
		
		/// <summary>
		/// Document References.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="references")]
		public GoogleCloudDiscoveryengineV1betaSearchResponseSummaryReference[] References { get; set; }
		
		/// <summary>
		/// Summary text with no citation information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="summary")]
		public string Summary { get; set; }
	}
	
	/// <summary>
	/// Citation metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationMetadata
	{
		
		/// <summary>
		/// Citations for segments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="citations")]
		public GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitation[] Citations { get; set; }
	}
	
	/// <summary>
	/// Citation info for a segment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitation
	{
		
		/// <summary>
		/// End of the attributed segment, exclusive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endIndex")]
		public string EndIndex { get; set; }
		
		/// <summary>
		/// Citation sources for the attributed segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationSource[] Sources { get; set; }
		
		/// <summary>
		/// Index indicates the start of the segment, measured in bytes/unicode.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startIndex")]
		public string StartIndex { get; set; }
	}
	
	/// <summary>
	/// Citation source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationSource
	{
		
		/// <summary>
		/// Document reference index from SummaryWithMetadata.references. It is 0-indexed and the value will be zero if the reference_index is not set explicitly.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="referenceIndex")]
		public string ReferenceIndex { get; set; }
	}
	
	/// <summary>
	/// Document reference.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchResponseSummaryReference
	{
		
		/// <summary>
		/// Required. Document.name of the document. Full resource name of the referenced document, in the format `projects/*/locations/*/collections/*/dataStores/*/branches/*/documents/*`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="document")]
		public string Document { get; set; }
		
		/// <summary>
		/// Title of the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Cloud Storage or HTTP uri for the document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Defines text input.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaTextInput
	{
		
		/// <summary>
		/// Defines context of the conversation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="context")]
		public GoogleCloudDiscoveryengineV1betaConversationContext Context { get; set; }
		
		/// <summary>
		/// Text input.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="input")]
		public string Input { get; set; }
	}
	
	/// <summary>
	/// Defines context of the conversation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaConversationContext
	{
		
		/// <summary>
		/// The current active document the user opened. It contains the document resource reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activeDocument")]
		public string ActiveDocument { get; set; }
		
		/// <summary>
		/// The current list of documents the user is seeing. It contains the document resource references.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contextDocuments")]
		public string[] ContextDocuments { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1betaConversationState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
	}
	
	/// <summary>
	/// Request message for ConversationalSearchService.ConverseConversation method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaConverseConversationRequest
	{
		
		/// <summary>
		/// External conversation proto definition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversation")]
		public GoogleCloudDiscoveryengineV1betaConversation Conversation { get; set; }
		
		/// <summary>
		/// The filter syntax consists of an expression language for constructing a predicate from one or more fields of the documents being filtered. Filter expression is case-sensitive. This will be used to filter search results which may affect the summary response. If this field is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by mapping the LHS filter key to a key property defined in the Vertex AI Search backend -- this mapping is defined by the customer in their schema. For example a media customer might have a field 'name' in their schema. In this case the filter would look like this: filter --> name:'ANY("king kong")' For more information about filtering including syntax and filter operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Defines text input.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="query")]
		public GoogleCloudDiscoveryengineV1betaTextInput Query { get; set; }
		
		/// <summary>
		/// Whether to turn on safe search.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="safeSearch")]
		public System.Nullable<System.Boolean> SafeSearch { get; set; }
		
		/// <summary>
		/// The resource name of the Serving Config to use. Format: `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/servingConfigs/{serving_config_id}` If this is not set, the default serving config will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="servingConfig")]
		public string ServingConfig { get; set; }
		
		/// <summary>
		/// A specification for configuring a summary returned in a search response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="summarySpec")]
		public GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec SummarySpec { get; set; }
		
		/// <summary>
		/// The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userLabels")]
		public System.Collections.Generic.Dictionary<string, string> UserLabels { get; set; }
	}
	
	/// <summary>
	/// A specification for configuring a summary returned in a search response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec
	{
		
		/// <summary>
		/// Specifies whether to filter out adversarial queries. The default value is `false`. Google employs search-query classification to detect adversarial queries. No summary is returned if the search query is classified as an adversarial query. For example, a user might ask a question regarding negative comments about the company or submit a query designed to generate unsafe, policy-violating output. If this field is set to `true`, we skip generating summaries for adversarial queries and return fallback messages instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ignoreAdversarialQuery")]
		public System.Nullable<System.Boolean> IgnoreAdversarialQuery { get; set; }
		
		/// <summary>
		/// Specifies whether to filter out queries that are not summary-seeking. The default value is `false`. Google employs search-query classification to detect summary-seeking queries. No summary is returned if the search query is classified as a non-summary seeking query. For example, `why is the sky blue` and `Who is the best soccer player in the world?` are summary-seeking queries, but `SFO airport` and `world cup 2026` are not. They are most likely navigational queries. If this field is set to `true`, we skip generating summaries for non-summary seeking queries and return fallback messages instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ignoreNonSummarySeekingQuery")]
		public System.Nullable<System.Boolean> IgnoreNonSummarySeekingQuery { get; set; }
		
		/// <summary>
		/// Specifies whether to include citations in the summary. The default value is `false`. When this field is set to `true`, summaries include in-line citation numbers. Example summary including citations: BigQuery is Google Cloud's fully managed and completely serverless enterprise data warehouse [1]. BigQuery supports all data types, works across clouds, and has built-in machine learning and business intelligence, all within a unified platform [2, 3]. The citation numbers refer to the returned search results and are 1-indexed. For example, [1] means that the sentence is attributed to the first search result. [2, 3] means that the sentence is attributed to both the second and third search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="includeCitations")]
		public System.Nullable<System.Boolean> IncludeCitations { get; set; }
		
		/// <summary>
		/// Language code for Summary. Use language tags defined by [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is an experimental feature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// Specification of the prompt to use with the model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelPromptSpec")]
		public GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec ModelPromptSpec { get; set; }
		
		/// <summary>
		/// Specification of the model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelSpec")]
		public GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec ModelSpec { get; set; }
		
		/// <summary>
		/// The number of top results to generate the summary from. If the number of results returned is less than `summaryResultCount`, the summary is generated from all of the results. At most five results can be used to generate a summary.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="summaryResultCount")]
		public System.Nullable<System.Int32> SummaryResultCount { get; set; }
	}
	
	/// <summary>
	/// Specification of the prompt to use with the model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec
	{
		
		/// <summary>
		/// Text at the beginning of the prompt that instructs the assistant. Examples are available in the user guide.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preamble")]
		public string Preamble { get; set; }
	}
	
	/// <summary>
	/// Specification of the model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec
	{
		
		/// <summary>
		/// The model version used to generate the summary. Supported values are: * `stable`: string. Default value when no value is specified. Uses a generally available, fine-tuned version of the text-bison@001 model. * `preview`: string. (Public preview) Uses a fine-tuned version of the text-bison@002 model. This model works only for summaries in English.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Response message for ConversationalSearchService.ConverseConversation method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaConverseConversationResponse
	{
		
		/// <summary>
		/// External conversation proto definition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversation")]
		public GoogleCloudDiscoveryengineV1betaConversation Conversation { get; set; }
		
		/// <summary>
		/// Suggested related questions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relatedQuestions")]
		public string[] RelatedQuestions { get; set; }
		
		/// <summary>
		/// Defines a reply message to user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply")]
		public GoogleCloudDiscoveryengineV1betaReply Reply { get; set; }
		
		/// <summary>
		/// Search Results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchResults")]
		public GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult[] SearchResults { get; set; }
	}
	
	/// <summary>
	/// Represents the search results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult
	{
		
		/// <summary>
		/// Document captures all raw metadata information of items to be recommended or searched.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="document")]
		public GoogleCloudDiscoveryengineV1betaDocument Document { get; set; }
		
		/// <summary>
		/// Document.id of the searched Document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Google provided available scores.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modelScores")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudDiscoveryengineV1betaDoubleList> ModelScores { get; set; }
	}
	
	/// <summary>
	/// Document captures all raw metadata information of items to be recommended or searched.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaDocument
	{
		
		/// <summary>
		/// Unstructured data linked to this document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public GoogleCloudDiscoveryengineV1betaDocumentContent Content { get; set; }
		
		/// <summary>
		/// Output only. This field is OUTPUT_ONLY. It contains derived data that are not in the original input document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="derivedStructData")]
		public System.Collections.Generic.Dictionary<string, object> DerivedStructData { get; set; }
		
		/// <summary>
		/// Immutable. The identifier of the document. Id should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The JSON string representation of the document. It should conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jsonData")]
		public string JsonData { get; set; }
		
		/// <summary>
		/// Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The identifier of the parent document. Currently supports at most two level document hierarchy. Id should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentDocumentId")]
		public string ParentDocumentId { get; set; }
		
		/// <summary>
		/// The identifier of the schema located in the same data store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schemaId")]
		public string SchemaId { get; set; }
		
		/// <summary>
		/// The structured JSON data for the document. It should conform to the registered Schema or an `INVALID_ARGUMENT` error is thrown.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="structData")]
		public System.Collections.Generic.Dictionary<string, object> StructData { get; set; }
	}
	
	/// <summary>
	/// Unstructured data linked to this document.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaDocumentContent
	{
		
		/// <summary>
		/// The MIME type of the content. Supported types: * `application/pdf` (PDF, only native PDFs are supported for now) * `text/html` (HTML) * `application/vnd.openxmlformats-officedocument.wordprocessingml.document` (DOCX) * `application/vnd.openxmlformats-officedocument.presentationml.presentation` (PPTX) * `text/plain` (TXT) See https://www.iana.org/assignments/media-types/media-types.xhtml.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
		
		/// <summary>
		/// The content represented as a stream of bytes. The maximum length is 1,000,000 bytes (1 MB / ~0.95 MiB). Note: As with all `bytes` fields, this field is represented as pure binary in Protocol Buffers and base64-encoded string in JSON. For example, `abc123!?$*&()'-=@~` should be represented as `YWJjMTIzIT8kKiYoKSctPUB+` in JSON. See https://developers.google.com/protocol-buffers/docs/proto3#json.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rawBytes")]
		public string RawBytes { get; set; }
		
		/// <summary>
		/// The URI of the content. Only Cloud Storage URIs (e.g. `gs://bucket-name/path/to/file`) are supported. The maximum file size is 2.5 MB for text-based formats, 100 MB for other formats.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Double list.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaDoubleList
	{
		
		/// <summary>
		/// Double values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public double[] Values { get; set; }
	}
	
	/// <summary>
	/// Metadata for Create Schema LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaCreateSchemaMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// A custom attribute that is not explicitly modeled in a resource, e.g. UserEvent.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaCustomAttribute
	{
		
		/// <summary>
		/// The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is "lengths_cm". Exactly one of CustomAttribute.text or CustomAttribute.numbers should be set. Otherwise, an `INVALID_ARGUMENT` error is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numbers")]
		public double[] Numbers { get; set; }
		
		/// <summary>
		/// The textual values of this custom attribute. For example, `["yellow", "green"]` when the key is "color". Empty string is not allowed. Otherwise, an `INVALID_ARGUMENT` error is returned. Exactly one of CustomAttribute.text or CustomAttribute.numbers should be set. Otherwise, an `INVALID_ARGUMENT` error is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string[] Text { get; set; }
	}
	
	/// <summary>
	/// Metadata for DeleteSchema LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaDeleteSchemaMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Detailed document information associated with a user event.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaDocumentInfo
	{
		
		/// <summary>
		/// The Document resource ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The Document resource full name, of the form: `projects/{project_id}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/branches/{branch_id}/documents/{document_id}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The promotion IDs associated with this Document. Currently, this field is restricted to at most one ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promotionIds")]
		public string[] PromotionIds { get; set; }
		
		/// <summary>
		/// Quantity of the Document associated with the user event. Defaults to 1. For example, this field will be 2 if two quantities of the same Document are involved in a `add-to-cart` event. Required for events of the following event types: * `add-to-cart` * `purchase`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
		
		/// <summary>
		/// The Document URI - only allowed for website data stores.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Cloud Storage location for input content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaGcsSource
	{
		
		/// <summary>
		/// The schema to use when parsing the data from the source. Supported values for document imports: * `document` (default): One JSON Document per line. Each document must have a valid Document.id. * `content`: Unstructured data (e.g. PDF, HTML). Each file matched by `input_uris` becomes a document, with the ID set to the first 128 bits of SHA256(URI) encoded as a hex string. * `custom`: One custom data JSON per row in arbitrary format that conforms to the defined Schema of the data store. This can only be used by Gen App Builder. * `csv`: A CSV file with header conforming to the defined Schema of the data store. Each entry after the header is imported as a Document. This can only be used by Gen App Builder. Supported values for user even imports: * `user_event` (default): One JSON UserEvent per line.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataSchema")]
		public string DataSchema { get; set; }
		
		/// <summary>
		/// Required. Cloud Storage URIs to input files. URI can be up to 2000 characters long. URIs can match the full object path (for example, `gs://bucket/directory/object.json`) or a pattern matching one or more files, such as `gs://bucket/directory/*.json`. A request can contain at most 100 files (or 100,000 files if `data_schema` is `content`). Each file can be up to 2 GB (or 100 MB if `data_schema` is `content`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputUris")]
		public string[] InputUris { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the ImportDocuments operation. This is returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaImportDocumentsMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Count of entries that encountered errors while processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureCount")]
		public string FailureCount { get; set; }
		
		/// <summary>
		/// Count of entries that were processed successfully.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successCount")]
		public string SuccessCount { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Request message for Import methods.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaImportDocumentsRequest
	{
		
		/// <summary>
		/// Whether to automatically generate IDs for the documents if absent. If set to `true`, Document.ids are automatically generated based on the hash of the payload, where IDs may not be consistent during multiple imports. In which case ReconciliationMode.FULL is highly recommended to avoid duplicate contents. If unset or set to `false`, Document.ids have to be specified using id_field, otherwise, documents without IDs fail to be imported. Only set this field when using GcsSource or BigQuerySource, and when GcsSource.data_schema or BigQuerySource.data_schema is `custom` or `csv`. Otherwise, an INVALID_ARGUMENT error is thrown.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="autoGenerateIds")]
		public System.Nullable<System.Boolean> AutoGenerateIds { get; set; }
		
		/// <summary>
		/// BigQuery source import data from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigquerySource")]
		public GoogleCloudDiscoveryengineV1betaBigQuerySource BigquerySource { get; set; }
		
		/// <summary>
		/// Configuration of destination for Import related errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorConfig")]
		public GoogleCloudDiscoveryengineV1betaImportErrorConfig ErrorConfig { get; set; }
		
		/// <summary>
		/// Cloud Storage location for input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsSource")]
		public GoogleCloudDiscoveryengineV1betaGcsSource GcsSource { get; set; }
		
		/// <summary>
		/// The field in the Cloud Storage and BigQuery sources that indicates the unique IDs of the documents. For GcsSource it is the key of the JSON field. For instance, `my_id` for JSON `{"my_id": "some_uuid"}`. For BigQuerySource it is the column name of the BigQuery table where the unique ids are stored. The values of the JSON field or the BigQuery column are used as the Document.ids. The JSON field or the BigQuery column must be of string type, and the values must be set as valid strings conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) with 1-63 characters. Otherwise, documents without valid IDs fail to be imported. Only set this field when using GcsSource or BigQuerySource, and when GcsSource.data_schema or BigQuerySource.data_schema is `custom`. And only set this field when auto_generate_ids is unset or set as `false`. Otherwise, an INVALID_ARGUMENT error is thrown. If it is unset, a default value `_id` is used when importing from the allowed data sources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="idField")]
		public string IdField { get; set; }
		
		/// <summary>
		/// The inline source for the input config for ImportDocuments method.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inlineSource")]
		public GoogleCloudDiscoveryengineV1betaImportDocumentsRequestInlineSource InlineSource { get; set; }
		
		/// <summary>
		/// The mode of reconciliation between existing documents and the documents to be imported. Defaults to ReconciliationMode.INCREMENTAL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reconciliationMode")]
		public System.Nullable<GoogleCloudDiscoveryengineV1betaImportDocumentsRequestReconciliationMode> ReconciliationMode { get; set; }
	}
	
	/// <summary>
	/// Configuration of destination for Import related errors.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaImportErrorConfig
	{
		
		/// <summary>
		/// Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsPrefix")]
		public string GcsPrefix { get; set; }
	}
	
	/// <summary>
	/// The inline source for the input config for ImportDocuments method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaImportDocumentsRequestInlineSource
	{
		
		/// <summary>
		/// Required. A list of documents to update/create. Each document must have a valid Document.id. Recommended max of 100 items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documents")]
		public GoogleCloudDiscoveryengineV1betaDocument[] Documents { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1betaImportDocumentsRequestReconciliationMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECONCILIATION_MODE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INCREMENTAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FULL = 2,
	}
	
	/// <summary>
	/// Response of the ImportDocumentsRequest. If the long running operation is done, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaImportDocumentsResponse
	{
		
		/// <summary>
		/// Configuration of destination for Import related errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorConfig")]
		public GoogleCloudDiscoveryengineV1betaImportErrorConfig ErrorConfig { get; set; }
		
		/// <summary>
		/// A sample of errors encountered while processing the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorSamples")]
		public GoogleRpcStatus[] ErrorSamples { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the ImportSuggestionDenyListEntries operation. This is returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Request message for CompletionService.ImportSuggestionDenyListEntries method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequest
	{
		
		/// <summary>
		/// Cloud Storage location for input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsSource")]
		public GoogleCloudDiscoveryengineV1betaGcsSource GcsSource { get; set; }
		
		/// <summary>
		/// The inline source for SuggestionDenyListEntry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inlineSource")]
		public GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequestInlineSource InlineSource { get; set; }
	}
	
	/// <summary>
	/// The inline source for SuggestionDenyListEntry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequestInlineSource
	{
		
		/// <summary>
		/// Required. A list of all denylist entries to import. Max of 1000 items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="entries")]
		public GoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry[] Entries { get; set; }
	}
	
	/// <summary>
	/// Suggestion deny list entry identifying the phrase to block from suggestions and the applied operation for the phrase.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry
	{
		
		/// <summary>
		/// Required. Phrase to block from suggestions served. Can be maximum 125 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blockPhrase")]
		public string BlockPhrase { get; set; }
		
		/// <summary>
		/// Required. The match operator to apply for this phrase. Whether to block the exact phrase, or block any suggestions containing this phrase.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="matchOperator")]
		public System.Nullable<GoogleCloudDiscoveryengineV1betaSuggestionDenyListEntryMatchOperator> MatchOperator { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1betaSuggestionDenyListEntryMatchOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MATCH_OPERATOR_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXACT_MATCH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTAINS = 2,
	}
	
	/// <summary>
	/// Response message for CompletionService.ImportSuggestionDenyListEntries method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesResponse
	{
		
		/// <summary>
		/// A sample of errors encountered while processing the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorSamples")]
		public GoogleRpcStatus[] ErrorSamples { get; set; }
		
		/// <summary>
		/// Count of deny list entries that failed to be imported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failedEntriesCount")]
		public string FailedEntriesCount { get; set; }
		
		/// <summary>
		/// Count of deny list entries successfully imported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="importedEntriesCount")]
		public string ImportedEntriesCount { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the Import operation. This is returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaImportUserEventsMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Count of entries that encountered errors while processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureCount")]
		public string FailureCount { get; set; }
		
		/// <summary>
		/// Count of entries that were processed successfully.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successCount")]
		public string SuccessCount { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Request message for the ImportUserEvents request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaImportUserEventsRequest
	{
		
		/// <summary>
		/// BigQuery source import data from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigquerySource")]
		public GoogleCloudDiscoveryengineV1betaBigQuerySource BigquerySource { get; set; }
		
		/// <summary>
		/// Configuration of destination for Import related errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorConfig")]
		public GoogleCloudDiscoveryengineV1betaImportErrorConfig ErrorConfig { get; set; }
		
		/// <summary>
		/// Cloud Storage location for input content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcsSource")]
		public GoogleCloudDiscoveryengineV1betaGcsSource GcsSource { get; set; }
		
		/// <summary>
		/// The inline source for the input config for ImportUserEvents method.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inlineSource")]
		public GoogleCloudDiscoveryengineV1betaImportUserEventsRequestInlineSource InlineSource { get; set; }
	}
	
	/// <summary>
	/// The inline source for the input config for ImportUserEvents method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaImportUserEventsRequestInlineSource
	{
		
		/// <summary>
		/// Required. A list of user events to import. Recommended max of 10k items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userEvents")]
		public GoogleCloudDiscoveryengineV1betaUserEvent[] UserEvents { get; set; }
	}
	
	/// <summary>
	/// UserEvent captures all metadata information Discovery Engine API needs to know about how end users interact with customers' website.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaUserEvent
	{
		
		/// <summary>
		/// Extra user event features to include in the recommendation model. These attributes must NOT contain data that needs to be parsed or processed further, e.g. JSON or other encodings. If you provide custom attributes for ingested user events, also include them in the user events that you associate with prediction requests. Custom attribute formatting must be consistent between imported events and events provided with prediction requests. This lets the Discovery Engine API use those custom attributes when training models and serving predictions, which helps improve recommendation quality. This field needs to pass all below criteria, otherwise an `INVALID_ARGUMENT` error is returned: * The key must be a UTF-8 encoded string with a length limit of 5,000 characters. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed. For product recommendations, an example of extra user information is `traffic_channel`, which is how a user arrives at the site. Users can arrive at the site by coming to the site directly, coming through Google search, or in other ways.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudDiscoveryengineV1betaCustomAttribute> Attributes { get; set; }
		
		/// <summary>
		/// Token to attribute an API response to user action(s) to trigger the event. Highly recommended for user events that are the result of RecommendationService.Recommend. This field enables accurate attribution of recommendation model performance. The value must be one of: * RecommendResponse.attribution_token for events that are the result of RecommendationService.Recommend. * SearchResponse.attribution_token for events that are the result of SearchService.Search. This token enables us to accurately attribute page view or conversion completion back to the event and the particular predict response containing this clicked/purchased product. If user clicks on product K in the recommendation results, pass RecommendResponse.attribution_token as a URL parameter to product K's page. When recording events on product K's page, log the RecommendResponse.attribution_token to this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributionToken")]
		public string AttributionToken { get; set; }
		
		/// <summary>
		/// Detailed completion information including completion attribution token and clicked completion info.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="completionInfo")]
		public GoogleCloudDiscoveryengineV1betaCompletionInfo CompletionInfo { get; set; }
		
		/// <summary>
		/// Should set to true if the request is made directly from the end user, in which case the UserEvent.user_info.user_agent can be populated from the HTTP request. This flag should be set only if the API request is made directly from the end user such as a mobile app (and not if a gateway or a server is processing and pushing the user events). This should not be set when using the JavaScript tag in UserEventService.CollectUserEvent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="directUserRequest")]
		public System.Nullable<System.Boolean> DirectUserRequest { get; set; }
		
		/// <summary>
		/// List of Documents associated with this user event. This field is optional except for the following event types: * `view-item` * `add-to-cart` * `purchase` * `media-play` * `media-complete` In a `search` event, this field represents the documents returned to the end user on the current page (the end user may have not finished browsing the whole page yet). When a new page is returned to the end user, after pagination/filtering/ordering even for the same query, a new `search` event with different UserEvent.documents is desired.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documents")]
		public GoogleCloudDiscoveryengineV1betaDocumentInfo[] Documents { get; set; }
		
		/// <summary>
		/// Only required for UserEventService.ImportUserEvents method. Timestamp of when the user event happened.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventTime")]
		public string EventTime { get; set; }
		
		/// <summary>
		/// Required. User event type. Allowed values are: Generic values: * `search`: Search for Documents. * `view-item`: Detailed page view of a Document. * `view-item-list`: View of a panel or ordered list of Documents. * `view-home-page`: View of the home page. * `view-category-page`: View of a category page, e.g. Home > Men > Jeans Retail-related values: * `add-to-cart`: Add an item(s) to cart, e.g. in Retail online shopping * `purchase`: Purchase an item(s) Media-related values: * `media-play`: Start/resume watching a video, playing a song, etc. * `media-complete`: Finished or stopped midway through a video, song, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventType")]
		public string EventType { get; set; }
		
		/// <summary>
		/// The filter syntax consists of an expression language for constructing a predicate from one or more fields of the documents being filtered. One example is for `search` events, the associated SearchRequest may contain a filter expression in SearchRequest.filter conforming to https://google.aip.dev/160#filtering. Similarly, for `view-item-list` events that are generated from a RecommendRequest, this field may be populated directly from RecommendRequest.filter conforming to https://google.aip.dev/160#filtering. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Media-specific user event information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mediaInfo")]
		public GoogleCloudDiscoveryengineV1betaMediaInfo MediaInfo { get; set; }
		
		/// <summary>
		/// Detailed page information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageInfo")]
		public GoogleCloudDiscoveryengineV1betaPageInfo PageInfo { get; set; }
		
		/// <summary>
		/// Detailed panel information associated with a user event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="panel")]
		public GoogleCloudDiscoveryengineV1betaPanelInfo Panel { get; set; }
		
		/// <summary>
		/// The promotion IDs if this is an event associated with promotions. Currently, this field is restricted to at most one ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promotionIds")]
		public string[] PromotionIds { get; set; }
		
		/// <summary>
		/// Detailed search information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchInfo")]
		public GoogleCloudDiscoveryengineV1betaSearchInfo SearchInfo { get; set; }
		
		/// <summary>
		/// A unique identifier for tracking a visitor session with a length limit of 128 bytes. A session is an aggregation of an end user behavior in a time span. A general guideline to populate the session_id: 1. If user has no activity for 30 min, a new session_id should be assigned. 2. The session_id should be unique across users, suggest use uuid or add UserEvent.user_pseudo_id as prefix.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sessionId")]
		public string SessionId { get; set; }
		
		/// <summary>
		/// A list of identifiers for the independent experiment groups this user event belongs to. This is used to distinguish between user events associated with different experiment setups on the customer end.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagIds")]
		public string[] TagIds { get; set; }
		
		/// <summary>
		/// A transaction represents the entire purchase transaction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transactionInfo")]
		public GoogleCloudDiscoveryengineV1betaTransactionInfo TransactionInfo { get; set; }
		
		/// <summary>
		/// Information of an end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userInfo")]
		public GoogleCloudDiscoveryengineV1betaUserInfo UserInfo { get; set; }
		
		/// <summary>
		/// Required. A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Do not set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. The field should not contain PII or user-data. We recommend to use Google Analytics [Client ID](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#clientId) for this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userPseudoId")]
		public string UserPseudoId { get; set; }
	}
	
	/// <summary>
	/// Media-specific user event information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaMediaInfo
	{
		
		/// <summary>
		/// The media progress time in seconds, if applicable. For example, if the end user has finished 90 seconds of a playback video, then MediaInfo.media_progress_duration.seconds should be set to 90.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mediaProgressDuration")]
		public string MediaProgressDuration { get; set; }
		
		/// <summary>
		/// Media progress should be computed using only the media_progress_duration relative to the media total length. This value must be between `[0, 1.0]` inclusive. If this is not a playback or the progress cannot be computed (e.g. ongoing livestream), this field should be unset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mediaProgressPercentage")]
		public System.Nullable<System.Single> MediaProgressPercentage { get; set; }
	}
	
	/// <summary>
	/// Detailed page information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaPageInfo
	{
		
		/// <summary>
		/// The most specific category associated with a category page. To represent full path of category, use '>' sign to separate different hierarchies. If '>' is part of the category name, please replace it with other character(s). Category pages include special pages such as sales or promotions. For instance, a special sale page may have the category hierarchy: `"pageCategory" : "Sales > 2017 Black Friday Deals"`. Required for `view-category-page` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageCategory")]
		public string PageCategory { get; set; }
		
		/// <summary>
		/// A unique ID of a web page view. This should be kept the same for all user events triggered from the same pageview. For example, an item detail page view could trigger multiple events as the user is browsing the page. The `pageview_id` property should be kept the same for all these events so that they can be grouped together properly. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageviewId")]
		public string PageviewId { get; set; }
		
		/// <summary>
		/// The referrer URL of the current page. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically. However, some browser privacy restrictions may cause this field to be empty.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="referrerUri")]
		public string ReferrerUri { get; set; }
		
		/// <summary>
		/// Complete URL (window.location.href) of the user's current page. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically. Maximum length 5,000 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Detailed panel information associated with a user event.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaPanelInfo
	{
		
		/// <summary>
		/// The display name of the panel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Required. The panel ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="panelId")]
		public string PanelId { get; set; }
		
		/// <summary>
		/// The ordered position of the panel, if shown to the user with other panels. If set, then total_panels must also be set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="panelPosition")]
		public System.Nullable<System.Int32> PanelPosition { get; set; }
		
		/// <summary>
		/// The total number of panels, including this one, shown to the user. Must be set if panel_position is set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalPanels")]
		public System.Nullable<System.Int32> TotalPanels { get; set; }
	}
	
	/// <summary>
	/// Detailed search information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchInfo
	{
		
		/// <summary>
		/// An integer that specifies the current offset for pagination (the 0-indexed starting location, amongst the products deemed by the API as relevant). See SearchRequest.offset for definition. If this field is negative, an `INVALID_ARGUMENT` is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offset")]
		public System.Nullable<System.Int32> Offset { get; set; }
		
		/// <summary>
		/// The order in which products are returned, if applicable. See SearchRequest.order_by for definition and syntax. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orderBy")]
		public string OrderBy { get; set; }
		
		/// <summary>
		/// The user's search query. See SearchRequest.query for definition. The value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. At least one of search_query or PageInfo.page_category is required for `search` events. Other event types should not set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchQuery")]
		public string SearchQuery { get; set; }
	}
	
	/// <summary>
	/// A transaction represents the entire purchase transaction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaTransactionInfo
	{
		
		/// <summary>
		/// All the costs associated with the products. These can be manufacturing costs, shipping expenses not borne by the end user, or any other costs, such that: * Profit = value - tax - cost
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cost")]
		public System.Nullable<System.Single> Cost { get; set; }
		
		/// <summary>
		/// Required. Currency code. Use three-character ISO-4217 code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public string Currency { get; set; }
		
		/// <summary>
		/// The total discount(s) value applied to this transaction. This figure should be excluded from TransactionInfo.value For example, if a user paid TransactionInfo.value amount, then nominal (pre-discount) value of the transaction is the sum of TransactionInfo.value and TransactionInfo.discount_value This means that profit is calculated the same way, regardless of the discount value, and that TransactionInfo.discount_value can be larger than TransactionInfo.value: * Profit = value - tax - cost
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discountValue")]
		public System.Nullable<System.Single> DiscountValue { get; set; }
		
		/// <summary>
		/// All the taxes associated with the transaction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax")]
		public System.Nullable<System.Single> Tax { get; set; }
		
		/// <summary>
		/// The transaction ID with a length limit of 128 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transactionId")]
		public string TransactionId { get; set; }
		
		/// <summary>
		/// Required. Total non-zero value associated with the transaction. This value may include shipping, tax, or other adjustments to the total value that you want to include.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Single> Value { get; set; }
	}
	
	/// <summary>
	/// Information of an end user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaUserInfo
	{
		
		/// <summary>
		/// User agent as included in the HTTP header. The field must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. This should not be set when using the client side event reporting with GTM or JavaScript tag in UserEventService.CollectUserEvent or if UserEvent.direct_user_request is set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userAgent")]
		public string UserAgent { get; set; }
		
		/// <summary>
		/// Highly recommended for logged-in users. Unique identifier for logged-in user, such as a user name. Don't set for anonymous users. Always use a hashed value for this ID. Don't set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userId")]
		public string UserId { get; set; }
	}
	
	/// <summary>
	/// Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is returned by the google.longrunning.Operations.response field if the operation was successful.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaImportUserEventsResponse
	{
		
		/// <summary>
		/// Configuration of destination for Import related errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorConfig")]
		public GoogleCloudDiscoveryengineV1betaImportErrorConfig ErrorConfig { get; set; }
		
		/// <summary>
		/// A sample of errors encountered while processing the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorSamples")]
		public GoogleRpcStatus[] ErrorSamples { get; set; }
		
		/// <summary>
		/// Count of user events imported with complete existing Documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="joinedEventsCount")]
		public string JoinedEventsCount { get; set; }
		
		/// <summary>
		/// Count of user events imported, but with Document information not found in the existing Branch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unjoinedEventsCount")]
		public string UnjoinedEventsCount { get; set; }
	}
	
	/// <summary>
	/// A floating point interval.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaInterval
	{
		
		/// <summary>
		/// Exclusive upper bound.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exclusiveMaximum")]
		public System.Nullable<System.Double> ExclusiveMaximum { get; set; }
		
		/// <summary>
		/// Exclusive lower bound.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exclusiveMinimum")]
		public System.Nullable<System.Double> ExclusiveMinimum { get; set; }
		
		/// <summary>
		/// Inclusive upper bound.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maximum")]
		public System.Nullable<System.Double> Maximum { get; set; }
		
		/// <summary>
		/// Inclusive lower bound.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minimum")]
		public System.Nullable<System.Double> Minimum { get; set; }
	}
	
	/// <summary>
	/// Response for ListConversations method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaListConversationsResponse
	{
		
		/// <summary>
		/// All the Conversations for a given data store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversations")]
		public GoogleCloudDiscoveryengineV1betaConversation[] Conversations { get; set; }
		
		/// <summary>
		/// Pagination token, if not returned indicates the last page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for DocumentService.ListDocuments method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaListDocumentsResponse
	{
		
		/// <summary>
		/// The Documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documents")]
		public GoogleCloudDiscoveryengineV1betaDocument[] Documents { get; set; }
		
		/// <summary>
		/// A token that can be sent as ListDocumentsRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for SchemaService.ListSchemas method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaListSchemasResponse
	{
		
		/// <summary>
		/// A token that can be sent as ListSchemasRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The Schemas.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schemas")]
		public GoogleCloudDiscoveryengineV1betaSchema[] Schemas { get; set; }
	}
	
	/// <summary>
	/// Defines the structure and layout of a type of document data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSchema
	{
		
		/// <summary>
		/// The JSON representation of the schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jsonSchema")]
		public string JsonSchema { get; set; }
		
		/// <summary>
		/// Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The structured representation of the schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="structSchema")]
		public System.Collections.Generic.Dictionary<string, object> StructSchema { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the PurgeDocuments operation. This will be returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaPurgeDocumentsMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Count of entries that encountered errors while processing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureCount")]
		public string FailureCount { get; set; }
		
		/// <summary>
		/// Count of entries that were deleted successfully.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successCount")]
		public string SuccessCount { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Request message for DocumentService.PurgeDocuments method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest
	{
		
		/// <summary>
		/// Required. Filter matching documents to purge. Only currently supported value is `*` (all items).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Actually performs the purge. If `force` is set to false, return the expected purge count without deleting any documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="force")]
		public System.Nullable<System.Boolean> Force { get; set; }
	}
	
	/// <summary>
	/// Response message for DocumentService.PurgeDocuments method. If the long running operation is successfully done, then this message is returned by the google.longrunning.Operations.response field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaPurgeDocumentsResponse
	{
		
		/// <summary>
		/// The total count of documents purged as a result of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purgeCount")]
		public string PurgeCount { get; set; }
		
		/// <summary>
		/// A sample of document names that will be deleted. Only populated if `force` is set to false. A max of 100 names will be returned and the names are chosen at random.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purgeSample")]
		public string[] PurgeSample { get; set; }
	}
	
	/// <summary>
	/// Metadata related to the progress of the PurgeSuggestionDenyListEntries operation. This is returned by the google.longrunning.Operation.metadata field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Request message for CompletionService.PurgeSuggestionDenyListEntries method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesRequest
	{
	}
	
	/// <summary>
	/// Response message for CompletionService.PurgeSuggestionDenyListEntries method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesResponse
	{
		
		/// <summary>
		/// A sample of errors encountered while processing the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorSamples")]
		public GoogleRpcStatus[] ErrorSamples { get; set; }
		
		/// <summary>
		/// Number of suggestion deny list entries purged.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="purgeCount")]
		public string PurgeCount { get; set; }
	}
	
	/// <summary>
	/// Request message for Recommend method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaRecommendRequest
	{
		
		/// <summary>
		/// Filter for restricting recommendation results with a length limit of 5,000 characters. Currently, only filter expressions on the `filter_tags` attribute is supported. Examples: * `(filter_tags: ANY("Red", "Blue") OR filter_tags: ANY("Hot", "Cold"))` * `(filter_tags: ANY("Red", "Blue")) AND NOT (filter_tags: ANY("Green"))` If `attributeFilteringSyntax` is set to true under the `params` field, then attribute-based expressions are expected instead of the above described tag-based syntax. Examples: * (launguage: ANY("en", "es")) AND NOT (categories: ANY("Movie")) * (available: true) AND (launguage: ANY("en", "es")) OR (categories: ANY("Movie")) If your filter blocks all results, the API will return generic (unfiltered) popular Documents. If you only want results strictly matching the filters, set `strictFiltering` to True in RecommendRequest.params to receive empty results instead. Note that the API will never return Documents with `storageStatus` of `EXPIRED` or `DELETED` regardless of filter choices.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Maximum number of results to return. Set this property to the number of recommendation results needed. If zero, the service will choose a reasonable default. The maximum allowed value is 100. Values above 100 will be coerced to 100.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageSize")]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		/// <summary>
		/// Additional domain specific parameters for the recommendations. Allowed values: * `returnDocument`: Boolean. If set to true, the associated Document object will be returned in RecommendResponse.RecommendationResult.document. * `returnScore`: Boolean. If set to true, the recommendation 'score' corresponding to each returned Document will be set in RecommendResponse.RecommendationResult.metadata. The given 'score' indicates the probability of a Document conversion given the user's context and history. * `strictFiltering`: Boolean. True by default. If set to false, the service will return generic (unfiltered) popular Documents instead of empty if your filter blocks all recommendation results. * `diversityLevel`: String. Default empty. If set to be non-empty, then it needs to be one of: * `no-diversity` * `low-diversity` * `medium-diversity` * `high-diversity` * `auto-diversity` This gives request-level control and adjusts recommendation results based on Document category. * `attributeFilteringSyntax`: Boolean. False by default. If set to true, the `filter` field is interpreted according to the new, attribute-based syntax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="params")]
		public System.Collections.Generic.Dictionary<string, object> Params { get; set; }
		
		/// <summary>
		/// UserEvent captures all metadata information Discovery Engine API needs to know about how end users interact with customers' website.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userEvent")]
		public GoogleCloudDiscoveryengineV1betaUserEvent UserEvent { get; set; }
		
		/// <summary>
		/// The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userLabels")]
		public System.Collections.Generic.Dictionary<string, string> UserLabels { get; set; }
		
		/// <summary>
		/// Use validate only mode for this recommendation query. If set to true, a fake model will be used that returns arbitrary Document IDs. Note that the validate only mode should only be used for testing the API, or if the model is not ready.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validateOnly")]
		public System.Nullable<System.Boolean> ValidateOnly { get; set; }
	}
	
	/// <summary>
	/// Response message for Recommend method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaRecommendResponse
	{
		
		/// <summary>
		/// A unique attribution token. This should be included in the UserEvent logs resulting from this recommendation, which enables accurate attribution of recommendation model performance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributionToken")]
		public string AttributionToken { get; set; }
		
		/// <summary>
		/// IDs of documents in the request that were missing from the default Branch associated with the requested ServingConfig.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="missingIds")]
		public string[] MissingIds { get; set; }
		
		/// <summary>
		/// A list of recommended Documents. The order represents the ranking (from the most relevant Document to the least).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="results")]
		public GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult[] Results { get; set; }
		
		/// <summary>
		/// True if RecommendRequest.validate_only was set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validateOnly")]
		public System.Nullable<System.Boolean> ValidateOnly { get; set; }
	}
	
	/// <summary>
	/// RecommendationResult represents a generic recommendation result with associated metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult
	{
		
		/// <summary>
		/// Document captures all raw metadata information of items to be recommended or searched.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="document")]
		public GoogleCloudDiscoveryengineV1betaDocument Document { get; set; }
		
		/// <summary>
		/// Resource ID of the recommended Document.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Additional Document metadata / annotations. Possible values: * `score`: Recommendation score in double value. Is set if `returnScore` is set to true in RecommendRequest.params.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
	}
	
	/// <summary>
	/// Request message for SearchService.Search method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchRequest
	{
		
		/// <summary>
		/// Boost specification to boost certain documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boostSpec")]
		public GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec BoostSpec { get; set; }
		
		/// <summary>
		/// The branch resource name, such as `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/branches/0`. Use `default_branch` as the branch ID or leave this field empty, to search documents under the default branch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="branch")]
		public string Branch { get; set; }
		
		/// <summary>
		/// The default filter that is applied when a user performs a search without checking any filters on the search page. The filter applied to every search request when quality improvement such as query expansion is needed. In the case a query does not have a sufficient amount of results this filter will be used to determine whether or not to enable the query expansion flow. The original filter will still be used for the query expanded search. This field is strongly recommended to achieve high search quality. For more information about filter syntax, see SearchRequest.filter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canonicalFilter")]
		public string CanonicalFilter { get; set; }
		
		/// <summary>
		/// A specification for configuring the behavior of content search.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentSearchSpec")]
		public GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec ContentSearchSpec { get; set; }
		
		/// <summary>
		/// The specification that uses customized query embedding vector to do semantic document retrieval.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="embeddingSpec")]
		public GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec EmbeddingSpec { get; set; }
		
		/// <summary>
		/// Facet specifications for faceted search. If empty, no facets are returned. A maximum of 100 values are allowed. Otherwise, an `INVALID_ARGUMENT` error is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="facetSpecs")]
		public GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec[] FacetSpecs { get; set; }
		
		/// <summary>
		/// The filter syntax consists of an expression language for constructing a predicate from one or more fields of the documents being filtered. Filter expression is case-sensitive. If this field is unrecognizable, an `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by mapping the LHS filter key to a key property defined in the Vertex AI Search backend -- this mapping is defined by the customer in their schema. For example a media customer might have a field 'name' in their schema. In this case the filter would look like this: filter --> name:'ANY("king kong")' For more information about filtering including syntax and filter operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Specifies the image query input.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageQuery")]
		public GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery ImageQuery { get; set; }
		
		/// <summary>
		/// A 0-indexed integer that specifies the current offset (that is, starting result location, amongst the Documents deemed by the API as relevant) in search results. This field is only considered if page_token is unset. If this field is negative, an `INVALID_ARGUMENT` is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offset")]
		public System.Nullable<System.Int32> Offset { get; set; }
		
		/// <summary>
		/// The order in which documents are returned. Documents can be ordered by a field in an Document object. Leave it unset if ordered by relevance. `order_by` expression is case-sensitive. For more information on ordering, see [Ordering](https://cloud.google.com/retail/docs/filter-and-order#order) If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orderBy")]
		public string OrderBy { get; set; }
		
		/// <summary>
		/// Maximum number of Documents to return. If unspecified, defaults to a reasonable value. The maximum allowed value is 100. Values above 100 are coerced to 100. If this field is negative, an `INVALID_ARGUMENT` is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageSize")]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		/// <summary>
		/// A page token received from a previous SearchService.Search call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to SearchService.Search must match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageToken")]
		public string PageToken { get; set; }
		
		/// <summary>
		/// Additional search parameters. For public website search only, supported values are: * `user_country_code`: string. Default empty. If set to non-empty, results are restricted or boosted based on the location provided. Example: user_country_code: "au" For available codes see [Country Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes) * `search_type`: double. Default empty. Enables non-webpage searching depending on the value. The only valid non-default value is 1, which enables image searching. Example: search_type: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="params")]
		public System.Collections.Generic.Dictionary<string, object> Params { get; set; }
		
		/// <summary>
		/// Raw search query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string Query { get; set; }
		
		/// <summary>
		/// Specification to determine under which conditions query expansion should occur.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryExpansionSpec")]
		public GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec QueryExpansionSpec { get; set; }
		
		/// <summary>
		/// The ranking expression controls the customized ranking on retrieval documents. This overrides ServingConfig.ranking_expression. The ranking expression is a single function or multiple functions that are joint by "+". * ranking_expression = function, { " + ", function }; Supported functions: * double * relevance_score * double * dotProduct(embedding_field_path) Function variables: `relevance_score`: pre-defined keywords, used for measure relevance between query and document. `embedding_field_path`: the document embedding field used with query embedding vector. `dotProduct`: embedding function between embedding_field_path and query embedding vector. Example ranking expression: If document has an embedding field doc_embedding, the ranking expression could be `0.5 * relevance_score + 0.3 * dotProduct(doc_embedding)`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rankingExpression")]
		public string RankingExpression { get; set; }
		
		/// <summary>
		/// Whether to turn on safe search. This is only supported for website search.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="safeSearch")]
		public System.Nullable<System.Boolean> SafeSearch { get; set; }
		
		/// <summary>
		/// The specification for query spell correction.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="spellCorrectionSpec")]
		public GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec SpellCorrectionSpec { get; set; }
		
		/// <summary>
		/// Information of an end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userInfo")]
		public GoogleCloudDiscoveryengineV1betaUserInfo UserInfo { get; set; }
		
		/// <summary>
		/// The user labels applied to a resource must meet the following requirements: * Each resource can have multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. * The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys must start with a lowercase letter or international character. See [Google Cloud Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userLabels")]
		public System.Collections.Generic.Dictionary<string, string> UserLabels { get; set; }
		
		/// <summary>
		/// A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. This field should NOT have a fixed value such as `unknown_visitor`. This should be the same identifier as UserEvent.user_pseudo_id and CompleteQueryRequest.user_pseudo_id The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userPseudoId")]
		public string UserPseudoId { get; set; }
	}
	
	/// <summary>
	/// Boost specification to boost certain documents.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec
	{
		
		/// <summary>
		/// Condition boost specifications. If a document matches multiple conditions in the specifictions, boost scores from these specifications are all applied and combined in a non-linear way. Maximum number of specifications is 20.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditionBoostSpecs")]
		public GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec[] ConditionBoostSpecs { get; set; }
	}
	
	/// <summary>
	/// Boost applies to documents which match a condition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec
	{
		
		/// <summary>
		/// Strength of the condition boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the document a big promotion. However, it does not necessarily mean that the boosted document will be the top result at all times, nor that other documents will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant documents. Setting to -1.0 gives the document a big demotion. However, results that are deeply relevant might still be shown. The document will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="boost")]
		public System.Nullable<System.Single> Boost { get; set; }
		
		/// <summary>
		/// An expression which specifies a boost condition. The syntax and supported fields are the same as a filter expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost documents with document ID "doc_1" or "doc_2", and color "Red" or "Blue": * (id: ANY("doc_1", "doc_2")) AND (color: ANY("Red","Blue"))
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public string Condition { get; set; }
	}
	
	/// <summary>
	/// A specification for configuring the behavior of content search.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec
	{
		
		/// <summary>
		/// A specification for configuring the extractive content in a search response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="extractiveContentSpec")]
		public GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec ExtractiveContentSpec { get; set; }
		
		/// <summary>
		/// A specification for configuring snippets in a search response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="snippetSpec")]
		public GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec SnippetSpec { get; set; }
		
		/// <summary>
		/// A specification for configuring a summary returned in a search response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="summarySpec")]
		public GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec SummarySpec { get; set; }
	}
	
	/// <summary>
	/// A specification for configuring the extractive content in a search response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec
	{
		
		/// <summary>
		/// The maximum number of extractive answers returned in each search result. An extractive answer is a verbatim answer extracted from the original document, which provides a precise and contextually relevant answer to the search query. If the number of matching answers is less than the `max_extractive_answer_count`, return all of the answers. Otherwise, return the `max_extractive_answer_count`. At most five answers are returned for each SearchResult.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxExtractiveAnswerCount")]
		public System.Nullable<System.Int32> MaxExtractiveAnswerCount { get; set; }
		
		/// <summary>
		/// The max number of extractive segments returned in each search result. Only applied if the DataStore is set to DataStore.ContentConfig.CONTENT_REQUIRED or DataStore.solution_types is SOLUTION_TYPE_CHAT. An extractive segment is a text segment extracted from the original document that is relevant to the search query, and, in general, more verbose than an extractive answer. The segment could then be used as input for LLMs to generate summaries and answers. If the number of matching segments is less than `max_extractive_segment_count`, return all of the segments. Otherwise, return the `max_extractive_segment_count`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxExtractiveSegmentCount")]
		public System.Nullable<System.Int32> MaxExtractiveSegmentCount { get; set; }
		
		/// <summary>
		/// Return at most `num_next_segments` segments after each selected segments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numNextSegments")]
		public System.Nullable<System.Int32> NumNextSegments { get; set; }
		
		/// <summary>
		/// Specifies whether to also include the adjacent from each selected segments. Return at most `num_previous_segments` segments before each selected segments.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numPreviousSegments")]
		public System.Nullable<System.Int32> NumPreviousSegments { get; set; }
	}
	
	/// <summary>
	/// A specification for configuring snippets in a search response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec
	{
		
		/// <summary>
		/// [DEPRECATED] This field is deprecated. To control snippet return, use `return_snippet` field. For backwards compatibility, we will return snippet if max_snippet_count > 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxSnippetCount")]
		public System.Nullable<System.Int32> MaxSnippetCount { get; set; }
		
		/// <summary>
		/// [DEPRECATED] This field is deprecated and will have no affect on the snippet.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="referenceOnly")]
		public System.Nullable<System.Boolean> ReferenceOnly { get; set; }
		
		/// <summary>
		/// If `true`, then return snippet. If no snippet can be generated, we return "No snippet is available for this page." A `snippet_status` with `SUCCESS` or `NO_SNIPPET_AVAILABLE` will also be returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="returnSnippet")]
		public System.Nullable<System.Boolean> ReturnSnippet { get; set; }
	}
	
	/// <summary>
	/// The specification that uses customized query embedding vector to do semantic document retrieval.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec
	{
		
		/// <summary>
		/// The embedding vector used for retrieval. Limit to 1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="embeddingVectors")]
		public GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector[] EmbeddingVectors { get; set; }
	}
	
	/// <summary>
	/// Embedding vector.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector
	{
		
		/// <summary>
		/// Embedding field path in schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldPath")]
		public string FieldPath { get; set; }
		
		/// <summary>
		/// Query embedding vector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vector")]
		public double[] Vector { get; set; }
	}
	
	/// <summary>
	/// A facet specification to perform faceted search.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec
	{
		
		/// <summary>
		/// Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the response is determined automatically. If dynamic facets are enabled, it is ordered together. If set to false, the position of this facet in the response is the same as in the request, and it is ranked before the facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating facet returned in the response, but it's not necessarily to always display the rating facet at the top. In that case, you can set enable_dynamic_position to true so that the position of rating facet in response is determined automatically. Another example, assuming you have the following facets in the request: * "rating", enable_dynamic_position = true * "price", enable_dynamic_position = false * "brands", enable_dynamic_position = false And also you have a dynamic facets enabled, which generates a facet `gender`. Then the final order of the facets in the response can be ("price", "brands", "rating", "gender") or ("price", "brands", "gender", "rating") depends on how API orders "gender" and "rating" facets. However, notice that "price" and "brands" are always ranked at first and second position because their enable_dynamic_position is false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableDynamicPosition")]
		public System.Nullable<System.Boolean> EnableDynamicPosition { get; set; }
		
		/// <summary>
		/// List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is listed in this field. Listing a facet key in this field allows its values to appear as facet results, even when they are filtered out of search results. Using this field does not affect what search results are returned. For example, suppose there are 100 documents with the color facet "Red" and 200 documents with the color facet "Blue". A query containing the filter "color:ANY("Red")" and having "color" as FacetKey.key would by default return only "Red" documents in the search results, and also return "Red" with count 100 as the only color facet. Although there are also blue documents available, "Blue" would not be shown as an available facet value. If "color" is listed in "excludedFilterKeys", then the query returns the facet values "Red" with count 100 and "Blue" with count 200, because the "color" key is now excluded from the filter. Because this field doesn't affect search results, the search results are still correctly filtered to return only "Red" documents. A maximum of 100 values are allowed. Otherwise, an `INVALID_ARGUMENT` error is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="excludedFilterKeys")]
		public string[] ExcludedFilterKeys { get; set; }
		
		/// <summary>
		/// Specifies how a facet is computed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="facetKey")]
		public GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey FacetKey { get; set; }
		
		/// <summary>
		/// Maximum of facet values that should be returned for this facet. If unspecified, defaults to 20. The maximum allowed value is 300. Values above 300 are coerced to 300. If this field is negative, an `INVALID_ARGUMENT` is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="limit")]
		public System.Nullable<System.Int32> Limit { get; set; }
	}
	
	/// <summary>
	/// Specifies how a facet is computed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey
	{
		
		/// <summary>
		/// True to make facet keys case insensitive when getting faceting values with prefixes or contains; false otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="caseInsensitive")]
		public System.Nullable<System.Boolean> CaseInsensitive { get; set; }
		
		/// <summary>
		/// Only get facet values that contains the given strings. For example, suppose "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "contains" to "2022", the "category" facet only contains "Action > 2022" and "Sci-Fi > 2022". Only supported on textual fields. Maximum is 10.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contains")]
		public string[] Contains { get; set; }
		
		/// <summary>
		/// Set only if values should be bucketed into intervals. Must be set for facets with numerical values. Must not be set for facet with text values. Maximum number of intervals is 30.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="intervals")]
		public GoogleCloudDiscoveryengineV1betaInterval[] Intervals { get; set; }
		
		/// <summary>
		/// Required. Supported textual and numerical facet keys in Document object, over which the facet values are computed. Facet key is case-sensitive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// The order in which documents are returned. Allowed values are: * "count desc", which means order by SearchResponse.Facet.values.count descending. * "value desc", which means order by SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orderBy")]
		public string OrderBy { get; set; }
		
		/// <summary>
		/// Only get facet values that start with the given string prefix. For example, suppose "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "prefixes" to "Action", the "category" facet only contains "Action > 2022" and "Action > 2021". Only supported on textual fields. Maximum is 10.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prefixes")]
		public string[] Prefixes { get; set; }
		
		/// <summary>
		/// Only get facet for the given restricted values. Only supported on textual fields. For example, suppose "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "restricted_values" to "Action > 2022", the "category" facet only contains "Action > 2022". Only supported on textual fields. Maximum is 10.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="restrictedValues")]
		public string[] RestrictedValues { get; set; }
	}
	
	/// <summary>
	/// Specifies the image query input.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery
	{
		
		/// <summary>
		/// Base64 encoded image bytes. Supported image formats: JPEG, PNG, and BMP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageBytes")]
		public string ImageBytes { get; set; }
	}
	
	/// <summary>
	/// Specification to determine under which conditions query expansion should occur.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec
	{
		
		/// <summary>
		/// The condition under which query expansion should occur. Default to Condition.DISABLED.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public System.Nullable<GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpecCondition> Condition { get; set; }
		
		/// <summary>
		/// Whether to pin unexpanded results. If this field is set to true, unexpanded products are always at the top of the search results, followed by the expanded results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pinUnexpandedResults")]
		public System.Nullable<System.Boolean> PinUnexpandedResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpecCondition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONDITION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTO = 2,
	}
	
	/// <summary>
	/// The specification for query spell correction.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec
	{
		
		/// <summary>
		/// The mode under which spell correction should take effect to replace the original search query. Default to Mode.AUTO.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mode")]
		public System.Nullable<GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpecMode> Mode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpecMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MODE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUGGESTION_ONLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTO = 2,
	}
	
	/// <summary>
	/// Response message for SearchService.Search method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchResponse
	{
		
		/// <summary>
		/// Controls applied as part of the Control service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appliedControls")]
		public string[] AppliedControls { get; set; }
		
		/// <summary>
		/// A unique search token. This should be included in the UserEvent logs resulting from this search, which enables accurate attribution of search model performance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributionToken")]
		public string AttributionToken { get; set; }
		
		/// <summary>
		/// Contains the spell corrected query, if found. If the spell correction type is AUTOMATIC, then the search results are based on corrected_query. Otherwise the original query is used for search.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="correctedQuery")]
		public string CorrectedQuery { get; set; }
		
		/// <summary>
		/// Results of facets requested by user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="facets")]
		public GoogleCloudDiscoveryengineV1betaSearchResponseFacet[] Facets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="geoSearchDebugInfo")]
		public GoogleCloudDiscoveryengineV1betaSearchResponseGeoSearchDebugInfo[] GeoSearchDebugInfo { get; set; }
		
		/// <summary>
		/// Guided search result. The guided search helps user to refine the search results and narrow down to the real needs from a broaded search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="guidedSearchResult")]
		public GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResult GuidedSearchResult { get; set; }
		
		/// <summary>
		/// A token that can be sent as SearchRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Information describing query expansion including whether expansion has occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryExpansionInfo")]
		public GoogleCloudDiscoveryengineV1betaSearchResponseQueryExpansionInfo QueryExpansionInfo { get; set; }
		
		/// <summary>
		/// The URI of a customer-defined redirect page. If redirect action is triggered, no search is performed, and only redirect_uri and attribution_token are set in the response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redirectUri")]
		public string RedirectUri { get; set; }
		
		/// <summary>
		/// A list of matched documents. The order represents the ranking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="results")]
		public GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult[] Results { get; set; }
		
		/// <summary>
		/// Summary of the top N search result specified by the summary spec.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="summary")]
		public GoogleCloudDiscoveryengineV1betaSearchResponseSummary Summary { get; set; }
		
		/// <summary>
		/// The estimated total count of matched items irrespective of pagination. The count of results returned by pagination may be less than the total_size that matches.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalSize")]
		public System.Nullable<System.Int32> TotalSize { get; set; }
	}
	
	/// <summary>
	/// A facet result.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchResponseFacet
	{
		
		/// <summary>
		/// Whether the facet is dynamically generated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dynamicFacet")]
		public System.Nullable<System.Boolean> DynamicFacet { get; set; }
		
		/// <summary>
		/// The key for this facet. E.g., "colors" or "price". It matches SearchRequest.FacetSpec.FacetKey.key.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// The facet values for this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue[] Values { get; set; }
	}
	
	/// <summary>
	/// A facet value which contains value names and their count.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue
	{
		
		/// <summary>
		/// Number of items that have this facet value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public string Count { get; set; }
		
		/// <summary>
		/// A floating point interval.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interval")]
		public GoogleCloudDiscoveryengineV1betaInterval Interval { get; set; }
		
		/// <summary>
		/// Text value of a facet, such as "Black" for facet "colors".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Debug information specifically related to forward geocoding issues arising from Geolocation Search.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchResponseGeoSearchDebugInfo
	{
		
		/// <summary>
		/// The error produced.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorMessage")]
		public string ErrorMessage { get; set; }
		
		/// <summary>
		/// The address from which forward geocoding ingestion produced issues.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originalAddressQuery")]
		public string OriginalAddressQuery { get; set; }
	}
	
	/// <summary>
	/// Guided search result. The guided search helps user to refine the search results and narrow down to the real needs from a broaded search results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResult
	{
		
		/// <summary>
		/// Suggested follow-up questions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="followUpQuestions")]
		public string[] FollowUpQuestions { get; set; }
		
		/// <summary>
		/// A list of ranked refinement attributes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="refinementAttributes")]
		public GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResultRefinementAttribute[] RefinementAttributes { get; set; }
	}
	
	/// <summary>
	/// Useful attribute for search result refinements.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResultRefinementAttribute
	{
		
		/// <summary>
		/// Attribute key used to refine the results e.g. 'movie_type'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributeKey")]
		public string AttributeKey { get; set; }
		
		/// <summary>
		/// Attribute value used to refine the results e.g. 'drama'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attributeValue")]
		public string AttributeValue { get; set; }
	}
	
	/// <summary>
	/// Information describing query expansion including whether expansion has occurred.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaSearchResponseQueryExpansionInfo
	{
		
		/// <summary>
		/// Bool describing whether query expansion has occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expandedQuery")]
		public System.Nullable<System.Boolean> ExpandedQuery { get; set; }
		
		/// <summary>
		/// Number of pinned results. This field will only be set when expansion happens and SearchRequest.QueryExpansionSpec.pin_unexpanded_results is set to true.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pinnedResultCount")]
		public string PinnedResultCount { get; set; }
	}
	
	/// <summary>
	/// Metadata for UpdateSchema LRO.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudDiscoveryengineV1betaUpdateSchemaMetadata
	{
		
		/// <summary>
		/// Operation create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Operation last update time. If the operation is done, this is also the finish time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// The response message for Operations.ListOperations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleLongrunningListOperationsResponse
	{
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A list of operations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operations")]
		public GoogleLongrunningOperation[] Operations { get; set; }
	}
	
	/// <summary>
	/// This resource represents a long-running operation that is the result of a network API call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleLongrunningOperation
	{
		
		/// <summary>
		/// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="done")]
		public System.Nullable<System.Boolean> Done { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public System.Collections.Generic.Dictionary<string, object> Response { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleProtobufEmpty
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Completes the specified user input with keyword suggestions.
		/// Discoveryengine_projects_locations_dataStores_completeQuery v1beta/{dataStore}:completeQuery
		/// </summary>
		/// <param name="dataStore">Required. The parent data store resource name for which the completion is performed, such as `projects/*/locations/global/collections/default_collection/dataStores/default_data_store`.</param>
		/// <param name="includeTailSuggestions">Indicates if tail suggestions should be returned if there are no suggestions that match the full query. Even if set to true, if there are suggestions that match the full query, those are returned and no tail suggestions are returned.</param>
		/// <param name="query">Required. The typeahead input used to fetch suggestions. Maximum length is 128 characters.</param>
		/// <param name="queryModel">Selects data model of query suggestions for serving. Currently supported values: * `document` - Using suggestions generated from user-imported documents. * `search-history` - Using suggestions generated from the past history of SearchService.Search API calls. Do not use it when there is no traffic for Search API. * `user-event` - Using suggestions generated from user-imported search events. * `document-completable` - Using suggestions taken directly from user-imported document fields marked as completable. Default values: * `document` is the default model for regular dataStores. * `search-history` is the default model for site search dataStores.</param>
		/// <param name="userPseudoId">A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor logs in or out of the website. This field should NOT have a fixed value such as `unknown_visitor`. This should be the same identifier as UserEvent.user_pseudo_id and SearchRequest.user_pseudo_id. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDiscoveryengineV1betaCompleteQueryResponse> Discoveryengine_projects_locations_dataStores_completeQueryAsync(string dataStore, bool includeTailSuggestions, string query, string queryModel, string userPseudoId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (dataStore==null? "" : System.Uri.EscapeDataString(dataStore))+":completeQuery&includeTailSuggestions="+includeTailSuggestions+"&query=" + (query==null? "" : System.Uri.EscapeDataString(query))+"&queryModel=" + (queryModel==null? "" : System.Uri.EscapeDataString(queryModel))+"&userPseudoId=" + (userPseudoId==null? "" : System.Uri.EscapeDataString(userPseudoId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleCloudDiscoveryengineV1betaCompleteQueryResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a Schema.
		/// Discoveryengine_projects_locations_dataStores_schemas_delete v1beta/{name}
		/// </summary>
		/// <param name="name">Required. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Discoveryengine_projects_locations_dataStores_schemas_deleteAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleLongrunningOperation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
		/// Discoveryengine_projects_operations_get v1beta/{name}
		/// </summary>
		/// <param name="name">The name of the operation resource.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Discoveryengine_projects_operations_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleLongrunningOperation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates a Schema.
		/// Discoveryengine_projects_locations_dataStores_schemas_patch v1beta/{name}
		/// </summary>
		/// <param name="name">Immutable. The full resource name of the schema, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.</param>
		/// <param name="allowMissing">If set to true, and the Schema is not found, a new Schema will be created. In this situation, `update_mask` is ignored.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Discoveryengine_projects_locations_dataStores_schemas_patchAsync(string name, bool allowMissing, GoogleCloudDiscoveryengineV1betaSchema requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&allowMissing="+allowMissing;
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleLongrunningOperation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
		/// Discoveryengine_projects_operations_list v1beta/{name}/operations
		/// </summary>
		/// <param name="name">The name of the operation's parent resource.</param>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningListOperationsResponse> Discoveryengine_projects_operations_listAsync(string name, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/operations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleLongrunningListOperationsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Converses a conversation.
		/// Discoveryengine_projects_locations_dataStores_conversations_converse v1beta/{name}:converse
		/// </summary>
		/// <param name="name">Required. The resource name of the Conversation to get. Format: `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`. Use `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}/conversations/-` to activate auto session mode, which automatically creates a new conversation inside a ConverseConversation session.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDiscoveryengineV1betaConverseConversationResponse> Discoveryengine_projects_locations_dataStores_conversations_converseAsync(string name, GoogleCloudDiscoveryengineV1betaConverseConversationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":converse";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleCloudDiscoveryengineV1betaConverseConversationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Lists all Conversations by their parent DataStore.
		/// Discoveryengine_projects_locations_dataStores_conversations_list v1beta/{parent}/conversations
		/// </summary>
		/// <param name="parent">Required. The data store resource name. Format: `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`</param>
		/// <param name="filter">A filter to apply on the list results. The supported features are: user_pseudo_id, state. Example: "user_pseudo_id = some_id"</param>
		/// <param name="orderBy">A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for descending. Supported fields: * `update_time` * `create_time` * `conversation_name` Example: "update_time desc" "create_time"</param>
		/// <param name="pageSize">Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000.</param>
		/// <param name="pageToken">A page token, received from a previous `ListConversations` call. Provide this to retrieve the subsequent page.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDiscoveryengineV1betaListConversationsResponse> Discoveryengine_projects_locations_dataStores_conversations_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/conversations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleCloudDiscoveryengineV1betaListConversationsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS error is returned.
		/// Discoveryengine_projects_locations_dataStores_conversations_create v1beta/{parent}/conversations
		/// </summary>
		/// <param name="parent">Required. Full resource name of parent data store. Format: `projects/{project_number}/locations/{location_id}/collections/{collection}/dataStores/{data_store_id}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDiscoveryengineV1betaConversation> Discoveryengine_projects_locations_dataStores_conversations_createAsync(string parent, GoogleCloudDiscoveryengineV1betaConversation requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/conversations";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleCloudDiscoveryengineV1betaConversation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Gets a list of Documents.
		/// Discoveryengine_projects_locations_dataStores_branches_documents_list v1beta/{parent}/documents
		/// </summary>
		/// <param name="parent">Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. Use `default_branch` as the branch ID, to list documents under the default branch. If the caller does not have permission to list Documents under this branch, regardless of whether or not this branch exists, a `PERMISSION_DENIED` error is returned.</param>
		/// <param name="pageSize">Maximum number of Documents to return. If unspecified, defaults to 100. The maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If this field is negative, an `INVALID_ARGUMENT` error is returned.</param>
		/// <param name="pageToken">A page token ListDocumentsResponse.next_page_token, received from a previous DocumentService.ListDocuments call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to DocumentService.ListDocuments must match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is returned.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDiscoveryengineV1betaListDocumentsResponse> Discoveryengine_projects_locations_dataStores_branches_documents_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/documents&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleCloudDiscoveryengineV1betaListDocumentsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a Document.
		/// Discoveryengine_projects_locations_dataStores_branches_documents_create v1beta/{parent}/documents
		/// </summary>
		/// <param name="parent">Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.</param>
		/// <param name="documentId">Required. The ID to use for the Document, which will become the final component of the Document.name. If the caller does not have permission to create the Document, regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. This field must be unique among all Documents with the same parent. Otherwise, an `ALREADY_EXISTS` error is returned. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDiscoveryengineV1betaDocument> Discoveryengine_projects_locations_dataStores_branches_documents_createAsync(string parent, string documentId, GoogleCloudDiscoveryengineV1betaDocument requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/documents&documentId=" + (documentId==null? "" : System.Uri.EscapeDataString(documentId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleCloudDiscoveryengineV1betaDocument>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Bulk import of multiple Documents. Request processing may be synchronous. Non-existing items will be created. Note: It is possible for a subset of the Documents to be successfully updated.
		/// Discoveryengine_projects_locations_dataStores_branches_documents_import v1beta/{parent}/documents:import
		/// </summary>
		/// <param name="parent">Required. The parent branch resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`. Requires create/update permission.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Discoveryengine_projects_locations_dataStores_branches_documents_importAsync(string parent, GoogleCloudDiscoveryengineV1betaImportDocumentsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/documents:import";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleLongrunningOperation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Permanently deletes all selected Documents in a branch. This process is asynchronous. Depending on the number of Documents to be deleted, this operation can take hours to complete. Before the delete operation completes, some Documents might still be returned by DocumentService.GetDocument or DocumentService.ListDocuments. To get a list of the Documents to be deleted, set PurgeDocumentsRequest.force to false.
		/// Discoveryengine_projects_locations_dataStores_branches_documents_purge v1beta/{parent}/documents:purge
		/// </summary>
		/// <param name="parent">Required. The parent resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Discoveryengine_projects_locations_dataStores_branches_documents_purgeAsync(string parent, GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/documents:purge";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleLongrunningOperation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Gets a list of Schemas.
		/// Discoveryengine_projects_locations_dataStores_schemas_list v1beta/{parent}/schemas
		/// </summary>
		/// <param name="parent">Required. The parent data store resource name, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.</param>
		/// <param name="pageSize">The maximum number of Schemas to return. The service may return fewer than this value. If unspecified, at most 100 Schemas will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.</param>
		/// <param name="pageToken">A page token, received from a previous SchemaService.ListSchemas call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to SchemaService.ListSchemas must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDiscoveryengineV1betaListSchemasResponse> Discoveryengine_projects_locations_dataStores_schemas_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/schemas&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleCloudDiscoveryengineV1betaListSchemasResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a Schema.
		/// Discoveryengine_projects_locations_dataStores_schemas_create v1beta/{parent}/schemas
		/// </summary>
		/// <param name="parent">Required. The parent data store resource name, in the format of `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.</param>
		/// <param name="schemaId">Required. The ID to use for the Schema, which will become the final component of the Schema.name. This field should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Discoveryengine_projects_locations_dataStores_schemas_createAsync(string parent, string schemaId, GoogleCloudDiscoveryengineV1betaSchema requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/schemas&schemaId=" + (schemaId==null? "" : System.Uri.EscapeDataString(schemaId));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleLongrunningOperation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Imports all SuggestionDenyListEntry for a DataStore.
		/// Discoveryengine_projects_locations_dataStores_suggestionDenyListEntries_import v1beta/{parent}/suggestionDenyListEntries:import
		/// </summary>
		/// <param name="parent">Required. The parent data store resource name for which to import denylist entries. Follows pattern projects/*/locations/*/collections/*/dataStores/*.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Discoveryengine_projects_locations_dataStores_suggestionDenyListEntries_importAsync(string parent, GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/suggestionDenyListEntries:import";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleLongrunningOperation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Permanently deletes all SuggestionDenyListEntry for a DataStore.
		/// Discoveryengine_projects_locations_dataStores_suggestionDenyListEntries_purge v1beta/{parent}/suggestionDenyListEntries:purge
		/// </summary>
		/// <param name="parent">Required. The parent data store resource name for which to import denylist entries. Follows pattern projects/*/locations/*/collections/*/dataStores/*.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Discoveryengine_projects_locations_dataStores_suggestionDenyListEntries_purgeAsync(string parent, GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/suggestionDenyListEntries:purge";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleLongrunningOperation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Writes a single user event from the browser. This uses a GET request to due to browser restriction of POST-ing to a third-party domain. This method is used only by the Discovery Engine API JavaScript pixel and Google Tag Manager. Users should not call this method directly.
		/// Discoveryengine_projects_locations_dataStores_userEvents_collect v1beta/{parent}/userEvents:collect
		/// </summary>
		/// <param name="parent">Required. The parent DataStore resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.</param>
		/// <param name="ets">The event timestamp in milliseconds. This prevents browser caching of otherwise identical get requests. The name is abbreviated to reduce the payload bytes.</param>
		/// <param name="uri">The URL including cgi-parameters but excluding the hash fragment with a length limit of 5,000 characters. This is often more useful than the referer URL, because many browsers only send the domain for third-party requests.</param>
		/// <param name="userEvent">Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleApiHttpBody> Discoveryengine_projects_locations_dataStores_userEvents_collectAsync(string parent, string ets, string uri, string userEvent, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/userEvents:collect&ets=" + (ets==null? "" : System.Uri.EscapeDataString(ets))+"&uri=" + (uri==null? "" : System.Uri.EscapeDataString(uri))+"&userEvent=" + (userEvent==null? "" : System.Uri.EscapeDataString(userEvent));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleApiHttpBody>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Bulk import of User events. Request processing might be synchronous. Events that already exist are skipped. Use this method for backfilling historical user events. Operation.response is of type ImportResponse. Note that it is possible for a subset of the items to be successfully inserted. Operation.metadata is of type ImportMetadata.
		/// Discoveryengine_projects_locations_dataStores_userEvents_import v1beta/{parent}/userEvents:import
		/// </summary>
		/// <param name="parent">Required. Parent DataStore resource name, of the form `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Discoveryengine_projects_locations_dataStores_userEvents_importAsync(string parent, GoogleCloudDiscoveryengineV1betaImportUserEventsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/userEvents:import";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleLongrunningOperation>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Writes a single user event.
		/// Discoveryengine_projects_locations_dataStores_userEvents_write v1beta/{parent}/userEvents:write
		/// </summary>
		/// <param name="parent">Required. The parent DataStore resource name, such as `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDiscoveryengineV1betaUserEvent> Discoveryengine_projects_locations_dataStores_userEvents_writeAsync(string parent, GoogleCloudDiscoveryengineV1betaUserEvent requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/userEvents:write";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleCloudDiscoveryengineV1betaUserEvent>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Makes a recommendation, which requires a contextual user event.
		/// Discoveryengine_projects_locations_dataStores_servingConfigs_recommend v1beta/{servingConfig}:recommend
		/// </summary>
		/// <param name="servingConfig">Required. Full resource name of a ServingConfig: `projects/*/locations/global/collections/*/engines/*/servingConfigs/*`, or `projects/*/locations/global/collections/*/dataStores/*/servingConfigs/*` One default serving config is created along with your recommendation engine creation. The engine ID will be used as the ID of the default serving config. For example, for Engine `projects/*/locations/global/collections/*/engines/my-engine`, you can use `projects/*/locations/global/collections/*/engines/my-engine/servingConfigs/my-engine` for your RecommendationService.Recommend requests.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDiscoveryengineV1betaRecommendResponse> Discoveryengine_projects_locations_dataStores_servingConfigs_recommendAsync(string servingConfig, GoogleCloudDiscoveryengineV1betaRecommendRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (servingConfig==null? "" : System.Uri.EscapeDataString(servingConfig))+":recommend";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleCloudDiscoveryengineV1betaRecommendResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Performs a search.
		/// Discoveryengine_projects_locations_dataStores_servingConfigs_search v1beta/{servingConfig}:search
		/// </summary>
		/// <param name="servingConfig">Required. The resource name of the Search serving config, such as `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`, or `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`. This field is used to identify the serving configuration name, set of models used to make the search.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudDiscoveryengineV1betaSearchResponse> Discoveryengine_projects_locations_dataStores_servingConfigs_searchAsync(string servingConfig, GoogleCloudDiscoveryengineV1betaSearchRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta/"+ (servingConfig==null? "" : System.Uri.EscapeDataString(servingConfig))+":search";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GoogleCloudDiscoveryengineV1betaSearchResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

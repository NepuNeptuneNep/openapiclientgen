//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Error
	{
		
		/// <summary>
		/// Short identifier for the error, suitable for indicating the specific error within client code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// List of the specific fields, and the errors found with their contents
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public ErrorField[] Fields { get; set; }
		
		/// <summary>
		/// Human-readable, English description of the error
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ErrorField
	{
		
		/// <summary>
		/// Short identifier for the error, suitable for indicating the specific error within client code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Human-readable, English description of the problem with the contents of the field
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// <ul>
		///<li style='margin-left: 12px;'>JSONPath referring to a field containing an error</li>
		///<strong style='margin-left: 12px;'>OR</strong>
		///<li style='margin-left: 12px;'>JSONPath referring to a field that refers to an object containing an error, with more detail in `pathRelated`</li>
		///</ul>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// JSONPath referring to a field containing an error, which is referenced by `path`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pathRelated")]
		public string PathRelated { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ErrorLimit
	{
		
		/// <summary>
		/// Short identifier for the error, suitable for indicating the specific error within client code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// List of the specific fields, and the errors found with their contents
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public ErrorField[] Fields { get; set; }
		
		/// <summary>
		/// Human-readable, English description of the error
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Number of seconds to wait before attempting a similar request
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="retryAfterSec")]
		public string RetryAfterSec { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PasswordError
	{
		
		/// <summary>
		/// Short identifier for the error, suitable for indicating the specific error within client code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<PasswordErrorCode> Code { get; set; }
		
		/// <summary>
		/// Human-readable, English description of the error
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Response type, always 'error'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PasswordErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PW_BLACK_LIST = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PW_TOO_SHORT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PW_TOO_LONG = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PW_MISSING_UC = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PW_MISSING_NUM = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PW_RECENTLY_USED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PW_NOT_UNIQUE = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Secret
	{
		
		/// <summary>
		/// The secret value used to set a subaccount's password
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret1 { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Shopper
	{
		
		/// <summary>
		/// Identifier for the Customer record associated with this Shopper record. This is an alternate identifier that some systems use to identify an individual shopper record
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerId")]
		public string CustomerId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="externalId")]
		public System.Nullable<System.Int32> ExternalId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DefaultValue("en-US")]
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="marketId")]
		public string MarketId { get; set; } = "en-US";
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nameFirst")]
		public string NameFirst { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nameLast")]
		public string NameLast { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shopperId")]
		public string ShopperId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ShopperId
	{
		
		/// <summary>
		/// Identifier for the Customer record associated with this Shopper record. This is an alternate identifier that some systems use to identify an individual shopper record
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customerId")]
		public string CustomerId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="shopperId")]
		public string ShopperId1 { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ShopperStatus
	{
		
		/// <summary>
		/// Indicates the billing state of the Shopper.<br />ABANDONED: The shopper has not been billed in at least 10 years and has no active subscriptions.<br />INACTIVE: The shopper has been billed within the last 10 years but has no active subscriptions.<br />ACTIVE: The shopper has at least one active subscription.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billingState")]
		public System.Nullable<ShopperStatusBillingState> BillingState { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ShopperStatusBillingState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ABANDONED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ShopperUpdate
	{
		
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="externalId")]
		public System.Nullable<System.Int32> ExternalId { get; set; }
		
		/// <summary>
		/// Max length: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketId")]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public System.Nullable<ShopperUpdateMarketId> MarketId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nameFirst")]
		public string NameFirst { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nameLast")]
		public string NameLast { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ShopperUpdateMarketId
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="el-GR")]
		elMinusGR = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-AE")]
		enMinusAE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-AU")]
		enMinusAU = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-CA")]
		enMinusCA = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-HK")]
		enMinusHK = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-IE")]
		enMinusIE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-IL")]
		enMinusIL = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-IN")]
		enMinusIN = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-MY")]
		enMinusMY = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-NZ")]
		enMinusNZ = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-PH")]
		enMinusPH = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-PK")]
		enMinusPK = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-SG")]
		enMinusSG = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-US")]
		enMinusUS = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-ZA")]
		enMinusZA = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-AR")]
		esMinusAR = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-CL")]
		esMinusCL = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-CO")]
		esMinusCO = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-MX")]
		esMinusMX = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-PE")]
		esMinusPE = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-US")]
		esMinusUS = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-VE")]
		esMinusVE = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CA")]
		frMinusCA = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hi-IN")]
		hiMinusIN = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="id-ID")]
		idMinusID = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-CH")]
		itMinusCH = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ja-JP")]
		jaMinusJP = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ko-KR")]
		koMinusKR = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="mr-IN")]
		mrMinusIN = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nb-NO")]
		nbMinusNO = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pt-BR")]
		ptMinusBR = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pt-PT")]
		ptMinusPT = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ru-RU")]
		ruMinusRU = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ta-IN")]
		taMinusIN = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="th-TH")]
		thMinusTH = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="tr-TR")]
		trMinusTR = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="uk-UA")]
		ukMinusUA = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="vi-VN")]
		viMinusVN = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-HK")]
		zhMinusHK = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-SG")]
		zhMinusSG = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-TW")]
		zhMinusTW = 55,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SubaccountCreate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="externalId")]
		public System.Nullable<System.Int32> ExternalId { get; set; }
		
		/// <summary>
		/// Max length: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketId")]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public System.Nullable<SubaccountCreateMarketId> MarketId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nameFirst")]
		public string NameFirst { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nameLast")]
		public string NameLast { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SubaccountCreateMarketId
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-DK")]
		daMinusDK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-AT")]
		deMinusAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="el-GR")]
		elMinusGR = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-AE")]
		enMinusAE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-AU")]
		enMinusAU = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-CA")]
		enMinusCA = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-HK")]
		enMinusHK = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-IE")]
		enMinusIE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-IL")]
		enMinusIL = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-IN")]
		enMinusIN = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-MY")]
		enMinusMY = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-NZ")]
		enMinusNZ = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-PH")]
		enMinusPH = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-PK")]
		enMinusPK = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-SG")]
		enMinusSG = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-US")]
		enMinusUS = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-ZA")]
		enMinusZA = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-AR")]
		esMinusAR = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-CL")]
		esMinusCL = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-CO")]
		esMinusCO = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-MX")]
		esMinusMX = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-PE")]
		esMinusPE = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-US")]
		esMinusUS = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-VE")]
		esMinusVE = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-FI")]
		fiMinusFI = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-BE")]
		frMinusBE = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CA")]
		frMinusCA = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CH")]
		frMinusCH = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hi-IN")]
		hiMinusIN = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="id-ID")]
		idMinusID = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-CH")]
		itMinusCH = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ja-JP")]
		jaMinusJP = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ko-KR")]
		koMinusKR = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="mr-IN")]
		mrMinusIN = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nb-NO")]
		nbMinusNO = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-BE")]
		nlMinusBE = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-NL")]
		nlMinusNL = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-PL")]
		plMinusPL = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pt-BR")]
		ptMinusBR = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pt-PT")]
		ptMinusPT = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ru-RU")]
		ruMinusRU = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-SE")]
		svMinusSE = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ta-IN")]
		taMinusIN = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="th-TH")]
		thMinusTH = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="tr-TR")]
		trMinusTR = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="uk-UA")]
		ukMinusUA = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="vi-VN")]
		viMinusVN = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-HK")]
		zhMinusHK = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-SG")]
		zhMinusSG = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-TW")]
		zhMinusTW = 55,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Create a Subaccount owned by the authenticated Reseller
		/// CreateSubaccount v1/shoppers/subaccount
		/// </summary>
		/// <param name="requestBody">The subaccount to create</param>
		/// <returns>Request was successful</returns>
		public async Task<ShopperId> CreateSubaccountAsync(SubaccountCreate requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/shoppers/subaccount";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ShopperId>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Request the deletion of a shopper profile
		/// <strong>Notes:</strong><ul><li>Shopper deletion is not supported in OTE</li><li>**shopperId** is **not the same** as **customerId**.  **shopperId** is a number of max length 10 digits (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:* 295e3bc3-b3b9-4d95-aae5-ede41a994d13)</li></ul>
		/// Delete v1/shoppers/{shopperId}
		/// </summary>
		/// <param name="shopperId">The ID of the shopper to delete. Must agree with the shopper id on the token or header, if present. *Note*: **shopperId** is **not the same** as **customerId**.  **shopperId** is a number of max length 10 digits (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:* 295e3bc3-b3b9-4d95-aae5-ede41a994d13)
		/// Max length: 10
		// </param>
		/// <param name="auditClientIp">The client IP of the user who originated the request leading to this call.</param>
		public async Task DeleteAsync(string shopperId, string auditClientIp, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/shoppers/"+ (shopperId==null? "" : System.Uri.EscapeDataString(shopperId))+"&auditClientIp=" + (auditClientIp==null? "" : System.Uri.EscapeDataString(auditClientIp));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get details for the specified Shopper
		/// <strong>Notes:</strong><ul><li>**shopperId** is **not the same** as **customerId**.  **shopperId** is a number of max length 10 digits (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:* 295e3bc3-b3b9-4d95-aae5-ede41a994d13)</li></ul>
		/// Get v1/shoppers/{shopperId}
		/// </summary>
		/// <param name="shopperId">Shopper whose details are to be retrieved</param>
		/// <param name="includes">Additional properties to be included in the response shopper object</param>
		/// <returns>Request was successful</returns>
		public async Task<Shopper> GetAsync(string shopperId, string[] includes, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/shoppers/"+ (shopperId==null? "" : System.Uri.EscapeDataString(shopperId))+"&"+string.Join("&", includes.Select(z => $"includes={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Shopper>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update details for the specified Shopper
		/// <strong>Notes:</strong><ul><li>**shopperId** is **not the same** as **customerId**.  **shopperId** is a number of max length 10 digits (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:* 295e3bc3-b3b9-4d95-aae5-ede41a994d13)</li></ul>
		/// Update v1/shoppers/{shopperId}
		/// </summary>
		/// <param name="shopperId">The ID of the Shopper to update</param>
		/// <param name="requestBody">The Shopper details to update</param>
		/// <returns>Request was successful</returns>
		public async Task<ShopperId> UpdateAsync(string shopperId, ShopperUpdate requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/shoppers/"+ (shopperId==null? "" : System.Uri.EscapeDataString(shopperId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ShopperId>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Set subaccount's password
		/// <strong>Notes:</strong><ul><li>Password set is only supported by API Resellers setting subaccount passwords.</li><li>**shopperId** is **not the same** as **customerId**.  **shopperId** is a number of max length 10 digits (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:* 295e3bc3-b3b9-4d95-aae5-ede41a994d13)</li></ul>
		/// ChangePassword v1/shoppers/{shopperId}/factors/password
		/// </summary>
		/// <param name="shopperId">Shopper whose password will be set</param>
		/// <param name="requestBody">The value to set the subaccount's password to</param>
		/// <returns>Request was successful</returns>
		public async Task<ShopperId> ChangePasswordAsync(string shopperId, Secret requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/shoppers/"+ (shopperId==null? "" : System.Uri.EscapeDataString(shopperId))+"/factors/password";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ShopperId>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get details for the specified Shopper
		/// <strong>Notes:</strong><ul><li>**shopperId** is **not the same** as **customerId**. **shopperId** is a number of max length 10 digits (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:* 295e3bc3-b3b9-4d95-aae5-ede41a994d13)</li></ul>
		/// GetStatus v1/shoppers/{shopperId}/status
		/// </summary>
		/// <param name="shopperId">The ID of the shopper to retrieve. Must agree with the shopper id on the token or header, if present
		/// Max length: 10
		// </param>
		/// <param name="auditClientIp">The client IP of the user who originated the request leading to this call.</param>
		/// <returns>Request was successful</returns>
		public async Task<ShopperStatus> GetStatusAsync(string shopperId, string auditClientIp, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/shoppers/"+ (shopperId==null? "" : System.Uri.EscapeDataString(shopperId))+"/status&auditClientIp=" + (auditClientIp==null? "" : System.Uri.EscapeDataString(auditClientIp));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ShopperStatus>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

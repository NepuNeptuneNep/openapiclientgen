//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActivateAnomalyDetectorResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TooManyRequestsException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalServerException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConflictException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BackTestAnomalyDetectorResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAlertResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AlertArn { get; set; }
	}
	
	/// <summary>
	/// Contains information about the SNS topic to which you want to send your alerts and the IAM role that has access to that topic.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SNSConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SnsTopicArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnsFormat SnsFormat { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SnsFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LONG_TEXT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHORT_TEXT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JSON = 2,
	}
	
	/// <summary>
	/// Contains information about a Lambda configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LambdaConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LambdaArn { get; set; }
	}
	
	/// <summary>
	/// The dimension filter, containing DimensionName and DimensionValueList.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DimensionFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DimensionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DimensionValueList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceQuotaExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAnomalyDetectorResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Frequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		P1D = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PT1H = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PT10M = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PT5M = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateMetricSetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricSetArn { get; set; }
	}
	
	/// <summary>
	/// A calculation made by contrasting a measure and a dimension from your source data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Metric
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MetricName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AggregationFunction AggregationFunction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Namespace { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AggregationFunction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVG = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUM = 1,
	}
	
	/// <summary>
	/// Contains information about the configuration of the S3 bucket that contains source files.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3SourceConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TemplatedPathList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] HistoricalDataPathList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FileFormatDescriptor FileFormatDescriptor { get; set; }
	}
	
	/// <summary>
	/// Contains information about a source file's formatting.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FileFormatDescriptor
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CsvFormatDescriptor CsvFormatDescriptor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JsonFormatDescriptor JsonFormatDescriptor { get; set; }
	}
	
	/// <summary>
	/// Contains information about how a source CSV data file should be analyzed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CsvFormatDescriptor
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CSVFileCompression FileCompression { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Charset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ContainsHeader { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Delimiter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] HeaderList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string QuoteSymbol { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CSVFileCompression
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GZIP = 1,
	}
	
	/// <summary>
	/// Contains information about how a source JSON data file should be analyzed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JsonFormatDescriptor
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CSVFileCompression FileCompression { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Charset { get; set; }
	}
	
	/// <summary>
	/// Details about an Amazon AppFlow flow datasource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppFlowConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FlowName { get; set; }
	}
	
	/// <summary>
	/// Details about an Amazon CloudWatch datasource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudWatchConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BackTestConfiguration BackTestConfiguration { get; set; }
	}
	
	/// <summary>
	/// Settings for backtest mode.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BackTestConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool RunBackTestMode { get; set; }
	}
	
	/// <summary>
	/// Contains information about the Amazon Relational Database Service (RDS) configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RDSSourceConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DBInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseHost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DatabasePort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretManagerArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TableName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcConfiguration VpcConfiguration { get; set; }
	}
	
	/// <summary>
	/// Contains configuration information about the Amazon Virtual Private Cloud (VPC).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VpcConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIdList { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIdList { get; set; }
	}
	
	/// <summary>
	/// Provides information about the Amazon Redshift database configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RedshiftSourceConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ClusterIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseHost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DatabasePort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretManagerArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TableName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcConfiguration VpcConfiguration { get; set; }
	}
	
	/// <summary>
	/// Details about an Amazon Athena datasource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AthenaSourceConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DataCatalog { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TableName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WorkGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3ResultsPath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BackTestConfiguration BackTestConfiguration { get; set; }
	}
	
	/// <summary>
	/// Describes a list of filters for choosing a subset of dimension values. Each filter consists of the dimension and one of its values that you want to include. When multiple dimensions or values are specified, the dimensions are joined with an AND operation and the values are joined with an OR operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MetricSetDimensionFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] FilterList { get; set; }
	}
	
	/// <summary>
	/// Describes a filter for choosing a subset of dimension values. Each filter consists of the dimension that you want to include and the condition statement. The condition statement is specified in the <code>FilterOperation</code> object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Filter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DimensionValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FilterOperation FilterOperation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FilterOperation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQUALS = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeactivateAnomalyDetectorResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAlertResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAnomalyDetectorResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAlertResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Alert Alert { get; set; }
	}
	
	/// <summary>
	/// A configuration for Amazon SNS-integrated notifications.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Alert
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AlertDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AlertArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AlertName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AlertSensitivityThreshold { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AlertType AlertType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AlertStatus AlertStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModificationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AlertFilters AlertFilters { get; set; }
	}
	
	/// <summary>
	/// A configuration that specifies the action to perform when anomalies are detected.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Action
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SNSConfiguration SNSConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LambdaConfiguration LambdaConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AlertType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SNS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAMBDA = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AlertStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INACTIVE = 1,
	}
	
	/// <summary>
	/// The configuration of the alert filters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AlertFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] MetricList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionFilter[] DimensionFilterList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAnomalyDetectionExecutionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ExecutionStatus[] ExecutionList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The status of an anomaly detector run.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExecutionStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyDetectionTaskStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FailureReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AnomalyDetectionTaskStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED_TO_SCHEDULE = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAnomalyDetectorResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyDetectorConfigSummary AnomalyDetectorConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModificationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyDetectorStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyDetectorFailureType FailureType { get; set; }
	}
	
	/// <summary>
	/// Contains information about a detector's configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnomalyDetectorConfigSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Frequency AnomalyDetectorFrequency { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AnomalyDetectorStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INACTIVE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LEARNING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BACK_TEST_ACTIVATING = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BACK_TEST_ACTIVE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BACK_TEST_COMPLETE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEACTIVATED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEACTIVATING = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AnomalyDetectorFailureType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVATION_FAILURE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BACK_TEST_ACTIVATION_FAILURE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETION_FAILURE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEACTIVATION_FAILURE = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeMetricSetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricSetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricSetDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModificationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Offset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Metric[] MetricList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimestampColumn TimestampColumn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DimensionList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Frequency MetricSetFrequency { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timezone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MetricSource MetricSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MetricSetDimensionFilter[] DimensionFilterList { get; set; }
	}
	
	/// <summary>
	/// Contains information about the column used to track time in a source data file.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimestampColumn
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ColumnName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ColumnFormat { get; set; }
	}
	
	/// <summary>
	/// Contains information about source data used to generate metrics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MetricSource
	{
		
		/// <summary>
		/// Contains information about the configuration of the S3 bucket that contains source files.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3SourceConfig S3SourceConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AppFlowConfig AppFlowConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchConfig CloudWatchConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RDSSourceConfig RDSSourceConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RedshiftSourceConfig RedshiftSourceConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AthenaSourceConfig AthenaSourceConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectMetricSetConfigResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DetectedMetricSetConfig DetectedMetricSetConfig { get; set; }
	}
	
	/// <summary>
	/// An inferred dataset configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectedMetricSetConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DetectedField Offset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DetectedField MetricSetFrequency { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DetectedMetricSource MetricSource { get; set; }
	}
	
	/// <summary>
	/// An inferred field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectedField
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AttributeValue Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Confidence Confidence { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// An attribute value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AttributeValue
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string S { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string N { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string B { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] NS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] BS { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Confidence
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 2,
	}
	
	/// <summary>
	/// An inferred data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectedMetricSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DetectedS3SourceConfig S3SourceConfig { get; set; }
	}
	
	/// <summary>
	/// An inferred source configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectedS3SourceConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DetectedFileFormatDescriptor FileFormatDescriptor { get; set; }
	}
	
	/// <summary>
	/// Properties of an inferred data format.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectedFileFormatDescriptor
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DetectedCsvFormatDescriptor CsvFormatDescriptor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DetectedJsonFormatDescriptor JsonFormatDescriptor { get; set; }
	}
	
	/// <summary>
	/// Properties of an inferred CSV format.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectedCsvFormatDescriptor
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DetectedField FileCompression { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DetectedField Charset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DetectedField ContainsHeader { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DetectedField Delimiter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DetectedField HeaderList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DetectedField QuoteSymbol { get; set; }
	}
	
	/// <summary>
	/// A detected JSON format descriptor.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectedJsonFormatDescriptor
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DetectedField FileCompression { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DetectedField Charset { get; set; }
	}
	
	/// <summary>
	/// An auto detection source config.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoDetectionS3SourceConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TemplatedPathList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] HistoricalDataPathList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAnomalyGroupResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyGroup AnomalyGroup { get; set; }
	}
	
	/// <summary>
	/// A group of anomalous metrics
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnomalyGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AnomalyGroupScore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryMetricName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MetricLevelImpact[] MetricLevelImpactList { get; set; }
	}
	
	/// <summary>
	/// Details about a measure affected by an anomaly.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MetricLevelImpact
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumTimeSeries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContributionMatrix ContributionMatrix { get; set; }
	}
	
	/// <summary>
	/// Details about dimensions that contributed to an anomaly.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContributionMatrix
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionContribution[] DimensionContributionList { get; set; }
	}
	
	/// <summary>
	/// Details about a dimension that contributed to an anomaly.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DimensionContribution
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DimensionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionValueContribution[] DimensionValueContributionList { get; set; }
	}
	
	/// <summary>
	/// The severity of a value of a dimension that contributed to an anomaly.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DimensionValueContribution
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DimensionValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ContributionScore { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDataQualityMetricsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyDetectorDataQualityMetric[] AnomalyDetectorDataQualityMetricList { get; set; }
	}
	
	/// <summary>
	/// Aggregated details about the data quality metrics collected for the <code>AnomalyDetectorArn</code> provided in the <a>GetDataQualityMetrics</a> object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnomalyDetectorDataQualityMetric
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MetricSetDataQualityMetric[] MetricSetDataQualityMetricList { get; set; }
	}
	
	/// <summary>
	/// An array of <code>DataQualityMetric</code> objects that describes one or more data quality metrics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MetricSetDataQualityMetric
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricSetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataQualityMetric[] DataQualityMetricList { get; set; }
	}
	
	/// <summary>
	/// An array that describes a data quality metric. Each <code>DataQualityMetric</code> object contains the data quality metric name, its value, a description of the metric, and the affected column.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataQualityMetric
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DataQualityMetricType MetricType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RelatedColumnName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MetricValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DataQualityMetricType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLUMN_COMPLETENESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIMENSION_UNIQUENESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TIME_SERIES_COUNT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROWS_PROCESSED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROWS_PARTIAL_COMPLIANCE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_ROWS_COMPLIANCE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BACKTEST_TRAINING_DATA_START_TIME_STAMP = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BACKTEST_TRAINING_DATA_END_TIME_STAMP = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BACKTEST_INFERENCE_DATA_START_TIME_STAMP = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BACKTEST_INFERENCE_DATA_END_TIME_STAMP = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetFeedbackResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TimeSeriesFeedback[] AnomalyGroupTimeSeriesFeedback { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Details about feedback submitted for an anomalous metric.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimeSeriesFeedback
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeSeriesId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsAnomaly { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSampleDataResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] HeaderValues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[][] SampleRows { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAlertsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AlertSummary[] AlertSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Provides a summary of an alert's configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AlertSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AlertArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AlertName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AlertSensitivityThreshold { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AlertType AlertType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AlertStatus AlertStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModificationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAnomalyDetectorsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyDetectorSummary[] AnomalyDetectorSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains information about an an anomaly detector.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnomalyDetectorSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModificationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyDetectorStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAnomalyGroupRelatedMetricsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InterMetricImpactDetails[] InterMetricImpactList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// <p>Aggregated details about the measures contributing to the anomaly group, and the measures potentially impacted by the anomaly group.</p> <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InterMetricImpactDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RelationshipType RelationshipType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ContributionPercentage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RelationshipType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAUSE_OF_INPUT_ANOMALY_GROUP = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EFFECT_OF_INPUT_ANOMALY_GROUP = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAnomalyGroupSummariesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyGroupSummary[] AnomalyGroupSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyGroupStatistics AnomalyGroupStatistics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Details about a group of anomalous metrics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnomalyGroupSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> AnomalyGroupScore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryMetricName { get; set; }
	}
	
	/// <summary>
	/// Aggregated statistics for a group of anomalous metrics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnomalyGroupStatistics
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationStartDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ItemizedMetricStats[] ItemizedMetricStatsList { get; set; }
	}
	
	/// <summary>
	/// Aggregated statistics about a measure affected by an anomaly.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemizedMetricStats
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OccurrenceCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAnomalyGroupTimeSeriesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TimestampList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimeSeries[] TimeSeriesList { get; set; }
	}
	
	/// <summary>
	/// Details about a metric. A metric is an aggregation of the values of a measure for a dimension value, such as <i>availability</i> in the <i>us-east-1</i> Region.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimeSeries
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TimeSeriesId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DimensionNameValue[] DimensionList { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double[] MetricValueList { get; set; }
	}
	
	/// <summary>
	/// A dimension name and value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DimensionNameValue
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DimensionName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DimensionValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListMetricSetsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MetricSetSummary[] MetricSetSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains information about a dataset.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MetricSetSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricSetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricSetDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModificationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutFeedbackResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAlertResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AlertArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAnomalyDetectorResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateMetricSetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricSetArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActivateAnomalyDetectorRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
	}
	
	/// <summary>
	/// Contains information about a detector's configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnomalyDetectorConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Frequency AnomalyDetectorFrequency { get; set; }
	}
	
	/// <summary>
	/// An anomalous metric in an anomaly group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnomalyGroupTimeSeries
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeSeriesId { get; set; }
	}
	
	/// <summary>
	/// Feedback for an anomalous metric.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnomalyGroupTimeSeriesFeedback
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyGroupId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TimeSeriesId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool IsAnomaly { get; set; }
	}
	
	/// <summary>
	/// An auto detection metric source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoDetectionMetricSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoDetectionS3SourceConfig S3SourceConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BackTestAnomalyDetectorRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAlertRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AlertName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AlertSensitivityThreshold { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AlertDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AlertFilters AlertFilters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAnomalyDetectorRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnomalyDetectorConfig AnomalyDetectorConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateMetricSetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MetricSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricSetDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Metric[] MetricList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Offset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimestampColumn TimestampColumn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DimensionList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Frequency MetricSetFrequency { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MetricSource MetricSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timezone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MetricSetDimensionFilter[] DimensionFilterList { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeactivateAnomalyDetectorRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAlertRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AlertArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAnomalyDetectorRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAlertRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AlertArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAnomalyDetectionExecutionsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAnomalyDetectorRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeMetricSetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MetricSetArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectMetricSetConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoDetectionMetricSource AutoDetectionMetricSource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAnomalyGroupRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyGroupId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDataQualityMetricsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricSetArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetFeedbackRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnomalyGroupTimeSeries AnomalyGroupTimeSeriesFeedback { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains information about the source configuration in Amazon S3.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SampleDataS3SourceConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TemplatedPathList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] HistoricalDataPathList { get; set; }
		
		/// <summary>
		/// Contains information about a source file's formatting.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FileFormatDescriptor FileFormatDescriptor { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSampleDataRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SampleDataS3SourceConfig S3SourceConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JsonFileCompression
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GZIP = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAlertsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAnomalyDetectorsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAnomalyGroupRelatedMetricsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RelationshipType RelationshipTypeFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAnomalyGroupSummariesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int SensitivityThreshold { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAnomalyGroupTimeSeriesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyGroupId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MetricName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListMetricSetsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutFeedbackRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnomalyGroupTimeSeriesFeedback AnomalyGroupTimeSeriesFeedback { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAlertRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AlertArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AlertDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AlertSensitivityThreshold { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AlertFilters AlertFilters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAnomalyDetectorRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string KmsKeyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyDetectorDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyDetectorConfig AnomalyDetectorConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateMetricSetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MetricSetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricSetDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Metric[] MetricList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Offset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TimestampColumn TimestampColumn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DimensionList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Frequency MetricSetFrequency { get; set; }
		
		/// <summary>
		/// Contains information about source data used to generate metrics.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public MetricSource MetricSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MetricSetDimensionFilter[] DimensionFilterList { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Activates an anomaly detector.
		/// ActivateAnomalyDetector ActivateAnomalyDetector
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ActivateAnomalyDetectorResponse> ActivateAnomalyDetectorAsync(ActivateAnomalyDetectorPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ActivateAnomalyDetector";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ActivateAnomalyDetectorResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Runs a backtest for anomaly detection for the specified resource.
		/// BackTestAnomalyDetector BackTestAnomalyDetector
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BackTestAnomalyDetectorResponse> BackTestAnomalyDetectorAsync(BackTestAnomalyDetectorPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "BackTestAnomalyDetector";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BackTestAnomalyDetectorResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an alert for an anomaly detector.
		/// CreateAlert CreateAlert
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateAlertResponse> CreateAlertAsync(CreateAlertPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "CreateAlert";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateAlertResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an anomaly detector.
		/// CreateAnomalyDetector CreateAnomalyDetector
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateAnomalyDetectorResponse> CreateAnomalyDetectorAsync(CreateAnomalyDetectorPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "CreateAnomalyDetector";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateAnomalyDetectorResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a dataset.
		/// CreateMetricSet CreateMetricSet
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateMetricSetResponse> CreateMetricSetAsync(CreateMetricSetPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "CreateMetricSet";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateMetricSetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deactivates an anomaly detector.
		/// DeactivateAnomalyDetector DeactivateAnomalyDetector
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeactivateAnomalyDetectorResponse> DeactivateAnomalyDetectorAsync(DeactivateAnomalyDetectorPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "DeactivateAnomalyDetector";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeactivateAnomalyDetectorResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an alert.
		/// DeleteAlert DeleteAlert
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteAlertResponse> DeleteAlertAsync(DeleteAlertPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "DeleteAlert";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteAlertResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a detector. Deleting an anomaly detector will delete all of its corresponding resources including any configured datasets and alerts.
		/// DeleteAnomalyDetector DeleteAnomalyDetector
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteAnomalyDetectorResponse> DeleteAnomalyDetectorAsync(DeleteAnomalyDetectorPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "DeleteAnomalyDetector";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteAnomalyDetectorResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes an alert.</p> <p>Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.</p>
		/// DescribeAlert DescribeAlert
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeAlertResponse> DescribeAlertAsync(DescribeAlertPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "DescribeAlert";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeAlertResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about the status of the specified anomaly detection jobs.
		/// DescribeAnomalyDetectionExecutions DescribeAnomalyDetectionExecutions
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeAnomalyDetectionExecutionsResponse> DescribeAnomalyDetectionExecutionsAsync(string MaxResults, string NextToken, DescribeAnomalyDetectionExecutionsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "DescribeAnomalyDetectionExecutions?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeAnomalyDetectionExecutionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes a detector.</p> <p>Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.</p>
		/// DescribeAnomalyDetector DescribeAnomalyDetector
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeAnomalyDetectorResponse> DescribeAnomalyDetectorAsync(DescribeAnomalyDetectorPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "DescribeAnomalyDetector";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeAnomalyDetectorResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes a dataset.</p> <p>Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.</p>
		/// DescribeMetricSet DescribeMetricSet
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeMetricSetResponse> DescribeMetricSetAsync(DescribeMetricSetPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "DescribeMetricSet";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeMetricSetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Detects an Amazon S3 dataset's file format, interval, and offset.
		/// DetectMetricSetConfig DetectMetricSetConfig
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DetectMetricSetConfigResponse> DetectMetricSetConfigAsync(DetectMetricSetConfigPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "DetectMetricSetConfig";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DetectMetricSetConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns details about a group of anomalous metrics.
		/// GetAnomalyGroup GetAnomalyGroup
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetAnomalyGroupResponse> GetAnomalyGroupAsync(GetAnomalyGroupPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "GetAnomalyGroup";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAnomalyGroupResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns details about the requested data quality metrics.
		/// GetDataQualityMetrics GetDataQualityMetrics
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetDataQualityMetricsResponse> GetDataQualityMetricsAsync(GetDataQualityMetricsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "GetDataQualityMetrics";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetDataQualityMetricsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get feedback for an anomaly group.
		/// GetFeedback GetFeedback
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetFeedbackResponse> GetFeedbackAsync(string MaxResults, string NextToken, GetFeedbackPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "GetFeedback?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetFeedbackResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a selection of sample records from an Amazon S3 datasource.
		/// GetSampleData GetSampleData
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetSampleDataResponse> GetSampleDataAsync(GetSampleDataPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "GetSampleData";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetSampleDataResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists the alerts attached to a detector.</p> <p>Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.</p>
		/// ListAlerts ListAlerts
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListAlertsResponse> ListAlertsAsync(string MaxResults, string NextToken, ListAlertsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ListAlerts?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListAlertsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists the detectors in the current AWS Region.</p> <p>Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.</p>
		/// ListAnomalyDetectors ListAnomalyDetectors
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListAnomalyDetectorsResponse> ListAnomalyDetectorsAsync(string MaxResults, string NextToken, ListAnomalyDetectorsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ListAnomalyDetectors?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListAnomalyDetectorsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of measures that are potential causes or effects of an anomaly group.
		/// ListAnomalyGroupRelatedMetrics ListAnomalyGroupRelatedMetrics
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListAnomalyGroupRelatedMetricsResponse> ListAnomalyGroupRelatedMetricsAsync(string MaxResults, string NextToken, ListAnomalyGroupRelatedMetricsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ListAnomalyGroupRelatedMetrics?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListAnomalyGroupRelatedMetricsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of anomaly groups.
		/// ListAnomalyGroupSummaries ListAnomalyGroupSummaries
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListAnomalyGroupSummariesResponse> ListAnomalyGroupSummariesAsync(string MaxResults, string NextToken, ListAnomalyGroupSummariesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ListAnomalyGroupSummaries?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListAnomalyGroupSummariesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a list of anomalous metrics for a measure in an anomaly group.
		/// ListAnomalyGroupTimeSeries ListAnomalyGroupTimeSeries
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListAnomalyGroupTimeSeriesResponse> ListAnomalyGroupTimeSeriesAsync(string MaxResults, string NextToken, ListAnomalyGroupTimeSeriesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ListAnomalyGroupTimeSeries?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListAnomalyGroupTimeSeriesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists the datasets in the current AWS Region.</p> <p>Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.</p>
		/// ListMetricSets ListMetricSets
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListMetricSetsResponse> ListMetricSetsAsync(string MaxResults, string NextToken, ListMetricSetsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ListMetricSets?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListMetricSetsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> for a detector, dataset, or alert.
		/// ListTagsForResource tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The resource's Amazon Resource Name (ARN).
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string resourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> to a detector, dataset, or alert.
		/// TagResource tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The resource's Amazon Resource Name (ARN).
		/// Max length: 256
		// </param>
		public async Task TagResourceAsync(string resourceArn, TagResourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add feedback for an anomalous metric.
		/// PutFeedback PutFeedback
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutFeedbackResponse> PutFeedbackAsync(PutFeedbackPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "PutFeedback";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutFeedbackResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> from a detector, dataset, or alert.
		/// UntagResource tags/{resourceArn}#tagKeys
		/// </summary>
		/// <param name="resourceArn">The resource's Amazon Resource Name (ARN).
		/// Max length: 256
		// </param>
		/// <param name="tagKeys">Keys to remove from the resource's tags.
		/// Minimum items: 1
		/// Maximum items: 50
		// </param>
		public async Task UntagResourceAsync(string resourceArn, string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn))+"#tagKeys&"+string.Join("&", tagKeys.Select(z => $"tagKeys={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Make changes to an existing alert.
		/// UpdateAlert UpdateAlert
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateAlertResponse> UpdateAlertAsync(UpdateAlertPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "UpdateAlert";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateAlertResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a detector. After activation, you can only change a detector's ingestion delay and description.
		/// UpdateAnomalyDetector UpdateAnomalyDetector
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateAnomalyDetectorResponse> UpdateAnomalyDetectorAsync(UpdateAnomalyDetectorPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "UpdateAnomalyDetector";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateAnomalyDetectorResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a dataset.
		/// UpdateMetricSet UpdateMetricSet
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateMetricSetResponse> UpdateMetricSetAsync(UpdateMetricSetPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "UpdateMetricSet";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateMetricSetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class ActivateAnomalyDetectorPostBody
	{
		
		/// <summary>
		/// The ARN of the anomaly detector.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
	}
	
	public class BackTestAnomalyDetectorPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the anomaly detector.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
	}
	
	public class CreateAlertPostBody
	{
		
		/// <summary>
		/// The name of the alert.
		/// Required
		/// Min length: 1
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(63)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-zA-Z0-9][a-zA-Z0-9\-_]*")]
		public string AlertName { get; set; }
		
		/// <summary>
		/// An integer from 0 to 100 specifying the alert sensitivity threshold.
		/// Minimum: 0
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 100)]
		public System.Nullable<System.Int32> AlertSensitivityThreshold { get; set; }
		
		/// <summary>
		/// A description of the alert.
		/// Max length: 256
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string AlertDescription { get; set; }
		
		/// <summary>
		/// The ARN of the detector to which the alert is attached.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// A configuration that specifies the action to perform when anomalies are detected.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateAlertPostBodyAction Action { get; set; }
		
		/// <summary>
		/// A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> to apply to the alert.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// The configuration of the alert filters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateAlertPostBodyAlertFilters AlertFilters { get; set; }
	}
	
	public class CreateAlertPostBodyAction
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SNSConfiguration SNSConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LambdaConfiguration LambdaConfiguration { get; set; }
	}
	
	public class CreateAlertPostBodyAlertFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] MetricList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionFilter[] DimensionFilterList { get; set; }
	}
	
	public class CreateAnomalyDetectorPostBody
	{
		
		/// <summary>
		/// The name of the detector.
		/// Required
		/// Min length: 1
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(63)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-zA-Z0-9][a-zA-Z0-9\-_]*")]
		public string AnomalyDetectorName { get; set; }
		
		/// <summary>
		/// A description of the detector.
		/// Min length: 1
		/// Max length: 256
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string AnomalyDetectorDescription { get; set; }
		
		/// <summary>
		/// Contains information about a detector's configuration.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateAnomalyDetectorPostBodyAnomalyDetectorConfig AnomalyDetectorConfig { get; set; }
		
		/// <summary>
		/// The ARN of the KMS key to use to encrypt your data.
		/// Min length: 20
		/// Max length: 2048
		/// Pattern: arn:aws.*:kms:.*:[0-9]{12}:key/[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(20)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:aws.*:kms:.*:[0-9]{12}:key/[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}")]
		public string KmsKeyArn { get; set; }
		
		/// <summary>
		/// A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> to apply to the anomaly detector.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateAnomalyDetectorPostBodyAnomalyDetectorConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Frequency AnomalyDetectorFrequency { get; set; }
	}
	
	public class CreateMetricSetPostBody
	{
		
		/// <summary>
		/// The ARN of the anomaly detector that will use the dataset.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// The name of the dataset.
		/// Required
		/// Min length: 1
		/// Max length: 63
		/// Pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(63)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-zA-Z0-9][a-zA-Z0-9\-_]*")]
		public string MetricSetName { get; set; }
		
		/// <summary>
		/// A description of the dataset you are creating.
		/// Min length: 1
		/// Max length: 256
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string MetricSetDescription { get; set; }
		
		/// <summary>
		/// A list of metrics that the dataset will contain.
		/// Required
		/// Minimum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public Metric[] MetricList { get; set; }
		
		/// <summary>
		/// After an interval ends, the amount of seconds that the detector waits before importing data. Offset is only supported for S3, Redshift, Athena and datasources.
		/// Minimum: 0
		/// Maximum: 432000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 432000)]
		public System.Nullable<System.Int32> Offset { get; set; }
		
		/// <summary>
		/// Contains information about the column used to track time in a source data file.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateMetricSetPostBodyTimestampColumn TimestampColumn { get; set; }
		
		/// <summary>
		/// A list of the fields you want to treat as dimensions.
		/// Minimum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string[] DimensionList { get; set; }
		
		/// <summary>
		/// The frequency with which the source data will be analyzed for anomalies.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Frequency MetricSetFrequency { get; set; }
		
		/// <summary>
		/// Contains information about source data used to generate metrics.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateMetricSetPostBodyMetricSource MetricSource { get; set; }
		
		/// <summary>
		/// The time zone in which your source data was recorded.
		/// Max length: 60
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(60)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string Timezone { get; set; }
		
		/// <summary>
		/// A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> to apply to the dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// A list of filters that specify which data is kept for anomaly detection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public MetricSetDimensionFilter[] DimensionFilterList { get; set; }
	}
	
	public class CreateMetricSetPostBodyTimestampColumn
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ColumnName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ColumnFormat { get; set; }
	}
	
	public class CreateMetricSetPostBodyMetricSource
	{
		
		/// <summary>
		/// Contains information about the configuration of the S3 bucket that contains source files.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3SourceConfig S3SourceConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AppFlowConfig AppFlowConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchConfig CloudWatchConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RDSSourceConfig RDSSourceConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RedshiftSourceConfig RedshiftSourceConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AthenaSourceConfig AthenaSourceConfig { get; set; }
	}
	
	public class DeactivateAnomalyDetectorPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the anomaly detector.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
	}
	
	public class DeleteAlertPostBody
	{
		
		/// <summary>
		/// The ARN of the alert to delete.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AlertArn { get; set; }
	}
	
	public class DeleteAnomalyDetectorPostBody
	{
		
		/// <summary>
		/// The ARN of the detector to delete.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
	}
	
	public class DescribeAlertPostBody
	{
		
		/// <summary>
		/// The ARN of the alert to describe.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AlertArn { get; set; }
	}
	
	public class DescribeAnomalyDetectionExecutionsPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the anomaly detector.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// The timestamp of the anomaly detection job.
		/// Max length: 60
		/// Pattern: ^([12]\d{3})-(1[0-2]|0[1-9])-(0[1-9]|[12]\d|3[01])T([01]\d|2[0-3]):([0-5]\d):([0-5]\d)(Z|(\+|\-)(0\d|1[0-2]):([0-5]\d)(\[[[:alnum:]\/\_]+\])?)$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(60)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^([12]\d{3})-(1[0-2]|0[1-9])-(0[1-9]|[12]\d|3[01])T([01]\d|2[0-3]):([0-5]\d):([0-5]\d)(Z|(\+|\-)(0\d|1[0-2]):([0-5]\d)(\[[[:alnum:]\/\_]+\])?)$")]
		public string Timestamp { get; set; }
		
		/// <summary>
		/// The number of items to return in the response.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Specify the pagination token that's returned by a previous request to retrieve the next page of results.
		/// Min length: 1
		/// Max length: 3000
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(3000)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string NextToken { get; set; }
	}
	
	public class DescribeAnomalyDetectorPostBody
	{
		
		/// <summary>
		/// The ARN of the detector to describe.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
	}
	
	public class DescribeMetricSetPostBody
	{
		
		/// <summary>
		/// The ARN of the dataset.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string MetricSetArn { get; set; }
	}
	
	public class DetectMetricSetConfigPostBody
	{
		
		/// <summary>
		/// An anomaly detector ARN.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// An auto detection metric source.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DetectMetricSetConfigPostBodyAutoDetectionMetricSource AutoDetectionMetricSource { get; set; }
	}
	
	public class DetectMetricSetConfigPostBodyAutoDetectionMetricSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoDetectionS3SourceConfig S3SourceConfig { get; set; }
	}
	
	public class GetAnomalyGroupPostBody
	{
		
		/// <summary>
		/// The ID of the anomaly group.
		/// Required
		/// Max length: 63
		/// Pattern: [a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(63)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}")]
		public string AnomalyGroupId { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the anomaly detector.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
	}
	
	public class GetDataQualityMetricsPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the anomaly detector that you want to investigate.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of a specific data quality metric set.
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string MetricSetArn { get; set; }
	}
	
	public class GetFeedbackPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the anomaly detector.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// An anomalous metric in an anomaly group.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GetFeedbackPostBodyAnomalyGroupTimeSeriesFeedback AnomalyGroupTimeSeriesFeedback { get; set; }
		
		/// <summary>
		/// The maximum number of results to return.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Specify the pagination token that's returned by a previous request to retrieve the next page of results.
		/// Min length: 1
		/// Max length: 3000
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(3000)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string NextToken { get; set; }
	}
	
	public class GetFeedbackPostBodyAnomalyGroupTimeSeriesFeedback
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeSeriesId { get; set; }
	}
	
	public class GetSampleDataPostBody
	{
		
		/// <summary>
		/// Contains information about the source configuration in Amazon S3.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetSampleDataPostBodyS3SourceConfig S3SourceConfig { get; set; }
	}
	
	public class GetSampleDataPostBodyS3SourceConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TemplatedPathList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] HistoricalDataPathList { get; set; }
		
		/// <summary>
		/// Contains information about a source file's formatting.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FileFormatDescriptor FileFormatDescriptor { get; set; }
	}
	
	public class ListAlertsPostBody
	{
		
		/// <summary>
		/// The ARN of the alert's detector.
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// If the result of the previous request is truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.
		/// Min length: 1
		/// Max length: 3000
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(3000)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results that will be displayed by the request.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	public class ListAnomalyDetectorsPostBody
	{
		
		/// <summary>
		/// The maximum number of results to return.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.
		/// Min length: 1
		/// Max length: 3000
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(3000)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string NextToken { get; set; }
	}
	
	public class ListAnomalyGroupRelatedMetricsPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the anomaly detector.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// The ID of the anomaly group.
		/// Required
		/// Max length: 63
		/// Pattern: [a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(63)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}")]
		public string AnomalyGroupId { get; set; }
		
		/// <summary>
		/// Filter for potential causes (<code>CAUSE_OF_INPUT_ANOMALY_GROUP</code>) or downstream effects (<code>EFFECT_OF_INPUT_ANOMALY_GROUP</code>) of the anomaly group.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RelationshipType RelationshipTypeFilter { get; set; }
		
		/// <summary>
		/// The maximum number of results to return.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Specify the pagination token that's returned by a previous request to retrieve the next page of results.
		/// Min length: 1
		/// Max length: 3000
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(3000)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string NextToken { get; set; }
	}
	
	public class ListAnomalyGroupSummariesPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the anomaly detector.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// The minimum severity score for inclusion in the output.
		/// Required
		/// Minimum: 0
		/// Maximum: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 100)]
		public int SensitivityThreshold { get; set; }
		
		/// <summary>
		/// The maximum number of results to return.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Specify the pagination token that's returned by a previous request to retrieve the next page of results.
		/// Min length: 1
		/// Max length: 3000
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(3000)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string NextToken { get; set; }
	}
	
	public class ListAnomalyGroupTimeSeriesPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the anomaly detector.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// The ID of the anomaly group.
		/// Required
		/// Max length: 63
		/// Pattern: [a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(63)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}")]
		public string AnomalyGroupId { get; set; }
		
		/// <summary>
		/// The name of the measure field.
		/// Required
		/// Max length: 256
		/// Pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-zA-Z0-9][a-zA-Z0-9\-_]*")]
		public string MetricName { get; set; }
		
		/// <summary>
		/// The maximum number of results to return.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Specify the pagination token that's returned by a previous request to retrieve the next page of results.
		/// Min length: 1
		/// Max length: 3000
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(3000)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string NextToken { get; set; }
	}
	
	public class ListMetricSetsPostBody
	{
		
		/// <summary>
		/// The ARN of the anomaly detector containing the metrics sets to list.
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// The maximum number of results to return.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.
		/// Min length: 1
		/// Max length: 3000
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(3000)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string NextToken { get; set; }
	}
	
	public class TagResourcePostBody
	{
		
		/// <summary>
		/// Tags to apply to the resource. Tag keys and values can contain letters, numbers, spaces, and the following symbols: <code>_.:/=+@-</code> 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class PutFeedbackPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the anomaly detector.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// Feedback for an anomalous metric.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PutFeedbackPostBodyAnomalyGroupTimeSeriesFeedback AnomalyGroupTimeSeriesFeedback { get; set; }
	}
	
	public class PutFeedbackPostBodyAnomalyGroupTimeSeriesFeedback
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeSeriesId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsAnomaly { get; set; }
	}
	
	public class UpdateAlertPostBody
	{
		
		/// <summary>
		/// The ARN of the alert to update.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AlertArn { get; set; }
		
		/// <summary>
		/// A description of the alert.
		/// Max length: 256
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string AlertDescription { get; set; }
		
		/// <summary>
		/// An integer from 0 to 100 specifying the alert sensitivity threshold.
		/// Minimum: 0
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 100)]
		public System.Nullable<System.Int32> AlertSensitivityThreshold { get; set; }
		
		/// <summary>
		/// A configuration that specifies the action to perform when anomalies are detected.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateAlertPostBodyAction Action { get; set; }
		
		/// <summary>
		/// The configuration of the alert filters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateAlertPostBodyAlertFilters AlertFilters { get; set; }
	}
	
	public class UpdateAlertPostBodyAction
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SNSConfiguration SNSConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LambdaConfiguration LambdaConfiguration { get; set; }
	}
	
	public class UpdateAlertPostBodyAlertFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] MetricList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionFilter[] DimensionFilterList { get; set; }
	}
	
	public class UpdateAnomalyDetectorPostBody
	{
		
		/// <summary>
		/// The ARN of the detector to update.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string AnomalyDetectorArn { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of an AWS KMS encryption key.
		/// Min length: 20
		/// Max length: 2048
		/// Pattern: arn:aws.*:kms:.*:[0-9]{12}:key/[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(20)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:aws.*:kms:.*:[0-9]{12}:key/[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}")]
		public string KmsKeyArn { get; set; }
		
		/// <summary>
		/// The updated detector description.
		/// Min length: 1
		/// Max length: 256
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string AnomalyDetectorDescription { get; set; }
		
		/// <summary>
		/// Contains information about a detector's configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateAnomalyDetectorPostBodyAnomalyDetectorConfig AnomalyDetectorConfig { get; set; }
	}
	
	public class UpdateAnomalyDetectorPostBodyAnomalyDetectorConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Frequency AnomalyDetectorFrequency { get; set; }
	}
	
	public class UpdateMetricSetPostBody
	{
		
		/// <summary>
		/// The ARN of the dataset to update.
		/// Required
		/// Max length: 256
		/// Pattern: arn:([a-z\d-]+):.*:.*:.*:.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:([a-z\d-]+):.*:.*:.*:.+")]
		public string MetricSetArn { get; set; }
		
		/// <summary>
		/// The dataset's description.
		/// Min length: 1
		/// Max length: 256
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string MetricSetDescription { get; set; }
		
		/// <summary>
		/// The metric list.
		/// Minimum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public Metric[] MetricList { get; set; }
		
		/// <summary>
		/// After an interval ends, the amount of seconds that the detector waits before importing data. Offset is only supported for S3, Redshift, Athena and datasources.
		/// Minimum: 0
		/// Maximum: 432000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, 432000)]
		public System.Nullable<System.Int32> Offset { get; set; }
		
		/// <summary>
		/// Contains information about the column used to track time in a source data file.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateMetricSetPostBodyTimestampColumn TimestampColumn { get; set; }
		
		/// <summary>
		/// The dimension list.
		/// Minimum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string[] DimensionList { get; set; }
		
		/// <summary>
		/// The dataset's interval.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Frequency MetricSetFrequency { get; set; }
		
		/// <summary>
		/// Contains information about source data used to generate metrics.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateMetricSetPostBodyMetricSource MetricSource { get; set; }
		
		/// <summary>
		/// Describes a list of filters for choosing specific dimensions and specific values. Each filter consists of the dimension and one of its values that you want to include. When multiple dimensions or values are specified, the dimensions are joined with an AND operation and the values are joined with an OR operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public MetricSetDimensionFilter[] DimensionFilterList { get; set; }
	}
	
	public class UpdateMetricSetPostBodyTimestampColumn
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ColumnName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ColumnFormat { get; set; }
	}
	
	public class UpdateMetricSetPostBodyMetricSource
	{
		
		/// <summary>
		/// Contains information about the configuration of the S3 bucket that contains source files.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3SourceConfig S3SourceConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AppFlowConfig AppFlowConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchConfig CloudWatchConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RDSSourceConfig RDSSourceConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RedshiftSourceConfig RedshiftSourceConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AthenaSourceConfig AthenaSourceConfig { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

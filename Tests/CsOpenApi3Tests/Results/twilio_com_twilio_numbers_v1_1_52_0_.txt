//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Bulk_eligibility_enum_eligibility_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ineligible = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		eligible = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Bulk_eligibility_enum_eligibility_sub_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="country-ineligible")]
		countryMinusineligible = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="number-format-ineligible")]
		numberMinusformatMinusineligible = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="number-type-ineligible")]
		numberMinustypeMinusineligible = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="carrier-ineligible")]
		carrierMinusineligible = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="already-in-twilio")]
		alreadyMinusinMinustwilio = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="internal-processing-error")]
		internalMinusprocessingMinuserror = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="invalid-phone-number")]
		invalidMinusphoneMinusnumber = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="invalid-hosting-account-sid")]
		invalidMinushostingMinusaccountMinussid = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		eligible = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="eligible-by-manual-process")]
		eligibleMinusbyMinusmanualMinusprocess = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Eligibility_enum_eligibility_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ineligible = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		eligible = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Eligibility_enum_eligibility_sub_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="country-ineligible")]
		countryMinusineligible = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="number-format-ineligible")]
		numberMinusformatMinusineligible = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="number-type-ineligible")]
		numberMinustypeMinusineligible = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="carrier-ineligible")]
		carrierMinusineligible = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="already-in-twilio")]
		alreadyMinusinMinustwilio = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="internal-processing-error")]
		internalMinusprocessingMinuserror = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="invalid-phone-number")]
		invalidMinusphoneMinusnumber = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="invalid-hosting-account-sid")]
		invalidMinushostingMinusaccountMinussid = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		eligible = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Numbersv1bulk_eligibility
	{
		
		[System.Runtime.Serialization.DataMember(Name="date_completed")]
		public System.Nullable<System.DateTimeOffset> Date_completed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// This is the string that you assigned as a friendly name for describing the eligibility check request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friendly_name")]
		public string Friendly_name { get; set; }
		
		/// <summary>
		/// The SID of the bulk eligibility check that you want to know about.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^EC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^EC[0-9a-fA-F]{32}$")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// The result set that contains the eligibility check response for each requested number, each result has at least the following attributes:  phone_number: The requested phone number ,hosting_account_sid: The account sid where the phone number will be hosted, country: Phone number’s country, eligibility_status: Indicates the eligibility status of the PN (Eligible/Ineligible), eligibility_sub_status: Indicates the sub status of the eligibility , ineligibility_reason: Reason for number's ineligibility (if applicable), next_step: Suggested next step in the hosting process based on the eligibility status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="results")]
		public string[] Results { get; set; }
		
		/// <summary>
		/// This is the status of the bulk eligibility check request. (Example: COMPLETE, IN_PROGRESS)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// This is the url of the request that you're trying to reach out to locate the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Numbersv1eligibility
	{
		
		/// <summary>
		/// The result set that contains the eligibility check response for the requested number, each result has at least the following attributes:  phone_number: The requested phone number ,hosting_account_sid: The account sid where the phone number will be hosted, date_last_checked: Datetime (ISO 8601) when the PN was last checked for eligibility, country: Phone number’s country, eligibility_status: Indicates the eligibility status of the PN (Eligible/Ineligible), eligibility_sub_status: Indicates the sub status of the eligibility , ineligibility_reason: Reason for number's ineligibility (if applicable), next_step: Suggested next step in the hosting process based on the eligibility status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="results")]
		public string[] Results { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Numbersv1porting_bulk_portability
	{
		
		/// <summary>
		/// The date that the Portability check was created, given in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datetime_created")]
		public System.Nullable<System.DateTimeOffset> Datetime_created { get; set; }
		
		/// <summary>
		/// Contains a list with all the information of the requested phone numbers. Each phone number contains the following properties: `phone_number`: The phone number which portability is to be checked. `portable`: Boolean flag specifying if phone number is portable or not. `not_portable_reason`: Reason why the phone number cannot be ported into Twilio, `null` otherwise. `not_portable_reason_code`: The Portability Reason Code for the phone number if it cannot be ported in Twilio, `null` otherwise. `pin_and_account_number_required`: Boolean flag specifying if PIN and account number is required for the phone number. `number_type`: The type of the requested phone number. `country` Country the phone number belongs to. `messaging_carrier` Current messaging carrier of the phone number. `voice_carrier` Current voice carrier of the phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_numbers")]
		public string[] Phone_numbers { get; set; }
		
		/// <summary>
		/// A 34 character string that uniquely identifies this Portability check.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^KZ[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^KZ[0-9a-fA-F]{32}$")]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<Numbersv1porting_bulk_portabilityStatus> Status { get; set; }
		
		/// <summary>
		/// This is the url of the request that you're trying to reach out to locate the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Numbersv1porting_bulk_portabilityStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="in-progress")]
		inMinusprogress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		expired = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Numbersv1porting_port_in
	{
		
		/// <summary>
		/// The SID of the Port In request. This is a unique identifier of the port in request.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^KW[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port_in_request_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^KW[0-9a-fA-F]{32}$")]
		public string Port_in_request_sid { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Numbersv1porting_port_in_fetch
	{
		
		/// <summary>
		/// The Account SID that the numbers will be added to after they are ported into Twilio.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// The list of documents SID referencing a utility bills
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="documents")]
		public string[] Documents { get; set; }
		
		/// <summary>
		/// The information for the losing carrier. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="losing_carrier_information")]
		public object Losing_carrier_information { get; set; }
		
		/// <summary>
		/// List of emails for getting notifications about the LOA signing process. Allowed Max 10 emails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notification_emails")]
		public string[] Notification_emails { get; set; }
		
		/// <summary>
		/// The list of phone numbers to Port in. Phone numbers are in E.164 format (e.g. +16175551212).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_numbers")]
		public string[] Phone_numbers { get; set; }
		
		/// <summary>
		/// The SID of the Port In request. This is a unique identifier of the port in request.
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^KW[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port_in_request_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^KW[0-9a-fA-F]{32}$")]
		public string Port_in_request_sid { get; set; }
		
		/// <summary>
		/// Minimum number of days in the future (at least 2 days) needs to be established with the Ops team for validation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target_port_in_date")]
		public System.Nullable<System.DateOnly> Target_port_in_date { get; set; }
		
		/// <summary>
		/// Maximum hour in the future needs to be established with the Ops team for validation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target_port_in_time_range_end")]
		public string Target_port_in_time_range_end { get; set; }
		
		/// <summary>
		/// Minimum hour in the future needs to be established with the Ops team for validation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target_port_in_time_range_start")]
		public string Target_port_in_time_range_start { get; set; }
		
		/// <summary>
		/// The URL of this Port In request
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Numbersv1porting_portability
	{
		
		/// <summary>
		/// The target account sid to which the number will be ported
		/// Min length: 34
		/// Max length: 34
		/// Pattern: ^AC[0-9a-fA-F]{32}$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_sid")]
		[System.ComponentModel.DataAnnotations.MinLength(34)]
		[System.ComponentModel.DataAnnotations.MaxLength(34)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^AC[0-9a-fA-F]{32}$")]
		public string Account_sid { get; set; }
		
		/// <summary>
		/// Country the phone number belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// Current messaging carrier of the phone number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="messaging_carrier")]
		public string Messaging_carrier { get; set; }
		
		/// <summary>
		/// Reason why the phone number cannot be ported into Twilio, `null` otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="not_portable_reason")]
		public string Not_portable_reason { get; set; }
		
		/// <summary>
		/// The Portability Reason Code for the phone number if it cannot be ported into Twilio, `null` otherwise. One of `22131`, `22132`, `22130`, `22133`, `22102` or `22135`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="not_portable_reason_code")]
		public System.Nullable<System.Int32> Not_portable_reason_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="number_type")]
		public System.Nullable<Numbersv1porting_portabilityNumber_type> Number_type { get; set; }
		
		/// <summary>
		/// The phone number which portability is to be checked. Phone numbers are in E.164 format (e.g. +16175551212).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		/// <summary>
		/// Boolean flag specifying if PIN and account number is required for the phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pin_and_account_number_required")]
		public System.Nullable<System.Boolean> Pin_and_account_number_required { get; set; }
		
		/// <summary>
		/// Boolean flag specifying if phone number is portable or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="portable")]
		public System.Nullable<System.Boolean> Portable { get; set; }
		
		/// <summary>
		/// This is the url of the request that you're trying to reach out to locate the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// Current voice carrier of the phone number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="voice_carrier")]
		public string Voice_carrier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Numbersv1porting_portabilityNumber_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOCAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOBILE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TOLL-FREE")]
		TOLLMinusFREE = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Porting_bulk_portability_enum_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="in-progress")]
		inMinusprogress = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		expired = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Porting_portability_enum_number_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOCAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOBILE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TOLL-FREE")]
		TOLLMinusFREE = 3,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Fetch an eligibility bulk check that you requested to host in Twilio.
		/// FetchBulkEligibility v1/HostedNumber/Eligibility/Bulk/{RequestId}
		/// </summary>
		/// <param name="RequestId">The SID of the bulk eligibility check that you want to know about.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Numbersv1bulk_eligibility> FetchBulkEligibilityAsync(string RequestId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/HostedNumber/Eligibility/Bulk/"+ (RequestId==null? "" : System.Uri.EscapeDataString(RequestId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Numbersv1bulk_eligibility>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Fetch a port in request by SID
		/// FetchPortingPortInFetch v1/Porting/PortIn/{PortInRequestSid}
		/// </summary>
		/// <param name="PortInRequestSid">The SID of the Port In request. This is a unique identifier of the port in request.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Numbersv1porting_port_in_fetch> FetchPortingPortInFetchAsync(string PortInRequestSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Porting/PortIn/"+ (PortInRequestSid==null? "" : System.Uri.EscapeDataString(PortInRequestSid));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Numbersv1porting_port_in_fetch>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Allows to check if a single phone number can be ported to Twilio or not.
		/// FetchPortingPortability v1/Porting/Portability/PhoneNumber/{PhoneNumber}
		/// </summary>
		/// <param name="PhoneNumber">The phone number which portability is to be checked. Phone numbers are in E.164 format (e.g. +16175551212).</param>
		/// <param name="TargetAccountSid">The SID of the account where the phone number(s) will be ported.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Numbersv1porting_portability> FetchPortingPortabilityAsync(string PhoneNumber, string TargetAccountSid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Porting/Portability/PhoneNumber/"+ (PhoneNumber==null? "" : System.Uri.EscapeDataString(PhoneNumber))+"&TargetAccountSid=" + (TargetAccountSid==null? "" : System.Uri.EscapeDataString(TargetAccountSid));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Numbersv1porting_portability>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Fetch a previous portability check. This should return the current status of the validation and the result for all the numbers provided, given that they have been validated (as this process is performed asynchronously).
		/// FetchPortingBulkPortability v1/Porting/Portability/{Sid}
		/// </summary>
		/// <param name="Sid">A 34 character string that uniquely identifies the Portability check.
		/// Min length: 34
		/// Max length: 34
		// </param>
		/// <returns>OK</returns>
		public async Task<Numbersv1porting_bulk_portability> FetchPortingBulkPortabilityAsync(string Sid, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/Porting/Portability/"+ (Sid==null? "" : System.Uri.EscapeDataString(Sid));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<Numbersv1porting_bulk_portability>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssignInstanceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] LayerIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssignVolumeRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VolumeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateElasticIpRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ElasticIp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AttachElasticLoadBalancerRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ElasticLoadBalancerName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LayerId { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>CloneStack</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloneStackResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloneStackRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceStackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ServiceRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultInstanceProfileArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultOs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HostnameTheme { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubnetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomJson { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackConfigurationManager ConfigurationManager { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChefConfiguration ChefConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseCustomCookbooks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseOpsworksSecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Source CustomCookbooksSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSshKeyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ClonePermissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] CloneAppIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RootDeviceType DefaultRootDeviceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AgentVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackAttributes
	{
	}
	
	/// <summary>
	/// Describes the configuration manager.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackConfigurationManager
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Describes the Chef configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChefConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ManageBerkshelf { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BerkshelfVersion { get; set; }
	}
	
	/// <summary>
	/// Contains the information required to retrieve an app or cookbook from a repository. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html">Creating Apps</a> or <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workingcookbook.html">Custom Recipes and Cookbooks</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Source
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SourceType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Username { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SshKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Revision { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		git = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		svn = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		archive = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		s3 = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RootDeviceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ebs = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="instance-store")]
		instanceMinusstore = 1,
	}
	
	/// <summary>
	/// Contains the response to a <code>CreateApp</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAppResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AppId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAppRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Shortname { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSource[] DataSources { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AppType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Source AppSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Domains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableSsl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SslConfiguration SslConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AppAttributes Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentVariable[] Environment { get; set; }
	}
	
	/// <summary>
	/// Describes an app's data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="aws-flow-ruby")]
		awsMinusflowMinusruby = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		java = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rails = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		php = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		nodejs = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="static")]
		_static = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 6,
	}
	
	/// <summary>
	/// Describes an app's SSL configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SslConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Certificate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PrivateKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Chain { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppAttributes
	{
	}
	
	/// <summary>
	/// Represents an app's environment variable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EnvironmentVariable
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Secure { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>CreateDeployment</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDeploymentResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDeploymentRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AppId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InstanceIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] LayerIds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DeploymentCommand Command { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomJson { get; set; }
	}
	
	/// <summary>
	/// Used to specify a stack or deployment command.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeploymentCommand
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DeploymentCommandName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeploymentCommandArgs Args { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeploymentCommandName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		install_dependencies = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		update_dependencies = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		update_custom_cookbooks = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		execute_recipes = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		configure = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		setup = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deploy = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rollback = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		start = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		stop = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		restart = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		undeploy = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeploymentCommandArgs
	{
	}
	
	/// <summary>
	/// Contains the response to a <code>CreateInstance</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateInstanceResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateInstanceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] LayerIds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingType AutoScalingType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Hostname { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Os { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AmiId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SshKeyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VirtualizationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SubnetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Architecture Architecture { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RootDeviceType RootDeviceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BlockDeviceMapping[] BlockDeviceMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InstallUpdatesOnBoot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EbsOptimized { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AgentVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Tenancy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AutoScalingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		load = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		timer = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Architecture
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		x86_64 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		i386 = 1,
	}
	
	/// <summary>
	/// Describes a block device mapping. This data type maps directly to the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_BlockDeviceMapping.html">BlockDeviceMapping</a> data type. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BlockDeviceMapping
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DeviceName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NoDevice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VirtualName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EbsBlockDevice Ebs { get; set; }
	}
	
	/// <summary>
	/// Describes an Amazon EBS volume. This data type maps directly to the Amazon EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EbsBlockDevice.html">EbsBlockDevice</a> data type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EbsBlockDevice
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VolumeSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VolumeType VolumeType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeleteOnTermination { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VolumeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gp2 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		io1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		standard = 2,
	}
	
	/// <summary>
	/// Contains the response to a <code>CreateLayer</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLayerResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LayerId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLayerRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LayerType Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Shortname { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LayerAttributes Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLogsConfiguration CloudWatchLogsConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomInstanceProfileArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomJson { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] CustomSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Packages { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VolumeConfiguration[] VolumeConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableAutoHealing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoAssignElasticIps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoAssignPublicIps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Recipes CustomRecipes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InstallUpdatesOnBoot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseEbsOptimizedInstances { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LifecycleEventConfiguration LifecycleEventConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LayerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="aws-flow-ruby")]
		awsMinusflowMinusruby = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ecs-cluster")]
		ecsMinuscluster = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="java-app")]
		javaMinusapp = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		lb = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		web = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="php-app")]
		phpMinusapp = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="rails-app")]
		railsMinusapp = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nodejs-app")]
		nodejsMinusapp = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		memcached = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="db-master")]
		dbMinusmaster = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="monitoring-master")]
		monitoringMinusmaster = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		custom = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LayerAttributes
	{
	}
	
	/// <summary>
	/// Describes the Amazon CloudWatch logs configuration for a layer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudWatchLogsConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLogsLogStream[] LogStreams { get; set; }
	}
	
	/// <summary>
	/// Describes the Amazon CloudWatch logs configuration for a layer. For detailed information about members of this data type, see the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AgentReference.html">CloudWatch Logs Agent Reference</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudWatchLogsLogStream
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LogGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatetimeFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLogsTimeZone TimeZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string File { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FileFingerprintLines { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MultiLineStartPattern { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLogsInitialPosition InitialPosition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLogsEncoding Encoding { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BufferDuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BatchCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BatchSize { get; set; }
	}
	
	/// <summary>
	/// The preferred time zone for logs streamed to CloudWatch Logs. Valid values are <code>LOCAL</code> and <code>UTC</code>, for Coordinated Universal Time.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CloudWatchLogsTimeZone
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOCAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UTC = 1,
	}
	
	/// <summary>
	/// Specifies where to start to read data (start_of_file or end_of_file). The default is start_of_file. It's only used if there is no state persisted for that log stream.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CloudWatchLogsInitialPosition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		start_of_file = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		end_of_file = 1,
	}
	
	/// <summary>
	/// Specifies the encoding of the log file so that the file can be read correctly. The default is <code>utf_8</code>. Encodings supported by Python <code>codecs.decode()</code> can be used here.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CloudWatchLogsEncoding
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ascii = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		big5 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		big5hkscs = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp037 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp424 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp437 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp500 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp720 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp737 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp775 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp850 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp852 = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp855 = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp856 = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp857 = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp858 = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp860 = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp861 = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp862 = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp863 = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp864 = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp865 = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp866 = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp869 = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp874 = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp875 = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp932 = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp949 = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp950 = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp1006 = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp1026 = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp1140 = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp1250 = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp1251 = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp1252 = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp1253 = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp1254 = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp1255 = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp1256 = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp1257 = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cp1258 = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		euc_jp = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		euc_jis_2004 = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		euc_jisx0213 = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		euc_kr = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gb2312 = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gbk = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gb18030 = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hz = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso2022_jp = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso2022_jp_1 = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso2022_jp_2 = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso2022_jp_2004 = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso2022_jp_3 = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso2022_jp_ext = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso2022_kr = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		latin_1 = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso8859_2 = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso8859_3 = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso8859_4 = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso8859_5 = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso8859_6 = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso8859_7 = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso8859_8 = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso8859_9 = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso8859_10 = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso8859_13 = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso8859_14 = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso8859_15 = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		iso8859_16 = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		johab = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		koi8_r = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		koi8_u = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mac_cyrillic = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mac_greek = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mac_iceland = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mac_latin2 = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mac_roman = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mac_turkish = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ptcp154 = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		shift_jis = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		shift_jis_2004 = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		shift_jisx0213 = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		utf_32 = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		utf_32_be = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		utf_32_le = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		utf_16 = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		utf_16_be = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		utf_16_le = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		utf_7 = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		utf_8 = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		utf_8_sig = 91,
	}
	
	/// <summary>
	/// Describes an Amazon EBS volume configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VolumeConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MountPoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RaidLevel { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int NumberOfDisks { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Size { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VolumeType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Encrypted { get; set; }
	}
	
	/// <summary>
	/// <p>AWS OpsWorks Stacks supports five lifecycle events: <b>setup</b>, <b>configuration</b>, <b>deploy</b>, <b>undeploy</b>, and <b>shutdown</b>. For each layer, AWS OpsWorks Stacks runs a set of standard recipes for each event. In addition, you can provide custom recipes for any or all layers and events. AWS OpsWorks Stacks runs custom event recipes after the standard recipes. <code>LayerCustomRecipes</code> specifies the custom recipes for a particular layer to be run in response to each of the five events. </p> <p>To specify a recipe, use the cookbook's directory name in the repository followed by two colons and the recipe name, which is the recipe's file name without the .rb extension. For example: phpapp2::dbsetup specifies the dbsetup.rb recipe in the repository's phpapp2 folder.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Recipes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Setup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Configure { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Deploy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Undeploy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Shutdown { get; set; }
	}
	
	/// <summary>
	/// Specifies the lifecycle event configuration
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LifecycleEventConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ShutdownEventConfiguration Shutdown { get; set; }
	}
	
	/// <summary>
	/// The Shutdown event configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ShutdownEventConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ExecutionTimeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DelayUntilElbConnectionsDrained { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>CreateStack</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateStackResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateStackRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ServiceRoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DefaultInstanceProfileArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultOs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HostnameTheme { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubnetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomJson { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackConfigurationManager ConfigurationManager { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChefConfiguration ChefConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseCustomCookbooks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseOpsworksSecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Source CustomCookbooksSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSshKeyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RootDeviceType DefaultRootDeviceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AgentVersion { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>CreateUserProfile</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateUserProfileResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string IamUserArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateUserProfileRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IamUserArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SshUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SshPublicKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowSelfManagement { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAppRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AppId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteInstanceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeleteElasticIp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DeleteVolumes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteLayerRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LayerId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteStackRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteUserProfileRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IamUserArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeregisterEcsClusterRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EcsClusterArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeregisterElasticIpRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ElasticIp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeregisterInstanceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeregisterRdsDbInstanceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RdsDbInstanceArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeregisterVolumeRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VolumeId { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeAgentVersions</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAgentVersionsResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AgentVersion[] AgentVersions { get; set; }
	}
	
	/// <summary>
	/// Describes an agent version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AgentVersion
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackConfigurationManager ConfigurationManager { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAgentVersionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackConfigurationManager ConfigurationManager { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeApps</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAppsResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public App[] Apps { get; set; }
	}
	
	/// <summary>
	/// A description of the app.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AppId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Shortname { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSource[] DataSources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AppType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Source AppSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Domains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableSsl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SslConfiguration SslConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AppAttributes Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentVariable[] Environment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAppsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AppIds { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeCommands</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeCommandsResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Command[] Commands { get; set; }
	}
	
	/// <summary>
	/// Describes a command.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Command
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CommandId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AcknowledgedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CompletedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ExitCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeCommandsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] CommandIds { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeDeployments</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDeploymentsResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Deployment[] Deployments { get; set; }
	}
	
	/// <summary>
	/// Describes a deployment of a stack or app.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Deployment
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DeploymentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AppId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CompletedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Duration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IamUserArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Comment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeploymentCommand Command { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomJson { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InstanceIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDeploymentsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AppId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DeploymentIds { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeEcsClusters</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeEcsClustersResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EcsCluster[] EcsClusters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Describes a registered Amazon ECS cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EcsCluster
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EcsClusterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EcsClusterName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RegisteredAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeEcsClustersRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EcsClusterArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeElasticIps</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeElasticIpsResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ElasticIp[] ElasticIps { get; set; }
	}
	
	/// <summary>
	/// Describes an Elastic IP address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ElasticIp
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Ip { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeElasticIpsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Ips { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeElasticLoadBalancers</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeElasticLoadBalancersResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ElasticLoadBalancer[] ElasticLoadBalancers { get; set; }
	}
	
	/// <summary>
	/// Describes an Elastic Load Balancing instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ElasticLoadBalancer
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ElasticLoadBalancerName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DnsName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LayerId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AvailabilityZones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Ec2InstanceIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeElasticLoadBalancersRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] LayerIds { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeInstances</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeInstancesResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Instance[] Instances { get; set; }
	}
	
	/// <summary>
	/// Describes an instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Instance
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AgentVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AmiId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Architecture Architecture { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingType AutoScalingType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BlockDeviceMapping[] BlockDeviceMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EbsOptimized { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Ec2InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EcsClusterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EcsContainerInstanceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ElasticIp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Hostname { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InfrastructureClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InstallUpdatesOnBoot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceProfileArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastServiceErrorId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] LayerIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Os { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrivateDns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrivateIp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublicDns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublicIp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RegisteredBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReportedAgentVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReportedOs ReportedOs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RootDeviceType RootDeviceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RootDeviceVolumeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SshHostDsaKeyFingerprint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SshHostRsaKeyFingerprint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SshKeyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SubnetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Tenancy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VirtualizationType VirtualizationType { get; set; }
	}
	
	/// <summary>
	/// A registered instance's reported operating system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReportedOs
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Family { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VirtualizationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		paravirtual = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hvm = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeInstancesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LayerId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InstanceIds { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeLayers</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLayersResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Layer[] Layers { get; set; }
	}
	
	/// <summary>
	/// Describes a layer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Layer
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LayerId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LayerType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Shortname { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LayerAttributes Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLogsConfiguration CloudWatchLogsConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomInstanceProfileArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomJson { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] CustomSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DefaultSecurityGroupNames { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Packages { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VolumeConfiguration[] VolumeConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableAutoHealing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoAssignElasticIps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoAssignPublicIps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Recipes DefaultRecipes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Recipes CustomRecipes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InstallUpdatesOnBoot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseEbsOptimizedInstances { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LifecycleEventConfiguration LifecycleEventConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLayersRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] LayerIds { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeLoadBasedAutoScaling</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLoadBasedAutoScalingResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LoadBasedAutoScalingConfiguration[] LoadBasedAutoScalingConfigurations { get; set; }
	}
	
	/// <summary>
	/// Describes a layer's load-based auto scaling configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LoadBasedAutoScalingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LayerId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingThresholds UpScaling { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingThresholds DownScaling { get; set; }
	}
	
	/// <summary>
	/// Describes a load-based auto scaling upscaling or downscaling threshold configuration, which specifies when AWS OpsWorks Stacks starts or stops load-based instances.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoScalingThresholds
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ThresholdsWaitTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> IgnoreMetricsTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> CpuThreshold { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MemoryThreshold { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> LoadThreshold { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Alarms { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLoadBasedAutoScalingRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] LayerIds { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeMyUserProfile</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeMyUserProfileResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SelfUserProfile UserProfile { get; set; }
	}
	
	/// <summary>
	/// Describes a user's SSH information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SelfUserProfile
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string IamUserArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SshUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SshPublicKey { get; set; }
	}
	
	/// <summary>
	/// The response to a <code>DescribeOperatingSystems</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeOperatingSystemsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OperatingSystem[] OperatingSystems { get; set; }
	}
	
	/// <summary>
	/// Describes supported operating systems in AWS OpsWorks Stacks.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OperatingSystem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OperatingSystemConfigurationManager[] ConfigurationManagers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReportedName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReportedVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Supported { get; set; }
	}
	
	/// <summary>
	/// A block that contains information about the configuration manager (Chef) and the versions of the configuration manager that are supported for an operating system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OperatingSystemConfigurationManager
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribePermissions</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribePermissionsResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Permission[] Permissions { get; set; }
	}
	
	/// <summary>
	/// Describes stack or user permissions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Permission
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IamUserArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowSsh { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowSudo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Level { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribePermissionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string IamUserArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeRaidArrays</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeRaidArraysResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RaidArray[] RaidArrays { get; set; }
	}
	
	/// <summary>
	/// Describes an instance's RAID array.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RaidArray
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RaidArrayId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RaidLevel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumberOfDisks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Size { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Device { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MountPoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VolumeType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeRaidArraysRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RaidArrayIds { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeRdsDbInstances</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeRdsDbInstancesResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RdsDbInstance[] RdsDbInstances { get; set; }
	}
	
	/// <summary>
	/// Describes an Amazon RDS instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RdsDbInstance
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RdsDbInstanceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbInstanceIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbUser { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Engine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> MissingOnRds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeRdsDbInstancesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RdsDbInstanceArns { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeServiceErrors</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeServiceErrorsResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceError[] ServiceErrors { get; set; }
	}
	
	/// <summary>
	/// Describes an AWS OpsWorks Stacks service error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ServiceErrorId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeServiceErrorsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ServiceErrorIds { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeStackProvisioningParameters</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackProvisioningParametersResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AgentInstallerUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Parameters Parameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Parameters
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackProvisioningParametersRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeStackSummary</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackSummaryResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StackSummary StackSummary { get; set; }
	}
	
	/// <summary>
	/// Summarizes the number of layers, instances, and apps in a stack.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StackSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LayersCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AppsCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstancesCount InstancesCount { get; set; }
	}
	
	/// <summary>
	/// Describes how many instances a stack has for each status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstancesCount
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Assigning { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Booting { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ConnectionLost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Deregistering { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Online { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Pending { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Rebooting { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Registered { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Registering { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Requested { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RunningSetup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SetupFailed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ShuttingDown { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StartFailed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StopFailed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Stopped { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Stopping { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Terminated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Terminating { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Unassigning { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStackSummaryRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeStacks</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStacksResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Stack[] Stacks { get; set; }
	}
	
	/// <summary>
	/// Describes a stack.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Stack
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackAttributes Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServiceRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultInstanceProfileArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultOs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HostnameTheme { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubnetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomJson { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackConfigurationManager ConfigurationManager { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChefConfiguration ChefConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseCustomCookbooks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseOpsworksSecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Source CustomCookbooksSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSshKeyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RootDeviceType DefaultRootDeviceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AgentVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStacksRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StackIds { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeTimeBasedAutoScaling</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTimeBasedAutoScalingResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TimeBasedAutoScalingConfiguration[] TimeBasedAutoScalingConfigurations { get; set; }
	}
	
	/// <summary>
	/// Describes an instance's time-based auto scaling configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimeBasedAutoScalingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WeeklyAutoScalingSchedule AutoScalingSchedule { get; set; }
	}
	
	/// <summary>
	/// <p>Describes a time-based instance's auto scaling schedule. The schedule consists of a set of key-value pairs.</p> <ul> <li> <p>The key is the time period (a UTC hour) and must be an integer from 0 - 23.</p> </li> <li> <p>The value indicates whether the instance should be online or offline for the specified period, and must be set to "on" or "off"</p> </li> </ul> <p>The default setting for all time periods is off, so you use the following parameters primarily to specify the online periods. You don't have to explicitly specify offline periods unless you want to change an online period to an offline period.</p> <p>The following example specifies that the instance should be online for four hours, from UTC 1200 - 1600. It will be off for the remainder of the day.</p> <p> <code> { "12":"on", "13":"on", "14":"on", "15":"on" } </code> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WeeklyAutoScalingSchedule
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DailyAutoScalingSchedule Monday { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DailyAutoScalingSchedule Tuesday { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DailyAutoScalingSchedule Wednesday { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DailyAutoScalingSchedule Thursday { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DailyAutoScalingSchedule Friday { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DailyAutoScalingSchedule Saturday { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DailyAutoScalingSchedule Sunday { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DailyAutoScalingSchedule
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTimeBasedAutoScalingRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] InstanceIds { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeUserProfiles</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeUserProfilesResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UserProfile[] UserProfiles { get; set; }
	}
	
	/// <summary>
	/// Describes a user's SSH information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserProfile
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string IamUserArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SshUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SshPublicKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowSelfManagement { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeUserProfilesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] IamUserArns { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>DescribeVolumes</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeVolumesResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Volume[] Volumes { get; set; }
	}
	
	/// <summary>
	/// Describes an instance's Amazon EBS volume.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Volume
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VolumeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Ec2VolumeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RaidArrayId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Size { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Device { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MountPoint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VolumeType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Encrypted { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeVolumesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RaidArrayId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VolumeIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetachElasticLoadBalancerRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ElasticLoadBalancerName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LayerId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisassociateElasticIpRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ElasticIp { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>GetHostnameSuggestion</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetHostnameSuggestionResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LayerId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Hostname { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetHostnameSuggestionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LayerId { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>GrantAccess</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GrantAccessResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TemporaryCredential TemporaryCredential { get; set; }
	}
	
	/// <summary>
	/// Contains the data needed by RDP clients such as the Microsoft Remote Desktop Connection to log in to the instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemporaryCredential
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Username { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ValidForInMinutes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GrantAccessRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ValidForInMinutes { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>ListTags</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tags
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RebootInstanceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>RegisterEcsCluster</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterEcsClusterResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EcsClusterArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterEcsClusterRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EcsClusterArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>RegisterElasticIp</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterElasticIpResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ElasticIp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterElasticIpRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ElasticIp { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>RegisterInstanceResult</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterInstanceResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterInstanceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Hostname { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublicIp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrivateIp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RsaPublicKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RsaPublicKeyFingerprint { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceIdentity InstanceIdentity { get; set; }
	}
	
	/// <summary>
	/// Contains a description of an Amazon EC2 instance from the Amazon EC2 metadata service. For more information, see <a href="https://docs.aws.amazon.com/sdkfornet/latest/apidocs/Index.html">Instance Metadata and User Data</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceIdentity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Document { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Signature { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterRdsDbInstanceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RdsDbInstanceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DbUser { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DbPassword { get; set; }
	}
	
	/// <summary>
	/// Contains the response to a <code>RegisterVolume</code> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterVolumeResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VolumeId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterVolumeRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Ec2VolumeId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetLoadBasedAutoScalingRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LayerId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingThresholds UpScaling { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingThresholds DownScaling { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetPermissionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IamUserArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowSsh { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowSudo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Level { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetTimeBasedAutoScalingRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WeeklyAutoScalingSchedule AutoScalingSchedule { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartInstanceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartStackRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopInstanceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Force { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopStackRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnassignInstanceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnassignVolumeRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VolumeId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] TagKeys { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAppRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AppId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataSource[] DataSources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AppType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Source AppSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Domains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableSsl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SslConfiguration SslConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AppAttributes Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentVariable[] Environment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateElasticIpRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ElasticIp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateInstanceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] LayerIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingType AutoScalingType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Hostname { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Os { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AmiId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SshKeyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Architecture Architecture { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InstallUpdatesOnBoot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EbsOptimized { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AgentVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateLayerRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LayerId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Shortname { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LayerAttributes Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLogsConfiguration CloudWatchLogsConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomInstanceProfileArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomJson { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] CustomSecurityGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Packages { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VolumeConfiguration[] VolumeConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableAutoHealing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoAssignElasticIps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoAssignPublicIps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Recipes CustomRecipes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InstallUpdatesOnBoot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseEbsOptimizedInstances { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LifecycleEventConfiguration LifecycleEventConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateMyUserProfileRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SshPublicKey { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateRdsDbInstanceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RdsDbInstanceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbUser { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DbPassword { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateStackRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StackId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackAttributes Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServiceRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultInstanceProfileArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultOs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HostnameTheme { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubnetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomJson { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StackConfigurationManager ConfigurationManager { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChefConfiguration ChefConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseCustomCookbooks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Source CustomCookbooksSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSshKeyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RootDeviceType DefaultRootDeviceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseOpsworksSecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AgentVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateUserProfileRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IamUserArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SshUsername { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SshPublicKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowSelfManagement { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateVolumeRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VolumeId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MountPoint { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppAttributesKeys
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DocumentRoot = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RailsEnv = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoBundleOnDeploy = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AwsFlowRubySettings = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LayerAttributesKeys
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EcsClusterArn = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EnableHaproxyStats = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HaproxyStatsUrl = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HaproxyStatsUser = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HaproxyStatsPassword = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HaproxyHealthCheckUrl = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HaproxyHealthCheckMethod = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MysqlRootPassword = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MysqlRootPasswordUbiquitous = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GangliaUrl = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GangliaUser = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GangliaPassword = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MemcachedMemory = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NodejsVersion = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RubyVersion = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RubygemsVersion = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ManageBundler = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BundlerVersion = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RailsStack = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PassengerVersion = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Jvm = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JvmVersion = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JvmOptions = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JavaAppServer = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JavaAppServerVersion = 24,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StackAttributesKeys
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Color = 0,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Assign a registered instance to a layer.</p> <ul> <li> <p>You can assign registered on-premises instances to any layer type.</p> </li> <li> <p>You can assign registered Amazon EC2 instances only to custom layers.</p> </li> <li> <p>You cannot use this action with instances that were created with AWS OpsWorks Stacks.</p> </li> </ul> <p> <b>Required Permissions</b>: To use this action, an AWS Identity and Access Management (IAM) user must have a Manage permissions level for the stack or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// AssignInstance #X-Amz-Target=OpsWorks_20130218.AssignInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task AssignInstanceAsync(AssignInstanceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.AssignInstance";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Assigns one of the stack's registered Amazon EBS volumes to a specified instance. The volume must first be registered with the stack by calling <a>RegisterVolume</a>. After you register the volume, you must call <a>UpdateVolume</a> to specify a mount point before calling <code>AssignVolume</code>. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/resources.html">Resource Management</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// AssignVolume #X-Amz-Target=OpsWorks_20130218.AssignVolume
		/// </summary>
		/// <returns>Success</returns>
		public async Task AssignVolumeAsync(AssignVolumeRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.AssignVolume";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Associates one of the stack's registered Elastic IP addresses with a specified instance. The address must first be registered with the stack by calling <a>RegisterElasticIp</a>. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/resources.html">Resource Management</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// AssociateElasticIp #X-Amz-Target=OpsWorks_20130218.AssociateElasticIp
		/// </summary>
		/// <returns>Success</returns>
		public async Task AssociateElasticIpAsync(AssociateElasticIpRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.AssociateElasticIp";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Attaches an Elastic Load Balancing load balancer to a specified layer. AWS OpsWorks Stacks does not support Application Load Balancer. You can only use Classic Load Balancer with AWS OpsWorks Stacks. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/layers-elb.html">Elastic Load Balancing</a>.</p> <note> <p>You must create the Elastic Load Balancing instance separately, by using the Elastic Load Balancing console, API, or CLI. For more information, see <a href="https://docs.aws.amazon.com/ElasticLoadBalancing/latest/DeveloperGuide/Welcome.html"> Elastic Load Balancing Developer Guide</a>.</p> </note> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// AttachElasticLoadBalancer #X-Amz-Target=OpsWorks_20130218.AttachElasticLoadBalancer
		/// </summary>
		/// <returns>Success</returns>
		public async Task AttachElasticLoadBalancerAsync(AttachElasticLoadBalancerRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.AttachElasticLoadBalancer";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a clone of a specified stack. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-cloning.html">Clone a Stack</a>. By default, all parameters are set to the values used by the parent stack.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// CloneStack #X-Amz-Target=OpsWorks_20130218.CloneStack
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CloneStackResult> CloneStackAsync(CloneStackRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.CloneStack";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CloneStackResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an app for a specified stack. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html">Creating Apps</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// CreateApp #X-Amz-Target=OpsWorks_20130218.CreateApp
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateAppResult> CreateAppAsync(CreateAppRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.CreateApp";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateAppResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Runs deployment or stack commands. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-deploying.html">Deploying Apps</a> and <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-commands.html">Run Stack Commands</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Deploy or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// CreateDeployment #X-Amz-Target=OpsWorks_20130218.CreateDeployment
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateDeploymentResult> CreateDeploymentAsync(CreateDeploymentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.CreateDeployment";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateDeploymentResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an instance in a specified stack. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-add.html">Adding an Instance to a Layer</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// CreateInstance #X-Amz-Target=OpsWorks_20130218.CreateInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateInstanceResult> CreateInstanceAsync(CreateInstanceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.CreateInstance";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateInstanceResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a layer. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workinglayers-basics-create.html">How to Create a Layer</a>.</p> <note> <p>You should use <b>CreateLayer</b> for noncustom layer types such as PHP App Server only if the stack does not have an existing layer of that type. A stack can have at most one instance of each noncustom layer; if you attempt to create a second instance, <b>CreateLayer</b> fails. A stack can have an arbitrary number of custom layers, so you can call <b>CreateLayer</b> as many times as you like for that layer type.</p> </note> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// CreateLayer #X-Amz-Target=OpsWorks_20130218.CreateLayer
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateLayerResult> CreateLayerAsync(CreateLayerRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.CreateLayer";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateLayerResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new stack. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-edit.html">Create a New Stack</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// CreateStack #X-Amz-Target=OpsWorks_20130218.CreateStack
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateStackResult> CreateStackAsync(CreateStackRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.CreateStack";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateStackResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new user profile.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// CreateUserProfile #X-Amz-Target=OpsWorks_20130218.CreateUserProfile
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateUserProfileResult> CreateUserProfileAsync(CreateUserProfileRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.CreateUserProfile";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateUserProfileResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a specified app.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DeleteApp #X-Amz-Target=OpsWorks_20130218.DeleteApp
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteAppAsync(DeleteAppRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DeleteApp";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a specified instance, which terminates the associated Amazon EC2 instance. You must stop an instance before you can delete it.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-delete.html">Deleting Instances</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DeleteInstance #X-Amz-Target=OpsWorks_20130218.DeleteInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteInstanceAsync(DeleteInstanceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DeleteInstance";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a specified layer. You must first stop and then delete all associated instances or unassign registered instances. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workinglayers-basics-delete.html">How to Delete a Layer</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DeleteLayer #X-Amz-Target=OpsWorks_20130218.DeleteLayer
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteLayerAsync(DeleteLayerRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DeleteLayer";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a specified stack. You must first delete all instances, layers, and apps or deregister registered instances. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workingstacks-shutting.html">Shut Down a Stack</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DeleteStack #X-Amz-Target=OpsWorks_20130218.DeleteStack
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteStackAsync(DeleteStackRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DeleteStack";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a user profile.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DeleteUserProfile #X-Amz-Target=OpsWorks_20130218.DeleteUserProfile
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteUserProfileAsync(DeleteUserProfileRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DeleteUserProfile";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deregisters a specified Amazon ECS cluster from a stack. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workinglayers-ecscluster.html#workinglayers-ecscluster-delete"> Resource Management</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html</a>.</p>
		/// DeregisterEcsCluster #X-Amz-Target=OpsWorks_20130218.DeregisterEcsCluster
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeregisterEcsClusterAsync(DeregisterEcsClusterRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DeregisterEcsCluster";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deregisters a specified Elastic IP address. The address can then be registered by another stack. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/resources.html">Resource Management</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DeregisterElasticIp #X-Amz-Target=OpsWorks_20130218.DeregisterElasticIp
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeregisterElasticIpAsync(DeregisterElasticIpRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DeregisterElasticIp";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deregister a registered Amazon EC2 or on-premises instance. This action removes the instance from the stack and returns it to your control. This action cannot be used with instances that were created with AWS OpsWorks Stacks.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DeregisterInstance #X-Amz-Target=OpsWorks_20130218.DeregisterInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeregisterInstanceAsync(DeregisterInstanceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DeregisterInstance";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deregisters an Amazon RDS instance.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DeregisterRdsDbInstance #X-Amz-Target=OpsWorks_20130218.DeregisterRdsDbInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeregisterRdsDbInstanceAsync(DeregisterRdsDbInstanceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DeregisterRdsDbInstance";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deregisters an Amazon EBS volume. The volume can then be registered by another stack. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/resources.html">Resource Management</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DeregisterVolume #X-Amz-Target=OpsWorks_20130218.DeregisterVolume
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeregisterVolumeAsync(DeregisterVolumeRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DeregisterVolume";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes the available AWS OpsWorks Stacks agent versions. You must specify a stack ID or a configuration manager. <code>DescribeAgentVersions</code> returns a list of available agent versions for the specified stack or configuration manager.
		/// DescribeAgentVersions #X-Amz-Target=OpsWorks_20130218.DescribeAgentVersions
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeAgentVersionsResult> DescribeAgentVersionsAsync(DescribeAgentVersionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeAgentVersions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeAgentVersionsResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Requests a description of a specified set of apps.</p> <note> <p>This call accepts only one resource-identifying parameter.</p> </note> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DescribeApps #X-Amz-Target=OpsWorks_20130218.DescribeApps
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeAppsResult> DescribeAppsAsync(DescribeAppsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeApps";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeAppsResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes the results of specified commands.</p> <note> <p>This call accepts only one resource-identifying parameter.</p> </note> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DescribeCommands #X-Amz-Target=OpsWorks_20130218.DescribeCommands
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeCommandsResult> DescribeCommandsAsync(DescribeCommandsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeCommands";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeCommandsResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Requests a description of a specified set of deployments.</p> <note> <p>This call accepts only one resource-identifying parameter.</p> </note> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DescribeDeployments #X-Amz-Target=OpsWorks_20130218.DescribeDeployments
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeDeploymentsResult> DescribeDeploymentsAsync(DescribeDeploymentsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeDeployments";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeDeploymentsResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes Amazon ECS clusters that are registered with a stack. If you specify only a stack ID, you can use the <code>MaxResults</code> and <code>NextToken</code> parameters to paginate the response. However, AWS OpsWorks Stacks currently supports only one cluster per layer, so the result set has a maximum of one element.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack or an attached policy that explicitly grants permission. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p> <p>This call accepts only one resource-identifying parameter.</p>
		/// DescribeEcsClusters #X-Amz-Target=OpsWorks_20130218.DescribeEcsClusters
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeEcsClustersResult> DescribeEcsClustersAsync(string MaxResults, string NextToken, DescribeEcsClustersRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeEcsClusters?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeEcsClustersResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html">Elastic IP addresses</a>.</p> <note> <p>This call accepts only one resource-identifying parameter.</p> </note> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DescribeElasticIps #X-Amz-Target=OpsWorks_20130218.DescribeElasticIps
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeElasticIpsResult> DescribeElasticIpsAsync(DescribeElasticIpsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeElasticIps";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeElasticIpsResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes a stack's Elastic Load Balancing instances.</p> <note> <p>This call accepts only one resource-identifying parameter.</p> </note> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DescribeElasticLoadBalancers #X-Amz-Target=OpsWorks_20130218.DescribeElasticLoadBalancers
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeElasticLoadBalancersResult> DescribeElasticLoadBalancersAsync(DescribeElasticLoadBalancersRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeElasticLoadBalancers";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeElasticLoadBalancersResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Requests a description of a set of instances.</p> <note> <p>This call accepts only one resource-identifying parameter.</p> </note> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DescribeInstances #X-Amz-Target=OpsWorks_20130218.DescribeInstances
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeInstancesResult> DescribeInstancesAsync(DescribeInstancesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeInstances";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeInstancesResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Requests a description of one or more layers in a specified stack.</p> <note> <p>This call accepts only one resource-identifying parameter.</p> </note> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DescribeLayers #X-Amz-Target=OpsWorks_20130218.DescribeLayers
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeLayersResult> DescribeLayersAsync(DescribeLayersRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeLayers";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeLayersResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes load-based auto scaling configurations for specified layers.</p> <note> <p>You must specify at least one of the parameters.</p> </note> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DescribeLoadBasedAutoScaling #X-Amz-Target=OpsWorks_20130218.DescribeLoadBasedAutoScaling
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeLoadBasedAutoScalingResult> DescribeLoadBasedAutoScalingAsync(DescribeLoadBasedAutoScalingRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeLoadBasedAutoScaling";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeLoadBasedAutoScalingResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes a user's SSH information.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have self-management enabled or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DescribeMyUserProfile #X-Amz-Target=OpsWorks_20130218.DescribeMyUserProfile
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeMyUserProfileResult> DescribeMyUserProfileAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeMyUserProfile";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeMyUserProfileResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes the operating systems that are supported by AWS OpsWorks Stacks.
		/// DescribeOperatingSystems #X-Amz-Target=OpsWorks_20130218.DescribeOperatingSystems
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeOperatingSystemsResponse> DescribeOperatingSystemsAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeOperatingSystems";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeOperatingSystemsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes the permissions for a specified stack.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DescribePermissions #X-Amz-Target=OpsWorks_20130218.DescribePermissions
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribePermissionsResult> DescribePermissionsAsync(DescribePermissionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribePermissions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribePermissionsResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describe an instance's RAID arrays.</p> <note> <p>This call accepts only one resource-identifying parameter.</p> </note> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DescribeRaidArrays #X-Amz-Target=OpsWorks_20130218.DescribeRaidArrays
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeRaidArraysResult> DescribeRaidArraysAsync(DescribeRaidArraysRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeRaidArrays";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeRaidArraysResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes Amazon RDS instances.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p> <p>This call accepts only one resource-identifying parameter.</p>
		/// DescribeRdsDbInstances #X-Amz-Target=OpsWorks_20130218.DescribeRdsDbInstances
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeRdsDbInstancesResult> DescribeRdsDbInstancesAsync(DescribeRdsDbInstancesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeRdsDbInstances";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeRdsDbInstancesResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes AWS OpsWorks Stacks service errors.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p> <p>This call accepts only one resource-identifying parameter.</p>
		/// DescribeServiceErrors #X-Amz-Target=OpsWorks_20130218.DescribeServiceErrors
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeServiceErrorsResult> DescribeServiceErrorsAsync(DescribeServiceErrorsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeServiceErrors";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeServiceErrorsResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Requests a description of a stack's provisioning parameters.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DescribeStackProvisioningParameters #X-Amz-Target=OpsWorks_20130218.DescribeStackProvisioningParameters
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeStackProvisioningParametersResult> DescribeStackProvisioningParametersAsync(DescribeStackProvisioningParametersRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeStackProvisioningParameters";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeStackProvisioningParametersResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes the number of layers and apps in a specified stack, and the number of instances in each state, such as <code>running_setup</code> or <code>online</code>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DescribeStackSummary #X-Amz-Target=OpsWorks_20130218.DescribeStackSummary
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeStackSummaryResult> DescribeStackSummaryAsync(DescribeStackSummaryRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeStackSummary";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeStackSummaryResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Requests a description of one or more stacks.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DescribeStacks #X-Amz-Target=OpsWorks_20130218.DescribeStacks
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeStacksResult> DescribeStacksAsync(DescribeStacksRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeStacks";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeStacksResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes time-based auto scaling configurations for specified instances.</p> <note> <p>You must specify at least one of the parameters.</p> </note> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DescribeTimeBasedAutoScaling #X-Amz-Target=OpsWorks_20130218.DescribeTimeBasedAutoScaling
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeTimeBasedAutoScalingResult> DescribeTimeBasedAutoScalingAsync(DescribeTimeBasedAutoScalingRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeTimeBasedAutoScaling";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeTimeBasedAutoScalingResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describe specified users.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DescribeUserProfiles #X-Amz-Target=OpsWorks_20130218.DescribeUserProfiles
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeUserProfilesResult> DescribeUserProfilesAsync(DescribeUserProfilesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeUserProfiles";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeUserProfilesResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes an instance's Amazon EBS volumes.</p> <note> <p>This call accepts only one resource-identifying parameter.</p> </note> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Show, Deploy, or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DescribeVolumes #X-Amz-Target=OpsWorks_20130218.DescribeVolumes
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeVolumesResult> DescribeVolumesAsync(DescribeVolumesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DescribeVolumes";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeVolumesResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Detaches a specified Elastic Load Balancing instance from its layer.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DetachElasticLoadBalancer #X-Amz-Target=OpsWorks_20130218.DetachElasticLoadBalancer
		/// </summary>
		/// <returns>Success</returns>
		public async Task DetachElasticLoadBalancerAsync(DetachElasticLoadBalancerRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DetachElasticLoadBalancer";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Disassociates an Elastic IP address from its instance. The address remains registered with the stack. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/resources.html">Resource Management</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// DisassociateElasticIp #X-Amz-Target=OpsWorks_20130218.DisassociateElasticIp
		/// </summary>
		/// <returns>Success</returns>
		public async Task DisassociateElasticIpAsync(DisassociateElasticIpRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.DisassociateElasticIp";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Gets a generated host name for the specified layer, based on the current host name theme.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// GetHostnameSuggestion #X-Amz-Target=OpsWorks_20130218.GetHostnameSuggestion
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetHostnameSuggestionResult> GetHostnameSuggestionAsync(GetHostnameSuggestionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.GetHostnameSuggestion";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetHostnameSuggestionResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <note> <p>This action can be used only with Windows stacks.</p> </note> <p>Grants RDP access to a Windows instance for a specified time period.</p>
		/// GrantAccess #X-Amz-Target=OpsWorks_20130218.GrantAccess
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GrantAccessResult> GrantAccessAsync(GrantAccessRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.GrantAccess";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GrantAccessResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of tags that are applied to the specified stack or layer.
		/// ListTags #X-Amz-Target=OpsWorks_20130218.ListTags
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListTagsResult> ListTagsAsync(ListTagsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.ListTags";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTagsResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Reboots a specified instance. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-starting.html">Starting, Stopping, and Rebooting Instances</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// RebootInstance #X-Amz-Target=OpsWorks_20130218.RebootInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task RebootInstanceAsync(RebootInstanceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.RebootInstance";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Registers a specified Amazon ECS cluster with a stack. You can register only one cluster with a stack. A cluster can be registered with only one stack. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workinglayers-ecscluster.html"> Resource Management</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html"> Managing User Permissions</a>.</p>
		/// RegisterEcsCluster #X-Amz-Target=OpsWorks_20130218.RegisterEcsCluster
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RegisterEcsClusterResult> RegisterEcsClusterAsync(RegisterEcsClusterRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.RegisterEcsCluster";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RegisterEcsClusterResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Registers an Elastic IP address with a specified stack. An address can be registered with only one stack at a time. If the address is already registered, you must first deregister it by calling <a>DeregisterElasticIp</a>. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/resources.html">Resource Management</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// RegisterElasticIp #X-Amz-Target=OpsWorks_20130218.RegisterElasticIp
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RegisterElasticIpResult> RegisterElasticIpAsync(RegisterElasticIpRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.RegisterElasticIp";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RegisterElasticIpResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Registers instances that were created outside of AWS OpsWorks Stacks with a specified stack.</p> <note> <p>We do not recommend using this action to register instances. The complete registration operation includes two tasks: installing the AWS OpsWorks Stacks agent on the instance, and registering the instance with the stack. <code>RegisterInstance</code> handles only the second step. You should instead use the AWS CLI <code>register</code> command, which performs the entire registration operation. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/registered-instances-register.html"> Registering an Instance with an AWS OpsWorks Stacks Stack</a>.</p> </note> <p>Registered instances have the same requirements as instances that are created by using the <a>CreateInstance</a> API. For example, registered instances must be running a supported Linux-based operating system, and they must have a supported instance type. For more information about requirements for instances that you want to register, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/registered-instances-register-registering-preparer.html"> Preparing the Instance</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// RegisterInstance #X-Amz-Target=OpsWorks_20130218.RegisterInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RegisterInstanceResult> RegisterInstanceAsync(RegisterInstanceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.RegisterInstance";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RegisterInstanceResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Registers an Amazon RDS instance with a stack.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// RegisterRdsDbInstance #X-Amz-Target=OpsWorks_20130218.RegisterRdsDbInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task RegisterRdsDbInstanceAsync(RegisterRdsDbInstanceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.RegisterRdsDbInstance";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Registers an Amazon EBS volume with a specified stack. A volume can be registered with only one stack at a time. If the volume is already registered, you must first deregister it by calling <a>DeregisterVolume</a>. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/resources.html">Resource Management</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// RegisterVolume #X-Amz-Target=OpsWorks_20130218.RegisterVolume
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RegisterVolumeResult> RegisterVolumeAsync(RegisterVolumeRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.RegisterVolume";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RegisterVolumeResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Specify the load-based auto scaling configuration for a specified layer. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-autoscaling.html">Managing Load with Time-based and Load-based Instances</a>.</p> <note> <p>To use load-based auto scaling, you must create a set of load-based auto scaling instances. Load-based auto scaling operates only on the instances from that set, so you must ensure that you have created enough instances to handle the maximum anticipated load.</p> </note> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// SetLoadBasedAutoScaling #X-Amz-Target=OpsWorks_20130218.SetLoadBasedAutoScaling
		/// </summary>
		/// <returns>Success</returns>
		public async Task SetLoadBasedAutoScalingAsync(SetLoadBasedAutoScalingRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.SetLoadBasedAutoScaling";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Specifies a user's permissions. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workingsecurity.html">Security and Permissions</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// SetPermission #X-Amz-Target=OpsWorks_20130218.SetPermission
		/// </summary>
		/// <returns>Success</returns>
		public async Task SetPermissionAsync(SetPermissionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.SetPermission";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Specify the time-based auto scaling configuration for a specified instance. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-autoscaling.html">Managing Load with Time-based and Load-based Instances</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// SetTimeBasedAutoScaling #X-Amz-Target=OpsWorks_20130218.SetTimeBasedAutoScaling
		/// </summary>
		/// <returns>Success</returns>
		public async Task SetTimeBasedAutoScalingAsync(SetTimeBasedAutoScalingRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.SetTimeBasedAutoScaling";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Starts a specified instance. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-starting.html">Starting, Stopping, and Rebooting Instances</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// StartInstance #X-Amz-Target=OpsWorks_20130218.StartInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task StartInstanceAsync(StartInstanceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.StartInstance";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Starts a stack's instances.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// StartStack #X-Amz-Target=OpsWorks_20130218.StartStack
		/// </summary>
		/// <returns>Success</returns>
		public async Task StartStackAsync(StartStackRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.StartStack";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Stops a specified instance. When you stop a standard instance, the data disappears and must be reinstalled when you restart the instance. You can stop an Amazon EBS-backed instance without losing data. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-starting.html">Starting, Stopping, and Rebooting Instances</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// StopInstance #X-Amz-Target=OpsWorks_20130218.StopInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task StopInstanceAsync(StopInstanceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.StopInstance";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Stops a specified stack.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// StopStack #X-Amz-Target=OpsWorks_20130218.StopStack
		/// </summary>
		/// <returns>Success</returns>
		public async Task StopStackAsync(StopStackRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.StopStack";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apply cost-allocation tags to a specified stack or layer in AWS OpsWorks Stacks. For more information about how tagging works, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/tagging.html">Tags</a> in the AWS OpsWorks User Guide.
		/// TagResource #X-Amz-Target=OpsWorks_20130218.TagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task TagResourceAsync(TagResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.TagResource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Unassigns a registered instance from all layers that are using the instance. The instance remains in the stack as an unassigned instance, and can be assigned to another layer as needed. You cannot use this action with instances that were created with AWS OpsWorks Stacks.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// UnassignInstance #X-Amz-Target=OpsWorks_20130218.UnassignInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task UnassignInstanceAsync(UnassignInstanceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.UnassignInstance";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Unassigns an assigned Amazon EBS volume. The volume remains registered with the stack. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/resources.html">Resource Management</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// UnassignVolume #X-Amz-Target=OpsWorks_20130218.UnassignVolume
		/// </summary>
		/// <returns>Success</returns>
		public async Task UnassignVolumeAsync(UnassignVolumeRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.UnassignVolume";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes tags from a specified stack or layer.
		/// UntagResource #X-Amz-Target=OpsWorks_20130218.UntagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task UntagResourceAsync(UntagResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.UntagResource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates a specified app.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Deploy or Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// UpdateApp #X-Amz-Target=OpsWorks_20130218.UpdateApp
		/// </summary>
		/// <returns>Success</returns>
		public async Task UpdateAppAsync(UpdateAppRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.UpdateApp";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates a registered Elastic IP address's name. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/resources.html">Resource Management</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// UpdateElasticIp #X-Amz-Target=OpsWorks_20130218.UpdateElasticIp
		/// </summary>
		/// <returns>Success</returns>
		public async Task UpdateElasticIpAsync(UpdateElasticIpRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.UpdateElasticIp";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates a specified instance.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// UpdateInstance #X-Amz-Target=OpsWorks_20130218.UpdateInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task UpdateInstanceAsync(UpdateInstanceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.UpdateInstance";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates a specified layer.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// UpdateLayer #X-Amz-Target=OpsWorks_20130218.UpdateLayer
		/// </summary>
		/// <returns>Success</returns>
		public async Task UpdateLayerAsync(UpdateLayerRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.UpdateLayer";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates a user's SSH public key.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have self-management enabled or an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// UpdateMyUserProfile #X-Amz-Target=OpsWorks_20130218.UpdateMyUserProfile
		/// </summary>
		/// <returns>Success</returns>
		public async Task UpdateMyUserProfileAsync(UpdateMyUserProfileRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.UpdateMyUserProfile";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates an Amazon RDS instance.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// UpdateRdsDbInstance #X-Amz-Target=OpsWorks_20130218.UpdateRdsDbInstance
		/// </summary>
		/// <returns>Success</returns>
		public async Task UpdateRdsDbInstanceAsync(UpdateRdsDbInstanceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.UpdateRdsDbInstance";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates a specified stack.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// UpdateStack #X-Amz-Target=OpsWorks_20130218.UpdateStack
		/// </summary>
		/// <returns>Success</returns>
		public async Task UpdateStackAsync(UpdateStackRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.UpdateStack";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates a specified user profile.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have an attached policy that explicitly grants permissions. For more information about user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// UpdateUserProfile #X-Amz-Target=OpsWorks_20130218.UpdateUserProfile
		/// </summary>
		/// <returns>Success</returns>
		public async Task UpdateUserProfileAsync(UpdateUserProfileRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.UpdateUserProfile";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates an Amazon EBS volume's name or mount point. For more information, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/resources.html">Resource Management</a>.</p> <p> <b>Required Permissions</b>: To use this action, an IAM user must have a Manage permissions level for the stack, or an attached policy that explicitly grants permissions. For more information on user permissions, see <a href="https://docs.aws.amazon.com/opsworks/latest/userguide/opsworks-security-users.html">Managing User Permissions</a>.</p>
		/// UpdateVolume #X-Amz-Target=OpsWorks_20130218.UpdateVolume
		/// </summary>
		/// <returns>Success</returns>
		public async Task UpdateVolumeAsync(UpdateVolumeRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=OpsWorks_20130218.UpdateVolume";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum AssignInstanceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.AssignInstance")]
		OpsWorks_20130218_AssignInstance = 0,
	}
	
	public enum AssignVolumeX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.AssignVolume")]
		OpsWorks_20130218_AssignVolume = 0,
	}
	
	public enum AssociateElasticIpX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.AssociateElasticIp")]
		OpsWorks_20130218_AssociateElasticIp = 0,
	}
	
	public enum AttachElasticLoadBalancerX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.AttachElasticLoadBalancer")]
		OpsWorks_20130218_AttachElasticLoadBalancer = 0,
	}
	
	public enum CloneStackX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.CloneStack")]
		OpsWorks_20130218_CloneStack = 0,
	}
	
	public enum CreateAppX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.CreateApp")]
		OpsWorks_20130218_CreateApp = 0,
	}
	
	public enum CreateDeploymentX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.CreateDeployment")]
		OpsWorks_20130218_CreateDeployment = 0,
	}
	
	public enum CreateInstanceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.CreateInstance")]
		OpsWorks_20130218_CreateInstance = 0,
	}
	
	public enum CreateLayerX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.CreateLayer")]
		OpsWorks_20130218_CreateLayer = 0,
	}
	
	public enum CreateStackX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.CreateStack")]
		OpsWorks_20130218_CreateStack = 0,
	}
	
	public enum CreateUserProfileX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.CreateUserProfile")]
		OpsWorks_20130218_CreateUserProfile = 0,
	}
	
	public enum DeleteAppX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DeleteApp")]
		OpsWorks_20130218_DeleteApp = 0,
	}
	
	public enum DeleteInstanceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DeleteInstance")]
		OpsWorks_20130218_DeleteInstance = 0,
	}
	
	public enum DeleteLayerX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DeleteLayer")]
		OpsWorks_20130218_DeleteLayer = 0,
	}
	
	public enum DeleteStackX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DeleteStack")]
		OpsWorks_20130218_DeleteStack = 0,
	}
	
	public enum DeleteUserProfileX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DeleteUserProfile")]
		OpsWorks_20130218_DeleteUserProfile = 0,
	}
	
	public enum DeregisterEcsClusterX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DeregisterEcsCluster")]
		OpsWorks_20130218_DeregisterEcsCluster = 0,
	}
	
	public enum DeregisterElasticIpX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DeregisterElasticIp")]
		OpsWorks_20130218_DeregisterElasticIp = 0,
	}
	
	public enum DeregisterInstanceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DeregisterInstance")]
		OpsWorks_20130218_DeregisterInstance = 0,
	}
	
	public enum DeregisterRdsDbInstanceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DeregisterRdsDbInstance")]
		OpsWorks_20130218_DeregisterRdsDbInstance = 0,
	}
	
	public enum DeregisterVolumeX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DeregisterVolume")]
		OpsWorks_20130218_DeregisterVolume = 0,
	}
	
	public enum DescribeAgentVersionsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeAgentVersions")]
		OpsWorks_20130218_DescribeAgentVersions = 0,
	}
	
	public enum DescribeAppsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeApps")]
		OpsWorks_20130218_DescribeApps = 0,
	}
	
	public enum DescribeCommandsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeCommands")]
		OpsWorks_20130218_DescribeCommands = 0,
	}
	
	public enum DescribeDeploymentsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeDeployments")]
		OpsWorks_20130218_DescribeDeployments = 0,
	}
	
	public enum DescribeEcsClustersX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeEcsClusters")]
		OpsWorks_20130218_DescribeEcsClusters = 0,
	}
	
	public enum DescribeElasticIpsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeElasticIps")]
		OpsWorks_20130218_DescribeElasticIps = 0,
	}
	
	public enum DescribeElasticLoadBalancersX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeElasticLoadBalancers")]
		OpsWorks_20130218_DescribeElasticLoadBalancers = 0,
	}
	
	public enum DescribeInstancesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeInstances")]
		OpsWorks_20130218_DescribeInstances = 0,
	}
	
	public enum DescribeLayersX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeLayers")]
		OpsWorks_20130218_DescribeLayers = 0,
	}
	
	public enum DescribeLoadBasedAutoScalingX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeLoadBasedAutoScaling")]
		OpsWorks_20130218_DescribeLoadBasedAutoScaling = 0,
	}
	
	public enum DescribeMyUserProfileX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeMyUserProfile")]
		OpsWorks_20130218_DescribeMyUserProfile = 0,
	}
	
	public enum DescribeOperatingSystemsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeOperatingSystems")]
		OpsWorks_20130218_DescribeOperatingSystems = 0,
	}
	
	public enum DescribePermissionsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribePermissions")]
		OpsWorks_20130218_DescribePermissions = 0,
	}
	
	public enum DescribeRaidArraysX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeRaidArrays")]
		OpsWorks_20130218_DescribeRaidArrays = 0,
	}
	
	public enum DescribeRdsDbInstancesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeRdsDbInstances")]
		OpsWorks_20130218_DescribeRdsDbInstances = 0,
	}
	
	public enum DescribeServiceErrorsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeServiceErrors")]
		OpsWorks_20130218_DescribeServiceErrors = 0,
	}
	
	public enum DescribeStackProvisioningParametersX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeStackProvisioningParameters")]
		OpsWorks_20130218_DescribeStackProvisioningParameters = 0,
	}
	
	public enum DescribeStackSummaryX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeStackSummary")]
		OpsWorks_20130218_DescribeStackSummary = 0,
	}
	
	public enum DescribeStacksX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeStacks")]
		OpsWorks_20130218_DescribeStacks = 0,
	}
	
	public enum DescribeTimeBasedAutoScalingX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeTimeBasedAutoScaling")]
		OpsWorks_20130218_DescribeTimeBasedAutoScaling = 0,
	}
	
	public enum DescribeUserProfilesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeUserProfiles")]
		OpsWorks_20130218_DescribeUserProfiles = 0,
	}
	
	public enum DescribeVolumesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DescribeVolumes")]
		OpsWorks_20130218_DescribeVolumes = 0,
	}
	
	public enum DetachElasticLoadBalancerX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DetachElasticLoadBalancer")]
		OpsWorks_20130218_DetachElasticLoadBalancer = 0,
	}
	
	public enum DisassociateElasticIpX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.DisassociateElasticIp")]
		OpsWorks_20130218_DisassociateElasticIp = 0,
	}
	
	public enum GetHostnameSuggestionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.GetHostnameSuggestion")]
		OpsWorks_20130218_GetHostnameSuggestion = 0,
	}
	
	public enum GrantAccessX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.GrantAccess")]
		OpsWorks_20130218_GrantAccess = 0,
	}
	
	public enum ListTagsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.ListTags")]
		OpsWorks_20130218_ListTags = 0,
	}
	
	public enum RebootInstanceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.RebootInstance")]
		OpsWorks_20130218_RebootInstance = 0,
	}
	
	public enum RegisterEcsClusterX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.RegisterEcsCluster")]
		OpsWorks_20130218_RegisterEcsCluster = 0,
	}
	
	public enum RegisterElasticIpX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.RegisterElasticIp")]
		OpsWorks_20130218_RegisterElasticIp = 0,
	}
	
	public enum RegisterInstanceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.RegisterInstance")]
		OpsWorks_20130218_RegisterInstance = 0,
	}
	
	public enum RegisterRdsDbInstanceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.RegisterRdsDbInstance")]
		OpsWorks_20130218_RegisterRdsDbInstance = 0,
	}
	
	public enum RegisterVolumeX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.RegisterVolume")]
		OpsWorks_20130218_RegisterVolume = 0,
	}
	
	public enum SetLoadBasedAutoScalingX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.SetLoadBasedAutoScaling")]
		OpsWorks_20130218_SetLoadBasedAutoScaling = 0,
	}
	
	public enum SetPermissionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.SetPermission")]
		OpsWorks_20130218_SetPermission = 0,
	}
	
	public enum SetTimeBasedAutoScalingX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.SetTimeBasedAutoScaling")]
		OpsWorks_20130218_SetTimeBasedAutoScaling = 0,
	}
	
	public enum StartInstanceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.StartInstance")]
		OpsWorks_20130218_StartInstance = 0,
	}
	
	public enum StartStackX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.StartStack")]
		OpsWorks_20130218_StartStack = 0,
	}
	
	public enum StopInstanceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.StopInstance")]
		OpsWorks_20130218_StopInstance = 0,
	}
	
	public enum StopStackX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.StopStack")]
		OpsWorks_20130218_StopStack = 0,
	}
	
	public enum TagResourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.TagResource")]
		OpsWorks_20130218_TagResource = 0,
	}
	
	public enum UnassignInstanceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.UnassignInstance")]
		OpsWorks_20130218_UnassignInstance = 0,
	}
	
	public enum UnassignVolumeX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.UnassignVolume")]
		OpsWorks_20130218_UnassignVolume = 0,
	}
	
	public enum UntagResourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.UntagResource")]
		OpsWorks_20130218_UntagResource = 0,
	}
	
	public enum UpdateAppX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.UpdateApp")]
		OpsWorks_20130218_UpdateApp = 0,
	}
	
	public enum UpdateElasticIpX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.UpdateElasticIp")]
		OpsWorks_20130218_UpdateElasticIp = 0,
	}
	
	public enum UpdateInstanceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.UpdateInstance")]
		OpsWorks_20130218_UpdateInstance = 0,
	}
	
	public enum UpdateLayerX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.UpdateLayer")]
		OpsWorks_20130218_UpdateLayer = 0,
	}
	
	public enum UpdateMyUserProfileX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.UpdateMyUserProfile")]
		OpsWorks_20130218_UpdateMyUserProfile = 0,
	}
	
	public enum UpdateRdsDbInstanceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.UpdateRdsDbInstance")]
		OpsWorks_20130218_UpdateRdsDbInstance = 0,
	}
	
	public enum UpdateStackX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.UpdateStack")]
		OpsWorks_20130218_UpdateStack = 0,
	}
	
	public enum UpdateUserProfileX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.UpdateUserProfile")]
		OpsWorks_20130218_UpdateUserProfile = 0,
	}
	
	public enum UpdateVolumeX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OpsWorks_20130218.UpdateVolume")]
		OpsWorks_20130218_UpdateVolume = 0,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

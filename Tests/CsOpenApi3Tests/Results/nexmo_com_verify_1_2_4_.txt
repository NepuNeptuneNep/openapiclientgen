//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ErrorThrottled
	{
		
		/// <summary>
		/// Additional information about the error
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Internal Trace ID
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="instance")]
		public string Instance { get; set; }
		
		/// <summary>
		/// Generic error message
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Link to error / remediation options
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Error
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CheckErrorResponse
	{
		
		/// <summary>
		/// If the `status` is non-zero, this explains the error encountered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error_text")]
		public string Error_text { get; set; }
		
		/// <summary>
		/// The `request_id` that you received in the response to the Verify request and used in the Verify check request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Code | Text | Description
		///-- | -- | --
		///0 | Success | The request was successfully accepted by Vonage.
		///1 | Throttled | You are trying to send more than the maximum of 30 requests per second.
		///2 | Your request is incomplete and missing the mandatory parameter `$parameter` | The stated parameter is missing.
		///3 | Invalid value for parameter `$parameter` | Invalid value for parameter. If you see Facility not allowed in the error text, check that you are using the correct Base URL in your request.
		///4 | Invalid credentials were provided | The supplied API key or secret in the request is either invalid or disabled.
		///5 | Internal Error | An error occurred processing this request in the Cloud Communications Platform.
		///6 | The Vonage platform was unable to process this message for the following reason: `$reason` | The request could not be routed.
		///16 | The code inserted does not match the expected value |
		///17 | The wrong code was provided too many times | You can run Verify check on a specific `request_id` up to three times unless a new verification code is generated. If you check a request more than three times, it is set to FAILED and you cannot check it again.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<CheckErrorResponseStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum CheckErrorResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="0")]
		_0 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="1")]
		_1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2")]
		_2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="3")]
		_3 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="4")]
		_4 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="5")]
		_5 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="6")]
		_6 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="16")]
		_16 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="17")]
		_17 = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CheckRequest
	{
		
		/// <summary>
		/// You can find your API key in your [account dashboard](https://dashboard.nexmo.com)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="api_key")]
		public string Api_key { get; set; }
		
		/// <summary>
		/// You can find your API secret in your [account dashboard](https://dashboard.nexmo.com)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="api_secret")]
		public string Api_secret { get; set; }
		
		/// <summary>
		/// The verification code entered by your user.
		/// Required
		/// Max length: 6
		/// Min length: 4
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		[System.ComponentModel.DataAnnotations.MinLength(4)]
		[System.ComponentModel.DataAnnotations.MaxLength(6)]
		public string Code { get; set; }
		
		/// <summary>
		/// (This field is no longer used)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_address")]
		public string Ip_address { get; set; }
		
		/// <summary>
		/// The Verify request to check. This is the `request_id` you received in the response to the Verify request.
		/// Required
		/// Max length: 32
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		[System.ComponentModel.DataAnnotations.MaxLength(32)]
		public string Request_id { get; set; }
	}
	
	/// <summary>
	/// Success
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CheckResponse
	{
		
		/// <summary>
		/// The currency code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public string Currency { get; set; }
		
		/// <summary>
		/// This field may not be present, depending on your pricing model. The
		///value indicates the cost (in EUR) of the calls made and messages sent
		///for the verification process. This value may be updated during and
		///shortly after the request completes because user input events can
		///overlap with message/call events. When this field is present, the total
		///cost of the verification is the sum of this field and the `price` field.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="estimated_price_messages_sent")]
		public string Estimated_price_messages_sent { get; set; }
		
		/// <summary>
		/// The ID of the verification event, such as an SMS or TTS call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="event_id")]
		public string Event_id { get; set; }
		
		/// <summary>
		/// The cost incurred for this request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public string Price { get; set; }
		
		/// <summary>
		/// The `request_id` that you received in the response to the Verify request and used in the Verify check request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// A value of `0` indicates that your user entered the correct code. If it is non-zero, check the `error_text`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// Error
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ControlErrorResponse
	{
		
		/// <summary>
		/// If the `status` is non-zero, this explains the error encountered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error_text")]
		public string Error_text { get; set; }
		
		/// <summary>
		/// Code | Text | Description
		///-- | -- | --
		///0 | Success | The request was successfully accepted by Vonage.
		///1 | Throttled | You are trying to send more than the maximum of 30 requests per second.
		///2 | Your request is incomplete and missing the mandatory parameter `$parameter` | The stated parameter is missing.
		///3 | Invalid value for parameter `$parameter` | Invalid value for parameter. If you see Facility not allowed in the error text, check that you are using the correct Base URL in your request.
		///4 | Invalid credentials were provided | The supplied API key or secret in the request is either invalid or disabled.
		///5 | Internal Error | An error occurred processing this request in the Cloud Communications Platform.
		///6 | The Vonage platform was unable to process this message for the following reason: `$reason` | The request could not be routed.
		///8 | The api_key you supplied is for an account that has been barred from submitting messages. |
		///9 | Partner quota exceeded | Your account does not have sufficient credit to process this request.
		///19 | For `cancel`: Either you have not waited at least 30 secs after sending a Verify request before cancelling or Verify has made too many attempts to deliver the verification code for this request and you must now wait for the process to complete. For `trigger_next_event`: All attempts to deliver the verification code for this request have completed and there are no remaining events to advance to.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<ControlErrorResponseStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ControlErrorResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="0")]
		_0 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="1")]
		_1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2")]
		_2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="3")]
		_3 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="4")]
		_4 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="5")]
		_5 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="6")]
		_6 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="8")]
		_8 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="9")]
		_9 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="19")]
		_19 = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ControlRequest
	{
		
		/// <summary>
		/// You can find your API key in your [account dashboard](https://dashboard.nexmo.com)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="api_key")]
		public string Api_key { get; set; }
		
		/// <summary>
		/// You can find your API secret in your [account dashboard](https://dashboard.nexmo.com)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="api_secret")]
		public string Api_secret { get; set; }
		
		/// <summary>
		/// The possible commands are `cancel` to request cancellation of the verification process, or `trigger_next_event` to advance  to the next verification event (if any). Cancellation is only possible 30 seconds after the start of the verification request and before the second event (either TTS or SMS) has taken place.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cmd")]
		public ControlRequestCmd Cmd { get; set; }
		
		/// <summary>
		/// The `request_id` you received in the response to the Verify request.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ControlRequestCmd
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cancel = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		trigger_next_event = 1,
	}
	
	/// <summary>
	/// Success
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ControlResponse
	{
		
		/// <summary>
		/// The `cmd` you sent in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="command")]
		public ControlRequestCmd Command { get; set; }
		
		/// <summary>
		/// `cmd` | Code | Description
		///-- | -- | --
		///Any | 0 | Success
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NetworkUnblock
	{
		
		/// <summary>
		/// The Network code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="network")]
		public string Network { get; set; }
		
		/// <summary>
		/// An optional duration the unblock will be applied for in seconds
		/// Minimum: 0
		/// Maximum: 86400
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unblock_duration")]
		[System.ComponentModel.DataAnnotations.Range(0, 86400)]
		public System.Nullable<System.Int32> Unblock_duration { get; set; }
	}
	
	/// <summary>
	/// Forbidden
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NetworkUnblockResponseForbidden
	{
		
		/// <summary>
		/// Verbose description of the server error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// The Instance ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instance")]
		public string Instance { get; set; }
		
		/// <summary>
		/// Full string text of the HTTP error code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// A URL link to the API documentation for this type of error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Invalid Duration
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NetworkUnblockResponseInvalidDuration
	{
		
		/// <summary>
		/// Verbose description of the server error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// The Instance ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instance")]
		public string Instance { get; set; }
		
		/// <summary>
		/// Detailed payload of errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invalid_parameters")]
		public NetworkUnblockResponseInvalidDurationInvalid_parameters[] NetworkUnblockResponseInvalidDurationInvalid_parameters { get; set; }
		
		/// <summary>
		/// Full string text of the HTTP error code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// A URL link to the API documentation for this type of error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class NetworkUnblockResponseInvalidDurationInvalid_parameters
	{
		
		/// <summary>
		/// The name of the parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The reason for the parameter error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
	}
	
	/// <summary>
	/// Not Found
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NetworkUnblockResponseNotFound
	{
		
		/// <summary>
		/// Verbose description of the server error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// InstanceID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instance")]
		public string Instance { get; set; }
		
		/// <summary>
		/// Full string text of the HTTP error code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// A URL link to the API documentation for this type of error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Success
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NetworkUnblockResponseOk
	{
		
		/// <summary>
		/// The unique network ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="network")]
		public string Network { get; set; }
		
		/// <summary>
		/// Gives the DateTime when the unblock will expire.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unblocked_until")]
		public string Unblocked_until { get; set; }
	}
	
	/// <summary>
	/// Invalid Network
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NetworkUnblockResponseUnprocessableNetwork
	{
		
		/// <summary>
		/// Verbose description of the server error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// The Instance ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instance")]
		public string Instance { get; set; }
		
		/// <summary>
		/// Detailed payload of errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invalid_parameters")]
		public NetworkUnblockResponseUnprocessableNetworkInvalid_parameters[] NetworkUnblockResponseUnprocessableNetworkInvalid_parameters { get; set; }
		
		/// <summary>
		/// Full string text of the HTTP error code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// A URL link to the API documentation for this type of error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class NetworkUnblockResponseUnprocessableNetworkInvalid_parameters
	{
		
		/// <summary>
		/// The name of the parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The reason for the parameter error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Psd2Request
	{
		
		/// <summary>
		/// The decimal amount of the payment to be confirmed, in Euros
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public float Amount { get; set; }
		
		/// <summary>
		/// You can find your API key in your [account dashboard](https://dashboard.nexmo.com)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="api_key")]
		public string Api_key { get; set; }
		
		/// <summary>
		/// You can find your API secret in your [account dashboard](https://dashboard.nexmo.com)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="api_secret")]
		public string Api_secret { get; set; }
		
		/// <summary>
		/// The length of the verification code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code_length")]
		public System.Nullable<Psd2RequestCode_length> Code_length { get; set; }
		
		/// <summary>
		/// If you do not provide `number` in international format or you are not sure if `number` is correctly formatted, specify the two-character country code in `country`. Verify will then format the number for you.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// By default, the SMS or text-to-speech (TTS) message is generated in the locale that matches the `number`. For example, the text message or TTS message for a `33*` number is sent in French. Use this parameter to explicitly control the language used.
		///*Note: Voice calls in English for `bg-bg`, `ee-et`, `ga-ie`, `lv-lv`, `lt-lt`, `mt-mt`, `sk-sk`, `sk-si`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lg")]
		public System.Nullable<Psd2RequestLg> Lg { get; set; }
		
		/// <summary>
		/// Specifies the wait time in seconds between attempts to deliver the verification code.
		/// Minimum: 60
		/// Maximum: 900
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next_event_wait")]
		[System.ComponentModel.DataAnnotations.Range(60, 900)]
		public System.Nullable<System.Int32> Next_event_wait { get; set; }
		
		/// <summary>
		/// The mobile or landline phone number to verify. Unless you are setting `country` explicitly, this number must be in [E.164](https://en.wikipedia.org/wiki/E.164) format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="number")]
		public string Number { get; set; }
		
		/// <summary>
		/// An alphanumeric string to indicate to the user the name of the recipient that they are confirming a payment to.
		/// Required
		/// Max length: 18
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="payee")]
		[System.ComponentModel.DataAnnotations.MaxLength(18)]
		public string Payee { get; set; }
		
		/// <summary>
		/// How long the generated verification code is valid for, in seconds. When you specify both `pin_expiry` and `next_event_wait` then `pin_expiry` must be an integer multiple of `next_event_wait` otherwise `pin_expiry` is defaulted to equal next_event_wait. See [changing the event timings](https://developer.nexmo.com/verify/guides/changing-default-timings).
		/// Minimum: 60
		/// Maximum: 3600
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pin_expiry")]
		[System.ComponentModel.DataAnnotations.Range(60, 3600)]
		public System.Nullable<System.Int32> Pin_expiry { get; set; }
		
		/// <summary>
		/// Selects the predefined sequence of SMS and TTS (Text To Speech) actions to use in order to convey the PIN to your user. For example, an id of 1 identifies the workflow SMS - TTS - TTS. For a list of all workflows and their associated ids, please visit the [developer portal](https://developer.nexmo.com/verify/guides/workflows-and-events).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_id")]
		public System.Nullable<Psd2RequestWorkflow_id> Workflow_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum Psd2RequestCode_length
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_6 = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum Psd2RequestLg
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-gb")]
		enMinusgb = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="bg-bg")]
		bgMinusbg = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="cs-cz")]
		csMinuscz = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-dk")]
		daMinusdk = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-de")]
		deMinusde = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ee-et")]
		eeMinuset = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="el-gr")]
		elMinusgr = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-es")]
		esMinuses = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-fi")]
		fiMinusfi = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-fr")]
		frMinusfr = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ga-ie")]
		gaMinusie = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hu-hu")]
		huMinushu = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-it")]
		itMinusit = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="lv-lv")]
		lvMinuslv = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="lt-lt")]
		ltMinuslt = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="mt-mt")]
		mtMinusmt = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-nl")]
		nlMinusnl = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-pl")]
		plMinuspl = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sk-sk")]
		skMinussk = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sl-si")]
		slMinussi = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-se")]
		svMinusse = 20,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum Psd2RequestWorkflow_id
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_3 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_5 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_6 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_7 = 7,
	}
	
	/// <summary>
	/// Error
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RequestErrorResponse
	{
		
		/// <summary>
		/// If `status` is non-zero, this explains the error encountered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error_text")]
		public string Error_text { get; set; }
		
		/// <summary>
		/// The Network ID of the blocking network, if relevant to the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="network")]
		public string Network { get; set; }
		
		/// <summary>
		/// The unique ID of the Verify request. This may be blank in an error situation.
		/// Max length: 32
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		[System.ComponentModel.DataAnnotations.MaxLength(32)]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Code | Text | Description
		///-- | -- | --
		///0 | Success | The request was successfully accepted by Vonage.
		///1 | Throttled | You are trying to send more than the maximum of 30 requests per second.
		///2 | Your request is incomplete and missing the mandatory parameter `$parameter` | The stated parameter is missing.
		///3 | Invalid value for parameter `$parameter` | Invalid value for parameter. If you see Facility not allowed in the error text, check that you are using the correct Base URL in your request.
		///4 | Invalid credentials were provided | The supplied API key or secret in the request is either invalid or disabled.
		///5 | Internal Error | An error occurred processing this request in the Cloud Communications Platform.
		///6 | The Vonage platform was unable to process this message for the following reason: `$reason` | The request could not be routed.
		///7 | The number you are trying to verify is blacklisted for verification. | Returns a `network` property but no `request_id` will be present in the response.
		///8 | The api_key you supplied is for an account that has been barred from submitting messages. |
		///9 | Partner quota exceeded | Your account does not have sufficient credit to process this request.
		///10 | Concurrent verifications to the same number are not allowed. | This will return a `request_id`.
		///15 | The destination number is not in a supported network | The request has been rejected. Find out more about this error in the [Knowledge Base](https://help.nexmo.com/hc/en-us/articles/360018406532-Verify-On-demand-Service-to-High-Risk-Countries)
		///20 | This account does not support the parameter: pin_code. | Only certain accounts have the ability to set the `pin_code`. Please contact your account manager for more information.
		///29 | Non-Permitted Destination | Your Vonage account is still in demo mode. While in demo mode you must add target numbers to the approved list for your account. Add funds to your account to remove this limitation.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<RequestErrorResponseStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum RequestErrorResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="0")]
		_0 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="1")]
		_1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="2")]
		_2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="3")]
		_3 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="4")]
		_4 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="5")]
		_5 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="6")]
		_6 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="7")]
		_7 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="8")]
		_8 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="9")]
		_9 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="10")]
		_10 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="15")]
		_15 = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="20")]
		_20 = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="29")]
		_29 = 13,
	}
	
	/// <summary>
	/// Success
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RequestResponse
	{
		
		/// <summary>
		/// The unique ID of the Verify request. You need this `request_id` for the Verify check.
		/// Max length: 32
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		[System.ComponentModel.DataAnnotations.MaxLength(32)]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Indicates the outcome of the request; zero is success
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	/// <summary>
	/// Error
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SearchErrorResponse
	{
		
		/// <summary>
		/// If `status` is not `SUCCESS`, this message explains the issue encountered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error_text")]
		public string Error_text { get; set; }
		
		/// <summary>
		/// The `request_id` that you received in the response to the Verify request and used in the Verify search request. May be empty in an error situation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// Code | Description
		///-- | --
		///IN PROGRESS | The search is still in progress.
		///SUCCESS | Your user entered a correct verification code.
		///FAILED | Your user entered an incorrect code more than three times.
		///EXPIRED | Your user did not enter a code before the `pin_expiry` time elapsed.
		///CANCELLED | The verification process was cancelled by a Verify control request.
		///101 | You supplied an invalid `request_id`, or the data is not available. Note that for recently-completed requests, there can be a delay of up to 1 minute before the results are available in search.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<SearchErrorResponseStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum SearchErrorResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IN PROGRESS")]
		IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPIRED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="101")]
		_101 = 4,
	}
	
	/// <summary>
	/// Success
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SearchResponse
	{
		
		/// <summary>
		/// The Vonage account ID the request was for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The list of checks made for this verification and their outcomes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="checks")]
		public SearchResponseChecks[] SearchResponseChecks { get; set; }
		
		/// <summary>
		/// The currency code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public string Currency { get; set; }
		
		/// <summary>
		/// The date and time the verification request was completed. This response parameter is in the following format YYYY-MM-DD HH:MM:SS.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_finalized")]
		public string Date_finalized { get; set; }
		
		/// <summary>
		/// The date and time the verification request was submitted, in the following format YYYY-MM-DD HH:MM:SS.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_submitted")]
		public string Date_submitted { get; set; }
		
		/// <summary>
		/// This field may not be present, depending on your pricing model. The
		///value indicates the cost (in EUR) of the calls made and messages sent
		///for the verification process. This value may be updated during and
		///shortly after the request completes because user input events can
		///overlap with message/call events. When this field is present, the total
		///cost of the verification is the sum of this field and the `price` field.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="estimated_price_messages_sent")]
		public string Estimated_price_messages_sent { get; set; }
		
		/// <summary>
		/// The events that have taken place to verify this number, and their unique identifiers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="events")]
		public SearchResponseEvents[] SearchResponseEvents { get; set; }
		
		/// <summary>
		/// The time the first verification attempt was made, in the following format YYYY-MM-DD HH:MM:SS.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_event_date")]
		public string First_event_date { get; set; }
		
		/// <summary>
		/// The time the last verification attempt was made, in the following format YYYY-MM-DD HH:MM:SS.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_event_date")]
		public string Last_event_date { get; set; }
		
		/// <summary>
		/// The phone number this verification request was used for.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="number")]
		public string Number { get; set; }
		
		/// <summary>
		/// The cost incurred for this verification request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public string Price { get; set; }
		
		/// <summary>
		/// The `request_id` that you received in the response to the Verify request and used in the Verify search request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request_id")]
		public string Request_id { get; set; }
		
		/// <summary>
		/// The `sender_id` you provided in the Verify request.
		/// </summary>
		[System.ComponentModel.DefaultValue("verify")]
		[System.Runtime.Serialization.DataMember(Name="sender_id")]
		public string Sender_id { get; set; } = "verify";
		
		/// <summary>
		/// Code | Description
		///-- | --
		///IN PROGRESS | The search is still in progress.
		///SUCCESS | Your user entered a correct verification code.
		///FAILED | Your user entered an incorrect code more than three times.
		///EXPIRED | Your user did not enter a code before the `pin_expiry` time elapsed.
		///CANCELLED | The verification process was cancelled by a Verify control request.
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<SearchResponseStatus> Status { get; set; }
	}
	
	public class SearchResponseChecks
	{
		
		/// <summary>
		/// The code supplied with this check request
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The date and time this check was received (in the format YYYY-MM-DD HH:MM:SS)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_received")]
		public string Date_received { get; set; }
		
		/// <summary>
		/// The IP address, if available (this field is no longer used).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_address")]
		public string Ip_address { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<SearchResponseChecksStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum SearchResponseChecksStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALID = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID = 1,
	}
	
	public class SearchResponseEvents
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<SearchResponseEventsType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum SearchResponseEventsType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tts = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sms = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum SearchResponseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IN PROGRESS")]
		IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPIRED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VerifyRequest
	{
		
		/// <summary>
		/// You can find your API key in your [account dashboard](https://dashboard.nexmo.com)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="api_key")]
		public string Api_key { get; set; }
		
		/// <summary>
		/// You can find your API secret in your [account dashboard](https://dashboard.nexmo.com)
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="api_secret")]
		public string Api_secret { get; set; }
		
		/// <summary>
		/// An 18-character alphanumeric string you can use to personalize the verification request SMS body, to help users identify your company or application name. For example: "Your `Acme Inc` PIN is ..."
		/// Required
		/// Max length: 18
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="brand")]
		[System.ComponentModel.DataAnnotations.MaxLength(18)]
		public string Brand { get; set; }
		
		/// <summary>
		/// The length of the verification code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code_length")]
		public System.Nullable<VerifyRequestCode_length> Code_length { get; set; }
		
		/// <summary>
		/// If you do not provide `number` in international format or you are not sure if `number` is correctly formatted, specify the two-character country code in `country`. Verify will then format the number for you.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// By default, the SMS or text-to-speech (TTS) message is generated in the locale that matches the `number`. For example, the text message or TTS message for a `33*` number is sent in French. Use this parameter to explicitly control the language used for the Verify request. A list of languages is available: <https://developer.nexmo.com/verify/guides/verify-languages>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lg")]
		public System.Nullable<VerifyRequestLg> Lg { get; set; }
		
		/// <summary>
		/// Specifies the wait time in seconds between attempts to deliver the verification code.
		/// Minimum: 60
		/// Maximum: 900
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next_event_wait")]
		[System.ComponentModel.DataAnnotations.Range(60, 900)]
		public System.Nullable<System.Int32> Next_event_wait { get; set; }
		
		/// <summary>
		/// The mobile or landline phone number to verify. Unless you are setting `country` explicitly, this number must be in [E.164](https://en.wikipedia.org/wiki/E.164) format.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="number")]
		public string Number { get; set; }
		
		/// <summary>
		/// A custom PIN to send to the user. If a PIN is not provided, Verify will generate a random PIN for you. <b>This feature is not enabled by default</b> - please discuss with your Account Manager if you would like it enabled. If this feature is not enabled on your account, error status `20` will be returned.
		/// Minimum: 4
		/// Maximum: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pin_code")]
		public string Pin_code { get; set; }
		
		/// <summary>
		/// How long the generated verification code is valid for, in seconds. When you specify both `pin_expiry` and `next_event_wait` then `pin_expiry` must be an integer multiple of `next_event_wait` otherwise `pin_expiry` is defaulted to equal next_event_wait. See [changing the event timings](https://developer.nexmo.com/verify/guides/changing-default-timings).
		/// Minimum: 60
		/// Maximum: 3600
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pin_expiry")]
		[System.ComponentModel.DataAnnotations.Range(60, 3600)]
		public System.Nullable<System.Int32> Pin_expiry { get; set; }
		
		/// <summary>
		/// An 11-character alphanumeric string that represents the [identity of the sender](https://developer.nexmo.com/messaging/sms/guides/custom-sender-id) of the verification request. Depending on the destination of the phone number you are sending the verification SMS to, restrictions might apply.
		/// Max length: 11
		/// </summary>
		[System.ComponentModel.DefaultValue("VERIFY")]
		[System.Runtime.Serialization.DataMember(Name="sender_id")]
		[System.ComponentModel.DataAnnotations.MaxLength(11)]
		public string Sender_id { get; set; } = "VERIFY";
		
		/// <summary>
		/// Selects the predefined sequence of SMS and TTS (Text To Speech) actions to use in order to convey the PIN to your user. For example, an id of 1 identifies the workflow SMS - TTS - TTS. For a list of all workflows and their associated ids, please visit the [developer portal](https://developer.nexmo.com/verify/guides/workflows-and-events).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_id")]
		public System.Nullable<VerifyRequestWorkflow_id> Workflow_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum VerifyRequestCode_length
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_6 = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum VerifyRequestLg
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ar-xa")]
		arMinusxa = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="cs-cz")]
		csMinuscz = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="cy-cy")]
		cyMinuscy = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="cy-gb")]
		cyMinusgb = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="da-dk")]
		daMinusdk = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-de")]
		deMinusde = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="el-gr")]
		elMinusgr = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-au")]
		enMinusau = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-gb")]
		enMinusgb = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-in")]
		enMinusin = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-us")]
		enMinusus = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-es")]
		esMinuses = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-mx")]
		esMinusmx = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-us")]
		esMinusus = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fi-fi")]
		fiMinusfi = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fil-ph")]
		filMinusph = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-ca")]
		frMinusca = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-fr")]
		frMinusfr = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hi-in")]
		hiMinusin = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hu-hu")]
		huMinushu = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="id-id")]
		idMinusid = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="is-is")]
		isMinusis = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-it")]
		itMinusit = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ja-jp")]
		jaMinusjp = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ko-kr")]
		koMinuskr = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nb-no")]
		nbMinusno = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="nl-nl")]
		nlMinusnl = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pl-pl")]
		plMinuspl = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pt-br")]
		ptMinusbr = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pt-pt")]
		ptMinuspt = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ro-ro")]
		roMinusro = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ru-ru")]
		ruMinusru = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="sv-se")]
		svMinusse = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="th-th")]
		thMinusth = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="tr-tr")]
		trMinustr = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="vi-vn")]
		viMinusvn = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="yue-cn")]
		yueMinuscn = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-cn")]
		zhMinuscn = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-tw")]
		zhMinustw = 38,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum VerifyRequestWorkflow_id
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_3 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_5 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_6 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_7 = 7,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Request a network unblock
		/// Request to unblock a network that has been blocked due to potential fraud detection
		/// <div class="Vlt-callout Vlt-callout--critical">
		/// <div class="Vlt-callout__content">
		/// <h4>Network Unblock is switched off by default.</h4>
		/// Please contact Sales to enable the Network Unblock API for your account.
		/// </div>
		/// </div>
		/// NetworkUnblock network-unblock
		/// </summary>
		public async Task NetworkUnblockAsync(NetworkUnblock requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "network-unblock";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Verify Search
		/// Use Verify search to check the status of past or current verification requests:
		/// 
		/// 1. Send a Verify search request containing the `request_id`s of the verification requests you are interested in.
		/// 2. Use the `status` of each verification request in the `checks` array of the response object to determine the outcome.
		/// 
		/// *Note that this endpoint is available by `POST` request as well as `GET`.*
		/// VerifySearch search/{format}
		/// </summary>
		/// <param name="format">The response format.</param>
		/// <param name="request_id">The `request_id` you received in the Verify Request Response. Required if `request_ids` not provided.</param>
		/// <param name="request_ids">More than one `request_id`. Each `request_id` is a new parameter in the Verify Search request. Required if `request_id` not provided.</param>
		/// <returns>OK</returns>
		public async Task<SearchResponse> VerifySearchAsync(VerifyCheckFormat format, string api_key, string api_secret, string request_id, string[] request_ids, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "search/"+format+"?api_key=" + (api_key==null? "" : System.Uri.EscapeDataString(api_key))+"&api_secret=" + (api_secret==null? "" : System.Uri.EscapeDataString(api_secret))+"&request_id=" + (request_id==null? "" : System.Uri.EscapeDataString(request_id))+"&"+string.Join("&", request_ids.Select(z => $"request_ids={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<SearchResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum VerifyCheckFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		json = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		xml = 1,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

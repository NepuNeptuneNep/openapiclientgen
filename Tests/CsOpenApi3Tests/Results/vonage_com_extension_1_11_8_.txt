//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BasicUser
	{
		
		/// <summary>
		/// Email address of the user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// First name of the user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// Last name of the user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// Login name of the user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="login_name")]
		public string Login_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DID
	{
		
		/// <summary>
		/// Custom tag associated with the phone number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_tag")]
		public string Custom_tag { get; set; }
		
		/// <summary>
		/// Phone number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetailedInvalidParam
	{
		
		/// <summary>
		/// Invalid property name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Invalid property reason
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndUserRoute
	{
		
		/// <summary>
		/// Block Caller ID status of the extension
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="block_caller_id")]
		public System.Nullable<System.Boolean> Block_caller_id { get; set; }
		
		/// <summary>
		/// Caller ID of the extension
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="caller_id")]
		public string Caller_id { get; set; }
		
		/// <summary>
		/// Collection of phone numbers assigned to the extension
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dids")]
		public DID[] Dids { get; set; }
		
		/// <summary>
		/// Do Not Disturb status of the extension
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dnd_enabled")]
		public System.Nullable<System.Boolean> Dnd_enabled { get; set; }
		
		/// <summary>
		/// Collection of handsets assigned to the extension
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="extension_handsets")]
		public Line[] Extension_handsets { get; set; }
		
		/// <summary>
		/// Extension number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="extension_number")]
		public string Extension_number { get; set; }
		
		/// <summary>
		/// Unique identifier of the assigned location
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location_id")]
		public System.Nullable<System.Double> Location_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="user")]
		public BasicUser User { get; set; }
		
		/// <summary>
		/// Voicemail transcription status of the location
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vtt_enabled")]
		public System.Nullable<System.Boolean> Vtt_enabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Line
	{
		
		/// <summary>
		/// Name of the handset
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="handset_name")]
		public string Handset_name { get; set; }
		
		/// <summary>
		/// SIP identifier of the handset
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sip_id")]
		public string Sip_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndUserRouteEmbeddedObject
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public EndUserRoute Data { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndUserRouteHalResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EndUserRouteEmbeddedObject _embedded { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Links _links { get; set; }
		
		/// <summary>
		/// Current page number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Double> Page { get; set; }
		
		/// <summary>
		/// Number of records per page
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="page_size")]
		public System.Nullable<System.Double> Page_size { get; set; }
		
		/// <summary>
		/// Total number of records
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Double> Total_items { get; set; }
		
		/// <summary>
		/// Total number of pages
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_pages")]
		public System.Nullable<System.Double> Total_pages { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Links
	{
		
		/// <summary>
		/// URL to the first page of records
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first")]
		public FirstHref First { get; set; }
		
		/// <summary>
		/// URL to the next page of records
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next")]
		public NextHref Next { get; set; }
		
		/// <summary>
		/// URL to the previous page of records
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prev")]
		public PrevHref Prev { get; set; }
		
		/// <summary>
		/// URL to the current page of records
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="self")]
		public SelfHref Self { get; set; }
	}
	
	/// <summary>
	/// URL to the first page of records
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FirstHref
	{
		
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
	}
	
	/// <summary>
	/// URL to the next page of records
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NextHref
	{
		
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
	}
	
	/// <summary>
	/// URL to the previous page of records
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PrevHref
	{
		
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
	}
	
	/// <summary>
	/// URL to the current page of records
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SelfHref
	{
		
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ErrorResponse
	{
		
		/// <summary>
		/// Error message
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="msg")]
		public string Msg { get; set; }
		
		/// <summary>
		/// Http Response Code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
	}
	
	/// <summary>
	/// URL to the last page of records
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LastHref
	{
		
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationErrorsResponse
	{
		
		/// <summary>
		/// Error Track ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instance")]
		public string Instance { get; set; }
		
		/// <summary>
		/// Invalid parameters and their reason for failing
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="invalid_parameters")]
		public DetailedInvalidParam[] Invalid_parameters { get; set; }
		
		/// <summary>
		/// Error status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<System.Double> Status { get; set; }
		
		/// <summary>
		/// Error title
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Get account extensions data by account ID
		/// ExtensionCtrl_getAccountExtensions api/accounts/{account_id}/extensions
		/// </summary>
		/// <param name="account_id">The Vonage Business Cloud account ID</param>
		/// <param name="page_size">Number of records per page</param>
		/// <param name="page">Current page number</param>
		/// <param name="location_id">Filter by location id</param>
		/// <param name="phone_number">Filter by phone number</param>
		/// <param name="login_name">Filter by login name</param>
		/// <param name="email">Filter by email address</param>
		/// <returns>Success</returns>
		public async Task<EndUserRouteHalResponse> ExtensionCtrl_getAccountExtensionsAsync(string account_id, double page_size, double page, double location_id, string phone_number, string login_name, string email, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/accounts/"+ (account_id==null? "" : System.Uri.EscapeDataString(account_id))+"/extensions&page_size="+page_size+"&page="+page+"&location_id="+location_id+"&phone_number=" + (phone_number==null? "" : System.Uri.EscapeDataString(phone_number))+"&login_name=" + (login_name==null? "" : System.Uri.EscapeDataString(login_name))+"&email=" + (email==null? "" : System.Uri.EscapeDataString(email));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<EndUserRouteHalResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get extension data by account ID and extension number
		/// ExtensionCtrl_getAccountExtensionByID api/accounts/{account_id}/extensions/{extension_number}
		/// </summary>
		/// <param name="account_id">The Vonage Business Cloud account ID</param>
		/// <param name="extension_number">The extension number</param>
		/// <returns>Success</returns>
		public async Task<EndUserRouteHalResponse> ExtensionCtrl_getAccountExtensionByIDAsync(string account_id, double extension_number, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/accounts/"+ (account_id==null? "" : System.Uri.EscapeDataString(account_id))+"/extensions/"+extension_number;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<EndUserRouteHalResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActivateEvaluationFormResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int EvaluationFormVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidParameterException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThrottlingException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalServiceException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceConflictException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidRequestException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceQuotaExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LimitExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateDefaultVocabularyResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateInstanceStorageConfigResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AssociationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StorageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		S3 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KINESIS_VIDEO_STREAM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KINESIS_STREAM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KINESIS_FIREHOSE = 3,
	}
	
	/// <summary>
	/// Information about the Amazon Simple Storage Service (Amazon S3) storage type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3Config
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BucketName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BucketPrefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EncryptionConfig EncryptionConfig { get; set; }
	}
	
	/// <summary>
	/// The encryption configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EncryptionConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EncryptionType EncryptionType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KeyId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EncryptionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KMS = 0,
	}
	
	/// <summary>
	/// Configuration information of a Kinesis video stream.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KinesisVideoStreamConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Prefix { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int RetentionPeriodHours { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EncryptionConfig EncryptionConfig { get; set; }
	}
	
	/// <summary>
	/// Configuration information of a Kinesis data stream.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KinesisStreamConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StreamArn { get; set; }
	}
	
	/// <summary>
	/// Configuration information of a Kinesis Data Firehose delivery stream.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KinesisFirehoseConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FirehoseArn { get; set; }
	}
	
	/// <summary>
	/// Contains information about the queue and channel for which priority and delay can be set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RoutingProfileQueueConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RoutingProfileQueueReference QueueReference { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Priority { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Delay { get; set; }
	}
	
	/// <summary>
	/// Contains the channel and queue identifier for a routing profile.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RoutingProfileQueueReference
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string QueueId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Channel Channel { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Channel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VOICE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TASK = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateSecurityKeyResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AssociationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClaimPhoneNumberResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumberId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumberArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdempotencyException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAgentStatusResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AgentStatusARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AgentStatusId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DuplicateResourceException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateContactFlowResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactFlowId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactFlowArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidContactFlowException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateContactFlowModuleResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidContactFlowModuleException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEvaluationFormResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormArn { get; set; }
	}
	
	/// <summary>
	/// Information about an item from an evaluation form. The item must be either a section or a question.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationFormItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormSection Section { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormQuestion Question { get; set; }
	}
	
	/// <summary>
	/// Information about a section from an evaluation form. A section can contain sections and/or questions. Evaluation forms can only contain sections and subsections (two level nesting).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationFormSection
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RefId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Instructions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormItem[] Items { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Weight { get; set; }
	}
	
	/// <summary>
	/// Information about a question from an evaluation form.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationFormQuestion
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Instructions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RefId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> NotApplicableEnabled { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormQuestionType QuestionType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormQuestionTypeProperties QuestionTypeProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Weight { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EvaluationFormQuestionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEXT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGLESELECT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NUMERIC = 2,
	}
	
	/// <summary>
	/// Information about properties for a question in an evaluation form. The question type properties must be either for a numeric question or a single select question.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationFormQuestionTypeProperties
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormNumericQuestionProperties Numeric { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormSingleSelectQuestionProperties SingleSelect { get; set; }
	}
	
	/// <summary>
	/// Information about properties for a numeric question in an evaluation form.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationFormNumericQuestionProperties
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MinValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MaxValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormNumericQuestionOption[] Options { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormNumericQuestionAutomation Automation { get; set; }
	}
	
	/// <summary>
	/// Information about the option range used for scoring in numeric questions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationFormNumericQuestionOption
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MinValue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MaxValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Score { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutomaticFail { get; set; }
	}
	
	/// <summary>
	/// Information about the automation configuration in numeric questions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationFormNumericQuestionAutomation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NumericQuestionPropertyValueAutomation PropertyValue { get; set; }
	}
	
	/// <summary>
	/// <p>Information about the property value used in automation of a numeric questions. Label values are associated with minimum and maximum values for the numeric question.</p> <ul> <li> <p>Sentiment scores have a minimum value of -5 and maximum value of 5.</p> </li> <li> <p> Duration labels, such as <code>NON_TALK_TIME</code>, <code>CONTACT_DURATION</code>, <code>AGENT_INTERACTION_DURATION</code>, <code>CUSTOMER_HOLD_TIME</code> have a minimum value of 0 and maximum value of 28800.</p> </li> <li> <p>Percentages have a minimum value of 0 and maximum value of 100. </p> </li> <li> <p> <code>NUMBER_OF_INTERRUPTIONS</code> has a minimum value of 0 and maximum value of 1000.</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumericQuestionPropertyValueAutomation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NumericQuestionPropertyAutomationLabel Label { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NumericQuestionPropertyAutomationLabel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OVERALL_CUSTOMER_SENTIMENT_SCORE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OVERALL_AGENT_SENTIMENT_SCORE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NON_TALK_TIME = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NON_TALK_TIME_PERCENTAGE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NUMBER_OF_INTERRUPTIONS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACT_DURATION = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGENT_INTERACTION_DURATION = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOMER_HOLD_TIME = 7,
	}
	
	/// <summary>
	/// Information about the options in single select questions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationFormSingleSelectQuestionProperties
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormSingleSelectQuestionOption[] Options { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormSingleSelectQuestionDisplayMode DisplayAs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormSingleSelectQuestionAutomation Automation { get; set; }
	}
	
	/// <summary>
	/// Information about the automation configuration in single select questions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationFormSingleSelectQuestionOption
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RefId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Text { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Score { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutomaticFail { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EvaluationFormSingleSelectQuestionDisplayMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DROPDOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RADIO = 1,
	}
	
	/// <summary>
	/// Information about the automation configuration in single select questions. Automation options are evaluated in order, and the first matched option is applied. If no automation option matches, and there is a default option, then the default option is applied.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationFormSingleSelectQuestionAutomation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormSingleSelectQuestionAutomationOption[] Options { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultOptionRefId { get; set; }
	}
	
	/// <summary>
	/// Information about the automation option of a single select question.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationFormSingleSelectQuestionAutomationOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SingleSelectQuestionRuleCategoryAutomation RuleCategory { get; set; }
	}
	
	/// <summary>
	/// Information about the automation option based on a rule category for a single select question.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SingleSelectQuestionRuleCategoryAutomation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Category { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SingleSelectQuestionRuleCategoryAutomationCondition Condition { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OptionRefId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SingleSelectQuestionRuleCategoryAutomationCondition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRESENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_PRESENT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EvaluationFormScoringMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUESTION_ONLY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SECTION_ONLY = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EvaluationFormScoringStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateHoursOfOperationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string HoursOfOperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HoursOfOperationArn { get; set; }
	}
	
	/// <summary>
	/// Contains information about the hours of operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HoursOfOperationConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HoursOfOperationDays Day { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HoursOfOperationTimeSlice StartTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HoursOfOperationTimeSlice EndTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum HoursOfOperationDays
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUNDAY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONDAY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TUESDAY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEDNESDAY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THURSDAY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FRIDAY = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SATURDAY = 6,
	}
	
	/// <summary>
	/// The start time or end time for an hours of operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HoursOfOperationTimeSlice
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Hours { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Minutes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateInstanceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateIntegrationAssociationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationAssociationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationAssociationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateParticipantResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ParticipantTokenCredentials ParticipantCredentials { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParticipantId { get; set; }
	}
	
	/// <summary>
	/// The credentials used by the participant.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParticipantTokenCredentials
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ParticipantToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Expiry { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ParticipantRole
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOMER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYSTEM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM_BOT = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreatePromptResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PromptARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PromptId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateQueueResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string QueueArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string QueueId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateQuickConnectResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string QuickConnectARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string QuickConnectId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum QuickConnectType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PHONE_NUMBER = 2,
	}
	
	/// <summary>
	/// Contains information about the quick connect configuration settings for a user. The contact flow must be of type Transfer to Agent.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserQuickConnectConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string UserId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactFlowId { get; set; }
	}
	
	/// <summary>
	/// Contains information about a queue for a quick connect. The flow must be of type Transfer to Queue.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QueueQuickConnectConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string QueueId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactFlowId { get; set; }
	}
	
	/// <summary>
	/// Contains information about a phone number for a quick connect.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhoneNumberQuickConnectConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateRoutingProfileResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RoutingProfileArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoutingProfileId { get; set; }
	}
	
	/// <summary>
	/// Contains information about which channels are supported, and how many contacts an agent can have on a channel simultaneously.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MediaConcurrency
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Channel Channel { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Concurrency { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CrossChannelBehavior CrossChannelBehavior { get; set; }
	}
	
	/// <summary>
	/// Defines the cross-channel routing behavior that allows an agent working on a contact in one channel to be offered a contact from a different channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CrossChannelBehavior
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BehaviorType BehaviorType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BehaviorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROUTE_CURRENT_CHANNEL_ONLY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROUTE_ANY_CHANNEL = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateRuleResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RuleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RuleId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EventSourceName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnPostCallAnalysisAvailable = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnRealTimeCallAnalysisAvailable = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnPostChatAnalysisAvailable = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnZendeskTicketCreate = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnZendeskTicketStatusUpdate = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnSalesforceCaseCreate = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OnContactEvaluationSubmit = 6,
	}
	
	/// <summary>
	/// Information about the action to be performed when a rule is triggered.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RuleAction
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionType ActionType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskActionDefinition TaskAction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventBridgeActionDefinition EventBridgeAction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssignContactCategoryActionDefinition AssignContactCategoryAction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SendNotificationActionDefinition SendNotificationAction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ActionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_TASK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASSIGN_CONTACT_CATEGORY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GENERATE_EVENTBRIDGE_EVENT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEND_NOTIFICATION = 3,
	}
	
	/// <summary>
	/// Information about the task action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TaskActionDefinition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactFlowId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactReferences References { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContactReferences
	{
	}
	
	/// <summary>
	/// The EventBridge action definition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventBridgeActionDefinition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// <p>This action must be set if <code>TriggerEventSource</code> is one of the following values: <code>OnPostCallAnalysisAvailable</code> | <code>OnRealTimeCallAnalysisAvailable</code> | <code>OnPostChatAnalysisAvailable</code>. Contact is categorized using the rule name.</p> <p> <code>RuleName</code> is used as <code>ContactCategory</code>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssignContactCategoryActionDefinition
	{
	}
	
	/// <summary>
	/// Information about the send notification action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendNotificationActionDefinition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NotificationDeliveryType DeliveryMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Subject { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Content { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NotificationContentType ContentType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NotificationRecipientType Recipient { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NotificationDeliveryType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAIL = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NotificationContentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLAIN_TEXT = 0,
	}
	
	/// <summary>
	/// The type of notification recipient.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotificationRecipientType
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UserTagMap UserTags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] UserIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserTagMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSecurityProfileResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SecurityProfileId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecurityProfileArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateTaskTemplateResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	/// Information about a required field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RequiredFieldInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateFieldIdentifier Id { get; set; }
	}
	
	/// <summary>
	/// The identifier of the task template field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TaskTemplateFieldIdentifier
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Indicates a field that is read-only to an agent.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReadOnlyFieldInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateFieldIdentifier Id { get; set; }
	}
	
	/// <summary>
	/// A field that is invisible to an agent.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvisibleFieldInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateFieldIdentifier Id { get; set; }
	}
	
	/// <summary>
	/// Describes a default field and its corresponding value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TaskTemplateDefaultFieldValue
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateFieldIdentifier Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultValue { get; set; }
	}
	
	/// <summary>
	/// Describes a single task template field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TaskTemplateField
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateFieldIdentifier Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateFieldType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SingleSelectOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TaskTemplateFieldType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NAME = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESCRIPTION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCHEDULED_TIME = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUICK_CONNECT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		URL = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NUMBER = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEXT = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEXT_AREA = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATE_TIME = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOOLEAN = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGLE_SELECT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAIL = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PropertyValidationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateTrafficDistributionGroupResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotReadyException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateUseCaseResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string UseCaseId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UseCaseArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateUserResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string UserId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PhoneType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOFT_PHONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESK_PHONE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateUserHierarchyGroupResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string HierarchyGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HierarchyGroupArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateVocabularyResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VocabularyArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VocabularyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VocabularyState State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VocabularyState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATION_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATION_FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_IN_PROGRESS = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeactivateEvaluationFormResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int EvaluationFormVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteContactFlowResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteContactFlowModuleResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceInUseException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteTaskTemplateResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteTrafficDistributionGroupResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteVocabularyResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VocabularyArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VocabularyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VocabularyState State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAgentStatusResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AgentStatus AgentStatus { get; set; }
	}
	
	/// <summary>
	/// Contains information about an agent status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AgentStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AgentStatusARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AgentStatusId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AgentStatusType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DisplayOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormScoringStatus State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AgentStatusType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROUTABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OFFLINE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeContactResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Contact Contact { get; set; }
	}
	
	/// <summary>
	/// Contains information about a contact.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Contact
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InitialContactId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreviousContactId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactInitiationMethod InitiationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Channel Channel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QueueInfo QueueInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AgentInfo AgentInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset InitiationTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset DisconnectTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdateTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ScheduledTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RelatedContactId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WisdomInfo WisdomInfo { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContactInitiationMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INBOUND = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUTBOUND = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSFER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUE_TRANSFER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CALLBACK = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		API = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISCONNECT = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONITOR = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXTERNAL_OUTBOUND = 8,
	}
	
	/// <summary>
	/// If this contact was queued, this contains information about the queue. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QueueInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EnqueueTimestamp { get; set; }
	}
	
	/// <summary>
	/// Information about the agent who accepted the contact.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AgentInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ConnectedToAgentTimestamp { get; set; }
	}
	
	/// <summary>
	/// Information about Amazon Connect Wisdom.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WisdomInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string SessionArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeContactEvaluationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Evaluation Evaluation { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormContent EvaluationForm { get; set; }
	}
	
	/// <summary>
	/// Information about a contact evaluation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Evaluation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationMetadata Metadata { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationAnswersOutputMap Answers { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationNotesMap Notes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationScoresMap Scores { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// Metadata information about a contact evaluation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationMetadata
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluatorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactAgentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationScore Score { get; set; }
	}
	
	/// <summary>
	/// Information about scores of a contact evaluation item (section or question).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationScore
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Percentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> NotApplicable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutomaticFail { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationAnswersOutputMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationNotesMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EvaluationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRAFT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationScoresMap
	{
	}
	
	/// <summary>
	/// Information about an evaluation form used in a contact evaluation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationFormContent
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int EvaluationFormVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormItem[] Items { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormScoringStrategy ScoringStrategy { get; set; }
	}
	
	/// <summary>
	/// Information about scoring strategy for an evaluation form.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationFormScoringStrategy
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormScoringMode Mode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormScoringStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeContactFlowResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ContactFlow ContactFlow { get; set; }
	}
	
	/// <summary>
	/// Contains information about a flow.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContactFlow
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactFlowType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactFlowState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Content { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContactFlowType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACT_FLOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOMER_QUEUE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOMER_HOLD = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOMER_WHISPER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGENT_HOLD = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGENT_WHISPER = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUTBOUND_WHISPER = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGENT_TRANSFER = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUE_TRANSFER = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContactFlowState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARCHIVED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContactFlowNotPublishedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeContactFlowModuleResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ContactFlowModule ContactFlowModule { get; set; }
	}
	
	/// <summary>
	/// Contains information about a flow module.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContactFlowModule
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Content { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactFlowState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactFlowModuleStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContactFlowModuleStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLISHED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAVED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeEvaluationFormResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationForm EvaluationForm { get; set; }
	}
	
	/// <summary>
	/// Information about the evaluation form.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationForm
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int EvaluationFormVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Locked { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormVersionStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormItem[] Items { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormScoringStrategy ScoringStrategy { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EvaluationFormVersionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRAFT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeHoursOfOperationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HoursOfOperation HoursOfOperation { get; set; }
	}
	
	/// <summary>
	/// Information about of the hours of operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HoursOfOperation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string HoursOfOperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HoursOfOperationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HoursOfOperationConfig[] Config { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeInstanceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Instance Instance { get; set; }
	}
	
	/// <summary>
	/// The Amazon Connect instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Instance
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DirectoryType IdentityManagementType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServiceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceStatus InstanceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceStatusReason StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InboundCallsEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> OutboundCallsEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceAccessUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DirectoryType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAML = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONNECT_MANAGED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXISTING_DIRECTORY = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InstanceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATION_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATION_FAILED = 2,
	}
	
	/// <summary>
	/// Relevant details why the instance was not successfully created.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceStatusReason
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeInstanceAttributeResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Attribute Attribute { get; set; }
	}
	
	/// <summary>
	/// A toggle for an individual feature at the instance level.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Attribute
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceAttributeType AttributeType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InstanceAttributeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INBOUND_CALLS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OUTBOUND_CALLS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACTFLOW_LOGS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACT_LENS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTO_RESOLVE_BEST_VOICES = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USE_CUSTOM_TTS_VOICES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EARLY_MEDIA = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTI_PARTY_CONFERENCE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH_VOLUME_OUTBOUND = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENHANCED_CONTACT_MONITORING = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeInstanceStorageConfigResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceStorageConfig StorageConfig { get; set; }
	}
	
	/// <summary>
	/// The storage configuration for the instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceStorageConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AssociationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StorageType StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3Config S3Config { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisVideoStreamConfig KinesisVideoStreamConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisStreamConfig KinesisStreamConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseConfig KinesisFirehoseConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribePhoneNumberResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ClaimedPhoneNumberSummary ClaimedPhoneNumberSummary { get; set; }
	}
	
	/// <summary>
	/// Information about a phone number that has been claimed to your Amazon Connect instance or traffic distribution group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClaimedPhoneNumberSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumberId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumberArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberCountryCode PhoneNumberCountryCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberType PhoneNumberType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumberDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberStatus PhoneNumberStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PhoneNumberCountryCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AF = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DZ = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AD = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AO = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AI = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AQ = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AG = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AM = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AW = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AU = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AT = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AZ = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BS = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BH = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BD = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BB = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BY = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BE = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BZ = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BJ = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BM = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BT = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BO = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BA = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BW = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BR = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IO = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VG = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BN = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BG = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BF = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BI = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KH = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CM = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CA = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CV = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KY = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CF = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TD = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CL = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CN = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CX = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CC = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CO = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KM = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CK = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CR = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HR = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CU = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CW = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CY = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CZ = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CD = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DK = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DJ = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DM = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DO = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TL = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EC = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EG = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SV = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GQ = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ER = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EE = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ET = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FK = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FO = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FJ = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FI = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FR = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PF = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GA = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GM = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GE = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DE = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GH = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GI = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GR = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GL = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GD = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GU = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GT = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GG = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GN = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GW = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GY = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HT = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HN = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HK = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HU = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IS = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ID = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IR = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IQ = 97,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IE = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IM = 99,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IL = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IT = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CI = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JM = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JP = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JE = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JO = 106,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KZ = 107,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KE = 108,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KI = 109,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KW = 110,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KG = 111,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LA = 112,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LV = 113,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LB = 114,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LS = 115,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LR = 116,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LY = 117,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LI = 118,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LT = 119,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LU = 120,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MO = 121,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MK = 122,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MG = 123,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MW = 124,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MY = 125,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MV = 126,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ML = 127,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MT = 128,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MH = 129,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MR = 130,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MU = 131,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YT = 132,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MX = 133,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FM = 134,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MD = 135,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MC = 136,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MN = 137,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ME = 138,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MS = 139,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MA = 140,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MZ = 141,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MM = 142,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NA = 143,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NR = 144,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NP = 145,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NL = 146,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AN = 147,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NC = 148,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NZ = 149,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NI = 150,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NE = 151,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NG = 152,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NU = 153,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KP = 154,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MP = 155,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO = 156,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OM = 157,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PK = 158,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PW = 159,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PA = 160,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PG = 161,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PY = 162,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PE = 163,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PH = 164,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PN = 165,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PL = 166,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PT = 167,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PR = 168,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QA = 169,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CG = 170,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RE = 171,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RO = 172,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RU = 173,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RW = 174,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BL = 175,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SH = 176,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KN = 177,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LC = 178,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MF = 179,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PM = 180,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VC = 181,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WS = 182,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SM = 183,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ST = 184,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SA = 185,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SN = 186,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RS = 187,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SC = 188,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SL = 189,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SG = 190,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SX = 191,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SK = 192,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SI = 193,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SB = 194,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SO = 195,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZA = 196,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KR = 197,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ES = 198,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LK = 199,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SD = 200,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SR = 201,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SJ = 202,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SZ = 203,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SE = 204,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CH = 205,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SY = 206,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TW = 207,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TJ = 208,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TZ = 209,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TH = 210,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TG = 211,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TK = 212,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TO = 213,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TT = 214,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TN = 215,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TR = 216,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TM = 217,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TC = 218,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TV = 219,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VI = 220,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UG = 221,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UA = 222,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AE = 223,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GB = 224,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		US = 225,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UY = 226,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UZ = 227,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VU = 228,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VA = 229,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VE = 230,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VN = 231,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WF = 232,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EH = 233,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YE = 234,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZM = 235,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZW = 236,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PhoneNumberType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOLL_FREE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DID = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UIFN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHARED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THIRD_PARTY_TF = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THIRD_PARTY_DID = 5,
	}
	
	/// <summary>
	/// <p>The status of the phone number.</p> <ul> <li> <p> <code>CLAIMED</code> means the previous <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_ClaimedPhoneNumber.html">ClaimedPhoneNumber</a> or <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdatePhoneNumber.html">UpdatePhoneNumber</a> operation succeeded.</p> </li> <li> <p> <code>IN_PROGRESS</code> means a <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_ClaimedPhoneNumber.html">ClaimedPhoneNumber</a> or <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdatePhoneNumber.html">UpdatePhoneNumber</a> operation is still in progress and has not yet completed. You can call <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_DescribePhoneNumber.html">DescribePhoneNumber</a> at a later time to verify if the previous operation has completed.</p> </li> <li> <p> <code>FAILED</code> indicates that the previous <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_ClaimedPhoneNumber.html">ClaimedPhoneNumber</a> or <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdatePhoneNumber.html">UpdatePhoneNumber</a> operation has failed. It will include a message indicating the failure reason. A common reason for a failure may be that the <code>TargetArn</code> value you are claiming or updating a phone number to has reached its limit of total claimed numbers. If you received a <code>FAILED</code> status from a <code>ClaimPhoneNumber</code> API call, you have one day to retry claiming the phone number before the number is released back to the inventory for other customers to claim.</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhoneNumberStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberWorkflowStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PhoneNumberWorkflowStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLAIMED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribePromptResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Prompt Prompt { get; set; }
	}
	
	/// <summary>
	/// Information about a prompt.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Prompt
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PromptARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PromptId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeQueueResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Queue Queue { get; set; }
	}
	
	/// <summary>
	/// Contains information about a queue.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Queue
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string QueueArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string QueueId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutboundCallerConfig OutboundCallerConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HoursOfOperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxContacts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormScoringStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// The outbound caller ID name, number, and outbound whisper flow.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OutboundCallerConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OutboundCallerIdName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OutboundCallerIdNumberId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OutboundFlowId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeQuickConnectResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public QuickConnect QuickConnect { get; set; }
	}
	
	/// <summary>
	/// Contains information about a quick connect.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QuickConnect
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string QuickConnectARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string QuickConnectId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuickConnectConfig QuickConnectConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// Contains configuration settings for a quick connect.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QuickConnectConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public QuickConnectType QuickConnectType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserQuickConnectConfig UserConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QueueQuickConnectConfig QueueConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberQuickConnectConfig PhoneConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeRoutingProfileResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RoutingProfile RoutingProfile { get; set; }
	}
	
	/// <summary>
	/// Contains information about a routing profile.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RoutingProfile
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoutingProfileArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoutingProfileId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MediaConcurrency[] MediaConcurrencies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultOutboundQueueId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumberOfAssociatedQueues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumberOfAssociatedUsers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AgentAvailabilityTimer AgentAvailabilityTimer { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AgentAvailabilityTimer
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TIME_SINCE_LAST_ACTIVITY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TIME_SINCE_LAST_INBOUND = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeRuleResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Rule Rule { get; set; }
	}
	
	/// <summary>
	/// Information about a rule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Rule
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RuleId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RuleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RuleTriggerEventSource TriggerEventSource { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Function { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RuleAction[] Actions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RulePublishStatus PublishStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastUpdatedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// The name of the event source. This field is required if <code>TriggerEventSource</code> is one of the following values: <code>OnZendeskTicketCreate</code> | <code>OnZendeskTicketStatusUpdate</code> | <code>OnSalesforceCaseCreate</code> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RuleTriggerEventSource
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EventSourceName EventSourceName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationAssociationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RulePublishStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRAFT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLISHED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeSecurityProfileResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SecurityProfile SecurityProfile { get; set; }
	}
	
	/// <summary>
	/// Contains information about a security profile.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SecurityProfile
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OrganizationResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecurityProfileName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AllowedAccessControlTags AllowedAccessControlTags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TagRestrictedResources { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AllowedAccessControlTags
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTrafficDistributionGroupResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TrafficDistributionGroup TrafficDistributionGroup { get; set; }
	}
	
	/// <summary>
	/// Information about a traffic distribution group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TrafficDistributionGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrafficDistributionGroupStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TrafficDistributionGroupStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATION_IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATION_FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_DELETION = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETION_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATE_IN_PROGRESS = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeUserResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public User User { get; set; }
	}
	
	/// <summary>
	/// Contains information about a user account for an Amazon Connect instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class User
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Username { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserIdentityInfo IdentityInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserPhoneConfig PhoneConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DirectoryUserId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityProfileIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoutingProfileId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HierarchyGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// Contains information about the identity of a user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserIdentityInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FirstName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecondaryEmail { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Mobile { get; set; }
	}
	
	/// <summary>
	/// Contains information about the phone configuration settings for a user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserPhoneConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PhoneType PhoneType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoAccept { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AfterContactWorkTimeLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DeskPhoneNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeUserHierarchyGroupResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyGroup HierarchyGroup { get; set; }
	}
	
	/// <summary>
	/// Contains information about a hierarchy group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HierarchyGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LevelId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyPath HierarchyPath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// Contains information about the levels of a hierarchy group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HierarchyPath
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyGroupSummary LevelOne { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyGroupSummary LevelTwo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyGroupSummary LevelThree { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyGroupSummary LevelFour { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyGroupSummary LevelFive { get; set; }
	}
	
	/// <summary>
	/// Contains summary information about a hierarchy group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HierarchyGroupSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeUserHierarchyStructureResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyStructure HierarchyStructure { get; set; }
	}
	
	/// <summary>
	/// Contains information about a hierarchy structure.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HierarchyStructure
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyLevel LevelOne { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyLevel LevelTwo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyLevel LevelThree { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyLevel LevelFour { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyLevel LevelFive { get; set; }
	}
	
	/// <summary>
	/// Contains information about a hierarchy level.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HierarchyLevel
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeVocabularyResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Vocabulary Vocabulary { get; set; }
	}
	
	/// <summary>
	/// Contains information about a custom vocabulary.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Vocabulary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VocabularyLanguageCode LanguageCode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VocabularyState State { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FailureReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Content { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VocabularyLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ar-AE")]
		arMinusAE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-AB")]
		enMinusAB = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-AU")]
		enMinusAU = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-IE")]
		enMinusIE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-IN")]
		enMinusIN = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-US")]
		enMinusUS = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-WL")]
		enMinusWL = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-US")]
		esMinusUS = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CA")]
		frMinusCA = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hi-IN")]
		hiMinusIN = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ja-JP")]
		jaMinusJP = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ko-KR")]
		koMinusKR = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pt-BR")]
		ptMinusBR = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pt-PT")]
		ptMinusPT = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-CN")]
		zhMinusCN = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-NZ")]
		enMinusNZ = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-ZA")]
		enMinusZA = 22,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DismissUserContactResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetContactAttributesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Attributes Attributes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Attributes
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCurrentMetricDataResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CurrentMetricResult[] MetricResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset DataSnapshotTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApproximateTotalCount { get; set; }
	}
	
	/// <summary>
	/// Contains information about a set of real-time metrics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CurrentMetricResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Dimensions Dimensions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CurrentMetricData[] Collections { get; set; }
	}
	
	/// <summary>
	/// Contains information about the dimensions for a set of metrics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Dimensions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public QueueReference Queue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Channel Channel { get; set; }
		
		/// <summary>
		/// Information about the routing profile assigned to the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public RoutingProfileReference RoutingProfile { get; set; }
	}
	
	/// <summary>
	/// Contains information about a queue resource for which metrics are returned.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QueueReference
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	/// Information about the routing profile assigned to the user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RoutingProfileReference
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	/// Contains the data for a real-time metric.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CurrentMetricData
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CurrentMetric Metric { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	/// <summary>
	/// Contains information about a real-time metric. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html">Real-time Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CurrentMetric
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CurrentMetricName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Unit Unit { get; set; }
	}
	
	/// <summary>
	/// The current metric names.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CurrentMetricName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGENTS_ONLINE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGENTS_AVAILABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGENTS_ON_CALL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGENTS_NON_PRODUCTIVE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGENTS_AFTER_CONTACT_WORK = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGENTS_ERROR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGENTS_STAFFED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACTS_IN_QUEUE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OLDEST_CONTACT_AGE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACTS_SCHEDULED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGENTS_ON_CONTACT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SLOTS_ACTIVE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SLOTS_AVAILABLE = 12,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Unit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SECONDS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERCENT = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Grouping
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHANNEL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROUTING_PROFILE = 2,
	}
	
	/// <summary>
	/// The way to sort the resulting response based on metrics. By default resources are sorted based on <code>AGENTS_ONLINE</code>, <code>DESCENDING</code>. The metric collection is sorted based on the input metrics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CurrentMetricSortCriteria
	{
		
		/// <summary>
		/// The current metric names.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CurrentMetricName SortByMetric { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SortOrder SortOrder { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SortOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASCENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESCENDING = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCurrentUserDataResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserData[] UserDataList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApproximateTotalCount { get; set; }
	}
	
	/// <summary>
	/// Data for a user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserData
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UserReference User { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RoutingProfileReference RoutingProfile { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyPathReference HierarchyPath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AgentStatusReference Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChannelToCountMap AvailableSlotsByChannel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChannelToCountMap MaxSlotsByChannel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChannelToCountMap ActiveSlotsByChannel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AgentContactReference[] Contacts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextStatus { get; set; }
	}
	
	/// <summary>
	/// Information about the user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserReference
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	/// Information about the levels in the hierarchy group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HierarchyPathReference
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyGroupSummaryReference LevelOne { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyGroupSummaryReference LevelTwo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyGroupSummaryReference LevelThree { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyGroupSummaryReference LevelFour { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyGroupSummaryReference LevelFive { get; set; }
	}
	
	/// <summary>
	/// Information about the hierarchy group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HierarchyGroupSummaryReference
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	/// Information about the agent's status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AgentStatusReference
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StatusStartTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChannelToCountMap
	{
	}
	
	/// <summary>
	/// Information about the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_Contact.html">contact</a> associated to the user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AgentContactReference
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Channel Channel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactInitiationMethod InitiationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactState AgentContactState { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StateStartTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ConnectedToAgentTimestamp { get; set; }
		
		/// <summary>
		/// Contains information about a queue resource for which metrics are returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public QueueReference Queue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContactState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INCOMING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONNECTING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONNECTED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONNECTED_ONHOLD = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MISSED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENDED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 8,
	}
	
	/// <summary>
	/// Filters user data based on the contact information that is associated to the users. It contains a list of <a href="https://docs.aws.amazon.com/connect/latest/adminguide/about-contact-states.html">contact states</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContactFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ContactState[] ContactStates { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetFederationTokenResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Credentials Credentials { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SignInUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserId { get; set; }
	}
	
	/// <summary>
	/// Contains credentials to use for federation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Credentials
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccessToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset AccessTokenExpiration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RefreshToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset RefreshTokenExpiration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetMetricDataResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HistoricalMetricResult[] MetricResults { get; set; }
	}
	
	/// <summary>
	/// Contains information about the historical metrics retrieved.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HistoricalMetricResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Dimensions Dimensions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HistoricalMetricData[] Collections { get; set; }
	}
	
	/// <summary>
	/// Contains the data for a historical metric.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HistoricalMetricData
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HistoricalMetric Metric { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	/// <summary>
	/// Contains information about a historical metric. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HistoricalMetric
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HistoricalMetricName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Threshold Threshold { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Statistic Statistic { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Unit Unit { get; set; }
	}
	
	/// <summary>
	/// The historical metric names.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum HistoricalMetricName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACTS_QUEUED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACTS_HANDLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACTS_ABANDONED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACTS_CONSULTED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACTS_AGENT_HUNG_UP_FIRST = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACTS_HANDLED_INCOMING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACTS_HANDLED_OUTBOUND = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACTS_HOLD_ABANDONS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACTS_TRANSFERRED_IN = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACTS_TRANSFERRED_OUT = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACTS_TRANSFERRED_IN_FROM_QUEUE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACTS_TRANSFERRED_OUT_FROM_QUEUE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACTS_MISSED = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CALLBACK_CONTACTS_HANDLED = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		API_CONTACTS_HANDLED = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OCCUPANCY = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HANDLE_TIME = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AFTER_CONTACT_WORK_TIME = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUED_TIME = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ABANDON_TIME = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUEUE_ANSWER_TIME = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOLD_TIME = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERACTION_TIME = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERACTION_AND_HOLD_TIME = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICE_LEVEL = 24,
	}
	
	/// <summary>
	/// Contains information about the threshold for service level metrics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Threshold
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Comparison Comparison { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ThresholdValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Comparison
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LT = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Statistic
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUM = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAX = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVG = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetMetricDataV2Response
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MetricResultV2[] MetricResults { get; set; }
	}
	
	/// <summary>
	/// Contains information about the metric results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MetricResultV2
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionsV2Map Dimensions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MetricDataV2[] Collections { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DimensionsV2Map
	{
	}
	
	/// <summary>
	/// Contains the name, thresholds, and metric filters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MetricDataV2
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MetricV2 Metric { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	/// <summary>
	/// Contains information about the metric.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MetricV2
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ThresholdV2[] Threshold { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MetricFilterV2[] MetricFilters { get; set; }
	}
	
	/// <summary>
	/// Contains information about the threshold for service level metrics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThresholdV2
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Comparison { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ThresholdValue { get; set; }
	}
	
	/// <summary>
	/// Contains information about the filter used when retrieving metrics. <code>MetricFiltersV2</code> can be used on the following metrics: <code>AVG_AGENT_CONNECTING_TIME</code>, <code>CONTACTS_CREATED</code>, <code>CONTACTS_HANDLED</code>, <code>SUM_CONTACTS_DISCONNECTED</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MetricFilterV2
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricFilterKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] MetricFilterValues { get; set; }
	}
	
	/// <summary>
	/// Contains the filter to apply when retrieving metrics with the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_GetMetricDataV2.html">GetMetricDataV2</a> API.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FilterV2
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FilterKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] FilterValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetPromptFileResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PromptPresignedUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetTaskTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactFlowId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateConstraints Constraints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateDefaults Defaults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateField[] Fields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// Describes constraints that apply to the template fields.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TaskTemplateConstraints
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RequiredFieldInfo[] RequiredFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReadOnlyFieldInfo[] ReadOnlyFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvisibleFieldInfo[] InvisibleFields { get; set; }
	}
	
	/// <summary>
	/// Describes default values for fields on a template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TaskTemplateDefaults
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateDefaultFieldValue[] DefaultFieldValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TaskTemplateStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INACTIVE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetTrafficDistributionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TelephonyConfig TelephonyConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	/// The distribution of traffic between the instance and its replicas.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TelephonyConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Distribution[] Distributions { get; set; }
	}
	
	/// <summary>
	/// Information about a traffic distribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Distribution
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Percentage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAgentStatusResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AgentStatusSummary[] AgentStatusSummaryList { get; set; }
	}
	
	/// <summary>
	/// Summary information for an agent status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AgentStatusSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AgentStatusType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListApprovedOriginsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Origins { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListBotsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LexBotConfig[] LexBots { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Configuration information of an Amazon Lex or Amazon Lex V2 bot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LexBotConfig
	{
		
		/// <summary>
		/// Configuration information of an Amazon Lex bot.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LexBot LexBot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LexV2Bot LexV2Bot { get; set; }
	}
	
	/// <summary>
	/// Configuration information of an Amazon Lex bot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LexBot
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LexRegion { get; set; }
	}
	
	/// <summary>
	/// Configuration information of an Amazon Lex V2 bot.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LexV2Bot
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AliasArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListContactEvaluationsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationSummary[] EvaluationSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Summary information about a contact evaluation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormTitle { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluatorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationScore Score { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListContactFlowModulesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ContactFlowModuleSummary[] ContactFlowModulesSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains summary information about a flow.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContactFlowModuleSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactFlowState State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListContactFlowsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ContactFlowSummary[] ContactFlowSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// <p>Contains summary information about a flow.</p> <p>You can also create and update flows using the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/flow-language.html">Amazon Connect Flow language</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContactFlowSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactFlowType ContactFlowType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactFlowState ContactFlowState { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListContactReferencesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceSummary[] ReferenceSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains summary information about a reference. <code>ReferenceSummary</code> contains only one non null field between the URL and attachment based on the reference type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReferenceSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UrlReference Url { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AttachmentReference Attachment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringReference String { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NumberReference Number { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DateReference Date { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EmailReference Email { get; set; }
	}
	
	/// <summary>
	/// The URL reference.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UrlReference
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Information about a reference when the <code>referenceType</code> is <code>ATTACHMENT</code>. Otherwise, null.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AttachmentReference
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ReferenceStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 1,
	}
	
	/// <summary>
	/// Information about a reference when the <code>referenceType</code> is <code>STRING</code>. Otherwise, null.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StringReference
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Information about a reference when the <code>referenceType</code> is <code>NUMBER</code>. Otherwise, null.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumberReference
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Information about a reference when the <code>referenceType</code> is <code>DATE</code>. Otherwise, null.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DateReference
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Information about a reference when the <code>referenceType</code> is <code>EMAIL</code>. Otherwise, null.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmailReference
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ReferenceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		URL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTACHMENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NUMBER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STRING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAIL = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDefaultVocabulariesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DefaultVocabulary[] DefaultVocabularyList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains information about a default vocabulary.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultVocabulary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VocabularyLanguageCode LanguageCode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VocabularyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VocabularyName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEvaluationFormVersionsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormVersionSummary[] EvaluationFormVersionSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Summary information about an evaluation form.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationFormVersionSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int EvaluationFormVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Locked { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormVersionStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedBy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEvaluationFormsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormSummary[] EvaluationFormSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Summary information about an evaluation form.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationFormSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastActivatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastActivatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int LatestVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ActiveVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListHoursOfOperationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HoursOfOperationSummary[] HoursOfOperationSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains summary information about hours of operation for a contact center.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HoursOfOperationSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInstanceAttributesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Attribute[] Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInstanceStorageConfigsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceStorageConfig[] StorageConfigs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInstancesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceSummary[] InstanceSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information about the instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DirectoryType IdentityManagementType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServiceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceStatus InstanceStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> InboundCallsEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> OutboundCallsEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceAccessUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListIntegrationAssociationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public IntegrationAssociationSummary[] IntegrationAssociationSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains summary information about the associated AppIntegrations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IntegrationAssociationSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationAssociationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationAssociationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IntegrationType IntegrationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceApplicationUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceApplicationName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SourceType SourceType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IntegrationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EVENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VOICE_ID = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PINPOINT_APP = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WISDOM_ASSISTANT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WISDOM_KNOWLEDGE_BASE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CASES_DOMAIN = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SALESFORCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZENDESK = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListLambdaFunctionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] LambdaFunctions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListLexBotsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LexBot[] LexBots { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListPhoneNumbersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberSummary[] PhoneNumberSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains summary information about a phone number for a contact center.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhoneNumberSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberType PhoneNumberType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberCountryCode PhoneNumberCountryCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListPhoneNumbersV2Response
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListPhoneNumbersSummary[] ListPhoneNumbersSummaryList { get; set; }
	}
	
	/// <summary>
	/// Information about phone numbers that have been claimed to your Amazon Connect instance or traffic distribution group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListPhoneNumbersSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumberId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumberArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberCountryCode PhoneNumberCountryCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberType PhoneNumberType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListPromptsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PromptSummary[] PromptSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains information about the prompt.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PromptSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListQueueQuickConnectsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuickConnectSummary[] QuickConnectSummaryList { get; set; }
	}
	
	/// <summary>
	/// Contains summary information about a quick connect.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QuickConnectSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuickConnectType QuickConnectType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListQueuesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public QueueSummary[] QueueSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains summary information about a queue.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QueueSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QueueType QueueType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum QueueType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGENT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListQuickConnectsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public QuickConnectSummary[] QuickConnectSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRoutingProfileQueuesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RoutingProfileQueueConfigSummary[] RoutingProfileQueueConfigSummaryList { get; set; }
	}
	
	/// <summary>
	/// Contains summary information about a routing profile queue.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RoutingProfileQueueConfigSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string QueueId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string QueueArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string QueueName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Priority { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Delay { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Channel Channel { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRoutingProfilesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RoutingProfileSummary[] RoutingProfileSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains summary information about a routing profile.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RoutingProfileSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRulesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RuleSummary[] RuleSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A list of <code>ActionTypes</code> associated with a rule. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RuleSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RuleId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RuleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EventSourceName EventSourceName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RulePublishStatus PublishStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionSummary[] ActionSummaries { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
	}
	
	/// <summary>
	/// Information about an action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActionSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActionType ActionType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSecurityKeysResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SecurityKey[] SecurityKeys { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Configuration information of the security key.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SecurityKey
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AssociationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSecurityProfilePermissionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSecurityProfilesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SecurityProfileSummary[] SecurityProfileSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains information about a security profile.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SecurityProfileSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTaskTemplatesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateMetadata[] TaskTemplates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains summary information about the task template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TaskTemplateMetadata
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTrafficDistributionGroupsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrafficDistributionGroupSummary[] TrafficDistributionGroupSummaryList { get; set; }
	}
	
	/// <summary>
	/// Information about traffic distribution groups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TrafficDistributionGroupSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrafficDistributionGroupStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListUseCasesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UseCase[] UseCaseSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains the use case.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UseCase
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string UseCaseId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UseCaseArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UseCaseType UseCaseType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UseCaseType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RULES_EVALUATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONNECT_CAMPAIGNS = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListUserHierarchyGroupsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyGroupSummary[] UserHierarchyGroupSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListUsersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UserSummary[] UserSummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains summary information about a user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Username { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MonitorContactResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MonitorCapability
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SILENT_MONITOR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BARGE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutUserStatusResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReplicateInstanceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResumeContactRecordingResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchAvailablePhoneNumbersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AvailableNumberSummary[] AvailableNumbersList { get; set; }
	}
	
	/// <summary>
	/// Information about available phone numbers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AvailableNumberSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberCountryCode PhoneNumberCountryCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberType PhoneNumberType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchHoursOfOperationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HoursOfOperation[] HoursOfOperations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApproximateTotalCount { get; set; }
	}
	
	/// <summary>
	/// <p>An object that can be used to specify Tag conditions inside the <code>SearchFilter</code>. This accepts an <code>OR</code> of <code>AND</code> (List of List) input where: </p> <ul> <li> <p>Top level list specifies conditions that need to be applied with <code>OR</code> operator</p> </li> <li> <p>Inner list specifies conditions that need to be applied with <code>AND</code> operator.</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ControlPlaneTagFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TagCondition[][] OrConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagCondition[] AndConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagCondition TagCondition { get; set; }
	}
	
	/// <summary>
	/// A leaf node condition which can be used to specify a tag condition, for example, <code>HAVE BPO = 123</code>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagCondition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TagKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TagValue { get; set; }
	}
	
	/// <summary>
	/// The search criteria to be used to return hours of operations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HoursOfOperationSearchCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HoursOfOperationSearchCriteria[] OrConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HoursOfOperationSearchCriteria[] AndConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringCondition StringCondition { get; set; }
	}
	
	/// <summary>
	/// A leaf node condition which can be used to specify a string condition. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StringCondition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FieldName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringComparisonType ComparisonType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StringComparisonType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTS_WITH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTAINS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXACT = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchPromptsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Prompt[] Prompts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApproximateTotalCount { get; set; }
	}
	
	/// <summary>
	/// The search criteria to be used to return prompts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PromptSearchCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PromptSearchCriteria[] OrConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PromptSearchCriteria[] AndConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringCondition StringCondition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchQueuesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Queue[] Queues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApproximateTotalCount { get; set; }
	}
	
	/// <summary>
	/// <p>The search criteria to be used to return queues.</p> <note> <p>The <code>name</code> and <code>description</code> fields support "contains" queries with a minimum of 2 characters and a maximum of 25 characters. Any queries with character lengths outside of this range will throw invalid results. </p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QueueSearchCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public QueueSearchCriteria[] OrConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QueueSearchCriteria[] AndConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringCondition StringCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SearchableQueueType QueueTypeCondition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SearchableQueueType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchQuickConnectsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public QuickConnect[] QuickConnects { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApproximateTotalCount { get; set; }
	}
	
	/// <summary>
	/// The search criteria to be used to return quick connects.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QuickConnectSearchCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public QuickConnectSearchCriteria[] OrConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuickConnectSearchCriteria[] AndConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringCondition StringCondition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchResourceTagsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TagSet[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A tag set contains tag key and tag value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagSet
	{
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// The search criteria to be used to return tags.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagSearchCondition
	{
		
		[System.Runtime.Serialization.DataMember(Name="tagKey")]
		public string TagKey { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tagValue")]
		public string TagValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tagKeyComparisonType")]
		public StringComparisonType TagKeyComparisonType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tagValueComparisonType")]
		public StringComparisonType TagValueComparisonType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MaximumResultReturnedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchRoutingProfilesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RoutingProfile[] RoutingProfiles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApproximateTotalCount { get; set; }
	}
	
	/// <summary>
	/// <p>The search criteria to be used to return routing profiles.</p> <note> <p>The <code>name</code> and <code>description</code> fields support "contains" queries with a minimum of 2 characters and a maximum of 25 characters. Any queries with character lengths outside of this range will throw invalid results. </p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RoutingProfileSearchCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RoutingProfileSearchCriteria[] OrConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RoutingProfileSearchCriteria[] AndConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringCondition StringCondition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchSecurityProfilesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SecurityProfileSearchSummary[] SecurityProfiles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApproximateTotalCount { get; set; }
	}
	
	/// <summary>
	/// Information about the returned security profiles.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SecurityProfileSearchSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OrganizationResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecurityProfileName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// <p>The search criteria to be used to return security profiles.</p> <note> <p>The <code>name</code> field support "contains" queries with a minimum of 2 characters and maximum of 25 characters. Any queries with character lengths outside of this range will throw invalid results.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SecurityProfileSearchCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SecurityProfileSearchCriteria[] OrConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SecurityProfileSearchCriteria[] AndConditions { get; set; }
		
		/// <summary>
		/// A leaf node condition which can be used to specify a string condition. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StringCondition StringCondition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchUsersResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UserSearchSummary[] Users { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApproximateTotalCount { get; set; }
	}
	
	/// <summary>
	/// Information about the returned users.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserSearchSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DirectoryUserId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HierarchyGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserIdentityInfoLite IdentityInfo { get; set; }
		
		/// <summary>
		/// Contains information about the phone configuration settings for a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserPhoneConfig PhoneConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoutingProfileId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityProfileIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Username { get; set; }
	}
	
	/// <summary>
	/// The user's first name and last name.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserIdentityInfoLite
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FirstName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastName { get; set; }
	}
	
	/// <summary>
	/// <p>The search criteria to be used to return users.</p> <note> <p>The <code>name</code> and <code>description</code> fields support "contains" queries with a minimum of 2 characters and a maximum of 25 characters. Any queries with character lengths outside of this range will throw invalid results. </p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserSearchCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UserSearchCriteria[] OrConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserSearchCriteria[] AndConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringCondition StringCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyGroupCondition HierarchyGroupCondition { get; set; }
	}
	
	/// <summary>
	/// A leaf node condition which can be used to specify a hierarchy group condition.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HierarchyGroupCondition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyGroupMatchType HierarchyGroupMatchType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum HierarchyGroupMatchType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXACT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WITH_CHILD_GROUPS = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchVocabulariesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public VocabularySummary[] VocabularySummaryList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains summary information about the custom vocabulary.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VocabularySummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VocabularyLanguageCode LanguageCode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VocabularyState State { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FailureReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartChatContactResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParticipantId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParticipantToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ContinuedFromContactId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RehydrationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENTIRE_PAST_SESSION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FROM_SEGMENT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartContactEvaluationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartContactRecordingResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VoiceRecordingTrack
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FROM_AGENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TO_AGENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartContactStreamingResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StreamingId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartOutboundVoiceContactResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DestinationNotAllowedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OutboundContactNotPermittedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartTaskContactResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
	}
	
	/// <summary>
	/// Well-formed data on a contact, used by agents to complete a contact request. You can have up to 4,096 UTF-8 bytes across all references for a contact.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Reference
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ReferenceType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopContactResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContactNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopContactRecordingResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopContactStreamingResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SubmitContactEvaluationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationArn { get; set; }
	}
	
	/// <summary>
	/// Information about input answers for a contact evaluation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationAnswerInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationAnswerData Value { get; set; }
	}
	
	/// <summary>
	/// Information about answer data for a contact evaluation. Answer data must be either string, numeric, or not applicable.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationAnswerData
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StringValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> NumericValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> NotApplicable { get; set; }
	}
	
	/// <summary>
	/// Information about notes for a contact evaluation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationNote
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SuspendContactRecordingResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferContactResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactAttributesResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactEvaluationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactFlowContentResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactFlowMetadataResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactFlowModuleContentResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactFlowModuleMetadataResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactFlowNameResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactScheduleResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEvaluationFormResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int EvaluationFormVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateParticipantRoleConfigResponse
	{
	}
	
	/// <summary>
	/// Configuration information for the chat participant role.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChatParticipantRoleConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ParticipantTimerConfiguration[] ParticipantTimerConfigList { get; set; }
	}
	
	/// <summary>
	/// <p>Configuration information for the timer. After the timer configuration is set, it persists for the duration of the chat. It persists across new contacts in the chain, for example, transfer contacts.</p> <p>For more information about how chat timeouts work, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/setup-chat-timeouts.html">Set up chat timeouts for human participants</a>. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParticipantTimerConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TimerEligibleParticipantRoles ParticipantRole { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ParticipantTimerType TimerType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ParticipantTimerValue TimerValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TimerEligibleParticipantRoles
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOMER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGENT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ParticipantTimerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IDLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISCONNECT_NONCUSTOMER = 1,
	}
	
	/// <summary>
	/// <p>The value of the timer. Either the timer action (<code>Unset</code> to delete the timer), or the duration of the timer in minutes. Only one value can be set.</p> <p>For more information about how chat timeouts work, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/setup-chat-timeouts.html">Set up chat timeouts for human participants</a>. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParticipantTimerValue
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ParticipantTimerAction ParticipantTimerAction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ParticipantTimerDurationInMinutes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ParticipantTimerAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unset = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdatePhoneNumberResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumberId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumberArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdatePromptResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PromptARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PromptId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTaskTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactFlowId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateConstraints Constraints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateDefaults Defaults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateField[] Fields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTrafficDistributionResponse
	{
	}
	
	/// <summary>
	/// Contains information about the hierarchy level to update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HierarchyLevelUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActivateEvaluationFormRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int EvaluationFormVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AgentStatusState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	/// <summary>
	/// Configuration of the answering machine detection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnswerMachineDetectionConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableAnswerMachineDetection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AwaitAnswerMachinePrompt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateApprovedOriginRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Origin { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateBotRequest
	{
		
		/// <summary>
		/// Configuration information of an Amazon Lex bot.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LexBot LexBot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LexV2Bot LexV2Bot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateDefaultVocabularyRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string VocabularyId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InstanceStorageResourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHAT_TRANSCRIPTS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CALL_RECORDINGS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCHEDULED_REPORTS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIA_STREAMS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACT_TRACE_RECORDS = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AGENT_EVENTS = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REAL_TIME_CONTACT_ANALYSIS_SEGMENTS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTACHMENTS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACT_EVALUATIONS = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCREEN_RECORDINGS = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateInstanceStorageConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InstanceStorageResourceType ResourceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InstanceStorageConfig StorageConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateLambdaFunctionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FunctionArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateLexBotRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LexBot LexBot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociatePhoneNumberContactFlowRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactFlowId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateQueueQuickConnectsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] QuickConnectIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateRoutingProfileQueuesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RoutingProfileQueueConfig[] QueueConfigs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociateSecurityKeyRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
	}
	
	/// <summary>
	/// A chat message.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChatMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContentType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Content { get; set; }
	}
	
	/// <summary>
	/// The streaming configuration, such as the Amazon SNS streaming endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChatStreamingConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StreamingEndpointArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClaimPhoneNumberRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumberDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContactFlowModuleState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARCHIVED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAgentStatusRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormScoringStatus State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DisplayOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateContactFlowModuleRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Content { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateContactFlowRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ContactFlowType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Content { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEvaluationFormRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormItem[] Items { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormScoringStrategy ScoringStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateHoursOfOperationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TimeZone { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HoursOfOperationConfig[] Config { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateInstanceRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DirectoryType IdentityManagementType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DirectoryId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool InboundCallsEnabled { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool OutboundCallsEnabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateIntegrationAssociationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IntegrationType IntegrationType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceApplicationUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceApplicationName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SourceType SourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// The details to add for the participant.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParticipantDetailsToAdd
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ParticipantRole ParticipantRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DisplayName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateParticipantRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ParticipantDetailsToAdd ParticipantDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreatePromptRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3Uri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateQueueRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutboundCallerConfig OutboundCallerConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string HoursOfOperationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxContacts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] QuickConnectIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateQuickConnectRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public QuickConnectConfig QuickConnectConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateRoutingProfileRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DefaultOutboundQueueId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RoutingProfileQueueConfig[] QueueConfigs { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MediaConcurrency[] MediaConcurrencies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AgentAvailabilityTimer AgentAvailabilityTimer { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateRuleRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RuleTriggerEventSource TriggerEventSource { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Function { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RuleAction[] Actions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RulePublishStatus PublishStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSecurityProfileRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecurityProfileName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AllowedAccessControlTags AllowedAccessControlTags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TagRestrictedResources { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateTaskTemplateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactFlowId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateConstraints Constraints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateDefaults Defaults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateField[] Fields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateTrafficDistributionGroupRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateUseCaseRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UseCaseType UseCaseType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateUserHierarchyGroupRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParentGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateUserRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Username { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserIdentityInfo IdentityInfo { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UserPhoneConfig PhoneConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DirectoryUserId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityProfileIds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoutingProfileId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HierarchyGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateVocabularyRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VocabularyName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VocabularyLanguageCode LanguageCode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Content { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeactivateEvaluationFormRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int EvaluationFormVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteContactEvaluationRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteContactFlowModuleRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteContactFlowRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEvaluationFormRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteHoursOfOperationRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteInstanceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteIntegrationAssociationRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeletePromptRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteQueueRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteQuickConnectRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteRoutingProfileRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteRuleRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSecurityProfileRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteTaskTemplateRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteTrafficDistributionGroupRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteUseCaseRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteUserHierarchyGroupRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteUserRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteVocabularyRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAgentStatusRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeContactEvaluationRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeContactFlowModuleRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeContactFlowRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeContactRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeEvaluationFormRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeHoursOfOperationRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeInstanceAttributeRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeInstanceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeInstanceStorageConfigRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribePhoneNumberRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribePromptRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeQueueRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeQuickConnectRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeRoutingProfileRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeRuleRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeSecurityProfileRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeTrafficDistributionGroupRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeUserHierarchyGroupRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeUserHierarchyStructureRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeUserRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeVocabularyRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisassociateApprovedOriginRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisassociateBotRequest
	{
		
		/// <summary>
		/// Configuration information of an Amazon Lex bot.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public LexBot LexBot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LexV2Bot LexV2Bot { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisassociateInstanceStorageConfigRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisassociateLambdaFunctionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisassociateLexBotRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisassociatePhoneNumberContactFlowRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisassociateQueueQuickConnectsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] QuickConnectIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisassociateRoutingProfileQueuesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RoutingProfileQueueReference[] QueueReferences { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DisassociateSecurityKeyRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DismissUserContactRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
	}
	
	/// <summary>
	/// Information about output answers for a contact evaluation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationAnswerOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationAnswerData Value { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationAnswerData SystemSuggestedValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EvaluationAnswersInputMap
	{
	}
	
	/// <summary>
	/// Contains the filter to apply when retrieving metrics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Filters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Queues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Channel[] Channels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RoutingProfiles { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetContactAttributesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCurrentMetricDataRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Filters Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Grouping[] Groupings { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CurrentMetric[] CurrentMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CurrentMetricSortCriteria[] SortCriteria { get; set; }
	}
	
	/// <summary>
	/// A filter for the user data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserDataFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Queues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactFilter ContactFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RoutingProfiles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Agents { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] UserHierarchyGroups { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCurrentUserDataRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UserDataFilters Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetFederationTokenRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetMetricDataRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Filters Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Grouping[] Groupings { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HistoricalMetric[] HistoricalMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetMetricDataV2Request
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilterV2[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Groupings { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MetricV2[] Metrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetPromptFileRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetTaskTemplateRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetTrafficDistributionRequest
	{
	}
	
	/// <summary>
	/// Contains information about the level hierarchy to update.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HierarchyStructureUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyLevelUpdate LevelOne { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyLevelUpdate LevelTwo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyLevelUpdate LevelThree { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyLevelUpdate LevelFour { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyLevelUpdate LevelFive { get; set; }
	}
	
	/// <summary>
	/// Filters to be applied to search results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HoursOfOperationSearchFilter
	{
		
		/// <summary>
		/// <p>An object that can be used to specify Tag conditions inside the <code>SearchFilter</code>. This accepts an <code>OR</code> of <code>AND</code> (List of List) input where: </p> <ul> <li> <p>Top level list specifies conditions that need to be applied with <code>OR</code> operator</p> </li> <li> <p>Inner list specifies conditions that need to be applied with <code>AND</code> operator.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ControlPlaneTagFilter TagFilter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LexVersion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		V1 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		V2 = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAgentStatusRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListApprovedOriginsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListBotsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListContactEvaluationsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListContactFlowModulesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListContactFlowsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListContactReferencesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDefaultVocabulariesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public VocabularyLanguageCode LanguageCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEvaluationFormVersionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEvaluationFormsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListHoursOfOperationsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInstanceAttributesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInstanceStorageConfigsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInstancesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListIntegrationAssociationsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListLambdaFunctionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListLexBotsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListPhoneNumbersRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListPhoneNumbersV2Request
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TargetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberCountryCode[] PhoneNumberCountryCodes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberType[] PhoneNumberTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumberPrefix { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListPromptsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListQueueQuickConnectsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListQueuesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListQuickConnectsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRoutingProfileQueuesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRoutingProfilesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRulesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSecurityKeysRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSecurityProfilePermissionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSecurityProfilesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTaskTemplatesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTrafficDistributionGroupsRequest
	{
	}
	
	/// <summary>
	/// Provides summary information about the use cases for the specified integration association.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListUseCasesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListUserHierarchyGroupsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListUsersRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MonitorContactRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string UserId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MonitorCapability[] AllowedMonitorCapabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	/// <summary>
	/// The customer's details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParticipantDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DisplayName { get; set; }
	}
	
	/// <summary>
	/// Enable persistent chats. For more information about enabling persistent chat, and for example use cases and how to configure for them, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/chat-persistence.html">Enable persistent chat</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PersistentChat
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RehydrationType RehydrationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceContactId { get; set; }
	}
	
	/// <summary>
	/// Filters to be applied to search results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PromptSearchFilter
	{
		
		/// <summary>
		/// <p>An object that can be used to specify Tag conditions inside the <code>SearchFilter</code>. This accepts an <code>OR</code> of <code>AND</code> (List of List) input where: </p> <ul> <li> <p>Top level list specifies conditions that need to be applied with <code>OR</code> operator</p> </li> <li> <p>Inner list specifies conditions that need to be applied with <code>AND</code> operator.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ControlPlaneTagFilter TagFilter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutUserStatusRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AgentStatusId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum QueueStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	/// <summary>
	/// Filters to be applied to search results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QueueSearchFilter
	{
		
		/// <summary>
		/// <p>An object that can be used to specify Tag conditions inside the <code>SearchFilter</code>. This accepts an <code>OR</code> of <code>AND</code> (List of List) input where: </p> <ul> <li> <p>Top level list specifies conditions that need to be applied with <code>OR</code> operator</p> </li> <li> <p>Inner list specifies conditions that need to be applied with <code>AND</code> operator.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ControlPlaneTagFilter TagFilter { get; set; }
	}
	
	/// <summary>
	/// Filters to be applied to search results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QuickConnectSearchFilter
	{
		
		/// <summary>
		/// <p>An object that can be used to specify Tag conditions inside the <code>SearchFilter</code>. This accepts an <code>OR</code> of <code>AND</code> (List of List) input where: </p> <ul> <li> <p>Top level list specifies conditions that need to be applied with <code>OR</code> operator</p> </li> <li> <p>Inner list specifies conditions that need to be applied with <code>AND</code> operator.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ControlPlaneTagFilter TagFilter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReleasePhoneNumberRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReplicateInstanceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReplicaRegion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReplicaAlias { get; set; }
	}
	
	/// <summary>
	/// The search criteria to be used to search tags.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceTagsSearchCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TagSearchCondition TagSearchCondition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResumeContactRecordingRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InitialContactId { get; set; }
	}
	
	/// <summary>
	/// Filters to be applied to search results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RoutingProfileSearchFilter
	{
		
		/// <summary>
		/// <p>An object that can be used to specify Tag conditions inside the <code>SearchFilter</code>. This accepts an <code>OR</code> of <code>AND</code> (List of List) input where: </p> <ul> <li> <p>Top level list specifies conditions that need to be applied with <code>OR</code> operator</p> </li> <li> <p>Inner list specifies conditions that need to be applied with <code>AND</code> operator.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ControlPlaneTagFilter TagFilter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchAvailablePhoneNumbersRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberCountryCode PhoneNumberCountryCode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberType PhoneNumberType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumberPrefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchHoursOfOperationsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HoursOfOperationSearchFilter SearchFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HoursOfOperationSearchCriteria SearchCriteria { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchPromptsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PromptSearchFilter SearchFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PromptSearchCriteria SearchCriteria { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchQueuesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QueueSearchFilter SearchFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QueueSearchCriteria SearchCriteria { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchQuickConnectsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuickConnectSearchFilter SearchFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuickConnectSearchCriteria SearchCriteria { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchResourceTagsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ResourceTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceTagsSearchCriteria SearchCriteria { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchRoutingProfilesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RoutingProfileSearchFilter SearchFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RoutingProfileSearchCriteria SearchCriteria { get; set; }
	}
	
	/// <summary>
	/// Filters to be applied to search results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SecurityProfilesSearchFilter
	{
		
		/// <summary>
		/// <p>An object that can be used to specify Tag conditions inside the <code>SearchFilter</code>. This accepts an <code>OR</code> of <code>AND</code> (List of List) input where: </p> <ul> <li> <p>Top level list specifies conditions that need to be applied with <code>OR</code> operator</p> </li> <li> <p>Inner list specifies conditions that need to be applied with <code>AND</code> operator.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ControlPlaneTagFilter TagFilter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchSecurityProfilesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SecurityProfileSearchCriteria SearchCriteria { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SecurityProfilesSearchFilter SearchFilter { get; set; }
	}
	
	/// <summary>
	/// Filters to be applied to search results.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserSearchFilter
	{
		
		/// <summary>
		/// <p>An object that can be used to specify Tag conditions inside the <code>SearchFilter</code>. This accepts an <code>OR</code> of <code>AND</code> (List of List) input where: </p> <ul> <li> <p>Top level list specifies conditions that need to be applied with <code>OR</code> operator</p> </li> <li> <p>Inner list specifies conditions that need to be applied with <code>AND</code> operator.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ControlPlaneTagFilter TagFilter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchUsersRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserSearchFilter SearchFilter { get; set; }
		
		/// <summary>
		/// <p>The search criteria to be used to return users.</p> <note> <p>The <code>name</code> and <code>description</code> fields support "contains" queries with a minimum of 2 characters and a maximum of 25 characters. Any queries with character lengths outside of this range will throw invalid results. </p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UserSearchCriteria SearchCriteria { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SearchVocabulariesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VocabularyState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NameStartsWith { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VocabularyLanguageCode LanguageCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartChatContactRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactFlowId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Attributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ParticipantDetails ParticipantDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ChatMessage InitialMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ChatDurationInMinutes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SupportedMessagingContentTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PersistentChat PersistentChat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RelatedContactId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartContactEvaluationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EvaluationFormId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	/// <summary>
	/// Contains information about the recording configuration settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VoiceRecordingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public VoiceRecordingTrack VoiceRecordingTrack { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartContactRecordingRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InitialContactId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VoiceRecordingConfiguration VoiceRecordingConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartContactStreamingRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ChatStreamingConfiguration ChatStreamingConfiguration { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TrafficType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GENERAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAMPAIGN = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartOutboundVoiceContactRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DestinationPhoneNumber { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactFlowId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourcePhoneNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string QueueId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Attributes Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnswerMachineDetectionConfig AnswerMachineDetectionConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CampaignId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrafficType TrafficType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartTaskContactRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreviousContactId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactFlowId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Attributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactReferences References { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ScheduledTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TaskTemplateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string QuickConnectId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RelatedContactId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopContactRecordingRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InitialContactId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopContactRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopContactStreamingRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StreamingId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SubmitContactEvaluationRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationAnswersInputMap Answers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationNotesMap Notes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SuspendContactRecordingRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InitialContactId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransferContactRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string QueueId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactFlowId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAgentStatusRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormScoringStatus State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DisplayOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ResetOrderNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactAttributesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InitialContactId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Attributes Attributes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactEvaluationRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationAnswersInputMap Answers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationNotesMap Notes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactFlowContentRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Content { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactFlowMetadataRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactFlowState ContactFlowState { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactFlowModuleContentRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Content { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactFlowModuleMetadataRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactFlowState State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactFlowNameRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactReferences References { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactScheduleRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ScheduledTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEvaluationFormRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int EvaluationFormVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CreateNewVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormItem[] Items { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormScoringStrategy ScoringStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateHoursOfOperationRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HoursOfOperationConfig[] Config { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateInstanceAttributeRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateInstanceStorageConfigRequest
	{
		
		/// <summary>
		/// The storage configuration for the instance.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InstanceStorageConfig StorageConfig { get; set; }
	}
	
	/// <summary>
	/// Configuration information for the chat participant role.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateParticipantRoleConfigChannelInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ChatParticipantRoleConfig Chat { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateParticipantRoleConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateParticipantRoleConfigChannelInfo ChannelConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdatePhoneNumberRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdatePromptRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateQueueHoursOfOperationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string HoursOfOperationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateQueueMaxContactsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxContacts { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateQueueNameRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateQueueOutboundCallerConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OutboundCallerConfig OutboundCallerConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateQueueStatusRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormScoringStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateQuickConnectConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public QuickConnectConfig QuickConnectConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateQuickConnectNameRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateRoutingProfileAgentAvailabilityTimerRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AgentAvailabilityTimer AgentAvailabilityTimer { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateRoutingProfileConcurrencyRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MediaConcurrency[] MediaConcurrencies { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateRoutingProfileDefaultOutboundQueueRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DefaultOutboundQueueId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateRoutingProfileNameRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateRoutingProfileQueuesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RoutingProfileQueueConfig[] QueueConfigs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateRuleRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Function { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RuleAction[] Actions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RulePublishStatus PublishStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateSecurityProfileRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AllowedAccessControlTags AllowedAccessControlTags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TagRestrictedResources { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTaskTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactFlowId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateConstraints Constraints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateDefaults Defaults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateField[] Fields { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTrafficDistributionRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TelephonyConfig TelephonyConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateUserHierarchyGroupNameRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateUserHierarchyRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string HierarchyGroupId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateUserHierarchyStructureRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HierarchyStructureUpdate HierarchyStructure { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateUserIdentityInfoRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UserIdentityInfo IdentityInfo { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateUserPhoneConfigRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UserPhoneConfig PhoneConfig { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateUserRoutingProfileRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoutingProfileId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateUserSecurityProfilesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityProfileIds { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Activates an evaluation form in the specified Amazon Connect instance. After the evaluation form is activated, it is available to start new evaluations based on the form.
		/// ActivateEvaluationForm evaluation-forms/{InstanceId}/{EvaluationFormId}/activate
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="EvaluationFormId">The unique identifier for the evaluation form.
		/// Min length: 1
		/// Max length: 500
		// </param>
		/// <returns>Success</returns>
		public async Task<ActivateEvaluationFormResponse> ActivateEvaluationFormAsync(string InstanceId, string EvaluationFormId, ActivateEvaluationFormPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "evaluation-forms/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (EvaluationFormId==null? "" : System.Uri.EscapeDataString(EvaluationFormId))+"/activate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ActivateEvaluationFormResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Associates an approved origin to an Amazon Connect instance.</p>
		/// AssociateApprovedOrigin instance/{InstanceId}/approved-origin
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task AssociateApprovedOriginAsync(string InstanceId, AssociateApprovedOriginPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/approved-origin";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Allows the specified Amazon Connect instance to access the specified Amazon Lex or Amazon Lex V2 bot.</p>
		/// AssociateBot instance/{InstanceId}/bot
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task AssociateBotAsync(string InstanceId, AssociateBotPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/bot";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Revokes authorization from the specified instance to access the specified Amazon Lex or Amazon Lex V2 bot. </p>
		/// DisassociateBot instance/{InstanceId}/bot
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task DisassociateBotAsync(string InstanceId, DisassociateBotPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/bot";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Associates an existing vocabulary as the default. Contact Lens for Amazon Connect uses the vocabulary in post-call and real-time analysis sessions for the given language.
		/// AssociateDefaultVocabulary default-vocabulary/{InstanceId}/{LanguageCode}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="LanguageCode">The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html">What is Amazon Transcribe?</a> </param>
		/// <returns>Success</returns>
		public async Task<AssociateDefaultVocabularyResponse> AssociateDefaultVocabularyAsync(string InstanceId, AssociateDefaultVocabularyLanguageCode LanguageCode, AssociateDefaultVocabularyPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "default-vocabulary/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+LanguageCode;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AssociateDefaultVocabularyResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Associates a storage resource type for the first time. You can only associate one type of storage configuration in a single call. This means, for example, that you can't define an instance with multiple S3 buckets for storing chat transcripts.</p> <p>This API does not create a resource that doesn't exist. It only associates it to the instance. Ensure that the resource being specified in the storage configuration, like an S3 bucket, exists when being used for association.</p>
		/// AssociateInstanceStorageConfig instance/{InstanceId}/storage-config
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<AssociateInstanceStorageConfigResponse> AssociateInstanceStorageConfigAsync(string InstanceId, AssociateInstanceStorageConfigPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/storage-config";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AssociateInstanceStorageConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Allows the specified Amazon Connect instance to access the specified Lambda function.</p>
		/// AssociateLambdaFunction instance/{InstanceId}/lambda-function
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task AssociateLambdaFunctionAsync(string InstanceId, AssociateLambdaFunctionPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/lambda-function";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Allows the specified Amazon Connect instance to access the specified Amazon Lex V1 bot. This API only supports the association of Amazon Lex V1 bots.</p>
		/// AssociateLexBot instance/{InstanceId}/lex-bot
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task AssociateLexBotAsync(string InstanceId, AssociateLexBotPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/lex-bot";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Associates a flow with a phone number claimed to your Amazon Connect instance.</p> <important> <p>If the number is claimed to a traffic distribution group, and you are calling this API using an instance in the Amazon Web Services Region where the traffic distribution group was created, you can use either a full phone number ARN or UUID value for the <code>PhoneNumberId</code> URI request parameter. However, if the number is claimed to a traffic distribution group and you are calling this API using an instance in the alternate Amazon Web Services Region associated with the traffic distribution group, you must provide a full phone number ARN. If a UUID is provided in this scenario, you will receive a <code>ResourceNotFoundException</code>.</p> </important>
		/// AssociatePhoneNumberContactFlow phone-number/{PhoneNumberId}/contact-flow
		/// </summary>
		/// <param name="PhoneNumberId">A unique identifier for the phone number.</param>
		/// <returns>Success</returns>
		public async Task AssociatePhoneNumberContactFlowAsync(string PhoneNumberId, AssociatePhoneNumberContactFlowPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "phone-number/"+ (PhoneNumberId==null? "" : System.Uri.EscapeDataString(PhoneNumberId))+"/contact-flow";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Associates a set of quick connects with a queue.</p>
		/// AssociateQueueQuickConnects queues/{InstanceId}/{QueueId}/associate-quick-connects
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="QueueId">The identifier for the queue.</param>
		/// <returns>Success</returns>
		public async Task AssociateQueueQuickConnectsAsync(string InstanceId, string QueueId, AssociateQueueQuickConnectsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "queues/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (QueueId==null? "" : System.Uri.EscapeDataString(QueueId))+"/associate-quick-connects";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Associates a set of queues with a routing profile.
		/// AssociateRoutingProfileQueues routing-profiles/{InstanceId}/{RoutingProfileId}/associate-queues
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="RoutingProfileId">The identifier of the routing profile.</param>
		/// <returns>Success</returns>
		public async Task AssociateRoutingProfileQueuesAsync(string InstanceId, string RoutingProfileId, AssociateRoutingProfileQueuesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "routing-profiles/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (RoutingProfileId==null? "" : System.Uri.EscapeDataString(RoutingProfileId))+"/associate-queues";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Associates a security key to the instance.</p>
		/// AssociateSecurityKey instance/{InstanceId}/security-key
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<AssociateSecurityKeyResponse> AssociateSecurityKeyAsync(string InstanceId, AssociateSecurityKeyPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/security-key";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AssociateSecurityKeyResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Claims an available phone number to your Amazon Connect instance or traffic distribution group. You can call this API only in the same Amazon Web Services Region where the Amazon Connect instance or traffic distribution group was created.</p> <p>For more information about how to use this operation, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/claim-phone-number.html">Claim a phone number in your country</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/claim-phone-numbers-traffic-distribution-groups.html">Claim phone numbers to traffic distribution groups</a> in the <i>Amazon Connect Administrator Guide</i>. </p> <important> <p>You can call the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_SearchAvailablePhoneNumbers.html">SearchAvailablePhoneNumbers</a> API for available phone numbers that you can claim. Call the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_DescribePhoneNumber.html">DescribePhoneNumber</a> API to verify the status of a previous <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_ClaimPhoneNumber.html">ClaimPhoneNumber</a> operation.</p> </important> <p>If you plan to claim and release numbers frequently during a 30 day period, contact us for a service quota exception. Otherwise, it is possible you will be blocked from claiming and releasing any more numbers until 30 days past the oldest number released has expired.</p> <p>By default you can claim and release up to 200% of your maximum number of active phone numbers during any 30 day period. If you claim and release phone numbers using the UI or API during a rolling 30 day cycle that exceeds 200% of your phone number service level quota, you will be blocked from claiming any more numbers until 30 days past the oldest number released has expired. </p> <p>For example, if you already have 99 claimed numbers and a service level quota of 99 phone numbers, and in any 30 day period you release 99, claim 99, and then release 99, you will have exceeded the 200% limit. At that point you are blocked from claiming any more numbers until you open an Amazon Web Services support ticket.</p>
		/// ClaimPhoneNumber phone-number/claim
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ClaimPhoneNumberResponse> ClaimPhoneNumberAsync(ClaimPhoneNumberPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "phone-number/claim";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ClaimPhoneNumberResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Creates an agent status for the specified Amazon Connect instance.</p>
		/// CreateAgentStatus agent-status/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateAgentStatusResponse> CreateAgentStatusAsync(string InstanceId, CreateAgentStatusPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "agent-status/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateAgentStatusResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Lists agent statuses.</p>
		/// ListAgentStatuses agent-status/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="AgentStatusTypes">Available agent status types.
		/// Maximum items: 3
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListAgentStatusResponse> ListAgentStatusesAsync(string InstanceId, string nextToken, int maxResults, AgentStatusType[] AgentStatusTypes, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "agent-status/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&"+string.Join("&", AgentStatusTypes.Select(z => $"AgentStatusTypes={z}"))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListAgentStatusResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a flow for the specified Amazon Connect instance.</p> <p>You can also create and update flows using the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/flow-language.html">Amazon Connect Flow language</a>.</p>
		/// CreateContactFlow contact-flows/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateContactFlowResponse> CreateContactFlowAsync(string InstanceId, CreateContactFlowPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-flows/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateContactFlowResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a flow module for the specified Amazon Connect instance.
		/// CreateContactFlowModule contact-flow-modules/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateContactFlowModuleResponse> CreateContactFlowModuleAsync(string InstanceId, CreateContactFlowModulePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-flow-modules/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateContactFlowModuleResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an evaluation form in the specified Amazon Connect instance. The form can be used to define questions related to agent performance, and create sections to organize such questions. Question and section identifiers cannot be duplicated within the same evaluation form.
		/// CreateEvaluationForm evaluation-forms/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateEvaluationFormResponse> CreateEvaluationFormAsync(string InstanceId, CreateEvaluationFormPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "evaluation-forms/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateEvaluationFormResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists evaluation forms in the specified Amazon Connect instance.
		/// ListEvaluationForms evaluation-forms/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="maxResults">The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListEvaluationFormsResponse> ListEvaluationFormsAsync(string InstanceId, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "evaluation-forms/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListEvaluationFormsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Creates hours of operation. </p>
		/// CreateHoursOfOperation hours-of-operations/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateHoursOfOperationResponse> CreateHoursOfOperationAsync(string InstanceId, CreateHoursOfOperationPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hours-of-operations/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateHoursOfOperationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Initiates an Amazon Connect instance with all the supported channels enabled. It does not attach any storage, such as Amazon Simple Storage Service (Amazon S3) or Amazon Kinesis. It also does not allow for any configurations on features, such as Contact Lens for Amazon Connect. </p> <p>Amazon Connect enforces a limit on the total number of instances that you can create or delete in 30 days. If you exceed this limit, you will get an error message indicating there has been an excessive number of attempts at creating or deleting instances. You must wait 30 days before you can restart creating and deleting instances in your account.</p>
		/// CreateInstance instance
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateInstanceResponse> CreateInstanceAsync(CreateInstancePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateInstanceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Return a list of instances which are in active state, creation-in-progress state, and failed state. Instances that aren't successfully created (they are in a failed state) are returned only for 24 hours after the CreateInstance API was invoked.</p>
		/// ListInstances instance
		/// </summary>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 10
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListInstancesResponse> ListInstancesAsync(string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListInstancesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an Amazon Web Services resource association with an Amazon Connect instance.
		/// CreateIntegrationAssociation instance/{InstanceId}/integration-associations
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateIntegrationAssociationResponse> CreateIntegrationAssociationAsync(string InstanceId, CreateIntegrationAssociationPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/integration-associations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateIntegrationAssociationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides summary information about the Amazon Web Services resource associations for the specified Amazon Connect instance.
		/// ListIntegrationAssociations instance/{InstanceId}/integration-associations
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="integrationType">The integration type.</param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListIntegrationAssociationsResponse> ListIntegrationAssociationsAsync(string InstanceId, IntegrationType integrationType, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/integration-associations&integrationType=" + integrationType+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListIntegrationAssociationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds a new participant into an on-going chat contact. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/chat-customize-flow.html">Customize chat flow experiences by integrating custom participants</a>.
		/// CreateParticipant contact/create-participant
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateParticipantResponse> CreateParticipantAsync(CreateParticipantPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/create-participant";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateParticipantResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a prompt. For more information about prompts, such as supported file types and maximum length, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/prompts.html">Create prompts</a> in the <i>Amazon Connect Administrator's Guide</i>.
		/// CreatePrompt prompts/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<CreatePromptResponse> CreatePromptAsync(string InstanceId, CreatePromptPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "prompts/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreatePromptResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Creates a new queue for the specified Amazon Connect instance.</p> <important> <p>If the number being used in the input is claimed to a traffic distribution group, and you are calling this API using an instance in the Amazon Web Services Region where the traffic distribution group was created, you can use either a full phone number ARN or UUID value for the <code>OutboundCallerIdNumberId</code> value of the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_OutboundCallerConfig">OutboundCallerConfig</a> request body parameter. However, if the number is claimed to a traffic distribution group and you are calling this API using an instance in the alternate Amazon Web Services Region associated with the traffic distribution group, you must provide a full phone number ARN. If a UUID is provided in this scenario, you will receive a <code>ResourceNotFoundException</code>.</p> <p>Only use the phone number ARN format that doesn't contain <code>instance</code> in the path, for example, <code>arn:aws:connect:us-east-1:1234567890:phone-number/uuid</code>. This is the same ARN format that is returned when you call the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_ListPhoneNumbersV2.html">ListPhoneNumbersV2</a> API.</p> </important>
		/// CreateQueue queues/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateQueueResponse> CreateQueueAsync(string InstanceId, CreateQueuePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "queues/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateQueueResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a quick connect for the specified Amazon Connect instance.
		/// CreateQuickConnect quick-connects/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateQuickConnectResponse> CreateQuickConnectAsync(string InstanceId, CreateQuickConnectPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "quick-connects/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateQuickConnectResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides information about the quick connects for the specified Amazon Connect instance.
		/// ListQuickConnects quick-connects/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page. The default MaxResult size is 100.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="QuickConnectTypes">The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).
		/// Maximum items: 3
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListQuickConnectsResponse> ListQuickConnectsAsync(string InstanceId, string nextToken, int maxResults, QuickConnectType[] QuickConnectTypes, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "quick-connects/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&"+string.Join("&", QuickConnectTypes.Select(z => $"QuickConnectTypes={z}"))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListQuickConnectsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new routing profile.
		/// CreateRoutingProfile routing-profiles/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateRoutingProfileResponse> CreateRoutingProfileAsync(string InstanceId, CreateRoutingProfilePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "routing-profiles/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateRoutingProfileResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a rule for the specified Amazon Connect instance.</p> <p>Use the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/connect-rules-language.html">Rules Function language</a> to code conditions for the rule. </p>
		/// CreateRule rules/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateRuleResponse> CreateRuleAsync(string InstanceId, CreateRulePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "rules/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateRuleResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List all rules for the specified Amazon Connect instance.
		/// ListRules rules/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="publishStatus">The publish status of the rule.</param>
		/// <param name="eventSourceName">The name of the event source.</param>
		/// <param name="maxResults">The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListRulesResponse> ListRulesAsync(string InstanceId, RulePublishStatus publishStatus, EventSourceName eventSourceName, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "rules/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&publishStatus=" + publishStatus+"&eventSourceName=" + eventSourceName+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListRulesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Creates a security profile.</p>
		/// CreateSecurityProfile security-profiles/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateSecurityProfileResponse> CreateSecurityProfileAsync(string InstanceId, CreateSecurityProfilePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "security-profiles/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateSecurityProfileResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new task template in the specified Amazon Connect instance.
		/// CreateTaskTemplate instance/{InstanceId}/task/template
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateTaskTemplateResponse> CreateTaskTemplateAsync(string InstanceId, CreateTaskTemplatePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/task/template";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateTaskTemplateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists task templates for the specified Amazon Connect instance.
		/// ListTaskTemplates instance/{InstanceId}/task/template
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="nextToken"><p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p> <important> <p>It is not expected that you set this because the value returned in the previous response is always null.</p> </important></param>
		/// <param name="maxResults"><p>The maximum number of results to return per page.</p> <important> <p>It is not expected that you set this.</p> </important>
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="status">Marks a template as <code>ACTIVE</code> or <code>INACTIVE</code> for a task to refer to it. Tasks can only be created from <code>ACTIVE</code> templates. If a template is marked as <code>INACTIVE</code>, then a task that refers to this template cannot be created.</param>
		/// <param name="name">The name of the task template.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListTaskTemplatesResponse> ListTaskTemplatesAsync(string InstanceId, string nextToken, int maxResults, TaskTemplateStatus status, string name, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/task/template&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&status=" + status+"&name=" + (name==null? "" : System.Uri.EscapeDataString(name))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTaskTemplatesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a traffic distribution group given an Amazon Connect instance that has been replicated. </p> <p>For more information about creating traffic distribution groups, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/setup-traffic-distribution-groups.html">Set up traffic distribution groups</a> in the <i>Amazon Connect Administrator Guide</i>. </p>
		/// CreateTrafficDistributionGroup traffic-distribution-group
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateTrafficDistributionGroupResponse> CreateTrafficDistributionGroupAsync(CreateTrafficDistributionGroupPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "traffic-distribution-group";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateTrafficDistributionGroupResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a use case for an integration association.
		/// CreateUseCase instance/{InstanceId}/integration-associations/{IntegrationAssociationId}/use-cases
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="IntegrationAssociationId">The identifier for the integration association.
		/// Min length: 1
		/// Max length: 200
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateUseCaseResponse> CreateUseCaseAsync(string InstanceId, string IntegrationAssociationId, CreateUseCasePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/integration-associations/"+ (IntegrationAssociationId==null? "" : System.Uri.EscapeDataString(IntegrationAssociationId))+"/use-cases";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateUseCaseResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the use cases for the integration association.
		/// ListUseCases instance/{InstanceId}/integration-associations/{IntegrationAssociationId}/use-cases
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="IntegrationAssociationId">The identifier for the integration association.
		/// Min length: 1
		/// Max length: 200
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListUseCasesResponse> ListUseCasesAsync(string InstanceId, string IntegrationAssociationId, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/integration-associations/"+ (IntegrationAssociationId==null? "" : System.Uri.EscapeDataString(IntegrationAssociationId))+"/use-cases&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListUseCasesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a user account for the specified Amazon Connect instance.</p> <p>For information about how to create user accounts using the Amazon Connect console, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/user-management.html">Add Users</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
		/// CreateUser users/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateUserResponse> CreateUserAsync(string InstanceId, CreateUserPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "users/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateUserResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new user hierarchy group.
		/// CreateUserHierarchyGroup user-hierarchy-groups/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateUserHierarchyGroupResponse> CreateUserHierarchyGroupAsync(string InstanceId, CreateUserHierarchyGroupPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "user-hierarchy-groups/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateUserHierarchyGroupResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a custom vocabulary associated with your Amazon Connect instance. You can set a custom vocabulary to be your default vocabulary for a given language. Contact Lens for Amazon Connect uses the default vocabulary in post-call and real-time contact analysis sessions for that language.
		/// CreateVocabulary vocabulary/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateVocabularyResponse> CreateVocabularyAsync(string InstanceId, CreateVocabularyPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "vocabulary/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateVocabularyResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deactivates an evaluation form in the specified Amazon Connect instance. After a form is deactivated, it is no longer available for users to start new evaluations based on the form.
		/// DeactivateEvaluationForm evaluation-forms/{InstanceId}/{EvaluationFormId}/deactivate
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="EvaluationFormId">The unique identifier for the evaluation form.
		/// Min length: 1
		/// Max length: 500
		// </param>
		/// <returns>Success</returns>
		public async Task<DeactivateEvaluationFormResponse> DeactivateEvaluationFormAsync(string InstanceId, string EvaluationFormId, DeactivateEvaluationFormPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "evaluation-forms/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (EvaluationFormId==null? "" : System.Uri.EscapeDataString(EvaluationFormId))+"/deactivate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeactivateEvaluationFormResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a contact evaluation in the specified Amazon Connect instance.
		/// DeleteContactEvaluation contact-evaluations/{InstanceId}/{EvaluationId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="EvaluationId">A unique identifier for the contact evaluation.
		/// Min length: 1
		/// Max length: 500
		// </param>
		/// <returns>Success</returns>
		public async Task DeleteContactEvaluationAsync(string InstanceId, string EvaluationId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-evaluations/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (EvaluationId==null? "" : System.Uri.EscapeDataString(EvaluationId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes a contact evaluation in the specified Amazon Connect instance.
		/// DescribeContactEvaluation contact-evaluations/{InstanceId}/{EvaluationId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="EvaluationId">A unique identifier for the contact evaluation.
		/// Min length: 1
		/// Max length: 500
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeContactEvaluationResponse> DescribeContactEvaluationAsync(string InstanceId, string EvaluationId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-evaluations/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (EvaluationId==null? "" : System.Uri.EscapeDataString(EvaluationId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeContactEvaluationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates details about a contact evaluation in the specified Amazon Connect instance. A contact evaluation must be in draft state. Answers included in the request are merged with existing answers for the given evaluation. An answer or note can be deleted by passing an empty object (<code>{}</code>) to the question identifier.
		/// UpdateContactEvaluation contact-evaluations/{InstanceId}/{EvaluationId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="EvaluationId">A unique identifier for the contact evaluation.
		/// Min length: 1
		/// Max length: 500
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateContactEvaluationResponse> UpdateContactEvaluationAsync(string InstanceId, string EvaluationId, UpdateContactEvaluationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-evaluations/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (EvaluationId==null? "" : System.Uri.EscapeDataString(EvaluationId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateContactEvaluationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a flow for the specified Amazon Connect instance.
		/// DeleteContactFlow contact-flows/{InstanceId}/{ContactFlowId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="ContactFlowId">The identifier of the flow.
		/// Max length: 500
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteContactFlowResponse> DeleteContactFlowAsync(string InstanceId, string ContactFlowId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-flows/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (ContactFlowId==null? "" : System.Uri.EscapeDataString(ContactFlowId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteContactFlowResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Describes the specified flow.</p> <p>You can also create and update flows using the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/flow-language.html">Amazon Connect Flow language</a>.</p>
		/// DescribeContactFlow contact-flows/{InstanceId}/{ContactFlowId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="ContactFlowId">The identifier of the flow.
		/// Max length: 500
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeContactFlowResponse> DescribeContactFlowAsync(string InstanceId, string ContactFlowId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-flows/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (ContactFlowId==null? "" : System.Uri.EscapeDataString(ContactFlowId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeContactFlowResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the specified flow module.
		/// DeleteContactFlowModule contact-flow-modules/{InstanceId}/{ContactFlowModuleId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="ContactFlowModuleId">The identifier of the flow module.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteContactFlowModuleResponse> DeleteContactFlowModuleAsync(string InstanceId, string ContactFlowModuleId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-flow-modules/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (ContactFlowModuleId==null? "" : System.Uri.EscapeDataString(ContactFlowModuleId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteContactFlowModuleResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes the specified flow module.
		/// DescribeContactFlowModule contact-flow-modules/{InstanceId}/{ContactFlowModuleId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="ContactFlowModuleId">The identifier of the flow module.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeContactFlowModuleResponse> DescribeContactFlowModuleAsync(string InstanceId, string ContactFlowModuleId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-flow-modules/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (ContactFlowModuleId==null? "" : System.Uri.EscapeDataString(ContactFlowModuleId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeContactFlowModuleResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes an evaluation form in the specified Amazon Connect instance. </p> <ul> <li> <p>If the version property is provided, only the specified version of the evaluation form is deleted.</p> </li> <li> <p>If no version is provided, then the full form (all versions) is deleted.</p> </li> </ul>
		/// DeleteEvaluationForm evaluation-forms/{InstanceId}/{EvaluationFormId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="EvaluationFormId">The unique identifier for the evaluation form.
		/// Min length: 1
		/// Max length: 500
		// </param>
		/// <param name="version">The unique identifier for the evaluation form.
		/// Minimum: 1
		// </param>
		/// <returns>Success</returns>
		public async Task DeleteEvaluationFormAsync(string InstanceId, string EvaluationFormId, int version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "evaluation-forms/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (EvaluationFormId==null? "" : System.Uri.EscapeDataString(EvaluationFormId))+"&version="+version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes an evaluation form in the specified Amazon Connect instance. If the version property is not provided, the latest version of the evaluation form is described.
		/// DescribeEvaluationForm evaluation-forms/{InstanceId}/{EvaluationFormId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="EvaluationFormId">A unique identifier for the contact evaluation.
		/// Min length: 1
		/// Max length: 500
		// </param>
		/// <param name="version">A version of the evaluation form.
		/// Minimum: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeEvaluationFormResponse> DescribeEvaluationFormAsync(string InstanceId, string EvaluationFormId, int version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "evaluation-forms/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (EvaluationFormId==null? "" : System.Uri.EscapeDataString(EvaluationFormId))+"&version="+version;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeEvaluationFormResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates details about a specific evaluation form version in the specified Amazon Connect instance. Question and section identifiers cannot be duplicated within the same evaluation form.</p> <p>This operation does not support partial updates. Instead it does a full update of evaluation form content.</p>
		/// UpdateEvaluationForm evaluation-forms/{InstanceId}/{EvaluationFormId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="EvaluationFormId">The unique identifier for the evaluation form.
		/// Min length: 1
		/// Max length: 500
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateEvaluationFormResponse> UpdateEvaluationFormAsync(string InstanceId, string EvaluationFormId, UpdateEvaluationFormPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "evaluation-forms/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (EvaluationFormId==null? "" : System.Uri.EscapeDataString(EvaluationFormId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateEvaluationFormResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Deletes an hours of operation.</p>
		/// DeleteHoursOfOperation hours-of-operations/{InstanceId}/{HoursOfOperationId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="HoursOfOperationId">The identifier for the hours of operation.</param>
		/// <returns>Success</returns>
		public async Task DeleteHoursOfOperationAsync(string InstanceId, string HoursOfOperationId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hours-of-operations/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (HoursOfOperationId==null? "" : System.Uri.EscapeDataString(HoursOfOperationId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Describes the hours of operation.</p>
		/// DescribeHoursOfOperation hours-of-operations/{InstanceId}/{HoursOfOperationId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="HoursOfOperationId">The identifier for the hours of operation.</param>
		/// <returns>Success</returns>
		public async Task<DescribeHoursOfOperationResponse> DescribeHoursOfOperationAsync(string InstanceId, string HoursOfOperationId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hours-of-operations/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (HoursOfOperationId==null? "" : System.Uri.EscapeDataString(HoursOfOperationId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeHoursOfOperationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates the hours of operation.</p>
		/// UpdateHoursOfOperation hours-of-operations/{InstanceId}/{HoursOfOperationId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="HoursOfOperationId">The identifier of the hours of operation.</param>
		/// <returns>Success</returns>
		public async Task UpdateHoursOfOperationAsync(string InstanceId, string HoursOfOperationId, UpdateHoursOfOperationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hours-of-operations/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (HoursOfOperationId==null? "" : System.Uri.EscapeDataString(HoursOfOperationId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Deletes the Amazon Connect instance.</p> <p>Amazon Connect enforces a limit on the total number of instances that you can create or delete in 30 days. If you exceed this limit, you will get an error message indicating there has been an excessive number of attempts at creating or deleting instances. You must wait 30 days before you can restart creating and deleting instances in your account.</p>
		/// DeleteInstance instance/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task DeleteInstanceAsync(string InstanceId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Returns the current state of the specified instance identifier. It tracks the instance while it is being created and returns an error status, if applicable. </p> <p>If an instance is not created successfully, the instance status reason field returns details relevant to the reason. The instance in a failed state is returned only for 24 hours after the CreateInstance API was invoked.</p>
		/// DescribeInstance instance/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeInstanceResponse> DescribeInstanceAsync(string InstanceId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeInstanceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an Amazon Web Services resource association from an Amazon Connect instance. The association must not have any use cases associated with it.
		/// DeleteIntegrationAssociation instance/{InstanceId}/integration-associations/{IntegrationAssociationId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="IntegrationAssociationId">The identifier for the integration association.
		/// Min length: 1
		/// Max length: 200
		// </param>
		/// <returns>Success</returns>
		public async Task DeleteIntegrationAssociationAsync(string InstanceId, string IntegrationAssociationId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/integration-associations/"+ (IntegrationAssociationId==null? "" : System.Uri.EscapeDataString(IntegrationAssociationId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a prompt.
		/// DeletePrompt prompts/{InstanceId}/{PromptId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="PromptId">A unique identifier for the prompt.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task DeletePromptAsync(string InstanceId, string PromptId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "prompts/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (PromptId==null? "" : System.Uri.EscapeDataString(PromptId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes the prompt.
		/// DescribePrompt prompts/{InstanceId}/{PromptId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="PromptId">A unique identifier for the prompt.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribePromptResponse> DescribePromptAsync(string InstanceId, string PromptId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "prompts/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (PromptId==null? "" : System.Uri.EscapeDataString(PromptId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribePromptResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a prompt.
		/// UpdatePrompt prompts/{InstanceId}/{PromptId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="PromptId">A unique identifier for the prompt.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdatePromptResponse> UpdatePromptAsync(string InstanceId, string PromptId, UpdatePromptPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "prompts/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (PromptId==null? "" : System.Uri.EscapeDataString(PromptId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdatePromptResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a queue.
		/// DeleteQueue queues/{InstanceId}/{QueueId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="QueueId">The identifier for the queue.</param>
		/// <returns>Success</returns>
		public async Task DeleteQueueAsync(string InstanceId, string QueueId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "queues/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (QueueId==null? "" : System.Uri.EscapeDataString(QueueId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Describes the specified queue.</p>
		/// DescribeQueue queues/{InstanceId}/{QueueId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="QueueId">The identifier for the queue.</param>
		/// <returns>Success</returns>
		public async Task<DescribeQueueResponse> DescribeQueueAsync(string InstanceId, string QueueId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "queues/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (QueueId==null? "" : System.Uri.EscapeDataString(QueueId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeQueueResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a quick connect.
		/// DeleteQuickConnect quick-connects/{InstanceId}/{QuickConnectId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="QuickConnectId">The identifier for the quick connect.</param>
		/// <returns>Success</returns>
		public async Task DeleteQuickConnectAsync(string InstanceId, string QuickConnectId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "quick-connects/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (QuickConnectId==null? "" : System.Uri.EscapeDataString(QuickConnectId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes the quick connect.
		/// DescribeQuickConnect quick-connects/{InstanceId}/{QuickConnectId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="QuickConnectId">The identifier for the quick connect.</param>
		/// <returns>Success</returns>
		public async Task<DescribeQuickConnectResponse> DescribeQuickConnectAsync(string InstanceId, string QuickConnectId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "quick-connects/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (QuickConnectId==null? "" : System.Uri.EscapeDataString(QuickConnectId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeQuickConnectResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a routing profile.
		/// DeleteRoutingProfile routing-profiles/{InstanceId}/{RoutingProfileId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="RoutingProfileId">The identifier of the routing profile.</param>
		/// <returns>Success</returns>
		public async Task DeleteRoutingProfileAsync(string InstanceId, string RoutingProfileId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "routing-profiles/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (RoutingProfileId==null? "" : System.Uri.EscapeDataString(RoutingProfileId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes the specified routing profile.
		/// DescribeRoutingProfile routing-profiles/{InstanceId}/{RoutingProfileId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="RoutingProfileId">The identifier of the routing profile.</param>
		/// <returns>Success</returns>
		public async Task<DescribeRoutingProfileResponse> DescribeRoutingProfileAsync(string InstanceId, string RoutingProfileId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "routing-profiles/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (RoutingProfileId==null? "" : System.Uri.EscapeDataString(RoutingProfileId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeRoutingProfileResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a rule for the specified Amazon Connect instance.
		/// DeleteRule rules/{InstanceId}/{RuleId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="RuleId">A unique identifier for the rule.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task DeleteRuleAsync(string InstanceId, string RuleId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "rules/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (RuleId==null? "" : System.Uri.EscapeDataString(RuleId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes a rule for the specified Amazon Connect instance.
		/// DescribeRule rules/{InstanceId}/{RuleId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="RuleId">A unique identifier for the rule.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeRuleResponse> DescribeRuleAsync(string InstanceId, string RuleId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "rules/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (RuleId==null? "" : System.Uri.EscapeDataString(RuleId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeRuleResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates a rule for the specified Amazon Connect instance.</p> <p>Use the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/connect-rules-language.html">Rules Function language</a> to code conditions for the rule. </p>
		/// UpdateRule rules/{InstanceId}/{RuleId}
		/// </summary>
		/// <param name="RuleId">A unique identifier for the rule.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task UpdateRuleAsync(string RuleId, string InstanceId, UpdateRulePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "rules/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (RuleId==null? "" : System.Uri.EscapeDataString(RuleId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Deletes a security profile.</p>
		/// DeleteSecurityProfile security-profiles/{InstanceId}/{SecurityProfileId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="SecurityProfileId">The identifier for the security profle.</param>
		/// <returns>Success</returns>
		public async Task DeleteSecurityProfileAsync(string InstanceId, string SecurityProfileId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "security-profiles/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (SecurityProfileId==null? "" : System.Uri.EscapeDataString(SecurityProfileId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Gets basic information about the security profle.</p>
		/// DescribeSecurityProfile security-profiles/{InstanceId}/{SecurityProfileId}
		/// </summary>
		/// <param name="SecurityProfileId">The identifier for the security profle.</param>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeSecurityProfileResponse> DescribeSecurityProfileAsync(string SecurityProfileId, string InstanceId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "security-profiles/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (SecurityProfileId==null? "" : System.Uri.EscapeDataString(SecurityProfileId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeSecurityProfileResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates a security profile.</p>
		/// UpdateSecurityProfile security-profiles/{InstanceId}/{SecurityProfileId}
		/// </summary>
		/// <param name="SecurityProfileId">The identifier for the security profle.</param>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task UpdateSecurityProfileAsync(string SecurityProfileId, string InstanceId, UpdateSecurityProfilePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "security-profiles/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (SecurityProfileId==null? "" : System.Uri.EscapeDataString(SecurityProfileId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the task template.
		/// DeleteTaskTemplate instance/{InstanceId}/task/template/{TaskTemplateId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="TaskTemplateId">A unique identifier for the task template.
		/// Min length: 1
		/// Max length: 500
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteTaskTemplateResponse> DeleteTaskTemplateAsync(string InstanceId, string TaskTemplateId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/task/template/"+ (TaskTemplateId==null? "" : System.Uri.EscapeDataString(TaskTemplateId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteTaskTemplateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets details about a specific task template in the specified Amazon Connect instance.
		/// GetTaskTemplate instance/{InstanceId}/task/template/{TaskTemplateId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="TaskTemplateId">A unique identifier for the task template.
		/// Min length: 1
		/// Max length: 500
		// </param>
		/// <param name="snapshotVersion">The system generated version of a task template that is associated with a task, when the task is created.</param>
		/// <returns>Success</returns>
		public async Task<GetTaskTemplateResponse> GetTaskTemplateAsync(string InstanceId, string TaskTemplateId, string snapshotVersion, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/task/template/"+ (TaskTemplateId==null? "" : System.Uri.EscapeDataString(TaskTemplateId))+"&snapshotVersion=" + (snapshotVersion==null? "" : System.Uri.EscapeDataString(snapshotVersion));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetTaskTemplateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates details about a specific task template in the specified Amazon Connect instance. This operation does not support partial updates. Instead it does a full update of template content.
		/// UpdateTaskTemplate instance/{InstanceId}/task/template/{TaskTemplateId}
		/// </summary>
		/// <param name="TaskTemplateId">A unique identifier for the task template.
		/// Min length: 1
		/// Max length: 500
		// </param>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateTaskTemplateResponse> UpdateTaskTemplateAsync(string TaskTemplateId, string InstanceId, UpdateTaskTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/task/template/"+ (TaskTemplateId==null? "" : System.Uri.EscapeDataString(TaskTemplateId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateTaskTemplateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a traffic distribution group. This API can be called only in the Region where the traffic distribution group is created.</p> <p>For more information about deleting traffic distribution groups, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/delete-traffic-distribution-groups.html">Delete traffic distribution groups</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
		/// DeleteTrafficDistributionGroup traffic-distribution-group/{TrafficDistributionGroupId}
		/// </summary>
		/// <param name="TrafficDistributionGroupId">The identifier of the traffic distribution group. This can be the ID or the ARN if the API is being called in the Region where the traffic distribution group was created. The ARN must be provided if the call is from the replicated Region.</param>
		/// <returns>Success</returns>
		public async Task<DeleteTrafficDistributionGroupResponse> DeleteTrafficDistributionGroupAsync(string TrafficDistributionGroupId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "traffic-distribution-group/"+ (TrafficDistributionGroupId==null? "" : System.Uri.EscapeDataString(TrafficDistributionGroupId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteTrafficDistributionGroupResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets details and status of a traffic distribution group.
		/// DescribeTrafficDistributionGroup traffic-distribution-group/{TrafficDistributionGroupId}
		/// </summary>
		/// <param name="TrafficDistributionGroupId">The identifier of the traffic distribution group. This can be the ID or the ARN if the API is being called in the Region where the traffic distribution group was created. The ARN must be provided if the call is from the replicated Region.</param>
		/// <returns>Success</returns>
		public async Task<DescribeTrafficDistributionGroupResponse> DescribeTrafficDistributionGroupAsync(string TrafficDistributionGroupId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "traffic-distribution-group/"+ (TrafficDistributionGroupId==null? "" : System.Uri.EscapeDataString(TrafficDistributionGroupId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeTrafficDistributionGroupResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a use case from an integration association.
		/// DeleteUseCase instance/{InstanceId}/integration-associations/{IntegrationAssociationId}/use-cases/{UseCaseId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="IntegrationAssociationId">The identifier for the integration association.
		/// Min length: 1
		/// Max length: 200
		// </param>
		/// <param name="UseCaseId">The identifier for the use case.
		/// Min length: 1
		/// Max length: 200
		// </param>
		/// <returns>Success</returns>
		public async Task DeleteUseCaseAsync(string InstanceId, string IntegrationAssociationId, string UseCaseId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/integration-associations/"+ (IntegrationAssociationId==null? "" : System.Uri.EscapeDataString(IntegrationAssociationId))+"/use-cases/"+ (UseCaseId==null? "" : System.Uri.EscapeDataString(UseCaseId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a user account from the specified Amazon Connect instance.</p> <p>For information about what happens to a user's data when their account is deleted, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/delete-users.html">Delete Users from Your Amazon Connect Instance</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
		/// DeleteUser users/{InstanceId}/{UserId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="UserId">The identifier of the user.</param>
		/// <returns>Success</returns>
		public async Task DeleteUserAsync(string InstanceId, string UserId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "users/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (UserId==null? "" : System.Uri.EscapeDataString(UserId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes the specified user account. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID in the Amazon Connect console</a> (it’s the final part of the ARN). The console does not display the user IDs. Instead, list the users and note the IDs provided in the output.
		/// DescribeUser users/{InstanceId}/{UserId}
		/// </summary>
		/// <param name="UserId">The identifier of the user account.</param>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeUserResponse> DescribeUserAsync(string UserId, string InstanceId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "users/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (UserId==null? "" : System.Uri.EscapeDataString(UserId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeUserResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an existing user hierarchy group. It must not be associated with any agents or have any active child groups.
		/// DeleteUserHierarchyGroup user-hierarchy-groups/{InstanceId}/{HierarchyGroupId}
		/// </summary>
		/// <param name="HierarchyGroupId">The identifier of the hierarchy group.</param>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task DeleteUserHierarchyGroupAsync(string HierarchyGroupId, string InstanceId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "user-hierarchy-groups/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (HierarchyGroupId==null? "" : System.Uri.EscapeDataString(HierarchyGroupId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes the specified hierarchy group.
		/// DescribeUserHierarchyGroup user-hierarchy-groups/{InstanceId}/{HierarchyGroupId}
		/// </summary>
		/// <param name="HierarchyGroupId">The identifier of the hierarchy group.</param>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeUserHierarchyGroupResponse> DescribeUserHierarchyGroupAsync(string HierarchyGroupId, string InstanceId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "user-hierarchy-groups/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (HierarchyGroupId==null? "" : System.Uri.EscapeDataString(HierarchyGroupId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeUserHierarchyGroupResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the vocabulary that has the given identifier.
		/// DeleteVocabulary vocabulary-remove/{InstanceId}/{VocabularyId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="VocabularyId">The identifier of the custom vocabulary.
		/// Min length: 1
		/// Max length: 500
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteVocabularyResponse> DeleteVocabularyAsync(string InstanceId, string VocabularyId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "vocabulary-remove/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (VocabularyId==null? "" : System.Uri.EscapeDataString(VocabularyId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteVocabularyResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Describes an agent status.</p>
		/// DescribeAgentStatus agent-status/{InstanceId}/{AgentStatusId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="AgentStatusId">The identifier for the agent status.</param>
		/// <returns>Success</returns>
		public async Task<DescribeAgentStatusResponse> DescribeAgentStatusAsync(string InstanceId, string AgentStatusId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "agent-status/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (AgentStatusId==null? "" : System.Uri.EscapeDataString(AgentStatusId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeAgentStatusResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates agent status.</p>
		/// UpdateAgentStatus agent-status/{InstanceId}/{AgentStatusId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="AgentStatusId">The identifier of the agent status.</param>
		/// <returns>Success</returns>
		public async Task UpdateAgentStatusAsync(string InstanceId, string AgentStatusId, UpdateAgentStatusPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "agent-status/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (AgentStatusId==null? "" : System.Uri.EscapeDataString(AgentStatusId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Describes the specified contact. </p> <important> <p>Contact information remains available in Amazon Connect for 24 months, and then it is deleted.</p> <p>Only data from November 12, 2021, and later is returned by this API.</p> </important>
		/// DescribeContact contacts/{InstanceId}/{ContactId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="ContactId">The identifier of the contact.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeContactResponse> DescribeContactAsync(string InstanceId, string ContactId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contacts/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (ContactId==null? "" : System.Uri.EscapeDataString(ContactId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeContactResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Adds or updates user-defined contact information associated with the specified contact. At least one field to be updated must be present in the request.</p> <important> <p>You can add or update user-defined contact information for both ongoing and completed contacts.</p> </important>
		/// UpdateContact contacts/{InstanceId}/{ContactId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="ContactId">The identifier of the contact. This is the identifier of the contact associated with the first interaction with your contact center.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateContactResponse> UpdateContactAsync(string InstanceId, string ContactId, UpdateContactPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contacts/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (ContactId==null? "" : System.Uri.EscapeDataString(ContactId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateContactResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Describes the specified instance attribute.</p>
		/// DescribeInstanceAttribute instance/{InstanceId}/attribute/{AttributeType}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="AttributeType">The type of attribute.</param>
		/// <returns>Success</returns>
		public async Task<DescribeInstanceAttributeResponse> DescribeInstanceAttributeAsync(string InstanceId, InstanceAttributeType AttributeType, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/attribute/"+AttributeType;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeInstanceAttributeResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates the value for the specified attribute type.</p>
		/// UpdateInstanceAttribute instance/{InstanceId}/attribute/{AttributeType}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="AttributeType"><p>The type of attribute.</p> <note> <p>Only allowlisted customers can consume USE_CUSTOM_TTS_VOICES. To access this feature, contact Amazon Web Services Support for allowlisting.</p> </note></param>
		/// <returns>Success</returns>
		public async Task UpdateInstanceAttributeAsync(string InstanceId, InstanceAttributeType AttributeType, UpdateInstanceAttributePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/attribute/"+AttributeType;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Retrieves the current storage configurations for the specified resource type, association ID, and instance ID.</p>
		/// DescribeInstanceStorageConfig instance/{InstanceId}/storage-config/{AssociationId}#resourceType
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="AssociationId">The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="resourceType">A valid resource type.</param>
		/// <returns>Success</returns>
		public async Task<DescribeInstanceStorageConfigResponse> DescribeInstanceStorageConfigAsync(string InstanceId, string AssociationId, InstanceStorageResourceType resourceType, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/storage-config/"+ (AssociationId==null? "" : System.Uri.EscapeDataString(AssociationId))+"#resourceType&resourceType=" + resourceType;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeInstanceStorageConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Removes the storage type configurations for the specified resource type and association ID.</p>
		/// DisassociateInstanceStorageConfig instance/{InstanceId}/storage-config/{AssociationId}#resourceType
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="AssociationId">The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="resourceType">A valid resource type.</param>
		/// <returns>Success</returns>
		public async Task DisassociateInstanceStorageConfigAsync(string InstanceId, string AssociationId, InstanceStorageResourceType resourceType, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/storage-config/"+ (AssociationId==null? "" : System.Uri.EscapeDataString(AssociationId))+"#resourceType&resourceType=" + resourceType;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates an existing configuration for a resource type. This API is idempotent.</p>
		/// UpdateInstanceStorageConfig instance/{InstanceId}/storage-config/{AssociationId}#resourceType
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="AssociationId">The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="resourceType">A valid resource type.</param>
		/// <returns>Success</returns>
		public async Task UpdateInstanceStorageConfigAsync(string InstanceId, string AssociationId, InstanceStorageResourceType resourceType, UpdateInstanceStorageConfigPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/storage-config/"+ (AssociationId==null? "" : System.Uri.EscapeDataString(AssociationId))+"#resourceType&resourceType=" + resourceType;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Gets details and status of a phone number that’s claimed to your Amazon Connect instance or traffic distribution group.</p> <important> <p>If the number is claimed to a traffic distribution group, and you are calling in the Amazon Web Services Region where the traffic distribution group was created, you can use either a phone number ARN or UUID value for the <code>PhoneNumberId</code> URI request parameter. However, if the number is claimed to a traffic distribution group and you are calling this API in the alternate Amazon Web Services Region associated with the traffic distribution group, you must provide a full phone number ARN. If a UUID is provided in this scenario, you will receive a <code>ResourceNotFoundException</code>.</p> </important>
		/// DescribePhoneNumber phone-number/{PhoneNumberId}
		/// </summary>
		/// <param name="PhoneNumberId">A unique identifier for the phone number.</param>
		/// <returns>Success</returns>
		public async Task<DescribePhoneNumberResponse> DescribePhoneNumberAsync(string PhoneNumberId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "phone-number/"+ (PhoneNumberId==null? "" : System.Uri.EscapeDataString(PhoneNumberId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribePhoneNumberResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Releases a phone number previously claimed to an Amazon Connect instance or traffic distribution group. You can call this API only in the Amazon Web Services Region where the number was claimed.</p> <important> <p>To release phone numbers from a traffic distribution group, use the <code>ReleasePhoneNumber</code> API, not the Amazon Connect console.</p> <p>After releasing a phone number, the phone number enters into a cooldown period of 30 days. It cannot be searched for or claimed again until the period has ended. If you accidentally release a phone number, contact Amazon Web Services Support.</p> </important> <p>If you plan to claim and release numbers frequently during a 30 day period, contact us for a service quota exception. Otherwise, it is possible you will be blocked from claiming and releasing any more numbers until 30 days past the oldest number released has expired.</p> <p>By default you can claim and release up to 200% of your maximum number of active phone numbers during any 30 day period. If you claim and release phone numbers using the UI or API during a rolling 30 day cycle that exceeds 200% of your phone number service level quota, you will be blocked from claiming any more numbers until 30 days past the oldest number released has expired. </p> <p>For example, if you already have 99 claimed numbers and a service level quota of 99 phone numbers, and in any 30 day period you release 99, claim 99, and then release 99, you will have exceeded the 200% limit. At that point you are blocked from claiming any more numbers until you open an Amazon Web Services support ticket.</p>
		/// ReleasePhoneNumber phone-number/{PhoneNumberId}
		/// </summary>
		/// <param name="PhoneNumberId">A unique identifier for the phone number.</param>
		/// <param name="clientToken">A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
		/// Max length: 500
		// </param>
		/// <returns>Success</returns>
		public async Task ReleasePhoneNumberAsync(string PhoneNumberId, string clientToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "phone-number/"+ (PhoneNumberId==null? "" : System.Uri.EscapeDataString(PhoneNumberId))+"&clientToken=" + (clientToken==null? "" : System.Uri.EscapeDataString(clientToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates your claimed phone number from its current Amazon Connect instance or traffic distribution group to another Amazon Connect instance or traffic distribution group in the same Amazon Web Services Region.</p> <important> <p>After using this API, you must verify that the phone number is attached to the correct flow in the target instance or traffic distribution group. You need to do this because the API switches only the phone number to a new instance or traffic distribution group. It doesn't migrate the flow configuration of the phone number, too.</p> <p>You can call <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_DescribePhoneNumber.html">DescribePhoneNumber</a> API to verify the status of a previous <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdatePhoneNumber.html">UpdatePhoneNumber</a> operation.</p> </important>
		/// UpdatePhoneNumber phone-number/{PhoneNumberId}
		/// </summary>
		/// <param name="PhoneNumberId">A unique identifier for the phone number.</param>
		/// <returns>Success</returns>
		public async Task<UpdatePhoneNumberResponse> UpdatePhoneNumberAsync(string PhoneNumberId, UpdatePhoneNumberPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "phone-number/"+ (PhoneNumberId==null? "" : System.Uri.EscapeDataString(PhoneNumberId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdatePhoneNumberResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes the hierarchy structure of the specified Amazon Connect instance.
		/// DescribeUserHierarchyStructure user-hierarchy-structure/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeUserHierarchyStructureResponse> DescribeUserHierarchyStructureAsync(string InstanceId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "user-hierarchy-structure/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeUserHierarchyStructureResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the user hierarchy structure: add, remove, and rename user hierarchy levels.
		/// UpdateUserHierarchyStructure user-hierarchy-structure/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task UpdateUserHierarchyStructureAsync(string InstanceId, UpdateUserHierarchyStructurePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "user-hierarchy-structure/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes the specified vocabulary.
		/// DescribeVocabulary vocabulary/{InstanceId}/{VocabularyId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="VocabularyId">The identifier of the custom vocabulary.
		/// Min length: 1
		/// Max length: 500
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeVocabularyResponse> DescribeVocabularyAsync(string InstanceId, string VocabularyId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "vocabulary/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (VocabularyId==null? "" : System.Uri.EscapeDataString(VocabularyId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeVocabularyResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Revokes access to integrated applications from Amazon Connect.</p>
		/// DisassociateApprovedOrigin instance/{InstanceId}/approved-origin#origin
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="origin">The domain URL of the integrated application.
		/// Max length: 267
		// </param>
		/// <returns>Success</returns>
		public async Task DisassociateApprovedOriginAsync(string InstanceId, string origin, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/approved-origin#origin&origin=" + (origin==null? "" : System.Uri.EscapeDataString(origin));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Remove the Lambda function from the dropdown options available in the relevant flow blocks.</p>
		/// DisassociateLambdaFunction instance/{InstanceId}/lambda-function#functionArn
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance..
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="functionArn">The Amazon Resource Name (ARN) of the Lambda function being disassociated.
		/// Min length: 1
		/// Max length: 140
		// </param>
		/// <returns>Success</returns>
		public async Task DisassociateLambdaFunctionAsync(string InstanceId, string functionArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/lambda-function#functionArn&functionArn=" + (functionArn==null? "" : System.Uri.EscapeDataString(functionArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Revokes authorization from the specified instance to access the specified Amazon Lex bot.</p>
		/// DisassociateLexBot instance/{InstanceId}/lex-bot#botName&lexRegion
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="botName">The name of the Amazon Lex bot. Maximum character limit of 50.
		/// Max length: 50
		// </param>
		/// <param name="lexRegion">The Amazon Web Services Region in which the Amazon Lex bot has been created.
		/// Max length: 60
		// </param>
		/// <returns>Success</returns>
		public async Task DisassociateLexBotAsync(string InstanceId, string botName, string lexRegion, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/lex-bot#botName&lexRegion&botName=" + (botName==null? "" : System.Uri.EscapeDataString(botName))+"&lexRegion=" + (lexRegion==null? "" : System.Uri.EscapeDataString(lexRegion));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Removes the flow association from a phone number claimed to your Amazon Connect instance.</p> <important> <p>If the number is claimed to a traffic distribution group, and you are calling this API using an instance in the Amazon Web Services Region where the traffic distribution group was created, you can use either a full phone number ARN or UUID value for the <code>PhoneNumberId</code> URI request parameter. However, if the number is claimed to a traffic distribution group and you are calling this API using an instance in the alternate Amazon Web Services Region associated with the traffic distribution group, you must provide a full phone number ARN. If a UUID is provided in this scenario, you will receive a <code>ResourceNotFoundException</code>.</p> </important>
		/// DisassociatePhoneNumberContactFlow phone-number/{PhoneNumberId}/contact-flow#instanceId
		/// </summary>
		/// <param name="PhoneNumberId">A unique identifier for the phone number.</param>
		/// <param name="instanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task DisassociatePhoneNumberContactFlowAsync(string PhoneNumberId, string instanceId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "phone-number/"+ (PhoneNumberId==null? "" : System.Uri.EscapeDataString(PhoneNumberId))+"/contact-flow#instanceId&instanceId=" + (instanceId==null? "" : System.Uri.EscapeDataString(instanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Disassociates a set of quick connects from a queue.</p>
		/// DisassociateQueueQuickConnects queues/{InstanceId}/{QueueId}/disassociate-quick-connects
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="QueueId">The identifier for the queue.</param>
		/// <returns>Success</returns>
		public async Task DisassociateQueueQuickConnectsAsync(string InstanceId, string QueueId, DisassociateQueueQuickConnectsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "queues/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (QueueId==null? "" : System.Uri.EscapeDataString(QueueId))+"/disassociate-quick-connects";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Disassociates a set of queues from a routing profile.
		/// DisassociateRoutingProfileQueues routing-profiles/{InstanceId}/{RoutingProfileId}/disassociate-queues
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="RoutingProfileId">The identifier of the routing profile.</param>
		/// <returns>Success</returns>
		public async Task DisassociateRoutingProfileQueuesAsync(string InstanceId, string RoutingProfileId, DisassociateRoutingProfileQueuesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "routing-profiles/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (RoutingProfileId==null? "" : System.Uri.EscapeDataString(RoutingProfileId))+"/disassociate-queues";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Deletes the specified security key.</p>
		/// DisassociateSecurityKey instance/{InstanceId}/security-key/{AssociationId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="AssociationId">The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task DisassociateSecurityKeyAsync(string InstanceId, string AssociationId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/security-key/"+ (AssociationId==null? "" : System.Uri.EscapeDataString(AssociationId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Dismisses contacts from an agent’s CCP and returns the agent to an available state, which allows the agent to receive a new routed contact. Contacts can only be dismissed if they are in a <code>MISSED</code>, <code>ERROR</code>, <code>ENDED</code>, or <code>REJECTED</code> state in the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/about-contact-states.html">Agent Event Stream</a>.
		/// DismissUserContact users/{InstanceId}/{UserId}/contact
		/// </summary>
		/// <param name="UserId">The identifier of the user account.</param>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<DismissUserContactResponse> DismissUserContactAsync(string UserId, string InstanceId, DismissUserContactPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "users/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (UserId==null? "" : System.Uri.EscapeDataString(UserId))+"/contact";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DismissUserContactResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves the contact attributes for the specified contact.
		/// GetContactAttributes contact/attributes/{InstanceId}/{InitialContactId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="InitialContactId">The identifier of the initial contact.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<GetContactAttributesResponse> GetContactAttributesAsync(string InstanceId, string InitialContactId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/attributes/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (InitialContactId==null? "" : System.Uri.EscapeDataString(InitialContactId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetContactAttributesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Gets the real-time metric data from the specified Amazon Connect instance.</p> <p>For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html">Real-time Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
		/// GetCurrentMetricData metrics/current/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetCurrentMetricDataResponse> GetCurrentMetricDataAsync(string InstanceId, string MaxResults, string NextToken, GetCurrentMetricDataPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "metrics/current/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCurrentMetricDataResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the real-time active user data from the specified Amazon Connect instance.
		/// GetCurrentUserData metrics/userdata/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetCurrentUserDataResponse> GetCurrentUserDataAsync(string InstanceId, string MaxResults, string NextToken, GetCurrentUserDataPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "metrics/userdata/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCurrentUserDataResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Retrieves a token for federation.</p> <note> <p>This API doesn't support root users. If you try to invoke GetFederationToken with root credentials, an error message similar to the following one appears: </p> <p> <code>Provided identity: Principal: .... User: .... cannot be used for federation with Amazon Connect</code> </p> </note>
		/// GetFederationToken user/federate/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<GetFederationTokenResponse> GetFederationTokenAsync(string InstanceId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "user/federate/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetFederationTokenResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Gets historical metric data from the specified Amazon Connect instance.</p> <p>For a description of each historical metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
		/// GetMetricData metrics/historical/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetMetricDataResponse> GetMetricDataAsync(string InstanceId, string MaxResults, string NextToken, GetMetricDataPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "metrics/historical/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetMetricDataResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Gets metric data from the specified Amazon Connect instance. </p> <p> <code>GetMetricDataV2</code> offers more features than <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_GetMetricData.html">GetMetricData</a>, the previous version of this API. It has new metrics, offers filtering at a metric level, and offers the ability to filter and group data by channels, queues, routing profiles, agents, and agent hierarchy levels. It can retrieve historical data for the last 35 days, in 24-hour intervals.</p> <p>For a description of the historical metrics that are supported by <code>GetMetricDataV2</code> and <code>GetMetricData</code>, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical metrics definitions</a> in the <i>Amazon Connect Administrator's Guide</i>.</p>
		/// GetMetricDataV2 metrics/data
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetMetricDataV2Response> GetMetricDataV2Async(string MaxResults, string NextToken, GetMetricDataV2PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "metrics/data?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetMetricDataV2Response>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the prompt file.
		/// GetPromptFile prompts/{InstanceId}/{PromptId}/file
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="PromptId">A unique identifier for the prompt.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<GetPromptFileResponse> GetPromptFileAsync(string InstanceId, string PromptId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "prompts/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (PromptId==null? "" : System.Uri.EscapeDataString(PromptId))+"/file";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetPromptFileResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves the current traffic distribution for a given traffic distribution group.
		/// GetTrafficDistribution traffic-distribution/{Id}
		/// </summary>
		/// <param name="Id">The identifier of the traffic distribution group.</param>
		/// <returns>Success</returns>
		public async Task<GetTrafficDistributionResponse> GetTrafficDistributionAsync(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "traffic-distribution/"+ (Id==null? "" : System.Uri.EscapeDataString(Id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetTrafficDistributionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates the traffic distribution for a given traffic distribution group. </p> <p>For more information about updating a traffic distribution group, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/update-telephony-traffic-distribution.html">Update telephony traffic distribution across Amazon Web Services Regions </a> in the <i>Amazon Connect Administrator Guide</i>. </p>
		/// UpdateTrafficDistribution traffic-distribution/{Id}
		/// </summary>
		/// <param name="Id">The identifier of the traffic distribution group. This can be the ID or the ARN if the API is being called in the Region where the traffic distribution group was created. The ARN must be provided if the call is from the replicated Region.</param>
		/// <returns>Success</returns>
		public async Task<UpdateTrafficDistributionResponse> UpdateTrafficDistributionAsync(string Id, UpdateTrafficDistributionPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "traffic-distribution/"+ (Id==null? "" : System.Uri.EscapeDataString(Id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateTrafficDistributionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Returns a paginated list of all approved origins associated with the instance.</p>
		/// ListApprovedOrigins instance/{InstanceId}/approved-origins
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 25
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListApprovedOriginsResponse> ListApprovedOriginsAsync(string InstanceId, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/approved-origins&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListApprovedOriginsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>For the specified version of Amazon Lex, returns a paginated list of all the Amazon Lex bots currently associated with the instance. Use this API to returns both Amazon Lex V1 and V2 bots.</p>
		/// ListBots instance/{InstanceId}/bots#lexVersion
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 25
		// </param>
		/// <param name="lexVersion">The version of Amazon Lex or Amazon Lex V2.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListBotsResponse> ListBotsAsync(string InstanceId, string nextToken, int maxResults, LexVersion lexVersion, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/bots#lexVersion&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&lexVersion=" + lexVersion+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListBotsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists contact evaluations in the specified Amazon Connect instance.
		/// ListContactEvaluations contact-evaluations/{InstanceId}#contactId
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="contactId">The identifier of the contact in this instance of Amazon Connect. 
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <param name="nextToken"><p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p> <important> <p>This is not expected to be set because the value returned in the previous response is always null.</p> </important></param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListContactEvaluationsResponse> ListContactEvaluationsAsync(string InstanceId, string contactId, string nextToken, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-evaluations/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"#contactId&contactId=" + (contactId==null? "" : System.Uri.EscapeDataString(contactId))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListContactEvaluationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides information about the flow modules for the specified Amazon Connect instance.
		/// ListContactFlowModules contact-flow-modules-summary/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="state">The state of the flow module.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListContactFlowModulesResponse> ListContactFlowModulesAsync(string InstanceId, string nextToken, int maxResults, ContactFlowState state, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-flow-modules-summary/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&state=" + state+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListContactFlowModulesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Provides information about the flows for the specified Amazon Connect instance.</p> <p>You can also create and update flows using the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/flow-language.html">Amazon Connect Flow language</a>.</p> <p>For more information about flows, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-contact-flows.html">Flows</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
		/// ListContactFlows contact-flows-summary/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="contactFlowTypes">The type of flow.
		/// Maximum items: 10
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page. The default MaxResult size is 100.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListContactFlowsResponse> ListContactFlowsAsync(string InstanceId, ContactFlowType[] contactFlowTypes, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-flows-summary/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&"+string.Join("&", contactFlowTypes.Select(z => $"contactFlowTypes={z}"))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListContactFlowsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>For the specified <code>referenceTypes</code>, returns a list of references associated with the contact. </p>
		/// ListContactReferences contact/references/{InstanceId}/{ContactId}#referenceTypes
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="ContactId">The identifier of the initial contact.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <param name="referenceTypes">The type of reference.
		/// Maximum items: 6
		// </param>
		/// <param name="nextToken"><p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p> <important> <p>This is not expected to be set, because the value returned in the previous response is always null.</p> </important></param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListContactReferencesResponse> ListContactReferencesAsync(string InstanceId, string ContactId, ReferenceType[] referenceTypes, string nextToken, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/references/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (ContactId==null? "" : System.Uri.EscapeDataString(ContactId))+"#referenceTypes&"+string.Join("&", referenceTypes.Select(z => $"referenceTypes={z}"))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListContactReferencesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the default vocabularies for the specified Amazon Connect instance.
		/// ListDefaultVocabularies default-vocabulary-summary/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDefaultVocabulariesResponse> ListDefaultVocabulariesAsync(string InstanceId, string MaxResults, string NextToken, ListDefaultVocabulariesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "default-vocabulary-summary/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListDefaultVocabulariesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists versions of an evaluation form in the specified Amazon Connect instance.
		/// ListEvaluationFormVersions evaluation-forms/{InstanceId}/{EvaluationFormId}/versions
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="EvaluationFormId">The unique identifier for the evaluation form.
		/// Min length: 1
		/// Max length: 500
		// </param>
		/// <param name="maxResults">The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListEvaluationFormVersionsResponse> ListEvaluationFormVersionsAsync(string InstanceId, string EvaluationFormId, int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "evaluation-forms/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (EvaluationFormId==null? "" : System.Uri.EscapeDataString(EvaluationFormId))+"/versions&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListEvaluationFormVersionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Provides information about the hours of operation for the specified Amazon Connect instance.</p> <p>For more information about hours of operation, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/set-hours-operation.html">Set the Hours of Operation for a Queue</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
		/// ListHoursOfOperations hours-of-operations-summary/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page. The default MaxResult size is 100.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListHoursOfOperationsResponse> ListHoursOfOperationsAsync(string InstanceId, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "hours-of-operations-summary/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListHoursOfOperationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Returns a paginated list of all attribute types for the given instance.</p>
		/// ListInstanceAttributes instance/{InstanceId}/attributes
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 7
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListInstanceAttributesResponse> ListInstanceAttributesAsync(string InstanceId, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/attributes&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListInstanceAttributesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Returns a paginated list of storage configs for the identified instance and resource type.</p>
		/// ListInstanceStorageConfigs instance/{InstanceId}/storage-configs#resourceType
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="resourceType">A valid resource type.</param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 10
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListInstanceStorageConfigsResponse> ListInstanceStorageConfigsAsync(string InstanceId, InstanceStorageResourceType resourceType, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/storage-configs#resourceType&resourceType=" + resourceType+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListInstanceStorageConfigsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Returns a paginated list of all Lambda functions that display in the dropdown options in the relevant flow blocks.</p>
		/// ListLambdaFunctions instance/{InstanceId}/lambda-functions
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 25
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListLambdaFunctionsResponse> ListLambdaFunctionsAsync(string InstanceId, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/lambda-functions&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListLambdaFunctionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Returns a paginated list of all the Amazon Lex V1 bots currently associated with the instance. To return both Amazon Lex V1 and V2 bots, use the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_ListBots.html">ListBots</a> API. </p>
		/// ListLexBots instance/{InstanceId}/lex-bots
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page. If no value is specified, the default is 10. 
		/// Minimum: 1
		/// Maximum: 25
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListLexBotsResponse> ListLexBotsAsync(string InstanceId, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/lex-bots&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListLexBotsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Provides information about the phone numbers for the specified Amazon Connect instance. </p> <p>For more information about phone numbers, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/contact-center-phone-number.html">Set Up Phone Numbers for Your Contact Center</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <important> <p>The phone number <code>Arn</code> value that is returned from each of the items in the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_ListPhoneNumbers.html#connect-ListPhoneNumbers-response-PhoneNumberSummaryList">PhoneNumberSummaryList</a> cannot be used to tag phone number resources. It will fail with a <code>ResourceNotFoundException</code>. Instead, use the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_ListPhoneNumbersV2.html">ListPhoneNumbersV2</a> API. It returns the new phone number ARN that can be used to tag phone number resources.</p> </important>
		/// ListPhoneNumbers phone-numbers-summary/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="phoneNumberTypes">The type of phone number.
		/// Maximum items: 6
		// </param>
		/// <param name="phoneNumberCountryCodes">The ISO country code.
		/// Maximum items: 10
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page. The default MaxResult size is 100.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListPhoneNumbersResponse> ListPhoneNumbersAsync(string InstanceId, PhoneNumberType[] phoneNumberTypes, PhoneNumberCountryCode[] phoneNumberCountryCodes, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "phone-numbers-summary/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&"+string.Join("&", phoneNumberTypes.Select(z => $"phoneNumberTypes={z}"))+"&"+string.Join("&", phoneNumberCountryCodes.Select(z => $"phoneNumberCountryCodes={z}"))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListPhoneNumbersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists phone numbers claimed to your Amazon Connect instance or traffic distribution group. If the provided <code>TargetArn</code> is a traffic distribution group, you can call this API in both Amazon Web Services Regions associated with traffic distribution group.</p> <p>For more information about phone numbers, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/contact-center-phone-number.html">Set Up Phone Numbers for Your Contact Center</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
		/// ListPhoneNumbersV2 phone-number/list
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListPhoneNumbersV2Response> ListPhoneNumbersV2Async(string MaxResults, string NextToken, ListPhoneNumbersV2PostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "phone-number/list?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListPhoneNumbersV2Response>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides information about the prompts for the specified Amazon Connect instance.
		/// ListPrompts prompts-summary/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page. The default MaxResult size is 100.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListPromptsResponse> ListPromptsAsync(string InstanceId, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "prompts-summary/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListPromptsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Lists the quick connects associated with a queue.</p>
		/// ListQueueQuickConnects queues/{InstanceId}/{QueueId}/quick-connects
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="QueueId">The identifier for the queue.</param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page. The default MaxResult size is 100.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListQueueQuickConnectsResponse> ListQueueQuickConnectsAsync(string InstanceId, string QueueId, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "queues/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (QueueId==null? "" : System.Uri.EscapeDataString(QueueId))+"/quick-connects&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListQueueQuickConnectsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Provides information about the queues for the specified Amazon Connect instance.</p> <p>If you do not specify a <code>QueueTypes</code> parameter, both standard and agent queues are returned. This might cause an unexpected truncation of results if you have more than 1000 agents and you limit the number of results of the API call in code.</p> <p>For more information about queues, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-queues-standard-and-agent.html">Queues: Standard and Agent</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
		/// ListQueues queues-summary/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="queueTypes">The type of queue.
		/// Maximum items: 2
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page. The default MaxResult size is 100.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListQueuesResponse> ListQueuesAsync(string InstanceId, QueueType[] queueTypes, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "queues-summary/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&"+string.Join("&", queueTypes.Select(z => $"queueTypes={z}"))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListQueuesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the queues associated with a routing profile.
		/// ListRoutingProfileQueues routing-profiles/{InstanceId}/{RoutingProfileId}/queues
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="RoutingProfileId">The identifier of the routing profile.</param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page. The default MaxResult size is 100.
		/// Minimum: 1
		/// Maximum: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListRoutingProfileQueuesResponse> ListRoutingProfileQueuesAsync(string InstanceId, string RoutingProfileId, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "routing-profiles/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (RoutingProfileId==null? "" : System.Uri.EscapeDataString(RoutingProfileId))+"/queues&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListRoutingProfileQueuesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the properties associated with a set of queues for a routing profile.
		/// UpdateRoutingProfileQueues routing-profiles/{InstanceId}/{RoutingProfileId}/queues
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="RoutingProfileId">The identifier of the routing profile.</param>
		/// <returns>Success</returns>
		public async Task UpdateRoutingProfileQueuesAsync(string InstanceId, string RoutingProfileId, UpdateRoutingProfileQueuesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "routing-profiles/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (RoutingProfileId==null? "" : System.Uri.EscapeDataString(RoutingProfileId))+"/queues";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Provides summary information about the routing profiles for the specified Amazon Connect instance.</p> <p>For more information about routing profiles, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing.html">Routing Profiles</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/routing-profiles.html">Create a Routing Profile</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
		/// ListRoutingProfiles routing-profiles-summary/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page. The default MaxResult size is 100.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListRoutingProfilesResponse> ListRoutingProfilesAsync(string InstanceId, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "routing-profiles-summary/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListRoutingProfilesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Returns a paginated list of all security keys associated with the instance.</p>
		/// ListSecurityKeys instance/{InstanceId}/security-keys
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 2
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListSecurityKeysResponse> ListSecurityKeysAsync(string InstanceId, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/security-keys&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListSecurityKeysResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Lists the permissions granted to a security profile.</p>
		/// ListSecurityProfilePermissions security-profiles-permissions/{InstanceId}/{SecurityProfileId}
		/// </summary>
		/// <param name="SecurityProfileId">The identifier for the security profle.</param>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListSecurityProfilePermissionsResponse> ListSecurityProfilePermissionsAsync(string SecurityProfileId, string InstanceId, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "security-profiles-permissions/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (SecurityProfileId==null? "" : System.Uri.EscapeDataString(SecurityProfileId))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListSecurityProfilePermissionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Provides summary information about the security profiles for the specified Amazon Connect instance.</p> <p>For more information about security profiles, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/connect-security-profiles.html">Security Profiles</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
		/// ListSecurityProfiles security-profiles-summary/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page. The default MaxResult size is 100.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListSecurityProfilesResponse> ListSecurityProfilesAsync(string InstanceId, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "security-profiles-summary/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListSecurityProfilesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists the tags for the specified resource.</p> <p>For sample policies that use tags, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security_iam_id-based-policy-examples.html">Amazon Connect Identity-Based Policy Examples</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
		/// ListTagsForResource tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) of the resource. All Amazon Connect resources (instances, queues, flows, routing profiles, etc) have an ARN. To locate the ARN for an instance, for example, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">Find your Amazon Connect instance ID/ARN</a>. </param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string resourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Adds the specified tags to the specified resource.</p> <p>Some of the supported resource types are agents, routing profiles, queues, quick connects, contact flows, agent statuses, hours of operation, phone numbers, security profiles, and task templates. For a complete list, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/tagging.html">Tagging resources in Amazon Connect</a>.</p> <p>For sample policies that use tags, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security_iam_id-based-policy-examples.html">Amazon Connect Identity-Based Policy Examples</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
		/// TagResource tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) of the resource.</param>
		/// <returns>Success</returns>
		public async Task TagResourceAsync(string resourceArn, TagResourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists traffic distribution groups.
		/// ListTrafficDistributionGroups traffic-distribution-groups
		/// </summary>
		/// <param name="maxResults">The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 10
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="instanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 250
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListTrafficDistributionGroupsResponse> ListTrafficDistributionGroupsAsync(int maxResults, string nextToken, string instanceId, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "traffic-distribution-groups?maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&instanceId=" + (instanceId==null? "" : System.Uri.EscapeDataString(instanceId))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTrafficDistributionGroupsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Provides summary information about the hierarchy groups for the specified Amazon Connect instance.</p> <p>For more information about agent hierarchies, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/agent-hierarchy.html">Set Up Agent Hierarchies</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
		/// ListUserHierarchyGroups user-hierarchy-groups-summary/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page. The default MaxResult size is 100.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListUserHierarchyGroupsResponse> ListUserHierarchyGroupsAsync(string InstanceId, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "user-hierarchy-groups-summary/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListUserHierarchyGroupsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides summary information about the users for the specified Amazon Connect instance.
		/// ListUsers users-summary/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="nextToken">The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to return per page. The default MaxResult size is 100.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListUsersResponse> ListUsersAsync(string InstanceId, string nextToken, int maxResults, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "users-summary/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListUsersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Initiates silent monitoring of a contact. The Contact Control Panel (CCP) of the user specified by <i>userId</i> will be set to silent monitoring mode on the contact.
		/// MonitorContact contact/monitor
		/// </summary>
		/// <returns>Success</returns>
		public async Task<MonitorContactResponse> MonitorContactAsync(MonitorContactPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/monitor";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<MonitorContactResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Changes the current status of a user or agent in Amazon Connect. If the agent is currently handling a contact, this sets the agent's next status.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/metrics-agent-status.html">Agent status</a> and <a href="https://docs.aws.amazon.com/connect/latest/adminguide/set-next-status.html">Set your next status</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
		/// PutUserStatus users/{InstanceId}/{UserId}/status
		/// </summary>
		/// <param name="UserId">The identifier of the user.</param>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<PutUserStatusResponse> PutUserStatusAsync(string UserId, string InstanceId, PutUserStatusPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "users/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (UserId==null? "" : System.Uri.EscapeDataString(UserId))+"/status";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutUserStatusResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Replicates an Amazon Connect instance in the specified Amazon Web Services Region.</p> <p>For more information about replicating an Amazon Connect instance, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-replica-connect-instance.html">Create a replica of your existing Amazon Connect instance</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
		/// ReplicateInstance instance/{InstanceId}/replicate
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance. You can provide the <code>InstanceId</code>, or the entire ARN.
		/// Min length: 1
		/// Max length: 250
		// </param>
		/// <returns>Success</returns>
		public async Task<ReplicateInstanceResponse> ReplicateInstanceAsync(string InstanceId, ReplicateInstancePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "instance/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/replicate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ReplicateInstanceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>When a contact is being recorded, and the recording has been suspended using SuspendContactRecording, this API resumes recording the call or screen.</p> <p>Voice and screen recordings are supported.</p>
		/// ResumeContactRecording contact/resume-recording
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ResumeContactRecordingResponse> ResumeContactRecordingAsync(ResumeContactRecordingPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/resume-recording";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ResumeContactRecordingResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Searches for available phone numbers that you can claim to your Amazon Connect instance or traffic distribution group. If the provided <code>TargetArn</code> is a traffic distribution group, you can call this API in both Amazon Web Services Regions associated with the traffic distribution group.
		/// SearchAvailablePhoneNumbers phone-number/search-available
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchAvailablePhoneNumbersResponse> SearchAvailablePhoneNumbersAsync(string MaxResults, string NextToken, SearchAvailablePhoneNumbersPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "phone-number/search-available?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SearchAvailablePhoneNumbersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Searches the hours of operation in an Amazon Connect instance, with optional filtering.
		/// SearchHoursOfOperations search-hours-of-operations
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchHoursOfOperationsResponse> SearchHoursOfOperationsAsync(string MaxResults, string NextToken, SearchHoursOfOperationsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "search-hours-of-operations?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SearchHoursOfOperationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Searches prompts in an Amazon Connect instance, with optional filtering.
		/// SearchPrompts search-prompts
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchPromptsResponse> SearchPromptsAsync(string MaxResults, string NextToken, SearchPromptsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "search-prompts?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SearchPromptsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Searches queues in an Amazon Connect instance, with optional filtering.
		/// SearchQueues search-queues
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchQueuesResponse> SearchQueuesAsync(string MaxResults, string NextToken, SearchQueuesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "search-queues?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SearchQueuesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Searches quick connects in an Amazon Connect instance, with optional filtering.
		/// SearchQuickConnects search-quick-connects
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchQuickConnectsResponse> SearchQuickConnectsAsync(string MaxResults, string NextToken, SearchQuickConnectsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "search-quick-connects?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SearchQuickConnectsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Searches tags used in an Amazon Connect instance using optional search criteria.
		/// SearchResourceTags search-resource-tags
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchResourceTagsResponse> SearchResourceTagsAsync(string MaxResults, string NextToken, SearchResourceTagsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "search-resource-tags?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SearchResourceTagsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Searches routing profiles in an Amazon Connect instance, with optional filtering.
		/// SearchRoutingProfiles search-routing-profiles
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchRoutingProfilesResponse> SearchRoutingProfilesAsync(string MaxResults, string NextToken, SearchRoutingProfilesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "search-routing-profiles?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SearchRoutingProfilesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Searches security profiles in an Amazon Connect instance, with optional filtering.
		/// SearchSecurityProfiles search-security-profiles
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchSecurityProfilesResponse> SearchSecurityProfilesAsync(string MaxResults, string NextToken, SearchSecurityProfilesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "search-security-profiles?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SearchSecurityProfilesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Searches users in an Amazon Connect instance, with optional filtering.</p> <note> <p> <code>AfterContactWorkTimeLimit</code> is returned in milliseconds. </p> </note>
		/// SearchUsers search-users
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchUsersResponse> SearchUsersAsync(string MaxResults, string NextToken, SearchUsersPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "search-users?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SearchUsersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Searches for vocabularies within a specific Amazon Connect instance using <code>State</code>, <code>NameStartsWith</code>, and <code>LanguageCode</code>.
		/// SearchVocabularies vocabulary-summary/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchVocabulariesResponse> SearchVocabulariesAsync(string InstanceId, string MaxResults, string NextToken, SearchVocabulariesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "vocabulary-summary/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SearchVocabulariesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Initiates a flow to start a new chat for the customer. Response of this API provides a token required to obtain credentials from the <a href="https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html">CreateParticipantConnection</a> API in the Amazon Connect Participant Service.</p> <p>When a new chat contact is successfully created, clients must subscribe to the participant’s connection for the created chat within 5 minutes. This is achieved by invoking <a href="https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html">CreateParticipantConnection</a> with WEBSOCKET and CONNECTION_CREDENTIALS. </p> <p>A 429 error occurs in the following situations:</p> <ul> <li> <p>API rate limit is exceeded. API TPS throttling returns a <code>TooManyRequests</code> exception.</p> </li> <li> <p>The <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">quota for concurrent active chats</a> is exceeded. Active chat throttling returns a <code>LimitExceededException</code>.</p> </li> </ul> <p>If you use the <code>ChatDurationInMinutes</code> parameter and receive a 400 error, your account may not support the ability to configure custom chat durations. For more information, contact Amazon Web Services Support. </p> <p>For more information about chat, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/chat.html">Chat</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
		/// StartChatContact contact/chat
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartChatContactResponse> StartChatContactAsync(StartChatContactPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/chat";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StartChatContactResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Starts an empty evaluation in the specified Amazon Connect instance, using the given evaluation form for the particular contact. The evaluation form version used for the contact evaluation corresponds to the currently activated version. If no version is activated for the evaluation form, the contact evaluation cannot be started. </p> <note> <p>Evaluations created through the public API do not contain answer values suggested from automation.</p> </note>
		/// StartContactEvaluation contact-evaluations/{InstanceId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task<StartContactEvaluationResponse> StartContactEvaluationAsync(string InstanceId, StartContactEvaluationPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-evaluations/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StartContactEvaluationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Starts recording the contact: </p> <ul> <li> <p>If the API is called <i>before</i> the agent joins the call, recording starts when the agent joins the call.</p> </li> <li> <p>If the API is called <i>after</i> the agent joins the call, recording starts at the time of the API call.</p> </li> </ul> <p>StartContactRecording is a one-time action. For example, if you use StopContactRecording to stop recording an ongoing call, you can't use StartContactRecording to restart it. For scenarios where the recording has started and you want to suspend and resume it, such as when collecting sensitive information (for example, a credit card number), use SuspendContactRecording and ResumeContactRecording.</p> <p>You can use this API to override the recording behavior configured in the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/set-recording-behavior.html">Set recording behavior</a> block.</p> <p>Only voice recordings are supported at this time.</p>
		/// StartContactRecording contact/start-recording
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartContactRecordingResponse> StartContactRecordingAsync(StartContactRecordingPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/start-recording";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StartContactRecordingResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p> Initiates real-time message streaming for a new chat contact.</p> <p> For more information about message streaming, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/chat-message-streaming.html">Enable real-time chat message streaming</a> in the <i>Amazon Connect Administrator Guide</i>.</p>
		/// StartContactStreaming contact/start-streaming
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartContactStreamingResponse> StartContactStreamingAsync(StartContactStreamingPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/start-streaming";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StartContactStreamingResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Places an outbound call to a contact, and then initiates the flow. It performs the actions in the flow that's specified (in <code>ContactFlowId</code>).</p> <p>Agents do not initiate the outbound API, which means that they do not dial the contact. If the flow places an outbound call to a contact, and then puts the contact in queue, the call is then routed to the agent, like any other inbound case.</p> <p>There is a 60-second dialing timeout for this operation. If the call is not connected after 60 seconds, it fails.</p> <note> <p>UK numbers with a 447 prefix are not allowed by default. Before you can dial these UK mobile numbers, you must submit a service quota increase request. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>. </p> </note> <note> <p>Campaign calls are not allowed by default. Before you can make a call with <code>TrafficType</code> = <code>CAMPAIGN</code>, you must submit a service quota increase request to the quota <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#outbound-communications-quotas">Amazon Connect campaigns</a>. </p> </note>
		/// StartOutboundVoiceContact contact/outbound-voice
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartOutboundVoiceContactResponse> StartOutboundVoiceContactAsync(StartOutboundVoiceContactPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/outbound-voice";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StartOutboundVoiceContactResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Initiates a flow to start a new task.
		/// StartTaskContact contact/task
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartTaskContactResponse> StartTaskContactAsync(StartTaskContactPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/task";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StartTaskContactResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Ends the specified contact. This call does not work for the following initiation methods:</p> <ul> <li> <p>DISCONNECT</p> </li> <li> <p>TRANSFER</p> </li> <li> <p>QUEUE_TRANSFER</p> </li> </ul>
		/// StopContact contact/stop
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StopContactResponse> StopContactAsync(StopContactPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/stop";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StopContactResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Stops recording a call when a contact is being recorded. StopContactRecording is a one-time action. If you use StopContactRecording to stop recording an ongoing call, you can't use StartContactRecording to restart it. For scenarios where the recording has started and you want to suspend it for sensitive information (for example, to collect a credit card number), and then restart it, use SuspendContactRecording and ResumeContactRecording.</p> <p>Only voice recordings are supported at this time.</p>
		/// StopContactRecording contact/stop-recording
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StopContactRecordingResponse> StopContactRecordingAsync(StopContactRecordingPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/stop-recording";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StopContactRecordingResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Ends message streaming on a specified contact. To restart message streaming on that contact, call the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_StartContactStreaming.html">StartContactStreaming</a> API.
		/// StopContactStreaming contact/stop-streaming
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StopContactStreamingResponse> StopContactStreamingAsync(StopContactStreamingPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/stop-streaming";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StopContactStreamingResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Submits a contact evaluation in the specified Amazon Connect instance. Answers included in the request are merged with existing answers for the given evaluation. If no answers or notes are passed, the evaluation is submitted with the existing answers and notes. You can delete an answer or note by passing an empty object (<code>{}</code>) to the question identifier. </p> <p>If a contact evaluation is already in submitted state, this operation will trigger a resubmission.</p>
		/// SubmitContactEvaluation contact-evaluations/{InstanceId}/{EvaluationId}/submit
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="EvaluationId">A unique identifier for the contact evaluation.
		/// Min length: 1
		/// Max length: 500
		// </param>
		/// <returns>Success</returns>
		public async Task<SubmitContactEvaluationResponse> SubmitContactEvaluationAsync(string InstanceId, string EvaluationId, SubmitContactEvaluationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-evaluations/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (EvaluationId==null? "" : System.Uri.EscapeDataString(EvaluationId))+"/submit";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SubmitContactEvaluationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>When a contact is being recorded, this API suspends recording the call or screen. For example, you might suspend the call or screen recording while collecting sensitive information, such as a credit card number. Then use ResumeContactRecording to restart recording.</p> <p>The period of time that the recording is suspended is filled with silence in the final recording.</p> <p>Voice and screen recordings are supported.</p>
		/// SuspendContactRecording contact/suspend-recording
		/// </summary>
		/// <returns>Success</returns>
		public async Task<SuspendContactRecordingResponse> SuspendContactRecordingAsync(SuspendContactRecordingPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/suspend-recording";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SuspendContactRecordingResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Transfers contacts from one agent or queue to another agent or queue at any point after a contact is created. You can transfer a contact to another queue by providing the flow which orchestrates the contact to the destination queue. This gives you more control over contact handling and helps you adhere to the service level agreement (SLA) guaranteed to your customers.</p> <p>Note the following requirements:</p> <ul> <li> <p>Transfer is supported for only <code>TASK</code> contacts.</p> </li> <li> <p>Do not use both <code>QueueId</code> and <code>UserId</code> in the same call.</p> </li> <li> <p>The following flow types are supported: Inbound flow, Transfer to agent flow, and Transfer to queue flow.</p> </li> <li> <p>The <code>TransferContact</code> API can be called only on active contacts.</p> </li> <li> <p>A contact cannot be transferred more than 11 times.</p> </li> </ul>
		/// TransferContact contact/transfer
		/// </summary>
		/// <returns>Success</returns>
		public async Task<TransferContactResponse> TransferContactAsync(TransferContactPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/transfer";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TransferContactResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes the specified tags from the specified resource.
		/// UntagResource tags/{resourceArn}#tagKeys
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) of the resource.</param>
		/// <param name="tagKeys">The tag keys.
		/// Minimum items: 1
		/// Maximum items: 50
		// </param>
		/// <returns>Success</returns>
		public async Task UntagResourceAsync(string resourceArn, string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn))+"#tagKeys&"+string.Join("&", tagKeys.Select(z => $"tagKeys={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates or updates user-defined contact attributes associated with the specified contact.</p> <p>You can create or update user-defined attributes for both ongoing and completed contacts. For example, while the call is active, you can update the customer's name or the reason the customer called. You can add notes about steps that the agent took during the call that display to the next agent that takes the call. You can also update attributes for a contact using data from your CRM application and save the data with the contact in Amazon Connect. You could also flag calls for additional analysis, such as legal review or to identify abusive callers.</p> <p>Contact attributes are available in Amazon Connect for 24 months, and are then deleted. For information about contact record retention and the maximum size of the contact record attributes section, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#feature-limits">Feature specifications</a> in the <i>Amazon Connect Administrator Guide</i>. </p>
		/// UpdateContactAttributes contact/attributes
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateContactAttributesResponse> UpdateContactAttributesAsync(UpdateContactAttributesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/attributes";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateContactAttributesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates the specified flow.</p> <p>You can also create and update flows using the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/flow-language.html">Amazon Connect Flow language</a>.</p>
		/// UpdateContactFlowContent contact-flows/{InstanceId}/{ContactFlowId}/content
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="ContactFlowId">The identifier of the flow.
		/// Max length: 500
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateContactFlowContentResponse> UpdateContactFlowContentAsync(string InstanceId, string ContactFlowId, UpdateContactFlowContentPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-flows/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (ContactFlowId==null? "" : System.Uri.EscapeDataString(ContactFlowId))+"/content";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateContactFlowContentResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates metadata about specified flow.
		/// UpdateContactFlowMetadata contact-flows/{InstanceId}/{ContactFlowId}/metadata
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="ContactFlowId">The identifier of the flow.
		/// Max length: 500
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateContactFlowMetadataResponse> UpdateContactFlowMetadataAsync(string InstanceId, string ContactFlowId, UpdateContactFlowMetadataPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-flows/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (ContactFlowId==null? "" : System.Uri.EscapeDataString(ContactFlowId))+"/metadata";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateContactFlowMetadataResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates specified flow module for the specified Amazon Connect instance.
		/// UpdateContactFlowModuleContent contact-flow-modules/{InstanceId}/{ContactFlowModuleId}/content
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="ContactFlowModuleId">The identifier of the flow module.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateContactFlowModuleContentResponse> UpdateContactFlowModuleContentAsync(string InstanceId, string ContactFlowModuleId, UpdateContactFlowModuleContentPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-flow-modules/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (ContactFlowModuleId==null? "" : System.Uri.EscapeDataString(ContactFlowModuleId))+"/content";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateContactFlowModuleContentResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates metadata about specified flow module.
		/// UpdateContactFlowModuleMetadata contact-flow-modules/{InstanceId}/{ContactFlowModuleId}/metadata
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="ContactFlowModuleId">The identifier of the flow module.
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateContactFlowModuleMetadataResponse> UpdateContactFlowModuleMetadataAsync(string InstanceId, string ContactFlowModuleId, UpdateContactFlowModuleMetadataPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-flow-modules/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (ContactFlowModuleId==null? "" : System.Uri.EscapeDataString(ContactFlowModuleId))+"/metadata";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateContactFlowModuleMetadataResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>The name of the flow.</p> <p>You can also create and update flows using the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/flow-language.html">Amazon Connect Flow language</a>.</p>
		/// UpdateContactFlowName contact-flows/{InstanceId}/{ContactFlowId}/name
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="ContactFlowId">The identifier of the flow.
		/// Max length: 500
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateContactFlowNameResponse> UpdateContactFlowNameAsync(string InstanceId, string ContactFlowId, UpdateContactFlowNamePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact-flows/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (ContactFlowId==null? "" : System.Uri.EscapeDataString(ContactFlowId))+"/name";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateContactFlowNameResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the scheduled time of a task contact that is already scheduled.
		/// UpdateContactSchedule contact/schedule
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateContactScheduleResponse> UpdateContactScheduleAsync(UpdateContactSchedulePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/schedule";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateContactScheduleResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates timeouts for when human chat participants are to be considered idle, and when agents are automatically disconnected from a chat due to idleness. You can set four timers:</p> <ul> <li> <p>Customer idle timeout</p> </li> <li> <p>Customer auto-disconnect timeout</p> </li> <li> <p>Agent idle timeout</p> </li> <li> <p>Agent auto-disconnect timeout</p> </li> </ul> <p>For more information about how chat timeouts work, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/setup-chat-timeouts.html">Set up chat timeouts for human participants</a>. </p>
		/// UpdateParticipantRoleConfig contact/participant-role-config/{InstanceId}/{ContactId}
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="ContactId">The identifier of the contact in this instance of Amazon Connect. 
		/// Min length: 1
		/// Max length: 256
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateParticipantRoleConfigResponse> UpdateParticipantRoleConfigAsync(string InstanceId, string ContactId, UpdateParticipantRoleConfigPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "contact/participant-role-config/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (ContactId==null? "" : System.Uri.EscapeDataString(ContactId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateParticipantRoleConfigResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates the hours of operation for the specified queue.</p>
		/// UpdateQueueHoursOfOperation queues/{InstanceId}/{QueueId}/hours-of-operation
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="QueueId">The identifier for the queue.</param>
		/// <returns>Success</returns>
		public async Task UpdateQueueHoursOfOperationAsync(string InstanceId, string QueueId, UpdateQueueHoursOfOperationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "queues/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (QueueId==null? "" : System.Uri.EscapeDataString(QueueId))+"/hours-of-operation";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates the maximum number of contacts allowed in a queue before it is considered full.</p>
		/// UpdateQueueMaxContacts queues/{InstanceId}/{QueueId}/max-contacts
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="QueueId">The identifier for the queue.</param>
		/// <returns>Success</returns>
		public async Task UpdateQueueMaxContactsAsync(string InstanceId, string QueueId, UpdateQueueMaxContactsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "queues/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (QueueId==null? "" : System.Uri.EscapeDataString(QueueId))+"/max-contacts";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates the name and description of a queue. At least <code>Name</code> or <code>Description</code> must be provided.</p>
		/// UpdateQueueName queues/{InstanceId}/{QueueId}/name
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="QueueId">The identifier for the queue.</param>
		/// <returns>Success</returns>
		public async Task UpdateQueueNameAsync(string InstanceId, string QueueId, UpdateQueueNamePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "queues/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (QueueId==null? "" : System.Uri.EscapeDataString(QueueId))+"/name";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates the outbound caller ID name, number, and outbound whisper flow for a specified queue.</p> <important> <p>If the number being used in the input is claimed to a traffic distribution group, and you are calling this API using an instance in the Amazon Web Services Region where the traffic distribution group was created, you can use either a full phone number ARN or UUID value for the <code>OutboundCallerIdNumberId</code> value of the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_OutboundCallerConfig">OutboundCallerConfig</a> request body parameter. However, if the number is claimed to a traffic distribution group and you are calling this API using an instance in the alternate Amazon Web Services Region associated with the traffic distribution group, you must provide a full phone number ARN. If a UUID is provided in this scenario, you will receive a <code>ResourceNotFoundException</code>.</p> <p>Only use the phone number ARN format that doesn't contain <code>instance</code> in the path, for example, <code>arn:aws:connect:us-east-1:1234567890:phone-number/uuid</code>. This is the same ARN format that is returned when you call the <a href="https://docs.aws.amazon.com/connect/latest/APIReference/API_ListPhoneNumbersV2.html">ListPhoneNumbersV2</a> API.</p> </important>
		/// UpdateQueueOutboundCallerConfig queues/{InstanceId}/{QueueId}/outbound-caller-config
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="QueueId">The identifier for the queue.</param>
		/// <returns>Success</returns>
		public async Task UpdateQueueOutboundCallerConfigAsync(string InstanceId, string QueueId, UpdateQueueOutboundCallerConfigPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "queues/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (QueueId==null? "" : System.Uri.EscapeDataString(QueueId))+"/outbound-caller-config";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is in preview release for Amazon Connect and is subject to change.</p> <p>Updates the status of the queue.</p>
		/// UpdateQueueStatus queues/{InstanceId}/{QueueId}/status
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="QueueId">The identifier for the queue.</param>
		/// <returns>Success</returns>
		public async Task UpdateQueueStatusAsync(string InstanceId, string QueueId, UpdateQueueStatusPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "queues/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (QueueId==null? "" : System.Uri.EscapeDataString(QueueId))+"/status";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the configuration settings for the specified quick connect.
		/// UpdateQuickConnectConfig quick-connects/{InstanceId}/{QuickConnectId}/config
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="QuickConnectId">The identifier for the quick connect.</param>
		/// <returns>Success</returns>
		public async Task UpdateQuickConnectConfigAsync(string InstanceId, string QuickConnectId, UpdateQuickConnectConfigPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "quick-connects/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (QuickConnectId==null? "" : System.Uri.EscapeDataString(QuickConnectId))+"/config";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the name and description of a quick connect. The request accepts the following data in JSON format. At least <code>Name</code> or <code>Description</code> must be provided.
		/// UpdateQuickConnectName quick-connects/{InstanceId}/{QuickConnectId}/name
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="QuickConnectId">The identifier for the quick connect.</param>
		/// <returns>Success</returns>
		public async Task UpdateQuickConnectNameAsync(string InstanceId, string QuickConnectId, UpdateQuickConnectNamePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "quick-connects/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (QuickConnectId==null? "" : System.Uri.EscapeDataString(QuickConnectId))+"/name";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Whether agents with this routing profile will have their routing order calculated based on <i>time since their last inbound contact</i> or <i>longest idle time</i>.
		/// UpdateRoutingProfileAgentAvailabilityTimer routing-profiles/{InstanceId}/{RoutingProfileId}/agent-availability-timer
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="RoutingProfileId">The identifier of the routing profile.</param>
		/// <returns>Success</returns>
		public async Task UpdateRoutingProfileAgentAvailabilityTimerAsync(string InstanceId, string RoutingProfileId, UpdateRoutingProfileAgentAvailabilityTimerPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "routing-profiles/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (RoutingProfileId==null? "" : System.Uri.EscapeDataString(RoutingProfileId))+"/agent-availability-timer";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the channels that agents can handle in the Contact Control Panel (CCP) for a routing profile.
		/// UpdateRoutingProfileConcurrency routing-profiles/{InstanceId}/{RoutingProfileId}/concurrency
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="RoutingProfileId">The identifier of the routing profile.</param>
		/// <returns>Success</returns>
		public async Task UpdateRoutingProfileConcurrencyAsync(string InstanceId, string RoutingProfileId, UpdateRoutingProfileConcurrencyPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "routing-profiles/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (RoutingProfileId==null? "" : System.Uri.EscapeDataString(RoutingProfileId))+"/concurrency";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the default outbound queue of a routing profile.
		/// UpdateRoutingProfileDefaultOutboundQueue routing-profiles/{InstanceId}/{RoutingProfileId}/default-outbound-queue
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="RoutingProfileId">The identifier of the routing profile.</param>
		/// <returns>Success</returns>
		public async Task UpdateRoutingProfileDefaultOutboundQueueAsync(string InstanceId, string RoutingProfileId, UpdateRoutingProfileDefaultOutboundQueuePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "routing-profiles/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (RoutingProfileId==null? "" : System.Uri.EscapeDataString(RoutingProfileId))+"/default-outbound-queue";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the name and description of a routing profile. The request accepts the following data in JSON format. At least <code>Name</code> or <code>Description</code> must be provided.
		/// UpdateRoutingProfileName routing-profiles/{InstanceId}/{RoutingProfileId}/name
		/// </summary>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <param name="RoutingProfileId">The identifier of the routing profile.</param>
		/// <returns>Success</returns>
		public async Task UpdateRoutingProfileNameAsync(string InstanceId, string RoutingProfileId, UpdateRoutingProfileNamePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "routing-profiles/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (RoutingProfileId==null? "" : System.Uri.EscapeDataString(RoutingProfileId))+"/name";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Assigns the specified hierarchy group to the specified user.
		/// UpdateUserHierarchy users/{InstanceId}/{UserId}/hierarchy
		/// </summary>
		/// <param name="UserId">The identifier of the user account.</param>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task UpdateUserHierarchyAsync(string UserId, string InstanceId, UpdateUserHierarchyPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "users/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (UserId==null? "" : System.Uri.EscapeDataString(UserId))+"/hierarchy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the name of the user hierarchy group.
		/// UpdateUserHierarchyGroupName user-hierarchy-groups/{InstanceId}/{HierarchyGroupId}/name
		/// </summary>
		/// <param name="HierarchyGroupId">The identifier of the hierarchy group.</param>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task UpdateUserHierarchyGroupNameAsync(string HierarchyGroupId, string InstanceId, UpdateUserHierarchyGroupNamePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "user-hierarchy-groups/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (HierarchyGroupId==null? "" : System.Uri.EscapeDataString(HierarchyGroupId))+"/name";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates the identity information for the specified user.</p> <important> <p>We strongly recommend limiting who has the ability to invoke <code>UpdateUserIdentityInfo</code>. Someone with that ability can change the login credentials of other users by changing their email address. This poses a security risk to your organization. They can change the email address of a user to the attacker's email address, and then reset the password through email. For more information, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html">Best Practices for Security Profiles</a> in the <i>Amazon Connect Administrator Guide</i>.</p> </important>
		/// UpdateUserIdentityInfo users/{InstanceId}/{UserId}/identity-info
		/// </summary>
		/// <param name="UserId">The identifier of the user account.</param>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task UpdateUserIdentityInfoAsync(string UserId, string InstanceId, UpdateUserIdentityInfoPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "users/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (UserId==null? "" : System.Uri.EscapeDataString(UserId))+"/identity-info";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the phone configuration settings for the specified user.
		/// UpdateUserPhoneConfig users/{InstanceId}/{UserId}/phone-config
		/// </summary>
		/// <param name="UserId">The identifier of the user account.</param>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task UpdateUserPhoneConfigAsync(string UserId, string InstanceId, UpdateUserPhoneConfigPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "users/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (UserId==null? "" : System.Uri.EscapeDataString(UserId))+"/phone-config";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Assigns the specified routing profile to the specified user.
		/// UpdateUserRoutingProfile users/{InstanceId}/{UserId}/routing-profile
		/// </summary>
		/// <param name="UserId">The identifier of the user account.</param>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task UpdateUserRoutingProfileAsync(string UserId, string InstanceId, UpdateUserRoutingProfilePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "users/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (UserId==null? "" : System.Uri.EscapeDataString(UserId))+"/routing-profile";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Assigns the specified security profiles to the specified user.
		/// UpdateUserSecurityProfiles users/{InstanceId}/{UserId}/security-profiles
		/// </summary>
		/// <param name="UserId">The identifier of the user account.</param>
		/// <param name="InstanceId">The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		// </param>
		/// <returns>Success</returns>
		public async Task UpdateUserSecurityProfilesAsync(string UserId, string InstanceId, UpdateUserSecurityProfilesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "users/"+ (InstanceId==null? "" : System.Uri.EscapeDataString(InstanceId))+"/"+ (UserId==null? "" : System.Uri.EscapeDataString(UserId))+"/security-profiles";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class ActivateEvaluationFormPostBody
	{
		
		/// <summary>
		/// The version of the evaluation form to activate. If the version property is not provided, the latest version of the evaluation form is activated.
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int EvaluationFormVersion { get; set; }
	}
	
	public class AssociateApprovedOriginPutBody
	{
		
		/// <summary>
		/// The domain to add to your allow list.
		/// Required
		/// Max length: 267
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(267)]
		public string Origin { get; set; }
	}
	
	public class AssociateBotPutBody
	{
		
		/// <summary>
		/// Configuration information of an Amazon Lex bot.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AssociateBotPutBodyLexBot LexBot { get; set; }
		
		/// <summary>
		/// Configuration information of an Amazon Lex V2 bot.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AssociateBotPutBodyLexV2Bot LexV2Bot { get; set; }
	}
	
	public class AssociateBotPutBodyLexBot
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LexRegion { get; set; }
	}
	
	public class AssociateBotPutBodyLexV2Bot
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AliasArn { get; set; }
	}
	
	public class DisassociateBotPostBody
	{
		
		/// <summary>
		/// Configuration information of an Amazon Lex bot.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DisassociateBotPostBodyLexBot LexBot { get; set; }
		
		/// <summary>
		/// Configuration information of an Amazon Lex V2 bot.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DisassociateBotPostBodyLexV2Bot LexV2Bot { get; set; }
	}
	
	public class DisassociateBotPostBodyLexBot
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LexRegion { get; set; }
	}
	
	public class DisassociateBotPostBodyLexV2Bot
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AliasArn { get; set; }
	}
	
	public enum AssociateDefaultVocabularyLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ar-AE")]
		arMinusAE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-AB")]
		enMinusAB = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-AU")]
		enMinusAU = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-IE")]
		enMinusIE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-IN")]
		enMinusIN = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-US")]
		enMinusUS = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-WL")]
		enMinusWL = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-US")]
		esMinusUS = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CA")]
		frMinusCA = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hi-IN")]
		hiMinusIN = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ja-JP")]
		jaMinusJP = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ko-KR")]
		koMinusKR = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pt-BR")]
		ptMinusBR = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pt-PT")]
		ptMinusPT = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-CN")]
		zhMinusCN = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-NZ")]
		enMinusNZ = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-ZA")]
		enMinusZA = 22,
	}
	
	public class AssociateDefaultVocabularyPutBody
	{
		
		/// <summary>
		/// The identifier of the custom vocabulary. If this is empty, the default is set to none.
		/// Min length: 1
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string VocabularyId { get; set; }
	}
	
	public class AssociateInstanceStorageConfigPutBody
	{
		
		/// <summary>
		/// A valid resource type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InstanceStorageResourceType ResourceType { get; set; }
		
		/// <summary>
		/// The storage configuration for the instance.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssociateInstanceStorageConfigPutBodyStorageConfig StorageConfig { get; set; }
	}
	
	public class AssociateInstanceStorageConfigPutBodyStorageConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AssociationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StorageType StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3Config S3Config { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisVideoStreamConfig KinesisVideoStreamConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisStreamConfig KinesisStreamConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseConfig KinesisFirehoseConfig { get; set; }
	}
	
	public class AssociateLambdaFunctionPutBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) for the Lambda function being associated. Maximum number of characters allowed is 140.
		/// Required
		/// Min length: 1
		/// Max length: 140
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(140)]
		public string FunctionArn { get; set; }
	}
	
	public class AssociateLexBotPutBody
	{
		
		/// <summary>
		/// Configuration information of an Amazon Lex bot.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AssociateLexBotPutBodyLexBot LexBot { get; set; }
	}
	
	public class AssociateLexBotPutBodyLexBot
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LexRegion { get; set; }
	}
	
	public class AssociatePhoneNumberContactFlowPutBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The identifier of the flow.
		/// Required
		/// Max length: 500
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ContactFlowId { get; set; }
	}
	
	public class AssociateQueueQuickConnectsPostBody
	{
		
		/// <summary>
		/// The quick connects to associate with this queue.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public string[] QuickConnectIds { get; set; }
	}
	
	public class AssociateRoutingProfileQueuesPostBody
	{
		
		/// <summary>
		/// The queues to associate with this routing profile.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 10
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public RoutingProfileQueueConfig[] QueueConfigs { get; set; }
	}
	
	public class AssociateSecurityKeyPutBody
	{
		
		/// <summary>
		/// A valid security key in PEM format.
		/// Required
		/// Min length: 1
		/// Max length: 1024
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string Key { get; set; }
	}
	
	public class ClaimPhoneNumberPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) for Amazon Connect instances or traffic distribution groups that phone numbers are claimed to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetArn { get; set; }
		
		/// <summary>
		/// The phone number you want to claim. Phone numbers are formatted <code>[+] [country code] [subscriber number including area code]</code>.
		/// Required
		/// Pattern: \\+[1-9]\\d{1,14}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\\+[1-9]\\d{1,14}$")]
		public string PhoneNumber { get; set; }
		
		/// <summary>
		/// The description of the phone number.
		/// Min length: 0
		/// Max length: 500
		/// Pattern: ^[\W\S_]*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[\W\S_]*")]
		public string PhoneNumberDescription { get; set; }
		
		/// <summary>
		/// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.</p> <p>Pattern: <code>^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$</code> </p>
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
	}
	
	public class CreateAgentStatusPutBody
	{
		
		/// <summary>
		/// The name of the status.
		/// Required
		/// Min length: 1
		/// Max length: 127
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(127)]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the status.
		/// Min length: 1
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string Description { get; set; }
		
		/// <summary>
		/// The state of the status.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormScoringStatus State { get; set; }
		
		/// <summary>
		/// The display order of the status.
		/// Minimum: 1
		/// Maximum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 50)]
		public System.Nullable<System.Int32> DisplayOrder { get; set; }
		
		/// <summary>
		/// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateContactFlowPutBody
	{
		
		/// <summary>
		/// The name of the flow.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// The type of the flow. For descriptions of the available types, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types">Choose a flow type</a> in the <i>Amazon Connect Administrator Guide</i>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ContactFlowType Type { get; set; }
		
		/// <summary>
		/// The description of the flow. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// The content of the flow. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Content { get; set; }
		
		/// <summary>
		/// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateContactFlowModulePutBody
	{
		
		/// <summary>
		/// The name of the flow module.
		/// Required
		/// Min length: 1
		/// Max length: 127
		/// Pattern: .*\S.*
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(127)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the flow module. 
		/// Min length: 0
		/// Max length: 500
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string Description { get; set; }
		
		/// <summary>
		/// The content of the flow module.
		/// Required
		/// Min length: 1
		/// Max length: 256000
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256000)]
		public string Content { get; set; }
		
		/// <summary>
		/// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
	}
	
	public class CreateEvaluationFormPutBody
	{
		
		/// <summary>
		/// A title of the evaluation form.
		/// Required
		/// Min length: 1
		/// Max length: 128
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		public string Title { get; set; }
		
		/// <summary>
		/// The description of the evaluation form.
		/// Min length: 0
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string Description { get; set; }
		
		/// <summary>
		/// Items that are part of the evaluation form. The total number of sections and questions must not exceed 100 each. Questions must be contained in a section.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public EvaluationFormItem[] Items { get; set; }
		
		/// <summary>
		/// Information about scoring strategy for an evaluation form.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateEvaluationFormPutBodyScoringStrategy ScoringStrategy { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
	}
	
	public class CreateEvaluationFormPutBodyScoringStrategy
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormScoringMode Mode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormScoringStatus Status { get; set; }
	}
	
	public class CreateHoursOfOperationPutBody
	{
		
		/// <summary>
		/// The name of the hours of operation.
		/// Required
		/// Min length: 1
		/// Max length: 127
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(127)]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the hours of operation.
		/// Min length: 1
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string Description { get; set; }
		
		/// <summary>
		/// The time zone of the hours of operation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TimeZone { get; set; }
		
		/// <summary>
		/// Configuration information for the hours of operation: day, start time, and end time.
		/// Required
		/// Minimum items: 0
		/// Maximum items: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public HoursOfOperationConfig[] Config { get; set; }
		
		/// <summary>
		/// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateInstancePutBody
	{
		
		/// <summary>
		/// The idempotency token.
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The type of identity management for your Amazon Connect users.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DirectoryType IdentityManagementType { get; set; }
		
		/// <summary>
		/// The name for your instance.
		/// Min length: 1
		/// Max length: 45
		/// Pattern: ^(?!d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(45)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?!d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*$")]
		public string InstanceAlias { get; set; }
		
		/// <summary>
		/// The identifier for the directory.
		/// Min length: 12
		/// Max length: 12
		/// Pattern: ^d-[0-9a-f]{10}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(12)]
		[System.ComponentModel.DataAnnotations.MaxLength(12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^d-[0-9a-f]{10}$")]
		public string DirectoryId { get; set; }
		
		/// <summary>
		/// Your contact center handles incoming contacts.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool InboundCallsEnabled { get; set; }
		
		/// <summary>
		/// Your contact center allows outbound calls.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool OutboundCallsEnabled { get; set; }
	}
	
	public class CreateIntegrationAssociationPutBody
	{
		
		/// <summary>
		/// The type of information to be ingested.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IntegrationType IntegrationType { get; set; }
		
		/// <summary>
		/// <p>The Amazon Resource Name (ARN) of the integration.</p> <note> <p>When integrating with Amazon Pinpoint, the Amazon Connect and Amazon Pinpoint instances must be in the same account.</p> </note>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationArn { get; set; }
		
		/// <summary>
		/// The URL for the external application. This field is only required for the EVENT integration type.
		/// Min length: 1
		/// Max length: 2000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2000)]
		public string SourceApplicationUrl { get; set; }
		
		/// <summary>
		/// The name of the external application. This field is only required for the EVENT integration type.
		/// Min length: 1
		/// Max length: 100
		/// Pattern: ^[a-zA-Z0-9_ -]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-zA-Z0-9_ -]+$")]
		public string SourceApplicationName { get; set; }
		
		/// <summary>
		/// The type of the data source. This field is only required for the EVENT integration type.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SourceType SourceType { get; set; }
		
		/// <summary>
		/// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateParticipantPostBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance. 
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The identifier of the contact in this instance of Amazon Connect. Only contacts in the CHAT channel are supported.
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string ContactId { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The details to add for the participant.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateParticipantPostBodyParticipantDetails ParticipantDetails { get; set; }
	}
	
	public class CreateParticipantPostBodyParticipantDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ParticipantRole ParticipantRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DisplayName { get; set; }
	}
	
	public class CreatePromptPutBody
	{
		
		/// <summary>
		/// The name of the prompt.
		/// Required
		/// Min length: 1
		/// Max length: 127
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(127)]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the prompt.
		/// Min length: 1
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string Description { get; set; }
		
		/// <summary>
		/// The URI for the S3 bucket where the prompt is stored.
		/// Required
		/// Min length: 1
		/// Max length: 512
		/// Pattern: s3://\S+/.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(512)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"s3://\S+/.+")]
		public string S3Uri { get; set; }
		
		/// <summary>
		/// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateQueuePutBody
	{
		
		/// <summary>
		/// The name of the queue.
		/// Required
		/// Min length: 1
		/// Max length: 127
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(127)]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the queue.
		/// Min length: 1
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string Description { get; set; }
		
		/// <summary>
		/// The outbound caller ID name, number, and outbound whisper flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateQueuePutBodyOutboundCallerConfig OutboundCallerConfig { get; set; }
		
		/// <summary>
		/// The identifier for the hours of operation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string HoursOfOperationId { get; set; }
		
		/// <summary>
		/// The maximum number of contacts that can be in the queue before it is considered full.
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxContacts { get; set; }
		
		/// <summary>
		/// The quick connects available to agents who are working the queue.
		/// Minimum items: 1
		/// Maximum items: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public string[] QuickConnectIds { get; set; }
		
		/// <summary>
		/// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateQueuePutBodyOutboundCallerConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OutboundCallerIdName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OutboundCallerIdNumberId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OutboundFlowId { get; set; }
	}
	
	public class CreateQuickConnectPutBody
	{
		
		/// <summary>
		/// The name of the quick connect.
		/// Required
		/// Min length: 1
		/// Max length: 127
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(127)]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the quick connect.
		/// Min length: 1
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string Description { get; set; }
		
		/// <summary>
		/// Contains configuration settings for a quick connect.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateQuickConnectPutBodyQuickConnectConfig QuickConnectConfig { get; set; }
		
		/// <summary>
		/// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateQuickConnectPutBodyQuickConnectConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public QuickConnectType QuickConnectType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserQuickConnectConfig UserConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QueueQuickConnectConfig QueueConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberQuickConnectConfig PhoneConfig { get; set; }
	}
	
	public class CreateRoutingProfilePutBody
	{
		
		/// <summary>
		/// The name of the routing profile. Must not be more than 127 characters.
		/// Required
		/// Min length: 1
		/// Max length: 127
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(127)]
		public string Name { get; set; }
		
		/// <summary>
		/// Description of the routing profile. Must not be more than 250 characters.
		/// Required
		/// Min length: 1
		/// Max length: 250
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string Description { get; set; }
		
		/// <summary>
		/// The default outbound queue for the routing profile.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DefaultOutboundQueueId { get; set; }
		
		/// <summary>
		/// <p>The inbound queues associated with the routing profile. If no queue is added, the agent can make only outbound calls.</p> <p>The limit of 10 array members applies to the maximum number of <code>RoutingProfileQueueConfig</code> objects that can be passed during a CreateRoutingProfile API request. It is different from the quota of 50 queues per routing profile per instance that is listed in <a href="https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html">Amazon Connect service quotas</a>. </p>
		/// Minimum items: 1
		/// Maximum items: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public RoutingProfileQueueConfig[] QueueConfigs { get; set; }
		
		/// <summary>
		/// The channels that agents can handle in the Contact Control Panel (CCP) for this routing profile.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MediaConcurrency[] MediaConcurrencies { get; set; }
		
		/// <summary>
		/// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// Whether agents with this routing profile will have their routing order calculated based on <i>time since their last inbound contact</i> or <i>longest idle time</i>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AgentAvailabilityTimer AgentAvailabilityTimer { get; set; }
	}
	
	public class CreateRulePostBody
	{
		
		/// <summary>
		/// A unique name for the rule.
		/// Required
		/// Min length: 1
		/// Max length: 200
		/// Pattern: ^[0-9a-zA-Z._-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(200)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9a-zA-Z._-]+")]
		public string Name { get; set; }
		
		/// <summary>
		/// The name of the event source. This field is required if <code>TriggerEventSource</code> is one of the following values: <code>OnZendeskTicketCreate</code> | <code>OnZendeskTicketStatusUpdate</code> | <code>OnSalesforceCaseCreate</code> 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateRulePostBodyTriggerEventSource TriggerEventSource { get; set; }
		
		/// <summary>
		/// The conditions of the rule.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Function { get; set; }
		
		/// <summary>
		/// A list of actions to be run when the rule is triggered.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RuleAction[] Actions { get; set; }
		
		/// <summary>
		/// The publish status of the rule.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RulePublishStatus PublishStatus { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
	}
	
	public class CreateRulePostBodyTriggerEventSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EventSourceName EventSourceName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IntegrationAssociationId { get; set; }
	}
	
	public class CreateSecurityProfilePutBody
	{
		
		/// <summary>
		/// The name of the security profile.
		/// Required
		/// Min length: 1
		/// Max length: 127
		/// Pattern: ^[ a-zA-Z0-9_@-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(127)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[ a-zA-Z0-9_@-]+$")]
		public string SecurityProfileName { get; set; }
		
		/// <summary>
		/// The description of the security profile.
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string Description { get; set; }
		
		/// <summary>
		/// Permissions assigned to the security profile. For a list of valid permissions, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-list.html">List of security profile permissions</a>. 
		/// Maximum items: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string[] Permissions { get; set; }
		
		/// <summary>
		/// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// The list of tags that a security profile uses to restrict access to resources in Amazon Connect.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> AllowedAccessControlTags { get; set; }
		
		/// <summary>
		/// The list of resources that a security profile applies tag restrictions to in Amazon Connect. Following are acceptable ResourceNames: <code>User</code> | <code>SecurityProfile</code> | <code>Queue</code> | <code>RoutingProfile</code> 
		/// Maximum items: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public string[] TagRestrictedResources { get; set; }
	}
	
	public class CreateTaskTemplatePutBody
	{
		
		/// <summary>
		/// The name of the task template.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the task template.
		/// Min length: 1
		/// Max length: 255
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		public string Description { get; set; }
		
		/// <summary>
		/// The identifier of the flow that runs by default when a task is created by referencing this template.
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ContactFlowId { get; set; }
		
		/// <summary>
		/// Describes constraints that apply to the template fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateTaskTemplatePutBodyConstraints Constraints { get; set; }
		
		/// <summary>
		/// Describes default values for fields on a template.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateTaskTemplatePutBodyDefaults Defaults { get; set; }
		
		/// <summary>
		/// Marks a template as <code>ACTIVE</code> or <code>INACTIVE</code> for a task to refer to it. Tasks can only be created from <code>ACTIVE</code> templates. If a template is marked as <code>INACTIVE</code>, then a task that refers to this template cannot be created. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateStatus Status { get; set; }
		
		/// <summary>
		/// Fields that are part of the template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateField[] Fields { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
	}
	
	public class CreateTaskTemplatePutBodyConstraints
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RequiredFieldInfo[] RequiredFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReadOnlyFieldInfo[] ReadOnlyFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvisibleFieldInfo[] InvisibleFields { get; set; }
	}
	
	public class CreateTaskTemplatePutBodyDefaults
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateDefaultFieldValue[] DefaultFieldValues { get; set; }
	}
	
	public class CreateTrafficDistributionGroupPutBody
	{
		
		/// <summary>
		/// The name for the traffic distribution group. 
		/// Required
		/// Min length: 1
		/// Max length: 128
		/// Pattern: (^[\S].*[\S]$)|(^[\S]$)
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(^[\S].*[\S]$)|(^[\S]$)")]
		public string Name { get; set; }
		
		/// <summary>
		/// A description for the traffic distribution group.
		/// Min length: 1
		/// Max length: 250
		/// Pattern: (^[\S].*[\S]$)|(^[\S]$)
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(^[\S].*[\S]$)|(^[\S]$)")]
		public string Description { get; set; }
		
		/// <summary>
		/// The identifier of the Amazon Connect instance that has been replicated. You can find the <code>instanceId</code> in the ARN of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 250
		/// Pattern: ^(arn:(aws|aws-us-gov):connect:[a-z]{2}-[a-z]+-[0-9]{1}:[0-9]{1,20}:instance/)?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(arn:(aws|aws-us-gov):connect:[a-z]{2}-[a-z]+-[0-9]{1}:[0-9]{1,20}:instance/)?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$")]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateUseCasePutBody
	{
		
		/// <summary>
		/// The type of use case to associate to the integration association. Each integration association can have only one of each use case type.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UseCaseType UseCaseType { get; set; }
		
		/// <summary>
		/// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateUserPutBody
	{
		
		/// <summary>
		/// The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from [a-zA-Z0-9_-.\@]+.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Username { get; set; }
		
		/// <summary>
		/// The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.
		/// Pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d\S]{8,64}$/
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d\S]{8,64}$/")]
		public string Password { get; set; }
		
		/// <summary>
		/// Contains information about the identity of a user.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateUserPutBodyIdentityInfo IdentityInfo { get; set; }
		
		/// <summary>
		/// Contains information about the phone configuration settings for a user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateUserPutBodyPhoneConfig PhoneConfig { get; set; }
		
		/// <summary>
		/// <p>The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory.</p> <p>This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string DirectoryUserId { get; set; }
		
		/// <summary>
		/// The identifier of the security profile for the user.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 10
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public string[] SecurityProfileIds { get; set; }
		
		/// <summary>
		/// The identifier of the routing profile for the user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoutingProfileId { get; set; }
		
		/// <summary>
		/// The identifier of the hierarchy group for the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string HierarchyGroupId { get; set; }
		
		/// <summary>
		/// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateUserPutBodyIdentityInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FirstName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecondaryEmail { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Mobile { get; set; }
	}
	
	public class CreateUserPutBodyPhoneConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PhoneType PhoneType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoAccept { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AfterContactWorkTimeLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DeskPhoneNumber { get; set; }
	}
	
	public class CreateUserHierarchyGroupPutBody
	{
		
		/// <summary>
		/// The name of the user hierarchy group. Must not be more than 100 characters.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// The identifier for the parent hierarchy group. The user hierarchy is created at level one if the parent group ID is null.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ParentGroupId { get; set; }
		
		/// <summary>
		/// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateVocabularyPostBody
	{
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>. If a create request is received more than once with same client token, subsequent requests return the previous response without creating a vocabulary again.
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// A unique name of the custom vocabulary.
		/// Required
		/// Min length: 1
		/// Max length: 140
		/// Pattern: ^[0-9a-zA-Z._-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(140)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9a-zA-Z._-]+")]
		public string VocabularyName { get; set; }
		
		/// <summary>
		/// The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html">What is Amazon Transcribe?</a> 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateVocabularyPostBodyLanguageCode LanguageCode { get; set; }
		
		/// <summary>
		/// The content of the custom vocabulary in plain-text format with a table of values. Each row in the table represents a word or a phrase, described with <code>Phrase</code>, <code>IPA</code>, <code>SoundsLike</code>, and <code>DisplayAs</code> fields. Separate the fields with TAB characters. The size limit is 50KB. For more information, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html#create-vocabulary-table">Create a custom vocabulary using a table</a>.
		/// Required
		/// Min length: 1
		/// Max length: 60000
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(60000)]
		public string Content { get; set; }
		
		/// <summary>
		/// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CreateVocabularyPostBodyLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ar-AE")]
		arMinusAE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-AB")]
		enMinusAB = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-AU")]
		enMinusAU = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-IE")]
		enMinusIE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-IN")]
		enMinusIN = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-US")]
		enMinusUS = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-WL")]
		enMinusWL = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-US")]
		esMinusUS = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CA")]
		frMinusCA = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hi-IN")]
		hiMinusIN = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ja-JP")]
		jaMinusJP = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ko-KR")]
		koMinusKR = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pt-BR")]
		ptMinusBR = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pt-PT")]
		ptMinusPT = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-CN")]
		zhMinusCN = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-NZ")]
		enMinusNZ = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-ZA")]
		enMinusZA = 22,
	}
	
	public class DeactivateEvaluationFormPostBody
	{
		
		/// <summary>
		/// A version of the evaluation form. If the version property is not provided, the latest version of the evaluation form is deactivated.
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int EvaluationFormVersion { get; set; }
	}
	
	public class UpdateContactEvaluationPostBody
	{
		
		/// <summary>
		/// A map of question identifiers to answer value.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, EvaluationAnswerInput> Answers { get; set; }
		
		/// <summary>
		/// A map of question identifiers to note value.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, EvaluationNote> Notes { get; set; }
	}
	
	public class UpdateEvaluationFormPutBody
	{
		
		/// <summary>
		/// A version of the evaluation form to update.
		/// Required
		/// Minimum: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, System.Int32.MaxValue)]
		public int EvaluationFormVersion { get; set; }
		
		/// <summary>
		/// A flag indicating whether the operation must create a new version.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CreateNewVersion { get; set; }
		
		/// <summary>
		/// A title of the evaluation form.
		/// Required
		/// Min length: 1
		/// Max length: 128
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		public string Title { get; set; }
		
		/// <summary>
		/// The description of the evaluation form.
		/// Min length: 0
		/// Max length: 1024
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string Description { get; set; }
		
		/// <summary>
		/// Items that are part of the evaluation form. The total number of sections and questions must not exceed 100 each. Questions must be contained in a section.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public EvaluationFormItem[] Items { get; set; }
		
		/// <summary>
		/// Information about scoring strategy for an evaluation form.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateEvaluationFormPutBodyScoringStrategy ScoringStrategy { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
	}
	
	public class UpdateEvaluationFormPutBodyScoringStrategy
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormScoringMode Mode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormScoringStatus Status { get; set; }
	}
	
	public class UpdateHoursOfOperationPostBody
	{
		
		/// <summary>
		/// The name of the hours of operation.
		/// Min length: 1
		/// Max length: 127
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(127)]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the hours of operation.
		/// Min length: 0
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string Description { get; set; }
		
		/// <summary>
		/// The time zone of the hours of operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TimeZone { get; set; }
		
		/// <summary>
		/// Configuration information of the hours of operation.
		/// Minimum items: 0
		/// Maximum items: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public HoursOfOperationConfig[] Config { get; set; }
	}
	
	public class UpdatePromptPostBody
	{
		
		/// <summary>
		/// The name of the prompt.
		/// Min length: 1
		/// Max length: 127
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(127)]
		public string Name { get; set; }
		
		/// <summary>
		/// A description of the prompt.
		/// Min length: 1
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string Description { get; set; }
		
		/// <summary>
		/// The URI for the S3 bucket where the prompt is stored.
		/// Min length: 1
		/// Max length: 512
		/// Pattern: s3://\S+/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(512)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"s3://\S+/.+")]
		public string S3Uri { get; set; }
	}
	
	public class UpdateRulePutBody
	{
		
		/// <summary>
		/// The name of the rule. You can change the name only if <code>TriggerEventSource</code> is one of the following values: <code>OnZendeskTicketCreate</code> | <code>OnZendeskTicketStatusUpdate</code> | <code>OnSalesforceCaseCreate</code> 
		/// Required
		/// Min length: 1
		/// Max length: 200
		/// Pattern: ^[0-9a-zA-Z._-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(200)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9a-zA-Z._-]+")]
		public string Name { get; set; }
		
		/// <summary>
		/// The conditions of the rule.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Function { get; set; }
		
		/// <summary>
		/// A list of actions to be run when the rule is triggered.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RuleAction[] Actions { get; set; }
		
		/// <summary>
		/// The publish status of the rule.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RulePublishStatus PublishStatus { get; set; }
	}
	
	public class UpdateSecurityProfilePostBody
	{
		
		/// <summary>
		/// The description of the security profile.
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string Description { get; set; }
		
		/// <summary>
		/// The permissions granted to a security profile. For a list of valid permissions, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-list.html">List of security profile permissions</a>.
		/// Maximum items: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string[] Permissions { get; set; }
		
		/// <summary>
		/// The list of tags that a security profile uses to restrict access to resources in Amazon Connect.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> AllowedAccessControlTags { get; set; }
		
		/// <summary>
		/// The list of resources that a security profile applies tag restrictions to in Amazon Connect.
		/// Maximum items: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public string[] TagRestrictedResources { get; set; }
	}
	
	public class UpdateTaskTemplatePostBody
	{
		
		/// <summary>
		/// The name of the task template.
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the task template.
		/// Min length: 1
		/// Max length: 255
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		public string Description { get; set; }
		
		/// <summary>
		/// The identifier of the flow that runs by default when a task is created by referencing this template.
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ContactFlowId { get; set; }
		
		/// <summary>
		/// Describes constraints that apply to the template fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateTaskTemplatePostBodyConstraints Constraints { get; set; }
		
		/// <summary>
		/// Describes default values for fields on a template.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateTaskTemplatePostBodyDefaults Defaults { get; set; }
		
		/// <summary>
		/// Marks a template as <code>ACTIVE</code> or <code>INACTIVE</code> for a task to refer to it. Tasks can only be created from <code>ACTIVE</code> templates. If a template is marked as <code>INACTIVE</code>, then a task that refers to this template cannot be created.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateStatus Status { get; set; }
		
		/// <summary>
		/// Fields that are part of the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateField[] Fields { get; set; }
	}
	
	public class UpdateTaskTemplatePostBodyConstraints
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RequiredFieldInfo[] RequiredFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReadOnlyFieldInfo[] ReadOnlyFields { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InvisibleFieldInfo[] InvisibleFields { get; set; }
	}
	
	public class UpdateTaskTemplatePostBodyDefaults
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TaskTemplateDefaultFieldValue[] DefaultFieldValues { get; set; }
	}
	
	public class UpdateAgentStatusPostBody
	{
		
		/// <summary>
		/// The name of the agent status.
		/// Min length: 1
		/// Max length: 127
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(127)]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the agent status.
		/// Min length: 0
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string Description { get; set; }
		
		/// <summary>
		/// The state of the agent status.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormScoringStatus State { get; set; }
		
		/// <summary>
		/// The display order of the agent status.
		/// Minimum: 1
		/// Maximum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 50)]
		public System.Nullable<System.Int32> DisplayOrder { get; set; }
		
		/// <summary>
		/// A number indicating the reset order of the agent status.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ResetOrderNumber { get; set; }
	}
	
	public class UpdateContactPostBody
	{
		
		/// <summary>
		/// The name of the contact.
		/// Min length: 0
		/// Max length: 512
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(512)]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the contact.
		/// Min length: 0
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// Well-formed data on contact, shown to agents on Contact Control Panel (CCP).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, Reference> References { get; set; }
	}
	
	public class UpdateInstanceAttributePostBody
	{
		
		/// <summary>
		/// The value for the attribute. Maximum character limit is 100. 
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Value { get; set; }
	}
	
	public class UpdateInstanceStorageConfigPostBody
	{
		
		/// <summary>
		/// The storage configuration for the instance.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateInstanceStorageConfigPostBodyStorageConfig StorageConfig { get; set; }
	}
	
	public class UpdateInstanceStorageConfigPostBodyStorageConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AssociationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StorageType StorageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3Config S3Config { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisVideoStreamConfig KinesisVideoStreamConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisStreamConfig KinesisStreamConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseConfig KinesisFirehoseConfig { get; set; }
	}
	
	public class UpdatePhoneNumberPutBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) for Amazon Connect instances or traffic distribution groups that phone numbers are claimed to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetArn { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
	}
	
	public class UpdateUserHierarchyStructurePostBody
	{
		
		/// <summary>
		/// Contains information about the level hierarchy to update.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateUserHierarchyStructurePostBodyHierarchyStructure HierarchyStructure { get; set; }
	}
	
	public class UpdateUserHierarchyStructurePostBodyHierarchyStructure
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyLevelUpdate LevelOne { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyLevelUpdate LevelTwo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyLevelUpdate LevelThree { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyLevelUpdate LevelFour { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyLevelUpdate LevelFive { get; set; }
	}
	
	public class DisassociateQueueQuickConnectsPostBody
	{
		
		/// <summary>
		/// The quick connects to disassociate from the queue.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public string[] QuickConnectIds { get; set; }
	}
	
	public class DisassociateRoutingProfileQueuesPostBody
	{
		
		/// <summary>
		/// The queues to disassociate from this routing profile.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RoutingProfileQueueReference[] QueueReferences { get; set; }
	}
	
	public class DismissUserContactPostBody
	{
		
		/// <summary>
		/// The identifier of the contact.
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string ContactId { get; set; }
	}
	
	public class GetCurrentMetricDataPostBody
	{
		
		/// <summary>
		/// Contains the filter to apply when retrieving metrics.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GetCurrentMetricDataPostBodyFilters Filters { get; set; }
		
		/// <summary>
		/// <p>The grouping applied to the metrics returned. For example, when grouped by <code>QUEUE</code>, the metrics returned apply to each queue rather than aggregated for all queues. </p> <ul> <li> <p>If you group by <code>CHANNEL</code>, you should include a Channels filter. VOICE, CHAT, and TASK channels are supported.</p> </li> <li> <p>If you group by <code>ROUTING_PROFILE</code>, you must include either a queue or routing profile filter. In addition, a routing profile filter is required for metrics <code>CONTACTS_SCHEDULED</code>, <code>CONTACTS_IN_QUEUE</code>, and <code> OLDEST_CONTACT_AGE</code>.</p> </li> <li> <p>If no <code>Grouping</code> is included in the request, a summary of metrics is returned.</p> </li> </ul>
		/// Maximum items: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(2)]
		public Grouping[] Groupings { get; set; }
		
		/// <summary>
		/// <p>The metrics to retrieve. Specify the name and unit for each metric. The following metrics are available. For a description of all the metrics, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html">Real-time Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <dl> <dt>AGENTS_AFTER_CONTACT_WORK</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#aftercallwork-real-time">ACW</a> </p> </dd> <dt>AGENTS_AVAILABLE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#available-real-time">Available</a> </p> </dd> <dt>AGENTS_ERROR</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#error-real-time">Error</a> </p> </dd> <dt>AGENTS_NON_PRODUCTIVE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#non-productive-time-real-time">NPT (Non-Productive Time)</a> </p> </dd> <dt>AGENTS_ON_CALL</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#on-call-real-time">On contact</a> </p> </dd> <dt>AGENTS_ON_CONTACT</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#on-call-real-time">On contact</a> </p> </dd> <dt>AGENTS_ONLINE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#online-real-time">Online</a> </p> </dd> <dt>AGENTS_STAFFED</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#staffed-real-time">Staffed</a> </p> </dd> <dt>CONTACTS_IN_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#in-queue-real-time">In queue</a> </p> </dd> <dt>CONTACTS_SCHEDULED</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#scheduled-real-time">Scheduled</a> </p> </dd> <dt>OLDEST_CONTACT_AGE</dt> <dd> <p>Unit: SECONDS</p> <p>When you use groupings, Unit says SECONDS and the Value is returned in SECONDS. </p> <p>When you do not use groupings, Unit says SECONDS but the Value is returned in MILLISECONDS. For example, if you get a response like this:</p> <p> <code>{ "Metric": { "Name": "OLDEST_CONTACT_AGE", "Unit": "SECONDS" }, "Value": 24113.0 </code>}</p> <p>The actual OLDEST_CONTACT_AGE is 24 seconds.</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#oldest-real-time">Oldest</a> </p> </dd> <dt>SLOTS_ACTIVE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#active-real-time">Active</a> </p> </dd> <dt>SLOTS_AVAILABLE</dt> <dd> <p>Unit: COUNT</p> <p>Name in real-time metrics report: <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#availability-real-time">Availability</a> </p> </dd> </dl>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CurrentMetric[] CurrentMetrics { get; set; }
		
		/// <summary>
		/// <p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p> <p>The token expires after 5 minutes from the time it is created. Subsequent requests that use the token must use the same request parameters as the request that generated the token.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// <p>The way to sort the resulting response based on metrics. You can enter one sort criteria. By default resources are sorted based on <code>AGENTS_ONLINE</code>, <code>DESCENDING</code>. The metric collection is sorted based on the input metrics.</p> <p>Note the following:</p> <ul> <li> <p>Sorting on <code>SLOTS_ACTIVE</code> and <code>SLOTS_AVAILABLE</code> is not supported.</p> </li> </ul>
		/// Minimum items: 0
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public CurrentMetricSortCriteria[] SortCriteria { get; set; }
	}
	
	public class GetCurrentMetricDataPostBodyFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Queues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Channel[] Channels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RoutingProfiles { get; set; }
	}
	
	public class GetCurrentUserDataPostBody
	{
		
		/// <summary>
		/// A filter for the user data.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GetCurrentUserDataPostBodyFilters Filters { get; set; }
		
		/// <summary>
		/// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	public class GetCurrentUserDataPostBodyFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Queues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactFilter ContactFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RoutingProfiles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Agents { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] UserHierarchyGroups { get; set; }
	}
	
	public class GetMetricDataPostBody
	{
		
		/// <summary>
		/// <p>The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be specified using a multiple of 5 minutes, such as 10:05, 10:10, 10:15.</p> <p>The start time cannot be earlier than 24 hours before the time of the request. Historical metrics are available only for 24 hours.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		/// <summary>
		/// <p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be specified using an interval of 5 minutes, such as 11:00, 11:05, 11:10, and must be later than the start time timestamp.</p> <p>The time range between the start and end time must be less than 24 hours.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
		
		/// <summary>
		/// Contains the filter to apply when retrieving metrics.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GetMetricDataPostBodyFilters Filters { get; set; }
		
		/// <summary>
		/// <p>The grouping applied to the metrics returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values returned apply to the metrics for each queue rather than aggregated for all queues.</p> <p>If no grouping is specified, a summary of metrics for all queues is returned.</p>
		/// Maximum items: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(2)]
		public Grouping[] Groupings { get; set; }
		
		/// <summary>
		/// <p>The metrics to retrieve. Specify the name, unit, and statistic for each metric. The following historical metrics are available. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <note> <p>This API does not support a contacts incoming metric (there's no CONTACTS_INCOMING metric missing from the documented list). </p> </note> <dl> <dt>ABANDON_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>AFTER_CONTACT_WORK_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>API_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CALLBACK_CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_ABANDONED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_AGENT_HUNG_UP_FIRST</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_CONSULTED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED_INCOMING</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HANDLED_OUTBOUND</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_HOLD_ABANDONS</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_MISSED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_QUEUED</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_IN</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_IN_FROM_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT_FROM_QUEUE</dt> <dd> <p>Unit: COUNT</p> <p>Statistic: SUM</p> </dd> <dt>HANDLE_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>HOLD_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>INTERACTION_AND_HOLD_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>INTERACTION_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>OCCUPANCY</dt> <dd> <p>Unit: PERCENT</p> <p>Statistic: AVG</p> </dd> <dt>QUEUE_ANSWER_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: AVG</p> </dd> <dt>QUEUED_TIME</dt> <dd> <p>Unit: SECONDS</p> <p>Statistic: MAX</p> </dd> <dt>SERVICE_LEVEL</dt> <dd> <p>You can include up to 20 SERVICE_LEVEL metrics in a request.</p> <p>Unit: PERCENT</p> <p>Statistic: AVG</p> <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p> </dd> </dl>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HistoricalMetric[] HistoricalMetrics { get; set; }
		
		/// <summary>
		/// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	public class GetMetricDataPostBodyFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Queues { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Channel[] Channels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RoutingProfiles { get; set; }
	}
	
	public class GetMetricDataV2PostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the resource. This includes the <code>instanceId</code> an Amazon Connect instance.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		/// <summary>
		/// The timestamp, in UNIX Epoch time format, at which to start the reporting interval for the retrieval of historical metrics data. The time must be before the end time timestamp. The time range between the start and end time must be less than 24 hours. The start time cannot be earlier than 35 days before the time of the request. Historical metrics are available for 35 days.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		/// <summary>
		/// <p>The timestamp, in UNIX Epoch time format, at which to end the reporting interval for the retrieval of historical metrics data. The time must be later than the start time timestamp. It cannot be later than the current timestamp.</p> <p>The time range between the start and end time must be less than 24 hours.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
		
		/// <summary>
		/// <p>The filters to apply to returned metrics. You can filter on the following resources:</p> <ul> <li> <p>Queues</p> </li> <li> <p>Routing profiles</p> </li> <li> <p>Agents</p> </li> <li> <p>Channels</p> </li> <li> <p>User hierarchy groups</p> </li> <li> <p>Feature</p> </li> </ul> <p>At least one filter must be passed from queues, routing profiles, agents, or user hierarchy groups.</p> <p>To filter by phone number, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/create-historical-metrics-report.html">Create a historical metrics report</a> in the <i>Amazon Connect Administrator's Guide</i>.</p> <p>Note the following limits:</p> <ul> <li> <p> <b>Filter keys</b>: A maximum of 5 filter keys are supported in a single request. Valid filter keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> | <code>FEATURE</code> </p> </li> <li> <p> <b>Filter values</b>: A maximum of 100 filter values are supported in a single request. VOICE, CHAT, and TASK are valid <code>filterValue</code> for the CHANNEL filter key. They do not count towards limitation of 100 filter values. For example, a GetMetricDataV2 request can filter by 50 queues, 35 agents, and 15 routing profiles for a total of 100 filter values, along with 3 channel filters. </p> <p> <code>contact_lens_conversational_analytics</code> is a valid filterValue for the <code>FEATURE</code> filter key. It is available only to contacts analyzed by Contact Lens conversational analytics.</p> </li> </ul>
		/// Required
		/// Minimum items: 1
		/// Maximum items: 5
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public FilterV2[] Filters { get; set; }
		
		/// <summary>
		/// <p>The grouping applied to the metrics that are returned. For example, when results are grouped by queue, the metrics returned are grouped by queue. The values that are returned apply to the metrics for each queue. They are not aggregated for all queues.</p> <p>If no grouping is specified, a summary of all metrics is returned.</p> <p>Valid grouping keys: <code>QUEUE</code> | <code>ROUTING_PROFILE</code> | <code>AGENT</code> | <code>CHANNEL</code> | <code>AGENT_HIERARCHY_LEVEL_ONE</code> | <code>AGENT_HIERARCHY_LEVEL_TWO</code> | <code>AGENT_HIERARCHY_LEVEL_THREE</code> | <code>AGENT_HIERARCHY_LEVEL_FOUR</code> | <code>AGENT_HIERARCHY_LEVEL_FIVE</code> </p>
		/// Maximum items: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(2)]
		public string[] Groupings { get; set; }
		
		/// <summary>
		/// <p>The metrics to retrieve. Specify the name, groupings, and filters for each metric. The following historical metrics are available. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical metrics definitions</a> in the <i>Amazon Connect Administrator's Guide</i>.</p> <dl> <dt>AGENT_ADHERENT_TIME</dt> <dd> <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p> <p>Unit: Seconds</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p> </dd> <dt>AGENT_NON_RESPONSE</dt> <dd> <p>Unit: Count</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy </p> </dd> <dt>AGENT_OCCUPANCY</dt> <dd> <p>Unit: Percentage</p> <p>Valid groupings and filters: Routing Profile, Agent, Agent Hierarchy </p> </dd> <dt>AGENT_SCHEDULE_ADHERENCE</dt> <dd> <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p> <p>Unit: Percent</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>AGENT_SCHEDULED_TIME</dt> <dd> <p>This metric is available only in Amazon Web Services Regions where <a href="https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region">Forecasting, capacity planning, and scheduling</a> is available.</p> <p>Unit: Seconds</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>AVG_ABANDON_TIME</dt> <dd> <p>Unit: Seconds</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>AVG_AFTER_CONTACT_WORK_TIME</dt> <dd> <p>Unit: Seconds</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note> <p>Feature is a valid filter but not a valid grouping.</p> </note> </dd> <dt>AVG_AGENT_CONNECTING_TIME</dt> <dd> <p>Unit: Seconds</p> <p>Valid metric filter key: <code>INITIATION_METHOD</code>. For now, this metric only supports the following as <code>INITIATION_METHOD</code>: <code>INBOUND</code> | <code>OUTBOUND</code> | <code>CALLBACK</code> | <code>API</code> </p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>AVG_AGENT_CONNECTING_TIME</dt> <dd> <p>Unit: Seconds</p> <p>Valid metric filter key: <code>INITIATION_METHOD</code>. For now, this metric only supports the following as <code>INITIATION_METHOD</code>: <code>INBOUND</code> | <code>OUTBOUND</code> | <code>CALLBACK</code> | <code>API</code> </p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>AVG_CONTACT_DURATION</dt> <dd> <p>Unit: Seconds</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note> <p>Feature is a valid filter but not a valid grouping.</p> </note> </dd> <dt>AVG_CONVERSATION_DURATION</dt> <dd> <p>Unit: Seconds</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>AVG_GREETING_TIME_AGENT</dt> <dd> <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p> <p>Unit: Seconds</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>AVG_HANDLE_TIME</dt> <dd> <p>Unit: Seconds</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note> <p>Feature is a valid filter but not a valid grouping.</p> </note> </dd> <dt>AVG_HOLD_TIME</dt> <dd> <p>Unit: Seconds</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note> <p>Feature is a valid filter but not a valid grouping.</p> </note> </dd> <dt>AVG_HOLDS</dt> <dd> <p>Unit: Count</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note> <p>Feature is a valid filter but not a valid grouping.</p> </note> </dd> <dt>AVG_INTERACTION_AND_HOLD_TIME</dt> <dd> <p>Unit: Seconds</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>AVG_INTERACTION_TIME</dt> <dd> <p>Unit: Seconds</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Feature</p> <note> <p>Feature is a valid filter but not a valid grouping.</p> </note> </dd> <dt>AVG_INTERRUPTIONS_AGENT</dt> <dd> <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p> <p>Unit: Count</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>AVG_INTERRUPTION_TIME_AGENT</dt> <dd> <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p> <p>Unit: Seconds</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>AVG_NON_TALK_TIME</dt> <dd> <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p> <p>Unit: Seconds</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>AVG_QUEUE_ANSWER_TIME</dt> <dd> <p>Unit: Seconds</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Feature</p> <note> <p>Feature is a valid filter but not a valid grouping.</p> </note> </dd> <dt>AVG_TALK_TIME</dt> <dd> <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p> <p>Unit: Seconds</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>AVG_TALK_TIME_AGENT</dt> <dd> <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p> <p>Unit: Seconds</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>AVG_TALK_TIME_CUSTOMER</dt> <dd> <p>This metric is available only for contacts analyzed by Contact Lens conversational analytics.</p> <p>Unit: Seconds</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>CONTACTS_ABANDONED</dt> <dd> <p>Unit: Count</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>CONTACTS_CREATED</dt> <dd> <p>Unit: Count</p> <p>Valid metric filter key: <code>INITIATION_METHOD</code> </p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Feature</p> <note> <p>Feature is a valid filter but not a valid grouping.</p> </note> </dd> <dt>CONTACTS_HANDLED</dt> <dd> <p>Unit: Count</p> <p>Valid metric filter key: <code>INITIATION_METHOD</code>, <code>DISCONNECT_REASON</code> </p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note> <p>Feature is a valid filter but not a valid grouping.</p> </note> </dd> <dt>CONTACTS_HOLD_ABANDONS</dt> <dd> <p>Unit: Count</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>CONTACTS_QUEUED</dt> <dd> <p>Unit: Count</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT</dt> <dd> <p>Unit: Count</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature</p> <note> <p>Feature is a valid filter but not a valid grouping.</p> </note> </dd> <dt>CONTACTS_TRANSFERRED_OUT_BY_AGENT</dt> <dd> <p>Unit: Count</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>CONTACTS_TRANSFERRED_OUT_FROM_QUEUE</dt> <dd> <p>Unit: Count</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>MAX_QUEUED_TIME</dt> <dd> <p>Unit: Seconds</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy</p> </dd> <dt>SERVICE_LEVEL</dt> <dd> <p>You can include up to 20 SERVICE_LEVEL metrics in a request.</p> <p>Unit: Percent</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile</p> <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p> </dd> <dt>SUM_CONTACTS_ANSWERED_IN_X</dt> <dd> <p>Unit: Count</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile</p> <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p> </dd> <dt>SUM_CONTACTS_ABANDONED_IN_X</dt> <dd> <p>Unit: Count</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile</p> <p>Threshold: For <code>ThresholdValue</code>, enter any whole number from 1 to 604800 (inclusive), in seconds. For <code>Comparison</code>, you must enter <code>LT</code> (for "Less than"). </p> </dd> <dt>SUM_CONTACTS_DISCONNECTED </dt> <dd> <p>Valid metric filter key: <code>DISCONNECT_REASON</code> </p> <p>Unit: Count</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile</p> </dd> <dt>SUM_RETRY_CALLBACK_ATTEMPTS</dt> <dd> <p>Unit: Count</p> <p>Valid groupings and filters: Queue, Channel, Routing Profile</p> </dd> </dl>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MetricV2[] Metrics { get; set; }
		
		/// <summary>
		/// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
		/// Min length: 1
		/// Max length: 2500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2500)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	public class UpdateTrafficDistributionPutBody
	{
		
		/// <summary>
		/// The distribution of traffic between the instance and its replicas.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateTrafficDistributionPutBodyTelephonyConfig TelephonyConfig { get; set; }
	}
	
	public class UpdateTrafficDistributionPutBodyTelephonyConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Distribution[] Distributions { get; set; }
	}
	
	public class ListDefaultVocabulariesPostBody
	{
		
		/// <summary>
		/// The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html">What is Amazon Transcribe?</a> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<ListDefaultVocabulariesPostBodyLanguageCode> LanguageCode { get; set; }
		
		/// <summary>
		/// The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
		/// Min length: 1
		/// Max length: 131070
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(131070)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ListDefaultVocabulariesPostBodyLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ar-AE")]
		arMinusAE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-AB")]
		enMinusAB = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-AU")]
		enMinusAU = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-IE")]
		enMinusIE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-IN")]
		enMinusIN = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-US")]
		enMinusUS = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-WL")]
		enMinusWL = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-US")]
		esMinusUS = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CA")]
		frMinusCA = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hi-IN")]
		hiMinusIN = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ja-JP")]
		jaMinusJP = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ko-KR")]
		koMinusKR = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pt-BR")]
		ptMinusBR = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pt-PT")]
		ptMinusPT = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-CN")]
		zhMinusCN = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-NZ")]
		enMinusNZ = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-ZA")]
		enMinusZA = 22,
	}
	
	public class ListPhoneNumbersV2PostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) for Amazon Connect instances or traffic distribution groups that phone numbers are claimed to. If <code>TargetArn</code> input is not provided, this API lists numbers claimed to all the Amazon Connect instances belonging to your account in the same Amazon Web Services Region as the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string TargetArn { get; set; }
		
		/// <summary>
		/// The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 1000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 1000)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
		/// Min length: 1
		/// Max length: 100000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100000)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The ISO country code.
		/// Maximum items: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public PhoneNumberCountryCode[] PhoneNumberCountryCodes { get; set; }
		
		/// <summary>
		/// The type of phone number.
		/// Maximum items: 6
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(6)]
		public PhoneNumberType[] PhoneNumberTypes { get; set; }
		
		/// <summary>
		/// The prefix of the phone number. If provided, it must contain <code>+</code> as part of the country code.
		/// Pattern: \\+?[0-9]{1,11}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\\+?[0-9]{1,11}")]
		public string PhoneNumberPrefix { get; set; }
	}
	
	public class UpdateRoutingProfileQueuesPostBody
	{
		
		/// <summary>
		/// The queues to be updated for this routing profile. Queues must first be associated to the routing profile. You can do this using AssociateRoutingProfileQueues.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 10
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public RoutingProfileQueueConfig[] QueueConfigs { get; set; }
	}
	
	public class TagResourcePostBody
	{
		
		/// <summary>
		/// The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class MonitorContactPostBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can find the instanceId in the ARN of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The identifier of the contact.
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string ContactId { get; set; }
		
		/// <summary>
		/// The identifier of the user account.
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string UserId { get; set; }
		
		/// <summary>
		/// Specify which monitoring actions the user is allowed to take. For example, whether the user is allowed to escalate from silent monitoring to barge.
		/// Maximum items: 2
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(2)]
		public MonitorCapability[] AllowedMonitorCapabilities { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
	}
	
	public class PutUserStatusPutBody
	{
		
		/// <summary>
		/// The identifier of the agent status.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AgentStatusId { get; set; }
	}
	
	public class ReplicateInstancePostBody
	{
		
		/// <summary>
		/// The Amazon Web Services Region where to replicate the Amazon Connect instance.
		/// Required
		/// Min length: 8
		/// Max length: 31
		/// Pattern: [a-z]{2}(-[a-z]+){1,2}(-[0-9])?
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(8)]
		[System.ComponentModel.DataAnnotations.MaxLength(31)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-z]{2}(-[a-z]+){1,2}(-[0-9])?")]
		public string ReplicaRegion { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The alias for the replicated instance. The <code>ReplicaAlias</code> must be unique.
		/// Required
		/// Min length: 1
		/// Max length: 45
		/// Pattern: ^(?!d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(45)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(?!d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*$")]
		public string ReplicaAlias { get; set; }
	}
	
	public class ResumeContactRecordingPostBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The identifier of the contact.
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string ContactId { get; set; }
		
		/// <summary>
		/// The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string InitialContactId { get; set; }
	}
	
	public class SearchAvailablePhoneNumbersPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) for Amazon Connect instances or traffic distribution groups that phone numbers are claimed to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetArn { get; set; }
		
		/// <summary>
		/// The ISO country code.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberCountryCode PhoneNumberCountryCode { get; set; }
		
		/// <summary>
		/// The type of phone number.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberType PhoneNumberType { get; set; }
		
		/// <summary>
		/// The prefix of the phone number. If provided, it must contain <code>+</code> as part of the country code.
		/// Pattern: \\+?[0-9]{1,11}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\\+?[0-9]{1,11}")]
		public string PhoneNumberPrefix { get; set; }
		
		/// <summary>
		/// The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 10)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
		/// Min length: 1
		/// Max length: 100000
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100000)]
		public string NextToken { get; set; }
	}
	
	public class SearchHoursOfOperationsPostBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
		/// Min length: 1
		/// Max length: 2500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2500)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Filters to be applied to search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SearchHoursOfOperationsPostBodySearchFilter SearchFilter { get; set; }
		
		/// <summary>
		/// The search criteria to be used to return hours of operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SearchHoursOfOperationsPostBodySearchCriteria SearchCriteria { get; set; }
	}
	
	public class SearchHoursOfOperationsPostBodySearchFilter
	{
		
		/// <summary>
		/// <p>An object that can be used to specify Tag conditions inside the <code>SearchFilter</code>. This accepts an <code>OR</code> of <code>AND</code> (List of List) input where: </p> <ul> <li> <p>Top level list specifies conditions that need to be applied with <code>OR</code> operator</p> </li> <li> <p>Inner list specifies conditions that need to be applied with <code>AND</code> operator.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ControlPlaneTagFilter TagFilter { get; set; }
	}
	
	public class SearchHoursOfOperationsPostBodySearchCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HoursOfOperationSearchCriteria[] OrConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HoursOfOperationSearchCriteria[] AndConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringCondition StringCondition { get; set; }
	}
	
	public class SearchPromptsPostBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
		/// Min length: 1
		/// Max length: 2500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2500)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Filters to be applied to search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SearchPromptsPostBodySearchFilter SearchFilter { get; set; }
		
		/// <summary>
		/// The search criteria to be used to return prompts.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SearchPromptsPostBodySearchCriteria SearchCriteria { get; set; }
	}
	
	public class SearchPromptsPostBodySearchFilter
	{
		
		/// <summary>
		/// <p>An object that can be used to specify Tag conditions inside the <code>SearchFilter</code>. This accepts an <code>OR</code> of <code>AND</code> (List of List) input where: </p> <ul> <li> <p>Top level list specifies conditions that need to be applied with <code>OR</code> operator</p> </li> <li> <p>Inner list specifies conditions that need to be applied with <code>AND</code> operator.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ControlPlaneTagFilter TagFilter { get; set; }
	}
	
	public class SearchPromptsPostBodySearchCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PromptSearchCriteria[] OrConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PromptSearchCriteria[] AndConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringCondition StringCondition { get; set; }
	}
	
	public class SearchQueuesPostBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
		/// Min length: 1
		/// Max length: 2500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2500)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Filters to be applied to search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SearchQueuesPostBodySearchFilter SearchFilter { get; set; }
		
		/// <summary>
		/// <p>The search criteria to be used to return queues.</p> <note> <p>The <code>name</code> and <code>description</code> fields support "contains" queries with a minimum of 2 characters and a maximum of 25 characters. Any queries with character lengths outside of this range will throw invalid results. </p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SearchQueuesPostBodySearchCriteria SearchCriteria { get; set; }
	}
	
	public class SearchQueuesPostBodySearchFilter
	{
		
		/// <summary>
		/// <p>An object that can be used to specify Tag conditions inside the <code>SearchFilter</code>. This accepts an <code>OR</code> of <code>AND</code> (List of List) input where: </p> <ul> <li> <p>Top level list specifies conditions that need to be applied with <code>OR</code> operator</p> </li> <li> <p>Inner list specifies conditions that need to be applied with <code>AND</code> operator.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ControlPlaneTagFilter TagFilter { get; set; }
	}
	
	public class SearchQueuesPostBodySearchCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public QueueSearchCriteria[] OrConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QueueSearchCriteria[] AndConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringCondition StringCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SearchableQueueType QueueTypeCondition { get; set; }
	}
	
	public class SearchQuickConnectsPostBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
		/// Min length: 1
		/// Max length: 2500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2500)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Filters to be applied to search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SearchQuickConnectsPostBodySearchFilter SearchFilter { get; set; }
		
		/// <summary>
		/// The search criteria to be used to return quick connects.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SearchQuickConnectsPostBodySearchCriteria SearchCriteria { get; set; }
	}
	
	public class SearchQuickConnectsPostBodySearchFilter
	{
		
		/// <summary>
		/// <p>An object that can be used to specify Tag conditions inside the <code>SearchFilter</code>. This accepts an <code>OR</code> of <code>AND</code> (List of List) input where: </p> <ul> <li> <p>Top level list specifies conditions that need to be applied with <code>OR</code> operator</p> </li> <li> <p>Inner list specifies conditions that need to be applied with <code>AND</code> operator.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ControlPlaneTagFilter TagFilter { get; set; }
	}
	
	public class SearchQuickConnectsPostBodySearchCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public QuickConnectSearchCriteria[] OrConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuickConnectSearchCriteria[] AndConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringCondition StringCondition { get; set; }
	}
	
	public class SearchResourceTagsPostBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can find the instanceId in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 250
		/// Pattern: ^(arn:(aws|aws-us-gov):connect:[a-z]{2}-[a-z]+-[0-9]{1}:[0-9]{1,20}:instance/)?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(arn:(aws|aws-us-gov):connect:[a-z]{2}-[a-z]+-[0-9]{1}:[0-9]{1,20}:instance/)?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$")]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The list of resource types to be used to search tags from. If not provided or if any empty list is provided, this API will search from all supported resource types.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] ResourceTypes { get; set; }
		
		/// <summary>
		/// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
		/// Min length: 1
		/// Max length: 2500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2500)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The search criteria to be used to search tags.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SearchResourceTagsPostBodySearchCriteria SearchCriteria { get; set; }
	}
	
	public class SearchResourceTagsPostBodySearchCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TagSearchCondition TagSearchCondition { get; set; }
	}
	
	public class SearchRoutingProfilesPostBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
		/// Min length: 1
		/// Max length: 2500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2500)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Filters to be applied to search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SearchRoutingProfilesPostBodySearchFilter SearchFilter { get; set; }
		
		/// <summary>
		/// <p>The search criteria to be used to return routing profiles.</p> <note> <p>The <code>name</code> and <code>description</code> fields support "contains" queries with a minimum of 2 characters and a maximum of 25 characters. Any queries with character lengths outside of this range will throw invalid results. </p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SearchRoutingProfilesPostBodySearchCriteria SearchCriteria { get; set; }
	}
	
	public class SearchRoutingProfilesPostBodySearchFilter
	{
		
		/// <summary>
		/// <p>An object that can be used to specify Tag conditions inside the <code>SearchFilter</code>. This accepts an <code>OR</code> of <code>AND</code> (List of List) input where: </p> <ul> <li> <p>Top level list specifies conditions that need to be applied with <code>OR</code> operator</p> </li> <li> <p>Inner list specifies conditions that need to be applied with <code>AND</code> operator.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ControlPlaneTagFilter TagFilter { get; set; }
	}
	
	public class SearchRoutingProfilesPostBodySearchCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RoutingProfileSearchCriteria[] OrConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RoutingProfileSearchCriteria[] AndConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringCondition StringCondition { get; set; }
	}
	
	public class SearchSecurityProfilesPostBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
		/// Min length: 1
		/// Max length: 2500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2500)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// <p>The search criteria to be used to return security profiles.</p> <note> <p>The <code>name</code> field support "contains" queries with a minimum of 2 characters and maximum of 25 characters. Any queries with character lengths outside of this range will throw invalid results.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SearchSecurityProfilesPostBodySearchCriteria SearchCriteria { get; set; }
		
		/// <summary>
		/// Filters to be applied to search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SearchSecurityProfilesPostBodySearchFilter SearchFilter { get; set; }
	}
	
	public class SearchSecurityProfilesPostBodySearchCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SecurityProfileSearchCriteria[] OrConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SecurityProfileSearchCriteria[] AndConditions { get; set; }
		
		/// <summary>
		/// A leaf node condition which can be used to specify a string condition. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StringCondition StringCondition { get; set; }
	}
	
	public class SearchSecurityProfilesPostBodySearchFilter
	{
		
		/// <summary>
		/// <p>An object that can be used to specify Tag conditions inside the <code>SearchFilter</code>. This accepts an <code>OR</code> of <code>AND</code> (List of List) input where: </p> <ul> <li> <p>Top level list specifies conditions that need to be applied with <code>OR</code> operator</p> </li> <li> <p>Inner list specifies conditions that need to be applied with <code>AND</code> operator.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ControlPlaneTagFilter TagFilter { get; set; }
	}
	
	public class SearchUsersPostBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
		/// Min length: 1
		/// Max length: 2500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2500)]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// Filters to be applied to search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SearchUsersPostBodySearchFilter SearchFilter { get; set; }
		
		/// <summary>
		/// <p>The search criteria to be used to return users.</p> <note> <p>The <code>name</code> and <code>description</code> fields support "contains" queries with a minimum of 2 characters and a maximum of 25 characters. Any queries with character lengths outside of this range will throw invalid results. </p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SearchUsersPostBodySearchCriteria SearchCriteria { get; set; }
	}
	
	public class SearchUsersPostBodySearchFilter
	{
		
		/// <summary>
		/// <p>An object that can be used to specify Tag conditions inside the <code>SearchFilter</code>. This accepts an <code>OR</code> of <code>AND</code> (List of List) input where: </p> <ul> <li> <p>Top level list specifies conditions that need to be applied with <code>OR</code> operator</p> </li> <li> <p>Inner list specifies conditions that need to be applied with <code>AND</code> operator.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ControlPlaneTagFilter TagFilter { get; set; }
	}
	
	public class SearchUsersPostBodySearchCriteria
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UserSearchCriteria[] OrConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserSearchCriteria[] AndConditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringCondition StringCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HierarchyGroupCondition HierarchyGroupCondition { get; set; }
	}
	
	public class SearchVocabulariesPostBody
	{
		
		/// <summary>
		/// The maximum number of results to return per page.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
		/// Min length: 1
		/// Max length: 131070
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(131070)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The current state of the custom vocabulary.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public VocabularyState State { get; set; }
		
		/// <summary>
		/// The starting pattern of the name of the vocabulary.
		/// Min length: 1
		/// Max length: 140
		/// Pattern: ^[0-9a-zA-Z._-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(140)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[0-9a-zA-Z._-]+")]
		public string NameStartsWith { get; set; }
		
		/// <summary>
		/// The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see <a href="https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html">What is Amazon Transcribe?</a> 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<SearchVocabulariesPostBodyLanguageCode> LanguageCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SearchVocabulariesPostBodyLanguageCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ar-AE")]
		arMinusAE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-CH")]
		deMinusCH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="de-DE")]
		deMinusDE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-AB")]
		enMinusAB = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-AU")]
		enMinusAU = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-GB")]
		enMinusGB = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-IE")]
		enMinusIE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-IN")]
		enMinusIN = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-US")]
		enMinusUS = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-WL")]
		enMinusWL = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-ES")]
		esMinusES = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="es-US")]
		esMinusUS = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-CA")]
		frMinusCA = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fr-FR")]
		frMinusFR = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="hi-IN")]
		hiMinusIN = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="it-IT")]
		itMinusIT = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ja-JP")]
		jaMinusJP = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ko-KR")]
		koMinusKR = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pt-BR")]
		ptMinusBR = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pt-PT")]
		ptMinusPT = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="zh-CN")]
		zhMinusCN = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-NZ")]
		enMinusNZ = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="en-ZA")]
		enMinusZA = 22,
	}
	
	public class StartChatContactPutBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// <p>The identifier of the flow for initiating the chat. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the flow. On the flow page, under the name of the flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>
		/// Required
		/// Max length: 500
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ContactFlowId { get; set; }
		
		/// <summary>
		/// <p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes. They can be accessed in flows just like any other contact attributes. </p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Attributes { get; set; }
		
		/// <summary>
		/// The customer's details.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartChatContactPutBodyParticipantDetails ParticipantDetails { get; set; }
		
		/// <summary>
		/// A chat message.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StartChatContactPutBodyInitialMessage InitialMessage { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The total duration of the newly started chat session. If not specified, the chat session duration defaults to 25 hour. The minimum configurable time is 60 minutes. The maximum configurable time is 10,080 minutes (7 days).
		/// Minimum: 60
		/// Maximum: 10080
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(60, 10080)]
		public System.Nullable<System.Int32> ChatDurationInMinutes { get; set; }
		
		/// <summary>
		/// <p>The supported chat message content types. Supported types are <code>text/plain</code>, <code>text/markdown</code>, <code>application/json</code>, <code>application/vnd.amazonaws.connect.message.interactive</code>, and <code>application/vnd.amazonaws.connect.message.interactive.response</code>. </p> <p>Content types must always contain <code>text/plain</code>. You can then put any other supported type in the list. For example, all the following lists are valid because they contain <code>text/plain</code>: <code>[text/plain, text/markdown, application/json]</code>, <code>[text/markdown, text/plain]</code>, <code>[text/plain, application/json, application/vnd.amazonaws.connect.message.interactive.response]</code>. </p> <note> <p>The type <code>application/vnd.amazonaws.connect.message.interactive</code> is required to use the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/show-view-block.html">Show view</a> flow block.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] SupportedMessagingContentTypes { get; set; }
		
		/// <summary>
		/// Enable persistent chats. For more information about enabling persistent chat, and for example use cases and how to configure for them, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/chat-persistence.html">Enable persistent chat</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StartChatContactPutBodyPersistentChat PersistentChat { get; set; }
		
		/// <summary>
		/// <p>The unique identifier for an Amazon Connect contact. This identifier is related to the chat starting.</p> <note> <p>You cannot provide data for both RelatedContactId and PersistentChat. </p> </note>
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string RelatedContactId { get; set; }
	}
	
	public class StartChatContactPutBodyParticipantDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DisplayName { get; set; }
	}
	
	public class StartChatContactPutBodyInitialMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ContentType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Content { get; set; }
	}
	
	public class StartChatContactPutBodyPersistentChat
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RehydrationType RehydrationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceContactId { get; set; }
	}
	
	public class StartContactEvaluationPutBody
	{
		
		/// <summary>
		/// The identifier of the contact in this instance of Amazon Connect. 
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string ContactId { get; set; }
		
		/// <summary>
		/// The unique identifier for the evaluation form.
		/// Required
		/// Min length: 1
		/// Max length: 500
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string EvaluationFormId { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
	}
	
	public class StartContactRecordingPostBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The identifier of the contact.
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string ContactId { get; set; }
		
		/// <summary>
		/// The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string InitialContactId { get; set; }
		
		/// <summary>
		/// Contains information about the recording configuration settings.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartContactRecordingPostBodyVoiceRecordingConfiguration VoiceRecordingConfiguration { get; set; }
	}
	
	public class StartContactRecordingPostBodyVoiceRecordingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public VoiceRecordingTrack VoiceRecordingTrack { get; set; }
	}
	
	public class StartContactStreamingPostBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string ContactId { get; set; }
		
		/// <summary>
		/// The streaming configuration, such as the Amazon SNS streaming endpoint.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartContactStreamingPostBodyChatStreamingConfiguration ChatStreamingConfiguration { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
		/// Required
		/// Max length: 500
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
	}
	
	public class StartContactStreamingPostBodyChatStreamingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StreamingEndpointArn { get; set; }
	}
	
	public class StartOutboundVoiceContactPutBody
	{
		
		/// <summary>
		/// The phone number of the customer, in E.164 format.
		/// Required
		/// Pattern: \\+[1-9]\\d{1,14}$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\\+[1-9]\\d{1,14}$")]
		public string DestinationPhoneNumber { get; set; }
		
		/// <summary>
		/// <p>The identifier of the flow for the outbound call. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the flow. On the flow page, under the name of the flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>
		/// Required
		/// Max length: 500
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ContactFlowId { get; set; }
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>. The token is valid for 7 days after creation. If a contact is already started, the contact ID is returned. 
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
		/// Pattern: \\+[1-9]\\d{1,14}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\\+[1-9]\\d{1,14}$")]
		public string SourcePhoneNumber { get; set; }
		
		/// <summary>
		/// The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the flow is used. If you do not specify a queue, you must specify a source phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string QueueId { get; set; }
		
		/// <summary>
		/// <p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Attributes { get; set; }
		
		/// <summary>
		/// Configuration of the answering machine detection.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public StartOutboundVoiceContactPutBodyAnswerMachineDetectionConfig AnswerMachineDetectionConfig { get; set; }
		
		/// <summary>
		/// The campaign identifier of the outbound communication.
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string CampaignId { get; set; }
		
		/// <summary>
		/// Denotes the class of traffic. Calls with different traffic types are handled differently by Amazon Connect. The default value is <code>GENERAL</code>. Use <code>CAMPAIGN</code> if <code>EnableAnswerMachineDetection</code> is set to <code>true</code>. For all other cases, use <code>GENERAL</code>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TrafficType TrafficType { get; set; }
	}
	
	public class StartOutboundVoiceContactPutBodyAnswerMachineDetectionConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnableAnswerMachineDetection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AwaitAnswerMachinePrompt { get; set; }
	}
	
	public class StartTaskContactPutBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The identifier of the previous chat, voice, or task contact. 
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string PreviousContactId { get; set; }
		
		/// <summary>
		/// <p>The identifier of the flow for initiating the tasks. To see the ContactFlowId in the Amazon Connect console user interface, on the navigation menu go to <b>Routing</b>, <b>Contact Flows</b>. Choose the flow. On the flow page, under the name of the flow, choose <b>Show additional flow information</b>. The ContactFlowId is the last part of the ARN, shown here in bold: </p> <p>arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/<b>846ec553-a005-41c0-8341-xxxxxxxxxxxx</b> </p>
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ContactFlowId { get; set; }
		
		/// <summary>
		/// <p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in flows just like any other contact attributes.</p> <p>There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Attributes { get; set; }
		
		/// <summary>
		/// The name of a task that is shown to an agent in the Contact Control Panel (CCP).
		/// Required
		/// Min length: 0
		/// Max length: 512
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(512)]
		public string Name { get; set; }
		
		/// <summary>
		/// A formatted URL that is shown to an agent in the Contact Control Panel (CCP).
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, Reference> References { get; set; }
		
		/// <summary>
		/// A description of the task that is shown to an agent in the Contact Control Panel (CCP).
		/// Min length: 0
		/// Max length: 4096
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(4096)]
		public string Description { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
		
		/// <summary>
		/// The timestamp, in Unix Epoch seconds format, at which to start running the inbound flow. The scheduled time cannot be in the past. It must be within up to 6 days in future. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ScheduledTime { get; set; }
		
		/// <summary>
		/// A unique identifier for the task template.
		/// Min length: 1
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string TaskTemplateId { get; set; }
		
		/// <summary>
		/// The identifier for the quick connect.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string QuickConnectId { get; set; }
		
		/// <summary>
		/// The contactId that is <a href="https://docs.aws.amazon.com/connect/latest/adminguide/tasks.html#linked-tasks">related</a> to this contact.
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string RelatedContactId { get; set; }
	}
	
	public class StopContactPostBody
	{
		
		/// <summary>
		/// The ID of the contact.
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string ContactId { get; set; }
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
	}
	
	public class StopContactRecordingPostBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The identifier of the contact.
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string ContactId { get; set; }
		
		/// <summary>
		/// The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string InitialContactId { get; set; }
	}
	
	public class StopContactStreamingPostBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The identifier of the contact. This is the identifier of the contact that is associated with the first interaction with the contact center.
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string ContactId { get; set; }
		
		/// <summary>
		/// The identifier of the streaming configuration enabled. 
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string StreamingId { get; set; }
	}
	
	public class SubmitContactEvaluationPostBody
	{
		
		/// <summary>
		/// A map of question identifiers to answer value.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, EvaluationAnswerInput> Answers { get; set; }
		
		/// <summary>
		/// A map of question identifiers to note value.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, EvaluationNote> Notes { get; set; }
	}
	
	public class SuspendContactRecordingPostBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The identifier of the contact.
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string ContactId { get; set; }
		
		/// <summary>
		/// The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string InitialContactId { get; set; }
	}
	
	public class TransferContactPostBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The identifier of the contact in this instance of Amazon Connect. 
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string ContactId { get; set; }
		
		/// <summary>
		/// The identifier for the queue.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string QueueId { get; set; }
		
		/// <summary>
		/// The identifier for the user.
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string UserId { get; set; }
		
		/// <summary>
		/// The identifier of the flow.
		/// Required
		/// Max length: 500
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ContactFlowId { get; set; }
		
		/// <summary>
		/// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
		/// Max length: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string ClientToken { get; set; }
	}
	
	public class UpdateContactAttributesPostBody
	{
		
		/// <summary>
		/// The identifier of the contact. This is the identifier of the contact associated with the first interaction with the contact center.
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string InitialContactId { get; set; }
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// <p>The Amazon Connect attributes. These attributes can be accessed in flows just like any other contact attributes.</p> <p>You can have up to 32,768 UTF-8 bytes across all attributes for a contact. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Attributes { get; set; }
	}
	
	public class UpdateContactFlowContentPostBody
	{
		
		/// <summary>
		/// The JSON string that represents flow's content. For an example, see <a href="https://docs.aws.amazon.com/connect/latest/APIReference/flow-language-example.html">Example contact flow in Amazon Connect Flow language</a>. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Content { get; set; }
	}
	
	public class UpdateContactFlowMetadataPostBody
	{
		
		/// <summary>
		/// The name of the flow.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// The state of flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ContactFlowState ContactFlowState { get; set; }
	}
	
	public class UpdateContactFlowModuleContentPostBody
	{
		
		/// <summary>
		/// The content of the flow module.
		/// Required
		/// Min length: 1
		/// Max length: 256000
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256000)]
		public string Content { get; set; }
	}
	
	public class UpdateContactFlowModuleMetadataPostBody
	{
		
		/// <summary>
		/// The name of the flow module.
		/// Min length: 1
		/// Max length: 127
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(127)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the flow module.
		/// Min length: 0
		/// Max length: 500
		/// Pattern: .*\S.*
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*\S.*")]
		public string Description { get; set; }
		
		/// <summary>
		/// The state of flow module.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ContactFlowState State { get; set; }
	}
	
	public class UpdateContactFlowNamePostBody
	{
		
		/// <summary>
		/// The name of the flow.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the flow.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	public class UpdateContactSchedulePostBody
	{
		
		/// <summary>
		/// The identifier of the Amazon Connect instance. You can <a href="https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html">find the instance ID</a> in the Amazon Resource Name (ARN) of the instance.
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string InstanceId { get; set; }
		
		/// <summary>
		/// The identifier of the contact.
		/// Required
		/// Min length: 1
		/// Max length: 256
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		public string ContactId { get; set; }
		
		/// <summary>
		/// The timestamp, in Unix Epoch seconds format, at which to start running the inbound flow. The scheduled time cannot be in the past. It must be within up to 6 days in future. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ScheduledTime { get; set; }
	}
	
	public class UpdateParticipantRoleConfigPutBody
	{
		
		/// <summary>
		/// Configuration information for the chat participant role.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateParticipantRoleConfigPutBodyChannelConfiguration ChannelConfiguration { get; set; }
	}
	
	public class UpdateParticipantRoleConfigPutBodyChannelConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ChatParticipantRoleConfig Chat { get; set; }
	}
	
	public class UpdateQueueHoursOfOperationPostBody
	{
		
		/// <summary>
		/// The identifier for the hours of operation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string HoursOfOperationId { get; set; }
	}
	
	public class UpdateQueueMaxContactsPostBody
	{
		
		/// <summary>
		/// The maximum number of contacts that can be in the queue before it is considered full.
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> MaxContacts { get; set; }
	}
	
	public class UpdateQueueNamePostBody
	{
		
		/// <summary>
		/// The name of the queue.
		/// Min length: 1
		/// Max length: 127
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(127)]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the queue.
		/// Min length: 1
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string Description { get; set; }
	}
	
	public class UpdateQueueOutboundCallerConfigPostBody
	{
		
		/// <summary>
		/// The outbound caller ID name, number, and outbound whisper flow.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateQueueOutboundCallerConfigPostBodyOutboundCallerConfig OutboundCallerConfig { get; set; }
	}
	
	public class UpdateQueueOutboundCallerConfigPostBodyOutboundCallerConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OutboundCallerIdName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OutboundCallerIdNumberId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OutboundFlowId { get; set; }
	}
	
	public class UpdateQueueStatusPostBody
	{
		
		/// <summary>
		/// The status of the queue.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EvaluationFormScoringStatus Status { get; set; }
	}
	
	public class UpdateQuickConnectConfigPostBody
	{
		
		/// <summary>
		/// Contains configuration settings for a quick connect.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateQuickConnectConfigPostBodyQuickConnectConfig QuickConnectConfig { get; set; }
	}
	
	public class UpdateQuickConnectConfigPostBodyQuickConnectConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public QuickConnectType QuickConnectType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UserQuickConnectConfig UserConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QueueQuickConnectConfig QueueConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberQuickConnectConfig PhoneConfig { get; set; }
	}
	
	public class UpdateQuickConnectNamePostBody
	{
		
		/// <summary>
		/// The name of the quick connect.
		/// Min length: 1
		/// Max length: 127
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(127)]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the quick connect.
		/// Min length: 0
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string Description { get; set; }
	}
	
	public class UpdateRoutingProfileAgentAvailabilityTimerPostBody
	{
		
		/// <summary>
		/// Whether agents with this routing profile will have their routing order calculated based on <i>time since their last inbound contact</i> or <i>longest idle time</i>. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AgentAvailabilityTimer AgentAvailabilityTimer { get; set; }
	}
	
	public class UpdateRoutingProfileConcurrencyPostBody
	{
		
		/// <summary>
		/// The channels that agents can handle in the Contact Control Panel (CCP).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MediaConcurrency[] MediaConcurrencies { get; set; }
	}
	
	public class UpdateRoutingProfileDefaultOutboundQueuePostBody
	{
		
		/// <summary>
		/// The identifier for the default outbound queue.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DefaultOutboundQueueId { get; set; }
	}
	
	public class UpdateRoutingProfileNamePostBody
	{
		
		/// <summary>
		/// The name of the routing profile. Must not be more than 127 characters.
		/// Min length: 1
		/// Max length: 127
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(127)]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the routing profile. Must not be more than 250 characters.
		/// Min length: 1
		/// Max length: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(250)]
		public string Description { get; set; }
	}
	
	public class UpdateUserHierarchyPostBody
	{
		
		/// <summary>
		/// The identifier of the hierarchy group.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string HierarchyGroupId { get; set; }
	}
	
	public class UpdateUserHierarchyGroupNamePostBody
	{
		
		/// <summary>
		/// The name of the hierarchy group. Must not be more than 100 characters.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	public class UpdateUserIdentityInfoPostBody
	{
		
		/// <summary>
		/// Contains information about the identity of a user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateUserIdentityInfoPostBodyIdentityInfo IdentityInfo { get; set; }
	}
	
	public class UpdateUserIdentityInfoPostBodyIdentityInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FirstName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecondaryEmail { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Mobile { get; set; }
	}
	
	public class UpdateUserPhoneConfigPostBody
	{
		
		/// <summary>
		/// Contains information about the phone configuration settings for a user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateUserPhoneConfigPostBodyPhoneConfig PhoneConfig { get; set; }
	}
	
	public class UpdateUserPhoneConfigPostBodyPhoneConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PhoneType PhoneType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoAccept { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AfterContactWorkTimeLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DeskPhoneNumber { get; set; }
	}
	
	public class UpdateUserRoutingProfilePostBody
	{
		
		/// <summary>
		/// The identifier of the routing profile for the user.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoutingProfileId { get; set; }
	}
	
	public class UpdateUserSecurityProfilesPostBody
	{
		
		/// <summary>
		/// The identifiers of the security profiles for the user.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 10
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public string[] SecurityProfileIds { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

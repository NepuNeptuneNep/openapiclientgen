//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Developer
	{
		
		[System.Runtime.Serialization.DataMember(Name="games_count")]
		public System.Nullable<System.Int32> Games_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_background")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Image_background { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Name { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeveloperSingle
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="games_count")]
		public System.Nullable<System.Int32> Games_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_background")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Image_background { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Name { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Game
	{
		
		[System.Runtime.Serialization.DataMember(Name="added")]
		public System.Nullable<System.Int32> Added { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="added_by_status")]
		public string Added_by_status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="background_image")]
		public string Background_image { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="esrb_rating")]
		public GameEsrb_rating Esrb_rating { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metacritic")]
		public System.Nullable<System.Int32> Metacritic { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="platforms")]
		public GamePlatforms[] GamePlatforms { get; set; }
		
		/// <summary>
		/// in hours
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="playtime")]
		public System.Nullable<System.Int32> Playtime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rating")]
		public double Rating { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rating_top")]
		public System.Nullable<System.Int32> Rating_top { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ratings")]
		public string Ratings { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ratings_count")]
		public System.Nullable<System.Int32> Ratings_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="released")]
		public System.Nullable<System.DateOnly> Released { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reviews_text_count")]
		public string Reviews_text_count { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="suggestions_count")]
		public System.Nullable<System.Int32> Suggestions_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tba")]
		public System.Nullable<System.Boolean> Tba { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="updated")]
		public System.Nullable<System.DateTimeOffset> Updated { get; set; }
	}
	
	public class GameEsrb_rating
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public System.Nullable<GameEsrb_ratingName> Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="slug")]
		public System.Nullable<GameEsrb_ratingSlug> Slug { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GameEsrb_ratingName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Everyone = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Everyone 10+")]
		Everyone_10Plus = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Teen = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Mature = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Adults Only")]
		Adults_Only = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Rating Pending")]
		Rating_Pending = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GameEsrb_ratingSlug
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		everyone = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="everyone-10-plus")]
		everyoneMinus10Minusplus = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		teen = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mature = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="adults-only")]
		adultsMinusonly = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="rating-pending")]
		ratingMinuspending = 5,
	}
	
	public class GamePlatforms
	{
		
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public GamePlatformsPlatform Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="released_at")]
		public string Released_at { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="requirements")]
		public GamePlatformsRequirements Requirements { get; set; }
	}
	
	public class GamePlatformsPlatform
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="slug")]
		public string Slug { get; set; }
	}
	
	public class GamePlatformsRequirements
	{
		
		[System.Runtime.Serialization.DataMember(Name="minimum")]
		public string Minimum { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommended")]
		public string Recommended { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GamePersonList
	{
		
		[System.Runtime.Serialization.DataMember(Name="games_count")]
		public System.Nullable<System.Int32> Games_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_background")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Image_background { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GamePlatformMetacritic
	{
		
		[System.Runtime.Serialization.DataMember(Name="metascore")]
		public System.Nullable<System.Int32> Metascore { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GameSingle
	{
		
		[System.Runtime.Serialization.DataMember(Name="achievements_count")]
		public System.Nullable<System.Int32> Achievements_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="added")]
		public System.Nullable<System.Int32> Added { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="added_by_status")]
		public string Added_by_status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="additions_count")]
		public System.Nullable<System.Int32> Additions_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alternative_names")]
		public string[] Alternative_names { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="background_image")]
		public string Background_image { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="background_image_additional")]
		public string Background_image_additional { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="creators_count")]
		public System.Nullable<System.Int32> Creators_count { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="esrb_rating")]
		public GameSingleEsrb_rating Esrb_rating { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="game_series_count")]
		public System.Nullable<System.Int32> Game_series_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metacritic")]
		public System.Nullable<System.Int32> Metacritic { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metacritic_platforms")]
		public GamePlatformMetacritic[] Metacritic_platforms { get; set; }
		
		/// <summary>
		/// For example "http://www.metacritic.com/game/playstation-4/the-witcher-3-wild-hunt"
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metacritic_url")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Metacritic_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="movies_count")]
		public System.Nullable<System.Int32> Movies_count { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name_original")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name_original { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parent_achievements_count")]
		public string Parent_achievements_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="parents_count")]
		public System.Nullable<System.Int32> Parents_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="platforms")]
		public GameSinglePlatforms[] GameSinglePlatforms { get; set; }
		
		/// <summary>
		/// in hours
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="playtime")]
		public System.Nullable<System.Int32> Playtime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rating")]
		public double Rating { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rating_top")]
		public System.Nullable<System.Int32> Rating_top { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ratings")]
		public string Ratings { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ratings_count")]
		public System.Nullable<System.Int32> Ratings_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reactions")]
		public string Reactions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reddit_count")]
		public System.Nullable<System.Int32> Reddit_count { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reddit_description")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Reddit_description { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reddit_logo")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Reddit_logo { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reddit_name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Reddit_name { get; set; }
		
		/// <summary>
		/// For example "https://www.reddit.com/r/uncharted/" or "uncharted"
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reddit_url")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Reddit_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="released")]
		public System.Nullable<System.DateOnly> Released { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reviews_text_count")]
		public string Reviews_text_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="screenshots_count")]
		public System.Nullable<System.Int32> Screenshots_count { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="suggestions_count")]
		public System.Nullable<System.Int32> Suggestions_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tba")]
		public System.Nullable<System.Boolean> Tba { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="twitch_count")]
		public string Twitch_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="updated")]
		public System.Nullable<System.DateTimeOffset> Updated { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="website")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Website { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="youtube_count")]
		public string Youtube_count { get; set; }
	}
	
	public class GameSingleEsrb_rating
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public System.Nullable<GameSingleEsrb_ratingName> Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="slug")]
		public System.Nullable<GameSingleEsrb_ratingSlug> Slug { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GameSingleEsrb_ratingName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Everyone = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Everyone 10+")]
		Everyone_10Plus = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Teen = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Mature = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Adults Only")]
		Adults_Only = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Rating Pending")]
		Rating_Pending = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GameSingleEsrb_ratingSlug
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		everyone = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="everyone-10-plus")]
		everyoneMinus10Minusplus = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		teen = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mature = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="adults-only")]
		adultsMinusonly = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="rating-pending")]
		ratingMinuspending = 5,
	}
	
	public class GameSinglePlatforms
	{
		
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public GameSinglePlatformsPlatform Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="released_at")]
		public string Released_at { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="requirements")]
		public GameSinglePlatformsRequirements Requirements { get; set; }
	}
	
	public class GameSinglePlatformsPlatform
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="slug")]
		public string Slug { get; set; }
	}
	
	public class GameSinglePlatformsRequirements
	{
		
		[System.Runtime.Serialization.DataMember(Name="minimum")]
		public string Minimum { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommended")]
		public string Recommended { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GameStoreFull
	{
		
		[System.Runtime.Serialization.DataMember(Name="game_id")]
		public string Game_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// Max length: 500
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(500)]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Genre
	{
		
		[System.Runtime.Serialization.DataMember(Name="games_count")]
		public System.Nullable<System.Int32> Games_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_background")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Image_background { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Name { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GenreSingle
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="games_count")]
		public System.Nullable<System.Int32> Games_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_background")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Image_background { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Name { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Movie
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="preview")]
		public string Preview { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParentAchievement
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="percent")]
		public string Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Person
	{
		
		[System.Runtime.Serialization.DataMember(Name="games_count")]
		public System.Nullable<System.Int32> Games_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_background")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Image_background { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PersonSingle
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="games_count")]
		public System.Nullable<System.Int32> Games_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_background")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Image_background { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rating")]
		public string Rating { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rating_top")]
		public System.Nullable<System.Int32> Rating_top { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reviews_count")]
		public System.Nullable<System.Int32> Reviews_count { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="updated")]
		public System.Nullable<System.DateTimeOffset> Updated { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Platform
	{
		
		[System.Runtime.Serialization.DataMember(Name="games_count")]
		public System.Nullable<System.Int32> Games_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="image_background")]
		public string Image_background { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Name { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 32767
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="year_end")]
		[System.ComponentModel.DataAnnotations.Range(0, 32767)]
		public System.Nullable<System.Int32> Year_end { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 32767
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="year_start")]
		[System.ComponentModel.DataAnnotations.Range(0, 32767)]
		public System.Nullable<System.Int32> Year_start { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PlatformParentSingle
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="platforms")]
		public Platform[] Platforms { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PlatformSingle
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="games_count")]
		public System.Nullable<System.Int32> Games_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="image_background")]
		public string Image_background { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Name { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 32767
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="year_end")]
		[System.ComponentModel.DataAnnotations.Range(0, 32767)]
		public System.Nullable<System.Int32> Year_end { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 32767
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="year_start")]
		[System.ComponentModel.DataAnnotations.Range(0, 32767)]
		public System.Nullable<System.Int32> Year_start { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Position
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Publisher
	{
		
		[System.Runtime.Serialization.DataMember(Name="games_count")]
		public System.Nullable<System.Int32> Games_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_background")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Image_background { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Name { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PublisherSingle
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="games_count")]
		public System.Nullable<System.Int32> Games_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_background")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Image_background { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Name { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Reddit
	{
		
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Image { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Text { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Url { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Username { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username_url")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Username_url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScreenShot
	{
		
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Int32> Height { get; set; }
		
		/// <summary>
		/// Set image as hidden or visible.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hidden")]
		public System.Nullable<System.Boolean> Hidden { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// An image file with size up to 20 MB.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Int32> Width { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Store
	{
		
		/// <summary>
		/// Max length: 255
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="games_count")]
		public System.Nullable<System.Int32> Games_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_background")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Image_background { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Name { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StoreSingle
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Max length: 255
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="games_count")]
		public System.Nullable<System.Int32> Games_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_background")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Image_background { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Name { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tag
	{
		
		[System.Runtime.Serialization.DataMember(Name="games_count")]
		public System.Nullable<System.Int32> Games_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_background")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Image_background { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Language { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Name { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagSingle
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="games_count")]
		public System.Nullable<System.Int32> Games_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_background")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Image_background { get; set; }
		
		/// <summary>
		/// Required
		/// Min length: 1
		/// Max length: 100
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		public string Name { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// Pattern: ^[-a-zA-Z0-9_]+$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="slug")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[-a-zA-Z0-9_]+$")]
		public string Slug { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Twitch
	{
		
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="external_id")]
		public System.Nullable<System.Int32> External_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Language { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="published")]
		public System.Nullable<System.DateTimeOffset> Published { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnail")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Thumbnail { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="view_count")]
		public System.Nullable<System.Int32> View_count { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Youtube
	{
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channel_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Channel_id { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channel_title")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Channel_title { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="comments_count")]
		public System.Nullable<System.Int32> Comments_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="created")]
		public System.Nullable<System.DateTimeOffset> Created { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dislike_count")]
		public System.Nullable<System.Int32> Dislike_count { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="external_id")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string External_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="favorite_count")]
		public System.Nullable<System.Int32> Favorite_count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="like_count")]
		public System.Nullable<System.Int32> Like_count { get; set; }
		
		/// <summary>
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="thumbnails")]
		public string Thumbnails { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="view_count")]
		public System.Nullable<System.Int32> View_count { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Get a list of creator positions (jobs).
		/// Creator_roles_list creator-roles
		/// </summary>
		/// <param name="page">A page number within the paginated result set.</param>
		/// <param name="page_size">Number of results to return per page.</param>
		public async Task<Creator_roles_listReturn> Creator_roles_listAsync(int page, int page_size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "creator-roles?page="+page+"&page_size="+page_size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Creator_roles_listReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of game creators.
		/// Creators_list creators
		/// </summary>
		/// <param name="page">A page number within the paginated result set.</param>
		/// <param name="page_size">Number of results to return per page.</param>
		public async Task<Creators_listReturn> Creators_listAsync(int page, int page_size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "creators?page="+page+"&page_size="+page_size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Creators_listReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get details of the creator.
		/// Creators_read creators/{id}
		/// </summary>
		public async Task<PersonSingle> Creators_readAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "creators/"+ (id==null? "" : System.Uri.EscapeDataString(id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<PersonSingle>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of game developers.
		/// Developers_list developers
		/// </summary>
		/// <param name="page">A page number within the paginated result set.</param>
		/// <param name="page_size">Number of results to return per page.</param>
		public async Task<Developers_listReturn> Developers_listAsync(int page, int page_size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "developers?page="+page+"&page_size="+page_size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Developers_listReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get details of the developer.
		/// Developers_read developers/{id}
		/// </summary>
		public async Task<DeveloperSingle> Developers_readAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "developers/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeveloperSingle>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of games.
		/// Games_list games
		/// </summary>
		/// <param name="page">A page number within the paginated result set.</param>
		/// <param name="page_size">Number of results to return per page.</param>
		/// <param name="search">Search query.</param>
		/// <param name="search_precise">Disable fuzziness for the search query.</param>
		/// <param name="search_exact">Mark the search query as exact.</param>
		/// <param name="parent_platforms">Filter by parent platforms, for example: `1,2,3`.</param>
		/// <param name="platforms">Filter by platforms, for example: `4,5`.</param>
		/// <param name="stores">Filter by stores, for example: `5,6`.</param>
		/// <param name="developers">Filter by developers, for example: `1612,18893` or `valve-software,feral-interactive`.</param>
		/// <param name="publishers">Filter by publishers, for example: `354,20987` or `electronic-arts,microsoft-studios`.</param>
		/// <param name="genres">Filter by genres, for example: `4,51` or `action,indie`.</param>
		/// <param name="tags">Filter by tags, for example: `31,7` or `singleplayer,multiplayer`.</param>
		/// <param name="creators">Filter by creators, for example: `78,28` or `cris-velasco,mike-morasky`.</param>
		/// <param name="dates">Filter by a release date, for example: `2010-01-01,2018-12-31.1960-01-01,1969-12-31`.</param>
		/// <param name="updated">Filter by an update date, for example: `2020-12-01,2020-12-31`.</param>
		/// <param name="platforms_count">Filter by platforms count, for example: `1`.</param>
		/// <param name="metacritic">Filter by a metacritic rating, for example: `80,100`.</param>
		/// <param name="exclude_collection">Exclude games from a particular collection, for example: `123`.</param>
		/// <param name="exclude_additions">Exclude additions.</param>
		/// <param name="exclude_parents">Exclude games which have additions.</param>
		/// <param name="exclude_game_series">Exclude games which included in a game series.</param>
		/// <param name="exclude_stores">Exclude stores, for example: `5,6`.</param>
		/// <param name="ordering">Available fields: `name`, `released`, `added`, `created`, `updated`, `rating`, `metacritic`. You can reverse the sort order adding a hyphen, for example: `-released`.</param>
		public async Task<Games_listReturn> Games_listAsync(
					int page, 
					int page_size, 
					string search, 
					bool search_precise, 
					bool search_exact, 
					string parent_platforms, 
					string platforms, 
					string stores, 
					string developers, 
					string publishers, 
					string genres, 
					string tags, 
					string creators, 
					string dates, 
					string updated, 
					int platforms_count, 
					string metacritic, 
					int exclude_collection, 
					bool exclude_additions, 
					bool exclude_parents, 
					bool exclude_game_series, 
					string exclude_stores, 
					string ordering, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "games?page="+page+"&page_size="+page_size+"&search=" + (search==null? "" : System.Uri.EscapeDataString(search))+"&search_precise="+search_precise+"&search_exact="+search_exact+"&parent_platforms=" + (parent_platforms==null? "" : System.Uri.EscapeDataString(parent_platforms))+"&platforms=" + (platforms==null? "" : System.Uri.EscapeDataString(platforms))+"&stores=" + (stores==null? "" : System.Uri.EscapeDataString(stores))+"&developers=" + (developers==null? "" : System.Uri.EscapeDataString(developers))+"&publishers=" + (publishers==null? "" : System.Uri.EscapeDataString(publishers))+"&genres=" + (genres==null? "" : System.Uri.EscapeDataString(genres))+"&tags=" + (tags==null? "" : System.Uri.EscapeDataString(tags))+"&creators=" + (creators==null? "" : System.Uri.EscapeDataString(creators))+"&dates=" + (dates==null? "" : System.Uri.EscapeDataString(dates))+"&updated=" + (updated==null? "" : System.Uri.EscapeDataString(updated))+"&platforms_count="+platforms_count+"&metacritic=" + (metacritic==null? "" : System.Uri.EscapeDataString(metacritic))+"&exclude_collection="+exclude_collection+"&exclude_additions="+exclude_additions+"&exclude_parents="+exclude_parents+"&exclude_game_series="+exclude_game_series+"&exclude_stores=" + (exclude_stores==null? "" : System.Uri.EscapeDataString(exclude_stores))+"&ordering=" + (ordering==null? "" : System.Uri.EscapeDataString(ordering));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Games_listReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of DLC's for the game, GOTY and other editions, companion apps, etc.
		/// Games_additions_list games/{game_pk}/additions
		/// </summary>
		/// <param name="page">A page number within the paginated result set.</param>
		/// <param name="page_size">Number of results to return per page.</param>
		public async Task<Games_additions_listReturn> Games_additions_listAsync(int page, int page_size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "games/{game_pk}/additions?page="+page+"&page_size="+page_size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Games_additions_listReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of individual creators that were part of the development team.
		/// Games_development_team_list games/{game_pk}/development-team
		/// </summary>
		/// <param name="ordering">Which field to use when ordering the results.</param>
		/// <param name="page">A page number within the paginated result set.</param>
		/// <param name="page_size">Number of results to return per page.</param>
		public async Task<Games_development_team_listReturn> Games_development_team_listAsync(string ordering, int page, int page_size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "games/{game_pk}/development-team?ordering=" + (ordering==null? "" : System.Uri.EscapeDataString(ordering))+"&page="+page+"&page_size="+page_size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Games_development_team_listReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of games that are part of the same series.
		/// Games_game_series_list games/{game_pk}/game-series
		/// </summary>
		/// <param name="page">A page number within the paginated result set.</param>
		/// <param name="page_size">Number of results to return per page.</param>
		public async Task<Games_game_series_listReturn> Games_game_series_listAsync(int page, int page_size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "games/{game_pk}/game-series?page="+page+"&page_size="+page_size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Games_game_series_listReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of parent games for DLC's and editions.
		/// Games_parent_games_list games/{game_pk}/parent-games
		/// </summary>
		/// <param name="page">A page number within the paginated result set.</param>
		/// <param name="page_size">Number of results to return per page.</param>
		public async Task<Games_parent_games_listReturn> Games_parent_games_listAsync(int page, int page_size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "games/{game_pk}/parent-games?page="+page+"&page_size="+page_size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Games_parent_games_listReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get screenshots for the game.
		/// Games_screenshots_list games/{game_pk}/screenshots
		/// </summary>
		/// <param name="ordering">Which field to use when ordering the results.</param>
		/// <param name="page">A page number within the paginated result set.</param>
		/// <param name="page_size">Number of results to return per page.</param>
		public async Task<Games_screenshots_listReturn> Games_screenshots_listAsync(string ordering, int page, int page_size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "games/{game_pk}/screenshots?ordering=" + (ordering==null? "" : System.Uri.EscapeDataString(ordering))+"&page="+page+"&page_size="+page_size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Games_screenshots_listReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get links to the stores that sell the game.
		/// Games_stores_list games/{game_pk}/stores
		/// </summary>
		/// <param name="ordering">Which field to use when ordering the results.</param>
		/// <param name="page">A page number within the paginated result set.</param>
		/// <param name="page_size">Number of results to return per page.</param>
		public async Task<Games_stores_listReturn> Games_stores_listAsync(string ordering, int page, int page_size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "games/{game_pk}/stores?ordering=" + (ordering==null? "" : System.Uri.EscapeDataString(ordering))+"&page="+page+"&page_size="+page_size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Games_stores_listReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get details of the game.
		/// Games_read games/{id}
		/// </summary>
		/// <param name="id">An ID or a slug identifying this Game.</param>
		public async Task<GameSingle> Games_readAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "games/"+ (id==null? "" : System.Uri.EscapeDataString(id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GameSingle>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of game achievements.
		/// Games_achievements_read games/{id}/achievements
		/// </summary>
		/// <param name="id">An ID or a slug identifying this Game.</param>
		public async Task<ParentAchievement> Games_achievements_readAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "games/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"/achievements";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ParentAchievement>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of game trailers.
		/// Games_movies_read games/{id}/movies
		/// </summary>
		/// <param name="id">An ID or a slug identifying this Game.</param>
		public async Task<Movie> Games_movies_readAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "games/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"/movies";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Movie>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of most recent posts from the game's subreddit.
		/// Games_reddit_read games/{id}/reddit
		/// </summary>
		/// <param name="id">An ID or a slug identifying this Game.</param>
		public async Task<Reddit> Games_reddit_readAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "games/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"/reddit";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Reddit>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of visually similar games, available only for business and enterprise API users.
		/// Games_suggested_read games/{id}/suggested
		/// </summary>
		/// <param name="id">An ID or a slug identifying this Game.</param>
		public async Task<GameSingle> Games_suggested_readAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "games/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"/suggested";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GameSingle>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get streams on Twitch associated with the game, available only for business and enterprise API users.
		/// Games_twitch_read games/{id}/twitch
		/// </summary>
		/// <param name="id">An ID or a slug identifying this Game.</param>
		public async Task<Twitch> Games_twitch_readAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "games/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"/twitch";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Twitch>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get videos from YouTube associated with the game, available only for business and enterprise API users.
		/// Games_youtube_read games/{id}/youtube
		/// </summary>
		/// <param name="id">An ID or a slug identifying this Game.</param>
		public async Task<Youtube> Games_youtube_readAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "games/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"/youtube";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Youtube>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of video game genres.
		/// Genres_list genres
		/// </summary>
		/// <param name="ordering">Which field to use when ordering the results.</param>
		/// <param name="page">A page number within the paginated result set.</param>
		/// <param name="page_size">Number of results to return per page.</param>
		public async Task<Genres_listReturn> Genres_listAsync(string ordering, int page, int page_size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "genres?ordering=" + (ordering==null? "" : System.Uri.EscapeDataString(ordering))+"&page="+page+"&page_size="+page_size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Genres_listReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get details of the genre.
		/// Genres_read genres/{id}
		/// </summary>
		public async Task<GenreSingle> Genres_readAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "genres/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GenreSingle>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of video game platforms.
		/// Platforms_list platforms
		/// </summary>
		/// <param name="ordering">Which field to use when ordering the results.</param>
		/// <param name="page">A page number within the paginated result set.</param>
		/// <param name="page_size">Number of results to return per page.</param>
		public async Task<Platforms_listReturn> Platforms_listAsync(string ordering, int page, int page_size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "platforms?ordering=" + (ordering==null? "" : System.Uri.EscapeDataString(ordering))+"&page="+page+"&page_size="+page_size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Platforms_listReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of parent platforms.
		/// For instance, for PS2 and PS4 the “parent platform” is PlayStation.
		/// Platforms_lists_parents_list platforms/lists/parents
		/// </summary>
		/// <param name="ordering">Which field to use when ordering the results.</param>
		/// <param name="page">A page number within the paginated result set.</param>
		/// <param name="page_size">Number of results to return per page.</param>
		public async Task<Platforms_lists_parents_listReturn> Platforms_lists_parents_listAsync(string ordering, int page, int page_size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "platforms/lists/parents?ordering=" + (ordering==null? "" : System.Uri.EscapeDataString(ordering))+"&page="+page+"&page_size="+page_size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Platforms_lists_parents_listReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get details of the platform.
		/// Platforms_read platforms/{id}
		/// </summary>
		public async Task<PlatformSingle> Platforms_readAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "platforms/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<PlatformSingle>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of video game publishers.
		/// Publishers_list publishers
		/// </summary>
		/// <param name="page">A page number within the paginated result set.</param>
		/// <param name="page_size">Number of results to return per page.</param>
		public async Task<Publishers_listReturn> Publishers_listAsync(int page, int page_size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "publishers?page="+page+"&page_size="+page_size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Publishers_listReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get details of the publisher.
		/// Publishers_read publishers/{id}
		/// </summary>
		public async Task<PublisherSingle> Publishers_readAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "publishers/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<PublisherSingle>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of video game storefronts.
		/// Stores_list stores
		/// </summary>
		/// <param name="ordering">Which field to use when ordering the results.</param>
		/// <param name="page">A page number within the paginated result set.</param>
		/// <param name="page_size">Number of results to return per page.</param>
		public async Task<Stores_listReturn> Stores_listAsync(string ordering, int page, int page_size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "stores?ordering=" + (ordering==null? "" : System.Uri.EscapeDataString(ordering))+"&page="+page+"&page_size="+page_size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Stores_listReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get details of the store.
		/// Stores_read stores/{id}
		/// </summary>
		public async Task<StoreSingle> Stores_readAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "stores/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<StoreSingle>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a list of tags.
		/// Tags_list tags
		/// </summary>
		/// <param name="page">A page number within the paginated result set.</param>
		/// <param name="page_size">Number of results to return per page.</param>
		public async Task<Tags_listReturn> Tags_listAsync(int page, int page_size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags?page="+page+"&page_size="+page_size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Tags_listReturn>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get details of the tag.
		/// Tags_read tags/{id}
		/// </summary>
		public async Task<TagSingle> Tags_readAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<TagSingle>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class Creator_roles_listReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public int Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="results")]
		public Position[] Results { get; set; }
	}
	
	public class Creators_listReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public int Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="results")]
		public Person[] Results { get; set; }
	}
	
	public class Developers_listReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public int Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="results")]
		public Developer[] Results { get; set; }
	}
	
	public class Games_listReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public int Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="results")]
		public Game[] Results { get; set; }
	}
	
	public class Games_additions_listReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public int Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="results")]
		public Game[] Results { get; set; }
	}
	
	public class Games_development_team_listReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public int Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="results")]
		public GamePersonList[] Results { get; set; }
	}
	
	public class Games_game_series_listReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public int Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="results")]
		public Game[] Results { get; set; }
	}
	
	public class Games_parent_games_listReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public int Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="results")]
		public Game[] Results { get; set; }
	}
	
	public class Games_screenshots_listReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public int Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="results")]
		public ScreenShot[] Results { get; set; }
	}
	
	public class Games_stores_listReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public int Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="results")]
		public GameStoreFull[] Results { get; set; }
	}
	
	public class Genres_listReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public int Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="results")]
		public Genre[] Results { get; set; }
	}
	
	public class Platforms_listReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public int Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="results")]
		public Platform[] Results { get; set; }
	}
	
	public class Platforms_lists_parents_listReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public int Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="results")]
		public PlatformParentSingle[] Results { get; set; }
	}
	
	public class Publishers_listReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public int Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="results")]
		public Publisher[] Results { get; set; }
	}
	
	public class Stores_listReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public int Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="results")]
		public Store[] Results { get; set; }
	}
	
	public class Tags_listReturn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public int Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="results")]
		public Tag[] Results { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

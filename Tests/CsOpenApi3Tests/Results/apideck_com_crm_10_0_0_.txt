//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActivitiesFilter
	{
		
		[System.Runtime.Serialization.DataMember(Name="updated_since")]
		public System.Nullable<System.DateTimeOffset> Updated_since { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Activity
	{
		
		/// <summary>
		/// The account related to the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The date of the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activity_date")]
		public string Activity_date { get; set; }
		
		/// <summary>
		/// The date and time of the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activity_datetime")]
		public string Activity_datetime { get; set; }
		
		/// <summary>
		/// Whether the Activity is an all day event or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="all_day_event")]
		public System.Nullable<System.Boolean> All_day_event { get; set; }
		
		/// <summary>
		/// Whether the activity is archived or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archived")]
		public System.Nullable<System.Boolean> Archived { get; set; }
		
		/// <summary>
		/// The asset related to the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="asset_id")]
		public string Asset_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="attendees")]
		public ActivityAttendee[] Attendees { get; set; }
		
		/// <summary>
		/// The campaign related to the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The case related to the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="case_id")]
		public string Case_id { get; set; }
		
		/// <summary>
		/// Whether the activity is a child of another activity or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="child")]
		public System.Nullable<System.Boolean> Child { get; set; }
		
		/// <summary>
		/// The company related to the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_id")]
		public string Company_id { get; set; }
		
		/// <summary>
		/// The contact related to the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// The contract related to the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contract_id")]
		public string Contract_id { get; set; }
		
		/// <summary>
		/// The date and time when the activity was created
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public string Created_at { get; set; }
		
		/// <summary>
		/// The user who created the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// Custom fields of the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_fields")]
		public CustomField[] Custom_fields { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// The custom object related to the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_object_id")]
		public string Custom_object_id { get; set; }
		
		/// <summary>
		/// Whether the activity is deleted or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleted")]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		/// <summary>
		/// A description of the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Whether the Activity is done or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="done")]
		public System.Nullable<System.Boolean> Done { get; set; }
		
		/// <summary>
		/// The third-party API ID of original entity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downstream_id")]
		public string Downstream_id { get; set; }
		
		/// <summary>
		/// The duration of the activity in minutes
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duration_minutes")]
		public System.Nullable<System.Int32> Duration_minutes { get; set; }
		
		/// <summary>
		/// The duration of the activity in seconds
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duration_seconds")]
		[System.ComponentModel.DataAnnotations.Range(0, System.Int32.MaxValue)]
		public System.Nullable<System.Int32> Duration_seconds { get; set; }
		
		/// <summary>
		/// The end date of the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_date")]
		public string End_date { get; set; }
		
		/// <summary>
		/// The end date and time of the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="end_datetime")]
		public string End_datetime { get; set; }
		
		/// <summary>
		/// The sub type of the group event
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="event_sub_type")]
		public string Event_sub_type { get; set; }
		
		/// <summary>
		/// Whether the Activity is a group event or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="group_event")]
		public System.Nullable<System.Boolean> Group_event { get; set; }
		
		/// <summary>
		/// The type of the group event
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="group_event_type")]
		public string Group_event_type { get; set; }
		
		/// <summary>
		/// The unique identifier of the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The lead related to the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lead_id")]
		public string Lead_id { get; set; }
		
		/// <summary>
		/// The location of the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="location_address")]
		public Address Location_address { get; set; }
		
		/// <summary>
		/// An internal note about the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// The opportunity related to the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opportunity_id")]
		public string Opportunity_id { get; set; }
		
		/// <summary>
		/// The owner of the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="owner_id")]
		public string Owner_id { get; set; }
		
		/// <summary>
		/// Whether the Activity is private or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="private")]
		public System.Nullable<System.Boolean> Private { get; set; }
		
		/// <summary>
		/// The product related to the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// Whether the activity is recurrent or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recurrent")]
		public System.Nullable<System.Boolean> Recurrent { get; set; }
		
		/// <summary>
		/// The date and time of the reminder
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reminder_datetime")]
		public string Reminder_datetime { get; set; }
		
		/// <summary>
		/// Whether the reminder is set or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reminder_set")]
		public System.Nullable<System.Boolean> Reminder_set { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="show_as")]
		public System.Nullable<ActivityShow_as> Show_as { get; set; }
		
		/// <summary>
		/// The solution related to the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="solution_id")]
		public string Solution_id { get; set; }
		
		/// <summary>
		/// The start date and time of the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_datetime")]
		public string Start_datetime { get; set; }
		
		/// <summary>
		/// The title of the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The type of the activity
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<ActivityType> Type { get; set; }
		
		/// <summary>
		/// The date and time when the activity was last updated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public string Updated_at { get; set; }
		
		/// <summary>
		/// The user who last updated the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
		
		/// <summary>
		/// The user related to the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user_id")]
		public string User_id { get; set; }
		
		/// <summary>
		/// The ID of the video conference
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="video_conference_id")]
		public string Video_conference_id { get; set; }
		
		/// <summary>
		/// The URL of the video conference
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="video_conference_url")]
		public string Video_conference_url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActivityAttendee
	{
		
		/// <summary>
		/// The identifier for a related contact
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// The time the attendee was created (ISO 8601)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// Email address of the attendee
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// First name of the attendee
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// Unique identifier for the attendee
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether the attendee is the organizer of the activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_organizer")]
		public System.Nullable<System.Boolean> Is_organizer { get; set; }
		
		/// <summary>
		/// Last name of the attendee
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// Middle name of the attendee
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="middle_name")]
		public string Middle_name { get; set; }
		
		/// <summary>
		/// Full name of the attendee
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Prefix of the attendee
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prefix")]
		public string Prefix { get; set; }
		
		/// <summary>
		/// Status of the attendee
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<ActivityAttendeeStatus> Status { get; set; }
		
		/// <summary>
		/// Suffix of the attendee
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suffix")]
		public string Suffix { get; set; }
		
		/// <summary>
		/// The last time the attendee was updated (ISO 8601)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The identifier for a related user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user_id")]
		public string User_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ActivityAttendeeStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		accepted = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tentative = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		declined = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomField
	{
		
		/// <summary>
		/// More information about the custom field
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Unique identifier for the custom field.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Name of the custom field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// When custom mappings are configured on the resource, the result is included here.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomMappings
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Address
	{
		
		/// <summary>
		/// Name of city.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// Name of the contact person at the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_name")]
		public string Contact_name { get; set; }
		
		/// <summary>
		/// country code according to ISO 3166-1 alpha-2.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// Address field that holds a sublocality, such as a county
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="county")]
		public string County { get; set; }
		
		/// <summary>
		/// Email address of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Fax number of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fax")]
		public string Fax { get; set; }
		
		/// <summary>
		/// Unique identifier for the address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Latitude of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public string Latitude { get; set; }
		
		/// <summary>
		/// Line 1 of the address e.g. number, street, suite, apt #, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line1")]
		public string Line1 { get; set; }
		
		/// <summary>
		/// Line 2 of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line2")]
		public string Line2 { get; set; }
		
		/// <summary>
		/// Line 3 of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line3")]
		public string Line3 { get; set; }
		
		/// <summary>
		/// Line 4 of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="line4")]
		public string Line4 { get; set; }
		
		/// <summary>
		/// Longitude of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public string Longitude { get; set; }
		
		/// <summary>
		/// The name of the address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Additional notes
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
		
		/// <summary>
		/// Phone number of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_number")]
		public string Phone_number { get; set; }
		
		/// <summary>
		/// Zip code or equivalent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="row_version")]
		public string Row_version { get; set; }
		
		/// <summary>
		/// Salutation of the contact person at the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salutation")]
		public string Salutation { get; set; }
		
		/// <summary>
		/// Name of state
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// Street number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="street_number")]
		public string Street_number { get; set; }
		
		/// <summary>
		/// The address string. Some APIs don't provide structured address data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="string")]
		public string String { get; set; }
		
		/// <summary>
		/// The type of address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<AddressType> Type { get; set; }
		
		/// <summary>
		/// Website of the address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="website")]
		public string Website { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AddressType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		primary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		secondary = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		home = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		office = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		shipping = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		billing = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ActivityShow_as
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		free = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		busy = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ActivityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		call = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		meeting = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		email = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		note = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		task = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deadline = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="send-letter")]
		sendMinusletter = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="send-quote")]
		sendMinusquote = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BadRequestResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BankAccount
	{
		
		/// <summary>
		/// The name which you used in opening your bank account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_name")]
		public string Account_name { get; set; }
		
		/// <summary>
		/// A bank account number is a number that is tied to your bank account. If you have several bank accounts, such as personal, joint, business (and so on), each account will have a different account number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_number")]
		public string Account_number { get; set; }
		
		/// <summary>
		/// The type of bank account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_type")]
		public System.Nullable<BankAccountAccount_type> Account_type { get; set; }
		
		/// <summary>
		/// A bank code is a code assigned by a central bank, a bank supervisory body or a Bankers Association in a country to all its licensed member banks or financial institutions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_code")]
		public string Bank_code { get; set; }
		
		/// <summary>
		/// The name of the bank
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bank_name")]
		public string Bank_name { get; set; }
		
		/// <summary>
		/// The Bank Identifier Code (BIC).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bic")]
		public string Bic { get; set; }
		
		/// <summary>
		/// A branch identifier is a unique identifier for a branch of a bank or financial institution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="branch_identifier")]
		public string Branch_identifier { get; set; }
		
		/// <summary>
		/// A BSB is a 6 digit numeric code used for identifying the branch of an Australian or New Zealand bank or financial institution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bsb_number")]
		public string Bsb_number { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public System.Nullable<BankAccountCurrency> Currency { get; set; }
		
		/// <summary>
		/// The International Bank Account Number (IBAN).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iban")]
		public string Iban { get; set; }
		
		/// <summary>
		/// A routing number is a nine-digit code used to identify a financial institution in the United States.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routing_number")]
		public string Routing_number { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BankAccountAccount_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bank_account = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		credit_card = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BankAccountCurrency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN_CURRENCY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AFN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AMD = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANG = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AOA = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUD = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWG = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AZN = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BAM = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BBD = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BDT = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BGN = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BHD = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIF = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BMD = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BND = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOB = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOV = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BRL = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BSD = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BTN = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BWP = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BYR = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BZD = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAD = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CDF = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHE = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHF = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHW = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLF = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLP = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CNY = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COP = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COU = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRC = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUC = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUP = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CVE = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CZK = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DJF = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DKK = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOP = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DZD = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EGP = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERN = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ETB = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EUR = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FJD = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FKP = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GBP = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GEL = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GHS = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GIP = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GMD = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GNF = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GTQ = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GYD = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HKD = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HNL = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HRK = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTG = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HUF = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IDR = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ILS = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INR = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IQD = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IRR = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ISK = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JMD = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JOD = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JPY = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KES = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KGS = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KHR = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KMF = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KPW = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KRW = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KWD = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KYD = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KZT = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAK = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LBP = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LKR = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LRD = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LSL = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LTL = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LVL = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LYD = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAD = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MDL = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MGA = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MKD = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MMK = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MNT = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOP = 97,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MRO = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MUR = 99,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MVR = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MWK = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MXN = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MXV = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MYR = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MZN = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NAD = 106,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NGN = 107,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NIO = 108,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOK = 109,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NPR = 110,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NZD = 111,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OMR = 112,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAB = 113,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PEN = 114,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PGK = 115,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PHP = 116,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PKR = 117,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLN = 118,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PYG = 119,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QAR = 120,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RON = 121,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RSD = 122,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUB = 123,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RWF = 124,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAR = 125,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SBD = 126,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCR = 127,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SDG = 128,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEK = 129,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SGD = 130,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHP = 131,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SLL = 132,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOS = 133,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SRD = 134,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSP = 135,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STD = 136,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SVC = 137,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYP = 138,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SZL = 139,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THB = 140,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TJS = 141,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TMT = 142,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TND = 143,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOP = 144,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRC = 145,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRY = 146,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TTD = 147,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TWD = 148,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TZS = 149,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UAH = 150,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UGX = 151,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USD = 152,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USN = 153,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USS = 154,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UYI = 155,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UYU = 156,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UZS = 157,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VEF = 158,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VND = 159,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VUV = 160,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WST = 161,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XAF = 162,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XAG = 163,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XAU = 164,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBA = 165,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBB = 166,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBC = 167,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBD = 168,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XCD = 169,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XDR = 170,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XOF = 171,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XPD = 172,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XPF = 173,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XPT = 174,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XTS = 175,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XXX = 176,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YER = 177,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZAR = 178,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZMK = 179,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZMW = 180,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BTC = 181,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ETH = 182,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CompaniesFilter
	{
		
		/// <summary>
		/// Name of the company to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CompaniesSort
	{
		
		/// <summary>
		/// The field on which to sort the Companies
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="by")]
		public System.Nullable<CompaniesSortBy> By { get; set; }
		
		/// <summary>
		/// The direction in which to sort the results
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public System.Nullable<CompaniesSortDirection> Direction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CompaniesSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		created_at = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		updated_at = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		name = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CompaniesSortDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		asc = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		desc = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Company
	{
		
		/// <summary>
		/// An ABN Branch (also known as a GST Branch) is used if part of your business needs to account for GST separately from its parent entity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abn_branch")]
		public string Abn_branch { get; set; }
		
		/// <summary>
		/// An ABN is necessary for operating a business, while a TFN (Tax File Number) is required for any person working in Australia.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abn_or_tfn")]
		public string Abn_or_tfn { get; set; }
		
		/// <summary>
		/// The Australian Company Number (ACN) is a nine digit number with the last digit being a check digit calculated using a modified modulus 10 calculation. ASIC has adopted a convention of always printing and displaying the ACN in the format XXX XXX XXX; three blocks of three characters, each block separated by a blank.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="acn")]
		public string Acn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public Address[] Addresses { get; set; }
		
		/// <summary>
		/// The annual revenue of the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annual_revenue")]
		public string Annual_revenue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bank_accounts")]
		public BankAccount[] Bank_accounts { get; set; }
		
		/// <summary>
		/// The date of birth of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="birthday")]
		public System.Nullable<System.DateOnly> Birthday { get; set; }
		
		/// <summary>
		/// Creation date
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// Created by user ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="custom_fields")]
		public CustomField[] Custom_fields { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// Whether the company is deleted or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleted")]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		/// <summary>
		/// A description of the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="emails")]
		public Email[] Emails { get; set; }
		
		/// <summary>
		/// The fax number of the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fax")]
		public string Fax { get; set; }
		
		/// <summary>
		/// The first name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// Unique identifier for the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The Image URL of the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		/// <summary>
		/// The industry represents the type of business the company is in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="industry")]
		public string Industry { get; set; }
		
		/// <summary>
		/// Number of interactions
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interaction_count")]
		public System.Nullable<System.Int32> Interaction_count { get; set; }
		
		/// <summary>
		/// Last activity date
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_activity_at")]
		public System.Nullable<System.DateTimeOffset> Last_activity_at { get; set; }
		
		/// <summary>
		/// The last name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// Name of the company
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// Number of employees
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="number_of_employees")]
		public string Number_of_employees { get; set; }
		
		/// <summary>
		/// Owner ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="owner_id")]
		public string Owner_id { get; set; }
		
		/// <summary>
		/// The ownership indicates the type of ownership of the company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ownership")]
		public string Ownership { get; set; }
		
		/// <summary>
		/// Parent ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_id")]
		public string Parent_id { get; set; }
		
		/// <summary>
		/// A payee number is a unique number that identifies a payee for tax purposes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payee_number")]
		public string Payee_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_numbers")]
		public PhoneNumber[] Phone_numbers { get; set; }
		
		/// <summary>
		/// Whether the company is read-only or not
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="read_only")]
		public System.Nullable<System.Boolean> Read_only { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="row_type")]
		public CompanyRow_type Row_type { get; set; }
		
		/// <summary>
		/// A sales tax number is a unique number that identifies a company for tax purposes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sales_tax_number")]
		public string Sales_tax_number { get; set; }
		
		/// <summary>
		/// A formal salutation for the person. For example, 'Mr', 'Mrs'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salutation")]
		public string Salutation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="social_links")]
		public SocialLink[] Social_links { get; set; }
		
		/// <summary>
		/// The status of the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string[] Tags { get; set; }
		
		/// <summary>
		/// Last updated date
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// Updated by user ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
		
		/// <summary>
		/// The VAT number of the company
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vat_number")]
		public string Vat_number { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="websites")]
		public Website[] Websites { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Email
	{
		
		/// <summary>
		/// Email address
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Email1 { get; set; }
		
		/// <summary>
		/// Unique identifier for the email address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Email type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<EmailType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EmailType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		primary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		secondary = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		work = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		personal = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		billing = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhoneNumber
	{
		
		/// <summary>
		/// The area code of the phone number, e.g. 323
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="area_code")]
		public string Area_code { get; set; }
		
		/// <summary>
		/// The country code of the phone number, e.g. +1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The extension of the phone number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="extension")]
		public string Extension { get; set; }
		
		/// <summary>
		/// Unique identifier of the phone number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The phone number
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="number")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Number { get; set; }
		
		/// <summary>
		/// The type of phone number
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<PhoneNumberType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PhoneNumberType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		primary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		secondary = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		home = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		work = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		office = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mobile = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		assistant = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fax = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="direct-dial-in")]
		directMinusdialMinusin = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		personal = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 10,
	}
	
	public class CompanyRow_type
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SocialLink
	{
		
		/// <summary>
		/// Unique identifier of the social link
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Type of the social link, e.g. twitter
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// URL of the social link, e.g. https://www.twitter.com/apideck
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Website
	{
		
		/// <summary>
		/// Unique identifier for the website
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The type of website
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<WebsiteType> Type { get; set; }
		
		/// <summary>
		/// The website URL
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WebsiteType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		primary = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		secondary = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		work = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		personal = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		other = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Contact
	{
		
		/// <summary>
		/// The active status of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="active")]
		public System.Nullable<System.Boolean> Active { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public Address[] Addresses { get; set; }
		
		/// <summary>
		/// The birthday of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="birthday")]
		public string Birthday { get; set; }
		
		/// <summary>
		/// The company the contact is associated with.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_id")]
		public string Company_id { get; set; }
		
		/// <summary>
		/// The name of the company the contact is associated with.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		/// <summary>
		/// The creation date of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The current balance of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current_balance")]
		public System.Nullable<System.Double> Current_balance { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="custom_fields")]
		public CustomField[] Custom_fields { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// The department of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="department")]
		public string Department { get; set; }
		
		/// <summary>
		/// The description of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="email_domain")]
		public string Email_domain { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="emails")]
		public Email[] Emails { get; set; }
		
		/// <summary>
		/// The fax number of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fax")]
		public string Fax { get; set; }
		
		/// <summary>
		/// The first call date of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_call_at")]
		public System.Nullable<System.DateTimeOffset> First_call_at { get; set; }
		
		/// <summary>
		/// The first email date of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_email_at")]
		public System.Nullable<System.DateTimeOffset> First_email_at { get; set; }
		
		/// <summary>
		/// The first name of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// The gender of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gender")]
		public System.Nullable<ContactGender> Gender { get; set; }
		
		/// <summary>
		/// Unique identifier for the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		/// <summary>
		/// language code according to ISO 639-1. For the United States - EN
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The last activity date of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_activity_at")]
		public System.Nullable<System.DateTimeOffset> Last_activity_at { get; set; }
		
		/// <summary>
		/// The last name of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The lead the contact is associated with.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lead_id")]
		public string Lead_id { get; set; }
		
		/// <summary>
		/// The lead source of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lead_source")]
		public string Lead_source { get; set; }
		
		/// <summary>
		/// The middle name of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="middle_name")]
		public string Middle_name { get; set; }
		
		/// <summary>
		/// Full name of the contact.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// The owner of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="owner_id")]
		public string Owner_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_numbers")]
		public PhoneNumber[] Phone_numbers { get; set; }
		
		/// <summary>
		/// The URL of the photo of a person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="photo_url")]
		public string Photo_url { get; set; }
		
		/// <summary>
		/// The prefix of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prefix")]
		public string Prefix { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="social_links")]
		public SocialLink[] Social_links { get; set; }
		
		/// <summary>
		/// The status of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// The suffix of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suffix")]
		public string Suffix { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string[] Tags { get; set; }
		
		/// <summary>
		/// The job title of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The type of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<ContactType> Type { get; set; }
		
		/// <summary>
		/// The last update date of the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="websites")]
		public Website[] Websites { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContactGender
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		male = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		female = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unisex = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContactType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		customer = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		supplier = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		employee = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		personal = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContactsFilter
	{
		
		/// <summary>
		/// Unique identifier for the associated company of the contact to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_id")]
		public string Company_id { get; set; }
		
		/// <summary>
		/// Email of the contact to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// First name of the contact to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// Last name of the contact to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// Name of the contact to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContactsSort
	{
		
		/// <summary>
		/// The field on which to sort the Contacts
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="by")]
		public System.Nullable<ContactsSortBy> By { get; set; }
		
		/// <summary>
		/// The direction in which to sort the results
		/// </summary>
		[System.ComponentModel.DefaultValue(CompaniesSortDirection.asc)]
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public CompaniesSortDirection Direction { get; set; } = CompaniesSortDirection.asc;
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContactsSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		created_at = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		updated_at = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		name = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		first_name = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		last_name = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		email = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateActivityResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnifiedId
	{
		
		/// <summary>
		/// The unique identifier of the resource
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateCompanyResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateContactResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateLeadResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateNoteResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateOpportunityResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreatePipelineResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateUserResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CrmEventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="*")]
		_ = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm.activity.created")]
		crm_activity_created = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm.activity.updated")]
		crm_activity_updated = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm.activity.deleted")]
		crm_activity_deleted = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm.company.created")]
		crm_company_created = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm.company.updated")]
		crm_company_updated = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm.company.deleted")]
		crm_company_deleted = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm.contact.created")]
		crm_contact_created = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm.contact.updated")]
		crm_contact_updated = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm.contact.deleted")]
		crm_contact_deleted = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm.lead.created")]
		crm_lead_created = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm.lead.updated")]
		crm_lead_updated = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm.lead.deleted")]
		crm_lead_deleted = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm.note.created")]
		crm_note_created = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm.note.updated")]
		crm_note_updated = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm.note.deleted")]
		crm_note_deleted = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm.opportunity.created")]
		crm_opportunity_created = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm.opportunity.updated")]
		crm_opportunity_updated = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="crm.opportunity.deleted")]
		crm_opportunity_deleted = 18,
	}
	
	public class CrmWebhookEvent
	{
	}
	
	/// <summary>
	/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Currency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN_CURRENCY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AFN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AMD = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANG = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AOA = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUD = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWG = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AZN = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BAM = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BBD = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BDT = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BGN = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BHD = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIF = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BMD = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BND = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOB = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOV = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BRL = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BSD = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BTN = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BWP = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BYR = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BZD = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAD = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CDF = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHE = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHF = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHW = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLF = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLP = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CNY = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COP = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COU = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRC = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUC = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUP = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CVE = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CZK = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DJF = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DKK = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOP = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DZD = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EGP = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERN = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ETB = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EUR = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FJD = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FKP = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GBP = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GEL = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GHS = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GIP = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GMD = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GNF = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GTQ = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GYD = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HKD = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HNL = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HRK = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTG = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HUF = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IDR = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ILS = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INR = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IQD = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IRR = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ISK = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JMD = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JOD = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JPY = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KES = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KGS = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KHR = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KMF = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KPW = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KRW = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KWD = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KYD = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KZT = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAK = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LBP = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LKR = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LRD = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LSL = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LTL = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LVL = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LYD = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAD = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MDL = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MGA = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MKD = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MMK = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MNT = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOP = 97,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MRO = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MUR = 99,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MVR = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MWK = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MXN = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MXV = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MYR = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MZN = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NAD = 106,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NGN = 107,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NIO = 108,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOK = 109,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NPR = 110,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NZD = 111,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OMR = 112,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAB = 113,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PEN = 114,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PGK = 115,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PHP = 116,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PKR = 117,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLN = 118,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PYG = 119,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QAR = 120,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RON = 121,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RSD = 122,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUB = 123,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RWF = 124,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAR = 125,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SBD = 126,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCR = 127,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SDG = 128,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEK = 129,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SGD = 130,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHP = 131,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SLL = 132,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOS = 133,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SRD = 134,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSP = 135,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STD = 136,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SVC = 137,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYP = 138,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SZL = 139,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THB = 140,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TJS = 141,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TMT = 142,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TND = 143,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOP = 144,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRC = 145,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRY = 146,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TTD = 147,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TWD = 148,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TZS = 149,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UAH = 150,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UGX = 151,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USD = 152,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USN = 153,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USS = 154,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UYI = 155,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UYU = 156,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UZS = 157,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VEF = 158,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VND = 159,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VUV = 160,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WST = 161,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XAF = 162,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XAG = 163,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XAU = 164,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBA = 165,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBB = 166,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBC = 167,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XBD = 168,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XCD = 169,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XDR = 170,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XOF = 171,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XPD = 172,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XPF = 173,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XPT = 174,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XTS = 175,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XXX = 176,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YER = 177,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZAR = 178,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZMK = 179,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZMW = 180,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BTC = 181,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ETH = 182,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteActivityResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteCompanyResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteContactResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteLeadResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteNoteResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteOpportunityResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeletePipelineResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteUserResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetActivitiesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Activity[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	/// <summary>
	/// Links to navigate to previous or next pages through the API
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Links
	{
		
		/// <summary>
		/// Link to navigate to the current page through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current")]
		public string Current { get; set; }
		
		/// <summary>
		/// Link to navigate to the previous page through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		/// <summary>
		/// Link to navigate to the previous page through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
	}
	
	/// <summary>
	/// Response metadata
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Meta
	{
		
		/// <summary>
		/// Cursors to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cursors")]
		public MetaCursors Cursors { get; set; }
		
		/// <summary>
		/// Number of items returned in the data property of the response
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="items_on_page")]
		public System.Nullable<System.Int32> Items_on_page { get; set; }
	}
	
	public class MetaCursors
	{
		
		/// <summary>
		/// Cursor to navigate to the current page of results through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current")]
		public string Current { get; set; }
		
		/// <summary>
		/// Cursor to navigate to the next page of results through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		/// <summary>
		/// Cursor to navigate to the previous page of results through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetActivityResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Activity Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCompaniesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Company[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCompanyResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Company Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetContactResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Contact Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetContactsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Contact[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetLeadResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Lead Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Lead
	{
		
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public Address[] Addresses { get; set; }
		
		/// <summary>
		/// The company the lead is associated with.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_id")]
		public string Company_id { get; set; }
		
		/// <summary>
		/// The name of the company the lead is associated with.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		/// <summary>
		/// Date created in ISO 8601 format
		/// Pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$")]
		public string Created_at { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="custom_fields")]
		public CustomField[] Custom_fields { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// The description of the lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="emails")]
		public Email[] Emails { get; set; }
		
		/// <summary>
		/// The fax number of the lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fax")]
		public string Fax { get; set; }
		
		/// <summary>
		/// The first name of the lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// Unique identifier for the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// language code according to ISO 639-1. For the United States - EN
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The last name of the lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The identifier of the lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lead_id")]
		public string Lead_id { get; set; }
		
		/// <summary>
		/// The source of the lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lead_source")]
		public string Lead_source { get; set; }
		
		/// <summary>
		/// The monetary amount of the lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monetary_amount")]
		public System.Nullable<System.Double> Monetary_amount { get; set; }
		
		/// <summary>
		/// Full name of the lead.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// The owner of the lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="owner_id")]
		public string Owner_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_numbers")]
		public PhoneNumber[] Phone_numbers { get; set; }
		
		/// <summary>
		/// The prefix of the lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prefix")]
		public string Prefix { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="social_links")]
		public SocialLink[] Social_links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string[] Tags { get; set; }
		
		/// <summary>
		/// The job title of the lead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Date updated in ISO 8601 format
		/// Pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$")]
		public string Updated_at { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="websites")]
		public Website[] Websites { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetLeadsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Lead[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetNoteResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Note Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Note
	{
		
		/// <summary>
		/// Whether the Note is active or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="active")]
		public System.Nullable<System.Boolean> Active { get; set; }
		
		/// <summary>
		/// The company that is related to the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_id")]
		public string Company_id { get; set; }
		
		/// <summary>
		/// The contact that is related to the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// The content of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		/// <summary>
		/// The timestamp when the note was created
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public string Created_at { get; set; }
		
		/// <summary>
		/// The user that created the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// The unique identifier of the note
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The lead that is related to the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lead_id")]
		public string Lead_id { get; set; }
		
		/// <summary>
		/// The opportunity that is related to the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opportunity_id")]
		public string Opportunity_id { get; set; }
		
		/// <summary>
		/// The user that owns the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="owner_id")]
		public string Owner_id { get; set; }
		
		/// <summary>
		/// The title of the note
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The timestamp when the note was last updated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public string Updated_at { get; set; }
		
		/// <summary>
		/// The user that last updated the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetNotesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Note[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetOpportunitiesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Opportunity[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Opportunity
	{
		
		/// <summary>
		/// The actual closing date for the opportunity. If close_date is null, the opportunity is not closed yet.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="close_date")]
		public System.Nullable<System.DateOnly> Close_date { get; set; }
		
		/// <summary>
		/// The unique identifier of the company associated with the opportunity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_id")]
		public string Company_id { get; set; }
		
		/// <summary>
		/// The name of the company associated with the opportunity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		/// <summary>
		/// The unique identifier of the contact associated with the opportunity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// An array of unique identifiers of all contacts associated with the opportunity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_ids")]
		public string[] Contact_ids { get; set; }
		
		/// <summary>
		/// The date and time when the opportunity was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The unique identifier of the user who created the opportunity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="custom_fields")]
		public CustomField[] Custom_fields { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// The date and time when the opportunity was last contacted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_last_contacted")]
		public System.Nullable<System.DateTimeOffset> Date_last_contacted { get; set; }
		
		/// <summary>
		/// The date and time when the lead associated with the opportunity was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_lead_created")]
		public System.Nullable<System.DateTimeOffset> Date_lead_created { get; set; }
		
		/// <summary>
		/// The date and time when the stage of the opportunity was last changed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_stage_changed")]
		public System.Nullable<System.DateTimeOffset> Date_stage_changed { get; set; }
		
		/// <summary>
		/// Indicates whether the opportunity has been deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleted")]
		public System.Nullable<System.Boolean> Deleted { get; set; }
		
		/// <summary>
		/// A description of the opportunity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The expected revenue from the opportunity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expected_revenue")]
		public System.Nullable<System.Double> Expected_revenue { get; set; }
		
		/// <summary>
		/// A unique identifier for the opportunity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The number of interactions with the opportunity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interaction_count")]
		public System.Nullable<System.Double> Interaction_count { get; set; }
		
		/// <summary>
		/// The date and time of the last activity associated with the opportunity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_activity_at")]
		public string Last_activity_at { get; set; }
		
		/// <summary>
		/// The unique identifier of the lead associated with the opportunity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lead_id")]
		public string Lead_id { get; set; }
		
		/// <summary>
		/// The source of the lead associated with the opportunity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lead_source")]
		public string Lead_source { get; set; }
		
		/// <summary>
		/// The reason why the opportunity was lost.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loss_reason")]
		public string Loss_reason { get; set; }
		
		/// <summary>
		/// The unique identifier of the reason why the opportunity was lost.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loss_reason_id")]
		public string Loss_reason_id { get; set; }
		
		/// <summary>
		/// The monetary value associated with the opportunity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monetary_amount")]
		public System.Nullable<System.Double> Monetary_amount { get; set; }
		
		/// <summary>
		/// The unique identifier of the user who owns the opportunity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="owner_id")]
		public string Owner_id { get; set; }
		
		/// <summary>
		/// The unique identifier of the pipeline associated with the opportunity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pipeline_id")]
		public string Pipeline_id { get; set; }
		
		/// <summary>
		/// The unique identifier of the stage in the pipeline associated with the opportunity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pipeline_stage_id")]
		public string Pipeline_stage_id { get; set; }
		
		/// <summary>
		/// The unique identifier of the primary contact associated with the opportunity.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="primary_contact_id")]
		public string Primary_contact_id { get; set; }
		
		/// <summary>
		/// The priority level of the opportunity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public string Priority { get; set; }
		
		/// <summary>
		/// The unique identifier of the source of the opportunity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source_id")]
		public string Source_id { get; set; }
		
		/// <summary>
		/// The date and time when the stage of the opportunity was last changed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stage_last_changed_at")]
		public System.Nullable<System.DateTimeOffset> Stage_last_changed_at { get; set; }
		
		/// <summary>
		/// The current status of the opportunity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// The unique identifier of the current status of the opportunity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_id")]
		public string Status_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string[] Tags { get; set; }
		
		/// <summary>
		/// The title or name of the opportunity.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="title")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Title { get; set; }
		
		/// <summary>
		/// The type of the opportunity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The date and time when the opportunity was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The unique identifier of the user who last updated the opportunity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_by")]
		public string Updated_by { get; set; }
		
		/// <summary>
		/// The probability of winning the opportunity, expressed as a percentage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="win_probability")]
		public System.Nullable<System.Double> Win_probability { get; set; }
		
		/// <summary>
		/// The reason why the opportunity was won.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="won_reason")]
		public string Won_reason { get; set; }
		
		/// <summary>
		/// The unique identifier of the reason why the opportunity was won.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="won_reason_id")]
		public string Won_reason_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetOpportunityResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Opportunity Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetPipelineResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Pipeline Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Pipeline
	{
		
		/// <summary>
		/// Whether the Pipeline is active or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="active")]
		public System.Nullable<System.Boolean> Active { get; set; }
		
		/// <summary>
		/// Whether the Pipeline is archived or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archived")]
		public System.Nullable<System.Boolean> Archived { get; set; }
		
		/// <summary>
		/// The date and time when the object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public BankAccountCurrency Currency { get; set; }
		
		/// <summary>
		/// The order in which the Pipeline is displayed in the UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_order")]
		public System.Nullable<System.Int32> Display_order { get; set; }
		
		/// <summary>
		/// The unique identifier of the Pipeline.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the Pipeline.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Name { get; set; }
		
		/// <summary>
		/// The Pipeline Stages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stages")]
		public PipelineStages[] PipelineStages { get; set; }
		
		/// <summary>
		/// The date and time when the object was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// Whether the Pipeline has win probability enabled or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="win_probability_enabled")]
		public System.Nullable<System.Boolean> Win_probability_enabled { get; set; }
	}
	
	public class PipelineStages
	{
		
		/// <summary>
		/// The order in which the Pipeline Stage is displayed in the UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_order")]
		public System.Nullable<System.Int32> Display_order { get; set; }
		
		/// <summary>
		/// The unique identifier of the Pipeline Stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the Pipeline Stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The value of the Pipeline Stage.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
		
		/// <summary>
		/// The expected probability of winning an Opportunity in this Pipeline Stage. Valid values are [0-100].
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="win_probability")]
		public System.Nullable<System.Int32> Win_probability { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetPipelinesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Pipeline[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetUserResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public User Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class User
	{
		
		[System.Runtime.Serialization.DataMember(Name="addresses")]
		public Address[] Addresses { get; set; }
		
		/// <summary>
		/// The name of the company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		/// <summary>
		/// The date and time when the user was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public string Created_at { get; set; }
		
		/// <summary>
		/// When custom mappings are configured on the resource, the result is included here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="custom_mappings")]
		public CustomMappings Custom_mappings { get; set; }
		
		/// <summary>
		/// The department the person is currently in. [Deprecated](https://developers.apideck.com/changelog) in favor of the dedicated department_id and department_name field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="department")]
		public string Department { get; set; }
		
		/// <summary>
		/// A description of the object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The division the person is currently in. Usually a collection of departments or teams or regions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="division")]
		public string Division { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="emails")]
		public Email[] Emails { get; set; }
		
		/// <summary>
		/// An Employee Number, Employee ID or Employee Code, is a unique number that has been assigned to each individual staff member within a company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="employee_number")]
		public string Employee_number { get; set; }
		
		/// <summary>
		/// The first name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// The unique identifier for the user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL of the user's avatar
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		/// <summary>
		/// language code according to ISO 639-1. For the United States - EN
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The last name of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The parent user id
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_id")]
		public string Parent_id { get; set; }
		
		/// <summary>
		/// The password of the user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="password")]
		public string Password { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phone_numbers")]
		public PhoneNumber[] Phone_numbers { get; set; }
		
		/// <summary>
		/// The status of the user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// The job title of the person.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The date and time when the user was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public string Updated_at { get; set; }
		
		/// <summary>
		/// The username of the user
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetUsersResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public User[] Data { get; set; }
		
		/// <summary>
		/// Links to navigate to previous or next pages through the API
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="links")]
		public Links Links { get; set; }
		
		/// <summary>
		/// Response metadata
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public Meta Meta { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LeadsFilter
	{
		
		/// <summary>
		/// E-mail of the lead to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// First name of the lead to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// Last name of the lead to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// Name of the lead to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LeadsSort
	{
		
		/// <summary>
		/// The field on which to sort the Leads
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="by")]
		public ContactsSortBy By { get; set; }
		
		/// <summary>
		/// The direction in which to sort the results
		/// </summary>
		[System.ComponentModel.DefaultValue(CompaniesSortDirection.asc)]
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public CompaniesSortDirection Direction { get; set; } = CompaniesSortDirection.asc;
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotFoundResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotImplementedResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OpportunitiesFilter
	{
		
		/// <summary>
		/// Company ID to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company_id")]
		public string Company_id { get; set; }
		
		/// <summary>
		/// Monetary amount to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monetary_amount")]
		public System.Nullable<System.Double> Monetary_amount { get; set; }
		
		/// <summary>
		/// Status to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// Title of the opportunity to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Win probability to filter on
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="win_probability")]
		public System.Nullable<System.Double> Win_probability { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OpportunitiesSort
	{
		
		/// <summary>
		/// The field on which to sort the Opportunities
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="by")]
		public System.Nullable<OpportunitiesSortBy> By { get; set; }
		
		/// <summary>
		/// The direction in which to sort the results
		/// </summary>
		[System.ComponentModel.DefaultValue(CompaniesSortDirection.asc)]
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public CompaniesSortDirection Direction { get; set; } = CompaniesSortDirection.asc;
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OpportunitiesSortBy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		created_at = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		updated_at = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		title = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		win_probability = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		monetary_amount = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		status = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PassThroughQuery
	{
		
		/// <summary>
		/// All passthrough query parameters are passed along to the connector as is (?pass_through[search]=leads becomes ?search=leads)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="example_downstream_property")]
		public string Example_downstream_property { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PaymentRequiredResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	/// <summary>
	/// The direction in which to sort the results
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SortDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		asc = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		desc = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TooManyRequestsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public TooManyRequestsResponseDetail Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 6585)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	public class TooManyRequestsResponseDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="context")]
		public string Context { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnauthorizedResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnexpectedErrorResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnprocessableResponse
	{
		
		/// <summary>
		/// Contains parameter or domain specific information related to the error and why it occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		/// <summary>
		/// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A human-readable message providing more details about the error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Link to documentation of error type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ref")]
		public string Ref { get; set; }
		
		/// <summary>
		/// HTTP status code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public System.Nullable<System.Double> Status_code { get; set; }
		
		/// <summary>
		/// The type of error returned
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type_name")]
		public string Type_name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateActivityResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateCompanyResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateLeadResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateNoteResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateOpportunityResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdatePipelineResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateUserResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UnifiedId Data { get; set; }
		
		/// <summary>
		/// Operation performed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		/// <summary>
		/// Unified API resource name
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// Apideck ID of service provider
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// HTTP Response Status
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// HTTP Response Status Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_code")]
		public int Status_code { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// List activities
		/// List activities
		/// ActivitiesAll crm/activities
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="filter">Apply filters</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Activities</returns>
		public async Task<GetActivitiesResponse> ActivitiesAllAsync(bool raw, string cursor, int limit, ActivitiesFilter filter, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/activities?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&filter=" + filter+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetActivitiesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create activity
		/// Create activity
		/// ActivitiesAdd crm/activities
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task ActivitiesAddAsync(bool raw, Activity requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/activities?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete activity
		/// Delete activity
		/// ActivitiesDelete crm/activities/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Activity deleted</returns>
		public async Task<DeleteActivityResponse> ActivitiesDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/activities/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteActivityResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get activity
		/// Get activity
		/// ActivitiesOne crm/activities/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Activity</returns>
		public async Task<GetActivityResponse> ActivitiesOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/activities/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetActivityResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update activity
		/// Update activity
		/// ActivitiesUpdate crm/activities/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Activity updated</returns>
		public async Task<UpdateActivityResponse> ActivitiesUpdateAsync(string id, bool raw, Activity requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/activities/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateActivityResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List companies
		/// List companies
		/// CompaniesAll crm/companies
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="filter">Apply filters</param>
		/// <param name="sort">Apply sorting</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Companies</returns>
		public async Task<GetCompaniesResponse> CompaniesAllAsync(bool raw, string cursor, int limit, CompaniesFilter filter, CompaniesSort sort, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/companies?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&filter=" + filter+"&sort=" + sort+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCompaniesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create company
		/// Create company
		/// CompaniesAdd crm/companies
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task CompaniesAddAsync(bool raw, Company requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/companies?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete company
		/// Delete company
		/// CompaniesDelete crm/companies/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Company deleted</returns>
		public async Task<DeleteCompanyResponse> CompaniesDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/companies/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteCompanyResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get company
		/// Get company
		/// CompaniesOne crm/companies/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Company</returns>
		public async Task<GetCompanyResponse> CompaniesOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/companies/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCompanyResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update company
		/// Update company
		/// CompaniesUpdate crm/companies/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Company updated</returns>
		public async Task<UpdateCompanyResponse> CompaniesUpdateAsync(string id, bool raw, Company requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/companies/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateCompanyResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List contacts
		/// List contacts
		/// ContactsAll crm/contacts
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="filter">Apply filters</param>
		/// <param name="sort">Apply sorting</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Contacts</returns>
		public async Task<GetContactsResponse> ContactsAllAsync(bool raw, string cursor, int limit, ContactsFilter filter, ContactsSort sort, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/contacts?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&filter=" + filter+"&sort=" + sort+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetContactsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create contact
		/// Create contact
		/// ContactsAdd crm/contacts
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task ContactsAddAsync(bool raw, Contact requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/contacts?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete contact
		/// Delete contact
		/// ContactsDelete crm/contacts/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Contact deleted</returns>
		public async Task<DeleteContactResponse> ContactsDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/contacts/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteContactResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get contact
		/// Get contact
		/// ContactsOne crm/contacts/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Contact</returns>
		public async Task<GetContactResponse> ContactsOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/contacts/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetContactResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update contact
		/// Update contact
		/// ContactsUpdate crm/contacts/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Contact updated</returns>
		public async Task<UpdateContactResponse> ContactsUpdateAsync(string id, bool raw, Contact requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/contacts/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateContactResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List leads
		/// List leads
		/// LeadsAll crm/leads
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="filter">Apply filters</param>
		/// <param name="sort">Apply sorting</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Leads</returns>
		public async Task<GetLeadsResponse> LeadsAllAsync(bool raw, string cursor, int limit, LeadsFilter filter, LeadsSort sort, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/leads?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&filter=" + filter+"&sort=" + sort+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetLeadsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create lead
		/// Create lead
		/// LeadsAdd crm/leads
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task LeadsAddAsync(bool raw, Lead requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/leads?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete lead
		/// Delete lead
		/// LeadsDelete crm/leads/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Lead deleted</returns>
		public async Task<DeleteLeadResponse> LeadsDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/leads/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteLeadResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get lead
		/// Get lead
		/// LeadsOne crm/leads/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Lead</returns>
		public async Task<GetLeadResponse> LeadsOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/leads/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetLeadResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update lead
		/// Update lead
		/// LeadsUpdate crm/leads/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Lead updated</returns>
		public async Task<UpdateLeadResponse> LeadsUpdateAsync(string id, bool raw, Lead requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/leads/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateLeadResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List notes
		/// List notes
		/// NotesAll crm/notes
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Notes</returns>
		public async Task<GetNotesResponse> NotesAllAsync(bool raw, string cursor, int limit, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/notes?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetNotesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create note
		/// Create note
		/// NotesAdd crm/notes
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task NotesAddAsync(bool raw, Note requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/notes?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete note
		/// Delete note
		/// NotesDelete crm/notes/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Note deleted</returns>
		public async Task<DeleteNoteResponse> NotesDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/notes/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteNoteResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get note
		/// Get note
		/// NotesOne crm/notes/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Note</returns>
		public async Task<GetNoteResponse> NotesOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/notes/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetNoteResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update note
		/// Update note
		/// NotesUpdate crm/notes/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Note updated</returns>
		public async Task<UpdateNoteResponse> NotesUpdateAsync(string id, bool raw, Note requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/notes/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateNoteResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List opportunities
		/// List opportunities
		/// OpportunitiesAll crm/opportunities
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="filter">Apply filters</param>
		/// <param name="sort">Apply sorting</param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Opportunities</returns>
		public async Task<GetOpportunitiesResponse> OpportunitiesAllAsync(bool raw, string cursor, int limit, OpportunitiesFilter filter, OpportunitiesSort sort, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/opportunities?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&filter=" + filter+"&sort=" + sort+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetOpportunitiesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create opportunity
		/// Create opportunity
		/// OpportunitiesAdd crm/opportunities
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task OpportunitiesAddAsync(bool raw, Opportunity requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/opportunities?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete opportunity
		/// Delete opportunity
		/// OpportunitiesDelete crm/opportunities/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Opportunity deleted</returns>
		public async Task<DeleteOpportunityResponse> OpportunitiesDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/opportunities/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteOpportunityResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get opportunity
		/// Get opportunity
		/// OpportunitiesOne crm/opportunities/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Opportunity</returns>
		public async Task<GetOpportunityResponse> OpportunitiesOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/opportunities/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetOpportunityResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update opportunity
		/// Update opportunity
		/// OpportunitiesUpdate crm/opportunities/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Opportunity updated</returns>
		public async Task<UpdateOpportunityResponse> OpportunitiesUpdateAsync(string id, bool raw, Opportunity requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/opportunities/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateOpportunityResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List pipelines
		/// List pipelines
		/// PipelinesAll crm/pipelines
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Pipelines</returns>
		public async Task<GetPipelinesResponse> PipelinesAllAsync(bool raw, string cursor, int limit, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/pipelines?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetPipelinesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create pipeline
		/// Create pipeline
		/// PipelinesAdd crm/pipelines
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task PipelinesAddAsync(bool raw, Pipeline requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/pipelines?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete pipeline
		/// Delete pipeline
		/// PipelinesDelete crm/pipelines/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Pipeline deleted</returns>
		public async Task<DeletePipelineResponse> PipelinesDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/pipelines/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeletePipelineResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get pipeline
		/// Get pipeline
		/// PipelinesOne crm/pipelines/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Pipeline</returns>
		public async Task<GetPipelineResponse> PipelinesOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/pipelines/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetPipelineResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update pipeline
		/// Update pipeline
		/// PipelinesUpdate crm/pipelines/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>Pipeline updated</returns>
		public async Task<UpdatePipelineResponse> PipelinesUpdateAsync(string id, bool raw, Pipeline requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/pipelines/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdatePipelineResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List users
		/// List users
		/// UsersAll crm/users
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="cursor">Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.</param>
		/// <param name="limit">Number of results to return. Minimum 1, Maximum 200, Default 20
		/// Minimum: 1
		/// Maximum: 200
		// </param>
		/// <param name="pass_through">Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>Users</returns>
		public async Task<GetUsersResponse> UsersAllAsync(bool raw, string cursor, int limit, PassThroughQuery pass_through, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/users?raw="+raw+"&cursor=" + (cursor==null? "" : System.Uri.EscapeDataString(cursor))+"&limit="+limit+"&pass_through=" + pass_through+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetUsersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create user
		/// Create user
		/// UsersAdd crm/users
		/// </summary>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		public async Task UsersAddAsync(bool raw, User requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/users?raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete user
		/// Delete user
		/// UsersDelete crm/users/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>User deleted</returns>
		public async Task<DeleteUserResponse> UsersDeleteAsync(string id, bool raw, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/users/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteUserResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get user
		/// Get user
		/// UsersOne crm/users/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <param name="fields">The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.</param>
		/// <returns>User</returns>
		public async Task<GetUserResponse> UsersOneAsync(string id, bool raw, string fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/users/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw+"&fields=" + (fields==null? "" : System.Uri.EscapeDataString(fields));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetUserResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update user
		/// Update user
		/// UsersUpdate crm/users/{id}
		/// </summary>
		/// <param name="id">ID of the record you are acting upon.</param>
		/// <param name="raw">Include raw response. Mostly used for debugging purposes</param>
		/// <returns>User updated</returns>
		public async Task<UpdateUserResponse> UsersUpdateAsync(string id, bool raw, User requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "crm/users/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"&raw="+raw;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateUserResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

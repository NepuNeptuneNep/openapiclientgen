//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAppResponse
	{
		
		/// <summary>
		/// Provides information about an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationResponse ApplicationResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOf__string
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BadRequestException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalServerErrorException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PayloadTooLargeException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ForbiddenException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MethodNotAllowedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TooManyRequestsException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateCampaignResponse
	{
		
		/// <summary>
		/// Provides information about the status, configuration, and other settings for a campaign.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CampaignResponse CampaignResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status, configuration, and other settings for a campaign.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CampaignResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TreatmentResource[] AdditionalTreatments { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomDeliveryConfiguration CustomDeliveryConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignState DefaultState { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> HoldoutPercent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignHook Hook { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsPaused { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignLimits Limits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MessageConfiguration MessageConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Schedule Schedule { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SegmentId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int SegmentVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignState State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateConfiguration TemplateConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TreatmentDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TreatmentName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Priority { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for a campaign treatment. A <i>treatment</i> is a variation of a campaign that's used for A/B testing of a campaign.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TreatmentResource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CustomDeliveryConfiguration CustomDeliveryConfiguration { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MessageConfiguration MessageConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Schedule Schedule { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int SizePercent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateConfiguration TemplateConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TreatmentDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TreatmentName { get; set; }
	}
	
	/// <summary>
	/// Specifies the delivery configuration settings for sending a campaign or campaign treatment through a custom channel. This object is required if you use the CampaignCustomMessage object to define the message to send for the campaign or campaign treatment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomDeliveryConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DeliveryUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__EndpointTypesElement[] EndpointTypes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum @__EndpointTypesElement
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUSH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GCM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APNS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APNS_SANDBOX = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APNS_VOIP = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APNS_VOIP_SANDBOX = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADM = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SMS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VOICE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAIL = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BAIDU = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_APP = 12,
	}
	
	/// <summary>
	/// Specifies the message configuration settings for a campaign.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MessageConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Message ADMMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Message APNSMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Message BaiduMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignCustomMessage CustomMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Message DefaultMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignEmailMessage EmailMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Message GCMMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignSmsMessage SMSMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignInAppMessage InAppMessage { get; set; }
	}
	
	/// <summary>
	/// Specifies the content and settings for a push notification that's sent to recipients of a campaign.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Message
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageIconUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageSmallIconUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string JsonBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MediaUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RawContent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SilentPush { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TimeToLive { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Action
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPEN_APP = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEEP_LINK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		URL = 2,
	}
	
	/// <summary>
	/// Specifies the contents of a message that's sent through a custom channel to recipients of a campaign.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CampaignCustomMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Data { get; set; }
	}
	
	/// <summary>
	/// Specifies the content and "From" address for an email message that's sent to recipients of a campaign.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CampaignEmailMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FromAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HtmlBody { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Specifies the content and settings for an SMS message that's sent to recipients of a campaign.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CampaignSmsMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MessageType MessageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OriginationNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EntityId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MessageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSACTIONAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROMOTIONAL = 1,
	}
	
	/// <summary>
	/// In-app message configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CampaignInAppMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InAppMessageContent[] Content { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string CustomConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Layout Layout { get; set; }
	}
	
	/// <summary>
	/// The configuration for the message content.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InAppMessageContent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BackgroundColor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InAppMessageBodyConfig BodyConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InAppMessageHeaderConfig HeaderConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InAppMessageButton PrimaryBtn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InAppMessageButton SecondaryBtn { get; set; }
	}
	
	/// <summary>
	/// Text config for Message Body.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InAppMessageBodyConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Alignment Alignment { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TextColor { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Alignment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LEFT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CENTER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RIGHT = 2,
	}
	
	/// <summary>
	/// Text config for Message Header.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InAppMessageHeaderConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Alignment Alignment { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Header { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TextColor { get; set; }
	}
	
	/// <summary>
	/// Button Config for an in-app message.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InAppMessageButton
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OverrideButtonConfiguration Android { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DefaultButtonConfiguration DefaultConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OverrideButtonConfiguration IOS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OverrideButtonConfiguration Web { get; set; }
	}
	
	/// <summary>
	/// Override button configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OverrideButtonConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ButtonAction ButtonAction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Link { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ButtonAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LINK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEEP_LINK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOSE = 2,
	}
	
	/// <summary>
	/// Default button configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultButtonConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BackgroundColor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BorderRadius { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ButtonAction ButtonAction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Link { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Text { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TextColor { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Layout
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOTTOM_BANNER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TOP_BANNER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OVERLAYS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MOBILE_FEED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIDDLE_BANNER = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAROUSEL = 5,
	}
	
	/// <summary>
	/// Specifies the schedule settings for a campaign.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Schedule
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignEventFilter EventFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Frequency Frequency { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsLocalTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuietTime QuietTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timezone { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for events that cause a campaign to be sent.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CampaignEventFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EventDimensions Dimensions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilterType FilterType { get; set; }
	}
	
	/// <summary>
	/// Specifies the dimensions for an event filter that determines when a campaign is sent or a journey activity is performed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventDimensions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfAttributeDimension Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SetDimension EventType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfMetricDimension Metrics { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOfAttributeDimension
	{
	}
	
	/// <summary>
	/// Specifies the dimension type and values for a segment dimension.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetDimension
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DimensionType DimensionType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DimensionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INCLUSIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXCLUSIVE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOfMetricDimension
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FilterType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYSTEM = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENDPOINT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Frequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOURLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAILY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEKLY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTHLY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EVENT = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_APP_EVENT = 6,
	}
	
	/// <summary>
	/// Specifies the start and end times that define a time range when messages aren't sent to endpoints.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QuietTime
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string End { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Start { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status of a campaign.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CampaignState
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignStatus CampaignStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CampaignStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCHEDULED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_NEXT_RUN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAUSED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID = 6,
	}
	
	/// <summary>
	/// Specifies the message template to use for the message, for each type of channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Template EmailTemplate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Template PushTemplate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Template SMSTemplate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Template VoiceTemplate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Template InAppTemplate { get; set; }
	}
	
	/// <summary>
	/// Specifies the name and version of the message template to use for the message.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Template
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Specifies settings for invoking an AWS Lambda function that customizes a segment for a campaign.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CampaignHook
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LambdaFunctionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Mode Mode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WebUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Mode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELIVERY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER = 1,
	}
	
	/// <summary>
	/// For a campaign, specifies limits on the messages that the campaign can send. For an application, specifies the default limits for messages that campaigns in the application can send.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CampaignLimits
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Daily { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumDuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MessagesPerSecond { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Total { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Session { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for a campaign treatment. A <i>treatment</i> is a variation of a campaign that's used for A/B testing of a campaign.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WriteTreatmentResource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CustomDeliveryConfiguration CustomDeliveryConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MessageConfiguration MessageConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Schedule Schedule { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int SizePercent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateConfiguration TemplateConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TreatmentDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TreatmentName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEmailTemplateResponse
	{
		
		/// <summary>
		/// Provides information about a request to create a message template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateTemplateMessageBody CreateTemplateMessageBody { get; set; }
	}
	
	/// <summary>
	/// Provides information about a request to create a message template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateTemplateMessageBody
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestID { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateExportJobResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of a job that exports endpoint definitions to a file. The file can be added directly to an Amazon Simple Storage Service (Amazon S3) bucket by using the Amazon Pinpoint API or downloaded directly to a computer by using the Amazon Pinpoint console.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ExportJobResponse ExportJobResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status and settings of a job that exports endpoint definitions to a file. The file can be added directly to an Amazon Simple Storage Service (Amazon S3) bucket by using the Amazon Pinpoint API or downloaded directly to a computer by using the Amazon Pinpoint console.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportJobResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CompletedPieces { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CompletionDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ExportJobResource Definition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailedPieces { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Failures { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalFailures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalPieces { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalProcessed { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Provides information about the resource settings for a job that exports endpoint definitions to a file. The file can be added directly to an Amazon Simple Storage Service (Amazon S3) bucket by using the Amazon Pinpoint API or downloaded directly to a computer by using the Amazon Pinpoint console.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportJobResource
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3UrlPrefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SegmentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SegmentVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREPARING_FOR_INITIALIZATION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INITIALIZING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_JOB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILING = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateImportJobResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of a job that imports endpoint definitions from one or more files. The files can be stored in an Amazon Simple Storage Service (Amazon S3) bucket or uploaded directly from a computer by using the Amazon Pinpoint console.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ImportJobResponse ImportJobResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status and settings of a job that imports endpoint definitions from one or more files. The files can be stored in an Amazon Simple Storage Service (Amazon S3) bucket or uploaded directly from a computer by using the Amazon Pinpoint console.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportJobResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CompletedPieces { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CompletionDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ImportJobResource Definition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailedPieces { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Failures { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalFailures { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalPieces { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalProcessed { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Provides information about the resource settings for a job that imports endpoint definitions from one or more files. The files can be stored in an Amazon Simple Storage Service (Amazon S3) bucket or uploaded directly from a computer by using the Amazon Pinpoint console.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportJobResource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DefineSegment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExternalId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Format Format { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RegisterEndpoints { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3Url { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SegmentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SegmentName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Format
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CSV = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JSON = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateInAppTemplateResponse
	{
		
		/// <summary>
		/// Provides information about a request to create a message template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TemplateCreateMessageBody TemplateCreateMessageBody { get; set; }
	}
	
	/// <summary>
	/// Provides information about a request to create a message template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateCreateMessageBody
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestID { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateJourneyResponse
	{
		
		/// <summary>
		/// Provides information about the status, configuration, and other settings for a journey.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JourneyResponse JourneyResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status, configuration, and other settings for a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JourneyResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfActivity Activities { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JourneyLimits Limits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> LocalTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuietTime QuietTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RefreshFrequency { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JourneySchedule Schedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StartActivity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StartCondition StartCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public State State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> WaitForQuietTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RefreshOnSegmentUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JourneyChannelSettings JourneyChannelSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SendingSchedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OpenHours OpenHours { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClosedDays ClosedDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__TimezoneEstimationMethodsElement[] TimezoneEstimationMethods { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOfActivity
	{
	}
	
	/// <summary>
	/// Specifies limits on the messages that a journey can send and the number of times participants can enter a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JourneyLimits
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DailyCap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> EndpointReentryCap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MessagesPerSecond { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EndpointReentryInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JourneyTimeframeCap TimeframeCap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalCap { get; set; }
	}
	
	/// <summary>
	/// The number of messages that can be sent to an endpoint during the specified timeframe for all journeys.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JourneyTimeframeCap
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Cap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Days { get; set; }
	}
	
	/// <summary>
	/// Specifies the schedule settings for a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JourneySchedule
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timezone { get; set; }
	}
	
	/// <summary>
	/// Specifies the conditions for the first activity in a journey. This activity and its conditions determine which users are participants in a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartCondition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Specifies the settings for an event that causes a journey activity to start.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EventStartCondition EventStartCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentCondition SegmentStartCondition { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for an event that causes a journey activity to start.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventStartCondition
	{
		
		/// <summary>
		/// Specifies the settings for an event that causes a campaign to be sent or a journey activity to be performed.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public EventFilter EventFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SegmentId { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for an event that causes a campaign to be sent or a journey activity to be performed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EventDimensions Dimensions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilterType FilterType { get; set; }
	}
	
	/// <summary>
	/// Specifies a segment to associate with an activity in a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SegmentCondition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SegmentId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum State
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRAFT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOSED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAUSED = 5,
	}
	
	/// <summary>
	/// The channel-specific configurations for the journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JourneyChannelSettings
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ConnectCampaignArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConnectCampaignExecutionRoleArn { get; set; }
	}
	
	/// <summary>
	/// Specifies the times when message are allowed to be sent to endpoints.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OpenHours
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOfOpenHoursRules EMAIL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOfOpenHoursRules SMS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOfOpenHoursRules PUSH { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOfOpenHoursRules VOICE { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOfOpenHoursRules CUSTOM { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOfListOfOpenHoursRules
	{
	}
	
	/// <summary>
	/// The time when a journey will not send messages. QuietTime should be configured first and SendingSchedule should be set to true.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClosedDays
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EMAIL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SMS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] PUSH { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] VOICE { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] CUSTOM { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum @__TimezoneEstimationMethodsElement
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PHONE_NUMBER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSTAL_CODE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreatePushTemplateResponse
	{
		
		/// <summary>
		/// Provides information about a request to create a message template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateTemplateMessageBody CreateTemplateMessageBody { get; set; }
	}
	
	/// <summary>
	/// Specifies channel-specific content and settings for a message template that can be used in push notifications that are sent through the ADM (Amazon Device Messaging), Baidu (Baidu Cloud Push), or GCM (Firebase Cloud Messaging, formerly Google Cloud Messaging) channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AndroidPushNotificationTemplate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageIconUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RawContent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SmallImageIconUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Sound { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Specifies channel-specific content and settings for a message template that can be used in push notifications that are sent through the APNs (Apple Push Notification service) channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class APNSPushNotificationTemplate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MediaUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RawContent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Sound { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Specifies the default settings and content for a message template that can be used in messages that are sent through a push notification channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultPushNotificationTemplate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Sound { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateRecommenderConfigurationResponse
	{
		
		/// <summary>
		/// Provides information about Amazon Pinpoint configuration settings for retrieving and processing data from a recommender model.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RecommenderConfigurationResponse RecommenderConfigurationResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about Amazon Pinpoint configuration settings for retrieving and processing data from a recommender model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecommenderConfigurationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationProviderIdType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationProviderRoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationProviderUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationTransformerUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationsDisplayName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RecommendationsPerMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSegmentResponse
	{
		
		/// <summary>
		/// Provides information about the configuration, dimension, and other settings for a segment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SegmentResponse SegmentResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the configuration, dimension, and other settings for a segment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SegmentResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentDimensions Dimensions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentImportResource ImportDefinition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentGroupList SegmentGroups { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SegmentType SegmentType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	/// <summary>
	/// Specifies the dimension settings for a segment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SegmentDimensions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfAttributeDimension Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentBehaviors Behavior { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentDemographics Demographic { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentLocation Location { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfMetricDimension Metrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfAttributeDimension UserAttributes { get; set; }
	}
	
	/// <summary>
	/// Specifies dimension settings for including or excluding endpoints from a segment based on how recently an endpoint was active.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SegmentBehaviors
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RecencyDimension Recency { get; set; }
	}
	
	/// <summary>
	/// Specifies criteria for including or excluding endpoints from a segment based on how recently an endpoint was active.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecencyDimension
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Duration Duration { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RecencyType RecencyType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Duration
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HR_24 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAY_7 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAY_14 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAY_30 = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RecencyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INACTIVE = 1,
	}
	
	/// <summary>
	/// Specifies demographic-based dimension settings for including or excluding endpoints from a segment. These settings derive from characteristics of endpoint devices, such as platform, make, and model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SegmentDemographics
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SetDimension AppVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SetDimension Channel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SetDimension DeviceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SetDimension Make { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SetDimension Model { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SetDimension Platform { get; set; }
	}
	
	/// <summary>
	/// Specifies geographical dimension settings for a segment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SegmentLocation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SetDimension Country { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GPSPointDimension GPSPoint { get; set; }
	}
	
	/// <summary>
	/// Specifies GPS-based criteria for including or excluding endpoints from a segment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GPSPointDimension
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GPSCoordinates Coordinates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> RangeInKilometers { get; set; }
	}
	
	/// <summary>
	/// Specifies the GPS coordinates of a location.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GPSCoordinates
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double Latitude { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double Longitude { get; set; }
	}
	
	/// <summary>
	/// Provides information about the import job that created a segment. An import job is a job that creates a user segment by importing endpoint definitions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SegmentImportResource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__integer ChannelCounts { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExternalId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Format Format { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3Url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Size { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOf__integer
	{
	}
	
	/// <summary>
	/// Specifies the settings that define the relationships between segment groups for a segment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SegmentGroupList
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentGroup[] Groups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SourceType Include { get; set; }
	}
	
	/// <summary>
	/// Specifies the base segments and dimensions for a segment, and the relationships between these base segments and dimensions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SegmentGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentDimensions[] Dimensions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentReference[] SourceSegments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SourceType SourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SourceType Type { get; set; }
	}
	
	/// <summary>
	/// Specifies the segment identifier and version of a segment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SegmentReference
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SegmentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIMENSIONAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSmsTemplateResponse
	{
		
		/// <summary>
		/// Provides information about a request to create a message template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateTemplateMessageBody CreateTemplateMessageBody { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateVoiceTemplateResponse
	{
		
		/// <summary>
		/// Provides information about a request to create a message template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateTemplateMessageBody CreateTemplateMessageBody { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAdmChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the ADM (Amazon Device Messaging) channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ADMChannelResponse ADMChannelResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status and settings of the ADM (Amazon Device Messaging) channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ADMChannelResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasCredential { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsArchived { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApnsChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the APNs (Apple Push Notification service) channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public APNSChannelResponse APNSChannelResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status and settings of the APNs (Apple Push Notification service) channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class APNSChannelResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAuthenticationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasCredential { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasTokenKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsArchived { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApnsSandboxChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the APNs (Apple Push Notification service) sandbox channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public APNSSandboxChannelResponse APNSSandboxChannelResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status and settings of the APNs (Apple Push Notification service) sandbox channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class APNSSandboxChannelResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAuthenticationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasCredential { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasTokenKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsArchived { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApnsVoipChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the APNs (Apple Push Notification service) VoIP channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public APNSVoipChannelResponse APNSVoipChannelResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status and settings of the APNs (Apple Push Notification service) VoIP channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class APNSVoipChannelResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAuthenticationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasCredential { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasTokenKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsArchived { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApnsVoipSandboxChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the APNs (Apple Push Notification service) VoIP sandbox channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public APNSVoipSandboxChannelResponse APNSVoipSandboxChannelResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status and settings of the APNs (Apple Push Notification service) VoIP sandbox channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class APNSVoipSandboxChannelResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAuthenticationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasCredential { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasTokenKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsArchived { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAppResponse
	{
		
		/// <summary>
		/// Provides information about an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationResponse ApplicationResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteBaiduChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the Baidu (Baidu Cloud Push) channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BaiduChannelResponse BaiduChannelResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status and settings of the Baidu (Baidu Cloud Push) channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BaiduChannelResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Credential { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasCredential { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsArchived { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteCampaignResponse
	{
		
		/// <summary>
		/// Provides information about the status, configuration, and other settings for a campaign.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CampaignResponse CampaignResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEmailChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the email channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EmailChannelResponse EmailChannelResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status and settings of the email channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmailChannelResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationSet { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FromAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasCredential { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Identity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsArchived { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MessagesPerSecond { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEmailTemplateResponse
	{
		
		/// <summary>
		/// Provides information about an API request or response.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MessageBody MessageBody { get; set; }
	}
	
	/// <summary>
	/// Provides information about an API request or response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MessageBody
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestID { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEndpointResponse
	{
		
		/// <summary>
		/// Provides information about the channel type and other settings for an endpoint.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EndpointResponse EndpointResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the channel type and other settings for an endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndpointResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOf__string Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__EndpointTypesElement ChannelType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CohortId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointDemographic Demographic { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EffectiveDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EndpointStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointLocation Location { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__double Metrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptOut { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointUser User { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOfListOf__string
	{
	}
	
	/// <summary>
	/// Specifies demographic information about an endpoint, such as the applicable time zone and platform.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndpointDemographic
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AppVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Locale { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Make { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Model { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ModelVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PlatformVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timezone { get; set; }
	}
	
	/// <summary>
	/// Specifies geographic information about an endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndpointLocation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string City { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Country { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PostalCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Region { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOf__double
	{
	}
	
	/// <summary>
	/// Specifies data for one or more attributes that describe the user who's associated with an endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndpointUser
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOf__string UserAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEventStreamResponse
	{
		
		/// <summary>
		/// Specifies settings for publishing event data to an Amazon Kinesis data stream or an Amazon Kinesis Data Firehose delivery stream.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EventStream EventStream { get; set; }
	}
	
	/// <summary>
	/// Specifies settings for publishing event data to an Amazon Kinesis data stream or an Amazon Kinesis Data Firehose delivery stream.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventStream
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DestinationStreamArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExternalId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastUpdatedBy { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteGcmChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the GCM channel for an application. The GCM channel enables Amazon Pinpoint to send push notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GCMChannelResponse GCMChannelResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status and settings of the GCM channel for an application. The GCM channel enables Amazon Pinpoint to send push notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GCMChannelResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Credential { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAuthenticationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasCredential { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasFcmServiceCredentials { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsArchived { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteInAppTemplateResponse
	{
		
		/// <summary>
		/// Provides information about an API request or response.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MessageBody MessageBody { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteJourneyResponse
	{
		
		/// <summary>
		/// Provides information about the status, configuration, and other settings for a journey.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JourneyResponse JourneyResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeletePushTemplateResponse
	{
		
		/// <summary>
		/// Provides information about an API request or response.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MessageBody MessageBody { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteRecommenderConfigurationResponse
	{
		
		/// <summary>
		/// Provides information about Amazon Pinpoint configuration settings for retrieving and processing data from a recommender model.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RecommenderConfigurationResponse RecommenderConfigurationResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSegmentResponse
	{
		
		/// <summary>
		/// Provides information about the configuration, dimension, and other settings for a segment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SegmentResponse SegmentResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSmsChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the SMS channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SMSChannelResponse SMSChannelResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status and settings of the SMS channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SMSChannelResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasCredential { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsArchived { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PromotionalMessagesPerSecond { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ShortCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TransactionalMessagesPerSecond { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSmsTemplateResponse
	{
		
		/// <summary>
		/// Provides information about an API request or response.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MessageBody MessageBody { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteUserEndpointsResponse
	{
		
		/// <summary>
		/// Provides information about all the endpoints that are associated with a user ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EndpointsResponse EndpointsResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about all the endpoints that are associated with a user ID.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndpointsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EndpointResponse[] Item { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteVoiceChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the voice channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VoiceChannelResponse VoiceChannelResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status and settings of the voice channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VoiceChannelResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasCredential { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsArchived { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteVoiceTemplateResponse
	{
		
		/// <summary>
		/// Provides information about an API request or response.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MessageBody MessageBody { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAdmChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the ADM (Amazon Device Messaging) channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ADMChannelResponse ADMChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetApnsChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the APNs (Apple Push Notification service) channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public APNSChannelResponse APNSChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetApnsSandboxChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the APNs (Apple Push Notification service) sandbox channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public APNSSandboxChannelResponse APNSSandboxChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetApnsVoipChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the APNs (Apple Push Notification service) VoIP channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public APNSVoipChannelResponse APNSVoipChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetApnsVoipSandboxChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the APNs (Apple Push Notification service) VoIP sandbox channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public APNSVoipSandboxChannelResponse APNSVoipSandboxChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAppResponse
	{
		
		/// <summary>
		/// Provides information about an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationResponse ApplicationResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetApplicationDateRangeKpiResponse
	{
		
		/// <summary>
		/// Provides the results of a query that retrieved the data for a standard metric that applies to an application, and provides information about that query.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationDateRangeKpiResponse ApplicationDateRangeKpiResponse { get; set; }
	}
	
	/// <summary>
	/// Provides the results of a query that retrieved the data for a standard metric that applies to an application, and provides information about that query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationDateRangeKpiResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KpiName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BaseKpiResult KpiResult { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
	}
	
	/// <summary>
	/// Provides the results of a query that retrieved the data for a standard metric that applies to an application, campaign, or journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BaseKpiResult
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResultRow[] Rows { get; set; }
	}
	
	/// <summary>
	/// Provides the results of a query that retrieved the data for a standard metric that applies to an application, campaign, or journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResultRow
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResultRowValue[] GroupedBys { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResultRowValue[] Values { get; set; }
	}
	
	/// <summary>
	/// Provides a single value and metadata about that value as part of an array of query results for a standard metric that applies to an application, campaign, or journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResultRowValue
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetApplicationSettingsResponse
	{
		
		/// <summary>
		/// Provides information about an application, including the default settings for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationSettingsResource ApplicationSettingsResource { get; set; }
	}
	
	/// <summary>
	/// Provides information about an application, including the default settings for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationSettingsResource
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignHook CampaignHook { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignLimits Limits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuietTime QuietTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationSettingsJourneyLimits JourneyLimits { get; set; }
	}
	
	/// <summary>
	/// The default sending limits for journeys in the application. To override these limits and define custom limits for a specific journey, use the Journey resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationSettingsJourneyLimits
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DailyCap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JourneyTimeframeCap TimeframeCap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalCap { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAppsResponse
	{
		
		/// <summary>
		/// Provides information about all of your applications.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationsResponse ApplicationsResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about all of your applications.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationResponse[] Item { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetBaiduChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the Baidu (Baidu Cloud Push) channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BaiduChannelResponse BaiduChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCampaignResponse
	{
		
		/// <summary>
		/// Provides information about the status, configuration, and other settings for a campaign.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CampaignResponse CampaignResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCampaignActivitiesResponse
	{
		
		/// <summary>
		/// Provides information about the activities that were performed by a campaign.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActivitiesResponse ActivitiesResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the activities that were performed by a campaign.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActivitiesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ActivityResponse[] Item { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Provides information about an activity that was performed by a campaign.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActivityResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CampaignId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string End { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Result { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ScheduledStart { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Start { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SuccessfulEndpointCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TimezonesCompletedCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TimezonesTotalCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalEndpointCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TreatmentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string ExecutionMetrics { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCampaignDateRangeKpiResponse
	{
		
		/// <summary>
		/// Provides the results of a query that retrieved the data for a standard metric that applies to a campaign, and provides information about that query.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CampaignDateRangeKpiResponse CampaignDateRangeKpiResponse { get; set; }
	}
	
	/// <summary>
	/// Provides the results of a query that retrieved the data for a standard metric that applies to a campaign, and provides information about that query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CampaignDateRangeKpiResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CampaignId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KpiName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BaseKpiResult KpiResult { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCampaignVersionResponse
	{
		
		/// <summary>
		/// Provides information about the status, configuration, and other settings for a campaign.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CampaignResponse CampaignResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCampaignVersionsResponse
	{
		
		/// <summary>
		/// Provides information about the configuration and other settings for all the campaigns that are associated with an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CampaignsResponse CampaignsResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the configuration and other settings for all the campaigns that are associated with an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CampaignsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CampaignResponse[] Item { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCampaignsResponse
	{
		
		/// <summary>
		/// Provides information about the configuration and other settings for all the campaigns that are associated with an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CampaignsResponse CampaignsResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetChannelsResponse
	{
		
		/// <summary>
		/// Provides information about the general settings and status of all channels for an application, including channels that aren't enabled for the application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ChannelsResponse ChannelsResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the general settings and status of all channels for an application, including channels that aren't enabled for the application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChannelsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MapOfChannelResponse Channels { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOfChannelResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEmailChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the email channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EmailChannelResponse EmailChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEmailTemplateResponse
	{
		
		/// <summary>
		/// Provides information about the content and settings for a message template that can be used in messages that are sent through the email channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EmailTemplateResponse EmailTemplateResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the content and settings for a message template that can be used in messages that are sent through the email channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmailTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubstitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HtmlPart { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Subject { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TemplateType TemplateType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TextPart { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TemplateType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAIL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SMS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VOICE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUSH = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INAPP = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEndpointResponse
	{
		
		/// <summary>
		/// Provides information about the channel type and other settings for an endpoint.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EndpointResponse EndpointResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEventStreamResponse
	{
		
		/// <summary>
		/// Specifies settings for publishing event data to an Amazon Kinesis data stream or an Amazon Kinesis Data Firehose delivery stream.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EventStream EventStream { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetExportJobResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of a job that exports endpoint definitions to a file. The file can be added directly to an Amazon Simple Storage Service (Amazon S3) bucket by using the Amazon Pinpoint API or downloaded directly to a computer by using the Amazon Pinpoint console.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ExportJobResponse ExportJobResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetExportJobsResponse
	{
		
		/// <summary>
		/// Provides information about all the export jobs that are associated with an application or segment. An export job is a job that exports endpoint definitions to a file.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ExportJobsResponse ExportJobsResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about all the export jobs that are associated with an application or segment. An export job is a job that exports endpoint definitions to a file.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportJobsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ExportJobResponse[] Item { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetGcmChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the GCM channel for an application. The GCM channel enables Amazon Pinpoint to send push notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GCMChannelResponse GCMChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetImportJobResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of a job that imports endpoint definitions from one or more files. The files can be stored in an Amazon Simple Storage Service (Amazon S3) bucket or uploaded directly from a computer by using the Amazon Pinpoint console.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ImportJobResponse ImportJobResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetImportJobsResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of all the import jobs that are associated with an application or segment. An import job is a job that imports endpoint definitions from one or more files.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ImportJobsResponse ImportJobsResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status and settings of all the import jobs that are associated with an application or segment. An import job is a job that imports endpoint definitions from one or more files.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportJobsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ImportJobResponse[] Item { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetInAppMessagesResponse
	{
		
		/// <summary>
		/// Get in-app messages response object.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InAppMessagesResponse InAppMessagesResponse { get; set; }
	}
	
	/// <summary>
	/// Get in-app messages response object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InAppMessagesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InAppMessageCampaign[] InAppMessageCampaigns { get; set; }
	}
	
	/// <summary>
	/// Targeted in-app message campaign.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InAppMessageCampaign
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CampaignId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DailyCap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InAppMessage InAppMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Priority { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InAppCampaignSchedule Schedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SessionCap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TotalCap { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TreatmentId { get; set; }
	}
	
	/// <summary>
	/// Provides all fields required for building an in-app message.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InAppMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InAppMessageContent[] Content { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string CustomConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Layout Layout { get; set; }
	}
	
	/// <summary>
	/// Schedule of the campaign.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InAppCampaignSchedule
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EndDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignEventFilter EventFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuietTime QuietTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetInAppTemplateResponse
	{
		
		/// <summary>
		/// In-App Template Response.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InAppTemplateResponse InAppTemplateResponse { get; set; }
	}
	
	/// <summary>
	/// In-App Template Response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InAppTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InAppMessageContent[] Content { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string CustomConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Layout Layout { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TemplateType TemplateType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJourneyResponse
	{
		
		/// <summary>
		/// Provides information about the status, configuration, and other settings for a journey.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JourneyResponse JourneyResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJourneyDateRangeKpiResponse
	{
		
		/// <summary>
		/// Provides the results of a query that retrieved the data for a standard engagement metric that applies to a journey, and provides information about that query.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JourneyDateRangeKpiResponse JourneyDateRangeKpiResponse { get; set; }
	}
	
	/// <summary>
	/// Provides the results of a query that retrieved the data for a standard engagement metric that applies to a journey, and provides information about that query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JourneyDateRangeKpiResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string JourneyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KpiName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BaseKpiResult KpiResult { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJourneyExecutionActivityMetricsResponse
	{
		
		/// <summary>
		/// Provides the results of a query that retrieved the data for a standard execution metric that applies to a journey activity, and provides information about that query.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JourneyExecutionActivityMetricsResponse JourneyExecutionActivityMetricsResponse { get; set; }
	}
	
	/// <summary>
	/// Provides the results of a query that retrieved the data for a standard execution metric that applies to a journey activity, and provides information about that query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JourneyExecutionActivityMetricsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActivityType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string JourneyActivityId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string JourneyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastEvaluatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Metrics { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJourneyExecutionMetricsResponse
	{
		
		/// <summary>
		/// Provides the results of a query that retrieved the data for a standard execution metric that applies to a journey, and provides information about that query.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JourneyExecutionMetricsResponse JourneyExecutionMetricsResponse { get; set; }
	}
	
	/// <summary>
	/// Provides the results of a query that retrieved the data for a standard execution metric that applies to a journey, and provides information about that query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JourneyExecutionMetricsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string JourneyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastEvaluatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Metrics { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJourneyRunExecutionActivityMetricsResponse
	{
		
		/// <summary>
		/// Provides the results of a query that retrieved the data for a standard execution metric that applies to a journey activity for a particular journey run, and provides information about that query.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JourneyRunExecutionActivityMetricsResponse JourneyRunExecutionActivityMetricsResponse { get; set; }
	}
	
	/// <summary>
	/// Provides the results of a query that retrieved the data for a standard execution metric that applies to a journey activity for a particular journey run, and provides information about that query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JourneyRunExecutionActivityMetricsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ActivityType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string JourneyActivityId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string JourneyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastEvaluatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Metrics { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RunId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJourneyRunExecutionMetricsResponse
	{
		
		/// <summary>
		/// Provides the results of a query that retrieved the data for a standard execution metric that applies to a journey run, and provides information about that query.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JourneyRunExecutionMetricsResponse JourneyRunExecutionMetricsResponse { get; set; }
	}
	
	/// <summary>
	/// Provides the results of a query that retrieved the data for a standard execution metric that applies to a journey run, and provides information about that query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JourneyRunExecutionMetricsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string JourneyId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastEvaluatedTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Metrics { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RunId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJourneyRunsResponse
	{
		
		/// <summary>
		/// Provides information from all runs of a journey.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JourneyRunsResponse JourneyRunsResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information from all runs of a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JourneyRunsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JourneyRunResponse[] Item { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Provides information from a specified run of a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JourneyRunResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastUpdateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RunId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JourneyRunStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JourneyRunStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCHEDULED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetPushTemplateResponse
	{
		
		/// <summary>
		/// Provides information about the content and settings for a message template that can be used in messages that are sent through a push notification channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PushNotificationTemplateResponse PushNotificationTemplateResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the content and settings for a message template that can be used in messages that are sent through a push notification channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PushNotificationTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AndroidPushNotificationTemplate ADM { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public APNSPushNotificationTemplate APNS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AndroidPushNotificationTemplate Baidu { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DefaultPushNotificationTemplate Default { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubstitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AndroidPushNotificationTemplate GCM { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TemplateType TemplateType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetRecommenderConfigurationResponse
	{
		
		/// <summary>
		/// Provides information about Amazon Pinpoint configuration settings for retrieving and processing data from a recommender model.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RecommenderConfigurationResponse RecommenderConfigurationResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetRecommenderConfigurationsResponse
	{
		
		/// <summary>
		/// Provides information about all the recommender model configurations that are associated with your Amazon Pinpoint account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ListRecommenderConfigurationsResponse ListRecommenderConfigurationsResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about all the recommender model configurations that are associated with your Amazon Pinpoint account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRecommenderConfigurationsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RecommenderConfigurationResponse[] Item { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSegmentResponse
	{
		
		/// <summary>
		/// Provides information about the configuration, dimension, and other settings for a segment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SegmentResponse SegmentResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSegmentExportJobsResponse
	{
		
		/// <summary>
		/// Provides information about all the export jobs that are associated with an application or segment. An export job is a job that exports endpoint definitions to a file.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ExportJobsResponse ExportJobsResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSegmentImportJobsResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of all the import jobs that are associated with an application or segment. An import job is a job that imports endpoint definitions from one or more files.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ImportJobsResponse ImportJobsResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSegmentVersionResponse
	{
		
		/// <summary>
		/// Provides information about the configuration, dimension, and other settings for a segment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SegmentResponse SegmentResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSegmentVersionsResponse
	{
		
		/// <summary>
		/// Provides information about all the segments that are associated with an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SegmentsResponse SegmentsResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about all the segments that are associated with an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SegmentsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SegmentResponse[] Item { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSegmentsResponse
	{
		
		/// <summary>
		/// Provides information about all the segments that are associated with an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SegmentsResponse SegmentsResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSmsChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the SMS channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SMSChannelResponse SMSChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSmsTemplateResponse
	{
		
		/// <summary>
		/// Provides information about the content and settings for a message template that can be used in text messages that are sent through the SMS channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SMSTemplateResponse SMSTemplateResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the content and settings for a message template that can be used in text messages that are sent through the SMS channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SMSTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubstitutions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TemplateType TemplateType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetUserEndpointsResponse
	{
		
		/// <summary>
		/// Provides information about all the endpoints that are associated with a user ID.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EndpointsResponse EndpointsResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetVoiceChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the voice channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VoiceChannelResponse VoiceChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetVoiceTemplateResponse
	{
		
		/// <summary>
		/// Provides information about the content and settings for a message template that can be used in messages that are sent through the voice channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VoiceTemplateResponse VoiceTemplateResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the content and settings for a message template that can be used in messages that are sent through the voice channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VoiceTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubstitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TemplateType TemplateType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VoiceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListJourneysResponse
	{
		
		/// <summary>
		/// Provides information about the status, configuration, and other settings for all the journeys that are associated with an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JourneysResponse JourneysResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the status, configuration, and other settings for all the journeys that are associated with an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JourneysResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JourneyResponse[] Item { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		/// <summary>
		/// Specifies the tags (keys and values) for an application, campaign, message template, or segment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TagsModel TagsModel { get; set; }
	}
	
	/// <summary>
	/// Specifies the tags (keys and values) for an application, campaign, message template, or segment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagsModel
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTemplateVersionsResponse
	{
		
		/// <summary>
		/// Provides information about all the versions of a specific message template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TemplateVersionsResponse TemplateVersionsResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about all the versions of a specific message template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateVersionsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TemplateVersionResponse[] Item { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestID { get; set; }
	}
	
	/// <summary>
	/// Provides information about a specific version of a message template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateVersionResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubstitutions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTemplatesResponse
	{
		
		/// <summary>
		/// Provides information about all the message templates that are associated with your Amazon Pinpoint account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TemplatesResponse TemplatesResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about all the message templates that are associated with your Amazon Pinpoint account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplatesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TemplateResponse[] Item { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Provides information about a message template that's associated with your Amazon Pinpoint account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubstitutions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TemplateType TemplateType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhoneNumberValidateResponse
	{
		
		/// <summary>
		/// Provides information about a phone number.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NumberValidateResponse NumberValidateResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about a phone number.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumberValidateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Carrier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string City { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CleansedPhoneNumberE164 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CleansedPhoneNumberNational { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Country { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CountryCodeIso2 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CountryCodeNumeric { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string County { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OriginalCountryCodeIso2 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OriginalPhoneNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PhoneTypeCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Timezone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ZipCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutEventStreamResponse
	{
		
		/// <summary>
		/// Specifies settings for publishing event data to an Amazon Kinesis data stream or an Amazon Kinesis Data Firehose delivery stream.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EventStream EventStream { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutEventsResponse
	{
		
		/// <summary>
		/// Provides information about endpoints and the events that they're associated with.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EventsResponse EventsResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about endpoints and the events that they're associated with.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfItemResponse Results { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOfItemResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOfEventsBatch
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveAttributesResponse
	{
		
		/// <summary>
		/// Provides information about the type and the names of attributes that were removed from all the endpoints that are associated with an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AttributesResource AttributesResource { get; set; }
	}
	
	/// <summary>
	/// Provides information about the type and the names of attributes that were removed from all the endpoints that are associated with an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AttributesResource
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AttributeType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Attributes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendMessagesResponse
	{
		
		/// <summary>
		/// Provides information about the results of a request to send a message to an endpoint address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MessageResponse MessageResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about the results of a request to send a message to an endpoint address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MessageResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfEndpointMessageResult EndpointResult { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfMessageResult Result { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOfEndpointMessageResult
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOfMessageResult
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOfAddressConfiguration
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOfEndpointSendConfiguration
	{
	}
	
	/// <summary>
	/// Specifies the settings and content for the default message and any default messages that you tailored for specific channels.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DirectMessageConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ADMMessage ADMMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public APNSMessage APNSMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BaiduMessage BaiduMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DefaultMessage DefaultMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DefaultPushNotificationMessage DefaultPushNotificationMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EmailMessage EmailMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GCMMessage GCMMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SMSMessage SMSMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VoiceMessage VoiceMessage { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for a one-time message that's sent directly to an endpoint through the ADM (Amazon Device Messaging) channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ADMMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConsolidationKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Data { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExpiresAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IconReference { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageIconUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MD5 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RawContent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SilentPush { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SmallImageIconUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Sound { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOf__string Substitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for a one-time message that's sent directly to an endpoint through the APNs (Apple Push Notification service) channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class APNSMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string APNSPushType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Badge { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Category { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CollapseId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Data { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MediaUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredAuthenticationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Priority { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RawContent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SilentPush { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Sound { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOf__string Substitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ThreadId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TimeToLive { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for a one-time message that's sent directly to an endpoint through the Baidu (Baidu Cloud Push) channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BaiduMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Data { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IconReference { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageIconUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RawContent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SilentPush { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SmallImageIconUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Sound { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOf__string Substitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TimeToLive { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Specifies the default message for all channels.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOf__string Substitutions { get; set; }
	}
	
	/// <summary>
	/// Specifies the default settings and content for a push notification that's sent directly to an endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultPushNotificationMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Data { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SilentPush { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOf__string Substitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Specifies the default settings and content for a one-time email message that's sent directly to an endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmailMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeedbackForwardingAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FromAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RawEmail RawEmail { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ReplyToAddresses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SimpleEmail SimpleEmail { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOf__string Substitutions { get; set; }
	}
	
	/// <summary>
	/// Specifies the contents of an email message, represented as a raw MIME message.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RawEmail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Data { get; set; }
	}
	
	/// <summary>
	/// Specifies the contents of an email message, composed of a subject, a text part, and an HTML part.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SimpleEmail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SimpleEmailPart HtmlPart { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SimpleEmailPart Subject { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SimpleEmailPart TextPart { get; set; }
	}
	
	/// <summary>
	/// Specifies the subject or body of an email message, represented as textual email data and the applicable character set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SimpleEmailPart
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Charset { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Data { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for a one-time message that's sent directly to an endpoint through the GCM channel. The GCM channel enables Amazon Pinpoint to send messages to the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GCMMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Action Action { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CollapseKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Data { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IconReference { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageIconUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PreferredAuthenticationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Priority { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RawContent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RestrictedPackageName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SilentPush { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SmallImageIconUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Sound { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOf__string Substitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TimeToLive { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Specifies the default settings for a one-time SMS message that's sent directly to an endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SMSMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Keyword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MediaUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MessageType MessageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OriginationNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOf__string Substitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EntityId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateId { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for a one-time voice message that's sent directly to an endpoint through the voice channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VoiceMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LanguageCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OriginationNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOf__string Substitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VoiceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendOTPMessageResponse
	{
		
		/// <summary>
		/// Provides information about the results of a request to send a message to an endpoint address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MessageResponse MessageResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendUsersMessagesResponse
	{
		
		/// <summary>
		/// Provides information about which users and endpoints a message was sent to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SendUsersMessageResponse SendUsersMessageResponse { get; set; }
	}
	
	/// <summary>
	/// Provides information about which users and endpoints a message was sent to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendUsersMessageResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfMapOfEndpointMessageResult Result { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOfMapOfEndpointMessageResult
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAdmChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the ADM (Amazon Device Messaging) channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ADMChannelResponse ADMChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateApnsChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the APNs (Apple Push Notification service) channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public APNSChannelResponse APNSChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateApnsSandboxChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the APNs (Apple Push Notification service) sandbox channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public APNSSandboxChannelResponse APNSSandboxChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateApnsVoipChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the APNs (Apple Push Notification service) VoIP channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public APNSVoipChannelResponse APNSVoipChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateApnsVoipSandboxChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the APNs (Apple Push Notification service) VoIP sandbox channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public APNSVoipSandboxChannelResponse APNSVoipSandboxChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateApplicationSettingsResponse
	{
		
		/// <summary>
		/// Provides information about an application, including the default settings for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationSettingsResource ApplicationSettingsResource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateBaiduChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the Baidu (Baidu Cloud Push) channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BaiduChannelResponse BaiduChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateCampaignResponse
	{
		
		/// <summary>
		/// Provides information about the status, configuration, and other settings for a campaign.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CampaignResponse CampaignResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEmailChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the email channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EmailChannelResponse EmailChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEmailTemplateResponse
	{
		
		/// <summary>
		/// Provides information about an API request or response.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MessageBody MessageBody { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEndpointResponse
	{
		
		/// <summary>
		/// Provides information about an API request or response.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MessageBody MessageBody { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ChannelType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUSH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GCM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APNS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APNS_SANDBOX = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APNS_VOIP = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APNS_VOIP_SANDBOX = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADM = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SMS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VOICE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAIL = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BAIDU = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_APP = 12,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEndpointsBatchResponse
	{
		
		/// <summary>
		/// Provides information about an API request or response.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MessageBody MessageBody { get; set; }
	}
	
	/// <summary>
	/// Specifies an endpoint to create or update and the settings and attributes to set or change for the endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndpointBatchItem
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOf__string Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__EndpointTypesElement ChannelType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointDemographic Demographic { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EffectiveDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EndpointStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointLocation Location { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__double Metrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptOut { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointUser User { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateGcmChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the GCM channel for an application. The GCM channel enables Amazon Pinpoint to send push notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GCMChannelResponse GCMChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateInAppTemplateResponse
	{
		
		/// <summary>
		/// Provides information about an API request or response.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MessageBody MessageBody { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateJourneyResponse
	{
		
		/// <summary>
		/// Provides information about the status, configuration, and other settings for a journey.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JourneyResponse JourneyResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConflictException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateJourneyStateResponse
	{
		
		/// <summary>
		/// Provides information about the status, configuration, and other settings for a journey.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JourneyResponse JourneyResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdatePushTemplateResponse
	{
		
		/// <summary>
		/// Provides information about an API request or response.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MessageBody MessageBody { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateRecommenderConfigurationResponse
	{
		
		/// <summary>
		/// Provides information about Amazon Pinpoint configuration settings for retrieving and processing data from a recommender model.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RecommenderConfigurationResponse RecommenderConfigurationResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateSegmentResponse
	{
		
		/// <summary>
		/// Provides information about the configuration, dimension, and other settings for a segment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SegmentResponse SegmentResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateSmsChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the SMS channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SMSChannelResponse SMSChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateSmsTemplateResponse
	{
		
		/// <summary>
		/// Provides information about an API request or response.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MessageBody MessageBody { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTemplateActiveVersionResponse
	{
		
		/// <summary>
		/// Provides information about an API request or response.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MessageBody MessageBody { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateVoiceChannelResponse
	{
		
		/// <summary>
		/// Provides information about the status and settings of the voice channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VoiceChannelResponse VoiceChannelResponse { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateVoiceTemplateResponse
	{
		
		/// <summary>
		/// Provides information about an API request or response.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MessageBody MessageBody { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VerifyOTPMessageResponse
	{
		
		/// <summary>
		/// Verify OTP Message Response.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VerificationResponse VerificationResponse { get; set; }
	}
	
	/// <summary>
	/// Verify OTP Message Response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VerificationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Valid { get; set; }
	}
	
	/// <summary>
	/// Specifies the status and settings of the ADM (Amazon Device Messaging) channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ADMChannelRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClientId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClientSecret { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	/// <summary>
	/// Specifies the status and settings of the APNs (Apple Push Notification service) channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class APNSChannelRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BundleId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Certificate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAuthenticationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrivateKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TeamId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TokenKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TokenKeyId { get; set; }
	}
	
	/// <summary>
	/// Specifies the status and settings of the APNs (Apple Push Notification service) sandbox channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class APNSSandboxChannelRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BundleId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Certificate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAuthenticationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrivateKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TeamId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TokenKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TokenKeyId { get; set; }
	}
	
	/// <summary>
	/// Specifies the status and settings of the APNs (Apple Push Notification service) VoIP channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class APNSVoipChannelRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BundleId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Certificate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAuthenticationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrivateKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TeamId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TokenKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TokenKeyId { get; set; }
	}
	
	/// <summary>
	/// Specifies the status and settings of the APNs (Apple Push Notification service) VoIP sandbox channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class APNSVoipSandboxChannelRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BundleId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Certificate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAuthenticationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrivateKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TeamId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TokenKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TokenKeyId { get; set; }
	}
	
	/// <summary>
	/// The settings for a custom message activity. This type of activity calls an AWS Lambda function or web hook that sends messages to participants.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomMessageActivity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DeliveryUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__EndpointTypesElement[] EndpointTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JourneyCustomMessage MessageConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextActivity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateVersion { get; set; }
	}
	
	/// <summary>
	/// Specifies the message content for a custom channel message that's sent to participants in a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JourneyCustomMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Data { get; set; }
	}
	
	/// <summary>
	/// <p>Specifies the settings for a yes/no split activity in a journey. This type of activity sends participants down one of two paths in a journey, based on conditions that you specify.</p> <note><p>To create yes/no split activities that send participants down different paths based on push notification events (such as Open or Received events), your mobile app has to specify the User ID and Endpoint ID values. For more information, see <a href="https://docs.aws.amazon.com/pinpoint/latest/developerguide/integrate.html">Integrating Amazon Pinpoint with your application</a> in the <i>Amazon Pinpoint Developer Guide</i>.</p></note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConditionalSplitActivity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Condition Condition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WaitTime EvaluationWaitTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FalseActivity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TrueActivity { get; set; }
	}
	
	/// <summary>
	/// Specifies the conditions to evaluate for an activity in a journey, and how to evaluate those conditions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Condition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SimpleCondition[] Conditions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Operator Operator { get; set; }
	}
	
	/// <summary>
	/// Specifies a condition to evaluate for an activity in a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SimpleCondition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EventCondition EventCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentCondition SegmentCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentDimensions SegmentDimensions { get; set; }
	}
	
	/// <summary>
	/// Specifies the conditions to evaluate for an event that applies to an activity in a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventCondition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EventDimensions Dimensions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MessageActivity { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Operator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANY = 1,
	}
	
	/// <summary>
	/// Specifies a duration or a date and time that indicates when Amazon Pinpoint determines whether an activity's conditions have been met or an activity moves participants to the next activity in a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WaitTime
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string WaitFor { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WaitUntil { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for an email activity in a journey. This type of activity sends an email message to participants.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmailMessageActivity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public JourneyEmailMessage MessageConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextActivity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateVersion { get; set; }
	}
	
	/// <summary>
	/// Specifies the "From" address for an email message that's sent to participants in a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JourneyEmailMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FromAddress { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for a holdout activity in a journey. This type of activity stops a journey for a specified percentage of participants.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HoldoutActivity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextActivity { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Percentage { get; set; }
	}
	
	/// <summary>
	/// <p>Specifies the settings for a multivariate split activity in a journey. This type of activity sends participants down one of as many as five paths (including a default <i>Else</i> path) in a journey, based on conditions that you specify.</p> <note><p>To create multivariate split activities that send participants down different paths based on push notification events (such as Open or Received events), your mobile app has to specify the User ID and Endpoint ID values. For more information, see <a href="https://docs.aws.amazon.com/pinpoint/latest/developerguide/integrate.html">Integrating Amazon Pinpoint with your application</a> in the <i>Amazon Pinpoint Developer Guide</i>.</p></note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MultiConditionalSplitActivity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MultiConditionalBranch[] Branches { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultActivity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WaitTime EvaluationWaitTime { get; set; }
	}
	
	/// <summary>
	/// Specifies a condition to evaluate for an activity path in a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MultiConditionalBranch
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SimpleCondition Condition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextActivity { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for a push notification activity in a journey. This type of activity sends a push notification to participants.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PushMessageActivity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public JourneyPushMessage MessageConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextActivity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateVersion { get; set; }
	}
	
	/// <summary>
	/// Specifies the message configuration for a push notification that's sent to participants in a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JourneyPushMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TimeToLive { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for a random split activity in a journey. This type of activity randomly sends specified percentages of participants down one of as many as five paths in a journey, based on conditions that you specify.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RandomSplitActivity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RandomSplitEntry[] Branches { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for a path in a random split activity in a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RandomSplitEntry
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextActivity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Percentage { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for an SMS activity in a journey. This type of activity sends a text message to participants.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SMSMessageActivity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public JourneySMSMessage MessageConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextActivity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateVersion { get; set; }
	}
	
	/// <summary>
	/// Specifies the sender ID and message type for an SMS message that's sent to participants in a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JourneySMSMessage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MessageType MessageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OriginationNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EntityId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateId { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for a wait activity in a journey. This type of activity waits for a certain amount of time or until a specific date and time before moving participants to the next activity in a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WaitActivity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextActivity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WaitTime WaitTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContactCenterActivity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextActivity { get; set; }
	}
	
	/// <summary>
	/// Specifies the configuration and other settings for an activity in a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Activity
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CustomMessageActivity CUSTOM { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ConditionalSplitActivity ConditionalSplit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EmailMessageActivity EMAIL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HoldoutActivity Holdout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MultiConditionalSplitActivity MultiCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PushMessageActivity PUSH { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RandomSplitActivity RandomSplit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SMSMessageActivity SMS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public WaitActivity Wait { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactCenterActivity ContactCenter { get; set; }
	}
	
	/// <summary>
	/// Specifies address-based configuration settings for a message that's sent directly to an endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddressConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BodyOverride { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__EndpointTypesElement ChannelType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Context { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RawContent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOf__string Substitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TitleOverride { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AttributeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INCLUSIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXCLUSIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTAINS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BEFORE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AFTER = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ON = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BETWEEN = 6,
	}
	
	/// <summary>
	/// Specifies attribute-based criteria for including or excluding endpoints from a segment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AttributeDimension
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AttributeType AttributeType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Values { get; set; }
	}
	
	/// <summary>
	/// Specifies the status and settings of the Baidu (Baidu Cloud Push) channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BaiduChannelRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApiKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecretKey { get; set; }
	}
	
	/// <summary>
	/// Provides information about the general settings and status of a channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ChannelResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> HasCredential { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsArchived { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	/// <summary>
	/// Specifies the display name of an application and the tags to associate with the application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateApplicationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAppRequest
	{
		
		/// <summary>
		/// Specifies the display name of an application and the tags to associate with the application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateApplicationRequest CreateApplicationRequest { get; set; }
	}
	
	/// <summary>
	/// Specifies the configuration and other settings for a campaign.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WriteCampaignRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WriteTreatmentResource[] AdditionalTreatments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomDeliveryConfiguration CustomDeliveryConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> HoldoutPercent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignHook Hook { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsPaused { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignLimits Limits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MessageConfiguration MessageConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Schedule Schedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SegmentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SegmentVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateConfiguration TemplateConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TreatmentDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TreatmentName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Priority { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateCampaignRequest
	{
		
		/// <summary>
		/// Specifies the configuration and other settings for a campaign.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public WriteCampaignRequest WriteCampaignRequest { get; set; }
	}
	
	/// <summary>
	/// Specifies the content and settings for a message template that can be used in messages that are sent through the email channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmailTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubstitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HtmlPart { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Subject { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TextPart { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEmailTemplateRequest
	{
		
		/// <summary>
		/// Specifies the content and settings for a message template that can be used in messages that are sent through the email channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EmailTemplateRequest EmailTemplateRequest { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for a job that exports endpoint definitions to an Amazon Simple Storage Service (Amazon S3) bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExportJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3UrlPrefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SegmentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SegmentVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateExportJobRequest
	{
		
		/// <summary>
		/// Specifies the settings for a job that exports endpoint definitions to an Amazon Simple Storage Service (Amazon S3) bucket.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ExportJobRequest ExportJobRequest { get; set; }
	}
	
	/// <summary>
	/// Specifies the settings for a job that imports endpoint definitions from an Amazon Simple Storage Service (Amazon S3) bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportJobRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DefineSegment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExternalId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Format Format { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RegisterEndpoints { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3Url { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SegmentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SegmentName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateImportJobRequest
	{
		
		/// <summary>
		/// Specifies the settings for a job that imports endpoint definitions from an Amazon Simple Storage Service (Amazon S3) bucket.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ImportJobRequest ImportJobRequest { get; set; }
	}
	
	/// <summary>
	/// InApp Template Request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InAppTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InAppMessageContent[] Content { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string CustomConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Layout Layout { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateInAppTemplateRequest
	{
		
		/// <summary>
		/// InApp Template Request.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InAppTemplateRequest InAppTemplateRequest { get; set; }
	}
	
	/// <summary>
	/// Specifies the configuration and other settings for a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WriteJourneyRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfActivity Activities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JourneyLimits Limits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> LocalTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuietTime QuietTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RefreshFrequency { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JourneySchedule Schedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StartActivity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StartCondition StartCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public State State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> WaitForQuietTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RefreshOnSegmentUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JourneyChannelSettings JourneyChannelSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SendingSchedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OpenHours OpenHours { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClosedDays ClosedDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__TimezoneEstimationMethodsElement[] TimezoneEstimationMethods { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateJourneyRequest
	{
		
		/// <summary>
		/// Specifies the configuration and other settings for a journey.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public WriteJourneyRequest WriteJourneyRequest { get; set; }
	}
	
	/// <summary>
	/// Specifies the content and settings for a message template that can be used in messages that are sent through a push notification channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PushNotificationTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AndroidPushNotificationTemplate ADM { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public APNSPushNotificationTemplate APNS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AndroidPushNotificationTemplate Baidu { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DefaultPushNotificationTemplate Default { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubstitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AndroidPushNotificationTemplate GCM { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreatePushTemplateRequest
	{
		
		/// <summary>
		/// Specifies the content and settings for a message template that can be used in messages that are sent through a push notification channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PushNotificationTemplateRequest PushNotificationTemplateRequest { get; set; }
	}
	
	/// <summary>
	/// Specifies Amazon Pinpoint configuration settings for retrieving and processing recommendation data from a recommender model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateRecommenderConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationProviderIdType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationProviderRoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationProviderUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationTransformerUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationsDisplayName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RecommendationsPerMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateRecommenderConfigurationRequest
	{
		
		/// <summary>
		/// Specifies Amazon Pinpoint configuration settings for retrieving and processing recommendation data from a recommender model.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateRecommenderConfiguration CreateRecommenderConfiguration { get; set; }
	}
	
	/// <summary>
	/// Specifies the configuration, dimension, and other settings for a segment. A WriteSegmentRequest object can include a Dimensions object or a SegmentGroups object, but not both.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WriteSegmentRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentDimensions Dimensions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentGroupList SegmentGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSegmentRequest
	{
		
		/// <summary>
		/// Specifies the configuration, dimension, and other settings for a segment. A WriteSegmentRequest object can include a Dimensions object or a SegmentGroups object, but not both.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public WriteSegmentRequest WriteSegmentRequest { get; set; }
	}
	
	/// <summary>
	/// Specifies the content and settings for a message template that can be used in text messages that are sent through the SMS channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SMSTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubstitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSmsTemplateRequest
	{
		
		/// <summary>
		/// Specifies the content and settings for a message template that can be used in text messages that are sent through the SMS channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SMSTemplateRequest SMSTemplateRequest { get; set; }
	}
	
	/// <summary>
	/// Specifies the content and settings for a message template that can be used in messages that are sent through the voice channel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VoiceTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubstitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LanguageCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VoiceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateVoiceTemplateRequest
	{
		
		/// <summary>
		/// Specifies the content and settings for a message template that can be used in messages that are sent through the voice channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VoiceTemplateRequest VoiceTemplateRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAdmChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApnsChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApnsSandboxChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApnsVoipChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApnsVoipSandboxChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAppRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteBaiduChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteCampaignRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEmailChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEmailTemplateRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEndpointRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEventStreamRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteGcmChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteInAppTemplateRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteJourneyRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeletePushTemplateRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteRecommenderConfigurationRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSegmentRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSmsChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSmsTemplateRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteUserEndpointsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteVoiceChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteVoiceTemplateRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeliveryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESSFUL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THROTTLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEMPORARY_FAILURE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERMANENT_FAILURE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN_FAILURE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPT_OUT = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DUPLICATE = 6,
	}
	
	/// <summary>
	/// Specifies the status and settings of the email channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmailChannelRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationSet { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FromAddress { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Identity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	/// <summary>
	/// Specifies a batch of endpoints to create or update and the settings and attributes to set or change for each endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndpointBatchRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EndpointBatchItem[] Item { get; set; }
	}
	
	/// <summary>
	/// Provides the status code and message that result from processing data for an endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndpointItemResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StatusCode { get; set; }
	}
	
	/// <summary>
	/// Provides information about the delivery status and results of sending a message directly to an endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndpointMessageResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DeliveryStatus DeliveryStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MessageId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int StatusCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UpdatedToken { get; set; }
	}
	
	/// <summary>
	/// Specifies the channel type and other settings for an endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndpointRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOf__string Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__EndpointTypesElement ChannelType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointDemographic Demographic { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EffectiveDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EndpointStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointLocation Location { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__double Metrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptOut { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointUser User { get; set; }
	}
	
	/// <summary>
	/// Specifies the content, including message variables and attributes, to use in a message that's sent directly to an endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndpointSendConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BodyOverride { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Context { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RawContent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOf__string Substitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TitleOverride { get; set; }
	}
	
	/// <summary>
	/// Provides information about a session.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Session
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Duration { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StartTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StopTimestamp { get; set; }
	}
	
	/// <summary>
	/// Specifies information about an event that reports data to Amazon Pinpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Event
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AppPackageName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AppTitle { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AppVersionCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientSdkVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EventType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__double Metrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SdkName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Session Session { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Timestamp { get; set; }
	}
	
	/// <summary>
	/// Provides the status code and message that result from processing an event.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventItemResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StatusCode { get; set; }
	}
	
	/// <summary>
	/// Specifies the properties and attributes of an endpoint that's associated with an event.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PublicEndpoint
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOf__string Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__EndpointTypesElement ChannelType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointDemographic Demographic { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EffectiveDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EndpointStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointLocation Location { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__double Metrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptOut { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointUser User { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOfEvent
	{
	}
	
	/// <summary>
	/// Specifies a batch of endpoints and events to process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventsBatch
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PublicEndpoint Endpoint { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MapOfEvent Events { get; set; }
	}
	
	/// <summary>
	/// Specifies a batch of events to process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MapOfEventsBatch BatchItem { get; set; }
	}
	
	/// <summary>
	/// Specifies the status and settings of the GCM channel for an application. This channel enables Amazon Pinpoint to send push notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GCMChannelRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAuthenticationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServiceJson { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAdmChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetApnsChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetApnsSandboxChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetApnsVoipChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetApnsVoipSandboxChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAppRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetApplicationDateRangeKpiRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetApplicationSettingsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAppsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetBaiduChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCampaignActivitiesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCampaignDateRangeKpiRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCampaignRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCampaignVersionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCampaignVersionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCampaignsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetChannelsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEmailChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEmailTemplateRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEndpointRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEventStreamRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetExportJobRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetExportJobsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetGcmChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetImportJobRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetImportJobsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetInAppMessagesRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetInAppTemplateRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJourneyDateRangeKpiRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJourneyExecutionActivityMetricsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJourneyExecutionMetricsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJourneyRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJourneyRunExecutionActivityMetricsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJourneyRunExecutionMetricsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetJourneyRunsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetPushTemplateRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetRecommenderConfigurationRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetRecommenderConfigurationsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSegmentExportJobsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSegmentImportJobsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSegmentRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSegmentVersionRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSegmentVersionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSegmentsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSmsChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSmsTemplateRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetUserEndpointsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetVoiceChannelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetVoiceTemplateRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Include
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MapOfEventItemResponse
	{
	}
	
	/// <summary>
	/// Provides information about the results of a request to create or update an endpoint that's associated with an event.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ItemResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointItemResponse EndpointItemResponse { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfEventItemResponse EventsItemResponse { get; set; }
	}
	
	/// <summary>
	/// Changes the status of a journey.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JourneyStateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public State State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListJourneysRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTemplateVersionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTemplatesRequest
	{
	}
	
	/// <summary>
	/// Specifies the configuration and other settings for a message.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MessageRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfAddressConfiguration Addresses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Context { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfEndpointSendConfiguration Endpoints { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DirectMessageConfiguration MessageConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateConfiguration TemplateConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TraceId { get; set; }
	}
	
	/// <summary>
	/// Provides information about the results of sending a message directly to an endpoint address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MessageResult
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DeliveryStatus DeliveryStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MessageId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int StatusCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UpdatedToken { get; set; }
	}
	
	/// <summary>
	/// Specifies metric-based criteria for including or excluding endpoints from a segment. These criteria derive from custom metrics that you define for endpoints.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MetricDimension
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ComparisonOperator { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double Value { get; set; }
	}
	
	/// <summary>
	/// Specifies a phone number to validate and retrieve information about.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NumberValidateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string IsoCountryCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PhoneNumberValidateRequest
	{
		
		/// <summary>
		/// Specifies a phone number to validate and retrieve information about.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NumberValidateRequest NumberValidateRequest { get; set; }
	}
	
	/// <summary>
	/// Specifies the Amazon Resource Name (ARN) of an event stream to publish events to and the AWS Identity and Access Management (IAM) role to use when publishing those events.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WriteEventStream
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DestinationStreamArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutEventStreamRequest
	{
		
		/// <summary>
		/// Specifies the Amazon Resource Name (ARN) of an event stream to publish events to and the AWS Identity and Access Management (IAM) role to use when publishing those events.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public WriteEventStream WriteEventStream { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutEventsRequest
	{
		
		/// <summary>
		/// Specifies a batch of events to process.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EventsRequest EventsRequest { get; set; }
	}
	
	/// <summary>
	/// Specifies one or more attributes to remove from all the endpoints that are associated with an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAttributesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Blacklist { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveAttributesRequest
	{
		
		/// <summary>
		/// Specifies one or more attributes to remove from all the endpoints that are associated with an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateAttributesRequest UpdateAttributesRequest { get; set; }
	}
	
	/// <summary>
	/// Specifies the status and settings of the SMS channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SMSChannelRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ShortCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendMessagesRequest
	{
		
		/// <summary>
		/// Specifies the configuration and other settings for a message.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MessageRequest MessageRequest { get; set; }
	}
	
	/// <summary>
	/// Send OTP message request parameters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendOTPMessageRequestParameters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllowedAttempts { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BrandName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Channel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CodeLength { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DestinationIdentity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EntityId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Language { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OriginationIdentity { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReferenceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ValidityPeriod { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendOTPMessageRequest
	{
		
		/// <summary>
		/// Send OTP message request parameters.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SendOTPMessageRequestParameters SendOTPMessageRequestParameters { get; set; }
	}
	
	/// <summary>
	/// Specifies the configuration and other settings for a message to send to all the endpoints that are associated with a list of users.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendUsersMessageRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Context { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DirectMessageConfiguration MessageConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateConfiguration TemplateConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TraceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MapOfEndpointSendConfiguration Users { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendUsersMessagesRequest
	{
		
		/// <summary>
		/// Specifies the configuration and other settings for a message to send to all the endpoints that are associated with a list of users.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SendUsersMessageRequest SendUsersMessageRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Specifies the tags (keys and values) for an application, campaign, message template, or segment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TagsModel TagsModel { get; set; }
	}
	
	/// <summary>
	/// Specifies which version of a message template to use as the active version of the template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TemplateActiveVersionRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAdmChannelRequest
	{
		
		/// <summary>
		/// Specifies the status and settings of the ADM (Amazon Device Messaging) channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ADMChannelRequest ADMChannelRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateApnsChannelRequest
	{
		
		/// <summary>
		/// Specifies the status and settings of the APNs (Apple Push Notification service) channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public APNSChannelRequest APNSChannelRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateApnsSandboxChannelRequest
	{
		
		/// <summary>
		/// Specifies the status and settings of the APNs (Apple Push Notification service) sandbox channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public APNSSandboxChannelRequest APNSSandboxChannelRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateApnsVoipChannelRequest
	{
		
		/// <summary>
		/// Specifies the status and settings of the APNs (Apple Push Notification service) VoIP channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public APNSVoipChannelRequest APNSVoipChannelRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateApnsVoipSandboxChannelRequest
	{
		
		/// <summary>
		/// Specifies the status and settings of the APNs (Apple Push Notification service) VoIP sandbox channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public APNSVoipSandboxChannelRequest APNSVoipSandboxChannelRequest { get; set; }
	}
	
	/// <summary>
	/// Specifies the default settings for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class WriteApplicationSettingsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignHook CampaignHook { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CloudWatchMetricsEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EventTaggingEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignLimits Limits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuietTime QuietTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationSettingsJourneyLimits JourneyLimits { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateApplicationSettingsRequest
	{
		
		/// <summary>
		/// Specifies the default settings for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public WriteApplicationSettingsRequest WriteApplicationSettingsRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateBaiduChannelRequest
	{
		
		/// <summary>
		/// Specifies the status and settings of the Baidu (Baidu Cloud Push) channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BaiduChannelRequest BaiduChannelRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateCampaignRequest
	{
		
		/// <summary>
		/// Specifies the configuration and other settings for a campaign.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public WriteCampaignRequest WriteCampaignRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEmailChannelRequest
	{
		
		/// <summary>
		/// Specifies the status and settings of the email channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EmailChannelRequest EmailChannelRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEmailTemplateRequest
	{
		
		/// <summary>
		/// Specifies the content and settings for a message template that can be used in messages that are sent through the email channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EmailTemplateRequest EmailTemplateRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEndpointRequest
	{
		
		/// <summary>
		/// Specifies the channel type and other settings for an endpoint.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EndpointRequest EndpointRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEndpointsBatchRequest
	{
		
		/// <summary>
		/// Specifies a batch of endpoints to create or update and the settings and attributes to set or change for each endpoint.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EndpointBatchRequest EndpointBatchRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateGcmChannelRequest
	{
		
		/// <summary>
		/// Specifies the status and settings of the GCM channel for an application. This channel enables Amazon Pinpoint to send push notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GCMChannelRequest GCMChannelRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateInAppTemplateRequest
	{
		
		/// <summary>
		/// InApp Template Request.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InAppTemplateRequest InAppTemplateRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateJourneyRequest
	{
		
		/// <summary>
		/// Specifies the configuration and other settings for a journey.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public WriteJourneyRequest WriteJourneyRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateJourneyStateRequest
	{
		
		/// <summary>
		/// Changes the status of a journey.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JourneyStateRequest JourneyStateRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdatePushTemplateRequest
	{
		
		/// <summary>
		/// Specifies the content and settings for a message template that can be used in messages that are sent through a push notification channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PushNotificationTemplateRequest PushNotificationTemplateRequest { get; set; }
	}
	
	/// <summary>
	/// Specifies Amazon Pinpoint configuration settings for retrieving and processing recommendation data from a recommender model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateRecommenderConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationProviderIdType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationProviderRoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationProviderUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationTransformerUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationsDisplayName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RecommendationsPerMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateRecommenderConfigurationRequest
	{
		
		/// <summary>
		/// Specifies Amazon Pinpoint configuration settings for retrieving and processing recommendation data from a recommender model.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateRecommenderConfiguration UpdateRecommenderConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateSegmentRequest
	{
		
		/// <summary>
		/// Specifies the configuration, dimension, and other settings for a segment. A WriteSegmentRequest object can include a Dimensions object or a SegmentGroups object, but not both.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public WriteSegmentRequest WriteSegmentRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateSmsChannelRequest
	{
		
		/// <summary>
		/// Specifies the status and settings of the SMS channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SMSChannelRequest SMSChannelRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateSmsTemplateRequest
	{
		
		/// <summary>
		/// Specifies the content and settings for a message template that can be used in text messages that are sent through the SMS channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SMSTemplateRequest SMSTemplateRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateTemplateActiveVersionRequest
	{
		
		/// <summary>
		/// Specifies which version of a message template to use as the active version of the template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TemplateActiveVersionRequest TemplateActiveVersionRequest { get; set; }
	}
	
	/// <summary>
	/// Specifies the status and settings of the voice channel for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VoiceChannelRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateVoiceChannelRequest
	{
		
		/// <summary>
		/// Specifies the status and settings of the voice channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VoiceChannelRequest VoiceChannelRequest { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateVoiceTemplateRequest
	{
		
		/// <summary>
		/// Specifies the content and settings for a message template that can be used in messages that are sent through the voice channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VoiceTemplateRequest VoiceTemplateRequest { get; set; }
	}
	
	/// <summary>
	/// Verify OTP message request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VerifyOTPMessageRequestParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DestinationIdentity { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Otp { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReferenceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VerifyOTPMessageRequest
	{
		
		/// <summary>
		/// Verify OTP message request.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VerifyOTPMessageRequestParameters VerifyOTPMessageRequestParameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DayOfWeek
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONDAY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TUESDAY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEDNESDAY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THURSDAY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FRIDAY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SATURDAY = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUNDAY = 6,
	}
	
	/// <summary>
	/// Specifies the start and end time for OpenHours.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OpenHoursRule
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EndTime { get; set; }
	}
	
	/// <summary>
	/// Specifies the rule settings for when messages can't be sent.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClosedDaysRule
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StartDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EndDateTime { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Creates an application.</p>
		/// CreateApp v1/apps
		/// </summary>
		public async Task CreateAppAsync(CreateAppPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about all the applications that are associated with your Amazon Pinpoint account.
		/// GetApps v1/apps
		/// </summary>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="token">The NextToken string that specifies which page of results to return in a paginated response.</param>
		/// <returns>Success</returns>
		public async Task<GetAppsResponse> GetAppsAsync(string page_size, string token, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps?page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size))+"&token=" + (token==null? "" : System.Uri.EscapeDataString(token));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetAppsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new campaign for an application or updates the settings of an existing campaign for an application.
		/// CreateCampaign v1/apps/{application_id}/campaigns
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		public async Task CreateCampaignAsync(string application_id, CreateCampaignPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/campaigns";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status, configuration, and other settings for all the campaigns that are associated with an application.
		/// GetCampaigns v1/apps/{application_id}/campaigns
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="token">The NextToken string that specifies which page of results to return in a paginated response.</param>
		/// <returns>Success</returns>
		public async Task<GetCampaignsResponse> GetCampaignsAsync(string application_id, string page_size, string token, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/campaigns?page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size))+"&token=" + (token==null? "" : System.Uri.EscapeDataString(token));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCampaignsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a message template for messages that are sent through the email channel.
		/// CreateEmailTemplate v1/templates/{template_name}/email
		/// </summary>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		public async Task CreateEmailTemplateAsync(string template_name, CreateEmailTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/email";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a message template for messages that were sent through the email channel.
		/// DeleteEmailTemplate v1/templates/{template_name}/email
		/// </summary>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		/// <param name="version"><p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend="templates-template-name-template-type-versions">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul></param>
		public async Task DeleteEmailTemplateAsync(string template_name, string version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/email?version=" + (version==null? "" : System.Uri.EscapeDataString(version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves the content and settings of a message template for messages that are sent through the email channel.
		/// GetEmailTemplate v1/templates/{template_name}/email
		/// </summary>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		/// <param name="version"><p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend="templates-template-name-template-type-versions">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul></param>
		/// <returns>Success</returns>
		public async Task<GetEmailTemplateResponse> GetEmailTemplateAsync(string template_name, string version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/email?version=" + (version==null? "" : System.Uri.EscapeDataString(version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetEmailTemplateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates an existing message template for messages that are sent through the email channel.
		/// UpdateEmailTemplate v1/templates/{template_name}/email
		/// </summary>
		/// <param name="create_new_version"><p>Specifies whether to save the updates as a new version of the message template. Valid values are: true, save the updates as a new version; and, false, save the updates to (overwrite) the latest existing version of the template.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint saves the updates to (overwrites) the latest existing version of the template. If you specify a value of true for this parameter, don't specify a value for the version parameter. Otherwise, an error will occur.</p></param>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		/// <param name="version"><p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend="templates-template-name-template-type-versions">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul></param>
		public async Task UpdateEmailTemplateAsync(bool create_new_version, string template_name, string version, UpdateEmailTemplatePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/email?create-new-version="+create_new_version+"&version=" + (version==null? "" : System.Uri.EscapeDataString(version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates an export job for an application.
		/// CreateExportJob v1/apps/{application_id}/jobs/export
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		public async Task CreateExportJobAsync(string application_id, CreateExportJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/jobs/export";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status and settings of all the export jobs for an application.
		/// GetExportJobs v1/apps/{application_id}/jobs/export
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="token">The NextToken string that specifies which page of results to return in a paginated response.</param>
		/// <returns>Success</returns>
		public async Task<GetExportJobsResponse> GetExportJobsAsync(string application_id, string page_size, string token, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/jobs/export?page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size))+"&token=" + (token==null? "" : System.Uri.EscapeDataString(token));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetExportJobsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates an import job for an application.
		/// CreateImportJob v1/apps/{application_id}/jobs/import
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		public async Task CreateImportJobAsync(string application_id, CreateImportJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/jobs/import";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status and settings of all the import jobs for an application.
		/// GetImportJobs v1/apps/{application_id}/jobs/import
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="token">The NextToken string that specifies which page of results to return in a paginated response.</param>
		/// <returns>Success</returns>
		public async Task<GetImportJobsResponse> GetImportJobsAsync(string application_id, string page_size, string token, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/jobs/import?page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size))+"&token=" + (token==null? "" : System.Uri.EscapeDataString(token));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetImportJobsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new message template for messages using the in-app message channel.
		/// CreateInAppTemplate v1/templates/{template_name}/inapp
		/// </summary>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		public async Task CreateInAppTemplateAsync(string template_name, CreateInAppTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/inapp";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a message template for messages sent using the in-app message channel.
		/// DeleteInAppTemplate v1/templates/{template_name}/inapp
		/// </summary>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		/// <param name="version"><p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend="templates-template-name-template-type-versions">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul></param>
		public async Task DeleteInAppTemplateAsync(string template_name, string version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/inapp?version=" + (version==null? "" : System.Uri.EscapeDataString(version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves the content and settings of a message template for messages sent through the in-app channel.
		/// GetInAppTemplate v1/templates/{template_name}/inapp
		/// </summary>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		/// <param name="version"><p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend="templates-template-name-template-type-versions">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul></param>
		/// <returns>Success</returns>
		public async Task<GetInAppTemplateResponse> GetInAppTemplateAsync(string template_name, string version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/inapp?version=" + (version==null? "" : System.Uri.EscapeDataString(version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetInAppTemplateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates an existing message template for messages sent through the in-app message channel.
		/// UpdateInAppTemplate v1/templates/{template_name}/inapp
		/// </summary>
		/// <param name="create_new_version"><p>Specifies whether to save the updates as a new version of the message template. Valid values are: true, save the updates as a new version; and, false, save the updates to (overwrite) the latest existing version of the template.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint saves the updates to (overwrites) the latest existing version of the template. If you specify a value of true for this parameter, don't specify a value for the version parameter. Otherwise, an error will occur.</p></param>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		/// <param name="version"><p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend="templates-template-name-template-type-versions">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul></param>
		public async Task UpdateInAppTemplateAsync(bool create_new_version, string template_name, string version, UpdateInAppTemplatePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/inapp?create-new-version="+create_new_version+"&version=" + (version==null? "" : System.Uri.EscapeDataString(version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a journey for an application.
		/// CreateJourney v1/apps/{application_id}/journeys
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		public async Task CreateJourneyAsync(string application_id, CreateJourneyPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/journeys";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status, configuration, and other settings for all the journeys that are associated with an application.
		/// ListJourneys v1/apps/{application_id}/journeys
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="token">The NextToken string that specifies which page of results to return in a paginated response.</param>
		/// <returns>Success</returns>
		public async Task<ListJourneysResponse> ListJourneysAsync(string application_id, string page_size, string token, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/journeys?page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size))+"&token=" + (token==null? "" : System.Uri.EscapeDataString(token));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListJourneysResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a message template for messages that are sent through a push notification channel.
		/// CreatePushTemplate v1/templates/{template_name}/push
		/// </summary>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		public async Task CreatePushTemplateAsync(string template_name, CreatePushTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/push";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a message template for messages that were sent through a push notification channel.
		/// DeletePushTemplate v1/templates/{template_name}/push
		/// </summary>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		/// <param name="version"><p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend="templates-template-name-template-type-versions">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul></param>
		public async Task DeletePushTemplateAsync(string template_name, string version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/push?version=" + (version==null? "" : System.Uri.EscapeDataString(version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves the content and settings of a message template for messages that are sent through a push notification channel.
		/// GetPushTemplate v1/templates/{template_name}/push
		/// </summary>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		/// <param name="version"><p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend="templates-template-name-template-type-versions">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul></param>
		/// <returns>Success</returns>
		public async Task<GetPushTemplateResponse> GetPushTemplateAsync(string template_name, string version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/push?version=" + (version==null? "" : System.Uri.EscapeDataString(version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetPushTemplateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates an existing message template for messages that are sent through a push notification channel.
		/// UpdatePushTemplate v1/templates/{template_name}/push
		/// </summary>
		/// <param name="create_new_version"><p>Specifies whether to save the updates as a new version of the message template. Valid values are: true, save the updates as a new version; and, false, save the updates to (overwrite) the latest existing version of the template.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint saves the updates to (overwrites) the latest existing version of the template. If you specify a value of true for this parameter, don't specify a value for the version parameter. Otherwise, an error will occur.</p></param>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		/// <param name="version"><p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend="templates-template-name-template-type-versions">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul></param>
		public async Task UpdatePushTemplateAsync(bool create_new_version, string template_name, string version, UpdatePushTemplatePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/push?create-new-version="+create_new_version+"&version=" + (version==null? "" : System.Uri.EscapeDataString(version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates an Amazon Pinpoint configuration for a recommender model.
		/// CreateRecommenderConfiguration v1/recommenders
		/// </summary>
		public async Task CreateRecommenderConfigurationAsync(CreateRecommenderConfigurationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/recommenders";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about all the recommender model configurations that are associated with your Amazon Pinpoint account.
		/// GetRecommenderConfigurations v1/recommenders
		/// </summary>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="token">The NextToken string that specifies which page of results to return in a paginated response.</param>
		/// <returns>Success</returns>
		public async Task<GetRecommenderConfigurationsResponse> GetRecommenderConfigurationsAsync(string page_size, string token, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/recommenders?page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size))+"&token=" + (token==null? "" : System.Uri.EscapeDataString(token));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetRecommenderConfigurationsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new segment for an application or updates the configuration, dimension, and other settings for an existing segment that's associated with an application.
		/// CreateSegment v1/apps/{application_id}/segments
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		public async Task CreateSegmentAsync(string application_id, CreateSegmentPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/segments";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the configuration, dimension, and other settings for all the segments that are associated with an application.
		/// GetSegments v1/apps/{application_id}/segments
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="token">The NextToken string that specifies which page of results to return in a paginated response.</param>
		/// <returns>Success</returns>
		public async Task<GetSegmentsResponse> GetSegmentsAsync(string application_id, string page_size, string token, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/segments?page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size))+"&token=" + (token==null? "" : System.Uri.EscapeDataString(token));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetSegmentsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a message template for messages that are sent through the SMS channel.
		/// CreateSmsTemplate v1/templates/{template_name}/sms
		/// </summary>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		public async Task CreateSmsTemplateAsync(string template_name, CreateSmsTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/sms";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a message template for messages that were sent through the SMS channel.
		/// DeleteSmsTemplate v1/templates/{template_name}/sms
		/// </summary>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		/// <param name="version"><p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend="templates-template-name-template-type-versions">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul></param>
		public async Task DeleteSmsTemplateAsync(string template_name, string version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/sms?version=" + (version==null? "" : System.Uri.EscapeDataString(version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves the content and settings of a message template for messages that are sent through the SMS channel.
		/// GetSmsTemplate v1/templates/{template_name}/sms
		/// </summary>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		/// <param name="version"><p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend="templates-template-name-template-type-versions">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul></param>
		/// <returns>Success</returns>
		public async Task<GetSmsTemplateResponse> GetSmsTemplateAsync(string template_name, string version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/sms?version=" + (version==null? "" : System.Uri.EscapeDataString(version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetSmsTemplateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates an existing message template for messages that are sent through the SMS channel.
		/// UpdateSmsTemplate v1/templates/{template_name}/sms
		/// </summary>
		/// <param name="create_new_version"><p>Specifies whether to save the updates as a new version of the message template. Valid values are: true, save the updates as a new version; and, false, save the updates to (overwrite) the latest existing version of the template.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint saves the updates to (overwrites) the latest existing version of the template. If you specify a value of true for this parameter, don't specify a value for the version parameter. Otherwise, an error will occur.</p></param>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		/// <param name="version"><p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend="templates-template-name-template-type-versions">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul></param>
		public async Task UpdateSmsTemplateAsync(bool create_new_version, string template_name, string version, UpdateSmsTemplatePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/sms?create-new-version="+create_new_version+"&version=" + (version==null? "" : System.Uri.EscapeDataString(version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a message template for messages that are sent through the voice channel.
		/// CreateVoiceTemplate v1/templates/{template_name}/voice
		/// </summary>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		public async Task CreateVoiceTemplateAsync(string template_name, CreateVoiceTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/voice";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a message template for messages that were sent through the voice channel.
		/// DeleteVoiceTemplate v1/templates/{template_name}/voice
		/// </summary>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		/// <param name="version"><p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend="templates-template-name-template-type-versions">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul></param>
		public async Task DeleteVoiceTemplateAsync(string template_name, string version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/voice?version=" + (version==null? "" : System.Uri.EscapeDataString(version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves the content and settings of a message template for messages that are sent through the voice channel.
		/// GetVoiceTemplate v1/templates/{template_name}/voice
		/// </summary>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		/// <param name="version"><p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend="templates-template-name-template-type-versions">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul></param>
		/// <returns>Success</returns>
		public async Task<GetVoiceTemplateResponse> GetVoiceTemplateAsync(string template_name, string version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/voice?version=" + (version==null? "" : System.Uri.EscapeDataString(version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetVoiceTemplateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates an existing message template for messages that are sent through the voice channel.
		/// UpdateVoiceTemplate v1/templates/{template_name}/voice
		/// </summary>
		/// <param name="create_new_version"><p>Specifies whether to save the updates as a new version of the message template. Valid values are: true, save the updates as a new version; and, false, save the updates to (overwrite) the latest existing version of the template.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint saves the updates to (overwrites) the latest existing version of the template. If you specify a value of true for this parameter, don't specify a value for the version parameter. Otherwise, an error will occur.</p></param>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		/// <param name="version"><p>The unique identifier for the version of the message template to update, retrieve information about, or delete. To retrieve identifiers and other information for all the versions of a template, use the <link  linkend="templates-template-name-template-type-versions">Template Versions</link> resource.</p> <p>If specified, this value must match the identifier for an existing template version. If specified for an update operation, this value must match the identifier for the latest existing version of the template. This restriction helps ensure that race conditions don't occur.</p> <p>If you don't specify a value for this parameter, Amazon Pinpoint does the following:</p> <ul><li><p>For a get operation, retrieves information about the active version of the template.</p></li> <li><p>For an update operation, saves the updates to (overwrites) the latest existing version of the template, if the create-new-version parameter isn't used or is set to false.</p></li> <li><p>For a delete operation, deletes the template, including all versions of the template.</p></li></ul></param>
		public async Task UpdateVoiceTemplateAsync(bool create_new_version, string template_name, string version, UpdateVoiceTemplatePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/voice?create-new-version="+create_new_version+"&version=" + (version==null? "" : System.Uri.EscapeDataString(version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Disables the ADM channel for an application and deletes any existing settings for the channel.
		/// DeleteAdmChannel v1/apps/{application_id}/channels/adm
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<DeleteAdmChannelResponse> DeleteAdmChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/adm";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteAdmChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status and settings of the ADM channel for an application.
		/// GetAdmChannel v1/apps/{application_id}/channels/adm
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<GetAdmChannelResponse> GetAdmChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/adm";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetAdmChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Enables the ADM channel for an application or updates the status and settings of the ADM channel for an application.
		/// UpdateAdmChannel v1/apps/{application_id}/channels/adm
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<UpdateAdmChannelResponse> UpdateAdmChannelAsync(string application_id, UpdateAdmChannelPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/adm";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateAdmChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Disables the APNs channel for an application and deletes any existing settings for the channel.
		/// DeleteApnsChannel v1/apps/{application_id}/channels/apns
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<DeleteApnsChannelResponse> DeleteApnsChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/apns";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteApnsChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status and settings of the APNs channel for an application.
		/// GetApnsChannel v1/apps/{application_id}/channels/apns
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<GetApnsChannelResponse> GetApnsChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/apns";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetApnsChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Enables the APNs channel for an application or updates the status and settings of the APNs channel for an application.
		/// UpdateApnsChannel v1/apps/{application_id}/channels/apns
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<UpdateApnsChannelResponse> UpdateApnsChannelAsync(string application_id, UpdateApnsChannelPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/apns";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateApnsChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Disables the APNs sandbox channel for an application and deletes any existing settings for the channel.
		/// DeleteApnsSandboxChannel v1/apps/{application_id}/channels/apns_sandbox
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<DeleteApnsSandboxChannelResponse> DeleteApnsSandboxChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/apns_sandbox";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteApnsSandboxChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status and settings of the APNs sandbox channel for an application.
		/// GetApnsSandboxChannel v1/apps/{application_id}/channels/apns_sandbox
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<GetApnsSandboxChannelResponse> GetApnsSandboxChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/apns_sandbox";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetApnsSandboxChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Enables the APNs sandbox channel for an application or updates the status and settings of the APNs sandbox channel for an application.
		/// UpdateApnsSandboxChannel v1/apps/{application_id}/channels/apns_sandbox
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<UpdateApnsSandboxChannelResponse> UpdateApnsSandboxChannelAsync(string application_id, UpdateApnsSandboxChannelPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/apns_sandbox";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateApnsSandboxChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Disables the APNs VoIP channel for an application and deletes any existing settings for the channel.
		/// DeleteApnsVoipChannel v1/apps/{application_id}/channels/apns_voip
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<DeleteApnsVoipChannelResponse> DeleteApnsVoipChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/apns_voip";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteApnsVoipChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status and settings of the APNs VoIP channel for an application.
		/// GetApnsVoipChannel v1/apps/{application_id}/channels/apns_voip
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<GetApnsVoipChannelResponse> GetApnsVoipChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/apns_voip";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetApnsVoipChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Enables the APNs VoIP channel for an application or updates the status and settings of the APNs VoIP channel for an application.
		/// UpdateApnsVoipChannel v1/apps/{application_id}/channels/apns_voip
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<UpdateApnsVoipChannelResponse> UpdateApnsVoipChannelAsync(string application_id, UpdateApnsVoipChannelPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/apns_voip";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateApnsVoipChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Disables the APNs VoIP sandbox channel for an application and deletes any existing settings for the channel.
		/// DeleteApnsVoipSandboxChannel v1/apps/{application_id}/channels/apns_voip_sandbox
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<DeleteApnsVoipSandboxChannelResponse> DeleteApnsVoipSandboxChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/apns_voip_sandbox";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteApnsVoipSandboxChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status and settings of the APNs VoIP sandbox channel for an application.
		/// GetApnsVoipSandboxChannel v1/apps/{application_id}/channels/apns_voip_sandbox
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<GetApnsVoipSandboxChannelResponse> GetApnsVoipSandboxChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/apns_voip_sandbox";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetApnsVoipSandboxChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Enables the APNs VoIP sandbox channel for an application or updates the status and settings of the APNs VoIP sandbox channel for an application.
		/// UpdateApnsVoipSandboxChannel v1/apps/{application_id}/channels/apns_voip_sandbox
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<UpdateApnsVoipSandboxChannelResponse> UpdateApnsVoipSandboxChannelAsync(string application_id, UpdateApnsVoipSandboxChannelPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/apns_voip_sandbox";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateApnsVoipSandboxChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes an application.
		/// DeleteApp v1/apps/{application_id}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<DeleteAppResponse> DeleteAppAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteAppResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about an application.
		/// GetApp v1/apps/{application_id}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<GetAppResponse> GetAppAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetAppResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Disables the Baidu channel for an application and deletes any existing settings for the channel.
		/// DeleteBaiduChannel v1/apps/{application_id}/channels/baidu
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<DeleteBaiduChannelResponse> DeleteBaiduChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/baidu";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteBaiduChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status and settings of the Baidu channel for an application.
		/// GetBaiduChannel v1/apps/{application_id}/channels/baidu
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<GetBaiduChannelResponse> GetBaiduChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/baidu";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetBaiduChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Enables the Baidu channel for an application or updates the status and settings of the Baidu channel for an application.
		/// UpdateBaiduChannel v1/apps/{application_id}/channels/baidu
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<UpdateBaiduChannelResponse> UpdateBaiduChannelAsync(string application_id, UpdateBaiduChannelPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/baidu";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateBaiduChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a campaign from an application.
		/// DeleteCampaign v1/apps/{application_id}/campaigns/{campaign_id}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="campaign_id">The unique identifier for the campaign.</param>
		/// <returns>Success</returns>
		public async Task<DeleteCampaignResponse> DeleteCampaignAsync(string application_id, string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/campaigns/{campaign_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteCampaignResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status, configuration, and other settings for a campaign.
		/// GetCampaign v1/apps/{application_id}/campaigns/{campaign_id}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="campaign_id">The unique identifier for the campaign.</param>
		/// <returns>Success</returns>
		public async Task<GetCampaignResponse> GetCampaignAsync(string application_id, string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/campaigns/{campaign_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCampaignResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the configuration and other settings for a campaign.
		/// UpdateCampaign v1/apps/{application_id}/campaigns/{campaign_id}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="campaign_id">The unique identifier for the campaign.</param>
		/// <returns>Success</returns>
		public async Task<UpdateCampaignResponse> UpdateCampaignAsync(string application_id, string campaign_id, UpdateCampaignPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/campaigns/{campaign_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateCampaignResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Disables the email channel for an application and deletes any existing settings for the channel.
		/// DeleteEmailChannel v1/apps/{application_id}/channels/email
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<DeleteEmailChannelResponse> DeleteEmailChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/email";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteEmailChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status and settings of the email channel for an application.
		/// GetEmailChannel v1/apps/{application_id}/channels/email
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<GetEmailChannelResponse> GetEmailChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/email";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetEmailChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Enables the email channel for an application or updates the status and settings of the email channel for an application.
		/// UpdateEmailChannel v1/apps/{application_id}/channels/email
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<UpdateEmailChannelResponse> UpdateEmailChannelAsync(string application_id, UpdateEmailChannelPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/email";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateEmailChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes an endpoint from an application.
		/// DeleteEndpoint v1/apps/{application_id}/endpoints/{endpoint_id}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="endpoint_id">The unique identifier for the endpoint.</param>
		public async Task DeleteEndpointAsync(string application_id, string endpoint_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/endpoints/{endpoint_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the settings and attributes of a specific endpoint for an application.
		/// GetEndpoint v1/apps/{application_id}/endpoints/{endpoint_id}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="endpoint_id">The unique identifier for the endpoint.</param>
		/// <returns>Success</returns>
		public async Task<GetEndpointResponse> GetEndpointAsync(string application_id, string endpoint_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/endpoints/{endpoint_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetEndpointResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new endpoint for an application or updates the settings and attributes of an existing endpoint for an application. You can also use this operation to define custom attributes for an endpoint. If an update includes one or more values for a custom attribute, Amazon Pinpoint replaces (overwrites) any existing values with the new values.
		/// UpdateEndpoint v1/apps/{application_id}/endpoints/{endpoint_id}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="endpoint_id">The unique identifier for the endpoint.</param>
		public async Task UpdateEndpointAsync(string application_id, string endpoint_id, UpdateEndpointPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/endpoints/{endpoint_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes the event stream for an application.
		/// DeleteEventStream v1/apps/{application_id}/eventstream
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<DeleteEventStreamResponse> DeleteEventStreamAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/eventstream";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteEventStreamResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the event stream settings for an application.
		/// GetEventStream v1/apps/{application_id}/eventstream
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<GetEventStreamResponse> GetEventStreamAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/eventstream";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetEventStreamResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new event stream for an application or updates the settings of an existing event stream for an application.
		/// PutEventStream v1/apps/{application_id}/eventstream
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<PutEventStreamResponse> PutEventStreamAsync(string application_id, PutEventStreamPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/eventstream";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PutEventStreamResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Disables the GCM channel for an application and deletes any existing settings for the channel.
		/// DeleteGcmChannel v1/apps/{application_id}/channels/gcm
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<DeleteGcmChannelResponse> DeleteGcmChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/gcm";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteGcmChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status and settings of the GCM channel for an application.
		/// GetGcmChannel v1/apps/{application_id}/channels/gcm
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<GetGcmChannelResponse> GetGcmChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/gcm";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetGcmChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Enables the GCM channel for an application or updates the status and settings of the GCM channel for an application.
		/// UpdateGcmChannel v1/apps/{application_id}/channels/gcm
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<UpdateGcmChannelResponse> UpdateGcmChannelAsync(string application_id, UpdateGcmChannelPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/gcm";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateGcmChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a journey from an application.
		/// DeleteJourney v1/apps/{application_id}/journeys/{journey_id}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="journey_id">The unique identifier for the journey.</param>
		/// <returns>Success</returns>
		public async Task<DeleteJourneyResponse> DeleteJourneyAsync(string application_id, string journey_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/journeys/{journey_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteJourneyResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status, configuration, and other settings for a journey.
		/// GetJourney v1/apps/{application_id}/journeys/{journey_id}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="journey_id">The unique identifier for the journey.</param>
		/// <returns>Success</returns>
		public async Task<GetJourneyResponse> GetJourneyAsync(string application_id, string journey_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/journeys/{journey_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetJourneyResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the configuration and other settings for a journey.
		/// UpdateJourney v1/apps/{application_id}/journeys/{journey_id}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="journey_id">The unique identifier for the journey.</param>
		/// <returns>Success</returns>
		public async Task<UpdateJourneyResponse> UpdateJourneyAsync(string application_id, string journey_id, UpdateJourneyPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/journeys/{journey_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateJourneyResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes an Amazon Pinpoint configuration for a recommender model.
		/// DeleteRecommenderConfiguration v1/recommenders/{recommender_id}
		/// </summary>
		/// <param name="recommender_id">The unique identifier for the recommender model configuration. This identifier is displayed as the <b>Recommender ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<DeleteRecommenderConfigurationResponse> DeleteRecommenderConfigurationAsync(string recommender_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/recommenders/{recommender_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteRecommenderConfigurationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about an Amazon Pinpoint configuration for a recommender model.
		/// GetRecommenderConfiguration v1/recommenders/{recommender_id}
		/// </summary>
		/// <param name="recommender_id">The unique identifier for the recommender model configuration. This identifier is displayed as the <b>Recommender ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<GetRecommenderConfigurationResponse> GetRecommenderConfigurationAsync(string recommender_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/recommenders/{recommender_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetRecommenderConfigurationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates an Amazon Pinpoint configuration for a recommender model.
		/// UpdateRecommenderConfiguration v1/recommenders/{recommender_id}
		/// </summary>
		/// <param name="recommender_id">The unique identifier for the recommender model configuration. This identifier is displayed as the <b>Recommender ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<UpdateRecommenderConfigurationResponse> UpdateRecommenderConfigurationAsync(string recommender_id, UpdateRecommenderConfigurationPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/recommenders/{recommender_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateRecommenderConfigurationResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes a segment from an application.
		/// DeleteSegment v1/apps/{application_id}/segments/{segment_id}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="segment_id">The unique identifier for the segment.</param>
		/// <returns>Success</returns>
		public async Task<DeleteSegmentResponse> DeleteSegmentAsync(string application_id, string segment_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/segments/{segment_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteSegmentResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the configuration, dimension, and other settings for a specific segment that's associated with an application.
		/// GetSegment v1/apps/{application_id}/segments/{segment_id}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="segment_id">The unique identifier for the segment.</param>
		/// <returns>Success</returns>
		public async Task<GetSegmentResponse> GetSegmentAsync(string application_id, string segment_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/segments/{segment_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetSegmentResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new segment for an application or updates the configuration, dimension, and other settings for an existing segment that's associated with an application.
		/// UpdateSegment v1/apps/{application_id}/segments/{segment_id}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="segment_id">The unique identifier for the segment.</param>
		/// <returns>Success</returns>
		public async Task<UpdateSegmentResponse> UpdateSegmentAsync(string application_id, string segment_id, UpdateSegmentPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/segments/{segment_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateSegmentResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Disables the SMS channel for an application and deletes any existing settings for the channel.
		/// DeleteSmsChannel v1/apps/{application_id}/channels/sms
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<DeleteSmsChannelResponse> DeleteSmsChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/sms";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteSmsChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status and settings of the SMS channel for an application.
		/// GetSmsChannel v1/apps/{application_id}/channels/sms
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<GetSmsChannelResponse> GetSmsChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/sms";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetSmsChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Enables the SMS channel for an application or updates the status and settings of the SMS channel for an application.
		/// UpdateSmsChannel v1/apps/{application_id}/channels/sms
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<UpdateSmsChannelResponse> UpdateSmsChannelAsync(string application_id, UpdateSmsChannelPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/sms";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateSmsChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Deletes all the endpoints that are associated with a specific user ID.
		/// DeleteUserEndpoints v1/apps/{application_id}/users/{user_id}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="user_id">The unique identifier for the user.</param>
		public async Task DeleteUserEndpointsAsync(string application_id, string user_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/users/{user_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about all the endpoints that are associated with a specific user ID.
		/// GetUserEndpoints v1/apps/{application_id}/users/{user_id}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="user_id">The unique identifier for the user.</param>
		/// <returns>Success</returns>
		public async Task<GetUserEndpointsResponse> GetUserEndpointsAsync(string application_id, string user_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/users/{user_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetUserEndpointsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Disables the voice channel for an application and deletes any existing settings for the channel.
		/// DeleteVoiceChannel v1/apps/{application_id}/channels/voice
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<DeleteVoiceChannelResponse> DeleteVoiceChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/voice";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<DeleteVoiceChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status and settings of the voice channel for an application.
		/// GetVoiceChannel v1/apps/{application_id}/channels/voice
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<GetVoiceChannelResponse> GetVoiceChannelAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/voice";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetVoiceChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Enables the voice channel for an application or updates the status and settings of the voice channel for an application.
		/// UpdateVoiceChannel v1/apps/{application_id}/channels/voice
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<UpdateVoiceChannelResponse> UpdateVoiceChannelAsync(string application_id, UpdateVoiceChannelPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels/voice";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateVoiceChannelResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves (queries) pre-aggregated data for a standard metric that applies to an application.
		/// GetApplicationDateRangeKpi v1/apps/{application_id}/kpis/daterange/{kpi_name}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="end_time">The last date and time to retrieve data for, as part of an inclusive date range that filters the query results. This value should be in extended ISO 8601 format and use Coordinated Universal Time (UTC), for example: 2019-07-26T20:00:00Z for 8:00 PM UTC July 26, 2019.</param>
		/// <param name="kpi_name">The name of the metric, also referred to as a <i>key performance indicator (KPI)</i>, to retrieve data for. This value describes the associated metric and consists of two or more terms, which are comprised of lowercase alphanumeric characters, separated by a hyphen. Examples are email-open-rate and successful-delivery-rate. For a list of valid values, see the <a href="https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html">Amazon Pinpoint Developer Guide</a>.</param>
		/// <param name="next_token">The  string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="start_time">The first date and time to retrieve data for, as part of an inclusive date range that filters the query results. This value should be in extended ISO 8601 format and use Coordinated Universal Time (UTC), for example: 2019-07-19T20:00:00Z for 8:00 PM UTC July 19, 2019. This value should also be fewer than 90 days from the current day.</param>
		/// <returns>Success</returns>
		public async Task<GetApplicationDateRangeKpiResponse> GetApplicationDateRangeKpiAsync(string application_id, System.DateTimeOffset end_time, string kpi_name, string next_token, string page_size, System.DateTimeOffset start_time, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/kpis/daterange/{kpi_name}?end-time=" + end_time.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size))+"&start-time=" + start_time.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ");
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetApplicationDateRangeKpiResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the settings for an application.
		/// GetApplicationSettings v1/apps/{application_id}/settings
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<GetApplicationSettingsResponse> GetApplicationSettingsAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/settings";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetApplicationSettingsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Updates the settings for an application.
		/// UpdateApplicationSettings v1/apps/{application_id}/settings
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<UpdateApplicationSettingsResponse> UpdateApplicationSettingsAsync(string application_id, UpdateApplicationSettingsPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/settings";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateApplicationSettingsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about all the activities for a campaign.
		/// GetCampaignActivities v1/apps/{application_id}/campaigns/{campaign_id}/activities
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="campaign_id">The unique identifier for the campaign.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="token">The NextToken string that specifies which page of results to return in a paginated response.</param>
		/// <returns>Success</returns>
		public async Task<GetCampaignActivitiesResponse> GetCampaignActivitiesAsync(string application_id, string campaign_id, string page_size, string token, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/campaigns/{campaign_id}/activities?page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size))+"&token=" + (token==null? "" : System.Uri.EscapeDataString(token));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCampaignActivitiesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves (queries) pre-aggregated data for a standard metric that applies to a campaign.
		/// GetCampaignDateRangeKpi v1/apps/{application_id}/campaigns/{campaign_id}/kpis/daterange/{kpi_name}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="campaign_id">The unique identifier for the campaign.</param>
		/// <param name="end_time">The last date and time to retrieve data for, as part of an inclusive date range that filters the query results. This value should be in extended ISO 8601 format and use Coordinated Universal Time (UTC), for example: 2019-07-26T20:00:00Z for 8:00 PM UTC July 26, 2019.</param>
		/// <param name="kpi_name">The name of the metric, also referred to as a <i>key performance indicator (KPI)</i>, to retrieve data for. This value describes the associated metric and consists of two or more terms, which are comprised of lowercase alphanumeric characters, separated by a hyphen. Examples are email-open-rate and successful-delivery-rate. For a list of valid values, see the <a href="https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html">Amazon Pinpoint Developer Guide</a>.</param>
		/// <param name="next_token">The  string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="start_time">The first date and time to retrieve data for, as part of an inclusive date range that filters the query results. This value should be in extended ISO 8601 format and use Coordinated Universal Time (UTC), for example: 2019-07-19T20:00:00Z for 8:00 PM UTC July 19, 2019. This value should also be fewer than 90 days from the current day.</param>
		/// <returns>Success</returns>
		public async Task<GetCampaignDateRangeKpiResponse> GetCampaignDateRangeKpiAsync(string application_id, string campaign_id, System.DateTimeOffset end_time, string kpi_name, string next_token, string page_size, System.DateTimeOffset start_time, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/campaigns/{campaign_id}/kpis/daterange/{kpi_name}?end-time=" + end_time.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size))+"&start-time=" + start_time.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ");
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCampaignDateRangeKpiResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status, configuration, and other settings for a specific version of a campaign.
		/// GetCampaignVersion v1/apps/{application_id}/campaigns/{campaign_id}/versions/{version}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="campaign_id">The unique identifier for the campaign.</param>
		/// <param name="version">The unique version number (Version property) for the campaign version.</param>
		/// <returns>Success</returns>
		public async Task<GetCampaignVersionResponse> GetCampaignVersionAsync(string application_id, string campaign_id, string version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/campaigns/{campaign_id}/versions/"+ (version==null? "" : System.Uri.EscapeDataString(version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCampaignVersionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status, configuration, and other settings for all versions of a campaign.
		/// GetCampaignVersions v1/apps/{application_id}/campaigns/{campaign_id}/versions
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="campaign_id">The unique identifier for the campaign.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="token">The NextToken string that specifies which page of results to return in a paginated response.</param>
		/// <returns>Success</returns>
		public async Task<GetCampaignVersionsResponse> GetCampaignVersionsAsync(string application_id, string campaign_id, string page_size, string token, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/campaigns/{campaign_id}/versions?page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size))+"&token=" + (token==null? "" : System.Uri.EscapeDataString(token));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetCampaignVersionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the history and status of each channel for an application.
		/// GetChannels v1/apps/{application_id}/channels
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<GetChannelsResponse> GetChannelsAsync(string application_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/channels";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetChannelsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status and settings of a specific export job for an application.
		/// GetExportJob v1/apps/{application_id}/jobs/export/{job_id}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="job_id">The unique identifier for the job.</param>
		/// <returns>Success</returns>
		public async Task<GetExportJobResponse> GetExportJobAsync(string application_id, string job_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/jobs/export/{job_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetExportJobResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status and settings of a specific import job for an application.
		/// GetImportJob v1/apps/{application_id}/jobs/import/{job_id}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="job_id">The unique identifier for the job.</param>
		/// <returns>Success</returns>
		public async Task<GetImportJobResponse> GetImportJobAsync(string application_id, string job_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/jobs/import/{job_id}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetImportJobResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves the in-app messages targeted for the provided endpoint ID.
		/// GetInAppMessages v1/apps/{application_id}/endpoints/{endpoint_id}/inappmessages
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="endpoint_id">The unique identifier for the endpoint.</param>
		/// <returns>Success</returns>
		public async Task<GetInAppMessagesResponse> GetInAppMessagesAsync(string application_id, string endpoint_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/endpoints/{endpoint_id}/inappmessages";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetInAppMessagesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves (queries) pre-aggregated data for a standard engagement metric that applies to a journey.
		/// GetJourneyDateRangeKpi v1/apps/{application_id}/journeys/{journey_id}/kpis/daterange/{kpi_name}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="end_time">The last date and time to retrieve data for, as part of an inclusive date range that filters the query results. This value should be in extended ISO 8601 format and use Coordinated Universal Time (UTC), for example: 2019-07-26T20:00:00Z for 8:00 PM UTC July 26, 2019.</param>
		/// <param name="journey_id">The unique identifier for the journey.</param>
		/// <param name="kpi_name">The name of the metric, also referred to as a <i>key performance indicator (KPI)</i>, to retrieve data for. This value describes the associated metric and consists of two or more terms, which are comprised of lowercase alphanumeric characters, separated by a hyphen. Examples are email-open-rate and successful-delivery-rate. For a list of valid values, see the <a href="https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html">Amazon Pinpoint Developer Guide</a>.</param>
		/// <param name="next_token">The  string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="start_time">The first date and time to retrieve data for, as part of an inclusive date range that filters the query results. This value should be in extended ISO 8601 format and use Coordinated Universal Time (UTC), for example: 2019-07-19T20:00:00Z for 8:00 PM UTC July 19, 2019. This value should also be fewer than 90 days from the current day.</param>
		/// <returns>Success</returns>
		public async Task<GetJourneyDateRangeKpiResponse> GetJourneyDateRangeKpiAsync(string application_id, System.DateTimeOffset end_time, string journey_id, string kpi_name, string next_token, string page_size, System.DateTimeOffset start_time, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/journeys/{journey_id}/kpis/daterange/{kpi_name}?end-time=" + end_time.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size))+"&start-time=" + start_time.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ");
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetJourneyDateRangeKpiResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves (queries) pre-aggregated data for a standard execution metric that applies to a journey activity.
		/// GetJourneyExecutionActivityMetrics v1/apps/{application_id}/journeys/{journey_id}/activities/{journey_activity_id}/execution-metrics
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="journey_activity_id">The unique identifier for the journey activity.</param>
		/// <param name="journey_id">The unique identifier for the journey.</param>
		/// <param name="next_token">The <code/> string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <returns>Success</returns>
		public async Task<GetJourneyExecutionActivityMetricsResponse> GetJourneyExecutionActivityMetricsAsync(string application_id, string journey_activity_id, string journey_id, string next_token, string page_size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/journeys/{journey_id}/activities/{journey_activity_id}/execution-metrics?next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetJourneyExecutionActivityMetricsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves (queries) pre-aggregated data for a standard execution metric that applies to a journey.
		/// GetJourneyExecutionMetrics v1/apps/{application_id}/journeys/{journey_id}/execution-metrics
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="journey_id">The unique identifier for the journey.</param>
		/// <param name="next_token">The <code/> string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <returns>Success</returns>
		public async Task<GetJourneyExecutionMetricsResponse> GetJourneyExecutionMetricsAsync(string application_id, string journey_id, string next_token, string page_size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/journeys/{journey_id}/execution-metrics?next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetJourneyExecutionMetricsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves (queries) pre-aggregated data for a standard run execution metric that applies to a journey activity.
		/// GetJourneyRunExecutionActivityMetrics v1/apps/{application_id}/journeys/{journey_id}/runs/{run_id}/activities/{journey_activity_id}/execution-metrics
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="journey_activity_id">The unique identifier for the journey activity.</param>
		/// <param name="journey_id">The unique identifier for the journey.</param>
		/// <param name="next_token">The <code/> string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="run_id">The unique identifier for the journey run.</param>
		/// <returns>Success</returns>
		public async Task<GetJourneyRunExecutionActivityMetricsResponse> GetJourneyRunExecutionActivityMetricsAsync(string application_id, string journey_activity_id, string journey_id, string next_token, string page_size, string run_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/journeys/{journey_id}/runs/{run_id}/activities/{journey_activity_id}/execution-metrics?next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetJourneyRunExecutionActivityMetricsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves (queries) pre-aggregated data for a standard run execution metric that applies to a journey.
		/// GetJourneyRunExecutionMetrics v1/apps/{application_id}/journeys/{journey_id}/runs/{run_id}/execution-metrics
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="journey_id">The unique identifier for the journey.</param>
		/// <param name="next_token">The <code/> string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="run_id">The unique identifier for the journey run.</param>
		/// <returns>Success</returns>
		public async Task<GetJourneyRunExecutionMetricsResponse> GetJourneyRunExecutionMetricsAsync(string application_id, string journey_id, string next_token, string page_size, string run_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/journeys/{journey_id}/runs/{run_id}/execution-metrics?next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetJourneyRunExecutionMetricsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Provides information about the runs of a journey.
		/// GetJourneyRuns v1/apps/{application_id}/journeys/{journey_id}/runs
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="journey_id">The unique identifier for the journey.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="token">The NextToken string that specifies which page of results to return in a paginated response.</param>
		/// <returns>Success</returns>
		public async Task<GetJourneyRunsResponse> GetJourneyRunsAsync(string application_id, string journey_id, string page_size, string token, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/journeys/{journey_id}/runs?page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size))+"&token=" + (token==null? "" : System.Uri.EscapeDataString(token));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetJourneyRunsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status and settings of the export jobs for a segment.
		/// GetSegmentExportJobs v1/apps/{application_id}/segments/{segment_id}/jobs/export
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="segment_id">The unique identifier for the segment.</param>
		/// <param name="token">The NextToken string that specifies which page of results to return in a paginated response.</param>
		/// <returns>Success</returns>
		public async Task<GetSegmentExportJobsResponse> GetSegmentExportJobsAsync(string application_id, string page_size, string segment_id, string token, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/segments/{segment_id}/jobs/export?page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size))+"&token=" + (token==null? "" : System.Uri.EscapeDataString(token));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetSegmentExportJobsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the status and settings of the import jobs for a segment.
		/// GetSegmentImportJobs v1/apps/{application_id}/segments/{segment_id}/jobs/import
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="segment_id">The unique identifier for the segment.</param>
		/// <param name="token">The NextToken string that specifies which page of results to return in a paginated response.</param>
		/// <returns>Success</returns>
		public async Task<GetSegmentImportJobsResponse> GetSegmentImportJobsAsync(string application_id, string page_size, string segment_id, string token, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/segments/{segment_id}/jobs/import?page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size))+"&token=" + (token==null? "" : System.Uri.EscapeDataString(token));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetSegmentImportJobsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the configuration, dimension, and other settings for a specific version of a segment that's associated with an application.
		/// GetSegmentVersion v1/apps/{application_id}/segments/{segment_id}/versions/{version}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="segment_id">The unique identifier for the segment.</param>
		/// <param name="version">The unique version number (Version property) for the campaign version.</param>
		/// <returns>Success</returns>
		public async Task<GetSegmentVersionResponse> GetSegmentVersionAsync(string application_id, string segment_id, string version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/segments/{segment_id}/versions/"+ (version==null? "" : System.Uri.EscapeDataString(version));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetSegmentVersionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about the configuration, dimension, and other settings for all the versions of a specific segment that's associated with an application.
		/// GetSegmentVersions v1/apps/{application_id}/segments/{segment_id}/versions
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="segment_id">The unique identifier for the segment.</param>
		/// <param name="token">The NextToken string that specifies which page of results to return in a paginated response.</param>
		/// <returns>Success</returns>
		public async Task<GetSegmentVersionsResponse> GetSegmentVersionsAsync(string application_id, string page_size, string segment_id, string token, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/segments/{segment_id}/versions?page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size))+"&token=" + (token==null? "" : System.Uri.EscapeDataString(token));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<GetSegmentVersionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves all the tags (keys and values) that are associated with an application, campaign, message template, or segment.
		/// ListTagsForResource v1/tags/{resource_arn}
		/// </summary>
		/// <param name="resource_arn">The Amazon Resource Name (ARN) of the resource.</param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string resource_arn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/tags/{resource_arn}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Adds one or more tags (keys and values) to an application, campaign, message template, or segment.
		/// TagResource v1/tags/{resource_arn}
		/// </summary>
		/// <param name="resource_arn">The Amazon Resource Name (ARN) of the resource.</param>
		public async Task TagResourceAsync(string resource_arn, TagResourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/tags/{resource_arn}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about all the versions of a specific message template.
		/// ListTemplateVersions v1/templates/{template_name}/{template_type}/versions
		/// </summary>
		/// <param name="next_token">The  string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		/// <param name="template_type">The type of channel that the message template is designed for. Valid values are: EMAIL, PUSH, SMS, and VOICE.</param>
		/// <returns>Success</returns>
		public async Task<ListTemplateVersionsResponse> ListTemplateVersionsAsync(string next_token, string page_size, string template_name, string template_type, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/{template_type}/versions?next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListTemplateVersionsResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about all the message templates that are associated with your Amazon Pinpoint account.
		/// ListTemplates v1/templates
		/// </summary>
		/// <param name="next_token">The  string that specifies which page of results to return in a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="page_size">The maximum number of items to include in each page of a paginated response. This parameter is not supported for application, campaign, and journey metrics.</param>
		/// <param name="prefix">The substring to match in the names of the message templates to include in the results. If you specify this value, Amazon Pinpoint returns only those templates whose names begin with the value that you specify.</param>
		/// <param name="template_type">The type of message template to include in the results. Valid values are: EMAIL, PUSH, SMS, and VOICE. To include all types of templates in the results, don't include this parameter in your request.</param>
		/// <returns>Success</returns>
		public async Task<ListTemplatesResponse> ListTemplatesAsync(string next_token, string page_size, string prefix, string template_type, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates?next-token=" + (next_token==null? "" : System.Uri.EscapeDataString(next_token))+"&page-size=" + (page_size==null? "" : System.Uri.EscapeDataString(page_size))+"&prefix=" + (prefix==null? "" : System.Uri.EscapeDataString(prefix))+"&template-type=" + (template_type==null? "" : System.Uri.EscapeDataString(template_type));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<ListTemplatesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Retrieves information about a phone number.
		/// PhoneNumberValidate v1/phone/number/validate
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PhoneNumberValidateResponse> PhoneNumberValidateAsync(PhoneNumberValidatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/phone/number/validate";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<PhoneNumberValidateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new event to record for endpoints, or creates or updates endpoint data that existing events are associated with.
		/// PutEvents v1/apps/{application_id}/events
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		public async Task PutEventsAsync(string application_id, PutEventsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/events";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Removes one or more attributes, of the same attribute type, from all the endpoints that are associated with an application.
		/// RemoveAttributes v1/apps/{application_id}/attributes/{attribute_type}
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="attribute_type"> <p>The type of attribute or attributes to remove. Valid values are:</p> <ul><li><p>endpoint-custom-attributes - Custom attributes that describe endpoints, such as the date when an associated user opted in or out of receiving communications from you through a specific type of channel.</p></li> <li><p>endpoint-metric-attributes - Custom metrics that your app reports to Amazon Pinpoint for endpoints, such as the number of app sessions or the number of items left in a cart.</p></li> <li><p>endpoint-user-attributes - Custom attributes that describe users, such as first name, last name, and age.</p></li></ul></param>
		/// <returns>Success</returns>
		public async Task<RemoveAttributesResponse> RemoveAttributesAsync(string application_id, string attribute_type, RemoveAttributesPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/attributes/{attribute_type}";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<RemoveAttributesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates and sends a direct message.
		/// SendMessages v1/apps/{application_id}/messages
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<SendMessagesResponse> SendMessagesAsync(string application_id, SendMessagesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/messages";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SendMessagesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Send an OTP message
		/// SendOTPMessage v1/apps/{application_id}/otp
		/// </summary>
		/// <param name="application_id">The unique ID of your Amazon Pinpoint application.</param>
		/// <returns>Success</returns>
		public async Task<SendOTPMessageResponse> SendOTPMessageAsync(string application_id, SendOTPMessagePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/otp";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SendOTPMessageResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates and sends a message to a list of users.
		/// SendUsersMessages v1/apps/{application_id}/users-messages
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <returns>Success</returns>
		public async Task<SendUsersMessagesResponse> SendUsersMessagesAsync(string application_id, SendUsersMessagesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/users-messages";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<SendUsersMessagesResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Removes one or more tags (keys and values) from an application, campaign, message template, or segment.
		/// UntagResource v1/tags/{resource_arn}#tagKeys
		/// </summary>
		/// <param name="resource_arn">The Amazon Resource Name (ARN) of the resource.</param>
		/// <param name="tagKeys">The key of the tag to remove from the resource. To remove multiple tags, append the tagKeys parameter and argument for each additional tag to remove, separated by an ampersand (&amp;).</param>
		public async Task UntagResourceAsync(string resource_arn, string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/tags/{resource_arn}#tagKeys?"+string.Join("&", tagKeys.Select(z => $"tagKeys={System.Uri.EscapeDataString(z.ToString())}"));
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri);
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Creates a new batch of endpoints for an application or updates the settings and attributes of a batch of existing endpoints for an application. You can also use this operation to define custom attributes for a batch of endpoints. If an update includes one or more values for a custom attribute, Amazon Pinpoint replaces (overwrites) any existing values with the new values.
		/// UpdateEndpointsBatch v1/apps/{application_id}/endpoints
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		public async Task UpdateEndpointsBatchAsync(string application_id, UpdateEndpointsBatchPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/endpoints";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Cancels (stops) an active journey.
		/// UpdateJourneyState v1/apps/{application_id}/journeys/{journey_id}/state
		/// </summary>
		/// <param name="application_id">The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.</param>
		/// <param name="journey_id">The unique identifier for the journey.</param>
		/// <returns>Success</returns>
		public async Task<UpdateJourneyStateResponse> UpdateJourneyStateAsync(string application_id, string journey_id, UpdateJourneyStatePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/journeys/{journey_id}/state";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateJourneyStateResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Changes the status of a specific version of a message template to <i>active</i>.
		/// UpdateTemplateActiveVersion v1/templates/{template_name}/{template_type}/active-version
		/// </summary>
		/// <param name="template_name">The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.</param>
		/// <param name="template_type">The type of channel that the message template is designed for. Valid values are: EMAIL, PUSH, SMS, and VOICE.</param>
		/// <returns>Success</returns>
		public async Task<UpdateTemplateActiveVersionResponse> UpdateTemplateActiveVersionAsync(string template_name, string template_type, UpdateTemplateActiveVersionPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/templates/{template_name}/{template_type}/active-version";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<UpdateTemplateActiveVersionResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
		
		/// <summary>
		/// Verify an OTP
		/// VerifyOTPMessage v1/apps/{application_id}/verify-otp
		/// </summary>
		/// <param name="application_id">The unique ID of your Amazon Pinpoint application.</param>
		/// <returns>Success</returns>
		public async Task<VerifyOTPMessageResponse> VerifyOTPMessageAsync(string application_id, VerifyOTPMessagePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{application_id}/verify-otp";
			using var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri);
			var content = System.Net.Http.Json.JsonContent.Create(requestBody, mediaType: null, jsonSerializerSettings);
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var streamContent = await responseMessage.Content.ReadAsStreamAsync();
				return JsonSerializer.Deserialize<VerifyOTPMessageResponse>(streamContent, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
		}
	}
	
	public class CreateAppPostBody
	{
		
		/// <summary>
		/// Specifies the display name of an application and the tags to associate with the application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateAppPostBodyCreateApplicationRequest CreateApplicationRequest { get; set; }
	}
	
	public class CreateAppPostBodyCreateApplicationRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
	}
	
	public class CreateCampaignPostBody
	{
		
		/// <summary>
		/// Specifies the configuration and other settings for a campaign.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateCampaignPostBodyWriteCampaignRequest WriteCampaignRequest { get; set; }
	}
	
	public class CreateCampaignPostBodyWriteCampaignRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WriteTreatmentResource[] AdditionalTreatments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomDeliveryConfiguration CustomDeliveryConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> HoldoutPercent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignHook Hook { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsPaused { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignLimits Limits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MessageConfiguration MessageConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Schedule Schedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SegmentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SegmentVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateConfiguration TemplateConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TreatmentDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TreatmentName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Priority { get; set; }
	}
	
	public class CreateEmailTemplatePostBody
	{
		
		/// <summary>
		/// Specifies the content and settings for a message template that can be used in messages that are sent through the email channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateEmailTemplatePostBodyEmailTemplateRequest EmailTemplateRequest { get; set; }
	}
	
	public class CreateEmailTemplatePostBodyEmailTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubstitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HtmlPart { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Subject { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TextPart { get; set; }
	}
	
	public class UpdateEmailTemplatePutBody
	{
		
		/// <summary>
		/// Specifies the content and settings for a message template that can be used in messages that are sent through the email channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateEmailTemplatePutBodyEmailTemplateRequest EmailTemplateRequest { get; set; }
	}
	
	public class UpdateEmailTemplatePutBodyEmailTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubstitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HtmlPart { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Subject { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TextPart { get; set; }
	}
	
	public class CreateExportJobPostBody
	{
		
		/// <summary>
		/// Specifies the settings for a job that exports endpoint definitions to an Amazon Simple Storage Service (Amazon S3) bucket.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateExportJobPostBodyExportJobRequest ExportJobRequest { get; set; }
	}
	
	public class CreateExportJobPostBodyExportJobRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3UrlPrefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SegmentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SegmentVersion { get; set; }
	}
	
	public class CreateImportJobPostBody
	{
		
		/// <summary>
		/// Specifies the settings for a job that imports endpoint definitions from an Amazon Simple Storage Service (Amazon S3) bucket.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateImportJobPostBodyImportJobRequest ImportJobRequest { get; set; }
	}
	
	public class CreateImportJobPostBodyImportJobRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DefineSegment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExternalId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Format Format { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RegisterEndpoints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Url { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SegmentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SegmentName { get; set; }
	}
	
	public class CreateInAppTemplatePostBody
	{
		
		/// <summary>
		/// InApp Template Request.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateInAppTemplatePostBodyInAppTemplateRequest InAppTemplateRequest { get; set; }
	}
	
	public class CreateInAppTemplatePostBodyInAppTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InAppMessageContent[] Content { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string CustomConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Layout Layout { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
	}
	
	public class UpdateInAppTemplatePutBody
	{
		
		/// <summary>
		/// InApp Template Request.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateInAppTemplatePutBodyInAppTemplateRequest InAppTemplateRequest { get; set; }
	}
	
	public class UpdateInAppTemplatePutBodyInAppTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InAppMessageContent[] Content { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string CustomConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Layout Layout { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
	}
	
	public class CreateJourneyPostBody
	{
		
		/// <summary>
		/// Specifies the configuration and other settings for a journey.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateJourneyPostBodyWriteJourneyRequest WriteJourneyRequest { get; set; }
	}
	
	public class CreateJourneyPostBodyWriteJourneyRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfActivity Activities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JourneyLimits Limits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> LocalTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuietTime QuietTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RefreshFrequency { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JourneySchedule Schedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StartActivity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StartCondition StartCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public State State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> WaitForQuietTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RefreshOnSegmentUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JourneyChannelSettings JourneyChannelSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SendingSchedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OpenHours OpenHours { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClosedDays ClosedDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__TimezoneEstimationMethodsElement[] TimezoneEstimationMethods { get; set; }
	}
	
	public class CreatePushTemplatePostBody
	{
		
		/// <summary>
		/// Specifies the content and settings for a message template that can be used in messages that are sent through a push notification channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreatePushTemplatePostBodyPushNotificationTemplateRequest PushNotificationTemplateRequest { get; set; }
	}
	
	public class CreatePushTemplatePostBodyPushNotificationTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AndroidPushNotificationTemplate ADM { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public APNSPushNotificationTemplate APNS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AndroidPushNotificationTemplate Baidu { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DefaultPushNotificationTemplate Default { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubstitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AndroidPushNotificationTemplate GCM { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
	}
	
	public class UpdatePushTemplatePutBody
	{
		
		/// <summary>
		/// Specifies the content and settings for a message template that can be used in messages that are sent through a push notification channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdatePushTemplatePutBodyPushNotificationTemplateRequest PushNotificationTemplateRequest { get; set; }
	}
	
	public class UpdatePushTemplatePutBodyPushNotificationTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AndroidPushNotificationTemplate ADM { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public APNSPushNotificationTemplate APNS { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AndroidPushNotificationTemplate Baidu { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DefaultPushNotificationTemplate Default { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubstitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AndroidPushNotificationTemplate GCM { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
	}
	
	public class CreateRecommenderConfigurationPostBody
	{
		
		/// <summary>
		/// Specifies Amazon Pinpoint configuration settings for retrieving and processing recommendation data from a recommender model.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateRecommenderConfigurationPostBodyCreateRecommenderConfiguration CreateRecommenderConfiguration { get; set; }
	}
	
	public class CreateRecommenderConfigurationPostBodyCreateRecommenderConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationProviderIdType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationProviderRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationProviderUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationTransformerUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationsDisplayName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RecommendationsPerMessage { get; set; }
	}
	
	public class CreateSegmentPostBody
	{
		
		/// <summary>
		/// Specifies the configuration, dimension, and other settings for a segment. A WriteSegmentRequest object can include a Dimensions object or a SegmentGroups object, but not both.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateSegmentPostBodyWriteSegmentRequest WriteSegmentRequest { get; set; }
	}
	
	public class CreateSegmentPostBodyWriteSegmentRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentDimensions Dimensions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentGroupList SegmentGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
	}
	
	public class CreateSmsTemplatePostBody
	{
		
		/// <summary>
		/// Specifies the content and settings for a message template that can be used in text messages that are sent through the SMS channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateSmsTemplatePostBodySMSTemplateRequest SMSTemplateRequest { get; set; }
	}
	
	public class CreateSmsTemplatePostBodySMSTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubstitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
	}
	
	public class UpdateSmsTemplatePutBody
	{
		
		/// <summary>
		/// Specifies the content and settings for a message template that can be used in text messages that are sent through the SMS channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateSmsTemplatePutBodySMSTemplateRequest SMSTemplateRequest { get; set; }
	}
	
	public class UpdateSmsTemplatePutBodySMSTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubstitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
	}
	
	public class CreateVoiceTemplatePostBody
	{
		
		/// <summary>
		/// Specifies the content and settings for a message template that can be used in messages that are sent through the voice channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateVoiceTemplatePostBodyVoiceTemplateRequest VoiceTemplateRequest { get; set; }
	}
	
	public class CreateVoiceTemplatePostBodyVoiceTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubstitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LanguageCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VoiceId { get; set; }
	}
	
	public class UpdateVoiceTemplatePutBody
	{
		
		/// <summary>
		/// Specifies the content and settings for a message template that can be used in messages that are sent through the voice channel.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateVoiceTemplatePutBodyVoiceTemplateRequest VoiceTemplateRequest { get; set; }
	}
	
	public class UpdateVoiceTemplatePutBodyVoiceTemplateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Body { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultSubstitutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LanguageCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VoiceId { get; set; }
	}
	
	public class UpdateAdmChannelPutBody
	{
		
		/// <summary>
		/// Specifies the status and settings of the ADM (Amazon Device Messaging) channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateAdmChannelPutBodyADMChannelRequest ADMChannelRequest { get; set; }
	}
	
	public class UpdateAdmChannelPutBodyADMChannelRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientSecret { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	public class UpdateApnsChannelPutBody
	{
		
		/// <summary>
		/// Specifies the status and settings of the APNs (Apple Push Notification service) channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateApnsChannelPutBodyAPNSChannelRequest APNSChannelRequest { get; set; }
	}
	
	public class UpdateApnsChannelPutBodyAPNSChannelRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BundleId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Certificate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAuthenticationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrivateKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TeamId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TokenKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TokenKeyId { get; set; }
	}
	
	public class UpdateApnsSandboxChannelPutBody
	{
		
		/// <summary>
		/// Specifies the status and settings of the APNs (Apple Push Notification service) sandbox channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateApnsSandboxChannelPutBodyAPNSSandboxChannelRequest APNSSandboxChannelRequest { get; set; }
	}
	
	public class UpdateApnsSandboxChannelPutBodyAPNSSandboxChannelRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BundleId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Certificate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAuthenticationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrivateKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TeamId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TokenKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TokenKeyId { get; set; }
	}
	
	public class UpdateApnsVoipChannelPutBody
	{
		
		/// <summary>
		/// Specifies the status and settings of the APNs (Apple Push Notification service) VoIP channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateApnsVoipChannelPutBodyAPNSVoipChannelRequest APNSVoipChannelRequest { get; set; }
	}
	
	public class UpdateApnsVoipChannelPutBodyAPNSVoipChannelRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BundleId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Certificate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAuthenticationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrivateKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TeamId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TokenKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TokenKeyId { get; set; }
	}
	
	public class UpdateApnsVoipSandboxChannelPutBody
	{
		
		/// <summary>
		/// Specifies the status and settings of the APNs (Apple Push Notification service) VoIP sandbox channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateApnsVoipSandboxChannelPutBodyAPNSVoipSandboxChannelRequest APNSVoipSandboxChannelRequest { get; set; }
	}
	
	public class UpdateApnsVoipSandboxChannelPutBodyAPNSVoipSandboxChannelRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BundleId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Certificate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAuthenticationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrivateKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TeamId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TokenKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TokenKeyId { get; set; }
	}
	
	public class UpdateBaiduChannelPutBody
	{
		
		/// <summary>
		/// Specifies the status and settings of the Baidu (Baidu Cloud Push) channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateBaiduChannelPutBodyBaiduChannelRequest BaiduChannelRequest { get; set; }
	}
	
	public class UpdateBaiduChannelPutBodyBaiduChannelRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretKey { get; set; }
	}
	
	public class UpdateCampaignPutBody
	{
		
		/// <summary>
		/// Specifies the configuration and other settings for a campaign.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateCampaignPutBodyWriteCampaignRequest WriteCampaignRequest { get; set; }
	}
	
	public class UpdateCampaignPutBodyWriteCampaignRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public WriteTreatmentResource[] AdditionalTreatments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomDeliveryConfiguration CustomDeliveryConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> HoldoutPercent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignHook Hook { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IsPaused { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignLimits Limits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MessageConfiguration MessageConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Schedule Schedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SegmentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SegmentVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateConfiguration TemplateConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TreatmentDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TreatmentName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Priority { get; set; }
	}
	
	public class UpdateEmailChannelPutBody
	{
		
		/// <summary>
		/// Specifies the status and settings of the email channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateEmailChannelPutBodyEmailChannelRequest EmailChannelRequest { get; set; }
	}
	
	public class UpdateEmailChannelPutBodyEmailChannelRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationSet { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FromAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Identity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	public class UpdateEndpointPutBody
	{
		
		/// <summary>
		/// Specifies the channel type and other settings for an endpoint.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateEndpointPutBodyEndpointRequest EndpointRequest { get; set; }
	}
	
	public class UpdateEndpointPutBodyEndpointRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Address { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfListOf__string Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__EndpointTypesElement ChannelType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointDemographic Demographic { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EffectiveDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EndpointStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointLocation Location { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__double Metrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OptOut { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointUser User { get; set; }
	}
	
	public class PutEventStreamPostBody
	{
		
		/// <summary>
		/// Specifies the Amazon Resource Name (ARN) of an event stream to publish events to and the AWS Identity and Access Management (IAM) role to use when publishing those events.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PutEventStreamPostBodyWriteEventStream WriteEventStream { get; set; }
	}
	
	public class PutEventStreamPostBodyWriteEventStream
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DestinationStreamArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
	}
	
	public class UpdateGcmChannelPutBody
	{
		
		/// <summary>
		/// Specifies the status and settings of the GCM channel for an application. This channel enables Amazon Pinpoint to send push notifications through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateGcmChannelPutBodyGCMChannelRequest GCMChannelRequest { get; set; }
	}
	
	public class UpdateGcmChannelPutBodyGCMChannelRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApiKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultAuthenticationMethod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServiceJson { get; set; }
	}
	
	public class UpdateJourneyPutBody
	{
		
		/// <summary>
		/// Specifies the configuration and other settings for a journey.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateJourneyPutBodyWriteJourneyRequest WriteJourneyRequest { get; set; }
	}
	
	public class UpdateJourneyPutBodyWriteJourneyRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfActivity Activities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastModifiedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JourneyLimits Limits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> LocalTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuietTime QuietTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RefreshFrequency { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JourneySchedule Schedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StartActivity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StartCondition StartCondition { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public State State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> WaitForQuietTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RefreshOnSegmentUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JourneyChannelSettings JourneyChannelSettings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SendingSchedule { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OpenHours OpenHours { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClosedDays ClosedDays { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__TimezoneEstimationMethodsElement[] TimezoneEstimationMethods { get; set; }
	}
	
	public class UpdateRecommenderConfigurationPutBody
	{
		
		/// <summary>
		/// Specifies Amazon Pinpoint configuration settings for retrieving and processing recommendation data from a recommender model.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateRecommenderConfigurationPutBodyUpdateRecommenderConfiguration UpdateRecommenderConfiguration { get; set; }
	}
	
	public class UpdateRecommenderConfigurationPutBodyUpdateRecommenderConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationProviderIdType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationProviderRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationProviderUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationTransformerUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecommendationsDisplayName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RecommendationsPerMessage { get; set; }
	}
	
	public class UpdateSegmentPutBody
	{
		
		/// <summary>
		/// Specifies the configuration, dimension, and other settings for a segment. A WriteSegmentRequest object can include a Dimensions object or a SegmentGroups object, but not both.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateSegmentPutBodyWriteSegmentRequest WriteSegmentRequest { get; set; }
	}
	
	public class UpdateSegmentPutBodyWriteSegmentRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentDimensions Dimensions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentGroupList SegmentGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
	}
	
	public class UpdateSmsChannelPutBody
	{
		
		/// <summary>
		/// Specifies the status and settings of the SMS channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateSmsChannelPutBodySMSChannelRequest SMSChannelRequest { get; set; }
	}
	
	public class UpdateSmsChannelPutBodySMSChannelRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ShortCode { get; set; }
	}
	
	public class UpdateVoiceChannelPutBody
	{
		
		/// <summary>
		/// Specifies the status and settings of the voice channel for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateVoiceChannelPutBodyVoiceChannelRequest VoiceChannelRequest { get; set; }
	}
	
	public class UpdateVoiceChannelPutBodyVoiceChannelRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	public class UpdateApplicationSettingsPutBody
	{
		
		/// <summary>
		/// Specifies the default settings for an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateApplicationSettingsPutBodyWriteApplicationSettingsRequest WriteApplicationSettingsRequest { get; set; }
	}
	
	public class UpdateApplicationSettingsPutBodyWriteApplicationSettingsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignHook CampaignHook { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CloudWatchMetricsEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EventTaggingEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CampaignLimits Limits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QuietTime QuietTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationSettingsJourneyLimits JourneyLimits { get; set; }
	}
	
	public class TagResourcePostBody
	{
		
		/// <summary>
		/// Specifies the tags (keys and values) for an application, campaign, message template, or segment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TagResourcePostBodyTagsModel TagsModel { get; set; }
	}
	
	public class TagResourcePostBodyTagsModel
	{
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public MapOf__string Tags { get; set; }
	}
	
	public class PhoneNumberValidatePostBody
	{
		
		/// <summary>
		/// Specifies a phone number to validate and retrieve information about.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PhoneNumberValidatePostBodyNumberValidateRequest NumberValidateRequest { get; set; }
	}
	
	public class PhoneNumberValidatePostBodyNumberValidateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string IsoCountryCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PhoneNumber { get; set; }
	}
	
	public class PutEventsPostBody
	{
		
		/// <summary>
		/// Specifies a batch of events to process.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PutEventsPostBodyEventsRequest EventsRequest { get; set; }
	}
	
	public class PutEventsPostBodyEventsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfEventsBatch BatchItem { get; set; }
	}
	
	public class RemoveAttributesPutBody
	{
		
		/// <summary>
		/// Specifies one or more attributes to remove from all the endpoints that are associated with an application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RemoveAttributesPutBodyUpdateAttributesRequest UpdateAttributesRequest { get; set; }
	}
	
	public class RemoveAttributesPutBodyUpdateAttributesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Blacklist { get; set; }
	}
	
	public class SendMessagesPostBody
	{
		
		/// <summary>
		/// Specifies the configuration and other settings for a message.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SendMessagesPostBodyMessageRequest MessageRequest { get; set; }
	}
	
	public class SendMessagesPostBodyMessageRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfAddressConfiguration Addresses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Context { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfEndpointSendConfiguration Endpoints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DirectMessageConfiguration MessageConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateConfiguration TemplateConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TraceId { get; set; }
	}
	
	public class SendOTPMessagePostBody
	{
		
		/// <summary>
		/// Send OTP message request parameters.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SendOTPMessagePostBodySendOTPMessageRequestParameters SendOTPMessageRequestParameters { get; set; }
	}
	
	public class SendOTPMessagePostBodySendOTPMessageRequestParameters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AllowedAttempts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BrandName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Channel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CodeLength { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DestinationIdentity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EntityId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Language { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OriginationIdentity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReferenceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ValidityPeriod { get; set; }
	}
	
	public class SendUsersMessagesPostBody
	{
		
		/// <summary>
		/// Specifies the configuration and other settings for a message to send to all the endpoints that are associated with a list of users.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SendUsersMessagesPostBodySendUsersMessageRequest SendUsersMessageRequest { get; set; }
	}
	
	public class SendUsersMessagesPostBodySendUsersMessageRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MapOf__string Context { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DirectMessageConfiguration MessageConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TemplateConfiguration TemplateConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TraceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MapOfEndpointSendConfiguration Users { get; set; }
	}
	
	public class UpdateEndpointsBatchPutBody
	{
		
		/// <summary>
		/// Specifies a batch of endpoints to create or update and the settings and attributes to set or change for each endpoint.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateEndpointsBatchPutBodyEndpointBatchRequest EndpointBatchRequest { get; set; }
	}
	
	public class UpdateEndpointsBatchPutBodyEndpointBatchRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EndpointBatchItem[] Item { get; set; }
	}
	
	public class UpdateJourneyStatePutBody
	{
		
		/// <summary>
		/// Changes the status of a journey.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateJourneyStatePutBodyJourneyStateRequest JourneyStateRequest { get; set; }
	}
	
	public class UpdateJourneyStatePutBodyJourneyStateRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public State State { get; set; }
	}
	
	public class UpdateTemplateActiveVersionPutBody
	{
		
		/// <summary>
		/// Specifies which version of a message template to use as the active version of the template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateTemplateActiveVersionPutBodyTemplateActiveVersionRequest TemplateActiveVersionRequest { get; set; }
	}
	
	public class UpdateTemplateActiveVersionPutBodyTemplateActiveVersionRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
	}
	
	public class VerifyOTPMessagePostBody
	{
		
		/// <summary>
		/// Verify OTP message request.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VerifyOTPMessagePostBodyVerifyOTPMessageRequestParameters VerifyOTPMessageRequestParameters { get; set; }
	}
	
	public class VerifyOTPMessagePostBodyVerifyOTPMessageRequestParameters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DestinationIdentity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Otp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReferenceId { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Response message for deleting error events.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEventsResponse
	{
	}
	
	/// <summary>
	/// A description of the context in which an error occurred. This data should be provided by the application when reporting an error, unless the error report has been generated automatically from Google App Engine logs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ErrorContext
	{
		
		/// <summary>
		/// HTTP request data that is related to a reported error. This data should be provided by the application when reporting an error, unless the error report has been generated automatically from Google App Engine logs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="httpRequest")]
		public HttpRequestContext HttpRequest { get; set; }
		
		/// <summary>
		/// Indicates a location in the source code of the service for which errors are reported. `functionName` must be provided by the application when reporting an error, unless the error report contains a `message` with a supported exception stack trace. All fields are optional for the later case.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportLocation")]
		public SourceLocation ReportLocation { get; set; }
		
		/// <summary>
		/// Source code that was used to build the executable which has caused the given error message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceReferences")]
		public SourceReference[] SourceReferences { get; set; }
		
		/// <summary>
		/// The user who caused or was affected by the crash. This can be a user ID, an email address, or an arbitrary token that uniquely identifies the user. When sending an error report, leave this field empty if the user was not logged in. In this case the Error Reporting system will use other data, such as remote IP address, to distinguish affected users. See `affected_users_count` in `ErrorGroupStats`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user")]
		public string User { get; set; }
	}
	
	/// <summary>
	/// HTTP request data that is related to a reported error. This data should be provided by the application when reporting an error, unless the error report has been generated automatically from Google App Engine logs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HttpRequestContext
	{
		
		/// <summary>
		/// The type of HTTP request, such as `GET`, `POST`, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public string Method { get; set; }
		
		/// <summary>
		/// The referrer information that is provided with the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="referrer")]
		public string Referrer { get; set; }
		
		/// <summary>
		/// The IP address from which the request originated. This can be IPv4, IPv6, or a token which is derived from the IP address, depending on the data that has been provided in the error report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="remoteIp")]
		public string RemoteIp { get; set; }
		
		/// <summary>
		/// The HTTP response status code for the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="responseStatusCode")]
		public System.Nullable<System.Int32> ResponseStatusCode { get; set; }
		
		/// <summary>
		/// The URL of the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The user agent information that is provided with the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userAgent")]
		public string UserAgent { get; set; }
	}
	
	/// <summary>
	/// Indicates a location in the source code of the service for which errors are reported. `functionName` must be provided by the application when reporting an error, unless the error report contains a `message` with a supported exception stack trace. All fields are optional for the later case.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SourceLocation
	{
		
		/// <summary>
		/// The source code filename, which can include a truncated relative path, or a full path from a production machine.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filePath")]
		public string FilePath { get; set; }
		
		/// <summary>
		/// Human-readable name of a function or method. The value can include optional context like the class or package name. For example, `my.package.MyClass.method` in case of Java.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="functionName")]
		public string FunctionName { get; set; }
		
		/// <summary>
		/// 1-based. 0 indicates that the line number is unknown.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lineNumber")]
		public System.Nullable<System.Int32> LineNumber { get; set; }
	}
	
	/// <summary>
	/// A reference to a particular snapshot of the source tree used to build and deploy an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SourceReference
	{
		
		/// <summary>
		/// Optional. A URI string identifying the repository. Example: "https://github.com/GoogleCloudPlatform/kubernetes.git"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="repository")]
		public string Repository { get; set; }
		
		/// <summary>
		/// The canonical and persistent identifier of the deployed revision. Example (git): "0035781c50ec7aa23385dc841529ce8a4b70db1b"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
	}
	
	/// <summary>
	/// An error event which is returned by the Error Reporting system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ErrorEvent
	{
		
		/// <summary>
		/// A description of the context in which an error occurred. This data should be provided by the application when reporting an error, unless the error report has been generated automatically from Google App Engine logs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="context")]
		public ErrorContext Context { get; set; }
		
		/// <summary>
		/// Time when the event occurred as provided in the error report. If the report did not contain a timestamp, the time the error was received by the Error Reporting system is used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventTime")]
		public string EventTime { get; set; }
		
		/// <summary>
		/// The stack trace that was reported or logged by the service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Describes a running service that sends errors. Its version changes over time and multiple versions can run in parallel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceContext")]
		public ServiceContext ServiceContext { get; set; }
	}
	
	/// <summary>
	/// Describes a running service that sends errors. Its version changes over time and multiple versions can run in parallel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceContext
	{
		
		/// <summary>
		/// Type of the MonitoredResource. List of possible values: https://cloud.google.com/monitoring/api/resources Value is set automatically for incoming errors and must not be set when reporting errors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceType")]
		public string ResourceType { get; set; }
		
		/// <summary>
		/// An identifier of the service, such as the name of the executable, job, or Google App Engine service name. This field is expected to have a low number of values that are relatively stable over time, as opposed to `version`, which can be changed whenever new code is deployed. Contains the service name for error reports extracted from Google App Engine logs or `default` if the App Engine default service is used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// Represents the source code version that the developer provided, which could represent a version label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set to the version of the app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Description of a group of similar error events.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ErrorGroup
	{
		
		/// <summary>
		/// An opaque identifier of the group. This field is assigned by the Error Reporting system and always populated. In the group resource name, the `group_id` is a unique identifier for a particular error group. The identifier is derived from key parts of the error-log content and is treated as Service Data. For information about how Service Data is handled, see [Google Cloud Privacy Notice](https://cloud.google.com/terms/cloud-privacy-notice).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupId")]
		public string GroupId { get; set; }
		
		/// <summary>
		/// The group resource name. Written as `projects/{projectID}/groups/{group_id}`. Example: `projects/my-project-123/groups/my-group` In the group resource name, the `group_id` is a unique identifier for a particular error group. The identifier is derived from key parts of the error-log content and is treated as Service Data. For information about how Service Data is handled, see [Google Cloud Privacy Notice](https://cloud.google.com/terms/cloud-privacy-notice).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Error group's resolution status. An unspecified resolution status will be interpreted as OPEN
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resolutionStatus")]
		public System.Nullable<ErrorGroupResolutionStatus> ResolutionStatus { get; set; }
		
		/// <summary>
		/// Associated tracking issues.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trackingIssues")]
		public TrackingIssue[] TrackingIssues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ErrorGroupResolutionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOLUTION_STATUS_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPEN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACKNOWLEDGED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOLVED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MUTED = 4,
	}
	
	/// <summary>
	/// Information related to tracking the progress on resolving the error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TrackingIssue
	{
		
		/// <summary>
		/// A URL pointing to a related entry in an issue tracking system. Example: `https://github.com/user/project/issues/4`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Data extracted for a specific group based on certain filter criteria, such as a given time period and/or service filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ErrorGroupStats
	{
		
		/// <summary>
		/// Service contexts with a non-zero error count for the given filter criteria. This list can be truncated if multiple services are affected. Refer to `num_affected_services` for the total count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="affectedServices")]
		public ServiceContext[] AffectedServices { get; set; }
		
		/// <summary>
		/// Approximate number of affected users in the given group that match the filter criteria. Users are distinguished by data in the ErrorContext of the individual error events, such as their login name or their remote IP address in case of HTTP requests. The number of affected users can be zero even if the number of errors is non-zero if no data was provided from which the affected user could be deduced. Users are counted based on data in the request context that was provided in the error report. If more users are implicitly affected, such as due to a crash of the whole service, this is not reflected here.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="affectedUsersCount")]
		public string AffectedUsersCount { get; set; }
		
		/// <summary>
		/// Approximate total number of events in the given group that match the filter criteria.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public string Count { get; set; }
		
		/// <summary>
		/// Approximate first occurrence that was ever seen for this group and which matches the given filter criteria, ignoring the time_range that was specified in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="firstSeenTime")]
		public string FirstSeenTime { get; set; }
		
		/// <summary>
		/// Description of a group of similar error events.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="group")]
		public ErrorGroup Group { get; set; }
		
		/// <summary>
		/// Approximate last occurrence that was ever seen for this group and which matches the given filter criteria, ignoring the time_range that was specified in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastSeenTime")]
		public string LastSeenTime { get; set; }
		
		/// <summary>
		/// The total number of services with a non-zero error count for the given filter criteria.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="numAffectedServices")]
		public System.Nullable<System.Int32> NumAffectedServices { get; set; }
		
		/// <summary>
		/// An error event which is returned by the Error Reporting system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="representative")]
		public ErrorEvent Representative { get; set; }
		
		/// <summary>
		/// Approximate number of occurrences over time. Timed counts returned by ListGroups are guaranteed to be: - Inside the requested time interval - Non-overlapping, and - Ordered by ascending time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timedCounts")]
		public TimedCount[] TimedCounts { get; set; }
	}
	
	/// <summary>
	/// The number of errors in a given time period. All numbers are approximate since the error events are sampled before counting them.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimedCount
	{
		
		/// <summary>
		/// Approximate number of occurrences in the given time period.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public string Count { get; set; }
		
		/// <summary>
		/// End of the time period to which `count` refers (excluded).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Start of the time period to which `count` refers (included).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
	}
	
	/// <summary>
	/// Contains a set of requested error events.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEventsResponse
	{
		
		/// <summary>
		/// The error events which match the given request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorEvents")]
		public ErrorEvent[] ErrorEvents { get; set; }
		
		/// <summary>
		/// If non-empty, more results are available. Pass this token, along with the same query parameters as the first request, to view the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The timestamp specifies the start time to which the request was restricted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeRangeBegin")]
		public string TimeRangeBegin { get; set; }
	}
	
	/// <summary>
	/// Contains a set of requested error group stats.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListGroupStatsResponse
	{
		
		/// <summary>
		/// The error group stats which match the given request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorGroupStats")]
		public ErrorGroupStats[] ErrorGroupStats { get; set; }
		
		/// <summary>
		/// If non-empty, more results are available. Pass this token, along with the same query parameters as the first request, to view the next page of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The timestamp specifies the start time to which the request was restricted. The start time is set based on the requested time range. It may be adjusted to a later time if a project has exceeded the storage quota and older data has been deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeRangeBegin")]
		public string TimeRangeBegin { get; set; }
	}
	
	/// <summary>
	/// Response for reporting an individual error event. Data may be added to this message in the future.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReportErrorEventResponse
	{
	}
	
	/// <summary>
	/// An error event which is reported to the Error Reporting system.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReportedErrorEvent
	{
		
		/// <summary>
		/// A description of the context in which an error occurred. This data should be provided by the application when reporting an error, unless the error report has been generated automatically from Google App Engine logs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="context")]
		public ErrorContext Context { get; set; }
		
		/// <summary>
		/// Optional. Time when the event occurred. If not provided, the time when the event was received by the Error Reporting system is used. If provided, the time must not exceed the [logs retention period](https://cloud.google.com/logging/quotas#logs_retention_periods) in the past, or be more than 24 hours in the future. If an invalid time is provided, then an error is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventTime")]
		public string EventTime { get; set; }
		
		/// <summary>
		/// Required. The error message. If no `context.reportLocation` is provided, the message must contain a header (typically consisting of the exception type name and an error message) and an exception stack trace in one of the supported programming languages and formats. Supported languages are Java, Python, JavaScript, Ruby, C#, PHP, and Go. Supported stack trace formats are: * **Java**: Must be the return value of [`Throwable.printStackTrace()`](https://docs.oracle.com/javase/7/docs/api/java/lang/Throwable.html#printStackTrace%28%29). * **Python**: Must be the return value of [`traceback.format_exc()`](https://docs.python.org/2/library/traceback.html#traceback.format_exc). * **JavaScript**: Must be the value of [`error.stack`](https://github.com/v8/v8/wiki/Stack-Trace-API) as returned by V8. * **Ruby**: Must contain frames returned by [`Exception.backtrace`](https://ruby-doc.org/core-2.2.0/Exception.html#method-i-backtrace). * **C#**: Must be the return value of [`Exception.ToString()`](https://msdn.microsoft.com/en-us/library/system.exception.tostring.aspx). * **PHP**: Must be prefixed with `"PHP (Notice|Parse error|Fatal error|Warning): "` and contain the result of [`(string)$exception`](https://php.net/manual/en/exception.tostring.php). * **Go**: Must be the return value of [`runtime.Stack()`](https://golang.org/pkg/runtime/debug/#Stack).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Describes a running service that sends errors. Its version changes over time and multiple versions can run in parallel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceContext")]
		public ServiceContext ServiceContext { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Get the specified group.
		/// Clouderrorreporting_projects_groups_get v1beta1/{groupName}
		/// </summary>
		/// <param name="groupName">Required. The group resource name. Written as `projects/{projectID}/groups/{group_id}`. Call groupStats.list to return a list of groups belonging to this project. Example: `projects/my-project-123/groups/my-group` In the group resource name, the `group_id` is a unique identifier for a particular error group. The identifier is derived from key parts of the error-log content and is treated as Service Data. For information about how Service Data is handled, see [Google Cloud Privacy Notice](https://cloud.google.com/terms/cloud-privacy-notice).</param>
		/// <returns>Successful response</returns>
		public async Task<ErrorGroup> Clouderrorreporting_projects_groups_getAsync(string groupName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (groupName==null? "" : System.Uri.EscapeDataString(groupName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ErrorGroup>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Replace the data for the specified group. Fails if the group does not exist.
		/// Clouderrorreporting_projects_groups_update v1beta1/{name}
		/// </summary>
		/// <param name="name">The group resource name. Written as `projects/{projectID}/groups/{group_id}`. Example: `projects/my-project-123/groups/my-group` In the group resource name, the `group_id` is a unique identifier for a particular error group. The identifier is derived from key parts of the error-log content and is treated as Service Data. For information about how Service Data is handled, see [Google Cloud Privacy Notice](https://cloud.google.com/terms/cloud-privacy-notice).</param>
		/// <returns>Successful response</returns>
		public async Task<ErrorGroup> Clouderrorreporting_projects_groups_updateAsync(string name, ErrorGroup requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ErrorGroup>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes all error events of a given project.
		/// Clouderrorreporting_projects_deleteEvents v1beta1/{projectName}/events
		/// </summary>
		/// <param name="projectName">Required. The resource name of the Google Cloud Platform project. Written as `projects/{projectID}`, where `{projectID}` is the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: `projects/my-project-123`.</param>
		/// <returns>Successful response</returns>
		public async Task<DeleteEventsResponse> Clouderrorreporting_projects_deleteEventsAsync(string projectName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (projectName==null? "" : System.Uri.EscapeDataString(projectName))+"/events";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteEventsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the specified events.
		/// Clouderrorreporting_projects_events_list v1beta1/{projectName}/events
		/// </summary>
		/// <param name="projectName">Required. The resource name of the Google Cloud Platform project. Written as `projects/{projectID}`, where `{projectID}` is the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: `projects/my-project-123`.</param>
		/// <param name="groupId">Required. The group for which events shall be returned. The `group_id` is a unique identifier for a particular error group. The identifier is derived from key parts of the error-log content and is treated as Service Data. For information about how Service Data is handled, see [Google Cloud Privacy Notice](https://cloud.google.com/terms/cloud-privacy-notice).</param>
		/// <param name="pageSize">Optional. The maximum number of results to return per response.</param>
		/// <param name="pageToken">Optional. A `next_page_token` provided by a previous response.</param>
		/// <param name="serviceFilter_resourceType">Optional. The exact value to match against [`ServiceContext.resource_type`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.resource_type).</param>
		/// <param name="serviceFilter_service">Optional. The exact value to match against [`ServiceContext.service`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service).</param>
		/// <param name="serviceFilter_version">Optional. The exact value to match against [`ServiceContext.version`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version).</param>
		/// <param name="timeRange_period">Restricts the query to the specified time range.</param>
		/// <returns>Successful response</returns>
		public async Task<ListEventsResponse> Clouderrorreporting_projects_events_listAsync(string projectName, string groupId, int pageSize, string pageToken, string serviceFilter_resourceType, string serviceFilter_service, string serviceFilter_version, Clouderrorreporting_projects_events_listTimeRange_period timeRange_period, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (projectName==null? "" : System.Uri.EscapeDataString(projectName))+"/events&groupId=" + (groupId==null? "" : System.Uri.EscapeDataString(groupId))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&serviceFilter.resourceType=" + (serviceFilter_resourceType==null? "" : System.Uri.EscapeDataString(serviceFilter_resourceType))+"&serviceFilter.service=" + (serviceFilter_service==null? "" : System.Uri.EscapeDataString(serviceFilter_service))+"&serviceFilter.version=" + (serviceFilter_version==null? "" : System.Uri.EscapeDataString(serviceFilter_version))+"&timeRange.period=" + timeRange_period;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListEventsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Report an individual error event and record the event to a log. This endpoint accepts **either** an OAuth token, **or** an [API key](https://support.google.com/cloud/answer/6158862) for authentication. To use an API key, append it to the URL as the value of a `key` parameter. For example: `POST https://clouderrorreporting.googleapis.com/v1beta1/{projectName}/events:report?key=123ABC456` **Note:** [Error Reporting] (https://cloud.google.com/error-reporting) is a global service built on Cloud Logging and doesn't analyze logs stored in regional log buckets or logs routed to other Google Cloud projects.
		/// Clouderrorreporting_projects_events_report v1beta1/{projectName}/events:report
		/// </summary>
		/// <param name="projectName">Required. The resource name of the Google Cloud Platform project. Written as `projects/{projectId}`, where `{projectId}` is the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: // `projects/my-project-123`.</param>
		/// <returns>Successful response</returns>
		public async Task<ReportErrorEventResponse> Clouderrorreporting_projects_events_reportAsync(string projectName, ReportedErrorEvent requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (projectName==null? "" : System.Uri.EscapeDataString(projectName))+"/events:report";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ReportErrorEventResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the specified groups.
		/// Clouderrorreporting_projects_groupStats_list v1beta1/{projectName}/groupStats
		/// </summary>
		/// <param name="projectName">Required. The resource name of the Google Cloud Platform project. Written as `projects/{projectID}` or `projects/{projectNumber}`, where `{projectID}` and `{projectNumber}` can be found in the [Google Cloud console](https://support.google.com/cloud/answer/6158840). Examples: `projects/my-project-123`, `projects/5551234`.</param>
		/// <param name="alignment">Optional. The alignment of the timed counts to be returned. Default is `ALIGNMENT_EQUAL_AT_END`.</param>
		/// <param name="alignmentTime">Optional. Time where the timed counts shall be aligned if rounded alignment is chosen. Default is 00:00 UTC.</param>
		/// <param name="groupId">Optional. List all ErrorGroupStats with these IDs. The `group_id` is a unique identifier for a particular error group. The identifier is derived from key parts of the error-log content and is treated as Service Data. For information about how Service Data is handled, see [Google Cloud Privacy Notice] (https://cloud.google.com/terms/cloud-privacy-notice).</param>
		/// <param name="order">Optional. The sort order in which the results are returned. Default is `COUNT_DESC`.</param>
		/// <param name="pageSize">Optional. The maximum number of results to return per response. Default is 20.</param>
		/// <param name="pageToken">Optional. A next_page_token provided by a previous response. To view additional results, pass this token along with the identical query parameters as the first request.</param>
		/// <param name="serviceFilter_resourceType">Optional. The exact value to match against [`ServiceContext.resource_type`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.resource_type).</param>
		/// <param name="serviceFilter_service">Optional. The exact value to match against [`ServiceContext.service`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service).</param>
		/// <param name="serviceFilter_version">Optional. The exact value to match against [`ServiceContext.version`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version).</param>
		/// <param name="timeRange_period">Restricts the query to the specified time range.</param>
		/// <param name="timedCountDuration">Optional. The preferred duration for a single returned TimedCount. If not set, no timed counts are returned.</param>
		/// <returns>Successful response</returns>
		public async Task<ListGroupStatsResponse> Clouderrorreporting_projects_groupStats_listAsync(string projectName, Clouderrorreporting_projects_groupStats_listAlignment alignment, string alignmentTime, string[] groupId, Clouderrorreporting_projects_groupStats_listOrder order, int pageSize, string pageToken, string serviceFilter_resourceType, string serviceFilter_service, string serviceFilter_version, Clouderrorreporting_projects_events_listTimeRange_period timeRange_period, string timedCountDuration, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (projectName==null? "" : System.Uri.EscapeDataString(projectName))+"/groupStats&alignment=" + alignment+"&alignmentTime=" + (alignmentTime==null? "" : System.Uri.EscapeDataString(alignmentTime))+"&"+string.Join("&", groupId.Select(z => $"groupId={System.Uri.EscapeDataString(z.ToString())}"))+"&order=" + order+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&serviceFilter.resourceType=" + (serviceFilter_resourceType==null? "" : System.Uri.EscapeDataString(serviceFilter_resourceType))+"&serviceFilter.service=" + (serviceFilter_service==null? "" : System.Uri.EscapeDataString(serviceFilter_service))+"&serviceFilter.version=" + (serviceFilter_version==null? "" : System.Uri.EscapeDataString(serviceFilter_version))+"&timeRange.period=" + timeRange_period+"&timedCountDuration=" + (timedCountDuration==null? "" : System.Uri.EscapeDataString(timedCountDuration));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListGroupStatsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum Clouderrorreporting_projects_events_listTimeRange_period
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERIOD_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERIOD_1_HOUR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERIOD_6_HOURS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERIOD_1_DAY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERIOD_1_WEEK = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERIOD_30_DAYS = 5,
	}
	
	public enum Clouderrorreporting_projects_groupStats_listAlignment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR_COUNT_ALIGNMENT_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALIGNMENT_EQUAL_ROUNDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALIGNMENT_EQUAL_AT_END = 2,
	}
	
	public enum Clouderrorreporting_projects_groupStats_listOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GROUP_ORDER_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNT_DESC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAST_SEEN_DESC = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATED_DESC = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AFFECTED_USERS_DESC = 4,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Analysis
	{
		
		[System.Runtime.Serialization.DataMember(Name="config")]
		public string Config { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_finished")]
		public System.Nullable<System.DateTimeOffset> Date_finished { get; set; }
		
		/// <summary>
		/// Date of last modified analysis
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_last_modified")]
		public System.Nullable<System.DateTimeOffset> Date_last_modified { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_launched")]
		public System.Nullable<System.DateTimeOffset> Date_launched { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="features")]
		public string Features { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="slug")]
		public string Slug { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="urls_done")]
		public string Urls_done { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="urls_in_queue")]
		public string Urls_in_queue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public User User { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class User
	{
		
		[System.Runtime.Serialization.DataMember(Name="company_name")]
		public string Company_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_joined")]
		public System.Nullable<System.DateTimeOffset> Date_joined { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="is_organization")]
		public string Is_organization { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="login")]
		public string Login { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="config")]
		public string Config { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_finished")]
		public System.Nullable<System.DateTimeOffset> Date_finished { get; set; }
		
		/// <summary>
		/// Date of last modified analysis
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_last_modified")]
		public System.Nullable<System.DateTimeOffset> Date_last_modified { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_launched")]
		public System.Nullable<System.DateTimeOffset> Date_launched { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failures")]
		public string Failures { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="features")]
		public string Features { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int64> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="red_button_domain")]
		public string Red_button_domain { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="slug")]
		public string Slug { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="urls_done")]
		public string Urls_done { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="urls_in_queue")]
		public string Urls_in_queue { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public User User { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CrawlDatamodel
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public CrawlDatamodelField[] Fields { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="groups")]
		public CrawlDatamodelGroup[] Groups { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CrawlDatamodelField
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="group")]
		public string Group { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="multiple")]
		public bool Multiple { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="subtype")]
		public string Subtype { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CrawlDatamodelGroup
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CrawlOrphanURLs
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="visits")]
		public long Visits { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CrawlStatistics
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="depth_current")]
		public long Depth_current { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_upd_dt")]
		public System.DateTimeOffset Last_upd_dt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pages_dones")]
		public long Pages_dones { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pages_dones_2xx")]
		public long Pages_dones_2xx { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pages_dones_3xx")]
		public long Pages_dones_3xx { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pages_dones_4xx")]
		public long Pages_dones_4xx { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pages_dones_5xx")]
		public long Pages_dones_5xx { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pages_dones_networkerror")]
		public long Pages_dones_networkerror { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pages_dones_xxx")]
		public long Pages_dones_xxx { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="pages_known")]
		public long Pages_known { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CrawlStatisticsTime
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="avg_delay")]
		public CrawlStatisticsTimePoint[] Avg_delay { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="avg_size")]
		public CrawlStatisticsTimePoint[] Avg_size { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="frequency")]
		public string Frequency { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="http_code_2xx")]
		public CrawlStatisticsTimePoint[] Http_code_2xx { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="http_code_3xx")]
		public CrawlStatisticsTimePoint[] Http_code_3xx { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="http_code_4xx")]
		public CrawlStatisticsTimePoint[] Http_code_4xx { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="http_code_5xx")]
		public CrawlStatisticsTimePoint[] Http_code_5xx { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="http_code_xxx")]
		public CrawlStatisticsTimePoint[] Http_code_xxx { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="last_update_date")]
		public System.DateTimeOffset Last_update_date { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="new_urls")]
		public CrawlStatisticsTimePoint[] New_urls { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CrawlStatisticsTimePoint
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public long Count { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="datetime")]
		public System.DateTimeOffset Datetime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CrawlStatisticsUrls
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="content_type")]
		public string Content_type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="delay_first_byte")]
		public long Delay_first_byte { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="delay_last_byte")]
		public long Delay_last_byte { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="gzip")]
		public bool Gzip { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="http")]
		public long Http { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="length")]
		public long Length { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="redirects_to")]
		public string Redirects_to { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CsvExportStatus
	{
		
		[System.Runtime.Serialization.DataMember(Name="area")]
		public System.Nullable<System.Int64> Area { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="job_id")]
		public string Job_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="job_status")]
		public string Job_status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="job_url")]
		public string Job_url { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 2147483647
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nb_results")]
		[System.ComponentModel.DataAnnotations.Range(0, 2147483647)]
		public System.Nullable<System.Int64> Nb_results { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="query")]
		public UrlsQuery Query { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public string Results { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UrlsQuery
	{
		
		[System.Runtime.Serialization.DataMember(Name="fields")]
		public string[] Fields { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public string Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sort")]
		public string[] Sort { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Default
	{
	}
	
	/// <summary>
	/// default payload for object for all HTTP codes that are not covered individually
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DefaultPayload
	{
		
		[System.Runtime.Serialization.DataMember(Name="error")]
		public DefaultPayloadError Error { get; set; }
	}
	
	public class DefaultPayloadError
	{
		
		/// <summary>
		/// Error Code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error_code")]
		public string Error_code { get; set; }
		
		/// <summary>
		/// If available, detailed error
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error_detail")]
		public string Error_detail { get; set; }
		
		/// <summary>
		/// Error Message
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FieldValues
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public long Count { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="results")]
		public FieldValuesResult[] Results { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FieldValuesResult
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nb_urls")]
		public long Nb_urls { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinksPercentiles
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="percentiles")]
		public LinksPercentilesItem[] Percentiles { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinksPercentilesItem
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="avg")]
		public long Avg { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public long Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="max")]
		public long Max { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="metric_total")]
		public long Metric_total { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="min")]
		public long Min { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url_total")]
		public long Url_total { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinksTopDomains
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="follow_links")]
		public long Follow_links { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="follow_samples")]
		public LinksTopDomainsSamples[] Follow_samples { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nofollow_links")]
		public long Nofollow_links { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nofollow_samples")]
		public LinksTopDomainsSamples[] Nofollow_samples { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unique_follow_links")]
		public long Unique_follow_links { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unique_nofollow_links")]
		public long Unique_nofollow_links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LinksTopDomainsSamples
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public string[] Sources { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="unique_links")]
		public long Unique_links { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PageRankLost
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="external")]
		public float External { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="non_crawled")]
		public float Non_crawled { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="robots_txt")]
		public float Robots_txt { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Project
	{
		
		[System.Runtime.Serialization.DataMember(Name="active")]
		public System.Nullable<System.Boolean> Active { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="current_settings")]
		public ProjectSettingsSerializer Current_settings { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public string Date_created { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="slug")]
		public string Slug { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="user")]
		public User User { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProjectSettingsSerializer
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="allowed_domains")]
		public string[] Allowed_domains { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="blacklisted_domains")]
		public string[] Blacklisted_domains { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="compare_crawl")]
		public System.Nullable<System.Boolean> Compare_crawl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="crawl_gzip")]
		public System.Nullable<System.Boolean> Crawl_gzip { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="extra_headers")]
		public string Extra_headers { get; set; }
		
		/// <summary>
		/// Keep email in case user delete his social auth connection
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics_account_email")]
		public string Google_analytics_account_email { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 90
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics_nb_days")]
		[System.ComponentModel.DataAnnotations.Range(1, 90)]
		public System.Nullable<System.Int64> Google_analytics_nb_days { get; set; }
		
		/// <summary>
		/// Minimum: -2147483648
		/// Maximum: 2147483647
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics_site_id")]
		[System.ComponentModel.DataAnnotations.Range(-2147483648, 2147483647)]
		public System.Nullable<System.Int64> Google_analytics_site_id { get; set; }
		
		/// <summary>
		/// Minimum: -2147483648
		/// Maximum: 2147483647
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_social_auth_id")]
		[System.ComponentModel.DataAnnotations.Range(-2147483648, 2147483647)]
		public System.Nullable<System.Int64> Google_social_auth_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="has_robots_txt")]
		public string Has_robots_txt { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="header_settings")]
		public string[] Header_settings { get; set; }
		
		/// <summary>
		/// Minimum: 0
		/// Maximum: 2147483647
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="max_depth")]
		[System.ComponentModel.DataAnnotations.Range(0, 2147483647)]
		public System.Nullable<System.Int64> Max_depth { get; set; }
		
		/// <summary>
		/// Required
		/// Minimum: 1
		/// Maximum: 2147483647
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="max_nb_pages")]
		[System.ComponentModel.DataAnnotations.Range(1, 2147483647)]
		public long Max_nb_pages { get; set; }
		
		/// <summary>
		/// Minimum: 1
		/// Maximum: 2147483647
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="max_pages_per_sec")]
		[System.ComponentModel.DataAnnotations.Range(1, 2147483647)]
		public System.Nullable<System.Int64> Max_pages_per_sec { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="respect_nofollow")]
		public System.Nullable<System.Boolean> Respect_nofollow { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sitemaps")]
		public string[] Sitemaps { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="start_urls")]
		public string[] Start_urls { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="user_agent")]
		public string User_agent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProjectSavedFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public string Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="identifier")]
		public string Identifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RewritingRuleSerializer
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ignore_case")]
		public bool Ignore_case { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="regex")]
		public string Regex { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="replace")]
		public string Replace { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SitemapsReport
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public long Count { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public SitemapsReportSitemap[] Errors { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sitemap_indexes")]
		public SitemapsReportSitemap[] Sitemap_indexes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sitemap_only")]
		public SitemapsReportOnly Sitemap_only { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sitemaps")]
		public SitemapsReportSitemap[] Sitemaps { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SitemapsReportSitemap
	{
		
		[System.Runtime.Serialization.DataMember(Name="error")]
		public SitemapsReportSitemapError Error { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="file_type")]
		public string File_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="invalid_urls")]
		public System.Nullable<System.Int64> Invalid_urls { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sitemap_indexes")]
		public string[] Sitemap_indexes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="valid_urls")]
		public System.Nullable<System.Int64> Valid_urls { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SitemapsReportSitemapError
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SitemapsReportOnly
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="in_configuration")]
		public long In_configuration { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="out_of_configuration")]
		public long Out_of_configuration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class URLRewritingRulesSerializer
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="rules")]
		public RewritingRuleSerializer[] Rules { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="urls")]
		public string[] Urls { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UrlDetail
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UrlsAgg
	{
		
		[System.Runtime.Serialization.DataMember(Name="aggs")]
		public string[] Aggs { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="count")]
		public long Count { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UrlsAggs
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UrlsAgg Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="error")]
		public UrlsErrorAgg Error { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public long Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UrlsErrorAgg
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="error_code")]
		public string Error_code { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UrlsAggsQuery
	{
		
		[System.Runtime.Serialization.DataMember(Name="aggs")]
		public string[] Aggs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public string Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class string_
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// List all analyses for a project
		/// List all analyses for a project
		/// GetProjectAnalyses analyses/{username}/{project_slug}
		/// </summary>
		/// <param name="page">Page Number</param>
		/// <param name="size">Page Size</param>
		/// <returns>Successful operation</returns>
		public async Task<GetProjectAnalysesReturn> GetProjectAnalysesAsync(int page, int size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}?page="+page+"&size="+size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetProjectAnalysesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get an Analysis detail
		/// Get an Analysis detail
		/// GetAnalysisSummary analyses/{username}/{project_slug}/{analysis_slug}
		/// </summary>
		/// <returns>Successful operation</returns>
		public async Task<AnalysisDetail> GetAnalysisSummaryAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AnalysisDetail>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Return global statistics for an analysis
		/// Return global statistics for an analysis
		/// GetCrawlStatistics analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics
		/// </summary>
		/// <returns>Successful operation</returns>
		public async Task<CrawlStatistics> GetCrawlStatisticsAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CrawlStatistics>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Return crawl statistics grouped by time frequency (1 min, 5 mins or 60 min)
		/// Return crawl statistics grouped by time frequency (1 min, 5 mins or 60 min) for an analysis
		/// GetCrawlStatisticsByFrequency analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics/time
		/// </summary>
		/// <param name="limit">max number of elements to retrieve</param>
		/// <param name="frequency">Aggregation frequency</param>
		/// <returns>Successful operation</returns>
		public async Task<CrawlStatisticsTime> GetCrawlStatisticsByFrequencyAsync(int limit, GetCrawlStatisticsByFrequencyFrequency frequency, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics/time?limit="+limit+"&frequency=" + frequency;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CrawlStatisticsTime>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Return a list of 1000 latest URLs crawled (all crawled URLs or only URLS with HTTP errors)
		/// Return a list of 1000 latest URLs crawled (all crawled URLs or only URLS with HTTP errors)
		/// GetCrawlStatisticsUrls analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics/urls/{list_type}
		/// </summary>
		public async Task<string[]> GetCrawlStatisticsUrlsAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/crawl_statistics/urls/{list_type}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<string[]>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List of Orphan URLs
		/// List of Orphan URLs. URLs which generated visits from the selected source according to Google Analytics data, but were not crawled with by the Botify crawler (either because no links to them were found on the website, or because the crawler was not allowed to follow these links according to the project settings).   For a search engine (medium: origanic; sources: all, aol, ask, baidu, bing, google, naver, yahoo, yandex) or a social network (medium: social; sources: all, facebook, google+, linkedin, pinterest, reddit, tumblr, twitter)
		/// GetGanalyticsOrphanURLs analyses/{username}/{project_slug}/{analysis_slug}/features/ganalytics/orphan_urls/{medium}/{source}
		/// </summary>
		/// <param name="page">Page Number</param>
		/// <param name="size">Page Size</param>
		/// <returns>Successful operation</returns>
		public async Task<GetGanalyticsOrphanURLsReturn> GetGanalyticsOrphanURLsAsync(int page, int size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/features/ganalytics/orphan_urls/{medium}/{source}?page="+page+"&size="+size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetGanalyticsOrphanURLsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get inlinks percentiles
		/// Get inlinks percentiles
		/// GetLinksPercentiles analyses/{username}/{project_slug}/{analysis_slug}/features/links/percentiles
		/// </summary>
		/// <returns>Successful operation</returns>
		public async Task<LinksPercentiles> GetLinksPercentilesAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/features/links/percentiles";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<LinksPercentiles>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lost pagerank
		/// Lost pagerank
		/// GetPageRankLost analyses/{username}/{project_slug}/{analysis_slug}/features/pagerank/lost
		/// </summary>
		/// <returns>Successful operation</returns>
		public async Task<PageRankLost> GetPageRankLostAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/features/pagerank/lost";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PageRankLost>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get global information of the sitemaps found (sitemaps indexes, invalid sitemaps urls, etc
		/// Get global information of the sitemaps found (sitemaps indexes, invalid sitemaps urls, etc.)
		/// GetSitemapsReport analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/report
		/// </summary>
		/// <returns>Successful operation</returns>
		public async Task<SitemapsReport> GetSitemapsReportAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/report";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SitemapsReport>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Sample list of URLs which were found in your sitemaps but outside of the
		/// Sample list of URLs which were found in your sitemaps but outside of the crawl perimeter defined for the project, for instance domain/subdomain or protocol (HTTP/HTTPS) not allowed in the crawl settings.
		/// GetSitemapsSamplesOutOfConfig analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/samples/out_of_config
		/// </summary>
		/// <param name="page">Page Number</param>
		/// <param name="size">Page Size</param>
		/// <returns>Successful operation</returns>
		public async Task<GetSitemapsSamplesOutOfConfigReturn> GetSitemapsSamplesOutOfConfigAsync(int page, int size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/samples/out_of_config?page="+page+"&size="+size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetSitemapsSamplesOutOfConfigReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Sample list of URLs which were found in your sitemaps, within the project
		/// Sample list of URLs which were found in your sitemaps, within the project allowed scope (allowed domains/subdomains/protocols), but not found by the Botify crawler.
		/// GetSitemapsSamplesSitemapsOnly analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/samples/sitemap_only
		/// </summary>
		/// <param name="page">Page Number</param>
		/// <param name="size">Page Size</param>
		/// <returns>Successful operation</returns>
		public async Task<GetSitemapsSamplesSitemapsOnlyReturn> GetSitemapsSamplesSitemapsOnlyAsync(int page, int size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/features/sitemaps/samples/sitemap_only?page="+page+"&size="+size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetSitemapsSamplesSitemapsOnlyReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Top domains
		/// Top domains
		/// GetLinksTopDomains analyses/{username}/{project_slug}/{analysis_slug}/features/top_domains/domains
		/// </summary>
		/// <param name="page">Page Number</param>
		/// <param name="size">Page Size</param>
		/// <returns>Successful operation</returns>
		public async Task<GetLinksTopDomainsReturn> GetLinksTopDomainsAsync(int page, int size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/features/top_domains/domains?page="+page+"&size="+size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetLinksTopDomainsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Top subddomains
		/// Top subddomains
		/// GetLinksTopSubdomains analyses/{username}/{project_slug}/{analysis_slug}/features/top_domains/subdomains
		/// </summary>
		/// <param name="page">Page Number</param>
		/// <param name="size">Page Size</param>
		/// <returns>Successful operation</returns>
		public async Task<GetLinksTopSubdomainsReturn> GetLinksTopSubdomainsAsync(int page, int size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/features/top_domains/subdomains?page="+page+"&size="+size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetLinksTopSubdomainsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Executes a query and returns a paginated response
		/// Executes a query and returns a paginated response
		/// GetUrls analyses/{username}/{project_slug}/{analysis_slug}/urls
		/// </summary>
		/// <param name="area">Analysis context to execute the query</param>
		/// <param name="page">Page Number</param>
		/// <param name="size">Page Size</param>
		/// <returns>Successful operation</returns>
		public async Task<GetUrlsReturn> GetUrlsAsync(GetUrlsArea area, int page, int size, UrlsQuery requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/urls?area=" + area+"&page="+page+"&size="+size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetUrlsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Query aggregator
		/// Query aggregator. It accepts multiple queries
		/// GetUrlsAggs analyses/{username}/{project_slug}/{analysis_slug}/urls/aggs
		/// </summary>
		public async Task<string[]> GetUrlsAggsAsync(GetUrlsAggsArea area, UrlsAggsQuery[] requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/urls/aggs?area=" + area;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<string[]>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets an Analysis datamodel
		/// Gets an Analysis datamodel
		/// GetUrlsDatamodel analyses/{username}/{project_slug}/{analysis_slug}/urls/datamodel
		/// </summary>
		/// <returns>Successful operation</returns>
		public async Task<CrawlDatamodel> GetUrlsDatamodelAsync(GetUrlsDatamodelArea area, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/urls/datamodel?area=" + area;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CrawlDatamodel>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// A list of the CSV Exports requests and their current status
		/// A list of the CSV Exports requests and their current status
		/// GetUrlsExports analyses/{username}/{project_slug}/{analysis_slug}/urls/export
		/// </summary>
		/// <param name="page">Page Number</param>
		/// <param name="size">Page Size</param>
		/// <returns>Successful operation</returns>
		public async Task<GetUrlsExportsReturn> GetUrlsExportsAsync(int page, int size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/urls/export?page="+page+"&size="+size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetUrlsExportsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new UrlExport object and starts a task that will export the results into a csv
		/// Creates a new UrlExport object and starts a task that will export the results into a csv. Returns the model id that manages the task
		/// CreateUrlsExport analyses/{username}/{project_slug}/{analysis_slug}/urls/export
		/// </summary>
		public async Task CreateUrlsExportAsync(CreateUrlsExportArea area, UrlsQuery requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/urls/export?area=" + area;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Checks the status of an CSVUrlExportJob object
		/// Checks the status of an CSVUrlExportJob object. Returns json object with the status.
		/// GetUrlsExportStatus analyses/{username}/{project_slug}/{analysis_slug}/urls/export/{url_export_id}
		/// </summary>
		/// <returns>Successful operation</returns>
		public async Task<CsvExportStatus> GetUrlsExportStatusAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/urls/export/{url_export_id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CsvExportStatus>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Return most frequent segments (= suggested patterns in the previous version)
		/// Return most frequent segments (= suggested patterns in the previous version) for a Botify Query.
		/// GetUrlsSuggestedFilters analyses/{username}/{project_slug}/{analysis_slug}/urls/suggested_filters
		/// </summary>
		public async Task GetUrlsSuggestedFiltersAsync(GetUrlsSuggestedFiltersArea area, UrlsAggsQuery requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/urls/suggested_filters?area=" + area;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the detail of an URL for an analysis
		/// Gets the detail of an URL for an analysis
		/// GetUrlDetail analyses/{username}/{project_slug}/{analysis_slug}/urls/{url}
		/// </summary>
		/// <param name="fields">comma separated list of fields to return (c.f. URLs Datamodel)</param>
		/// <returns>Successful operation</returns>
		public async Task<UrlDetail> GetUrlDetailAsync(string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analyses/{username}/{project_slug}/{analysis_slug}/urls/{url}?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UrlDetail>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List all active projects for the user
		/// List all active projects for the user
		/// GetUserProjects projects/{username}
		/// </summary>
		/// <param name="page">Page Number</param>
		/// <param name="size">Page Size</param>
		/// <returns>Successful operation</returns>
		public async Task<GetUserProjectsReturn> GetUserProjectsAsync(int page, int size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "projects/{username}?page="+page+"&size="+size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetUserProjectsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Match and replace parts of a URL based on rules passed in POST data
		/// Match and replace parts of a URL based on rules passed in POST data.
		/// TestUrlRewritingRules projects/{username}/{project_slug}/features/url_rewriting/rules_validator
		/// </summary>
		public async Task TestUrlRewritingRulesAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "projects/{username}/{project_slug}/features/url_rewriting/rules_validator";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List all the project's saved filters (each filter's name, ID and filter value)
		/// List all the project's saved filters (each filter's name, ID and filter value)
		/// GetSavedFilters projects/{username}/{project_slug}/filters
		/// </summary>
		/// <param name="page">Page Number</param>
		/// <param name="size">Page Size</param>
		/// <returns>Successful operation</returns>
		public async Task<GetSavedFiltersReturn> GetSavedFiltersAsync(int page, int size, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "projects/{username}/{project_slug}/filters?page="+page+"&size="+size;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetSavedFiltersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves a specific saved filter's name, ID and filter value
		/// Retrieves a specific saved filter's name, ID and filter value
		/// GetSavedFilter projects/{username}/{project_slug}/filters/{identifier}
		/// </summary>
		/// <returns>Successful operation</returns>
		public async Task<ProjectSavedFilter> GetSavedFilterAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "projects/{username}/{project_slug}/filters/{identifier}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ProjectSavedFilter>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Project Query aggregator
		/// Project Query aggregator. It accepts multiple queries that will be executed on all completed analyses in the project
		/// GetProjectUrlsAggs projects/{username}/{project_slug}/urls/aggs
		/// </summary>
		/// <param name="area">Analysis context to execute the queries</param>
		/// <param name="last_analysis_slug">Last analysis on the trend</param>
		/// <param name="nb_analyses">Max number of analysis to return
		/// Minimum: 1
		/// Maximum: 20
		// </param>
		public async Task GetProjectUrlsAggsAsync(GetProjectUrlsAggsArea area, string last_analysis_slug, int nb_analyses, UrlsAggsQuery[] requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "projects/{username}/{project_slug}/urls/aggs?area=" + area+"&last_analysis_slug=" + (last_analysis_slug==null? "" : System.Uri.EscapeDataString(last_analysis_slug))+"&nb_analyses="+nb_analyses;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class GetProjectAnalysesReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public Analysis[] Results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	public enum GetCrawlStatisticsByFrequencyFrequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="1mn")]
		_1mn = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="5mn")]
		_5mn = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="60mn")]
		_60mn = 2,
	}
	
	public class GetGanalyticsOrphanURLsReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public CrawlOrphanURLs[] Results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	public class GetSitemapsSamplesOutOfConfigReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public string[] Results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	public class GetSitemapsSamplesSitemapsOnlyReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public string[] Results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	public class GetLinksTopDomainsReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public LinksTopDomains[] Results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	public class GetLinksTopSubdomainsReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public LinksTopDomains[] Results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	public enum GetUrlsArea
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		current = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disappeared = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="new")]
		_new = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		search_engines_orphans = 3,
	}
	
	public class GetUrlsReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public UrlDetail[] Results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	public enum GetUrlsAggsArea
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		current = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disappeared = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="new")]
		_new = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		search_engines_orphans = 3,
	}
	
	public enum GetUrlsDatamodelArea
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		current = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disappeared = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="new")]
		_new = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		search_engines_orphans = 3,
	}
	
	public class GetUrlsExportsReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public CsvExportStatus[] Results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	public enum CreateUrlsExportArea
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		current = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disappeared = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="new")]
		_new = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		search_engines_orphans = 3,
	}
	
	public enum GetUrlsSuggestedFiltersArea
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		current = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="new")]
		_new = 1,
	}
	
	public class GetUserProjectsReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public Project[] Results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	public class GetSavedFiltersReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="page")]
		public System.Nullable<System.Int32> Page { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previous")]
		public string Previous { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public ProjectSavedFilter[] Results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	public enum GetProjectUrlsAggsArea
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		current = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disappeared = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="new")]
		_new = 2,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

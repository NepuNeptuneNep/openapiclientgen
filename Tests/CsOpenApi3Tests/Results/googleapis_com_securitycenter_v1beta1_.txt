//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Represents an access event.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Access
	{
		
		/// <summary>
		/// Caller's IP address, such as "1.1.1.1".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="callerIp")]
		public string CallerIp { get; set; }
		
		/// <summary>
		/// Represents a geographical location for a given access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="callerIpGeo")]
		public Geolocation CallerIpGeo { get; set; }
		
		/// <summary>
		/// The method that the service account called, e.g. "SetIamPolicy".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="methodName")]
		public string MethodName { get; set; }
		
		/// <summary>
		/// Associated email, such as "foo@google.com". The email address of the authenticated user or a service account acting on behalf of a third party principal making the request. For third party identity callers, the `principal_subject` field is populated instead of this field. For privacy reasons, the principal email address is sometimes redacted. For more information, see [Caller identities in audit logs](https://cloud.google.com/logging/docs/audit#user-id).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="principalEmail")]
		public string PrincipalEmail { get; set; }
		
		/// <summary>
		/// A string that represents the principal_subject that is associated with the identity. Unlike `principal_email`, `principal_subject` supports principals that aren't associated with email addresses, such as third party principals. For most identities, the format is `principal://iam.googleapis.com/{identity pool name}/subject/{subject}`. Some GKE identities, such as GKE_WORKLOAD, FREEFORM, and GKE_HUB_WORKLOAD, still use the legacy format `serviceAccount:{identity pool name}[{subject}]`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="principalSubject")]
		public string PrincipalSubject { get; set; }
		
		/// <summary>
		/// The identity delegation history of an authenticated service account that made the request. The `serviceAccountDelegationInfo[]` object contains information about the real authorities that try to access Google Cloud resources by delegating on a service account. When multiple authorities are present, they are guaranteed to be sorted based on the original ordering of the identity delegation events.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccountDelegationInfo")]
		public ServiceAccountDelegationInfo[] ServiceAccountDelegationInfo { get; set; }
		
		/// <summary>
		/// The name of the service account key that was used to create or exchange credentials when authenticating the service account that made the request. This is a scheme-less URI full resource name. For example: "//iam.googleapis.com/projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}". 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccountKeyName")]
		public string ServiceAccountKeyName { get; set; }
		
		/// <summary>
		/// This is the API service that the service account made a call to, e.g. "iam.googleapis.com"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceName")]
		public string ServiceName { get; set; }
		
		/// <summary>
		/// The caller's user agent string associated with the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userAgent")]
		public string UserAgent { get; set; }
		
		/// <summary>
		/// Type of user agent associated with the finding. For example, an operating system shell or an embedded or standalone application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userAgentFamily")]
		public string UserAgentFamily { get; set; }
		
		/// <summary>
		/// A string that represents a username. The username provided depends on the type of the finding and is likely not an IAM principal. For example, this can be a system username if the finding is related to a virtual machine, or it can be an application login username.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
	}
	
	/// <summary>
	/// Represents a geographical location for a given access.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Geolocation
	{
		
		/// <summary>
		/// A CLDR.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="regionCode")]
		public string RegionCode { get; set; }
	}
	
	/// <summary>
	/// Identity delegation history of an authenticated service account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceAccountDelegationInfo
	{
		
		/// <summary>
		/// The email address of a Google account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="principalEmail")]
		public string PrincipalEmail { get; set; }
		
		/// <summary>
		/// A string representing the principal_subject associated with the identity. As compared to `principal_email`, supports principals that aren't associated with email addresses, such as third party principals. For most identities, the format will be `principal://iam.googleapis.com/{identity pool name}/subjects/{subject}` except for some GKE identities (GKE_WORKLOAD, FREEFORM, GKE_HUB_WORKLOAD) that are still in the legacy format `serviceAccount:{identity pool name}[{subject}]`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="principalSubject")]
		public string PrincipalSubject { get; set; }
	}
	
	/// <summary>
	/// Conveys information about a Kubernetes access review (such as one returned by a [`kubectl auth can-i`](https://kubernetes.io/docs/reference/access-authn-authz/authorization/#checking-api-access) command) that was involved in a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccessReview
	{
		
		/// <summary>
		/// The API group of the resource. "*" means all.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="group")]
		public string Group { get; set; }
		
		/// <summary>
		/// The name of the resource being requested. Empty means all.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Namespace of the action being requested. Currently, there is no distinction between no namespace and all namespaces. Both are represented by "" (empty).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ns")]
		public string Ns { get; set; }
		
		/// <summary>
		/// The optional resource type requested. "*" means all.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
		
		/// <summary>
		/// The optional subresource type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subresource")]
		public string Subresource { get; set; }
		
		/// <summary>
		/// A Kubernetes resource API verb, like get, list, watch, create, update, delete, proxy. "*" means all.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verb")]
		public string Verb { get; set; }
		
		/// <summary>
		/// The API version of the resource. "*" means all.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Represents an application associated with a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Application
	{
		
		/// <summary>
		/// The base URI that identifies the network location of the application in which the vulnerability was detected. Examples: http://11.22.33.44, http://foo.com, http://11.22.33.44:8080
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="baseUri")]
		public string BaseUri { get; set; }
		
		/// <summary>
		/// The full URI with payload that can be used to reproduce the vulnerability. Example: http://11.22.33.44/reflected/parameter/attribute/singlequoted/js?p=aMmYgI6H
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fullUri")]
		public string FullUri { get; set; }
	}
	
	/// <summary>
	/// Security Command Center representation of a Google Cloud resource. The Asset is a Security Command Center resource that captures information about a single Google Cloud resource. All modifications to an Asset are only within the context of Security Command Center and don't affect the referenced Google Cloud resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Asset
	{
		
		/// <summary>
		/// The time at which the asset was created in Security Command Center.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The relative resource name of this asset. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/assets/{asset_id}".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Resource managed properties. These properties are managed and defined by the Google Cloud resource and cannot be modified by the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceProperties")]
		public System.Collections.Generic.Dictionary<string, object> ResourceProperties { get; set; }
		
		/// <summary>
		/// Security Command Center managed properties. These properties are managed by Security Command Center and cannot be modified by the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityCenterProperties")]
		public SecurityCenterProperties SecurityCenterProperties { get; set; }
		
		/// <summary>
		/// User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityMarks")]
		public GoogleCloudSecuritycenterV1beta1SecurityMarks SecurityMarks { get; set; }
		
		/// <summary>
		/// The time at which the asset was last updated, added, or deleted in Security Command Center.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Security Command Center managed properties. These properties are managed by Security Command Center and cannot be modified by the user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SecurityCenterProperties
	{
		
		/// <summary>
		/// Immutable. The full resource name of the Google Cloud resource this asset represents. This field is immutable after create time. See: https://cloud.google.com/apis/design/resource_names#full_resource_name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceName")]
		public string ResourceName { get; set; }
		
		/// <summary>
		/// Owners of the Google Cloud resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceOwners")]
		public string[] ResourceOwners { get; set; }
		
		/// <summary>
		/// The full resource name of the immediate parent of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceParent")]
		public string ResourceParent { get; set; }
		
		/// <summary>
		/// The full resource name of the project the resource belongs to. See: https://cloud.google.com/apis/design/resource_names#full_resource_name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceProject")]
		public string ResourceProject { get; set; }
		
		/// <summary>
		/// The type of the Google Cloud resource. Examples include: APPLICATION, PROJECT, and ORGANIZATION. This is a case insensitive field defined by Security Command Center and/or the producer of the resource and is immutable after create time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceType")]
		public string ResourceType { get; set; }
	}
	
	/// <summary>
	/// User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1beta1SecurityMarks
	{
		
		/// <summary>
		/// Mutable user specified security marks belonging to the parent resource. Constraints are as follows: * Keys and values are treated as case insensitive * Keys must be between 1 - 256 characters (inclusive) * Keys must be letters, numbers, underscores, or dashes * Values have leading and trailing whitespace trimmed, remaining characters must be between 1 - 4096 characters (inclusive)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marks")]
		public System.Collections.Generic.Dictionary<string, string> Marks { get; set; }
		
		/// <summary>
		/// The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks" "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The configuration used for Asset Discovery runs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetDiscoveryConfig
	{
		
		/// <summary>
		/// The mode to use for filtering asset discovery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inclusionMode")]
		public System.Nullable<AssetDiscoveryConfigInclusionMode> InclusionMode { get; set; }
		
		/// <summary>
		/// The project ids to use for filtering asset discovery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectIds")]
		public string[] ProjectIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssetDiscoveryConfigInclusionMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INCLUSION_MODE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INCLUDE_ONLY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXCLUDE = 2,
	}
	
	/// <summary>
	/// An attack exposure contains the results of an attack path simulation run.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AttackExposure
	{
		
		/// <summary>
		/// The resource name of the attack path simulation result that contains the details regarding this attack exposure score. Example: organizations/123/attackExposureResults/456
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attackExposureResult")]
		public string AttackExposureResult { get; set; }
		
		/// <summary>
		/// The number of high value resources that are exposed as a result of this finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exposedHighValueResourcesCount")]
		public System.Nullable<System.Int32> ExposedHighValueResourcesCount { get; set; }
		
		/// <summary>
		/// The number of high value resources that are exposed as a result of this finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exposedLowValueResourcesCount")]
		public System.Nullable<System.Int32> ExposedLowValueResourcesCount { get; set; }
		
		/// <summary>
		/// The number of medium value resources that are exposed as a result of this finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exposedMediumValueResourcesCount")]
		public System.Nullable<System.Int32> ExposedMediumValueResourcesCount { get; set; }
		
		/// <summary>
		/// The most recent time the attack exposure was updated on this finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latestCalculationTime")]
		public string LatestCalculationTime { get; set; }
		
		/// <summary>
		/// A number between 0 (inclusive) and infinity that represents how important this finding is to remediate. The higher the score, the more important it is to remediate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="score")]
		public System.Nullable<System.Double> Score { get; set; }
		
		/// <summary>
		/// What state this AttackExposure is in. This captures whether or not an attack exposure has been calculated or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<AttackExposureState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AttackExposureState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CALCULATED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_CALCULATED = 2,
	}
	
	/// <summary>
	/// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuditConfig
	{
		
		/// <summary>
		/// The configuration for logging of each type of permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditLogConfigs")]
		public AuditLogConfig[] AuditLogConfigs { get; set; }
		
		/// <summary>
		/// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuditLogConfig
	{
		
		/// <summary>
		/// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exemptedMembers")]
		public string[] ExemptedMembers { get; set; }
		
		/// <summary>
		/// The log type that this config enables.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logType")]
		public System.Nullable<AuditLogConfigLogType> LogType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AuditLogConfigLogType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOG_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADMIN_READ = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_WRITE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_READ = 3,
	}
	
	/// <summary>
	/// Information related to Google Cloud Backup and DR Service findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BackupDisasterRecovery
	{
		
		/// <summary>
		/// The name of the Backup and DR appliance that captures, moves, and manages the lifecycle of backup data. For example, “backup-server-57137”.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appliance")]
		public string Appliance { get; set; }
		
		/// <summary>
		/// The names of Backup and DR applications. An application is a VM, database, or file system on a managed host monitored by a backup and recovery appliance. For example, “centos7-01-vol00”, “centos7-01-vol01”, “centos7-01-vol02”.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="applications")]
		public string[] Applications { get; set; }
		
		/// <summary>
		/// The timestamp at which the Backup and DR backup was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backupCreateTime")]
		public string BackupCreateTime { get; set; }
		
		/// <summary>
		/// The name of a Backup and DR template which comprises one or more backup policies. See the [Backup and DR documentation](https://cloud.google.com/backup-disaster-recovery/docs/concepts/backup-plan#temp) for more information. For example, “snap-ov”.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backupTemplate")]
		public string BackupTemplate { get; set; }
		
		/// <summary>
		/// The backup type of the Backup and DR image. For example, “Snapshot”, “Remote Snapshot”, “OnVault”.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backupType")]
		public string BackupType { get; set; }
		
		/// <summary>
		/// The name of a Backup and DR host, which is managed by the backup and recovery appliance and known to the management console. The host can be of type Generic (for example, Compute Engine, SQL Server, Oracle DB, SMB file system, etc.), vCenter, or an ESX server. See the [Backup and DR documentation on hosts](https://cloud.google.com/backup-disaster-recovery/docs/configuration/manage-hosts-and-their-applications) for more information. For example, “centos7-01”.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="host")]
		public string Host { get; set; }
		
		/// <summary>
		/// The names of Backup and DR policies that are associated with a template and that define when to run a backup, how frequently to run a backup, and how long to retain the backup image. For example, “onvaults”.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policies")]
		public string[] Policies { get; set; }
		
		/// <summary>
		/// The names of Backup and DR advanced policy options of a policy applying to an application. See the [Backup and DR documentation on policy options](https://cloud.google.com/backup-disaster-recovery/docs/create-plan/policy-settings). For example, “skipofflineappsincongrp, nounmap”.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policyOptions")]
		public string[] PolicyOptions { get; set; }
		
		/// <summary>
		/// The name of the Backup and DR resource profile that specifies the storage media for backups of application and VM data. See the [Backup and DR documentation on profiles](https://cloud.google.com/backup-disaster-recovery/docs/concepts/backup-plan#profile). For example, “GCP”.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profile")]
		public string Profile { get; set; }
		
		/// <summary>
		/// The name of the Backup and DR storage pool that the backup and recovery appliance is storing data in. The storage pool could be of type Cloud, Primary, Snapshot, or OnVault. See the [Backup and DR documentation on storage pools](https://cloud.google.com/backup-disaster-recovery/docs/concepts/storage-pools). For example, “DiskPoolOne”.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="storagePool")]
		public string StoragePool { get; set; }
	}
	
	/// <summary>
	/// Associates `members`, or principals, with a `role`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Binding
	{
		
		/// <summary>
		/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public Expr Condition { get; set; }
		
		/// <summary>
		/// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public string[] Members { get; set; }
		
		/// <summary>
		/// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
	}
	
	/// <summary>
	/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Expr
	{
		
		/// <summary>
		/// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Textual representation of an expression in Common Expression Language syntax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expression")]
		public string Expression { get; set; }
		
		/// <summary>
		/// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// The request message for Operations.CancelOperation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelOperationRequest
	{
	}
	
	/// <summary>
	/// The [data profile](https://cloud.google.com/dlp/docs/data-profiles) associated with the finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudDlpDataProfile
	{
		
		/// <summary>
		/// Name of the data profile, for example, `projects/123/locations/europe/tableProfiles/8383929`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataProfile")]
		public string DataProfile { get; set; }
		
		/// <summary>
		/// The resource hierarchy level at which the data profile was generated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentType")]
		public System.Nullable<CloudDlpDataProfileParentType> ParentType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CloudDlpDataProfileParentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARENT_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ORGANIZATION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROJECT = 2,
	}
	
	/// <summary>
	/// Details about the Cloud Data Loss Prevention (Cloud DLP) [inspection job](https://cloud.google.com/dlp/docs/concepts-job-triggers) that produced the finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudDlpInspection
	{
		
		/// <summary>
		/// Whether Cloud DLP scanned the complete resource or a sampled subset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fullScan")]
		public System.Nullable<System.Boolean> FullScan { get; set; }
		
		/// <summary>
		/// The type of information (or *[infoType](https://cloud.google.com/dlp/docs/infotypes-reference)*) found, for example, `EMAIL_ADDRESS` or `STREET_ADDRESS`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoType")]
		public string InfoType { get; set; }
		
		/// <summary>
		/// The number of times Cloud DLP found this infoType within this job and resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="infoTypeCount")]
		public string InfoTypeCount { get; set; }
		
		/// <summary>
		/// Name of the inspection job, for example, `projects/123/locations/europe/dlpJobs/i-8383929`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inspectJob")]
		public string InspectJob { get; set; }
	}
	
	/// <summary>
	/// Metadata taken from a [Cloud Logging LogEntry](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry)
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudLoggingEntry
	{
		
		/// <summary>
		/// A unique identifier for the log entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="insertId")]
		public string InsertId { get; set; }
		
		/// <summary>
		/// The type of the log (part of `log_name`. `log_name` is the resource name of the log to which this log entry belongs). For example: `cloudresourcemanager.googleapis.com/activity`. Note that this field is not URL-encoded, unlike the `LOG_ID` field in `LogEntry`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logId")]
		public string LogId { get; set; }
		
		/// <summary>
		/// The organization, folder, or project of the monitored resource that produced this log entry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceContainer")]
		public string ResourceContainer { get; set; }
		
		/// <summary>
		/// The time the event described by the log entry occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public string Timestamp { get; set; }
	}
	
	/// <summary>
	/// Contains compliance information about a security standard indicating unmet recommendations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Compliance
	{
		
		/// <summary>
		/// Policies within the standard or benchmark, for example, A.12.4.1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ids")]
		public string[] Ids { get; set; }
		
		/// <summary>
		/// Industry-wide compliance standards or benchmarks, such as CIS, PCI, and OWASP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="standard")]
		public string Standard { get; set; }
		
		/// <summary>
		/// Version of the standard or benchmark, for example, 1.1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Contains information about the IP connection associated with the finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Connection
	{
		
		/// <summary>
		/// Destination IP address. Not present for sockets that are listening and not connected.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationIp")]
		public string DestinationIp { get; set; }
		
		/// <summary>
		/// Destination port. Not present for sockets that are listening and not connected.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationPort")]
		public System.Nullable<System.Int32> DestinationPort { get; set; }
		
		/// <summary>
		/// IANA Internet Protocol Number such as TCP(6) and UDP(17).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protocol")]
		public System.Nullable<ConnectionProtocol> Protocol { get; set; }
		
		/// <summary>
		/// Source IP address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceIp")]
		public string SourceIp { get; set; }
		
		/// <summary>
		/// Source port.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourcePort")]
		public System.Nullable<System.Int32> SourcePort { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ConnectionProtocol
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROTOCOL_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ICMP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TCP = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UDP = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GRE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ESP = 5,
	}
	
	/// <summary>
	/// The email address of a contact.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Contact
	{
		
		/// <summary>
		/// An email address. For example, "`person123@company.com`".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
	}
	
	/// <summary>
	/// Details about specific contacts
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContactDetails
	{
		
		/// <summary>
		/// A list of contacts
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contacts")]
		public Contact[] Contacts { get; set; }
	}
	
	/// <summary>
	/// Container associated with the finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Container
	{
		
		/// <summary>
		/// The time that the container was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Optional container image ID, if provided by the container runtime. Uniquely identifies the container image launched using a container image digest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imageId")]
		public string ImageId { get; set; }
		
		/// <summary>
		/// Container labels, as provided by the container runtime.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public Label[] Labels { get; set; }
		
		/// <summary>
		/// Name of the container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Container image URI provided when configuring a pod or container. This string can identify a container image version using mutable tags.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Represents a generic name-value label. A label has separate name and value fields to support filtering with the `contains()` function. For more information, see [Filtering on array-type fields](https://cloud.google.com/security-command-center/docs/how-to-api-list-findings#array-contains-filtering).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Label
	{
		
		/// <summary>
		/// Name of the label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Value that corresponds to the label's name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// CVE stands for Common Vulnerabilities and Exposures. More information: https://cve.mitre.org
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Cve
	{
		
		/// <summary>
		/// Common Vulnerability Scoring System version 3.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cvssv3")]
		public Cvssv3 Cvssv3 { get; set; }
		
		/// <summary>
		/// The unique identifier for the vulnerability. e.g. CVE-2021-34527
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Additional information about the CVE. e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="references")]
		public Reference[] References { get; set; }
		
		/// <summary>
		/// Whether upstream fix is available for the CVE.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="upstreamFixAvailable")]
		public System.Nullable<System.Boolean> UpstreamFixAvailable { get; set; }
	}
	
	/// <summary>
	/// Common Vulnerability Scoring System version 3.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Cvssv3
	{
		
		/// <summary>
		/// This metric describes the conditions beyond the attacker's control that must exist in order to exploit the vulnerability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attackComplexity")]
		public System.Nullable<Cvssv3AttackComplexity> AttackComplexity { get; set; }
		
		/// <summary>
		/// Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments. This metric reflects the context by which vulnerability exploitation is possible.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attackVector")]
		public System.Nullable<Cvssv3AttackVector> AttackVector { get; set; }
		
		/// <summary>
		/// This metric measures the impact to the availability of the impacted component resulting from a successfully exploited vulnerability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="availabilityImpact")]
		public System.Nullable<Cvssv3AvailabilityImpact> AvailabilityImpact { get; set; }
		
		/// <summary>
		/// The base score is a function of the base metric scores.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="baseScore")]
		public System.Nullable<System.Double> BaseScore { get; set; }
		
		/// <summary>
		/// This metric measures the impact to the confidentiality of the information resources managed by a software component due to a successfully exploited vulnerability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="confidentialityImpact")]
		public Cvssv3AvailabilityImpact ConfidentialityImpact { get; set; }
		
		/// <summary>
		/// This metric measures the impact to integrity of a successfully exploited vulnerability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="integrityImpact")]
		public Cvssv3AvailabilityImpact IntegrityImpact { get; set; }
		
		/// <summary>
		/// This metric describes the level of privileges an attacker must possess before successfully exploiting the vulnerability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="privilegesRequired")]
		public System.Nullable<Cvssv3PrivilegesRequired> PrivilegesRequired { get; set; }
		
		/// <summary>
		/// The Scope metric captures whether a vulnerability in one vulnerable component impacts resources in components beyond its security scope.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scope")]
		public System.Nullable<Cvssv3Scope> Scope { get; set; }
		
		/// <summary>
		/// This metric captures the requirement for a human user, other than the attacker, to participate in the successful compromise of the vulnerable component.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userInteraction")]
		public System.Nullable<Cvssv3UserInteraction> UserInteraction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Cvssv3AttackComplexity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTACK_COMPLEXITY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTACK_COMPLEXITY_LOW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTACK_COMPLEXITY_HIGH = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Cvssv3AttackVector
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTACK_VECTOR_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTACK_VECTOR_NETWORK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTACK_VECTOR_ADJACENT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTACK_VECTOR_LOCAL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTACK_VECTOR_PHYSICAL = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Cvssv3AvailabilityImpact
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPACT_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPACT_HIGH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPACT_LOW = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPACT_NONE = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Cvssv3PrivilegesRequired
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVILEGES_REQUIRED_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVILEGES_REQUIRED_NONE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVILEGES_REQUIRED_LOW = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVILEGES_REQUIRED_HIGH = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Cvssv3Scope
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCOPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCOPE_UNCHANGED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCOPE_CHANGED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Cvssv3UserInteraction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER_INTERACTION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER_INTERACTION_NONE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER_INTERACTION_REQUIRED = 2,
	}
	
	/// <summary>
	/// Additional Links
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Reference
	{
		
		/// <summary>
		/// Source of the reference e.g. NVD
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		/// <summary>
		/// Uri for the mentioned source e.g. https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-34527.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Represents database access information, such as queries. A database may be a sub-resource of an instance (as in the case of Cloud SQL instances or Cloud Spanner instances), or the database instance itself. Some database resources might not have the [full resource name](https://google.aip.dev/122#full-resource-names) populated because these resource types, such as Cloud SQL databases, are not yet supported by Cloud Asset Inventory. In these cases only the display name is provided.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Database
	{
		
		/// <summary>
		/// The human-readable name of the database that the user connected to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The target usernames, roles, or groups of an SQL privilege grant, which is not an IAM policy change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="grantees")]
		public string[] Grantees { get; set; }
		
		/// <summary>
		/// Some database resources may not have the [full resource name](https://google.aip.dev/122#full-resource-names) populated because these resource types are not yet supported by Cloud Asset Inventory (e.g. Cloud SQL databases). In these cases only the display name will be provided. The [full resource name](https://google.aip.dev/122#full-resource-names) of the database that the user connected to, if it is supported by Cloud Asset Inventory.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The SQL statement that is associated with the database access.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string Query { get; set; }
		
		/// <summary>
		/// The username used to connect to the database. The username might not be an IAM principal and does not have a set format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userName")]
		public string UserName { get; set; }
		
		/// <summary>
		/// The version of the database, for example, POSTGRES_14. See [the complete list](https://cloud.google.com/sql/docs/mysql/admin-api/rest/v1/SqlDatabaseVersion).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Memory hash detection contributing to the binary family match.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Detection
	{
		
		/// <summary>
		/// The name of the binary associated with the memory hash signature detection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="binary")]
		public string Binary { get; set; }
		
		/// <summary>
		/// The percentage of memory page hashes in the signature that were matched.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="percentPagesMatched")]
		public System.Nullable<System.Double> PercentPagesMatched { get; set; }
	}
	
	/// <summary>
	/// Path of the file in terms of underlying disk/partition identifiers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DiskPath
	{
		
		/// <summary>
		/// UUID of the partition (format https://wiki.archlinux.org/title/persistent_block_device_naming#by-uuid)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partitionUuid")]
		public string PartitionUuid { get; set; }
		
		/// <summary>
		/// Relative path of the file in the partition as a JSON encoded string. Example: /home/user1/executable_file.sh
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relativePath")]
		public string RelativePath { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Empty
	{
	}
	
	/// <summary>
	/// A name-value pair representing an environment variable used in an operating system process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EnvironmentVariable
	{
		
		/// <summary>
		/// Environment variable name as a JSON encoded string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Environment variable value as a JSON encoded string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="val")]
		public string Val { get; set; }
	}
	
	/// <summary>
	/// Resource where data was exfiltrated from or exfiltrated to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExfilResource
	{
		
		/// <summary>
		/// Subcomponents of the asset that was exfiltrated, like URIs used during exfiltration, table names, databases, and filenames. For example, multiple tables might have been exfiltrated from the same Cloud SQL instance, or multiple files might have been exfiltrated from the same Cloud Storage bucket.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="components")]
		public string[] Components { get; set; }
		
		/// <summary>
		/// The resource's [full resource name](https://cloud.google.com/apis/design/resource_names#full_resource_name).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Exfiltration represents a data exfiltration attempt from one or more sources to one or more targets. The `sources` attribute lists the sources of the exfiltrated data. The `targets` attribute lists the destinations the data was copied to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Exfiltration
	{
		
		/// <summary>
		/// If there are multiple sources, then the data is considered "joined" between them. For instance, BigQuery can join multiple tables, and each table would be considered a source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public ExfilResource[] Sources { get; set; }
		
		/// <summary>
		/// If there are multiple targets, each target would get a complete copy of the "joined" source data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targets")]
		public ExfilResource[] Targets { get; set; }
		
		/// <summary>
		/// Total exfiltrated bytes processed for the entire job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalExfiltratedBytes")]
		public string TotalExfiltratedBytes { get; set; }
	}
	
	/// <summary>
	/// File information about the related binary/library used by an executable, or the script used by a script interpreter
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class File
	{
		
		/// <summary>
		/// Prefix of the file contents as a JSON-encoded string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public string Contents { get; set; }
		
		/// <summary>
		/// Path of the file in terms of underlying disk/partition identifiers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diskPath")]
		public DiskPath DiskPath { get; set; }
		
		/// <summary>
		/// The length in bytes of the file prefix that was hashed. If hashed_size == size, any hashes reported represent the entire file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hashedSize")]
		public string HashedSize { get; set; }
		
		/// <summary>
		/// True when the hash covers only a prefix of the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="partiallyHashed")]
		public System.Nullable<System.Boolean> PartiallyHashed { get; set; }
		
		/// <summary>
		/// Absolute path of the file as a JSON encoded string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// SHA256 hash of the first hashed_size bytes of the file encoded as a hex string. If hashed_size == size, sha256 represents the SHA256 hash of the entire file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sha256")]
		public string Sha256 { get; set; }
		
		/// <summary>
		/// Size of the file in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public string Size { get; set; }
	}
	
	/// <summary>
	/// Security Command Center finding. A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Finding
	{
		
		/// <summary>
		/// Represents an access event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="access")]
		public Access Access { get; set; }
		
		/// <summary>
		/// Represents an application associated with a finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="application")]
		public Application Application { get; set; }
		
		/// <summary>
		/// An attack exposure contains the results of an attack path simulation run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attackExposure")]
		public AttackExposure AttackExposure { get; set; }
		
		/// <summary>
		/// Information related to Google Cloud Backup and DR Service findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backupDisasterRecovery")]
		public BackupDisasterRecovery BackupDisasterRecovery { get; set; }
		
		/// <summary>
		/// The canonical name of the finding. It's either "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}", "folders/{folder_id}/sources/{source_id}/findings/{finding_id}" or "projects/{project_number}/sources/{source_id}/findings/{finding_id}", depending on the closest CRM ancestor of the resource associated with the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canonicalName")]
		public string CanonicalName { get; set; }
		
		/// <summary>
		/// The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: "XSS_FLASH_INJECTION"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category")]
		public string Category { get; set; }
		
		/// <summary>
		/// The [data profile](https://cloud.google.com/dlp/docs/data-profiles) associated with the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudDlpDataProfile")]
		public CloudDlpDataProfile CloudDlpDataProfile { get; set; }
		
		/// <summary>
		/// Details about the Cloud Data Loss Prevention (Cloud DLP) [inspection job](https://cloud.google.com/dlp/docs/concepts-job-triggers) that produced the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudDlpInspection")]
		public CloudDlpInspection CloudDlpInspection { get; set; }
		
		/// <summary>
		/// Contains compliance information for security standards associated to the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="compliances")]
		public Compliance[] Compliances { get; set; }
		
		/// <summary>
		/// Contains information about the IP connection associated with the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connections")]
		public Connection[] Connections { get; set; }
		
		/// <summary>
		/// Output only. Map containing the points of contact for the given finding. The key represents the type of contact, while the value contains a list of all the contacts that pertain. Please refer to: https://cloud.google.com/resource-manager/docs/managing-notification-contacts#notification-categories { "security": { "contacts": [ { "email": "person1@company.com" }, { "email": "person2@company.com" } ] } }
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contacts")]
		public System.Collections.Generic.Dictionary<string, ContactDetails> Contacts { get; set; }
		
		/// <summary>
		/// Containers associated with the finding. This field provides information for both Kubernetes and non-Kubernetes containers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containers")]
		public Container[] Containers { get; set; }
		
		/// <summary>
		/// The time at which the finding was created in Security Command Center.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Represents database access information, such as queries. A database may be a sub-resource of an instance (as in the case of Cloud SQL instances or Cloud Spanner instances), or the database instance itself. Some database resources might not have the [full resource name](https://google.aip.dev/122#full-resource-names) populated because these resource types, such as Cloud SQL databases, are not yet supported by Cloud Asset Inventory. In these cases only the display name is provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="database")]
		public Database Database { get; set; }
		
		/// <summary>
		/// Contains more details about the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The time the finding was first detected. If an existing finding is updated, then this is the time the update occurred. For example, if the finding represents an open firewall, this property captures the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding is later resolved, then this time reflects when the finding was resolved. This must not be set to a value greater than the current timestamp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventTime")]
		public string EventTime { get; set; }
		
		/// <summary>
		/// Exfiltration represents a data exfiltration attempt from one or more sources to one or more targets. The `sources` attribute lists the sources of the exfiltrated data. The `targets` attribute lists the destinations the data was copied to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exfiltration")]
		public Exfiltration Exfiltration { get; set; }
		
		/// <summary>
		/// Output only. Third party SIEM/SOAR fields within SCC, contains external system information and external system finding fields.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="externalSystems")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudSecuritycenterV1ExternalSystem> ExternalSystems { get; set; }
		
		/// <summary>
		/// The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be either empty or a well formed URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="externalUri")]
		public string ExternalUri { get; set; }
		
		/// <summary>
		/// File associated with the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="files")]
		public File[] Files { get; set; }
		
		/// <summary>
		/// The class of the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="findingClass")]
		public System.Nullable<FindingFindingClass> FindingClass { get; set; }
		
		/// <summary>
		/// Represents IAM bindings associated with the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iamBindings")]
		public IamBinding[] IamBindings { get; set; }
		
		/// <summary>
		/// Represents what's commonly known as an _indicator of compromise_ (IoC) in computer forensics. This is an artifact observed on a network or in an operating system that, with high confidence, indicates a computer intrusion. For more information, see [Indicator of compromise](https://en.wikipedia.org/wiki/Indicator_of_compromise).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="indicator")]
		public Indicator Indicator { get; set; }
		
		/// <summary>
		/// Kernel mode rootkit signatures.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kernelRootkit")]
		public KernelRootkit KernelRootkit { get; set; }
		
		/// <summary>
		/// Kubernetes-related attributes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kubernetes")]
		public Kubernetes Kubernetes { get; set; }
		
		/// <summary>
		/// The load balancers associated with the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loadBalancers")]
		public LoadBalancer[] LoadBalancers { get; set; }
		
		/// <summary>
		/// Log entries that are relevant to the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logEntries")]
		public LogEntry[] LogEntries { get; set; }
		
		/// <summary>
		/// MITRE ATT&CK tactics and techniques related to this finding. See: https://attack.mitre.org
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mitreAttack")]
		public MitreAttack MitreAttack { get; set; }
		
		/// <summary>
		/// Unique identifier of the module which generated the finding. Example: folders/598186756061/securityHealthAnalyticsSettings/customModules/56799441161885
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="moduleName")]
		public string ModuleName { get; set; }
		
		/// <summary>
		/// Indicates the mute state of a finding (either muted, unmuted or undefined). Unlike other attributes of a finding, a finding provider shouldn't set the value of mute.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mute")]
		public System.Nullable<FindingMute> Mute { get; set; }
		
		/// <summary>
		/// Records additional information about the mute operation, for example, the [mute configuration](/security-command-center/docs/how-to-mute-findings) that muted the finding and the user who muted the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="muteInitiator")]
		public string MuteInitiator { get; set; }
		
		/// <summary>
		/// Output only. The most recent time this finding was muted or unmuted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="muteUpdateTime")]
		public string MuteUpdateTime { get; set; }
		
		/// <summary>
		/// The [relative resource name](https://cloud.google.com/apis/design/resource_names#relative_resource_name) of the finding. Example: "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}", "folders/{folder_id}/sources/{source_id}/findings/{finding_id}", "projects/{project_id}/sources/{source_id}/findings/{finding_id}".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Steps to address the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextSteps")]
		public string NextSteps { get; set; }
		
		/// <summary>
		/// Contains information about the org policies associated with the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orgPolicies")]
		public OrgPolicy[] OrgPolicies { get; set; }
		
		/// <summary>
		/// The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after creation time. For example: "organizations/{organization_id}/sources/{source_id}"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// Output only. The human readable display name of the finding source such as "Event Threat Detection" or "Security Health Analytics".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentDisplayName")]
		public string ParentDisplayName { get; set; }
		
		/// <summary>
		/// Represents operating system processes associated with the Finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processes")]
		public Process[] Processes { get; set; }
		
		/// <summary>
		/// For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined string. This field is immutable after creation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceName")]
		public string ResourceName { get; set; }
		
		/// <summary>
		/// User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityMarks")]
		public SecurityMarks SecurityMarks { get; set; }
		
		/// <summary>
		/// Represents a posture that is deployed on Google Cloud by the Security Command Center Posture Management service. A posture contains one or more policy sets. A policy set is a group of policies that enforce a set of security rules on Google Cloud.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityPosture")]
		public SecurityPosture SecurityPosture { get; set; }
		
		/// <summary>
		/// The severity of the finding. This field is managed by the source that writes the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public System.Nullable<FindingSeverity> Severity { get; set; }
		
		/// <summary>
		/// Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and must start with a letter and contain alphanumeric characters or underscores only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceProperties")]
		public System.Collections.Generic.Dictionary<string, object> SourceProperties { get; set; }
		
		/// <summary>
		/// The state of the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<FindingState> State { get; set; }
		
		/// <summary>
		/// Refers to common vulnerability fields e.g. cve, cvss, cwe etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vulnerability")]
		public Vulnerability Vulnerability { get; set; }
	}
	
	/// <summary>
	/// Representation of third party SIEM/SOAR fields within SCC.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1ExternalSystem
	{
		
		/// <summary>
		/// References primary/secondary etc assignees in the external system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assignees")]
		public string[] Assignees { get; set; }
		
		/// <summary>
		/// The priority of the finding's corresponding case in the external system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="casePriority")]
		public string CasePriority { get; set; }
		
		/// <summary>
		/// The SLA of the finding's corresponding case in the external system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="caseSla")]
		public string CaseSla { get; set; }
		
		/// <summary>
		/// The link to the finding's corresponding case in the external system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="caseUri")]
		public string CaseUri { get; set; }
		
		/// <summary>
		/// The time when the case was last updated, as reported by the external system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="externalSystemUpdateTime")]
		public string ExternalSystemUpdateTime { get; set; }
		
		/// <summary>
		/// The identifier that's used to track the finding's corresponding case in the external system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="externalUid")]
		public string ExternalUid { get; set; }
		
		/// <summary>
		/// Full resource name of the external system, for example: "organizations/1234/sources/5678/findings/123456/externalSystems/jira", "folders/1234/sources/5678/findings/123456/externalSystems/jira", "projects/1234/sources/5678/findings/123456/externalSystems/jira"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The most recent status of the finding's corresponding case, as reported by the external system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// Information about the ticket, if any, that is being used to track the resolution of the issue that is identified by this finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ticketInfo")]
		public TicketInfo TicketInfo { get; set; }
	}
	
	/// <summary>
	/// Information about the ticket, if any, that is being used to track the resolution of the issue that is identified by this finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TicketInfo
	{
		
		/// <summary>
		/// The assignee of the ticket in the ticket system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assignee")]
		public string Assignee { get; set; }
		
		/// <summary>
		/// The description of the ticket in the ticket system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The identifier of the ticket in the ticket system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The latest status of the ticket, as reported by the ticket system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// The time when the ticket was last updated, as reported by the ticket system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// The link to the ticket in the ticket system.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FindingFindingClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FINDING_CLASS_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		THREAT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VULNERABILITY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MISCONFIGURATION = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OBSERVATION = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCC_ERROR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSTURE_VIOLATION = 6,
	}
	
	/// <summary>
	/// Represents a particular IAM binding, which captures a member's role addition, removal, or state.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IamBinding
	{
		
		/// <summary>
		/// The action that was performed on a Binding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action")]
		public System.Nullable<IamBindingAction> Action { get; set; }
		
		/// <summary>
		/// A single identity requesting access for a Cloud Platform resource, for example, "foo@google.com".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member")]
		public string Member { get; set; }
		
		/// <summary>
		/// Role that is assigned to "members". For example, "roles/viewer", "roles/editor", or "roles/owner".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IamBindingAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADD = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVE = 2,
	}
	
	/// <summary>
	/// Represents what's commonly known as an _indicator of compromise_ (IoC) in computer forensics. This is an artifact observed on a network or in an operating system that, with high confidence, indicates a computer intrusion. For more information, see [Indicator of compromise](https://en.wikipedia.org/wiki/Indicator_of_compromise).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Indicator
	{
		
		/// <summary>
		/// List of domains associated to the Finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domains")]
		public string[] Domains { get; set; }
		
		/// <summary>
		/// The list of IP addresses that are associated with the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ipAddresses")]
		public string[] IpAddresses { get; set; }
		
		/// <summary>
		/// The list of matched signatures indicating that the given process is present in the environment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="signatures")]
		public ProcessSignature[] Signatures { get; set; }
		
		/// <summary>
		/// The list of URIs associated to the Findings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uris")]
		public string[] Uris { get; set; }
	}
	
	/// <summary>
	/// Indicates what signature matched this process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProcessSignature
	{
		
		/// <summary>
		/// A signature corresponding to memory page hashes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="memoryHashSignature")]
		public MemoryHashSignature MemoryHashSignature { get; set; }
		
		/// <summary>
		/// Describes the type of resource associated with the signature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="signatureType")]
		public System.Nullable<ProcessSignatureSignatureType> SignatureType { get; set; }
		
		/// <summary>
		/// A signature corresponding to a YARA rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="yaraRuleSignature")]
		public YaraRuleSignature YaraRuleSignature { get; set; }
	}
	
	/// <summary>
	/// A signature corresponding to memory page hashes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MemoryHashSignature
	{
		
		/// <summary>
		/// The binary family.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="binaryFamily")]
		public string BinaryFamily { get; set; }
		
		/// <summary>
		/// The list of memory hash detections contributing to the binary family match.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detections")]
		public Detection[] Detections { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProcessSignatureSignatureType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIGNATURE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIGNATURE_TYPE_PROCESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIGNATURE_TYPE_FILE = 2,
	}
	
	/// <summary>
	/// A signature corresponding to a YARA rule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class YaraRuleSignature
	{
		
		/// <summary>
		/// The name of the YARA rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="yaraRule")]
		public string YaraRule { get; set; }
	}
	
	/// <summary>
	/// Kernel mode rootkit signatures.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KernelRootkit
	{
		
		/// <summary>
		/// Rootkit name, when available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// True if unexpected modifications of kernel code memory are present.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unexpectedCodeModification")]
		public System.Nullable<System.Boolean> UnexpectedCodeModification { get; set; }
		
		/// <summary>
		/// True if `ftrace` points are present with callbacks pointing to regions that are not in the expected kernel or module code range.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unexpectedFtraceHandler")]
		public System.Nullable<System.Boolean> UnexpectedFtraceHandler { get; set; }
		
		/// <summary>
		/// True if interrupt handlers that are are not in the expected kernel or module code regions are present.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unexpectedInterruptHandler")]
		public System.Nullable<System.Boolean> UnexpectedInterruptHandler { get; set; }
		
		/// <summary>
		/// True if kernel code pages that are not in the expected kernel or module code regions are present.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unexpectedKernelCodePages")]
		public System.Nullable<System.Boolean> UnexpectedKernelCodePages { get; set; }
		
		/// <summary>
		/// True if `kprobe` points are present with callbacks pointing to regions that are not in the expected kernel or module code range.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unexpectedKprobeHandler")]
		public System.Nullable<System.Boolean> UnexpectedKprobeHandler { get; set; }
		
		/// <summary>
		/// True if unexpected processes in the scheduler run queue are present. Such processes are in the run queue, but not in the process task list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unexpectedProcessesInRunqueue")]
		public System.Nullable<System.Boolean> UnexpectedProcessesInRunqueue { get; set; }
		
		/// <summary>
		/// True if unexpected modifications of kernel read-only data memory are present.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unexpectedReadOnlyDataModification")]
		public System.Nullable<System.Boolean> UnexpectedReadOnlyDataModification { get; set; }
		
		/// <summary>
		/// True if system call handlers that are are not in the expected kernel or module code regions are present.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unexpectedSystemCallHandler")]
		public System.Nullable<System.Boolean> UnexpectedSystemCallHandler { get; set; }
	}
	
	/// <summary>
	/// Kubernetes-related attributes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Kubernetes
	{
		
		/// <summary>
		/// Provides information on any Kubernetes access reviews (privilege checks) relevant to the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accessReviews")]
		public AccessReview[] AccessReviews { get; set; }
		
		/// <summary>
		/// Provides Kubernetes role binding information for findings that involve [RoleBindings or ClusterRoleBindings](https://cloud.google.com/kubernetes-engine/docs/how-to/role-based-access-control).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindings")]
		public GoogleCloudSecuritycenterV1Binding[] Bindings { get; set; }
		
		/// <summary>
		/// GKE [node pools](https://cloud.google.com/kubernetes-engine/docs/concepts/node-pools) associated with the finding. This field contains node pool information for each node, when it is available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nodePools")]
		public NodePool[] NodePools { get; set; }
		
		/// <summary>
		/// Provides Kubernetes [node](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture#nodes) information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nodes")]
		public Node[] Nodes { get; set; }
		
		/// <summary>
		/// Kubernetes objects related to the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objects")]
		public Object[] Objects { get; set; }
		
		/// <summary>
		/// Kubernetes [Pods](https://cloud.google.com/kubernetes-engine/docs/concepts/pod) associated with the finding. This field contains Pod records for each container that is owned by a Pod.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pods")]
		public Pod[] Pods { get; set; }
		
		/// <summary>
		/// Provides Kubernetes role information for findings that involve [Roles or ClusterRoles](https://cloud.google.com/kubernetes-engine/docs/how-to/role-based-access-control).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="roles")]
		public Role[] Roles { get; set; }
	}
	
	/// <summary>
	/// Represents a Kubernetes RoleBinding or ClusterRoleBinding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1Binding
	{
		
		/// <summary>
		/// Name for the binding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Namespace for the binding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ns")]
		public string Ns { get; set; }
		
		/// <summary>
		/// Kubernetes Role or ClusterRole.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public Role Role { get; set; }
		
		/// <summary>
		/// Represents one or more subjects that are bound to the role. Not always available for PATCH requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subjects")]
		public Subject[] Subjects { get; set; }
	}
	
	/// <summary>
	/// Kubernetes Role or ClusterRole.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Role
	{
		
		/// <summary>
		/// Role type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kind")]
		public System.Nullable<RoleKind> Kind { get; set; }
		
		/// <summary>
		/// Role name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Role namespace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ns")]
		public string Ns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RoleKind
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KIND_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLUSTER_ROLE = 2,
	}
	
	/// <summary>
	/// Represents a Kubernetes subject.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Subject
	{
		
		/// <summary>
		/// Authentication type for the subject.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kind")]
		public System.Nullable<SubjectKind> Kind { get; set; }
		
		/// <summary>
		/// Name for the subject.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Namespace for the subject.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ns")]
		public string Ns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SubjectKind
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTH_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVICEACCOUNT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GROUP = 3,
	}
	
	/// <summary>
	/// Provides GKE node pool information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NodePool
	{
		
		/// <summary>
		/// Kubernetes node pool name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Nodes associated with the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nodes")]
		public Node[] Nodes { get; set; }
	}
	
	/// <summary>
	/// Kubernetes nodes associated with the finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Node
	{
		
		/// <summary>
		/// [Full resource name](https://google.aip.dev/122#full-resource-names) of the Compute Engine VM running the cluster node.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Kubernetes object related to the finding, uniquely identified by GKNN. Used if the object Kind is not one of Pod, Node, NodePool, Binding, or AccessReview.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Object
	{
		
		/// <summary>
		/// Pod containers associated with this finding, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containers")]
		public Container[] Containers { get; set; }
		
		/// <summary>
		/// Kubernetes object group, such as "policy.k8s.io/v1".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="group")]
		public string Group { get; set; }
		
		/// <summary>
		/// Kubernetes object kind, such as "Namespace".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kind")]
		public string Kind { get; set; }
		
		/// <summary>
		/// Kubernetes object name. For details see https://kubernetes.io/docs/concepts/overview/working-with-objects/names/.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Kubernetes object namespace. Must be a valid DNS label. Named "ns" to avoid collision with C++ namespace keyword. For details see https://kubernetes.io/docs/tasks/administer-cluster/namespaces/.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ns")]
		public string Ns { get; set; }
	}
	
	/// <summary>
	/// A Kubernetes Pod.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Pod
	{
		
		/// <summary>
		/// Pod containers associated with this finding, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containers")]
		public Container[] Containers { get; set; }
		
		/// <summary>
		/// Pod labels. For Kubernetes containers, these are applied to the container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public Label[] Labels { get; set; }
		
		/// <summary>
		/// Kubernetes Pod name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Kubernetes Pod namespace.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ns")]
		public string Ns { get; set; }
	}
	
	/// <summary>
	/// Contains information related to the load balancer associated with the finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LoadBalancer
	{
		
		/// <summary>
		/// The name of the load balancer associated with the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// An individual entry in a log.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LogEntry
	{
		
		/// <summary>
		/// Metadata taken from a [Cloud Logging LogEntry](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudLoggingEntry")]
		public CloudLoggingEntry CloudLoggingEntry { get; set; }
	}
	
	/// <summary>
	/// MITRE ATT&CK tactics and techniques related to this finding. See: https://attack.mitre.org
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MitreAttack
	{
		
		/// <summary>
		/// Additional MITRE ATT&CK tactics related to this finding, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalTactics")]
		public string[] AdditionalTactics { get; set; }
		
		/// <summary>
		/// Additional MITRE ATT&CK techniques related to this finding, if any, along with any of their respective parent techniques.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="additionalTechniques")]
		public string[] AdditionalTechniques { get; set; }
		
		/// <summary>
		/// The MITRE ATT&CK tactic most closely represented by this finding, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primaryTactic")]
		public System.Nullable<MitreAttackPrimaryTactic> PrimaryTactic { get; set; }
		
		/// <summary>
		/// The MITRE ATT&CK technique most closely represented by this finding, if any. primary_techniques is a repeated field because there are multiple levels of MITRE ATT&CK techniques. If the technique most closely represented by this finding is a sub-technique (e.g. `SCANNING_IP_BLOCKS`), both the sub-technique and its parent technique(s) will be listed (e.g. `SCANNING_IP_BLOCKS`, `ACTIVE_SCANNING`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primaryTechniques")]
		public string[] PrimaryTechniques { get; set; }
		
		/// <summary>
		/// The MITRE ATT&CK version referenced by the above fields. E.g. "8".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MitreAttackPrimaryTactic
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TACTIC_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECONNAISSANCE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_DEVELOPMENT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INITIAL_ACCESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTION = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERSISTENCE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVILEGE_ESCALATION = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEFENSE_EVASION = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREDENTIAL_ACCESS = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISCOVERY = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LATERAL_MOVEMENT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COLLECTION = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMAND_AND_CONTROL = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXFILTRATION = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPACT = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FindingMute
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MUTE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MUTED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNMUTED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNDEFINED = 3,
	}
	
	/// <summary>
	/// Contains information about the org policies associated with the finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OrgPolicy
	{
		
		/// <summary>
		/// The resource name of the org policy. Example: "organizations/{organization_id}/policies/{constraint_name}"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Represents an operating system process.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Process
	{
		
		/// <summary>
		/// Process arguments as JSON encoded strings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="args")]
		public string[] Args { get; set; }
		
		/// <summary>
		/// True if `args` is incomplete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="argumentsTruncated")]
		public System.Nullable<System.Boolean> ArgumentsTruncated { get; set; }
		
		/// <summary>
		/// File information about the related binary/library used by an executable, or the script used by a script interpreter
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="binary")]
		public File Binary { get; set; }
		
		/// <summary>
		/// Process environment variables.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="envVariables")]
		public EnvironmentVariable[] EnvVariables { get; set; }
		
		/// <summary>
		/// True if `env_variables` is incomplete.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="envVariablesTruncated")]
		public System.Nullable<System.Boolean> EnvVariablesTruncated { get; set; }
		
		/// <summary>
		/// File information for libraries loaded by the process.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="libraries")]
		public File[] Libraries { get; set; }
		
		/// <summary>
		/// The process name, as displayed in utilities like `top` and `ps`. This name can be accessed through `/proc/[pid]/comm` and changed with `prctl(PR_SET_NAME)`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The parent process ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentPid")]
		public string ParentPid { get; set; }
		
		/// <summary>
		/// The process ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pid")]
		public string Pid { get; set; }
		
		/// <summary>
		/// File information about the related binary/library used by an executable, or the script used by a script interpreter
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="script")]
		public File Script { get; set; }
	}
	
	/// <summary>
	/// User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SecurityMarks
	{
		
		/// <summary>
		/// The canonical name of the marks. Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks" "folders/{folder_id}/assets/{asset_id}/securityMarks" "projects/{project_number}/assets/{asset_id}/securityMarks" "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks" "folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks" "projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canonicalName")]
		public string CanonicalName { get; set; }
		
		/// <summary>
		/// Mutable user specified security marks belonging to the parent resource. Constraints are as follows: * Keys and values are treated as case insensitive * Keys must be between 1 - 256 characters (inclusive) * Keys must be letters, numbers, underscores, or dashes * Values have leading and trailing whitespace trimmed, remaining characters must be between 1 - 4096 characters (inclusive)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marks")]
		public System.Collections.Generic.Dictionary<string, string> Marks { get; set; }
		
		/// <summary>
		/// The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks" "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Represents a posture that is deployed on Google Cloud by the Security Command Center Posture Management service. A posture contains one or more policy sets. A policy set is a group of policies that enforce a set of security rules on Google Cloud.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SecurityPosture
	{
		
		/// <summary>
		/// The name of the policy that has been updated, for example, `projects/{project_id}/policies/{constraint_name}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="changedPolicy")]
		public string ChangedPolicy { get; set; }
		
		/// <summary>
		/// Name of the posture, for example, `organizations/{org_id}/locations/{location}/postures/{posture_name}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The name of the posture deployment, for example, `projects/{project_id}/posturedeployments/{posture_deployment_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postureDeployment")]
		public string PostureDeployment { get; set; }
		
		/// <summary>
		/// The project, folder, or organization on which the posture is deployed, for example, `projects/{project_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postureDeploymentResource")]
		public string PostureDeploymentResource { get; set; }
		
		/// <summary>
		/// The version of the posture, for example, `c7cfa2a8`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionId")]
		public string RevisionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FindingSeverity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEVERITY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRITICAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOW = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FindingState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INACTIVE = 2,
	}
	
	/// <summary>
	/// Refers to common vulnerability fields e.g. cve, cvss, cwe etc.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Vulnerability
	{
		
		/// <summary>
		/// CVE stands for Common Vulnerabilities and Exposures. More information: https://cve.mitre.org
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cve")]
		public Cve Cve { get; set; }
		
		/// <summary>
		/// Package is a generic definition of a package.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fixedPackage")]
		public Package FixedPackage { get; set; }
		
		/// <summary>
		/// Package is a generic definition of a package.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="offendingPackage")]
		public Package OffendingPackage { get; set; }
		
		/// <summary>
		/// SecurityBulletin are notifications of vulnerabilities of Google products.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityBulletin")]
		public SecurityBulletin SecurityBulletin { get; set; }
	}
	
	/// <summary>
	/// Package is a generic definition of a package.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Package
	{
		
		/// <summary>
		/// The CPE URI where the vulnerability was detected.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cpeUri")]
		public string CpeUri { get; set; }
		
		/// <summary>
		/// The name of the package where the vulnerability was detected.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="packageName")]
		public string PackageName { get; set; }
		
		/// <summary>
		/// Type of package, for example, os, maven, or go.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="packageType")]
		public string PackageType { get; set; }
		
		/// <summary>
		/// The version of the package.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="packageVersion")]
		public string PackageVersion { get; set; }
	}
	
	/// <summary>
	/// SecurityBulletin are notifications of vulnerabilities of Google products.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SecurityBulletin
	{
		
		/// <summary>
		/// ID of the bulletin corresponding to the vulnerability.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bulletinId")]
		public string BulletinId { get; set; }
		
		/// <summary>
		/// Submission time of this Security Bulletin.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="submissionTime")]
		public string SubmissionTime { get; set; }
		
		/// <summary>
		/// This represents a version that the cluster receiving this notification should be upgraded to, based on its current version. For example, 1.15.0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suggestedUpgradeVersion")]
		public string SuggestedUpgradeVersion { get; set; }
	}
	
	/// <summary>
	/// Message that contains the resource name and display name of a folder resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Folder
	{
		
		/// <summary>
		/// Full resource name of this folder. See: https://cloud.google.com/apis/design/resource_names#full_resource_name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceFolder")]
		public string ResourceFolder { get; set; }
		
		/// <summary>
		/// The user defined display name for this folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceFolderDisplayName")]
		public string ResourceFolderDisplayName { get; set; }
	}
	
	/// <summary>
	/// Request message for `GetIamPolicy` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetIamPolicyRequest
	{
		
		/// <summary>
		/// Encapsulates settings provided to GetIamPolicy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public GetPolicyOptions Options { get; set; }
	}
	
	/// <summary>
	/// Encapsulates settings provided to GetIamPolicy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetPolicyOptions
	{
		
		/// <summary>
		/// Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestedPolicyVersion")]
		public System.Nullable<System.Int32> RequestedPolicyVersion { get; set; }
	}
	
	/// <summary>
	/// Configures how to deliver Findings to BigQuery Instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1BigQueryExport
	{
		
		/// <summary>
		/// Output only. The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on export on creation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The dataset to write findings' updates to. Its format is "projects/[project_id]/datasets/[bigquery_dataset_id]". BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataset")]
		public string Dataset { get; set; }
		
		/// <summary>
		/// The description of the export (max of 1024 characters).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the corresponding resource. The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Output only. Email address of the user who last edited the BigQuery export. This field is set by the server and will be ignored if provided on export creation or update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mostRecentEditor")]
		public string MostRecentEditor { get; set; }
		
		/// <summary>
		/// The relative resource name of this export. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name. Example format: "organizations/{organization_id}/bigQueryExports/{export_id}" Example format: "folders/{folder_id}/bigQueryExports/{export_id}" Example format: "projects/{project_id}/bigQueryExports/{export_id}" This field is provided in responses, and is ignored when provided in create requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The service account that needs permission to create table and upload data to the BigQuery dataset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="principal")]
		public string Principal { get; set; }
		
		/// <summary>
		/// Output only. The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if provided on export creation or update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// The response to a BulkMute request. Contains the LRO information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1BulkMuteFindingsResponse
	{
	}
	
	/// <summary>
	/// Defines the properties in a custom module configuration for Security Health Analytics. Use the custom module configuration to create custom detectors that generate custom findings for resources that you specify.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1CustomConfig
	{
		
		/// <summary>
		/// A set of optional name-value pairs that define custom source properties to return with each finding that is generated by the custom module. The custom source properties that are defined here are included in the finding JSON under `sourceProperties`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customOutput")]
		public GoogleCloudSecuritycenterV1CustomOutputSpec CustomOutput { get; set; }
		
		/// <summary>
		/// Text that describes the vulnerability or misconfiguration that the custom module detects. This explanation is returned with each finding instance to help investigators understand the detected issue. The text must be enclosed in quotation marks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="predicate")]
		public Expr Predicate { get; set; }
		
		/// <summary>
		/// An explanation of the recommended steps that security teams can take to resolve the detected issue. This explanation is returned with each finding generated by this module in the `nextSteps` property of the finding JSON.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recommendation")]
		public string Recommendation { get; set; }
		
		/// <summary>
		/// Resource for selecting resource type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceSelector")]
		public GoogleCloudSecuritycenterV1ResourceSelector ResourceSelector { get; set; }
		
		/// <summary>
		/// The severity to assign to findings generated by the module.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public FindingSeverity Severity { get; set; }
	}
	
	/// <summary>
	/// A set of optional name-value pairs that define custom source properties to return with each finding that is generated by the custom module. The custom source properties that are defined here are included in the finding JSON under `sourceProperties`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1CustomOutputSpec
	{
		
		/// <summary>
		/// A list of custom output properties to add to the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public GoogleCloudSecuritycenterV1Property[] Properties { get; set; }
	}
	
	/// <summary>
	/// An individual name-value pair that defines a custom source property.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1Property
	{
		
		/// <summary>
		/// Name of the property for the custom output.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueExpression")]
		public Expr ValueExpression { get; set; }
	}
	
	/// <summary>
	/// Resource for selecting resource type.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1ResourceSelector
	{
		
		/// <summary>
		/// The resource types to run the detector on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceTypes")]
		public string[] ResourceTypes { get; set; }
	}
	
	/// <summary>
	/// An EffectiveSecurityHealthAnalyticsCustomModule is the representation of a Security Health Analytics custom module at a specified level of the resource hierarchy: organization, folder, or project. If a custom module is inherited from a parent organization or folder, the value of the `enablementState` property in EffectiveSecurityHealthAnalyticsCustomModule is set to the value that is effective in the parent, instead of `INHERITED`. For example, if the module is enabled in a parent organization or folder, the effective enablement_state for the module in all child folders or projects is also `enabled`. EffectiveSecurityHealthAnalyticsCustomModule is read-only.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1EffectiveSecurityHealthAnalyticsCustomModule
	{
		
		/// <summary>
		/// Defines the properties in a custom module configuration for Security Health Analytics. Use the custom module configuration to create custom detectors that generate custom findings for resources that you specify.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customConfig")]
		public GoogleCloudSecuritycenterV1CustomConfig CustomConfig { get; set; }
		
		/// <summary>
		/// Output only. The display name for the custom module. The name must be between 1 and 128 characters, start with a lowercase letter, and contain alphanumeric characters or underscores only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Output only. The effective state of enablement for the module at the given level of the hierarchy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enablementState")]
		public System.Nullable<GoogleCloudSecuritycenterV1EffectiveSecurityHealthAnalyticsCustomModuleEnablementState> EnablementState { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the custom module. Its format is "organizations/{organization}/securityHealthAnalyticsSettings/effectiveCustomModules/{customModule}", or "folders/{folder}/securityHealthAnalyticsSettings/effectiveCustomModules/{customModule}", or "projects/{project}/securityHealthAnalyticsSettings/effectiveCustomModules/{customModule}"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudSecuritycenterV1EffectiveSecurityHealthAnalyticsCustomModuleEnablementState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLEMENT_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 2,
	}
	
	/// <summary>
	/// A mute config is a Cloud SCC resource that contains the configuration to mute create/update events of findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1MuteConfig
	{
		
		/// <summary>
		/// Output only. The time at which the mute config was created. This field is set by the server and will be ignored if provided on config creation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// A description of the mute config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The human readable name to be displayed for the mute config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Required. An expression that defines the filter to apply across create/update events of findings. While creating a filter string, be mindful of the scope in which the mute configuration is being created. E.g., If a filter contains project = X but is created under the project = Y scope, it might not match any findings. The following field and operator combinations are supported: * severity: `=`, `:` * category: `=`, `:` * resource.name: `=`, `:` * resource.project_name: `=`, `:` * resource.project_display_name: `=`, `:` * resource.folders.resource_folder: `=`, `:` * resource.parent_name: `=`, `:` * resource.parent_display_name: `=`, `:` * resource.type: `=`, `:` * finding_class: `=`, `:` * indicator.ip_addresses: `=`, `:` * indicator.domains: `=`, `:`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Output only. Email address of the user who last edited the mute config. This field is set by the server and will be ignored if provided on config creation or update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mostRecentEditor")]
		public string MostRecentEditor { get; set; }
		
		/// <summary>
		/// This field will be ignored if provided on config creation. Format "organizations/{organization}/muteConfigs/{mute_config}" "folders/{folder}/muteConfigs/{mute_config}" "projects/{project}/muteConfigs/{mute_config}" "organizations/{organization}/locations/global/muteConfigs/{mute_config}" "folders/{folder}/locations/global/muteConfigs/{mute_config}" "projects/{project}/locations/global/muteConfigs/{mute_config}"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The most recent time at which the mute config was updated. This field is set by the server and will be ignored if provided on config creation or update.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Cloud SCC's Notification
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1NotificationMessage
	{
		
		/// <summary>
		/// Security Command Center finding. A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finding")]
		public Finding Finding { get; set; }
		
		/// <summary>
		/// Name of the notification config that generated current notification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notificationConfigName")]
		public string NotificationConfigName { get; set; }
		
		/// <summary>
		/// Information related to the Google Cloud resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public GoogleCloudSecuritycenterV1Resource Resource { get; set; }
	}
	
	/// <summary>
	/// Information related to the Google Cloud resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1Resource
	{
		
		/// <summary>
		/// The human readable name of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Output only. Contains a Folder message for each folder in the assets ancestry. The first folder is the deepest nested folder, and the last folder is the folder directly under the Organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folders")]
		public Folder[] Folders { get; set; }
		
		/// <summary>
		/// The full resource name of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The full resource name of resource's parent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// The human readable name of resource's parent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentDisplayName")]
		public string ParentDisplayName { get; set; }
		
		/// <summary>
		/// The full resource name of project that the resource belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="project")]
		public string Project { get; set; }
		
		/// <summary>
		/// The project ID that the resource belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectDisplayName")]
		public string ProjectDisplayName { get; set; }
		
		/// <summary>
		/// The full resource type of the resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// A resource value config (RVC) is a mapping configuration of user's resources to resource values. Used in Attack path simulations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1ResourceValueConfig
	{
		
		/// <summary>
		/// Output only. Timestamp this resource value config was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Description of the resource value config.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Name for the resource value config
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// List of resource labels to search for, evaluated with AND. E.g. "resource_labels_selector": {"key": "value", "env": "prod"} will match resources with labels "key": "value" AND "env": "prod" https://cloud.google.com/resource-manager/docs/creating-managing-labels
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceLabelsSelector")]
		public System.Collections.Generic.Dictionary<string, string> ResourceLabelsSelector { get; set; }
		
		/// <summary>
		/// Apply resource_value only to resources that match resource_type. resource_type will be checked with "AND" of other resources. E.g. "storage.googleapis.com/Bucket" with resource_value "HIGH" will apply "HIGH" value only to "storage.googleapis.com/Bucket" resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceType")]
		public string ResourceType { get; set; }
		
		/// <summary>
		/// Required. Resource value level this expression represents
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceValue")]
		public System.Nullable<GoogleCloudSecuritycenterV1ResourceValueConfigResourceValue> ResourceValue { get; set; }
		
		/// <summary>
		/// Project or folder to scope this config to. For example, "project/456" would apply this config only to resources in "project/456" scope will be checked with "AND" of other resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scope")]
		public string Scope { get; set; }
		
		/// <summary>
		/// Required. Tag values combined with AND to check against. Values in the form "tagValues/123" E.g. [ "tagValues/123", "tagValues/456", "tagValues/789" ] https://cloud.google.com/resource-manager/docs/tags/tags-creating-and-managing
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tagValues")]
		public string[] TagValues { get; set; }
		
		/// <summary>
		/// Output only. Timestamp this resource value config was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudSecuritycenterV1ResourceValueConfigResourceValue
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_VALUE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOW = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 4,
	}
	
	/// <summary>
	/// Response of asset discovery run
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1RunAssetDiscoveryResponse
	{
		
		/// <summary>
		/// The duration between asset discovery run start and end
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public string Duration { get; set; }
		
		/// <summary>
		/// The state of an asset discovery run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudSecuritycenterV1RunAssetDiscoveryResponseState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudSecuritycenterV1RunAssetDiscoveryResponseState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUPERSEDED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATED = 3,
	}
	
	/// <summary>
	/// Represents an instance of a Security Health Analytics custom module, including its full module name, display name, enablement state, and last updated time. You can create a custom module at the organization, folder, or project level. Custom modules that you create at the organization or folder level are inherited by the child folders and projects.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModule
	{
		
		/// <summary>
		/// Output only. If empty, indicates that the custom module was created in the organization, folder, or project in which you are viewing the custom module. Otherwise, `ancestor_module` specifies the organization or folder from which the custom module is inherited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ancestorModule")]
		public string AncestorModule { get; set; }
		
		/// <summary>
		/// Defines the properties in a custom module configuration for Security Health Analytics. Use the custom module configuration to create custom detectors that generate custom findings for resources that you specify.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customConfig")]
		public GoogleCloudSecuritycenterV1CustomConfig CustomConfig { get; set; }
		
		/// <summary>
		/// The display name of the Security Health Analytics custom module. This display name becomes the finding category for all findings that are returned by this custom module. The display name must be between 1 and 128 characters, start with a lowercase letter, and contain alphanumeric characters or underscores only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The enablement state of the custom module.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enablementState")]
		public System.Nullable<GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModuleEnablementState> EnablementState { get; set; }
		
		/// <summary>
		/// Output only. The editor that last updated the custom module.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastEditor")]
		public string LastEditor { get; set; }
		
		/// <summary>
		/// Immutable. The resource name of the custom module. Its format is "organizations/{organization}/securityHealthAnalyticsSettings/customModules/{customModule}", or "folders/{folder}/securityHealthAnalyticsSettings/customModules/{customModule}", or "projects/{project}/securityHealthAnalyticsSettings/customModules/{customModule}" The id {customModule} is server-generated and is not user settable. It will be a numeric id containing 1-20 digits.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The time at which the custom module was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudSecuritycenterV1SecurityHealthAnalyticsCustomModuleEnablementState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLEMENT_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INHERITED = 3,
	}
	
	/// <summary>
	/// Security Command Center finding. A finding is a record of assessment data (security, risk, health or privacy) ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, an XSS vulnerability in an App Engine application is a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1beta1Finding
	{
		
		/// <summary>
		/// The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: "XSS_FLASH_INJECTION"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category")]
		public string Category { get; set; }
		
		/// <summary>
		/// The time at which the finding was created in Security Command Center.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The time at which the event took place, or when an update to the finding occurred. For example, if the finding represents an open firewall it would capture the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding were to be resolved afterward, this time would reflect when the finding was resolved.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventTime")]
		public string EventTime { get; set; }
		
		/// <summary>
		/// The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be either empty or a well formed URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="externalUri")]
		public string ExternalUri { get; set; }
		
		/// <summary>
		/// The relative resource name of this finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Immutable. The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after creation time. For example: "organizations/{organization_id}/sources/{source_id}"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined string. This field is immutable after creation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceName")]
		public string ResourceName { get; set; }
		
		/// <summary>
		/// User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityMarks")]
		public GoogleCloudSecuritycenterV1beta1SecurityMarks SecurityMarks { get; set; }
		
		/// <summary>
		/// Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and must start with a letter and contain alphanumeric characters or underscores only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceProperties")]
		public System.Collections.Generic.Dictionary<string, object> SourceProperties { get; set; }
		
		/// <summary>
		/// The state of the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public FindingState State { get; set; }
	}
	
	/// <summary>
	/// Response of asset discovery run
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1beta1RunAssetDiscoveryResponse
	{
		
		/// <summary>
		/// The duration between asset discovery run start and end
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public string Duration { get; set; }
		
		/// <summary>
		/// The state of an asset discovery run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudSecuritycenterV1RunAssetDiscoveryResponseState State { get; set; }
	}
	
	/// <summary>
	/// Security Command Center finding. A finding is a record of assessment data (security, risk, health or privacy) ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, an XSS vulnerability in an App Engine application is a finding.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1p1beta1Finding
	{
		
		/// <summary>
		/// The canonical name of the finding. It's either "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}", "folders/{folder_id}/sources/{source_id}/findings/{finding_id}" or "projects/{project_number}/sources/{source_id}/findings/{finding_id}", depending on the closest CRM ancestor of the resource associated with the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canonicalName")]
		public string CanonicalName { get; set; }
		
		/// <summary>
		/// The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: "XSS_FLASH_INJECTION"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category")]
		public string Category { get; set; }
		
		/// <summary>
		/// The time at which the finding was created in Security Command Center.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The time at which the event took place, or when an update to the finding occurred. For example, if the finding represents an open firewall it would capture the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding were to be resolved afterward, this time would reflect when the finding was resolved. Must not be set to a value greater than the current timestamp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventTime")]
		public string EventTime { get; set; }
		
		/// <summary>
		/// The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be either empty or a well formed URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="externalUri")]
		public string ExternalUri { get; set; }
		
		/// <summary>
		/// The relative resource name of this finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after creation time. For example: "organizations/{organization_id}/sources/{source_id}"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined string. This field is immutable after creation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceName")]
		public string ResourceName { get; set; }
		
		/// <summary>
		/// User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="securityMarks")]
		public GoogleCloudSecuritycenterV1p1beta1SecurityMarks SecurityMarks { get; set; }
		
		/// <summary>
		/// The severity of the finding. This field is managed by the source that writes the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public FindingSeverity Severity { get; set; }
		
		/// <summary>
		/// Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and must start with a letter and contain alphanumeric characters or underscores only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceProperties")]
		public System.Collections.Generic.Dictionary<string, object> SourceProperties { get; set; }
		
		/// <summary>
		/// The state of the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public FindingState State { get; set; }
	}
	
	/// <summary>
	/// User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1p1beta1SecurityMarks
	{
		
		/// <summary>
		/// The canonical name of the marks. Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks" "folders/{folder_id}/assets/{asset_id}/securityMarks" "projects/{project_number}/assets/{asset_id}/securityMarks" "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks" "folders/{folder_id}/sources/{source_id}/findings/{finding_id}/securityMarks" "projects/{project_number}/sources/{source_id}/findings/{finding_id}/securityMarks"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canonicalName")]
		public string CanonicalName { get; set; }
		
		/// <summary>
		/// Mutable user specified security marks belonging to the parent resource. Constraints are as follows: * Keys and values are treated as case insensitive * Keys must be between 1 - 256 characters (inclusive) * Keys must be letters, numbers, underscores, or dashes * Values have leading and trailing whitespace trimmed, remaining characters must be between 1 - 4096 characters (inclusive)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marks")]
		public System.Collections.Generic.Dictionary<string, string> Marks { get; set; }
		
		/// <summary>
		/// The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks" "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Message that contains the resource name and display name of a folder resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1p1beta1Folder
	{
		
		/// <summary>
		/// Full resource name of this folder. See: https://cloud.google.com/apis/design/resource_names#full_resource_name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceFolder")]
		public string ResourceFolder { get; set; }
		
		/// <summary>
		/// The user defined display name for this folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceFolderDisplayName")]
		public string ResourceFolderDisplayName { get; set; }
	}
	
	/// <summary>
	/// Security Command Center's Notification
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1p1beta1NotificationMessage
	{
		
		/// <summary>
		/// Security Command Center finding. A finding is a record of assessment data (security, risk, health or privacy) ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, an XSS vulnerability in an App Engine application is a finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finding")]
		public GoogleCloudSecuritycenterV1p1beta1Finding Finding { get; set; }
		
		/// <summary>
		/// Name of the notification config that generated current notification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notificationConfigName")]
		public string NotificationConfigName { get; set; }
		
		/// <summary>
		/// Information related to the Google Cloud resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public GoogleCloudSecuritycenterV1p1beta1Resource Resource { get; set; }
	}
	
	/// <summary>
	/// Information related to the Google Cloud resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1p1beta1Resource
	{
		
		/// <summary>
		/// Output only. Contains a Folder message for each folder in the assets ancestry. The first folder is the deepest nested folder, and the last folder is the folder directly under the Organization.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folders")]
		public GoogleCloudSecuritycenterV1p1beta1Folder[] Folders { get; set; }
		
		/// <summary>
		/// The full resource name of the resource. See: https://cloud.google.com/apis/design/resource_names#full_resource_name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The full resource name of resource's parent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// The human readable name of resource's parent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parentDisplayName")]
		public string ParentDisplayName { get; set; }
		
		/// <summary>
		/// The full resource name of project that the resource belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="project")]
		public string Project { get; set; }
		
		/// <summary>
		/// The project id that the resource belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectDisplayName")]
		public string ProjectDisplayName { get; set; }
	}
	
	/// <summary>
	/// Response of asset discovery run
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudSecuritycenterV1p1beta1RunAssetDiscoveryResponse
	{
		
		/// <summary>
		/// The duration between asset discovery run start and end
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="duration")]
		public string Duration { get; set; }
		
		/// <summary>
		/// The state of an asset discovery run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudSecuritycenterV1RunAssetDiscoveryResponseState State { get; set; }
	}
	
	/// <summary>
	/// Request message for grouping by assets.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GroupAssetsRequest
	{
		
		/// <summary>
		/// When compare_duration is set, the Asset's "state" property is updated to indicate whether the asset was added, removed, or remained present during the compare_duration period of time that precedes the read_time. This is the time between (read_time - compare_duration) and read_time. The state value is derived based on the presence of the asset at the two points in time. Intermediate state changes between the two times don't affect the result. For example, the results aren't affected if the asset is removed and re-created again. Possible "state" values when compare_duration is specified: * "ADDED": indicates that the asset was not present before compare_duration, but present at reference_time. * "REMOVED": indicates that the asset was present at the start of compare_duration, but not present at reference_time. * "ACTIVE": indicates that the asset was present at both the start and the end of the time period defined by compare_duration and reference_time. This field is ignored if `state` is not a field in `group_by`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="compareDuration")]
		public string CompareDuration { get; set; }
		
		/// <summary>
		/// Expression that defines the filter to apply across assets. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are not supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the Asset resource. Examples include: * name * security_center_properties.resource_name * resource_properties.a_property * security_marks.marks.marka The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes. For example, `resource_properties.size = 100` is a valid filter string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Required. Expression that defines what assets fields to use for grouping. The string value should follow SQL syntax: comma separated list of fields. For example: "security_center_properties.resource_project,security_center_properties.project". The following fields are supported when compare_duration is not set: * security_center_properties.resource_project * security_center_properties.resource_type * security_center_properties.resource_parent The following fields are supported when compare_duration is set: * security_center_properties.resource_type
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupBy")]
		public string GroupBy { get; set; }
		
		/// <summary>
		/// The maximum number of results to return in a single response. Default is 10, minimum is 1, maximum is 1000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageSize")]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		/// <summary>
		/// The value returned by the last `GroupAssetsResponse`; indicates that this is a continuation of a prior `GroupAssets` call, and that the system should return the next page of data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageToken")]
		public string PageToken { get; set; }
		
		/// <summary>
		/// Time used as a reference point when filtering assets. The filter is limited to assets existing at the supplied time and their values are those at that specific time. Absence of this field will default to the API's version of NOW.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="readTime")]
		public string ReadTime { get; set; }
	}
	
	/// <summary>
	/// Response message for grouping by assets.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GroupAssetsResponse
	{
		
		/// <summary>
		/// Group results. There exists an element for each existing unique combination of property/values. The element contains a count for the number of times those specific property/values appear.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupByResults")]
		public GroupResult[] GroupByResults { get; set; }
		
		/// <summary>
		/// Token to retrieve the next page of results, or empty if there are no more results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Time used for executing the groupBy request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="readTime")]
		public string ReadTime { get; set; }
	}
	
	/// <summary>
	/// Result containing the properties and count of a groupBy request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GroupResult
	{
		
		/// <summary>
		/// Total count of resources for the given properties.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public string Count { get; set; }
		
		/// <summary>
		/// Properties matching the groupBy fields in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public System.Collections.Generic.Dictionary<string, object> Properties { get; set; }
	}
	
	/// <summary>
	/// Request message for grouping by findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GroupFindingsRequest
	{
		
		/// <summary>
		/// Expression that defines the filter to apply across findings. The expression is a list of one or more restrictions combined via logical operators `AND` and `OR`. Parentheses are not supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. Examples include: * name * source_properties.a_property * security_marks.marks.marka The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes. For example, `source_properties.size = 100` is a valid filter string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Required. Expression that defines what assets fields to use for grouping (including `state`). The string value should follow SQL syntax: comma separated list of fields. For example: "parent,resource_name". The following fields are supported: * resource_name * category * state * parent
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupBy")]
		public string GroupBy { get; set; }
		
		/// <summary>
		/// The maximum number of results to return in a single response. Default is 10, minimum is 1, maximum is 1000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageSize")]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		/// <summary>
		/// The value returned by the last `GroupFindingsResponse`; indicates that this is a continuation of a prior `GroupFindings` call, and that the system should return the next page of data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageToken")]
		public string PageToken { get; set; }
		
		/// <summary>
		/// Time used as a reference point when filtering findings. The filter is limited to findings existing at the supplied time and their values are those at that specific time. Absence of this field will default to the API's version of NOW.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="readTime")]
		public string ReadTime { get; set; }
	}
	
	/// <summary>
	/// Response message for group by findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GroupFindingsResponse
	{
		
		/// <summary>
		/// Group results. There exists an element for each existing unique combination of property/values. The element contains a count for the number of times those specific property/values appear.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupByResults")]
		public GroupResult[] GroupByResults { get; set; }
		
		/// <summary>
		/// Token to retrieve the next page of results, or empty if there are no more results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Time used for executing the groupBy request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="readTime")]
		public string ReadTime { get; set; }
	}
	
	/// <summary>
	/// Response message for listing assets.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAssetsResponse
	{
		
		/// <summary>
		/// Assets matching the list request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="listAssetsResults")]
		public ListAssetsResult[] ListAssetsResults { get; set; }
		
		/// <summary>
		/// Token to retrieve the next page of results, or empty if there are no more results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Time used for executing the list request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="readTime")]
		public string ReadTime { get; set; }
		
		/// <summary>
		/// The total number of assets matching the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalSize")]
		public System.Nullable<System.Int32> TotalSize { get; set; }
	}
	
	/// <summary>
	/// Result containing the Asset and its State.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAssetsResult
	{
		
		/// <summary>
		/// Security Command Center representation of a Google Cloud resource. The Asset is a Security Command Center resource that captures information about a single Google Cloud resource. All modifications to an Asset are only within the context of Security Command Center and don't affect the referenced Google Cloud resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="asset")]
		public Asset Asset { get; set; }
		
		/// <summary>
		/// State of the asset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<ListAssetsResultState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ListAssetsResultState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNUSED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADDED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 4,
	}
	
	/// <summary>
	/// Response message for listing findings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListFindingsResponse
	{
		
		/// <summary>
		/// Findings matching the list request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="findings")]
		public GoogleCloudSecuritycenterV1beta1Finding[] Findings { get; set; }
		
		/// <summary>
		/// Token to retrieve the next page of results, or empty if there are no more results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Time used for executing the list request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="readTime")]
		public string ReadTime { get; set; }
		
		/// <summary>
		/// The total number of findings matching the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalSize")]
		public System.Nullable<System.Int32> TotalSize { get; set; }
	}
	
	/// <summary>
	/// The response message for Operations.ListOperations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListOperationsResponse
	{
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A list of operations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operations")]
		public Operation[] Operations { get; set; }
	}
	
	/// <summary>
	/// This resource represents a long-running operation that is the result of a network API call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Operation
	{
		
		/// <summary>
		/// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="done")]
		public System.Nullable<System.Boolean> Done { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public Status Error { get; set; }
		
		/// <summary>
		/// Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public System.Collections.Generic.Dictionary<string, object> Response { get; set; }
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Status
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Response message for listing sources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSourcesResponse
	{
		
		/// <summary>
		/// Token to retrieve the next page of results, or empty if there are no more results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Sources belonging to the requested parent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public Source[] Sources { get; set; }
	}
	
	/// <summary>
	/// Security Command Center finding source. A finding source is an entity or a mechanism that can produce a finding. A source is like a container of findings that come from the same scanner, logger, monitor, etc.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Source
	{
		
		/// <summary>
		/// The description of the source (max of 1024 characters). Example: "Web Security Scanner is a web security scanner for common vulnerabilities in App Engine applications. It can automatically scan and detect four common vulnerabilities, including cross-site-scripting (XSS), Flash injection, mixed content (HTTP in HTTPS), and outdated/insecure libraries."
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The source's display name. A source's display name must be unique amongst its siblings, for example, two sources with the same parent can't share the same display name. The display name must have a length between 1 and 64 characters (inclusive).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The relative resource name of this source. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/sources/{source_id}"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// User specified settings that are attached to the Security Command Center organization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OrganizationSettings
	{
		
		/// <summary>
		/// The configuration used for Asset Discovery runs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assetDiscoveryConfig")]
		public AssetDiscoveryConfig AssetDiscoveryConfig { get; set; }
		
		/// <summary>
		/// A flag that indicates if Asset Discovery should be enabled. If the flag is set to `true`, then discovery of assets will occur. If it is set to `false`, all historical assets will remain, but discovery of future assets will not occur.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enableAssetDiscovery")]
		public System.Nullable<System.Boolean> EnableAssetDiscovery { get; set; }
		
		/// <summary>
		/// The relative resource name of the settings. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/organizationSettings".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Policy
	{
		
		/// <summary>
		/// Specifies cloud audit logging configuration for this policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditConfigs")]
		public AuditConfig[] AuditConfigs { get; set; }
		
		/// <summary>
		/// Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindings")]
		public Binding[] Bindings { get; set; }
		
		/// <summary>
		/// `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	/// <summary>
	/// Request message for running asset discovery for an organization.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RunAssetDiscoveryRequest
	{
	}
	
	/// <summary>
	/// Request message for updating a finding's state.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetFindingStateRequest
	{
		
		/// <summary>
		/// Required. The time at which the updated state takes effect.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Required. The desired State of the finding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public FindingState State { get; set; }
	}
	
	/// <summary>
	/// Request message for `SetIamPolicy` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetIamPolicyRequest
	{
		
		/// <summary>
		/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policy")]
		public Policy Policy { get; set; }
		
		/// <summary>
		/// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Request message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TestIamPermissionsRequest
	{
		
		/// <summary>
		/// The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	/// <summary>
	/// Response message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TestIamPermissionsResponse
	{
		
		/// <summary>
		/// A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
		/// Securitycenter_organizations_operations_delete v1beta1/{name}
		/// </summary>
		/// <param name="name">The name of the operation resource to be deleted.</param>
		/// <returns>Successful response</returns>
		public async Task<Empty> Securitycenter_organizations_operations_deleteAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Empty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a source.
		/// Securitycenter_organizations_sources_get v1beta1/{name}
		/// </summary>
		/// <param name="name">Required. Relative resource name of the source. Its format is "organizations/[organization_id]/source/[source_id]".</param>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <returns>Successful response</returns>
		public async Task<Source> Securitycenter_organizations_sources_getAsync(string name, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Source>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates security marks.
		/// Securitycenter_organizations_sources_findings_updateSecurityMarks v1beta1/{name}
		/// </summary>
		/// <param name="name">The relative resource name of the SecurityMarks. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Examples: "organizations/{organization_id}/assets/{asset_id}/securityMarks" "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}/securityMarks".</param>
		/// <param name="startTime">The time at which the updated SecurityMarks take effect.</param>
		/// <param name="updateMask">The FieldMask to use when updating the security marks resource.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudSecuritycenterV1beta1SecurityMarks> Securitycenter_organizations_sources_findings_updateSecurityMarksAsync(string name, string startTime, string updateMask, GoogleCloudSecuritycenterV1beta1SecurityMarks requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&startTime=" + (startTime==null? "" : System.Uri.EscapeDataString(startTime))+"&updateMask=" + (updateMask==null? "" : System.Uri.EscapeDataString(updateMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudSecuritycenterV1beta1SecurityMarks>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
		/// Securitycenter_organizations_operations_cancel v1beta1/{name}:cancel
		/// </summary>
		/// <param name="name">The name of the operation resource to be cancelled.</param>
		/// <returns>Successful response</returns>
		public async Task<Empty> Securitycenter_organizations_operations_cancelAsync(string name, CancelOperationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":cancel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Empty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates the state of a finding.
		/// Securitycenter_organizations_sources_findings_setState v1beta1/{name}:setState
		/// </summary>
		/// <param name="name">Required. The relative resource name of the finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/sources/{source_id}/finding/{finding_id}".</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudSecuritycenterV1beta1Finding> Securitycenter_organizations_sources_findings_setStateAsync(string name, SetFindingStateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":setState";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudSecuritycenterV1beta1Finding>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists an organization's assets.
		/// Securitycenter_organizations_assets_list v1beta1/{parent}/assets
		/// </summary>
		/// <param name="parent">Required. Name of the organization assets should belong to. Its format is "organizations/[organization_id]".</param>
		/// <param name="compareDuration">When compare_duration is set, the ListAssetResult's "state" attribute is updated to indicate whether the asset was added, removed, or remained present during the compare_duration period of time that precedes the read_time. This is the time between (read_time - compare_duration) and read_time. The state value is derived based on the presence of the asset at the two points in time. Intermediate state changes between the two times don't affect the result. For example, the results aren't affected if the asset is removed and re-created again. Possible "state" values when compare_duration is specified: * "ADDED": indicates that the asset was not present before compare_duration, but present at read_time. * "REMOVED": indicates that the asset was present at the start of compare_duration, but not present at read_time. * "ACTIVE": indicates that the asset was present at both the start and the end of the time period defined by compare_duration and read_time. If compare_duration is not specified, then the only possible state is "UNUSED", which indicates that the asset is present at read_time.</param>
		/// <param name="fieldMask">Optional. A field mask to specify the ListAssetsResult fields to be listed in the response. An empty field mask will list all fields.</param>
		/// <param name="filter">Expression that defines the filter to apply across assets. The expression is a list of zero or more restrictions combined via logical operators `AND` and `OR`. Parentheses are not supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. The fields map to those defined in the Asset resource. Examples include: * name * security_center_properties.resource_name * resource_properties.a_property * security_marks.marks.marka The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes. For example, `resource_properties.size = 100` is a valid filter string.</param>
		/// <param name="orderBy">Expression that defines what fields and order to use for sorting. The string value should follow SQL syntax: comma separated list of fields. For example: "name,resource_properties.a_property". The default sorting order is ascending. To specify descending order for a field, a suffix " desc" should be appended to the field name. For example: "name desc,resource_properties.a_property". Redundant space characters in the syntax are insignificant. "name desc,resource_properties.a_property" and " name desc , resource_properties.a_property " are equivalent.</param>
		/// <param name="pageSize">The maximum number of results to return in a single response. Default is 10, minimum is 1, maximum is 1000.</param>
		/// <param name="pageToken">The value returned by the last `ListAssetsResponse`; indicates that this is a continuation of a prior `ListAssets` call, and that the system should return the next page of data.</param>
		/// <param name="readTime">Time used as a reference point when filtering assets. The filter is limited to assets existing at the supplied time and their values are those at that specific time. Absence of this field will default to the API's version of NOW.</param>
		/// <returns>Successful response</returns>
		public async Task<ListAssetsResponse> Securitycenter_organizations_assets_listAsync(string parent, string compareDuration, string fieldMask, string filter, string orderBy, int pageSize, string pageToken, string readTime, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/assets&compareDuration=" + (compareDuration==null? "" : System.Uri.EscapeDataString(compareDuration))+"&fieldMask=" + (fieldMask==null? "" : System.Uri.EscapeDataString(fieldMask))+"&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readTime=" + (readTime==null? "" : System.Uri.EscapeDataString(readTime));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListAssetsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Filters an organization's assets and groups them by their specified properties.
		/// Securitycenter_organizations_assets_group v1beta1/{parent}/assets:group
		/// </summary>
		/// <param name="parent">Required. Name of the organization to groupBy. Its format is "organizations/[organization_id]".</param>
		/// <returns>Successful response</returns>
		public async Task<GroupAssetsResponse> Securitycenter_organizations_assets_groupAsync(string parent, GroupAssetsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/assets:group";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GroupAssetsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Runs asset discovery. The discovery is tracked with a long-running operation. This API can only be called with limited frequency for an organization. If it is called too frequently the caller will receive a TOO_MANY_REQUESTS error.
		/// Securitycenter_organizations_assets_runDiscovery v1beta1/{parent}/assets:runDiscovery
		/// </summary>
		/// <param name="parent">Required. Name of the organization to run asset discovery for. Its format is "organizations/[organization_id]".</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Securitycenter_organizations_assets_runDiscoveryAsync(string parent, RunAssetDiscoveryRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/assets:runDiscovery";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists an organization or source's findings. To list across all sources provide a `-` as the source id. Example: /v1beta1/organizations/{organization_id}/sources/-/findings
		/// Securitycenter_organizations_sources_findings_list v1beta1/{parent}/findings
		/// </summary>
		/// <param name="parent">Required. Name of the source the findings belong to. Its format is "organizations/[organization_id]/sources/[source_id]". To list across all sources provide a source_id of `-`. For example: organizations/{organization_id}/sources/-</param>
		/// <param name="fieldMask">Optional. A field mask to specify the Finding fields to be listed in the response. An empty field mask will list all fields.</param>
		/// <param name="filter">Expression that defines the filter to apply across findings. The expression is a list of one or more restrictions combined via logical operators `AND` and `OR`. Parentheses are not supported, and `OR` has higher precedence than `AND`. Restrictions have the form ` ` and may have a `-` character in front of them to indicate negation. Examples include: * name * source_properties.a_property * security_marks.marks.marka The supported operators are: * `=` for all value types. * `>`, `<`, `>=`, `<=` for integer values. * `:`, meaning substring matching, for strings. The supported value types are: * string literals in quotes. * integer literals without quotes. * boolean literals `true` and `false` without quotes. For example, `source_properties.size = 100` is a valid filter string.</param>
		/// <param name="orderBy">Expression that defines what fields and order to use for sorting. The string value should follow SQL syntax: comma separated list of fields. For example: "name,resource_properties.a_property". The default sorting order is ascending. To specify descending order for a field, a suffix " desc" should be appended to the field name. For example: "name desc,source_properties.a_property". Redundant space characters in the syntax are insignificant. "name desc,source_properties.a_property" and " name desc , source_properties.a_property " are equivalent.</param>
		/// <param name="pageSize">The maximum number of results to return in a single response. Default is 10, minimum is 1, maximum is 1000.</param>
		/// <param name="pageToken">The value returned by the last `ListFindingsResponse`; indicates that this is a continuation of a prior `ListFindings` call, and that the system should return the next page of data.</param>
		/// <param name="readTime">Time used as a reference point when filtering findings. The filter is limited to findings existing at the supplied time and their values are those at that specific time. Absence of this field will default to the API's version of NOW.</param>
		/// <returns>Successful response</returns>
		public async Task<ListFindingsResponse> Securitycenter_organizations_sources_findings_listAsync(string parent, string fieldMask, string filter, string orderBy, int pageSize, string pageToken, string readTime, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/findings&fieldMask=" + (fieldMask==null? "" : System.Uri.EscapeDataString(fieldMask))+"&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&readTime=" + (readTime==null? "" : System.Uri.EscapeDataString(readTime));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListFindingsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a finding. The corresponding source must exist for finding creation to succeed.
		/// Securitycenter_organizations_sources_findings_create v1beta1/{parent}/findings
		/// </summary>
		/// <param name="parent">Required. Resource name of the new finding's parent. Its format should be "organizations/[organization_id]/sources/[source_id]".</param>
		/// <param name="findingId">Required. Unique identifier provided by the client within the parent scope. It must be alphanumeric and less than or equal to 32 characters and greater than 0 characters in length.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudSecuritycenterV1beta1Finding> Securitycenter_organizations_sources_findings_createAsync(string parent, string findingId, GoogleCloudSecuritycenterV1beta1Finding requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/findings&findingId=" + (findingId==null? "" : System.Uri.EscapeDataString(findingId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudSecuritycenterV1beta1Finding>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Filters an organization or source's findings and groups them by their specified properties. To group across all sources provide a `-` as the source id. Example: /v1beta1/organizations/{organization_id}/sources/-/findings
		/// Securitycenter_organizations_sources_findings_group v1beta1/{parent}/findings:group
		/// </summary>
		/// <param name="parent">Required. Name of the source to groupBy. Its format is "organizations/[organization_id]/sources/[source_id]". To groupBy across all sources provide a source_id of `-`. For example: organizations/{organization_id}/sources/-</param>
		/// <returns>Successful response</returns>
		public async Task<GroupFindingsResponse> Securitycenter_organizations_sources_findings_groupAsync(string parent, GroupFindingsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/findings:group";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GroupFindingsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all sources belonging to an organization.
		/// Securitycenter_organizations_sources_list v1beta1/{parent}/sources
		/// </summary>
		/// <param name="parent">Required. Resource name of the parent of sources to list. Its format should be "organizations/[organization_id]".</param>
		/// <param name="pageSize">The maximum number of results to return in a single response. Default is 10, minimum is 1, maximum is 1000.</param>
		/// <param name="pageToken">The value returned by the last `ListSourcesResponse`; indicates that this is a continuation of a prior `ListSources` call, and that the system should return the next page of data.</param>
		/// <returns>Successful response</returns>
		public async Task<ListSourcesResponse> Securitycenter_organizations_sources_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/sources&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListSourcesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a source.
		/// Securitycenter_organizations_sources_create v1beta1/{parent}/sources
		/// </summary>
		/// <param name="parent">Required. Resource name of the new source's parent. Its format should be "organizations/[organization_id]".</param>
		/// <returns>Successful response</returns>
		public async Task<Source> Securitycenter_organizations_sources_createAsync(string parent, Source requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/sources";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Source>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the access control policy on the specified Source.
		/// Securitycenter_organizations_sources_getIamPolicy v1beta1/{resource}:getIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<Policy> Securitycenter_organizations_sources_getIamPolicyAsync(string resource, GetIamPolicyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":getIamPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Policy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Sets the access control policy on the specified Source.
		/// Securitycenter_organizations_sources_setIamPolicy v1beta1/{resource}:setIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<Policy> Securitycenter_organizations_sources_setIamPolicyAsync(string resource, SetIamPolicyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":setIamPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Policy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns the permissions that a caller has on the specified source.
		/// Securitycenter_organizations_sources_testIamPermissions v1beta1/{resource}:testIamPermissions
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<TestIamPermissionsResponse> Securitycenter_organizations_sources_testIamPermissionsAsync(string resource, TestIamPermissionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":testIamPermissions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<TestIamPermissionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

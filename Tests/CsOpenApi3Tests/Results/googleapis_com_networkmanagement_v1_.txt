//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Details of the final state "abort" and associated resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AbortInfo
	{
		
		/// <summary>
		/// Causes that the analysis is aborted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cause")]
		public System.Nullable<AbortInfoCause> Cause { get; set; }
		
		/// <summary>
		/// List of project IDs that the user has specified in the request but does not have permission to access network configs. Analysis is aborted in this case with the PERMISSION_DENIED cause.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectsMissingPermission")]
		public string[] ProjectsMissingPermission { get; set; }
		
		/// <summary>
		/// URI of the resource that caused the abort.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceUri")]
		public string ResourceUri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AbortInfoCause
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAUSE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN_NETWORK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN_IP = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN_PROJECT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERMISSION_DENIED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_SOURCE_LOCATION = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_ARGUMENT = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_EXTERNAL_IP = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNINTENDED_DESTINATION = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRACE_TOO_LONG = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_ERROR = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOURCE_ENDPOINT_NOT_FOUND = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MISMATCHED_SOURCE_NETWORK = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESTINATION_ENDPOINT_NOT_FOUND = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MISMATCHED_DESTINATION_NETWORK = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNSUPPORTED = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MISMATCHED_IP_VERSION = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GKE_KONNECTIVITY_PROXY_UNSUPPORTED = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_CONFIG_NOT_FOUND = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GOOGLE_MANAGED_SERVICE_AMBIGUOUS_PSC_ENDPOINT = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOURCE_PSC_CLOUD_SQL_UNSUPPORTED = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SOURCE_FORWARDING_RULE_UNSUPPORTED = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NON_ROUTABLE_IP_ADDRESS = 22,
	}
	
	/// <summary>
	/// Wrapper for the App Engine service version attributes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppEngineVersionEndpoint
	{
		
		/// <summary>
		/// An [App Engine](https://cloud.google.com/appengine) [service version](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions) name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// For display only. Metadata associated with an App Engine version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppEngineVersionInfo
	{
		
		/// <summary>
		/// Name of an App Engine version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// App Engine execution environment for a version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="environment")]
		public string Environment { get; set; }
		
		/// <summary>
		/// Runtime of the App Engine version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtime")]
		public string Runtime { get; set; }
		
		/// <summary>
		/// URI of an App Engine version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuditConfig
	{
		
		/// <summary>
		/// The configuration for logging of each type of permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditLogConfigs")]
		public AuditLogConfig[] AuditLogConfigs { get; set; }
		
		/// <summary>
		/// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AuditLogConfig
	{
		
		/// <summary>
		/// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exemptedMembers")]
		public string[] ExemptedMembers { get; set; }
		
		/// <summary>
		/// The log type that this config enables.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logType")]
		public System.Nullable<AuditLogConfigLogType> LogType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AuditLogConfigLogType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOG_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADMIN_READ = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_WRITE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_READ = 3,
	}
	
	/// <summary>
	/// Associates `members`, or principals, with a `role`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Binding
	{
		
		/// <summary>
		/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public Expr Condition { get; set; }
		
		/// <summary>
		/// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public string[] Members { get; set; }
		
		/// <summary>
		/// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
	}
	
	/// <summary>
	/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Expr
	{
		
		/// <summary>
		/// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Textual representation of an expression in Common Expression Language syntax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expression")]
		public string Expression { get; set; }
		
		/// <summary>
		/// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// The request message for Operations.CancelOperation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelOperationRequest
	{
	}
	
	/// <summary>
	/// Wrapper for Cloud Function attributes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudFunctionEndpoint
	{
		
		/// <summary>
		/// A [Cloud Function](https://cloud.google.com/functions) name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// For display only. Metadata associated with a Cloud Function.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudFunctionInfo
	{
		
		/// <summary>
		/// Name of a Cloud Function.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Location in which the Cloud Function is deployed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// URI of a Cloud Function.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		/// <summary>
		/// Latest successfully deployed version id of the Cloud Function.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versionId")]
		public string VersionId { get; set; }
	}
	
	/// <summary>
	/// Wrapper for Cloud Run revision attributes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudRunRevisionEndpoint
	{
		
		/// <summary>
		/// A [Cloud Run](https://cloud.google.com/run) [revision](https://cloud.google.com/run/docs/reference/rest/v1/namespaces.revisions/get) URI. The format is: projects/{project}/locations/{location}/revisions/{revision}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// For display only. Metadata associated with a Cloud Run revision.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudRunRevisionInfo
	{
		
		/// <summary>
		/// Name of a Cloud Run revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Location in which this revision is deployed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// URI of Cloud Run service this revision belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceUri")]
		public string ServiceUri { get; set; }
		
		/// <summary>
		/// URI of a Cloud Run revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// For display only. Metadata associated with a Cloud SQL instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudSQLInstanceInfo
	{
		
		/// <summary>
		/// Name of a Cloud SQL instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// External IP address of a Cloud SQL instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="externalIp")]
		public string ExternalIp { get; set; }
		
		/// <summary>
		/// Internal IP address of a Cloud SQL instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="internalIp")]
		public string InternalIp { get; set; }
		
		/// <summary>
		/// URI of a Cloud SQL instance network or empty string if the instance does not have one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkUri")]
		public string NetworkUri { get; set; }
		
		/// <summary>
		/// Region in which the Cloud SQL instance is running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// URI of a Cloud SQL instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// A Connectivity Test for a network reachability analysis.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConnectivityTest
	{
		
		/// <summary>
		/// Output only. The time the test was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The user-supplied description of the Connectivity Test. Maximum of 512 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Source or destination of the Connectivity Test.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destination")]
		public Endpoint Destination { get; set; }
		
		/// <summary>
		/// Output only. The display name of a Connectivity Test.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Resource labels to represent user-provided metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Required. Unique name of the resource using the form: `projects/{project_id}/locations/global/connectivityTests/{test_id}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Results of active probing from the last run of the test.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="probingDetails")]
		public ProbingDetails ProbingDetails { get; set; }
		
		/// <summary>
		/// IP Protocol of the test. When not provided, "TCP" is assumed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protocol")]
		public string Protocol { get; set; }
		
		/// <summary>
		/// Results of the configuration analysis from the last run of the test.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reachabilityDetails")]
		public ReachabilityDetails ReachabilityDetails { get; set; }
		
		/// <summary>
		/// Other projects that may be relevant for reachability analysis. This is applicable to scenarios where a test can cross project boundaries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relatedProjects")]
		public string[] RelatedProjects { get; set; }
		
		/// <summary>
		/// Source or destination of the Connectivity Test.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public Endpoint Source { get; set; }
		
		/// <summary>
		/// Output only. The time the test's configuration was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Source or destination of the Connectivity Test.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Endpoint
	{
		
		/// <summary>
		/// Wrapper for the App Engine service version attributes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appEngineVersion")]
		public AppEngineVersionEndpoint AppEngineVersion { get; set; }
		
		/// <summary>
		/// Wrapper for Cloud Function attributes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudFunction")]
		public CloudFunctionEndpoint CloudFunction { get; set; }
		
		/// <summary>
		/// Wrapper for Cloud Run revision attributes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudRunRevision")]
		public CloudRunRevisionEndpoint CloudRunRevision { get; set; }
		
		/// <summary>
		/// A [Cloud SQL](https://cloud.google.com/sql) instance URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudSqlInstance")]
		public string CloudSqlInstance { get; set; }
		
		/// <summary>
		/// A forwarding rule and its corresponding IP address represent the frontend configuration of a Google Cloud load balancer. Forwarding rules are also used for protocol forwarding, Private Service Connect and other network services to provide forwarding information in the control plane. Format: projects/{project}/global/forwardingRules/{id} or projects/{project}/regions/{region}/forwardingRules/{id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwardingRule")]
		public string ForwardingRule { get; set; }
		
		/// <summary>
		/// Output only. Specifies the type of the target of the forwarding rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwardingRuleTarget")]
		public System.Nullable<EndpointForwardingRuleTarget> ForwardingRuleTarget { get; set; }
		
		/// <summary>
		/// A cluster URI for [Google Kubernetes Engine master](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gkeMasterCluster")]
		public string GkeMasterCluster { get; set; }
		
		/// <summary>
		/// A Compute Engine instance URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instance")]
		public string Instance { get; set; }
		
		/// <summary>
		/// The IP address of the endpoint, which can be an external or internal IP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ipAddress")]
		public string IpAddress { get; set; }
		
		/// <summary>
		/// Output only. ID of the load balancer the forwarding rule points to. Empty for forwarding rules not related to load balancers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loadBalancerId")]
		public string LoadBalancerId { get; set; }
		
		/// <summary>
		/// Output only. Type of the load balancer the forwarding rule points to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loadBalancerType")]
		public System.Nullable<EndpointLoadBalancerType> LoadBalancerType { get; set; }
		
		/// <summary>
		/// A Compute Engine network URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="network")]
		public string Network { get; set; }
		
		/// <summary>
		/// Type of the network where the endpoint is located. Applicable only to source endpoint, as destination network type can be inferred from the source.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkType")]
		public System.Nullable<EndpointNetworkType> NetworkType { get; set; }
		
		/// <summary>
		/// The IP protocol port of the endpoint. Only applicable when protocol is TCP or UDP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public System.Nullable<System.Int32> Port { get; set; }
		
		/// <summary>
		/// Project ID where the endpoint is located. The Project ID can be derived from the URI if you provide a VM instance or network URI. The following are two cases where you must provide the project ID: 1. Only the IP address is specified, and the IP address is within a Google Cloud project. 2. When you are using Shared VPC and the IP address that you provide is from the service project. In this case, the network that the IP address resides in is defined in the host project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EndpointForwardingRuleTarget
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORWARDING_RULE_TARGET_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTANCE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOAD_BALANCER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPN_GATEWAY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PSC = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EndpointLoadBalancerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOAD_BALANCER_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTPS_ADVANCED_LOAD_BALANCER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTPS_LOAD_BALANCER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REGIONAL_HTTPS_LOAD_BALANCER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_HTTPS_LOAD_BALANCER = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSL_PROXY_LOAD_BALANCER = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TCP_PROXY_LOAD_BALANCER = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_TCP_PROXY_LOAD_BALANCER = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK_LOAD_BALANCER = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LEGACY_NETWORK_LOAD_BALANCER = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TCP_UDP_INTERNAL_LOAD_BALANCER = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EndpointNetworkType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GCP_NETWORK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NON_GCP_NETWORK = 2,
	}
	
	/// <summary>
	/// Results of active probing from the last run of the test.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProbingDetails
	{
		
		/// <summary>
		/// The reason probing was aborted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abortCause")]
		public System.Nullable<ProbingDetailsAbortCause> AbortCause { get; set; }
		
		/// <summary>
		/// Representation of a network edge location as per https://cloud.google.com/vpc/docs/edge-locations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationEgressLocation")]
		public EdgeLocation DestinationEgressLocation { get; set; }
		
		/// <summary>
		/// For display only. The specification of the endpoints for the test. EndpointInfo is derived from source and destination Endpoint and validated by the backend data plane model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endpointInfo")]
		public EndpointInfo EndpointInfo { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public Status Error { get; set; }
		
		/// <summary>
		/// Describes measured latency distribution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="probingLatency")]
		public LatencyDistribution ProbingLatency { get; set; }
		
		/// <summary>
		/// The overall result of active probing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="result")]
		public System.Nullable<ProbingDetailsResult> Result { get; set; }
		
		/// <summary>
		/// Number of probes sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sentProbeCount")]
		public System.Nullable<System.Int32> SentProbeCount { get; set; }
		
		/// <summary>
		/// Number of probes that reached the destination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="successfulProbeCount")]
		public System.Nullable<System.Int32> SuccessfulProbeCount { get; set; }
		
		/// <summary>
		/// The time that reachability was assessed through active probing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verifyTime")]
		public string VerifyTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProbingDetailsAbortCause
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROBING_ABORT_CAUSE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERMISSION_DENIED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_SOURCE_LOCATION = 2,
	}
	
	/// <summary>
	/// Representation of a network edge location as per https://cloud.google.com/vpc/docs/edge-locations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EdgeLocation
	{
		
		/// <summary>
		/// Name of the metropolitan area.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metropolitanArea")]
		public string MetropolitanArea { get; set; }
	}
	
	/// <summary>
	/// For display only. The specification of the endpoints for the test. EndpointInfo is derived from source and destination Endpoint and validated by the backend data plane model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndpointInfo
	{
		
		/// <summary>
		/// Destination IP address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationIp")]
		public string DestinationIp { get; set; }
		
		/// <summary>
		/// URI of the network where this packet is sent to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationNetworkUri")]
		public string DestinationNetworkUri { get; set; }
		
		/// <summary>
		/// Destination port. Only valid when protocol is TCP or UDP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationPort")]
		public System.Nullable<System.Int32> DestinationPort { get; set; }
		
		/// <summary>
		/// IP protocol in string format, for example: "TCP", "UDP", "ICMP".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protocol")]
		public string Protocol { get; set; }
		
		/// <summary>
		/// URI of the source telemetry agent this packet originates from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceAgentUri")]
		public string SourceAgentUri { get; set; }
		
		/// <summary>
		/// Source IP address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceIp")]
		public string SourceIp { get; set; }
		
		/// <summary>
		/// URI of the network where this packet originates from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceNetworkUri")]
		public string SourceNetworkUri { get; set; }
		
		/// <summary>
		/// Source port. Only valid when protocol is TCP or UDP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourcePort")]
		public System.Nullable<System.Int32> SourcePort { get; set; }
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Status
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Describes measured latency distribution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LatencyDistribution
	{
		
		/// <summary>
		/// Representative latency percentiles.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latencyPercentiles")]
		public LatencyPercentile[] LatencyPercentiles { get; set; }
	}
	
	/// <summary>
	/// Latency percentile rank and value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LatencyPercentile
	{
		
		/// <summary>
		/// percent-th percentile of latency observed, in microseconds. Fraction of percent/100 of samples have latency lower or equal to the value of this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latencyMicros")]
		public string LatencyMicros { get; set; }
		
		/// <summary>
		/// Percentage of samples this data point applies to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="percent")]
		public System.Nullable<System.Int32> Percent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProbingDetailsResult
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROBING_RESULT_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REACHABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNREACHABLE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REACHABILITY_INCONSISTENT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNDETERMINED = 4,
	}
	
	/// <summary>
	/// Results of the configuration analysis from the last run of the test.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReachabilityDetails
	{
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public Status Error { get; set; }
		
		/// <summary>
		/// The overall result of the test's configuration analysis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="result")]
		public System.Nullable<ReachabilityDetailsResult> Result { get; set; }
		
		/// <summary>
		/// Result may contain a list of traces if a test has multiple possible paths in the network, such as when destination endpoint is a load balancer with multiple backends.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="traces")]
		public Trace[] Traces { get; set; }
		
		/// <summary>
		/// The time of the configuration analysis.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verifyTime")]
		public string VerifyTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ReachabilityDetailsResult
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESULT_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REACHABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNREACHABLE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AMBIGUOUS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNDETERMINED = 4,
	}
	
	/// <summary>
	/// Trace represents one simulated packet forwarding path. * Each trace contains multiple ordered steps. * Each step is in a particular state with associated configuration. * State is categorized as final or non-final states. * Each final state has a reason associated. * Each trace must end with a final state (the last step). ``` |---------------------Trace----------------------| Step1(State) Step2(State) --- StepN(State(final)) ```
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Trace
	{
		
		/// <summary>
		/// For display only. The specification of the endpoints for the test. EndpointInfo is derived from source and destination Endpoint and validated by the backend data plane model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endpointInfo")]
		public EndpointInfo EndpointInfo { get; set; }
		
		/// <summary>
		/// A trace of a test contains multiple steps from the initial state to the final state (delivered, dropped, forwarded, or aborted). The steps are ordered by the processing sequence within the simulated network state machine. It is critical to preserve the order of the steps and avoid reordering or sorting them.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="steps")]
		public Step[] Steps { get; set; }
	}
	
	/// <summary>
	/// A simulated forwarding path is composed of multiple steps. Each step has a well-defined state and an associated configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Step
	{
		
		/// <summary>
		/// Details of the final state "abort" and associated resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abort")]
		public AbortInfo Abort { get; set; }
		
		/// <summary>
		/// For display only. Metadata associated with an App Engine version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appEngineVersion")]
		public AppEngineVersionInfo AppEngineVersion { get; set; }
		
		/// <summary>
		/// This is a step that leads to the final state Drop.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="causesDrop")]
		public System.Nullable<System.Boolean> CausesDrop { get; set; }
		
		/// <summary>
		/// For display only. Metadata associated with a Cloud Function.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudFunction")]
		public CloudFunctionInfo CloudFunction { get; set; }
		
		/// <summary>
		/// For display only. Metadata associated with a Cloud Run revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudRunRevision")]
		public CloudRunRevisionInfo CloudRunRevision { get; set; }
		
		/// <summary>
		/// For display only. Metadata associated with a Cloud SQL instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudSqlInstance")]
		public CloudSQLInstanceInfo CloudSqlInstance { get; set; }
		
		/// <summary>
		/// Details of the final state "deliver" and associated resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deliver")]
		public DeliverInfo Deliver { get; set; }
		
		/// <summary>
		/// A description of the step. Usually this is a summary of the state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Details of the final state "drop" and associated resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drop")]
		public DropInfo Drop { get; set; }
		
		/// <summary>
		/// For display only. The specification of the endpoints for the test. EndpointInfo is derived from source and destination Endpoint and validated by the backend data plane model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endpoint")]
		public EndpointInfo Endpoint { get; set; }
		
		/// <summary>
		/// For display only. Metadata associated with a VPC firewall rule, an implied VPC firewall rule, or a hierarchical firewall policy rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="firewall")]
		public FirewallInfo Firewall { get; set; }
		
		/// <summary>
		/// Details of the final state "forward" and associated resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forward")]
		public ForwardInfo Forward { get; set; }
		
		/// <summary>
		/// For display only. Metadata associated with a Compute Engine forwarding rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwardingRule")]
		public ForwardingRuleInfo ForwardingRule { get; set; }
		
		/// <summary>
		/// For display only. Metadata associated with a Google Kubernetes Engine (GKE) cluster master.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gkeMaster")]
		public GKEMasterInfo GkeMaster { get; set; }
		
		/// <summary>
		/// For display only. Details of a Google Service sending packets to a VPC network. Although the source IP might be a publicly routable address, some Google Services use special routes within Google production infrastructure to reach Compute Engine Instances. https://cloud.google.com/vpc/docs/routes#special_return_paths
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="googleService")]
		public GoogleServiceInfo GoogleService { get; set; }
		
		/// <summary>
		/// For display only. Metadata associated with a Compute Engine instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instance")]
		public InstanceInfo Instance { get; set; }
		
		/// <summary>
		/// For display only. Metadata associated with a load balancer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loadBalancer")]
		public LoadBalancerInfo LoadBalancer { get; set; }
		
		/// <summary>
		/// For display only. Metadata associated with the load balancer backend.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loadBalancerBackendInfo")]
		public LoadBalancerBackendInfo LoadBalancerBackendInfo { get; set; }
		
		/// <summary>
		/// For display only. Metadata associated with NAT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nat")]
		public NatInfo Nat { get; set; }
		
		/// <summary>
		/// For display only. Metadata associated with a Compute Engine network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="network")]
		public NetworkInfo Network { get; set; }
		
		/// <summary>
		/// Project ID that contains the configuration this step is validating.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="projectId")]
		public string ProjectId { get; set; }
		
		/// <summary>
		/// For display only. Metadata associated with ProxyConnection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="proxyConnection")]
		public ProxyConnectionInfo ProxyConnection { get; set; }
		
		/// <summary>
		/// For display only. Metadata associated with a Compute Engine route.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="route")]
		public RouteInfo Route { get; set; }
		
		/// <summary>
		/// Each step is in one of the pre-defined states.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<StepState> State { get; set; }
		
		/// <summary>
		/// For display only. Metadata associated with a VPC connector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vpcConnector")]
		public VpcConnectorInfo VpcConnector { get; set; }
		
		/// <summary>
		/// For display only. Metadata associated with a Compute Engine VPN gateway.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vpnGateway")]
		public VpnGatewayInfo VpnGateway { get; set; }
		
		/// <summary>
		/// For display only. Metadata associated with a Compute Engine VPN tunnel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vpnTunnel")]
		public VpnTunnelInfo VpnTunnel { get; set; }
	}
	
	/// <summary>
	/// Details of the final state "deliver" and associated resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeliverInfo
	{
		
		/// <summary>
		/// URI of the resource that the packet is delivered to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceUri")]
		public string ResourceUri { get; set; }
		
		/// <summary>
		/// Target type where the packet is delivered to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public System.Nullable<DeliverInfoTarget> Target { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeliverInfoTarget
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TARGET_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTANCE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNET = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GOOGLE_API = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GKE_MASTER = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_SQL_INSTANCE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PSC_PUBLISHED_SERVICE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PSC_GOOGLE_API = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PSC_VPC_SC = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVERLESS_NEG = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STORAGE_BUCKET = 10,
	}
	
	/// <summary>
	/// Details of the final state "drop" and associated resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DropInfo
	{
		
		/// <summary>
		/// Cause that the packet is dropped.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cause")]
		public System.Nullable<DropInfoCause> Cause { get; set; }
		
		/// <summary>
		/// Destination IP address of the dropped packet (if relevant).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationIp")]
		public string DestinationIp { get; set; }
		
		/// <summary>
		/// Region of the dropped packet (if relevant).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// URI of the resource that caused the drop.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceUri")]
		public string ResourceUri { get; set; }
		
		/// <summary>
		/// Source IP address of the dropped packet (if relevant).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceIp")]
		public string SourceIp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DropInfoCause
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CAUSE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN_EXTERNAL_ADDRESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FOREIGN_IP_DISALLOWED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIREWALL_RULE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_ROUTE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROUTE_BLACKHOLE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROUTE_WRONG_NETWORK = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROUTE_NEXT_HOP_IP_ADDRESS_NOT_RESOLVED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROUTE_NEXT_HOP_RESOURCE_NOT_FOUND = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_ROUTE_FROM_INTERNET_TO_PRIVATE_IPV6_ADDRESS = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPN_TUNNEL_LOCAL_SELECTOR_MISMATCH = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPN_TUNNEL_REMOTE_SELECTOR_MISMATCH = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVATE_TRAFFIC_TO_INTERNET = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVATE_GOOGLE_ACCESS_DISALLOWED = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVATE_GOOGLE_ACCESS_VIA_VPN_TUNNEL_UNSUPPORTED = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_EXTERNAL_ADDRESS = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN_INTERNAL_ADDRESS = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORWARDING_RULE_MISMATCH = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORWARDING_RULE_NO_INSTANCES = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIREWALL_BLOCKING_LOAD_BALANCER_BACKEND_HEALTH_CHECK = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTANCE_NOT_RUNNING = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GKE_CLUSTER_NOT_RUNNING = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_SQL_INSTANCE_NOT_RUNNING = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRAFFIC_TYPE_BLOCKED = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GKE_MASTER_UNAUTHORIZED_ACCESS = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_SQL_INSTANCE_UNAUTHORIZED_ACCESS = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DROPPED_INSIDE_GKE_SERVICE = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DROPPED_INSIDE_CLOUD_SQL_SERVICE = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GOOGLE_MANAGED_SERVICE_NO_PEERING = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GOOGLE_MANAGED_SERVICE_NO_PSC_ENDPOINT = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GKE_PSC_ENDPOINT_MISSING = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_SQL_INSTANCE_NO_IP_ADDRESS = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GKE_CONTROL_PLANE_REGION_MISMATCH = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLIC_GKE_CONTROL_PLANE_TO_PRIVATE_DESTINATION = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GKE_CONTROL_PLANE_NO_ROUTE = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_SQL_INSTANCE_NOT_CONFIGURED_FOR_EXTERNAL_TRAFFIC = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLIC_CLOUD_SQL_INSTANCE_TO_PRIVATE_DESTINATION = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_SQL_INSTANCE_NO_ROUTE = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_FUNCTION_NOT_ACTIVE = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPC_CONNECTOR_NOT_SET = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPC_CONNECTOR_NOT_RUNNING = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORWARDING_RULE_REGION_MISMATCH = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PSC_CONNECTION_NOT_ACCEPTED = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PSC_ENDPOINT_ACCESSED_FROM_PEERED_NETWORK = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PSC_NEG_PRODUCER_ENDPOINT_NO_GLOBAL_ACCESS = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_RUN_REVISION_NOT_READY = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DROPPED_INSIDE_PSC_SERVICE_PRODUCER = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOAD_BALANCER_HAS_NO_PROXY_SUBNET = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_NAT_NO_ADDRESSES = 48,
	}
	
	/// <summary>
	/// For display only. Metadata associated with a VPC firewall rule, an implied VPC firewall rule, or a hierarchical firewall policy rule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FirewallInfo
	{
		
		/// <summary>
		/// Possible values: ALLOW, DENY, APPLY_SECURITY_PROFILE_GROUP
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action")]
		public string Action { get; set; }
		
		/// <summary>
		/// Possible values: INGRESS, EGRESS
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public string Direction { get; set; }
		
		/// <summary>
		/// The display name of the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The firewall rule's type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="firewallRuleType")]
		public System.Nullable<FirewallInfoFirewallRuleType> FirewallRuleType { get; set; }
		
		/// <summary>
		/// The URI of the VPC network that the firewall rule is associated with. This field is not applicable to hierarchical firewall policy rules.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkUri")]
		public string NetworkUri { get; set; }
		
		/// <summary>
		/// The hierarchical firewall policy that this rule is associated with. This field is not applicable to VPC firewall rules.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policy")]
		public string Policy { get; set; }
		
		/// <summary>
		/// The priority of the firewall rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public System.Nullable<System.Int32> Priority { get; set; }
		
		/// <summary>
		/// The target service accounts specified by the firewall rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetServiceAccounts")]
		public string[] TargetServiceAccounts { get; set; }
		
		/// <summary>
		/// The target tags defined by the VPC firewall rule. This field is not applicable to hierarchical firewall policy rules.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetTags")]
		public string[] TargetTags { get; set; }
		
		/// <summary>
		/// The URI of the VPC firewall rule. This field is not applicable to implied firewall rules or hierarchical firewall policy rules.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FirewallInfoFirewallRuleType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIREWALL_RULE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIERARCHICAL_FIREWALL_POLICY_RULE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPC_FIREWALL_RULE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPLIED_VPC_FIREWALL_RULE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVERLESS_VPC_ACCESS_MANAGED_FIREWALL_RULE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK_FIREWALL_POLICY_RULE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK_REGIONAL_FIREWALL_POLICY_RULE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNSUPPORTED_FIREWALL_POLICY_RULE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRACKING_STATE = 8,
	}
	
	/// <summary>
	/// Details of the final state "forward" and associated resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ForwardInfo
	{
		
		/// <summary>
		/// URI of the resource that the packet is forwarded to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceUri")]
		public string ResourceUri { get; set; }
		
		/// <summary>
		/// Target type where this packet is forwarded to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public System.Nullable<ForwardInfoTarget> Target { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ForwardInfoTarget
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TARGET_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PEERING_VPC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPN_GATEWAY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERCONNECT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GKE_MASTER = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPORTED_CUSTOM_ROUTE_NEXT_HOP = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_SQL_INSTANCE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANOTHER_PROJECT = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NCC_HUB = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROUTER_APPLIANCE = 9,
	}
	
	/// <summary>
	/// For display only. Metadata associated with a Compute Engine forwarding rule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ForwardingRuleInfo
	{
		
		/// <summary>
		/// Name of a Compute Engine forwarding rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Port range defined in the forwarding rule that matches the test.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="matchedPortRange")]
		public string MatchedPortRange { get; set; }
		
		/// <summary>
		/// Protocol defined in the forwarding rule that matches the test.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="matchedProtocol")]
		public string MatchedProtocol { get; set; }
		
		/// <summary>
		/// Network URI. Only valid for Internal Load Balancer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkUri")]
		public string NetworkUri { get; set; }
		
		/// <summary>
		/// Target type of the forwarding rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public string Target { get; set; }
		
		/// <summary>
		/// URI of a Compute Engine forwarding rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		/// <summary>
		/// VIP of the forwarding rule.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public string Vip { get; set; }
	}
	
	/// <summary>
	/// For display only. Metadata associated with a Google Kubernetes Engine (GKE) cluster master.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GKEMasterInfo
	{
		
		/// <summary>
		/// URI of a GKE cluster network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clusterNetworkUri")]
		public string ClusterNetworkUri { get; set; }
		
		/// <summary>
		/// URI of a GKE cluster.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clusterUri")]
		public string ClusterUri { get; set; }
		
		/// <summary>
		/// External IP address of a GKE cluster master.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="externalIp")]
		public string ExternalIp { get; set; }
		
		/// <summary>
		/// Internal IP address of a GKE cluster master.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="internalIp")]
		public string InternalIp { get; set; }
	}
	
	/// <summary>
	/// For display only. Details of a Google Service sending packets to a VPC network. Although the source IP might be a publicly routable address, some Google Services use special routes within Google production infrastructure to reach Compute Engine Instances. https://cloud.google.com/vpc/docs/routes#special_return_paths
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleServiceInfo
	{
		
		/// <summary>
		/// Recognized type of a Google Service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="googleServiceType")]
		public System.Nullable<GoogleServiceInfoGoogleServiceType> GoogleServiceType { get; set; }
		
		/// <summary>
		/// Source IP address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceIp")]
		public string SourceIp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleServiceInfoGoogleServiceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GOOGLE_SERVICE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IAP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GFE_PROXY_OR_HEALTH_CHECK_PROBER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_DNS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GOOGLE_API = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GOOGLE_API_PSC = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GOOGLE_API_VPC_SC = 6,
	}
	
	/// <summary>
	/// For display only. Metadata associated with a Compute Engine instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceInfo
	{
		
		/// <summary>
		/// Name of a Compute Engine instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// External IP address of the network interface.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="externalIp")]
		public string ExternalIp { get; set; }
		
		/// <summary>
		/// Name of the network interface of a Compute Engine instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interface")]
		public string Interface { get; set; }
		
		/// <summary>
		/// Internal IP address of the network interface.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="internalIp")]
		public string InternalIp { get; set; }
		
		/// <summary>
		/// Network tags configured on the instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkTags")]
		public string[] NetworkTags { get; set; }
		
		/// <summary>
		/// URI of a Compute Engine network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkUri")]
		public string NetworkUri { get; set; }
		
		/// <summary>
		/// Service account authorized for the instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
		
		/// <summary>
		/// URI of a Compute Engine instance.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// For display only. Metadata associated with a load balancer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LoadBalancerInfo
	{
		
		/// <summary>
		/// Type of load balancer's backend configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backendType")]
		public System.Nullable<LoadBalancerInfoBackendType> BackendType { get; set; }
		
		/// <summary>
		/// Backend configuration URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backendUri")]
		public string BackendUri { get; set; }
		
		/// <summary>
		/// Information for the loadbalancer backends.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backends")]
		public LoadBalancerBackend[] Backends { get; set; }
		
		/// <summary>
		/// URI of the health check for the load balancer. Deprecated and no longer populated as different load balancer backends might have different health checks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="healthCheckUri")]
		public string HealthCheckUri { get; set; }
		
		/// <summary>
		/// Type of the load balancer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="loadBalancerType")]
		public System.Nullable<LoadBalancerInfoLoadBalancerType> LoadBalancerType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LoadBalancerInfoBackendType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BACKEND_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BACKEND_SERVICE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TARGET_POOL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TARGET_INSTANCE = 3,
	}
	
	/// <summary>
	/// For display only. Metadata associated with a specific load balancer backend.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LoadBalancerBackend
	{
		
		/// <summary>
		/// Name of a Compute Engine instance or network endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// A list of firewall rule URIs allowing probes from health check IP ranges.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="healthCheckAllowingFirewallRules")]
		public string[] HealthCheckAllowingFirewallRules { get; set; }
		
		/// <summary>
		/// A list of firewall rule URIs blocking probes from health check IP ranges.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="healthCheckBlockingFirewallRules")]
		public string[] HealthCheckBlockingFirewallRules { get; set; }
		
		/// <summary>
		/// State of the health check firewall configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="healthCheckFirewallState")]
		public System.Nullable<LoadBalancerBackendHealthCheckFirewallState> HealthCheckFirewallState { get; set; }
		
		/// <summary>
		/// URI of a Compute Engine instance or network endpoint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LoadBalancerBackendHealthCheckFirewallState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HEALTH_CHECK_FIREWALL_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONFIGURED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MISCONFIGURED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LoadBalancerInfoLoadBalancerType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOAD_BALANCER_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_TCP_UDP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK_TCP_UDP = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTTP_PROXY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TCP_PROXY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSL_PROXY = 5,
	}
	
	/// <summary>
	/// For display only. Metadata associated with the load balancer backend.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LoadBalancerBackendInfo
	{
		
		/// <summary>
		/// URI of the backend service this backend belongs to (if applicable).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backendServiceUri")]
		public string BackendServiceUri { get; set; }
		
		/// <summary>
		/// Output only. Health check firewalls configuration state for the backend. This is a result of the static firewall analysis (verifying that health check traffic from required IP ranges to the backend is allowed or not). The backend might still be unhealthy even if these firewalls are configured. Please refer to the documentation for more information: https://cloud.google.com/load-balancing/docs/firewall-rules
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="healthCheckFirewallsConfigState")]
		public System.Nullable<LoadBalancerBackendInfoHealthCheckFirewallsConfigState> HealthCheckFirewallsConfigState { get; set; }
		
		/// <summary>
		/// URI of the health check attached to this backend (if applicable).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="healthCheckUri")]
		public string HealthCheckUri { get; set; }
		
		/// <summary>
		/// URI of the instance group this backend belongs to (if applicable).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceGroupUri")]
		public string InstanceGroupUri { get; set; }
		
		/// <summary>
		/// URI of the backend instance (if applicable). Populated for instance group backends, and zonal NEG backends.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceUri")]
		public string InstanceUri { get; set; }
		
		/// <summary>
		/// Display name of the backend. For example, it might be an instance name for the instance group backends, or an IP address and port for zonal network endpoint group backends.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// URI of the network endpoint group this backend belongs to (if applicable).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkEndpointGroupUri")]
		public string NetworkEndpointGroupUri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LoadBalancerBackendInfoHealthCheckFirewallsConfigState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HEALTH_CHECK_FIREWALLS_CONFIG_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIREWALLS_CONFIGURED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIREWALLS_PARTIALLY_CONFIGURED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIREWALLS_NOT_CONFIGURED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIREWALLS_UNSUPPORTED = 4,
	}
	
	/// <summary>
	/// For display only. Metadata associated with NAT.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NatInfo
	{
		
		/// <summary>
		/// The name of Cloud NAT Gateway. Only valid when type is CLOUD_NAT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="natGatewayName")]
		public string NatGatewayName { get; set; }
		
		/// <summary>
		/// URI of the network where NAT translation takes place.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkUri")]
		public string NetworkUri { get; set; }
		
		/// <summary>
		/// Destination IP address after NAT translation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newDestinationIp")]
		public string NewDestinationIp { get; set; }
		
		/// <summary>
		/// Destination port after NAT translation. Only valid when protocol is TCP or UDP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newDestinationPort")]
		public System.Nullable<System.Int32> NewDestinationPort { get; set; }
		
		/// <summary>
		/// Source IP address after NAT translation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newSourceIp")]
		public string NewSourceIp { get; set; }
		
		/// <summary>
		/// Source port after NAT translation. Only valid when protocol is TCP or UDP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newSourcePort")]
		public System.Nullable<System.Int32> NewSourcePort { get; set; }
		
		/// <summary>
		/// Destination IP address before NAT translation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oldDestinationIp")]
		public string OldDestinationIp { get; set; }
		
		/// <summary>
		/// Destination port before NAT translation. Only valid when protocol is TCP or UDP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oldDestinationPort")]
		public System.Nullable<System.Int32> OldDestinationPort { get; set; }
		
		/// <summary>
		/// Source IP address before NAT translation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oldSourceIp")]
		public string OldSourceIp { get; set; }
		
		/// <summary>
		/// Source port before NAT translation. Only valid when protocol is TCP or UDP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oldSourcePort")]
		public System.Nullable<System.Int32> OldSourcePort { get; set; }
		
		/// <summary>
		/// IP protocol in string format, for example: "TCP", "UDP", "ICMP".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protocol")]
		public string Protocol { get; set; }
		
		/// <summary>
		/// Uri of the Cloud Router. Only valid when type is CLOUD_NAT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routerUri")]
		public string RouterUri { get; set; }
		
		/// <summary>
		/// Type of NAT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<NatInfoType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NatInfoType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_TO_EXTERNAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXTERNAL_TO_INTERNAL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_NAT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVATE_SERVICE_CONNECT = 4,
	}
	
	/// <summary>
	/// For display only. Metadata associated with a Compute Engine network.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NetworkInfo
	{
		
		/// <summary>
		/// Name of a Compute Engine network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The IP range that matches the test.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="matchedIpRange")]
		public string MatchedIpRange { get; set; }
		
		/// <summary>
		/// URI of a Compute Engine network.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// For display only. Metadata associated with ProxyConnection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProxyConnectionInfo
	{
		
		/// <summary>
		/// URI of the network where connection is proxied.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkUri")]
		public string NetworkUri { get; set; }
		
		/// <summary>
		/// Destination IP address of a new connection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newDestinationIp")]
		public string NewDestinationIp { get; set; }
		
		/// <summary>
		/// Destination port of a new connection. Only valid when protocol is TCP or UDP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newDestinationPort")]
		public System.Nullable<System.Int32> NewDestinationPort { get; set; }
		
		/// <summary>
		/// Source IP address of a new connection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newSourceIp")]
		public string NewSourceIp { get; set; }
		
		/// <summary>
		/// Source port of a new connection. Only valid when protocol is TCP or UDP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newSourcePort")]
		public System.Nullable<System.Int32> NewSourcePort { get; set; }
		
		/// <summary>
		/// Destination IP address of an original connection
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oldDestinationIp")]
		public string OldDestinationIp { get; set; }
		
		/// <summary>
		/// Destination port of an original connection. Only valid when protocol is TCP or UDP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oldDestinationPort")]
		public System.Nullable<System.Int32> OldDestinationPort { get; set; }
		
		/// <summary>
		/// Source IP address of an original connection.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oldSourceIp")]
		public string OldSourceIp { get; set; }
		
		/// <summary>
		/// Source port of an original connection. Only valid when protocol is TCP or UDP.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oldSourcePort")]
		public System.Nullable<System.Int32> OldSourcePort { get; set; }
		
		/// <summary>
		/// IP protocol in string format, for example: "TCP", "UDP", "ICMP".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protocol")]
		public string Protocol { get; set; }
		
		/// <summary>
		/// Uri of proxy subnet.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subnetUri")]
		public string SubnetUri { get; set; }
	}
	
	/// <summary>
	/// For display only. Metadata associated with a Compute Engine route.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RouteInfo
	{
		
		/// <summary>
		/// Destination IP range of the route.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destIpRange")]
		public string DestIpRange { get; set; }
		
		/// <summary>
		/// Destination port ranges of the route. Policy based routes only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destPortRanges")]
		public string[] DestPortRanges { get; set; }
		
		/// <summary>
		/// Name of a route.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Instance tags of the route.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instanceTags")]
		public string[] InstanceTags { get; set; }
		
		/// <summary>
		/// URI of a NCC Hub. NCC_HUB routes only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nccHubUri")]
		public string NccHubUri { get; set; }
		
		/// <summary>
		/// URI of a NCC Spoke. NCC_HUB routes only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nccSpokeUri")]
		public string NccSpokeUri { get; set; }
		
		/// <summary>
		/// URI of a Compute Engine network. NETWORK routes only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkUri")]
		public string NetworkUri { get; set; }
		
		/// <summary>
		/// Next hop of the route.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextHop")]
		public string NextHop { get; set; }
		
		/// <summary>
		/// Type of next hop.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextHopType")]
		public System.Nullable<RouteInfoNextHopType> NextHopType { get; set; }
		
		/// <summary>
		/// Priority of the route.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public System.Nullable<System.Int32> Priority { get; set; }
		
		/// <summary>
		/// Protocols of the route. Policy based routes only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="protocols")]
		public string[] Protocols { get; set; }
		
		/// <summary>
		/// Indicates where route is applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routeScope")]
		public System.Nullable<RouteInfoRouteScope> RouteScope { get; set; }
		
		/// <summary>
		/// Type of route.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routeType")]
		public System.Nullable<RouteInfoRouteType> RouteType { get; set; }
		
		/// <summary>
		/// Source IP address range of the route. Policy based routes only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="srcIpRange")]
		public string SrcIpRange { get; set; }
		
		/// <summary>
		/// Source port ranges of the route. Policy based routes only.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="srcPortRanges")]
		public string[] SrcPortRanges { get; set; }
		
		/// <summary>
		/// URI of a route. Dynamic, peering static and peering dynamic routes do not have an URI. Advertised route from Google Cloud VPC to on-premises network also does not have an URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RouteInfoNextHopType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEXT_HOP_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEXT_HOP_IP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEXT_HOP_INSTANCE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEXT_HOP_NETWORK = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEXT_HOP_PEERING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEXT_HOP_INTERCONNECT = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEXT_HOP_VPN_TUNNEL = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEXT_HOP_VPN_GATEWAY = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEXT_HOP_INTERNET_GATEWAY = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEXT_HOP_BLACKHOLE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEXT_HOP_ILB = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEXT_HOP_ROUTER_APPLIANCE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEXT_HOP_NCC_HUB = 12,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RouteInfoRouteScope
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROUTE_SCOPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NCC_HUB = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RouteInfoRouteType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROUTE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBNET = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATIC = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DYNAMIC = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PEERING_SUBNET = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PEERING_STATIC = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PEERING_DYNAMIC = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POLICY_BASED = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StepState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		START_FROM_INSTANCE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		START_FROM_INTERNET = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		START_FROM_GOOGLE_SERVICE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		START_FROM_PRIVATE_NETWORK = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		START_FROM_GKE_MASTER = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		START_FROM_CLOUD_SQL_INSTANCE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		START_FROM_CLOUD_FUNCTION = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		START_FROM_APP_ENGINE_VERSION = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		START_FROM_CLOUD_RUN_REVISION = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLY_INGRESS_FIREWALL_RULE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLY_EGRESS_FIREWALL_RULE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLY_ROUTE = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLY_FORWARDING_RULE = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANALYZE_LOAD_BALANCER_BACKEND = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPOOFING_APPROVED = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARRIVE_AT_INSTANCE = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARRIVE_AT_INTERNAL_LOAD_BALANCER = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARRIVE_AT_EXTERNAL_LOAD_BALANCER = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARRIVE_AT_VPN_GATEWAY = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARRIVE_AT_VPN_TUNNEL = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARRIVE_AT_VPC_CONNECTOR = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NAT = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROXY_CONNECTION = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELIVER = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DROP = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORWARD = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ABORT = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VIEWER_PERMISSION_MISSING = 28,
	}
	
	/// <summary>
	/// For display only. Metadata associated with a VPC connector.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VpcConnectorInfo
	{
		
		/// <summary>
		/// Name of a VPC connector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Location in which the VPC connector is deployed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// URI of a VPC connector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// For display only. Metadata associated with a Compute Engine VPN gateway.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VpnGatewayInfo
	{
		
		/// <summary>
		/// Name of a VPN gateway.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// IP address of the VPN gateway.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ipAddress")]
		public string IpAddress { get; set; }
		
		/// <summary>
		/// URI of a Compute Engine network where the VPN gateway is configured.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkUri")]
		public string NetworkUri { get; set; }
		
		/// <summary>
		/// Name of a Google Cloud region where this VPN gateway is configured.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// URI of a VPN gateway.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
		
		/// <summary>
		/// A VPN tunnel that is associated with this VPN gateway. There may be multiple VPN tunnels configured on a VPN gateway, and only the one relevant to the test is displayed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vpnTunnelUri")]
		public string VpnTunnelUri { get; set; }
	}
	
	/// <summary>
	/// For display only. Metadata associated with a Compute Engine VPN tunnel.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VpnTunnelInfo
	{
		
		/// <summary>
		/// Name of a VPN tunnel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// URI of a Compute Engine network where the VPN tunnel is configured.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkUri")]
		public string NetworkUri { get; set; }
		
		/// <summary>
		/// Name of a Google Cloud region where this VPN tunnel is configured.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// URI of a VPN gateway at remote end of the tunnel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="remoteGateway")]
		public string RemoteGateway { get; set; }
		
		/// <summary>
		/// Remote VPN gateway's IP address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="remoteGatewayIp")]
		public string RemoteGatewayIp { get; set; }
		
		/// <summary>
		/// Type of the routing policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="routingType")]
		public System.Nullable<VpnTunnelInfoRoutingType> RoutingType { get; set; }
		
		/// <summary>
		/// URI of the VPN gateway at local end of the tunnel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceGateway")]
		public string SourceGateway { get; set; }
		
		/// <summary>
		/// Local VPN gateway's IP address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sourceGatewayIp")]
		public string SourceGatewayIp { get; set; }
		
		/// <summary>
		/// URI of a VPN tunnel.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VpnTunnelInfoRoutingType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROUTING_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROUTE_BASED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POLICY_BASED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DYNAMIC = 3,
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Empty
	{
	}
	
	/// <summary>
	/// Response for the `ListConnectivityTests` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListConnectivityTestsResponse
	{
		
		/// <summary>
		/// Page token to fetch the next set of Connectivity Tests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// List of Connectivity Tests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resources")]
		public ConnectivityTest[] Resources { get; set; }
		
		/// <summary>
		/// Locations that could not be reached (when querying all locations with `-`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unreachable")]
		public string[] Unreachable { get; set; }
	}
	
	/// <summary>
	/// The response message for Locations.ListLocations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListLocationsResponse
	{
		
		/// <summary>
		/// A list of locations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locations")]
		public Location[] Locations { get; set; }
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// A resource that represents a Google Cloud location.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Location
	{
		
		/// <summary>
		/// The friendly name for this location, typically a nearby city name. For example, "Tokyo".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// The canonical id for this location. For example: `"us-east1"`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locationId")]
		public string LocationId { get; set; }
		
		/// <summary>
		/// Service-specific metadata. For example the available capacity at the given location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// The response message for Operations.ListOperations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListOperationsResponse
	{
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A list of operations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operations")]
		public Operation[] Operations { get; set; }
	}
	
	/// <summary>
	/// This resource represents a long-running operation that is the result of a network API call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Operation
	{
		
		/// <summary>
		/// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="done")]
		public System.Nullable<System.Boolean> Done { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public Status Error { get; set; }
		
		/// <summary>
		/// Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public System.Collections.Generic.Dictionary<string, object> Response { get; set; }
	}
	
	/// <summary>
	/// Metadata describing an Operation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OperationMetadata
	{
		
		/// <summary>
		/// API version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apiVersion")]
		public string ApiVersion { get; set; }
		
		/// <summary>
		/// Specifies if cancellation was requested for the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cancelRequested")]
		public System.Nullable<System.Boolean> CancelRequested { get; set; }
		
		/// <summary>
		/// The time the operation was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The time the operation finished running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// Human-readable status of the operation, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="statusDetail")]
		public string StatusDetail { get; set; }
		
		/// <summary>
		/// Target of the operation - for example projects/project-1/locations/global/connectivityTests/test-1
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public string Target { get; set; }
		
		/// <summary>
		/// Name of the verb executed by the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verb")]
		public string Verb { get; set; }
	}
	
	/// <summary>
	/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Policy
	{
		
		/// <summary>
		/// Specifies cloud audit logging configuration for this policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditConfigs")]
		public AuditConfig[] AuditConfigs { get; set; }
		
		/// <summary>
		/// Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindings")]
		public Binding[] Bindings { get; set; }
		
		/// <summary>
		/// `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	/// <summary>
	/// Request for the `RerunConnectivityTest` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RerunConnectivityTestRequest
	{
	}
	
	/// <summary>
	/// Request message for `SetIamPolicy` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetIamPolicyRequest
	{
		
		/// <summary>
		/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policy")]
		public Policy Policy { get; set; }
		
		/// <summary>
		/// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Request message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TestIamPermissionsRequest
	{
		
		/// <summary>
		/// The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	/// <summary>
	/// Response message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TestIamPermissionsResponse
	{
		
		/// <summary>
		/// A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
		/// Networkmanagement_projects_locations_global_operations_delete v1/{name}
		/// </summary>
		/// <param name="name">The name of the operation resource to be deleted.</param>
		/// <returns>Successful response</returns>
		public async Task<Empty> Networkmanagement_projects_locations_global_operations_deleteAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Empty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
		/// Networkmanagement_projects_locations_global_operations_get v1/{name}
		/// </summary>
		/// <param name="name">The name of the operation resource.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Networkmanagement_projects_locations_global_operations_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the configuration of an existing `ConnectivityTest`. After you update a test, the reachability analysis is performed as part of the long running operation, which completes when the analysis completes. The Reachability state in the test resource is updated with the new result. If the endpoint specifications in `ConnectivityTest` are invalid (for example, they contain non-existent resources in the network, or the user does not have read permissions to the network configurations of listed projects), then the reachability result returns a value of UNKNOWN. If the endpoint specifications in `ConnectivityTest` are incomplete, the reachability result returns a value of `AMBIGUOUS`. See the documentation in `ConnectivityTest` for for more details.
		/// Networkmanagement_projects_locations_global_connectivityTests_patch v1/{name}
		/// </summary>
		/// <param name="name">Required. Unique name of the resource using the form: `projects/{project_id}/locations/global/connectivityTests/{test_id}`</param>
		/// <param name="updateMask">Required. Mask of fields to update. At least one path must be supplied in this field.</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Networkmanagement_projects_locations_global_connectivityTests_patchAsync(string name, string updateMask, ConnectivityTest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&updateMask=" + (updateMask==null? "" : System.Uri.EscapeDataString(updateMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists information about the supported locations for this service.
		/// Networkmanagement_projects_locations_list v1/{name}/locations
		/// </summary>
		/// <param name="name">The resource that owns the locations collection, if applicable.</param>
		/// <param name="filter">A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).</param>
		/// <param name="pageSize">The maximum number of results to return. If not set, the service selects a default.</param>
		/// <param name="pageToken">A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.</param>
		/// <returns>Successful response</returns>
		public async Task<ListLocationsResponse> Networkmanagement_projects_locations_listAsync(string name, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/locations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListLocationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
		/// Networkmanagement_projects_locations_global_operations_list v1/{name}/operations
		/// </summary>
		/// <param name="name">The name of the operation's parent resource.</param>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListOperationsResponse> Networkmanagement_projects_locations_global_operations_listAsync(string name, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/operations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListOperationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
		/// Networkmanagement_projects_locations_global_operations_cancel v1/{name}:cancel
		/// </summary>
		/// <param name="name">The name of the operation resource to be cancelled.</param>
		/// <returns>Successful response</returns>
		public async Task<Empty> Networkmanagement_projects_locations_global_operations_cancelAsync(string name, CancelOperationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":cancel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Empty>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Rerun an existing `ConnectivityTest`. After the user triggers the rerun, the reachability analysis is performed as part of the long running operation, which completes when the analysis completes. Even though the test configuration remains the same, the reachability result may change due to underlying network configuration changes. If the endpoint specifications in `ConnectivityTest` become invalid (for example, specified resources are deleted in the network, or you lost read permissions to the network configurations of listed projects), then the reachability result returns a value of `UNKNOWN`.
		/// Networkmanagement_projects_locations_global_connectivityTests_rerun v1/{name}:rerun
		/// </summary>
		/// <param name="name">Required. Connectivity Test resource name using the form: `projects/{project_id}/locations/global/connectivityTests/{test_id}`</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Networkmanagement_projects_locations_global_connectivityTests_rerunAsync(string name, RerunConnectivityTestRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":rerun";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all Connectivity Tests owned by a project.
		/// Networkmanagement_projects_locations_global_connectivityTests_list v1/{parent}/connectivityTests
		/// </summary>
		/// <param name="parent">Required. The parent resource of the Connectivity Tests: `projects/{project_id}/locations/global`</param>
		/// <param name="filter">Lists the `ConnectivityTests` that match the filter expression. A filter expression filters the resources listed in the response. The expression must be of the form ` ` where operators: `<`, `>`, `<=`, `>=`, `!=`, `=`, `:` are supported (colon `:` represents a HAS operator which is roughly synonymous with equality). can refer to a proto or JSON field, or a synthetic field. Field names can be camelCase or snake_case. Examples: - Filter by name: name = "projects/proj-1/locations/global/connectivityTests/test-1 - Filter by labels: - Resources that have a key called `foo` labels.foo:* - Resources that have a key called `foo` whose value is `bar` labels.foo = bar</param>
		/// <param name="orderBy">Field to use to sort the list.</param>
		/// <param name="pageSize">Number of `ConnectivityTests` to return.</param>
		/// <param name="pageToken">Page token from an earlier query, as returned in `next_page_token`.</param>
		/// <returns>Successful response</returns>
		public async Task<ListConnectivityTestsResponse> Networkmanagement_projects_locations_global_connectivityTests_listAsync(string parent, string filter, string orderBy, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/connectivityTests&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&orderBy=" + (orderBy==null? "" : System.Uri.EscapeDataString(orderBy))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListConnectivityTestsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new Connectivity Test. After you create a test, the reachability analysis is performed as part of the long running operation, which completes when the analysis completes. If the endpoint specifications in `ConnectivityTest` are invalid (for example, containing non-existent resources in the network, or you don't have read permissions to the network configurations of listed projects), then the reachability result returns a value of `UNKNOWN`. If the endpoint specifications in `ConnectivityTest` are incomplete, the reachability result returns a value of AMBIGUOUS. For more information, see the Connectivity Test documentation.
		/// Networkmanagement_projects_locations_global_connectivityTests_create v1/{parent}/connectivityTests
		/// </summary>
		/// <param name="parent">Required. The parent resource of the Connectivity Test to create: `projects/{project_id}/locations/global`</param>
		/// <param name="testId">Required. The logical name of the Connectivity Test in your project with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-40 characters. * Must end with a number or a letter. * Must be unique within the customer project</param>
		/// <returns>Successful response</returns>
		public async Task<Operation> Networkmanagement_projects_locations_global_connectivityTests_createAsync(string parent, string testId, ConnectivityTest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/connectivityTests&testId=" + (testId==null? "" : System.Uri.EscapeDataString(testId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Operation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
		/// Networkmanagement_projects_locations_global_connectivityTests_getIamPolicy v1/{resource}:getIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <param name="options_requestedPolicyVersion">Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).</param>
		/// <returns>Successful response</returns>
		public async Task<Policy> Networkmanagement_projects_locations_global_connectivityTests_getIamPolicyAsync(string resource, int options_requestedPolicyVersion, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":getIamPolicy&options.requestedPolicyVersion="+options_requestedPolicyVersion;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Policy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
		/// Networkmanagement_projects_locations_global_connectivityTests_setIamPolicy v1/{resource}:setIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<Policy> Networkmanagement_projects_locations_global_connectivityTests_setIamPolicyAsync(string resource, SetIamPolicyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":setIamPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Policy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.
		/// Networkmanagement_projects_locations_global_connectivityTests_testIamPermissions v1/{resource}:testIamPermissions
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<TestIamPermissionsResponse> Networkmanagement_projects_locations_global_connectivityTests_testIamPermissionsAsync(string resource, TestIamPermissionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":testIamPermissions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<TestIamPermissionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

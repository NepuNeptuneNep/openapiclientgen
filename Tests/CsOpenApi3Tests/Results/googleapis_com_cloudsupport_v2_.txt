//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// An Actor represents an entity that performed an action. For example, an actor could be a user who posted a comment on a support case, a user who uploaded an attachment, or a service account that created a support case.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Actor
	{
		
		/// <summary>
		/// The name to display for the actor. If not provided, it is inferred from credentials supplied during case creation. When an email is provided, a display name must also be provided. This will be obfuscated if the user is a Google Support agent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The email address of the actor. If not provided, it is inferred from the credentials supplied during case creation. When a name is provided, an email must also be provided. If the user is a Google Support agent, this is obfuscated. This field is deprecated. Use **username** field instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Output only. Whether the actor is a Google support actor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="googleSupport")]
		public System.Nullable<System.Boolean> GoogleSupport { get; set; }
		
		/// <summary>
		/// Output only. The username of the actor. It may look like an email or other format provided by the identity provider. If not provided, it is inferred from the credentials supplied. When a name is provided, a username must also be provided. If the user is a Google Support agent, this will not be set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	/// <summary>
	/// An Attachment contains metadata about a file that was uploaded to a case - it is NOT a file itself. That being said, the name of an Attachment object can be used to download its accompanying file through the `media.download` endpoint. While attachments can be uploaded in the console at the same time as a comment, they're associated on a "case" level, not a "comment" level.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Attachment
	{
		
		/// <summary>
		/// Output only. The time at which the attachment was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// An Actor represents an entity that performed an action. For example, an actor could be a user who posted a comment on a support case, a user who uploaded an attachment, or a service account that created a support case.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creator")]
		public Actor Creator { get; set; }
		
		/// <summary>
		/// The filename of the attachment (e.g. `"graph.jpg"`).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filename")]
		public string Filename { get; set; }
		
		/// <summary>
		/// Output only. The MIME type of the attachment (e.g. text/plain).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the attachment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The size of the attachment in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sizeBytes")]
		public string SizeBytes { get; set; }
	}
	
	/// <summary>
	/// # gdata.* are outside protos with mising documentation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Blobstore2Info
	{
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blobGeneration")]
		public string BlobGeneration { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blobId")]
		public string BlobId { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downloadReadHandle")]
		public string DownloadReadHandle { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="readToken")]
		public string ReadToken { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uploadMetadataContainer")]
		public string UploadMetadataContainer { get; set; }
	}
	
	/// <summary>
	/// A Case is an object that contains the details of a support case. It contains fields for the time it was created, its priority, its classification, and more. Cases can also have comments and attachments that get added over time. A case is parented by a Google Cloud organization or project. Organizations are identified by a number, so the name of a case parented by an organization would look like this: ``` organizations/123/cases/456 ``` Projects have two unique identifiers, an ID and a number, and they look like this: ``` projects/abc/cases/456 ``` ``` projects/123/cases/456 ``` You can use either of them when calling the API. To learn more about project identifiers, see [AIP-2510](https://google.aip.dev/cloud/2510).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Case
	{
		
		/// <summary>
		/// A Case Classification represents the topic that a case is about. It's very important to use accurate classifications, because they're used to route your cases to specialists who can help you. A classification always has an ID that is its unique identifier. A valid ID is required when creating a case.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="classification")]
		public CaseClassification Classification { get; set; }
		
		/// <summary>
		/// A user-supplied email address to send case update notifications for. This should only be used in BYOID flows, where we cannot infer the user's email address directly from their EUCs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contactEmail")]
		public string ContactEmail { get; set; }
		
		/// <summary>
		/// Output only. The time this case was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// An Actor represents an entity that performed an action. For example, an actor could be a user who posted a comment on a support case, a user who uploaded an attachment, or a service account that created a support case.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creator")]
		public Actor Creator { get; set; }
		
		/// <summary>
		/// A broad description of the issue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The short summary of the issue reported in this case.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Whether the case is currently escalated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="escalated")]
		public System.Nullable<System.Boolean> Escalated { get; set; }
		
		/// <summary>
		/// The language the user has requested to receive support in. This should be a BCP 47 language code (e.g., `"en"`, `"zh-CN"`, `"zh-TW"`, `"ja"`, `"ko"`). If no language or an unsupported language is specified, this field defaults to English (en). Language selection during case creation may affect your available support options. For a list of supported languages and their support working hours, see: https://cloud.google.com/support/docs/language-working-hours
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="languageCode")]
		public string LanguageCode { get; set; }
		
		/// <summary>
		/// The resource name for the case.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The priority of this case.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="priority")]
		public System.Nullable<CasePriority> Priority { get; set; }
		
		/// <summary>
		/// Output only. The current status of the support case.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<CaseState> State { get; set; }
		
		/// <summary>
		/// The email addresses to receive updates on this case.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriberEmailAddresses")]
		public string[] SubscriberEmailAddresses { get; set; }
		
		/// <summary>
		/// Whether this case was created for internal API testing and should not be acted on by the support team.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="testCase")]
		public System.Nullable<System.Boolean> TestCase { get; set; }
		
		/// <summary>
		/// The timezone of the user who created the support case. It should be in a format IANA recognizes: https://www.iana.org/time-zones. There is no additional validation done by the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeZone")]
		public string TimeZone { get; set; }
		
		/// <summary>
		/// Output only. The time this case was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// A Case Classification represents the topic that a case is about. It's very important to use accurate classifications, because they're used to route your cases to specialists who can help you. A classification always has an ID that is its unique identifier. A valid ID is required when creating a case.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CaseClassification
	{
		
		/// <summary>
		/// A display name for the classification. The display name is not static and can change. To uniquely and consistently identify classifications, use the `CaseClassification.id` field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The unique ID for a classification. Must be specified for case creation. To retrieve valid classification IDs for case creation, use `caseClassifications.search`. Classification IDs returned by `caseClassifications.search` are guaranteed to be valid for at least 6 months. If a given classification is deactiveated, it will immediately stop being returned. After 6 months, `case.create` requests using the classification ID will fail.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CasePriority
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PRIORITY_UNSPECIFIED")]
		PRIORITY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="P0")]
		P0 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="P1")]
		P1 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="P2")]
		P2 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="P3")]
		P3 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="P4")]
		P4 = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CaseState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STATE_UNSPECIFIED")]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NEW")]
		NEW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IN_PROGRESS_GOOGLE_SUPPORT")]
		IN_PROGRESS_GOOGLE_SUPPORT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ACTION_REQUIRED")]
		ACTION_REQUIRED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SOLUTION_PROVIDED")]
		SOLUTION_PROVIDED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOSED")]
		CLOSED = 5,
	}
	
	/// <summary>
	/// The request message for the CloseCase endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloseCaseRequest
	{
	}
	
	/// <summary>
	/// Case comments are the main way Google Support communicates with a user who has opened a case. When a user responds to Google Support, the user's responses also appear as comments.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Comment
	{
		
		/// <summary>
		/// The full comment body. Maximum of 12800 characters. This can contain rich text syntax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="body")]
		public string Body { get; set; }
		
		/// <summary>
		/// Output only. The time when this comment was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// An Actor represents an entity that performed an action. For example, an actor could be a user who posted a comment on a support case, a user who uploaded an attachment, or a service account that created a support case.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creator")]
		public Actor Creator { get; set; }
		
		/// <summary>
		/// Output only. The resource name for the comment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. DEPRECATED. An automatically generated plain text version of body with all rich text syntax stripped.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="plainTextBody")]
		public string PlainTextBody { get; set; }
	}
	
	/// <summary>
	/// # gdata.* are outside protos with mising documentation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CompositeMedia
	{
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blobRef")]
		public string BlobRef { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blobstore2Info")]
		public Blobstore2Info Blobstore2Info { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cosmoBinaryReference")]
		public string CosmoBinaryReference { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="crc32cHash")]
		public System.Nullable<System.UInt32> Crc32cHash { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inline")]
		public string Inline { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="length")]
		public string Length { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="md5Hash")]
		public string Md5Hash { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objectId")]
		public ObjectId ObjectId { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="referenceType")]
		public System.Nullable<CompositeMediaReferenceType> ReferenceType { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sha1Hash")]
		public string Sha1Hash { get; set; }
	}
	
	/// <summary>
	/// # gdata.* are outside protos with mising documentation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ObjectId
	{
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucketName")]
		public string BucketName { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="generation")]
		public string Generation { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objectName")]
		public string ObjectName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CompositeMediaReferenceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PATH")]
		PATH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BLOB_REF")]
		BLOB_REF = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INLINE")]
		INLINE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BIGSTORE_REF")]
		BIGSTORE_REF = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COSMO_BINARY_REFERENCE")]
		COSMO_BINARY_REFERENCE = 4,
	}
	
	/// <summary>
	/// # gdata.* are outside protos with mising documentation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ContentTypeInfo
	{
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bestGuess")]
		public string BestGuess { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fromBytes")]
		public string FromBytes { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fromFileName")]
		public string FromFileName { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fromHeader")]
		public string FromHeader { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fromUrlPath")]
		public string FromUrlPath { get; set; }
	}
	
	/// <summary>
	/// The request message for the CreateAttachment endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateAttachmentRequest
	{
		
		/// <summary>
		/// An Attachment contains metadata about a file that was uploaded to a case - it is NOT a file itself. That being said, the name of an Attachment object can be used to download its accompanying file through the `media.download` endpoint. While attachments can be uploaded in the console at the same time as a comment, they're associated on a "case" level, not a "comment" level.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attachment")]
		public Attachment Attachment { get; set; }
	}
	
	/// <summary>
	/// # gdata.* are outside protos with mising documentation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DiffChecksumsResponse
	{
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="checksumsLocation")]
		public CompositeMedia ChecksumsLocation { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="chunkSizeBytes")]
		public string ChunkSizeBytes { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objectLocation")]
		public CompositeMedia ObjectLocation { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objectSizeBytes")]
		public string ObjectSizeBytes { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objectVersion")]
		public string ObjectVersion { get; set; }
	}
	
	/// <summary>
	/// # gdata.* are outside protos with mising documentation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DiffDownloadResponse
	{
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objectLocation")]
		public CompositeMedia ObjectLocation { get; set; }
	}
	
	/// <summary>
	/// # gdata.* are outside protos with mising documentation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DiffUploadRequest
	{
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="checksumsInfo")]
		public CompositeMedia ChecksumsInfo { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objectInfo")]
		public CompositeMedia ObjectInfo { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objectVersion")]
		public string ObjectVersion { get; set; }
	}
	
	/// <summary>
	/// # gdata.* are outside protos with mising documentation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DiffUploadResponse
	{
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objectVersion")]
		public string ObjectVersion { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originalObject")]
		public CompositeMedia OriginalObject { get; set; }
	}
	
	/// <summary>
	/// # gdata.* are outside protos with mising documentation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DiffVersionResponse
	{
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objectSizeBytes")]
		public string ObjectSizeBytes { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objectVersion")]
		public string ObjectVersion { get; set; }
	}
	
	/// <summary>
	/// # gdata.* are outside protos with mising documentation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DownloadParameters
	{
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowGzipCompression")]
		public System.Nullable<System.Boolean> AllowGzipCompression { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ignoreRange")]
		public System.Nullable<System.Boolean> IgnoreRange { get; set; }
	}
	
	/// <summary>
	/// The request message for the EscalateCase endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EscalateCaseRequest
	{
		
		/// <summary>
		/// An escalation of a support case.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="escalation")]
		public Escalation Escalation { get; set; }
	}
	
	/// <summary>
	/// An escalation of a support case.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Escalation
	{
		
		/// <summary>
		/// Required. A free text description to accompany the `reason` field above. Provides additional context on why the case is being escalated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="justification")]
		public string Justification { get; set; }
		
		/// <summary>
		/// Required. The reason why the Case is being escalated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public System.Nullable<EscalationReason> Reason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum EscalationReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REASON_UNSPECIFIED")]
		REASON_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RESOLUTION_TIME")]
		RESOLUTION_TIME = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TECHNICAL_EXPERTISE")]
		TECHNICAL_EXPERTISE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BUSINESS_IMPACT")]
		BUSINESS_IMPACT = 3,
	}
	
	/// <summary>
	/// The response message for the ListAttachments endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListAttachmentsResponse
	{
		
		/// <summary>
		/// The list of attachments associated with a case.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="attachments")]
		public Attachment[] Attachments { get; set; }
		
		/// <summary>
		/// A token to retrieve the next page of results. Set this in the `page_token` field of subsequent `cases.attachments.list` requests. If unspecified, there are no more results to retrieve.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The response message for the ListCases endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListCasesResponse
	{
		
		/// <summary>
		/// The list of cases associated with the parent after any filters have been applied.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cases")]
		public Case[] Cases { get; set; }
		
		/// <summary>
		/// A token to retrieve the next page of results. Set this in the `page_token` field of subsequent `cases.list` requests. If unspecified, there are no more results to retrieve.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The response message for the ListComments endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListCommentsResponse
	{
		
		/// <summary>
		/// List of the comments associated with the case.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="comments")]
		public Comment[] Comments { get; set; }
		
		/// <summary>
		/// A token to retrieve the next page of results. Set this in the `page_token` field of subsequent `cases.comments.list` requests. If unspecified, there are no more results to retrieve.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// # gdata.* are outside protos with mising documentation
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Media
	{
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="algorithm")]
		public string Algorithm { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bigstoreObjectRef")]
		public string BigstoreObjectRef { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blobRef")]
		public string BlobRef { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="blobstore2Info")]
		public Blobstore2Info Blobstore2Info { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="compositeMedia")]
		public CompositeMedia[] CompositeMedia { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentType")]
		public string ContentType { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contentTypeInfo")]
		public ContentTypeInfo ContentTypeInfo { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cosmoBinaryReference")]
		public string CosmoBinaryReference { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="crc32cHash")]
		public System.Nullable<System.UInt32> Crc32cHash { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diffChecksumsResponse")]
		public DiffChecksumsResponse DiffChecksumsResponse { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diffDownloadResponse")]
		public DiffDownloadResponse DiffDownloadResponse { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diffUploadRequest")]
		public DiffUploadRequest DiffUploadRequest { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diffUploadResponse")]
		public DiffUploadResponse DiffUploadResponse { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diffVersionResponse")]
		public DiffVersionResponse DiffVersionResponse { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="downloadParameters")]
		public DownloadParameters DownloadParameters { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filename")]
		public string Filename { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hash")]
		public string Hash { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hashVerified")]
		public System.Nullable<System.Boolean> HashVerified { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inline")]
		public string Inline { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isPotentialRetry")]
		public System.Nullable<System.Boolean> IsPotentialRetry { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="length")]
		public string Length { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="md5Hash")]
		public string Md5Hash { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mediaId")]
		public string MediaId { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="objectId")]
		public ObjectId ObjectId { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="referenceType")]
		public System.Nullable<MediaReferenceType> ReferenceType { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sha1Hash")]
		public string Sha1Hash { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sha256Hash")]
		public string Sha256Hash { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public string Timestamp { get; set; }
		
		/// <summary>
		/// # gdata.* are outside protos with mising documentation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="token")]
		public string Token { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum MediaReferenceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PATH")]
		PATH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BLOB_REF")]
		BLOB_REF = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INLINE")]
		INLINE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GET_MEDIA")]
		GET_MEDIA = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COMPOSITE_MEDIA")]
		COMPOSITE_MEDIA = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BIGSTORE_REF")]
		BIGSTORE_REF = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DIFF_VERSION_RESPONSE")]
		DIFF_VERSION_RESPONSE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DIFF_CHECKSUMS_RESPONSE")]
		DIFF_CHECKSUMS_RESPONSE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DIFF_DOWNLOAD_RESPONSE")]
		DIFF_DOWNLOAD_RESPONSE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DIFF_UPLOAD_REQUEST")]
		DIFF_UPLOAD_REQUEST = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DIFF_UPLOAD_RESPONSE")]
		DIFF_UPLOAD_RESPONSE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COSMO_BINARY_REFERENCE")]
		COSMO_BINARY_REFERENCE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ARBITRARY_BYTES")]
		ARBITRARY_BYTES = 12,
	}
	
	/// <summary>
	/// The response message for SearchCaseClassifications endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SearchCaseClassificationsResponse
	{
		
		/// <summary>
		/// The classifications retrieved.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="caseClassifications")]
		public CaseClassification[] CaseClassifications { get; set; }
		
		/// <summary>
		/// A token to retrieve the next page of results. Set this in the `page_token` field of subsequent `caseClassifications.list` requests. If unspecified, there are no more results to retrieve.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// The response message for the SearchCases endpoint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SearchCasesResponse
	{
		
		/// <summary>
		/// The list of cases associated with the parent after any filters have been applied.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cases")]
		public Case[] Cases { get; set; }
		
		/// <summary>
		/// A token to retrieve the next page of results. Set this in the `page_token` field of subsequent `cases.search` requests. If unspecified, there are no more results to retrieve.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Metadata about the operation. Used to lookup the current status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class WorkflowOperationMetadata
	{
		
		/// <summary>
		/// The namespace that the job was scheduled in. Must be included in the workflow metadata so the workflow status can be retrieved.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="namespace")]
		public string Namespace { get; set; }
		
		/// <summary>
		/// The type of action the operation is classified as.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operationAction")]
		public System.Nullable<WorkflowOperationMetadataOperationAction> OperationAction { get; set; }
		
		/// <summary>
		/// Which version of the workflow service this operation came from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflowOperationType")]
		public System.Nullable<WorkflowOperationMetadataWorkflowOperationType> WorkflowOperationType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum WorkflowOperationMetadataOperationAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OPERATION_ACTION_UNSPECIFIED")]
		OPERATION_ACTION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CREATE_SUPPORT_ACCOUNT")]
		CREATE_SUPPORT_ACCOUNT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UPDATE_SUPPORT_ACCOUNT")]
		UPDATE_SUPPORT_ACCOUNT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PURCHASE_SUPPORT_ACCOUNT")]
		PURCHASE_SUPPORT_ACCOUNT = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum WorkflowOperationMetadataWorkflowOperationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNKNOWN_OPERATION_TYPE")]
		UNKNOWN_OPERATION_TYPE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="WORKFLOWS_V1")]
		WORKFLOWS_V1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="WORKFLOWS_V2")]
		WORKFLOWS_V2 = 2,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Retrieve valid classifications to use when creating a support case. Classifications are hierarchical. Each classification is a string containing all levels of the hierarchy separated by `" > "`. For example, `"Technical Issue > Compute > Compute Engine"`. Classification IDs returned by this endpoint are valid for at least six months. When a classification is deactivated, this endpoint immediately stops returning it. After six months, `case.create` requests using the classification will fail. EXAMPLES: cURL: ```shell curl \ --header "Authorization: Bearer $(gcloud auth print-access-token)" \ 'https://cloudsupport.googleapis.com/v2/caseClassifications:search?query=display_name:"*Compute%20Engine*"' ``` Python: ```python import googleapiclient.discovery supportApiService = googleapiclient.discovery.build( serviceName="cloudsupport", version="v2", discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version=v2", ) request = supportApiService.caseClassifications().search( query='display_name:"*Compute Engine*"' ) print(request.execute()) ```
		/// Cloudsupport_caseClassifications_search v2/caseClassifications:search
		/// </summary>
		/// <param name="pageSize">The maximum number of classifications fetched with each request.</param>
		/// <param name="pageToken">A token identifying the page of results to return. If unspecified, the first page is retrieved.</param>
		/// <param name="query">An expression used to filter case classifications. If it's an empty string, then no filtering happens. Otherwise, case classifications will be returned that match the filter.</param>
		/// <returns>Successful response</returns>
		public async Task<SearchCaseClassificationsResponse> Cloudsupport_caseClassifications_searchAsync(int pageSize, string pageToken, string query, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/caseClassifications:search?pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&query=" + (query==null? "" : System.Uri.EscapeDataString(query));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<SearchCaseClassificationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve a case. EXAMPLES: cURL: ```shell case="projects/some-project/cases/16033687" curl \ --header "Authorization: Bearer $(gcloud auth print-access-token)" \ "https://cloudsupport.googleapis.com/v2/$case" ``` Python: ```python import googleapiclient.discovery api_version = "v2" supportApiService = googleapiclient.discovery.build( serviceName="cloudsupport", version=api_version, discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}", ) request = supportApiService.cases().get( name="projects/some-project/cases/43595344", ) print(request.execute()) ```
		/// Cloudsupport_cases_get v2/{name}
		/// </summary>
		/// <param name="name">Required. The full name of a case to be retrieved.</param>
		/// <returns>Successful response</returns>
		public async Task<Case> Cloudsupport_cases_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Case>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update a case. Only some fields can be updated. EXAMPLES: cURL: ```shell case="projects/some-project/cases/43595344" curl \ --request PATCH \ --header "Authorization: Bearer $(gcloud auth print-access-token)" \ --header "Content-Type: application/json" \ --data '{ "priority": "P1" }' \ "https://cloudsupport.googleapis.com/v2/$case?updateMask=priority" ``` Python: ```python import googleapiclient.discovery api_version = "v2" supportApiService = googleapiclient.discovery.build( serviceName="cloudsupport", version=api_version, discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}", ) request = supportApiService.cases().patch( name="projects/some-project/cases/43112854", body={ "displayName": "This is Now a New Title", "priority": "P2", }, ) print(request.execute()) ```
		/// Cloudsupport_cases_patch v2/{name}
		/// </summary>
		/// <param name="name">The resource name for the case.</param>
		/// <param name="updateMask">A list of attributes of the case that should be updated. Supported values are `priority`, `display_name`, and `subscriber_email_addresses`. If no fields are specified, all supported fields are updated. Be careful - if you do not provide a field mask, then you might accidentally clear some fields. For example, if you leave the field mask empty and do not provide a value for `subscriber_email_addresses`, then `subscriber_email_addresses` is updated to empty.</param>
		/// <returns>Successful response</returns>
		public async Task<Case> Cloudsupport_cases_patchAsync(string name, string updateMask, Case requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&updateMask=" + (updateMask==null? "" : System.Uri.EscapeDataString(updateMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Case>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Close a case. EXAMPLES: cURL: ```shell case="projects/some-project/cases/43595344" curl \ --request POST \ --header "Authorization: Bearer $(gcloud auth print-access-token)" \ "https://cloudsupport.googleapis.com/v2/$case:close" ``` Python: ```python import googleapiclient.discovery api_version = "v2" supportApiService = googleapiclient.discovery.build( serviceName="cloudsupport", version=api_version, discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}", ) request = supportApiService.cases().close( name="projects/some-project/cases/43595344" ) print(request.execute()) ```
		/// Cloudsupport_cases_close v2/{name}:close
		/// </summary>
		/// <param name="name">Required. The name of the case to close.</param>
		/// <returns>Successful response</returns>
		public async Task<Case> Cloudsupport_cases_closeAsync(string name, CloseCaseRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":close";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Case>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Download a file attached to a case. Note: HTTP requests must append "?alt=media" to the URL. EXAMPLES: cURL: ```shell name="projects/some-project/cases/43594844/attachments/0674M00000WijAnZAJ" curl \ --header "Authorization: Bearer $(gcloud auth print-access-token)" \ "https://cloudsupport.googleapis.com/v2/$name:download?alt=media" ``` Python: ```python import googleapiclient.discovery api_version = "v2" supportApiService = googleapiclient.discovery.build( serviceName="cloudsupport", version=api_version, discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}", ) request = supportApiService.media().download( name="projects/some-project/cases/43595344/attachments/0684M00000Pw6pHQAR" ) request.uri = request.uri.split("?")[0] + "?alt=media" print(request.execute()) ```
		/// Cloudsupport_media_download v2/{name}:download
		/// </summary>
		/// <param name="name">The name of the file attachment to download.</param>
		/// <returns>Successful response</returns>
		public async Task<Media> Cloudsupport_media_downloadAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":download";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Media>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Escalate a case, starting the Google Cloud Support escalation management process. This operation is only available for some support services. Go to https://cloud.google.com/support and look for 'Technical support escalations' in the feature list to find out which ones let you do that. EXAMPLES: cURL: ```shell case="projects/some-project/cases/43595344" curl \ --request POST \ --header "Authorization: Bearer $(gcloud auth print-access-token)" \ --header "Content-Type: application/json" \ --data '{ "escalation": { "reason": "BUSINESS_IMPACT", "justification": "This is a test escalation." } }' \ "https://cloudsupport.googleapis.com/v2/$case:escalate" ``` Python: ```python import googleapiclient.discovery api_version = "v2" supportApiService = googleapiclient.discovery.build( serviceName="cloudsupport", version=api_version, discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}", ) request = supportApiService.cases().escalate( name="projects/some-project/cases/43595344", body={ "escalation": { "reason": "BUSINESS_IMPACT", "justification": "This is a test escalation.", }, }, ) print(request.execute()) ```
		/// Cloudsupport_cases_escalate v2/{name}:escalate
		/// </summary>
		/// <param name="name">Required. The name of the case to be escalated.</param>
		/// <returns>Successful response</returns>
		public async Task<Case> Cloudsupport_cases_escalateAsync(string name, EscalateCaseRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":escalate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Case>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List all the attachments associated with a support case. EXAMPLES: cURL: ```shell case="projects/some-project/cases/23598314" curl \ --header "Authorization: Bearer $(gcloud auth print-access-token)" \ "https://cloudsupport.googleapis.com/v2/$case/attachments" ``` Python: ```python import googleapiclient.discovery api_version = "v2" supportApiService = googleapiclient.discovery.build( serviceName="cloudsupport", version=api_version, discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}", ) request = ( supportApiService.cases() .attachments() .list(parent="projects/some-project/cases/43595344") ) print(request.execute()) ```
		/// Cloudsupport_cases_attachments_list v2/{parent}/attachments
		/// </summary>
		/// <param name="parent">Required. The name of the case for which attachments should be listed.</param>
		/// <param name="pageSize">The maximum number of attachments fetched with each request. If not provided, the default is 10. The maximum page size that will be returned is 100.</param>
		/// <param name="pageToken">A token identifying the page of results to return. If unspecified, the first page is retrieved.</param>
		/// <returns>Successful response</returns>
		public async Task<ListAttachmentsResponse> Cloudsupport_cases_attachments_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/attachments&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListAttachmentsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve all cases under a parent, but not its children. For example, listing cases under an organization only returns the cases that are directly parented by that organization. To retrieve cases under an organization and its projects, use `cases.search`. EXAMPLES: cURL: ```shell parent="projects/some-project" curl \ --header "Authorization: Bearer $(gcloud auth print-access-token)" \ "https://cloudsupport.googleapis.com/v2/$parent/cases" ``` Python: ```python import googleapiclient.discovery api_version = "v2" supportApiService = googleapiclient.discovery.build( serviceName="cloudsupport", version=api_version, discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}", ) request = supportApiService.cases().list(parent="projects/some-project") print(request.execute()) ```
		/// Cloudsupport_cases_list v2/{parent}/cases
		/// </summary>
		/// <param name="parent">Required. The name of a parent to list cases under.</param>
		/// <param name="filter">An expression used to filter cases. If it's an empty string, then no filtering happens. Otherwise, the endpoint returns the cases that match the filter. Expressions use the following fields separated by `AND` and specified with `=`: - `state`: Can be `OPEN` or `CLOSED`. - `priority`: Can be `P0`, `P1`, `P2`, `P3`, or `P4`. You can specify multiple values for priority using the `OR` operator. For example, `priority=P1 OR priority=P2`. - `creator.email`: The email address of the case creator. EXAMPLES: - `state=CLOSED` - `state=OPEN AND creator.email="tester@example.com"` - `state=OPEN AND (priority=P0 OR priority=P1)`</param>
		/// <param name="pageSize">The maximum number of cases fetched with each request. Defaults to 10.</param>
		/// <param name="pageToken">A token identifying the page of results to return. If unspecified, the first page is retrieved.</param>
		/// <returns>Successful response</returns>
		public async Task<ListCasesResponse> Cloudsupport_cases_listAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/cases&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListCasesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create a new case and associate it with a parent. It must have the following fields set: `display_name`, `description`, `classification`, and `priority`. If you're just testing the API and don't want to route your case to an agent, set `testCase=true`. EXAMPLES: cURL: ```shell parent="projects/some-project" curl \ --request POST \ --header "Authorization: Bearer $(gcloud auth print-access-token)" \ --header 'Content-Type: application/json' \ --data '{ "display_name": "Test case created by me.", "description": "a random test case, feel free to close", "classification": { "id": "100IK2AKCLHMGRJ9CDGMOCGP8DM6UTB4BT262T31BT1M2T31DHNMENPO6KS36CPJ786L2TBFEHGN6NPI64R3CDHN8880G08I1H3MURR7DHII0GRCDTQM8" }, "time_zone": "-07:00", "subscriber_email_addresses": [ "foo@domain.com", "bar@domain.com" ], "testCase": true, "priority": "P3" }' \ "https://cloudsupport.googleapis.com/v2/$parent/cases" ``` Python: ```python import googleapiclient.discovery api_version = "v2" supportApiService = googleapiclient.discovery.build( serviceName="cloudsupport", version=api_version, discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}", ) request = supportApiService.cases().create( parent="projects/some-project", body={ "displayName": "A Test Case", "description": "This is a test case.", "testCase": True, "priority": "P2", "classification": { "id": "100IK2AKCLHMGRJ9CDGMOCGP8DM6UTB4BT262T31BT1M2T31DHNMENPO6KS36CPJ786L2TBFEHGN6NPI64R3CDHN8880G08I1H3MURR7DHII0GRCDTQM8" }, }, ) print(request.execute()) ```
		/// Cloudsupport_cases_create v2/{parent}/cases
		/// </summary>
		/// <param name="parent">Required. The name of the parent under which the case should be created.</param>
		/// <returns>Successful response</returns>
		public async Task<Case> Cloudsupport_cases_createAsync(string parent, Case requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/cases";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Case>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Search for cases using a query. EXAMPLES: cURL: ```shell parent="projects/some-project" curl \ --header "Authorization: Bearer $(gcloud auth print-access-token)" \ "https://cloudsupport.googleapis.com/v2/$parent/cases:search" ``` Python: ```python import googleapiclient.discovery api_version = "v2" supportApiService = googleapiclient.discovery.build( serviceName="cloudsupport", version=api_version, discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}", ) request = supportApiService.cases().search( parent="projects/some-project", query="state=OPEN" ) print(request.execute()) ```
		/// Cloudsupport_cases_search v2/{parent}/cases:search
		/// </summary>
		/// <param name="parent">The name of the parent resource to search for cases under.</param>
		/// <param name="pageSize">The maximum number of cases fetched with each request. The default page size is 10.</param>
		/// <param name="pageToken">A token identifying the page of results to return. If unspecified, the first page is retrieved.</param>
		/// <param name="query">An expression used to filter cases. Expressions use the following fields separated by `AND` and specified with `=`: - `organization`: An organization name in the form `organizations/`. - `project`: A project name in the form `projects/`. - `state`: Can be `OPEN` or `CLOSED`. - `priority`: Can be `P0`, `P1`, `P2`, `P3`, or `P4`. You can specify multiple values for priority using the `OR` operator. For example, `priority=P1 OR priority=P2`. - `creator.email`: The email address of the case creator. You must specify either `organization` or `project`. To search across `displayName`, `description`, and comments, use a global restriction with no keyword or operator. For example, `"my search"`. To search only cases updated after a certain date, use `update_time` restricted with that particular date, time, and timezone in ISO datetime format. For example, `update_time>"2020-01-01T00:00:00-05:00"`. `update_time` only supports the greater than operator (`>`). Examples: - `organization="organizations/123456789"` - `project="projects/my-project-id"` - `project="projects/123456789"` - `organization="organizations/123456789" AND state=CLOSED` - `project="projects/my-project-id" AND creator.email="tester@example.com"` - `project="projects/my-project-id" AND (priority=P0 OR priority=P1)`</param>
		/// <returns>Successful response</returns>
		public async Task<SearchCasesResponse> Cloudsupport_cases_searchAsync(string parent, int pageSize, string pageToken, string query, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/cases:search&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&query=" + (query==null? "" : System.Uri.EscapeDataString(query));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<SearchCasesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List all the comments associated with a case. EXAMPLES: cURL: ```shell case="projects/some-project/cases/43595344" curl \ --header "Authorization: Bearer $(gcloud auth print-access-token)" \ "https://cloudsupport.googleapis.com/v2/$case/comments" ``` Python: ```python import googleapiclient.discovery api_version = "v2" supportApiService = googleapiclient.discovery.build( serviceName="cloudsupport", version=api_version, discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}", ) request = ( supportApiService.cases() .comments() .list(parent="projects/some-project/cases/43595344") ) print(request.execute()) ```
		/// Cloudsupport_cases_comments_list v2/{parent}/comments
		/// </summary>
		/// <param name="parent">Required. The name of the case for which to list comments.</param>
		/// <param name="pageSize">The maximum number of comments to fetch. Defaults to 10.</param>
		/// <param name="pageToken">A token identifying the page of results to return. If unspecified, the first page is returned.</param>
		/// <returns>Successful response</returns>
		public async Task<ListCommentsResponse> Cloudsupport_cases_comments_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/comments&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListCommentsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add a new comment to a case. The comment must have the following fields set: `body`. EXAMPLES: cURL: ```shell case="projects/some-project/cases/43591344" curl \ --request POST \ --header "Authorization: Bearer $(gcloud auth print-access-token)" \ --header 'Content-Type: application/json' \ --data '{ "body": "This is a test comment." }' \ "https://cloudsupport.googleapis.com/v2/$case/comments" ``` Python: ```python import googleapiclient.discovery api_version = "v2" supportApiService = googleapiclient.discovery.build( serviceName="cloudsupport", version=api_version, discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}", ) request = ( supportApiService.cases() .comments() .create( parent="projects/some-project/cases/43595344", body={"body": "This is a test comment."}, ) ) print(request.execute()) ```
		/// Cloudsupport_cases_comments_create v2/{parent}/comments
		/// </summary>
		/// <param name="parent">Required. The name of the case to which the comment should be added.</param>
		/// <returns>Successful response</returns>
		public async Task<Comment> Cloudsupport_cases_comments_createAsync(string parent, Comment requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/comments";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Comment>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Information about the action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Action
	{
		
		/// <summary>
		/// The actor of a Drive activity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actor")]
		public Actor Actor { get; set; }
		
		/// <summary>
		/// Data describing the type and additional information of an action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public ActionDetail Detail { get; set; }
		
		/// <summary>
		/// Information about the target of activity. For more information on how activity history is shared with users, see [Activity history visibility](https://developers.google.com/drive/activity/v2#activityhistory).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public Target Target { get; set; }
		
		/// <summary>
		/// Information about time ranges.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeRange")]
		public TimeRange TimeRange { get; set; }
		
		/// <summary>
		/// The action occurred at this specific time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public string Timestamp { get; set; }
	}
	
	/// <summary>
	/// The actor of a Drive activity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Actor
	{
		
		/// <summary>
		/// Empty message representing an administrator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="administrator")]
		public Administrator Administrator { get; set; }
		
		/// <summary>
		/// Empty message representing an anonymous user or indicating the authenticated user should be anonymized.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="anonymous")]
		public AnonymousUser Anonymous { get; set; }
		
		/// <summary>
		/// Information about an impersonation, where an admin acts on behalf of an end user. Information about the acting admin is not currently available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="impersonation")]
		public Impersonation Impersonation { get; set; }
		
		/// <summary>
		/// Event triggered by system operations instead of end users.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="system")]
		public SystemEvent System { get; set; }
		
		/// <summary>
		/// Information about an end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user")]
		public User User { get; set; }
	}
	
	/// <summary>
	/// Empty message representing an administrator.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Administrator
	{
	}
	
	/// <summary>
	/// Empty message representing an anonymous user or indicating the authenticated user should be anonymized.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnonymousUser
	{
	}
	
	/// <summary>
	/// Information about an impersonation, where an admin acts on behalf of an end user. Information about the acting admin is not currently available.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Impersonation
	{
		
		/// <summary>
		/// Information about an end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="impersonatedUser")]
		public User ImpersonatedUser { get; set; }
	}
	
	/// <summary>
	/// Information about an end user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class User
	{
		
		/// <summary>
		/// A user whose account has since been deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deletedUser")]
		public DeletedUser DeletedUser { get; set; }
		
		/// <summary>
		/// A known user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="knownUser")]
		public KnownUser KnownUser { get; set; }
		
		/// <summary>
		/// A user about whom nothing is currently known.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unknownUser")]
		public UnknownUser UnknownUser { get; set; }
	}
	
	/// <summary>
	/// A user whose account has since been deleted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeletedUser
	{
	}
	
	/// <summary>
	/// A known user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KnownUser
	{
		
		/// <summary>
		/// True if this is the user making the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="isCurrentUser")]
		public System.Nullable<System.Boolean> IsCurrentUser { get; set; }
		
		/// <summary>
		/// The identifier for this user that can be used with the People API to get more information. The format is `people/ACCOUNT_ID`. See https://developers.google.com/people/.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="personName")]
		public string PersonName { get; set; }
	}
	
	/// <summary>
	/// A user about whom nothing is currently known.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnknownUser
	{
	}
	
	/// <summary>
	/// Event triggered by system operations instead of end users.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SystemEvent
	{
		
		/// <summary>
		/// The type of the system event that may triggered activity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<SystemEventType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SystemEventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER_DELETION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRASH_AUTO_PURGE = 2,
	}
	
	/// <summary>
	/// Data describing the type and additional information of an action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ActionDetail
	{
		
		/// <summary>
		/// Label changes that were made on the Target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="appliedLabelChange")]
		public AppliedLabelChange AppliedLabelChange { get; set; }
		
		/// <summary>
		/// A change about comments on an object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="comment")]
		public Comment Comment { get; set; }
		
		/// <summary>
		/// An object was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="create")]
		public Create Create { get; set; }
		
		/// <summary>
		/// An object was deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delete")]
		public Delete Delete { get; set; }
		
		/// <summary>
		/// A change in the object's data leak prevention status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dlpChange")]
		public DataLeakPreventionChange DlpChange { get; set; }
		
		/// <summary>
		/// An empty message indicating an object was edited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="edit")]
		public Edit Edit { get; set; }
		
		/// <summary>
		/// An object was moved.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="move")]
		public Move Move { get; set; }
		
		/// <summary>
		/// A change of the permission setting on an item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissionChange")]
		public PermissionChange PermissionChange { get; set; }
		
		/// <summary>
		/// Activity in applications other than Drive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reference")]
		public ApplicationReference Reference { get; set; }
		
		/// <summary>
		/// An object was renamed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rename")]
		public Rename Rename { get; set; }
		
		/// <summary>
		/// A deleted object was restored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="restore")]
		public Restore Restore { get; set; }
		
		/// <summary>
		/// Information about settings changes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settingsChange")]
		public SettingsChange SettingsChange { get; set; }
	}
	
	/// <summary>
	/// Label changes that were made on the Target.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppliedLabelChange
	{
		
		/// <summary>
		/// Changes that were made to the Label on the Target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="changes")]
		public AppliedLabelChangeDetail[] Changes { get; set; }
	}
	
	/// <summary>
	/// A change made to a Label on the Target.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppliedLabelChangeDetail
	{
		
		/// <summary>
		/// Field Changes. Only present if `types` contains `LABEL_FIELD_VALUE_CHANGED`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldChanges")]
		public FieldValueChange[] FieldChanges { get; set; }
		
		/// <summary>
		/// The Label name representing the Label that changed. This name always contains the revision of the Label that was used when this Action occurred. The format is `labels/id@revision`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label")]
		public string Label { get; set; }
		
		/// <summary>
		/// The human-readable title of the label that changed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The types of changes made to the Label on the Target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="types")]
		public string[] Types { get; set; }
	}
	
	/// <summary>
	/// Change to a Field value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FieldValueChange
	{
		
		/// <summary>
		/// The human-readable display name for this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// The ID of this field. Field IDs are unique within a Label.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fieldId")]
		public string FieldId { get; set; }
		
		/// <summary>
		/// Contains a value of a Field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newValue")]
		public FieldValue NewValue { get; set; }
		
		/// <summary>
		/// Contains a value of a Field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oldValue")]
		public FieldValue OldValue { get; set; }
	}
	
	/// <summary>
	/// Contains a value of a Field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FieldValue
	{
		
		/// <summary>
		/// Wrapper for Date Field value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date")]
		public Date Date { get; set; }
		
		/// <summary>
		/// Wrapper for Integer Field value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="integer")]
		public Integer Integer { get; set; }
		
		/// <summary>
		/// Wrapper for Selection Field value as combined value/display_name pair for selected choice.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selection")]
		public Selection Selection { get; set; }
		
		/// <summary>
		/// Wrapper for SelectionList Field value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selectionList")]
		public SelectionList SelectionList { get; set; }
		
		/// <summary>
		/// Wrapper for Text Field value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public Text Text { get; set; }
		
		/// <summary>
		/// Wrapper for Text List Field value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="textList")]
		public TextList TextList { get; set; }
		
		/// <summary>
		/// Wrapper for User Field value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user")]
		public SingleUser User { get; set; }
		
		/// <summary>
		/// Wrapper for UserList Field value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="userList")]
		public UserList UserList { get; set; }
	}
	
	/// <summary>
	/// Wrapper for Date Field value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Date
	{
		
		/// <summary>
		/// Date value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Wrapper for Integer Field value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Integer
	{
		
		/// <summary>
		/// Integer value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Wrapper for Selection Field value as combined value/display_name pair for selected choice.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Selection
	{
		
		/// <summary>
		/// Selection value as human-readable display string.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Selection value as Field Choice ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Wrapper for SelectionList Field value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SelectionList
	{
		
		/// <summary>
		/// Selection values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public Selection[] Values { get; set; }
	}
	
	/// <summary>
	/// Wrapper for Text Field value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Text
	{
		
		/// <summary>
		/// Value of Text Field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Wrapper for Text List Field value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TextList
	{
		
		/// <summary>
		/// Text values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public Text[] Values { get; set; }
	}
	
	/// <summary>
	/// Wrapper for User Field value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SingleUser
	{
		
		/// <summary>
		/// User value as email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Wrapper for UserList Field value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserList
	{
		
		/// <summary>
		/// User values.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public SingleUser[] Values { get; set; }
	}
	
	/// <summary>
	/// A change about comments on an object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Comment
	{
		
		/// <summary>
		/// A comment with an assignment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assignment")]
		public Assignment Assignment { get; set; }
		
		/// <summary>
		/// Users who are mentioned in this comment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mentionedUsers")]
		public User[] MentionedUsers { get; set; }
		
		/// <summary>
		/// A regular posted comment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="post")]
		public Post Post { get; set; }
		
		/// <summary>
		/// A suggestion.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="suggestion")]
		public Suggestion Suggestion { get; set; }
	}
	
	/// <summary>
	/// A comment with an assignment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Assignment
	{
		
		/// <summary>
		/// Information about an end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assignedUser")]
		public User AssignedUser { get; set; }
		
		/// <summary>
		/// The sub-type of this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subtype")]
		public System.Nullable<AssignmentSubtype> Subtype { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AssignmentSubtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBTYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPLY_ADDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPLY_DELETED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOLVED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REOPENED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REASSIGNED = 7,
	}
	
	/// <summary>
	/// A regular posted comment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Post
	{
		
		/// <summary>
		/// The sub-type of this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subtype")]
		public System.Nullable<PostSubtype> Subtype { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostSubtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBTYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPLY_ADDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPLY_DELETED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOLVED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REOPENED = 6,
	}
	
	/// <summary>
	/// A suggestion.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Suggestion
	{
		
		/// <summary>
		/// The sub-type of this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subtype")]
		public System.Nullable<SuggestionSubtype> Subtype { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SuggestionSubtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBTYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPLY_ADDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPLY_DELETED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCEPTED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCEPT_DELETED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECT_DELETED = 8,
	}
	
	/// <summary>
	/// An object was created.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Create
	{
		
		/// <summary>
		/// An object was created by copying an existing object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="copy")]
		public Copy Copy { get; set; }
		
		/// <summary>
		/// An object was created from scratch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="new")]
		public New New { get; set; }
		
		/// <summary>
		/// An object was uploaded into Drive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="upload")]
		public Upload Upload { get; set; }
	}
	
	/// <summary>
	/// An object was created by copying an existing object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Copy
	{
		
		/// <summary>
		/// A lightweight reference to the target of activity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originalObject")]
		public TargetReference OriginalObject { get; set; }
	}
	
	/// <summary>
	/// A lightweight reference to the target of activity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TargetReference
	{
		
		/// <summary>
		/// A lightweight reference to a shared drive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drive")]
		public DriveReference Drive { get; set; }
		
		/// <summary>
		/// A lightweight reference to a Drive item, such as a file or folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="driveItem")]
		public DriveItemReference DriveItem { get; set; }
		
		/// <summary>
		/// This item is deprecated; please see `DriveReference` instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="teamDrive")]
		public TeamDriveReference TeamDrive { get; set; }
	}
	
	/// <summary>
	/// A lightweight reference to a shared drive.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DriveReference
	{
		
		/// <summary>
		/// The resource name of the shared drive. The format is `COLLECTION_ID/DRIVE_ID`. Clients should not assume a specific collection ID for this resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The title of the shared drive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// A lightweight reference to a Drive item, such as a file or folder.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DriveItemReference
	{
		
		/// <summary>
		/// A Drive item which is a file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="driveFile")]
		public DriveFile DriveFile { get; set; }
		
		/// <summary>
		/// A Drive item which is a folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="driveFolder")]
		public DriveFolder DriveFolder { get; set; }
		
		/// <summary>
		/// This item is deprecated; please see `DriveFile` instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="file")]
		public File File { get; set; }
		
		/// <summary>
		/// This item is deprecated; please see `DriveFolder` instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder")]
		public Folder Folder { get; set; }
		
		/// <summary>
		/// The target Drive item. The format is `items/ITEM_ID`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The title of the Drive item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// A Drive item which is a file.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DriveFile
	{
	}
	
	/// <summary>
	/// A Drive item which is a folder.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DriveFolder
	{
		
		/// <summary>
		/// The type of Drive folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<DriveFolderType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DriveFolderType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MY_DRIVE_ROOT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHARED_DRIVE_ROOT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD_FOLDER = 3,
	}
	
	/// <summary>
	/// This item is deprecated; please see `DriveFile` instead.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class File
	{
	}
	
	/// <summary>
	/// This item is deprecated; please see `DriveFolder` instead.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Folder
	{
		
		/// <summary>
		/// This field is deprecated; please see `DriveFolder.type` instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<FolderType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FolderType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MY_DRIVE_ROOT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEAM_DRIVE_ROOT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD_FOLDER = 3,
	}
	
	/// <summary>
	/// This item is deprecated; please see `DriveReference` instead.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TeamDriveReference
	{
		
		/// <summary>
		/// This field is deprecated; please see `DriveReference.name` instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// This field is deprecated; please see `DriveReference.title` instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// An object was created from scratch.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class New
	{
	}
	
	/// <summary>
	/// An object was uploaded into Drive.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Upload
	{
	}
	
	/// <summary>
	/// An object was deleted.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Delete
	{
		
		/// <summary>
		/// The type of delete action taken.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<DeleteType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeleteType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRASH = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERMANENT_DELETE = 2,
	}
	
	/// <summary>
	/// A change in the object's data leak prevention status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DataLeakPreventionChange
	{
		
		/// <summary>
		/// The type of Data Leak Prevention (DLP) change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<DataLeakPreventionChangeType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DataLeakPreventionChangeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLAGGED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLEARED = 2,
	}
	
	/// <summary>
	/// An empty message indicating an object was edited.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Edit
	{
	}
	
	/// <summary>
	/// An object was moved.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Move
	{
		
		/// <summary>
		/// The added parent object(s).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addedParents")]
		public TargetReference[] AddedParents { get; set; }
		
		/// <summary>
		/// The removed parent object(s).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="removedParents")]
		public TargetReference[] RemovedParents { get; set; }
	}
	
	/// <summary>
	/// A change of the permission setting on an item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PermissionChange
	{
		
		/// <summary>
		/// The set of permissions added by this change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addedPermissions")]
		public Permission[] AddedPermissions { get; set; }
		
		/// <summary>
		/// The set of permissions removed by this change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="removedPermissions")]
		public Permission[] RemovedPermissions { get; set; }
	}
	
	/// <summary>
	/// The permission setting of an object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Permission
	{
		
		/// <summary>
		/// If true, the item can be discovered (e.g. in the user's "Shared with me" collection) without needing a link to the item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowDiscovery")]
		public System.Nullable<System.Boolean> AllowDiscovery { get; set; }
		
		/// <summary>
		/// Represents any user (including a logged out user).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="anyone")]
		public Anyone Anyone { get; set; }
		
		/// <summary>
		/// Information about a domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public Domain Domain { get; set; }
		
		/// <summary>
		/// Information about a group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="group")]
		public Group Group { get; set; }
		
		/// <summary>
		/// Indicates the [Google Drive permissions role](https://developers.google.com/drive/web/manage-sharing#roles). The role determines a user's ability to read, write, and comment on items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public System.Nullable<PermissionRole> Role { get; set; }
		
		/// <summary>
		/// Information about an end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user")]
		public User User { get; set; }
	}
	
	/// <summary>
	/// Represents any user (including a logged out user).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Anyone
	{
	}
	
	/// <summary>
	/// Information about a domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Domain
	{
		
		/// <summary>
		/// An opaque string used to identify this domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="legacyId")]
		public string LegacyId { get; set; }
		
		/// <summary>
		/// The name of the domain, e.g. `google.com`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Information about a group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Group
	{
		
		/// <summary>
		/// The email address of the group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// The title of the group.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PermissionRole
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OWNER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ORGANIZER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILE_ORGANIZER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EDITOR = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMENTER = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VIEWER = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLISHED_VIEWER = 7,
	}
	
	/// <summary>
	/// Activity in applications other than Drive.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationReference
	{
		
		/// <summary>
		/// The reference type corresponding to this event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<ApplicationReferenceType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ApplicationReferenceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNSPECIFIED_REFERENCE_TYPE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LINK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISCUSS = 2,
	}
	
	/// <summary>
	/// An object was renamed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Rename
	{
		
		/// <summary>
		/// The new title of the drive object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newTitle")]
		public string NewTitle { get; set; }
		
		/// <summary>
		/// The previous title of the drive object.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oldTitle")]
		public string OldTitle { get; set; }
	}
	
	/// <summary>
	/// A deleted object was restored.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Restore
	{
		
		/// <summary>
		/// The type of restore action taken.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<RestoreType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RestoreType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNTRASH = 1,
	}
	
	/// <summary>
	/// Information about settings changes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SettingsChange
	{
		
		/// <summary>
		/// The set of changes made to restrictions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="restrictionChanges")]
		public RestrictionChange[] RestrictionChanges { get; set; }
	}
	
	/// <summary>
	/// Information about restriction policy changes to a feature.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RestrictionChange
	{
		
		/// <summary>
		/// The feature which had a change in restriction policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="feature")]
		public System.Nullable<RestrictionChangeFeature> Feature { get; set; }
		
		/// <summary>
		/// The restriction in place after the change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newRestriction")]
		public System.Nullable<RestrictionChangeNewRestriction> NewRestriction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RestrictionChangeFeature
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FEATURE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHARING_OUTSIDE_DOMAIN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DIRECT_SHARING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ITEM_DUPLICATION = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRIVE_FILE_STREAM = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILE_ORGANIZER_CAN_SHARE_FOLDERS = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RestrictionChangeNewRestriction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESTRICTION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNRESTRICTED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FULLY_RESTRICTED = 2,
	}
	
	/// <summary>
	/// Information about the target of activity. For more information on how activity history is shared with users, see [Activity history visibility](https://developers.google.com/drive/activity/v2#activityhistory).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Target
	{
		
		/// <summary>
		/// Information about a shared drive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drive")]
		public Drive Drive { get; set; }
		
		/// <summary>
		/// A Drive item, such as a file or folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="driveItem")]
		public DriveItem DriveItem { get; set; }
		
		/// <summary>
		/// A comment on a file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileComment")]
		public FileComment FileComment { get; set; }
		
		/// <summary>
		/// This item is deprecated; please see `Drive` instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="teamDrive")]
		public TeamDrive TeamDrive { get; set; }
	}
	
	/// <summary>
	/// Information about a shared drive.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Drive
	{
		
		/// <summary>
		/// The resource name of the shared drive. The format is `COLLECTION_ID/DRIVE_ID`. Clients should not assume a specific collection ID for this resource name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// A Drive item, such as a file or folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="root")]
		public DriveItem Root { get; set; }
		
		/// <summary>
		/// The title of the shared drive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// A Drive item, such as a file or folder.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DriveItem
	{
		
		/// <summary>
		/// A Drive item which is a file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="driveFile")]
		public DriveFile DriveFile { get; set; }
		
		/// <summary>
		/// A Drive item which is a folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="driveFolder")]
		public DriveFolder DriveFolder { get; set; }
		
		/// <summary>
		/// This item is deprecated; please see `DriveFile` instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="file")]
		public File File { get; set; }
		
		/// <summary>
		/// This item is deprecated; please see `DriveFolder` instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder")]
		public Folder Folder { get; set; }
		
		/// <summary>
		/// The MIME type of the Drive item. See https://developers.google.com/drive/v3/web/mime-types.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
		
		/// <summary>
		/// The target Drive item. The format is `items/ITEM_ID`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Information about the owner of a Drive item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="owner")]
		public Owner Owner { get; set; }
		
		/// <summary>
		/// The title of the Drive item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Information about the owner of a Drive item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Owner
	{
		
		/// <summary>
		/// Information about a domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public Domain Domain { get; set; }
		
		/// <summary>
		/// A lightweight reference to a shared drive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drive")]
		public DriveReference Drive { get; set; }
		
		/// <summary>
		/// This item is deprecated; please see `DriveReference` instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="teamDrive")]
		public TeamDriveReference TeamDrive { get; set; }
		
		/// <summary>
		/// Information about an end user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user")]
		public User User { get; set; }
	}
	
	/// <summary>
	/// A comment on a file.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FileComment
	{
		
		/// <summary>
		/// The comment in the discussion thread. This identifier is an opaque string compatible with the Drive API; see https://developers.google.com/drive/v3/reference/comments/get
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="legacyCommentId")]
		public string LegacyCommentId { get; set; }
		
		/// <summary>
		/// The discussion thread to which the comment was added. This identifier is an opaque string compatible with the Drive API and references the first comment in a discussion; see https://developers.google.com/drive/v3/reference/comments/get
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="legacyDiscussionId")]
		public string LegacyDiscussionId { get; set; }
		
		/// <summary>
		/// The link to the discussion thread containing this comment, for example, `https://docs.google.com/DOCUMENT_ID/edit?disco=THREAD_ID`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="linkToDiscussion")]
		public string LinkToDiscussion { get; set; }
		
		/// <summary>
		/// A Drive item, such as a file or folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public DriveItem Parent { get; set; }
	}
	
	/// <summary>
	/// This item is deprecated; please see `Drive` instead.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TeamDrive
	{
		
		/// <summary>
		/// This field is deprecated; please see `Drive.name` instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// A Drive item, such as a file or folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="root")]
		public DriveItem Root { get; set; }
		
		/// <summary>
		/// This field is deprecated; please see `Drive.title` instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// Information about time ranges.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TimeRange
	{
		
		/// <summary>
		/// The end of the time range.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public string EndTime { get; set; }
		
		/// <summary>
		/// The start of the time range.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
	}
	
	/// <summary>
	/// How the individual activities are consolidated. If a set of activities is related they can be consolidated into one combined activity, such as one actor performing the same action on multiple targets, or multiple actors performing the same action on a single target. The strategy defines the rules for which activities are related.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConsolidationStrategy
	{
		
		/// <summary>
		/// A strategy that consolidates activities using the grouping rules from the legacy V1 Activity API. Similar actions occurring within a window of time can be grouped across multiple targets (such as moving a set of files at once) or multiple actors (such as several users editing the same item). Grouping rules for this strategy are specific to each type of action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="legacy")]
		public Legacy Legacy { get; set; }
		
		/// <summary>
		/// A strategy that does no consolidation of individual activities.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="none")]
		public NoConsolidation None { get; set; }
	}
	
	/// <summary>
	/// A strategy that consolidates activities using the grouping rules from the legacy V1 Activity API. Similar actions occurring within a window of time can be grouped across multiple targets (such as moving a set of files at once) or multiple actors (such as several users editing the same item). Grouping rules for this strategy are specific to each type of action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Legacy
	{
	}
	
	/// <summary>
	/// A strategy that does no consolidation of individual activities.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NoConsolidation
	{
	}
	
	/// <summary>
	/// A single Drive activity comprising one or more Actions by one or more Actors on one or more Targets. Some Action groupings occur spontaneously, such as moving an item into a shared folder triggering a permission change. Other groupings of related Actions, such as multiple Actors editing one item or moving multiple files into a new folder, are controlled by the selection of a ConsolidationStrategy in the QueryDriveActivityRequest.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DriveActivity
	{
		
		/// <summary>
		/// Details on all actions in this activity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actions")]
		public Action[] Actions { get; set; }
		
		/// <summary>
		/// All actor(s) responsible for the activity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actors")]
		public Actor[] Actors { get; set; }
		
		/// <summary>
		/// Data describing the type and additional information of an action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primaryActionDetail")]
		public ActionDetail PrimaryActionDetail { get; set; }
		
		/// <summary>
		/// All Google Drive objects this activity is about (e.g. file, folder, drive). This represents the state of the target immediately after the actions occurred.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targets")]
		public Target[] Targets { get; set; }
		
		/// <summary>
		/// Information about time ranges.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeRange")]
		public TimeRange TimeRange { get; set; }
		
		/// <summary>
		/// The activity occurred at this specific time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public string Timestamp { get; set; }
	}
	
	/// <summary>
	/// The request message for querying Drive activity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QueryDriveActivityRequest
	{
		
		/// <summary>
		/// Return activities for this Drive folder, plus all children and descendants. The format is `items/ITEM_ID`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ancestorName")]
		public string AncestorName { get; set; }
		
		/// <summary>
		/// How the individual activities are consolidated. If a set of activities is related they can be consolidated into one combined activity, such as one actor performing the same action on multiple targets, or multiple actors performing the same action on a single target. The strategy defines the rules for which activities are related.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consolidationStrategy")]
		public ConsolidationStrategy ConsolidationStrategy { get; set; }
		
		/// <summary>
		/// The filtering for items returned from this query request. The format of the filter string is a sequence of expressions, joined by an optional "AND", where each expression is of the form "field operator value". Supported fields: - `time`: Uses numerical operators on date values either in terms of milliseconds since Jan 1, 1970 or in RFC 3339 format. Examples: - `time > 1452409200000 AND time <= 1492812924310` - `time >= "2016-01-10T01:02:03-05:00"` - `detail.action_detail_case`: Uses the "has" operator (:) and either a singular value or a list of allowed action types enclosed in parentheses, separated by a space. To exclude a result from the response, prepend a hyphen (`-`) to the beginning of the filter string. Examples: - `detail.action_detail_case:RENAME` - `detail.action_detail_case:(CREATE RESTORE)` - `-detail.action_detail_case:MOVE` 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Return activities for this Drive item. The format is `items/ITEM_ID`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="itemName")]
		public string ItemName { get; set; }
		
		/// <summary>
		/// The minimum number of activities desired in the response; the server attempts to return at least this quantity. The server may also return fewer activities if it has a partial response ready before the request times out. If not set, a default value is used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageSize")]
		public System.Nullable<System.Int32> PageSize { get; set; }
		
		/// <summary>
		/// The token identifies which page of results to return. Set this to the next_page_token value returned from a previous query to obtain the following page of results. If not set, the first page of results is returned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pageToken")]
		public string PageToken { get; set; }
	}
	
	/// <summary>
	/// Response message for querying Drive activity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class QueryDriveActivityResponse
	{
		
		/// <summary>
		/// List of activity requested.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activities")]
		public DriveActivity[] Activities { get; set; }
		
		/// <summary>
		/// Token to retrieve the next page of results, or empty if there are no more results in the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Query past activity in Google Drive.
		/// Driveactivity_activity_query v2/activity:query
		/// </summary>
		/// <returns>Successful response</returns>
		public async Task<QueryDriveActivityResponse> Driveactivity_activity_queryAsync(QueryDriveActivityRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/activity:query";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<QueryDriveActivityResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

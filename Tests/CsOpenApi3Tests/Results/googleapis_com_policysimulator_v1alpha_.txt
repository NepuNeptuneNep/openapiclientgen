//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Similar to PolicySpec but with an extra 'launch' field for launch reference. The PolicySpec here is specific for dry-run/darklaunch.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudOrgpolicyV2AlternatePolicySpec
	{
		
		/// <summary>
		/// Reference to the launch that will be used while audit logging and to control the launch. Should be set only in the alternate policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="launch")]
		public string Launch { get; set; }
		
		/// <summary>
		/// Defines a Google Cloud policy specification which is used to specify constraints for configurations of Google Cloud resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="spec")]
		public GoogleCloudOrgpolicyV2PolicySpec Spec { get; set; }
	}
	
	/// <summary>
	/// Defines a Google Cloud policy specification which is used to specify constraints for configurations of Google Cloud resources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudOrgpolicyV2PolicySpec
	{
		
		/// <summary>
		/// An opaque tag indicating the current version of the policySpec, used for concurrency control. This field is ignored if used in a `CreatePolicy` request. When the policy is returned from either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the current policySpec to use when executing a read-modify-write loop. When the policy is returned from a `GetEffectivePolicy` request, the `etag` will be unset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Determines the inheritance behavior for this policy. If `inherit_from_parent` is true, policy rules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this policy becomes the new root for evaluation. This field can be set only for policies which configure list constraints.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inheritFromParent")]
		public System.Nullable<System.Boolean> InheritFromParent { get; set; }
		
		/// <summary>
		/// Ignores policies set above this resource and restores the `constraint_default` enforcement behavior of the specific constraint at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reset")]
		public System.Nullable<System.Boolean> Reset { get; set; }
		
		/// <summary>
		/// In policies for boolean constraints, the following requirements apply: - There must be one and only one policy rule where condition is unset. - Boolean policy rules with conditions must set `enforced` to the opposite of the policy rule without a condition. - During policy evaluation, policy rules with conditions that are true for a target resource take precedence.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rules")]
		public GoogleCloudOrgpolicyV2PolicySpecPolicyRule[] Rules { get; set; }
		
		/// <summary>
		/// Output only. The time stamp this was previously updated. This represents the last time a call to `CreatePolicy` or `UpdatePolicy` was made for that policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// A rule used to express this policy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudOrgpolicyV2PolicySpecPolicyRule
	{
		
		/// <summary>
		/// Setting this to true means that all values are allowed. This field can be set only in policies for list constraints.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowAll")]
		public System.Nullable<System.Boolean> AllowAll { get; set; }
		
		/// <summary>
		/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public GoogleTypeExpr Condition { get; set; }
		
		/// <summary>
		/// Setting this to true means that all values are denied. This field can be set only in policies for list constraints.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="denyAll")]
		public System.Nullable<System.Boolean> DenyAll { get; set; }
		
		/// <summary>
		/// If `true`, then the policy is enforced. If `false`, then any configuration is acceptable. This field can be set only in policies for boolean constraints.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enforce")]
		public System.Nullable<System.Boolean> Enforce { get; set; }
		
		/// <summary>
		/// A message that holds specific allowed and denied values. This message can define specific values and subtrees of the Resource Manager resource hierarchy (`Organizations`, `Folders`, `Projects`) that are allowed or denied. This is achieved by using the `under:` and optional `is:` prefixes. The `under:` prefix is used to denote resource subtree values. The `is:` prefix is used to denote specific values, and is required only if the value contains a ":". Values prefixed with "is:" are treated the same as values with no prefix. Ancestry subtrees must be in one of the following formats: - `projects/` (for example, `projects/tokyo-rain-123`) - `folders/` (for example, `folders/1234`) - `organizations/` (for example, `organizations/1234`) The `supports_under` field of the associated `Constraint` defines whether ancestry prefixes can be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues Values { get; set; }
	}
	
	/// <summary>
	/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeExpr
	{
		
		/// <summary>
		/// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Textual representation of an expression in Common Expression Language syntax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expression")]
		public string Expression { get; set; }
		
		/// <summary>
		/// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// A message that holds specific allowed and denied values. This message can define specific values and subtrees of the Resource Manager resource hierarchy (`Organizations`, `Folders`, `Projects`) that are allowed or denied. This is achieved by using the `under:` and optional `is:` prefixes. The `under:` prefix is used to denote resource subtree values. The `is:` prefix is used to denote specific values, and is required only if the value contains a ":". Values prefixed with "is:" are treated the same as values with no prefix. Ancestry subtrees must be in one of the following formats: - `projects/` (for example, `projects/tokyo-rain-123`) - `folders/` (for example, `folders/1234`) - `organizations/` (for example, `organizations/1234`) The `supports_under` field of the associated `Constraint` defines whether ancestry prefixes can be used.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues
	{
		
		/// <summary>
		/// List of values allowed at this resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="allowedValues")]
		public string[] AllowedValues { get; set; }
		
		/// <summary>
		/// List of values denied at this resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deniedValues")]
		public string[] DeniedValues { get; set; }
	}
	
	/// <summary>
	/// A custom constraint defined by customers which can *only* be applied to the given resource types and organization. By creating a custom constraint, customers can apply policies of this custom constraint. *Creating a custom constraint itself does NOT apply any policy enforcement*.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudOrgpolicyV2CustomConstraint
	{
		
		/// <summary>
		/// Allow or deny type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="actionType")]
		public System.Nullable<GoogleCloudOrgpolicyV2CustomConstraintActionType> ActionType { get; set; }
		
		/// <summary>
		/// Org policy condition/expression. For example: `resource.instanceName.matches("[production|test]_.*_(\d)+")` or, `resource.management.auto_upgrade == true` The max length of the condition is 1000 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public string Condition { get; set; }
		
		/// <summary>
		/// Detailed information about this custom policy constraint. The max length of the description is 2000 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// One line display name for the UI. The max length of the display_name is 200 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// All the operations being applied for this constraint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="methodTypes")]
		public string[] MethodTypes { get; set; }
		
		/// <summary>
		/// Immutable. Name of the constraint. This is unique within the organization. Format of the name should be * `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example: `organizations/123/customConstraints/custom.createOnlyE2TypeVms` The max length is 70 characters and the minimum length is 1. Note that the prefix `organizations/{organization_id}/customConstraints/` is not counted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Immutable. The resource instance type on which this policy applies. Format will be of the form : `/` Example: * `compute.googleapis.com/Instance`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceTypes")]
		public string[] ResourceTypes { get; set; }
		
		/// <summary>
		/// Output only. The last time this custom constraint was updated. This represents the last time that the `CreateCustomConstraint` or `UpdateCustomConstraint` RPC was called
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudOrgpolicyV2CustomConstraintActionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALLOW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DENY = 2,
	}
	
	/// <summary>
	/// Defines an organization policy which is used to specify constraints for configurations of Google Cloud resources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudOrgpolicyV2Policy
	{
		
		/// <summary>
		/// Similar to PolicySpec but with an extra 'launch' field for launch reference. The PolicySpec here is specific for dry-run/darklaunch.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alternate")]
		public GoogleCloudOrgpolicyV2AlternatePolicySpec Alternate { get; set; }
		
		/// <summary>
		/// Defines a Google Cloud policy specification which is used to specify constraints for configurations of Google Cloud resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dryRunSpec")]
		public GoogleCloudOrgpolicyV2PolicySpec DryRunSpec { get; set; }
		
		/// <summary>
		/// Optional. An opaque tag indicating the current state of the policy, used for concurrency control. This 'etag' is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Immutable. The resource name of the policy. Must be one of the following forms, where `constraint_name` is the name of the constraint which this policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, `projects/123/policies/compute.disableSerialPortAccess`. Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Defines a Google Cloud policy specification which is used to specify constraints for configurations of Google Cloud resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="spec")]
		public GoogleCloudOrgpolicyV2PolicySpec Spec { get; set; }
	}
	
	/// <summary>
	/// A resource describing a `Replay`, or simulation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1Replay
	{
		
		/// <summary>
		/// The configuration used for a Replay.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="config")]
		public GoogleCloudPolicysimulatorV1ReplayConfig Config { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the `Replay`, which has the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`, where `{resource-id}` is the ID of the project, folder, or organization that owns the Replay. Example: `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Summary statistics about the replayed log entries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resultsSummary")]
		public GoogleCloudPolicysimulatorV1ReplayResultsSummary ResultsSummary { get; set; }
		
		/// <summary>
		/// Output only. The current state of the `Replay`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudPolicysimulatorV1ReplayState> State { get; set; }
	}
	
	/// <summary>
	/// The configuration used for a Replay.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1ReplayConfig
	{
		
		/// <summary>
		/// The logs to use as input for the Replay.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logSource")]
		public System.Nullable<GoogleCloudPolicysimulatorV1ReplayConfigLogSource> LogSource { get; set; }
		
		/// <summary>
		/// A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policyOverlay")]
		public System.Collections.Generic.Dictionary<string, GoogleIamV1Policy> PolicyOverlay { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudPolicysimulatorV1ReplayConfigLogSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOG_SOURCE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECENT_ACCESSES = 1,
	}
	
	/// <summary>
	/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleIamV1Policy
	{
		
		/// <summary>
		/// Specifies cloud audit logging configuration for this policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditConfigs")]
		public GoogleIamV1AuditConfig[] AuditConfigs { get; set; }
		
		/// <summary>
		/// Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindings")]
		public GoogleIamV1Binding[] Bindings { get; set; }
		
		/// <summary>
		/// `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	/// <summary>
	/// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleIamV1AuditConfig
	{
		
		/// <summary>
		/// The configuration for logging of each type of permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditLogConfigs")]
		public GoogleIamV1AuditLogConfig[] AuditLogConfigs { get; set; }
		
		/// <summary>
		/// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleIamV1AuditLogConfig
	{
		
		/// <summary>
		/// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exemptedMembers")]
		public string[] ExemptedMembers { get; set; }
		
		/// <summary>
		/// The log type that this config enables.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logType")]
		public System.Nullable<GoogleIamV1AuditLogConfigLogType> LogType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleIamV1AuditLogConfigLogType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOG_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADMIN_READ = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_WRITE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_READ = 3,
	}
	
	/// <summary>
	/// Associates `members`, or principals, with a `role`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleIamV1Binding
	{
		
		/// <summary>
		/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public GoogleTypeExpr Condition { get; set; }
		
		/// <summary>
		/// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public string[] Members { get; set; }
		
		/// <summary>
		/// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
	}
	
	/// <summary>
	/// Summary statistics about the replayed log entries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1ReplayResultsSummary
	{
		
		/// <summary>
		/// The number of replayed log entries with a difference between baseline and simulated policies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="differenceCount")]
		public System.Nullable<System.Int32> DifferenceCount { get; set; }
		
		/// <summary>
		/// The number of log entries that could not be replayed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorCount")]
		public System.Nullable<System.Int32> ErrorCount { get; set; }
		
		/// <summary>
		/// The total number of log entries replayed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logCount")]
		public System.Nullable<System.Int32> LogCount { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newestDate")]
		public GoogleTypeDate NewestDate { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oldestDate")]
		public GoogleTypeDate OldestDate { get; set; }
		
		/// <summary>
		/// The number of replayed log entries with no difference between baseline and simulated policies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unchangedCount")]
		public System.Nullable<System.Int32> UnchangedCount { get; set; }
	}
	
	/// <summary>
	/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeDate
	{
		
		/// <summary>
		/// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="day")]
		public System.Nullable<System.Int32> Day { get; set; }
		
		/// <summary>
		/// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="month")]
		public System.Nullable<System.Int32> Month { get; set; }
		
		/// <summary>
		/// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="year")]
		public System.Nullable<System.Int32> Year { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudPolicysimulatorV1ReplayState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCEEDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 4,
	}
	
	/// <summary>
	/// Metadata about a Replay operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1ReplayOperationMetadata
	{
		
		/// <summary>
		/// Time when the request was received.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
	}
	
	/// <summary>
	/// A summary and comparison of the principal's access under the current (baseline) policies and the proposed (simulated) policies for a single access tuple.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaAccessStateDiff
	{
		
		/// <summary>
		/// How the principal's access, specified in the AccessState field, changed between the current (baseline) policies and proposed (simulated) policies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accessChange")]
		public System.Nullable<GoogleCloudPolicysimulatorV1alphaAccessStateDiffAccessChange> AccessChange { get; set; }
		
		/// <summary>
		/// Details about how a set of policies, listed in ExplainedPolicy, resulted in a certain AccessState when replaying an access tuple.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="baseline")]
		public GoogleCloudPolicysimulatorV1alphaExplainedAccess Baseline { get; set; }
		
		/// <summary>
		/// Details about how a set of policies, listed in ExplainedPolicy, resulted in a certain AccessState when replaying an access tuple.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="simulated")]
		public GoogleCloudPolicysimulatorV1alphaExplainedAccess Simulated { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudPolicysimulatorV1alphaAccessStateDiffAccessChange
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCESS_CHANGE_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_CHANGE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN_CHANGE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCESS_REVOKED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCESS_GAINED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCESS_MAYBE_REVOKED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCESS_MAYBE_GAINED = 6,
	}
	
	/// <summary>
	/// Details about how a set of policies, listed in ExplainedPolicy, resulted in a certain AccessState when replaying an access tuple.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaExplainedAccess
	{
		
		/// <summary>
		/// Whether the principal in the access tuple has permission to access the resource in the access tuple under the given policies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accessState")]
		public System.Nullable<GoogleCloudPolicysimulatorV1alphaExplainedAccessAccessState> AccessState { get; set; }
		
		/// <summary>
		/// If the AccessState is `UNKNOWN`, this field contains a list of errors explaining why the result is `UNKNOWN`. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public GoogleRpcStatus[] Errors { get; set; }
		
		/// <summary>
		/// If the AccessState is `UNKNOWN`, this field contains the policies that led to that result. If the `AccessState` is `GRANTED` or `NOT_GRANTED`, this field is omitted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policies")]
		public GoogleCloudPolicysimulatorV1alphaExplainedPolicy[] Policies { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudPolicysimulatorV1alphaExplainedAccessAccessState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCESS_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GRANTED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_GRANTED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN_CONDITIONAL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN_INFO_DENIED = 4,
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleRpcStatus
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// Details about how a specific IAM Policy contributed to the access check.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaExplainedPolicy
	{
		
		/// <summary>
		/// Indicates whether _this policy_ provides the specified permission to the specified principal for the specified resource. This field does _not_ indicate whether the principal actually has the permission for the resource. There might be another policy that overrides this policy. To determine whether the principal actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="access")]
		public GoogleCloudPolicysimulatorV1alphaExplainedAccessAccessState Access { get; set; }
		
		/// <summary>
		/// Details about how each binding in the policy affects the principal's ability, or inability, to use the permission for the resource. If the user who created the Replay does not have access to the policy, this field is omitted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindingExplanations")]
		public GoogleCloudPolicysimulatorV1alphaBindingExplanation[] BindingExplanations { get; set; }
		
		/// <summary>
		/// The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. If the user who created the Replay does not have access to the policy, this field is omitted. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fullResourceName")]
		public string FullResourceName { get; set; }
		
		/// <summary>
		/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policy")]
		public GoogleIamV1Policy Policy { get; set; }
		
		/// <summary>
		/// The relevance of this policy to the overall determination in the TroubleshootIamPolicyResponse. If the user who created the Replay does not have access to the policy, this field is omitted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relevance")]
		public GoogleCloudPolicysimulatorV1alphaBindingExplanationAnnotatedMembershipRelevance Relevance { get; set; }
	}
	
	/// <summary>
	/// Details about how a binding in a policy affects a principal's ability to use a permission.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaBindingExplanation
	{
		
		/// <summary>
		/// Required. Indicates whether _this binding_ provides the specified permission to the specified principal for the specified resource. This field does _not_ indicate whether the principal actually has the permission for the resource. There might be another binding that overrides this binding. To determine whether the principal actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="access")]
		public GoogleCloudPolicysimulatorV1alphaExplainedAccessAccessState Access { get; set; }
		
		/// <summary>
		/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public GoogleTypeExpr Condition { get; set; }
		
		/// <summary>
		/// Indicates whether each principal in the binding includes the principal specified in the request, either directly or indirectly. Each key identifies a principal in the binding, and each value indicates whether the principal in the binding includes the principal in the request. For example, suppose that a binding includes the following principals: * `user:alice@example.com` * `group:product-eng@example.com` The principal in the replayed access tuple is `user:bob@example.com`. This user is a principal of the group `group:product-eng@example.com`. For the first principal in the binding, the key is `user:alice@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_NOT_INCLUDED`. For the second principal in the binding, the key is `group:product-eng@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_INCLUDED`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="memberships")]
		public System.Collections.Generic.Dictionary<string, GoogleCloudPolicysimulatorV1alphaBindingExplanationAnnotatedMembership> Memberships { get; set; }
		
		/// <summary>
		/// The relevance of this binding to the overall determination for the entire policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relevance")]
		public GoogleCloudPolicysimulatorV1alphaBindingExplanationAnnotatedMembershipRelevance Relevance { get; set; }
		
		/// <summary>
		/// The role that this binding grants. For example, `roles/compute.serviceAgent`. For a complete list of predefined IAM roles, as well as the permissions in each role, see https://cloud.google.com/iam/help/roles/reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
		
		/// <summary>
		/// Indicates whether the role granted by this binding contains the specified permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rolePermission")]
		public System.Nullable<GoogleCloudPolicysimulatorV1alphaBindingExplanationRolePermission> RolePermission { get; set; }
		
		/// <summary>
		/// The relevance of the permission's existence, or nonexistence, in the role to the overall determination for the entire policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rolePermissionRelevance")]
		public GoogleCloudPolicysimulatorV1alphaBindingExplanationAnnotatedMembershipRelevance RolePermissionRelevance { get; set; }
	}
	
	/// <summary>
	/// Details about whether the binding includes the principal.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaBindingExplanationAnnotatedMembership
	{
		
		/// <summary>
		/// Indicates whether the binding includes the principal.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="membership")]
		public System.Nullable<GoogleCloudPolicysimulatorV1alphaBindingExplanationAnnotatedMembershipMembership> Membership { get; set; }
		
		/// <summary>
		/// The relevance of the principal's status to the overall determination for the binding.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relevance")]
		public System.Nullable<GoogleCloudPolicysimulatorV1alphaBindingExplanationAnnotatedMembershipRelevance> Relevance { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudPolicysimulatorV1alphaBindingExplanationAnnotatedMembershipMembership
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEMBERSHIP_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEMBERSHIP_INCLUDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEMBERSHIP_NOT_INCLUDED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEMBERSHIP_UNKNOWN_INFO_DENIED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEMBERSHIP_UNKNOWN_UNSUPPORTED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudPolicysimulatorV1alphaBindingExplanationAnnotatedMembershipRelevance
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HEURISTIC_RELEVANCE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NORMAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudPolicysimulatorV1alphaBindingExplanationRolePermission
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLE_PERMISSION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLE_PERMISSION_INCLUDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLE_PERMISSION_NOT_INCLUDED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLE_PERMISSION_UNKNOWN_INFO_DENIED = 3,
	}
	
	/// <summary>
	/// Information about the principal, resource, and permission to check.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaAccessTuple
	{
		
		/// <summary>
		/// Required. The full resource name that identifies the resource. For example, `//compute.googleapis.com/projects/my-project/zones/us-central1-a/instances/my-instance`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fullResourceName")]
		public string FullResourceName { get; set; }
		
		/// <summary>
		/// Required. The IAM permission to check for the specified principal and resource. For a complete list of IAM permissions, see https://cloud.google.com/iam/help/permissions/reference. For a complete list of predefined IAM roles and the permissions in each role, see https://cloud.google.com/iam/help/roles/reference.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permission")]
		public string Permission { get; set; }
		
		/// <summary>
		/// Required. The principal whose access you want to check, in the form of the email address that represents that principal. For example, `alice@example.com` or `my-service-account@my-project.iam.gserviceaccount.com`. The principal must be a Google Account or a service account. Other types of principals are not supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="principal")]
		public string Principal { get; set; }
	}
	
	/// <summary>
	/// GenerateOrgPolicyViolationsPreviewOperationMetadata is metadata about an OrgPolicyViolationsPreview generations operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadata
	{
		
		/// <summary>
		/// Time when the request was received.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestTime")]
		public string RequestTime { get; set; }
		
		/// <summary>
		/// Total number of resources that need scanning. Should equal resource_scanned + resources_pending
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourcesFound")]
		public System.Nullable<System.Int32> ResourcesFound { get; set; }
		
		/// <summary>
		/// Number of resources still to scan.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourcesPending")]
		public System.Nullable<System.Int32> ResourcesPending { get; set; }
		
		/// <summary>
		/// Number of resources already scanned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourcesScanned")]
		public System.Nullable<System.Int32> ResourcesScanned { get; set; }
		
		/// <summary>
		/// Time when the request started processing, i.e. when the state was set to RUNNING.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// The current state of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadataState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadataState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREVIEW_STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREVIEW_PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREVIEW_RUNNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREVIEW_SUCCEEDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREVIEW_FAILED = 4,
	}
	
	/// <summary>
	/// ListOrgPolicyViolationsPreviewsResponse is the response message for OrgPolicyViolationsPreviewService.ListOrgPolicyViolationsPreviews.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaListOrgPolicyViolationsPreviewsResponse
	{
		
		/// <summary>
		/// A token that you can use to retrieve the next page of results. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The list of OrgPolicyViolationsPreview
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orgPolicyViolationsPreviews")]
		public GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview[] OrgPolicyViolationsPreviews { get; set; }
	}
	
	/// <summary>
	/// OrgPolicyViolationsPreview is a resource providing a preview of the violations that will exist if an OrgPolicy change is made. The list of violations are modeled as child resources and retrieved via a ListOrgPolicyViolations API call. There are potentially more OrgPolicyViolations than could fit in an embedded field. Thus, the use of a child resource instead of a field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview
	{
		
		/// <summary>
		/// Output only. Time when this `OrgPolicyViolationsPreview` was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The names of the constraints against which all `OrgPolicyViolations` were evaluated. If `OrgPolicyOverlay` only contains `PolicyOverlay` then it contains the name of the configured custom constraint, applicable to the specified policies. Otherwise it contains the name of the constraint specified in `CustomConstraintOverlay`. Format: `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example: `organizations/123/customConstraints/custom.createOnlyE2TypeVms`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customConstraints")]
		public string[] CustomConstraints { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the `OrgPolicyViolationsPreview`. It has the following format: `organizations/{organization}/locations/{location}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreview}` Example: `organizations/my-example-org/locations/global/orgPolicyViolationsPreviews/506a5f7f`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The proposed changes to OrgPolicy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="overlay")]
		public GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay Overlay { get; set; }
		
		/// <summary>
		/// A summary of the state of all resources scanned for compliance with the changed OrgPolicy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceCounts")]
		public GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts ResourceCounts { get; set; }
		
		/// <summary>
		/// Output only. The state of the `OrgPolicyViolationsPreview`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadataState State { get; set; }
		
		/// <summary>
		/// Output only. The number of OrgPolicyViolations in this `OrgPolicyViolationsPreview`. This count may differ from `resource_summary.noncompliant_count` because each OrgPolicyViolation is specific to a resource **and** constraint. If there are multiple constraints being evaluated (i.e. multiple policies in the overlay), a single resource may violate multiple constraints.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="violationsCount")]
		public System.Nullable<System.Int32> ViolationsCount { get; set; }
	}
	
	/// <summary>
	/// The proposed changes to OrgPolicy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlay
	{
		
		/// <summary>
		/// The OrgPolicy CustomConstraint changes to preview violations for. Any existing CustomConstraints with the same name will be overridden in the simulation. That is, violations will be determined as if all custom constraints in the overlay were instantiated. Only a single custom_constraint is supported in the overlay at a time. For evaluating multiple constraints, multiple `GenerateOrgPolicyViolationsPreview` requests are made, where each request evaluates a single constraint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customConstraints")]
		public GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayCustomConstraintOverlay[] CustomConstraints { get; set; }
		
		/// <summary>
		/// The OrgPolicy changes to preview violations for. Any existing OrgPolicies with the same name will be overridden in the simulation. That is, violations will be determined as if all policies in the overlay were created or updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policies")]
		public GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayPolicyOverlay[] Policies { get; set; }
	}
	
	/// <summary>
	/// A change to an OrgPolicy custom constraint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayCustomConstraintOverlay
	{
		
		/// <summary>
		/// A custom constraint defined by customers which can *only* be applied to the given resource types and organization. By creating a custom constraint, customers can apply policies of this custom constraint. *Creating a custom constraint itself does NOT apply any policy enforcement*.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customConstraint")]
		public GoogleCloudOrgpolicyV2CustomConstraint CustomConstraint { get; set; }
		
		/// <summary>
		/// Resource the constraint is attached to. Example: "organization/987654"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customConstraintParent")]
		public string CustomConstraintParent { get; set; }
	}
	
	/// <summary>
	/// A change to an OrgPolicy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaOrgPolicyOverlayPolicyOverlay
	{
		
		/// <summary>
		/// Defines an organization policy which is used to specify constraints for configurations of Google Cloud resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policy")]
		public GoogleCloudOrgpolicyV2Policy Policy { get; set; }
		
		/// <summary>
		/// The parent of the policy we are attaching to. Example: "projects/123456"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policyParent")]
		public string PolicyParent { get; set; }
	}
	
	/// <summary>
	/// A summary of the state of all resources scanned for compliance with the changed OrgPolicy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreviewResourceCounts
	{
		
		/// <summary>
		/// Number of scanned resources with zero violations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="compliant")]
		public System.Nullable<System.Int32> Compliant { get; set; }
		
		/// <summary>
		/// Number of resources that returned an error when scanned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public System.Nullable<System.Int32> Errors { get; set; }
		
		/// <summary>
		/// Number of scanned resources with at least one violation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="noncompliant")]
		public System.Nullable<System.Int32> Noncompliant { get; set; }
		
		/// <summary>
		/// Number of resources checked for compliance. Must equal: unenforced + noncompliant + compliant + error
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scanned")]
		public System.Nullable<System.Int32> Scanned { get; set; }
		
		/// <summary>
		/// Number of resources where the constraint was not enforced, i.e. the Policy set `enforced: false` for that resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unenforced")]
		public System.Nullable<System.Int32> Unenforced { get; set; }
	}
	
	/// <summary>
	/// ListOrgPolicyViolationsResponse is the response message for OrgPolicyViolationsPreviewService.ListOrgPolicyViolations
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaListOrgPolicyViolationsResponse
	{
		
		/// <summary>
		/// A token that you can use to retrieve the next page of results. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The list of OrgPolicyViolations
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orgPolicyViolations")]
		public GoogleCloudPolicysimulatorV1alphaOrgPolicyViolation[] OrgPolicyViolations { get; set; }
	}
	
	/// <summary>
	/// OrgPolicyViolation is a resource representing a single resource violating a single OrgPolicy constraint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaOrgPolicyViolation
	{
		
		/// <summary>
		/// A custom constraint defined by customers which can *only* be applied to the given resource types and organization. By creating a custom constraint, customers can apply policies of this custom constraint. *Creating a custom constraint itself does NOT apply any policy enforcement*.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customConstraint")]
		public GoogleCloudOrgpolicyV2CustomConstraint CustomConstraint { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// The name of the `OrgPolicyViolation`. Example: organizations/my-example-org/locations/global/orgPolicyViolationsPreviews/506a5f7f/orgPolicyViolations/38ce`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// ResourceContext provides the context we know about a resource. It is similar in concept to google.cloud.asset.v1.Resource, but focuses on the information specifically used by Simulator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public GoogleCloudPolicysimulatorV1alphaResourceContext Resource { get; set; }
	}
	
	/// <summary>
	/// ResourceContext provides the context we know about a resource. It is similar in concept to google.cloud.asset.v1.Resource, but focuses on the information specifically used by Simulator.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaResourceContext
	{
		
		/// <summary>
		/// The ancestry path of the resource in Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), represented as a list of relative resource names. An ancestry path starts with the closest ancestor in the hierarchy and ends at root. If the resource is a project, folder, or organization, the ancestry path starts from the resource itself. Example: `["projects/123456789", "folders/5432", "organizations/1234"]`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ancestors")]
		public string[] Ancestors { get; set; }
		
		/// <summary>
		/// The asset type of the resource as defined by CAIS. Example: `compute.googleapis.com/Firewall` See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assetType")]
		public string AssetType { get; set; }
		
		/// <summary>
		/// The full name of the resource. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1` See [Resource names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
	}
	
	/// <summary>
	/// Response message for Simulator.ListReplayResults.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaListReplayResultsResponse
	{
		
		/// <summary>
		/// A token that you can use to retrieve the next page of ReplayResult objects. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The results of running a Replay.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="replayResults")]
		public GoogleCloudPolicysimulatorV1alphaReplayResult[] ReplayResults { get; set; }
	}
	
	/// <summary>
	/// The result of replaying a single access tuple against a simulated state.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaReplayResult
	{
		
		/// <summary>
		/// Information about the principal, resource, and permission to check.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accessTuple")]
		public GoogleCloudPolicysimulatorV1alphaAccessTuple AccessTuple { get; set; }
		
		/// <summary>
		/// The difference between the results of evaluating an access tuple under the current (baseline) policies and under the proposed (simulated) policies. This difference explains how a principal's access could change if the proposed policies were applied.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="diff")]
		public GoogleCloudPolicysimulatorV1alphaReplayDiff Diff { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastSeenDate")]
		public GoogleTypeDate LastSeenDate { get; set; }
		
		/// <summary>
		/// The resource name of the `ReplayResult`, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}/results/{replay-result-id}`, where `{resource-id}` is the ID of the project, folder, or organization that owns the Replay. Example: `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36/results/1234`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The Replay that the access tuple was included in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
	}
	
	/// <summary>
	/// The difference between the results of evaluating an access tuple under the current (baseline) policies and under the proposed (simulated) policies. This difference explains how a principal's access could change if the proposed policies were applied.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaReplayDiff
	{
		
		/// <summary>
		/// A summary and comparison of the principal's access under the current (baseline) policies and the proposed (simulated) policies for a single access tuple.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="accessDiff")]
		public GoogleCloudPolicysimulatorV1alphaAccessStateDiff AccessDiff { get; set; }
	}
	
	/// <summary>
	/// Response message for Simulator.ListReplays.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaListReplaysResponse
	{
		
		/// <summary>
		/// A token that you can use to retrieve the next page of results. If this field is omitted, there are no subsequent pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The list of Replay objects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="replays")]
		public GoogleCloudPolicysimulatorV1alphaReplay[] Replays { get; set; }
	}
	
	/// <summary>
	/// A resource describing a `Replay`, or simulation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaReplay
	{
		
		/// <summary>
		/// The configuration used for a Replay.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="config")]
		public GoogleCloudPolicysimulatorV1alphaReplayConfig Config { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the `Replay`, which has the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}`, where `{resource-id}` is the ID of the project, folder, or organization that owns the Replay. Example: `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Summary statistics about the replayed log entries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resultsSummary")]
		public GoogleCloudPolicysimulatorV1alphaReplayResultsSummary ResultsSummary { get; set; }
		
		/// <summary>
		/// Output only. The current state of the `Replay`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudPolicysimulatorV1ReplayState State { get; set; }
	}
	
	/// <summary>
	/// The configuration used for a Replay.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaReplayConfig
	{
		
		/// <summary>
		/// The logs to use as input for the Replay.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logSource")]
		public GoogleCloudPolicysimulatorV1ReplayConfigLogSource LogSource { get; set; }
		
		/// <summary>
		/// A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policyOverlay")]
		public System.Collections.Generic.Dictionary<string, GoogleIamV1Policy> PolicyOverlay { get; set; }
	}
	
	/// <summary>
	/// Summary statistics about the replayed log entries.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1alphaReplayResultsSummary
	{
		
		/// <summary>
		/// The number of replayed log entries with a difference between baseline and simulated policies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="differenceCount")]
		public System.Nullable<System.Int32> DifferenceCount { get; set; }
		
		/// <summary>
		/// The number of log entries that could not be replayed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorCount")]
		public System.Nullable<System.Int32> ErrorCount { get; set; }
		
		/// <summary>
		/// The total number of log entries replayed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logCount")]
		public System.Nullable<System.Int32> LogCount { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="newestDate")]
		public GoogleTypeDate NewestDate { get; set; }
		
		/// <summary>
		/// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="oldestDate")]
		public GoogleTypeDate OldestDate { get; set; }
		
		/// <summary>
		/// The number of replayed log entries with no difference between baseline and simulated policies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unchangedCount")]
		public System.Nullable<System.Int32> UnchangedCount { get; set; }
	}
	
	/// <summary>
	/// GenerateOrgPolicyViolationsPreviewOperationMetadata is metadata about an OrgPolicyViolationsPreview generations operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1betaGenerateOrgPolicyViolationsPreviewOperationMetadata
	{
		
		/// <summary>
		/// Time when the request was received.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="requestTime")]
		public string RequestTime { get; set; }
		
		/// <summary>
		/// Total number of resources that need scanning. Should equal resource_scanned + resources_pending
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourcesFound")]
		public System.Nullable<System.Int32> ResourcesFound { get; set; }
		
		/// <summary>
		/// Number of resources still to scan.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourcesPending")]
		public System.Nullable<System.Int32> ResourcesPending { get; set; }
		
		/// <summary>
		/// Number of resources already scanned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourcesScanned")]
		public System.Nullable<System.Int32> ResourcesScanned { get; set; }
		
		/// <summary>
		/// Time when the request started processing, i.e. when the state was set to RUNNING.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// The current state of the operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadataState State { get; set; }
	}
	
	/// <summary>
	/// The proposed changes to OrgPolicy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1betaOrgPolicyOverlay
	{
		
		/// <summary>
		/// The OrgPolicy CustomConstraint changes to preview violations for. Any existing CustomConstraints with the same name will be overridden in the simulation. That is, violations will be determined as if all custom constraints in the overlay were instantiated. Only a single custom_constraint is supported in the overlay at a time. For evaluating multiple constraints, multiple `GenerateOrgPolicyViolationsPreview` requests are made, where each request evaluates a single constraint.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customConstraints")]
		public GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayCustomConstraintOverlay[] CustomConstraints { get; set; }
		
		/// <summary>
		/// The OrgPolicy changes to preview violations for. Any existing OrgPolicies with the same name will be overridden in the simulation. That is, violations will be determined as if all policies in the overlay were created or updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policies")]
		public GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayPolicyOverlay[] Policies { get; set; }
	}
	
	/// <summary>
	/// A change to an OrgPolicy custom constraint.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayCustomConstraintOverlay
	{
		
		/// <summary>
		/// A custom constraint defined by customers which can *only* be applied to the given resource types and organization. By creating a custom constraint, customers can apply policies of this custom constraint. *Creating a custom constraint itself does NOT apply any policy enforcement*.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customConstraint")]
		public GoogleCloudOrgpolicyV2CustomConstraint CustomConstraint { get; set; }
		
		/// <summary>
		/// Resource the constraint is attached to. Example: "organization/987654"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customConstraintParent")]
		public string CustomConstraintParent { get; set; }
	}
	
	/// <summary>
	/// A change to an OrgPolicy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1betaOrgPolicyOverlayPolicyOverlay
	{
		
		/// <summary>
		/// Defines an organization policy which is used to specify constraints for configurations of Google Cloud resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policy")]
		public GoogleCloudOrgpolicyV2Policy Policy { get; set; }
		
		/// <summary>
		/// The parent of the policy we are attaching to. Example: "projects/123456"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policyParent")]
		public string PolicyParent { get; set; }
	}
	
	/// <summary>
	/// OrgPolicyViolationsPreview is a resource providing a preview of the violations that will exist if an OrgPolicy change is made. The list of violations are modeled as child resources and retrieved via a ListOrgPolicyViolations API call. There are potentially more OrgPolicyViolations than could fit in an embedded field. Thus, the use of a child resource instead of a field.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreview
	{
		
		/// <summary>
		/// Output only. Time when this `OrgPolicyViolationsPreview` was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The names of the constraints against which all `OrgPolicyViolations` were evaluated. If `OrgPolicyOverlay` only contains `PolicyOverlay` then it contains the name of the configured custom constraint, applicable to the specified policies. Otherwise it contains the name of the constraint specified in `CustomConstraintOverlay`. Format: `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example: `organizations/123/customConstraints/custom.createOnlyE2TypeVms`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customConstraints")]
		public string[] CustomConstraints { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the `OrgPolicyViolationsPreview`. It has the following format: `organizations/{organization}/locations/{location}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreview}` Example: `organizations/my-example-org/locations/global/orgPolicyViolationsPreviews/506a5f7f`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The proposed changes to OrgPolicy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="overlay")]
		public GoogleCloudPolicysimulatorV1betaOrgPolicyOverlay Overlay { get; set; }
		
		/// <summary>
		/// A summary of the state of all resources scanned for compliance with the changed OrgPolicy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceCounts")]
		public GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreviewResourceCounts ResourceCounts { get; set; }
		
		/// <summary>
		/// Output only. The state of the `OrgPolicyViolationsPreview`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public GoogleCloudPolicysimulatorV1alphaGenerateOrgPolicyViolationsPreviewOperationMetadataState State { get; set; }
		
		/// <summary>
		/// Output only. The number of OrgPolicyViolations in this `OrgPolicyViolationsPreview`. This count may differ from `resource_summary.noncompliant_count` because each OrgPolicyViolation is specific to a resource **and** constraint. If there are multiple constraints being evaluated (i.e. multiple policies in the overlay), a single resource may violate multiple constraints.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="violationsCount")]
		public System.Nullable<System.Int32> ViolationsCount { get; set; }
	}
	
	/// <summary>
	/// A summary of the state of all resources scanned for compliance with the changed OrgPolicy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudPolicysimulatorV1betaOrgPolicyViolationsPreviewResourceCounts
	{
		
		/// <summary>
		/// Number of scanned resources with zero violations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="compliant")]
		public System.Nullable<System.Int32> Compliant { get; set; }
		
		/// <summary>
		/// Number of resources that returned an error when scanned.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public System.Nullable<System.Int32> Errors { get; set; }
		
		/// <summary>
		/// Number of scanned resources with at least one violation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="noncompliant")]
		public System.Nullable<System.Int32> Noncompliant { get; set; }
		
		/// <summary>
		/// Number of resources checked for compliance. Must equal: unenforced + noncompliant + compliant + error
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scanned")]
		public System.Nullable<System.Int32> Scanned { get; set; }
		
		/// <summary>
		/// Number of resources where the constraint was not enforced, i.e. the Policy set `enforced: false` for that resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unenforced")]
		public System.Nullable<System.Int32> Unenforced { get; set; }
	}
	
	/// <summary>
	/// The response message for Operations.ListOperations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleLongrunningListOperationsResponse
	{
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A list of operations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operations")]
		public GoogleLongrunningOperation[] Operations { get; set; }
	}
	
	/// <summary>
	/// This resource represents a long-running operation that is the result of a network API call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleLongrunningOperation
	{
		
		/// <summary>
		/// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="done")]
		public System.Nullable<System.Boolean> Done { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public System.Collections.Generic.Dictionary<string, object> Response { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
		/// Policysimulator_projects_locations_replays_operations_list v1alpha/{name}
		/// </summary>
		/// <param name="name">The name of the operation's parent resource.</param>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningListOperationsResponse> Policysimulator_projects_locations_replays_operations_listAsync(string name, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1alpha/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningListOperationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// ListOrgPolicyViolations lists the OrgPolicyViolations that are present in an OrgPolicyViolationsPreview.
		/// Policysimulator_organizations_locations_orgPolicyViolationsPreviews_orgPolicyViolations_list v1alpha/{parent}/orgPolicyViolations
		/// </summary>
		/// <param name="parent">Required. The OrgPolicyViolationsPreview to get OrgPolicyViolations from. Format: organizations/{organization}/locations/{location}/orgPolicyViolationsPreviews/{orgPolicyViolationsPreview}</param>
		/// <param name="pageSize">The maximum number of items to return. The service may return fewer than this value. If unspecified, at most 50 items will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.</param>
		/// <param name="pageToken">A page token, received from a previous call. Provide this to retrieve the subsequent page. When paginating, all other parameters must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudPolicysimulatorV1alphaListOrgPolicyViolationsResponse> Policysimulator_organizations_locations_orgPolicyViolationsPreviews_orgPolicyViolations_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1alpha/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/orgPolicyViolations&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudPolicysimulatorV1alphaListOrgPolicyViolationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// ListOrgPolicyViolationsPreviews lists each OrgPolicyViolationsPreview in an organization. Each OrgPolicyViolationsPreview is available for at least 7 days.
		/// Policysimulator_organizations_locations_orgPolicyViolationsPreviews_list v1alpha/{parent}/orgPolicyViolationsPreviews
		/// </summary>
		/// <param name="parent">Required. The parent the violations are scoped to. Format: `organizations/{organization}/locations/{location}` Example: `organizations/my-example-org/locations/global`</param>
		/// <param name="pageSize">The maximum number of items to return. The service may return fewer than this value. If unspecified, at most 5 items will be returned. The maximum value is 10; values above 10 will be coerced to 10.</param>
		/// <param name="pageToken">A page token, received from a previous call. Provide this to retrieve the subsequent page. When paginating, all other parameters must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudPolicysimulatorV1alphaListOrgPolicyViolationsPreviewsResponse> Policysimulator_organizations_locations_orgPolicyViolationsPreviews_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1alpha/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/orgPolicyViolationsPreviews&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudPolicysimulatorV1alphaListOrgPolicyViolationsPreviewsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// GenerateOrgPolicyViolationsPreview generates an OrgPolicyViolationsPreview for the proposed changes in the provided OrgPolicyViolationsPreview.OrgPolicyOverlay. The changes to OrgPolicy are specified by this `OrgPolicyOverlay`. The resources to scan are inferred from these specified changes.
		/// Policysimulator_organizations_locations_orgPolicyViolationsPreviews v1alpha/{parent}/orgPolicyViolationsPreviews
		/// </summary>
		/// <param name="parent">Required. The organization under which this OrgPolicyViolationsPreview will be created. Example: `organizations/my-example-org/locations/global`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Policysimulator_organizations_locations_orgPolicyViolationsPreviewsAsync(string parent, GoogleCloudPolicysimulatorV1alphaOrgPolicyViolationsPreview requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1alpha/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/orgPolicyViolationsPreviews";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists each Replay in a project, folder, or organization. Each `Replay` is available for at least 7 days.
		/// Policysimulator_projects_locations_replays_list v1alpha/{parent}/replays
		/// </summary>
		/// <param name="parent">Required. The parent resource, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global`, where `{resource-id}` is the ID of the project, folder, or organization that owns the Replay. Example: `projects/my-example-project/locations/global` Only `Replay` objects that are direct children of the provided parent are listed. In other words, `Replay` objects that are children of a project will not be included when the parent is a folder of that project.</param>
		/// <param name="pageSize">The maximum number of Replay objects to return. Defaults to 50. The maximum value is 1000; values above 1000 are rounded down to 1000.</param>
		/// <param name="pageToken">A page token, received from a previous Simulator.ListReplays call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to Simulator.ListReplays must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudPolicysimulatorV1alphaListReplaysResponse> Policysimulator_projects_locations_replays_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1alpha/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/replays&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudPolicysimulatorV1alphaListReplaysResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates and starts a Replay using the given ReplayConfig.
		/// Policysimulator_projects_locations_replays_create v1alpha/{parent}/replays
		/// </summary>
		/// <param name="parent">Required. The parent resource where this Replay will be created. This resource must be a project, folder, or organization with a location. Example: `projects/my-example-project/locations/global`</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Policysimulator_projects_locations_replays_createAsync(string parent, GoogleCloudPolicysimulatorV1alphaReplay requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1alpha/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/replays";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the results of running a Replay.
		/// Policysimulator_projects_locations_replays_results_list v1alpha/{parent}/results
		/// </summary>
		/// <param name="parent">Required. The Replay whose results are listed, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}` Example: `projects/my-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36`</param>
		/// <param name="pageSize">The maximum number of ReplayResult objects to return. Defaults to 5000. The maximum value is 5000; values above 5000 are rounded down to 5000.</param>
		/// <param name="pageToken">A page token, received from a previous Simulator.ListReplayResults call. Provide this token to retrieve the next page of results. When paginating, all other parameters provided to [Simulator.ListReplayResults[] must match the call that provided the page token.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudPolicysimulatorV1alphaListReplayResultsResponse> Policysimulator_projects_locations_replays_results_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1alpha/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/results&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudPolicysimulatorV1alphaListReplayResultsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

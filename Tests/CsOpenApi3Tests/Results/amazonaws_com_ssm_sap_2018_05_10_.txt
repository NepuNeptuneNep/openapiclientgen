//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteResourcePermissionOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Policy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ValidationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalServerException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeregisterApplicationOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetApplicationOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Application Application { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// An SAP application registered with AWS Systems Manager for SAP.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Application
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AppRegistryArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationDiscoveryStatus DiscoveryStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Components { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ApplicationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HANA = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ApplicationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVATED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REGISTERING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ApplicationDiscoveryStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REGISTRATION_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REFRESH_FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REGISTERING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetComponentOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Component Component { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// The SAP component of your application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Component
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ComponentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ParentComponent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ChildComponents { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ComponentType ComponentType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ComponentStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SapHostname { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SapKernelVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HdbVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Resilience Resilience { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssociatedHost AssociatedHost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Databases { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Host[] Hosts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryHost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdated { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ComponentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HANA = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HANA_NODE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ComponentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVATED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING_WITH_ERROR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNDEFINED = 6,
	}
	
	/// <summary>
	/// Details of the SAP HANA system replication for the instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Resilience
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string HsrTier { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReplicationMode HsrReplicationMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OperationMode HsrOperationMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClusterStatus ClusterStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ReplicationMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIMARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYNC = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYNCMEM = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASYNC = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OperationMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIMARY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOGREPLAY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELTA_DATASHIPPING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOGREPLAY_READACCESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ClusterStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONLINE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDBY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAINTENANCE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OFFLINE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 4,
	}
	
	/// <summary>
	/// Describes the properties of the associated host.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssociatedHost
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Hostname { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Ec2InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OsVersion { get; set; }
	}
	
	/// <summary>
	/// Describes the properties of the Dedicated Host. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Host
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string HostName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HostIp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EC2InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HostRole HostRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OsVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum HostRole
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LEADER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WORKER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDBY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDatabaseOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Database Database { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// The SAP HANA database of the application registered with AWS Systems Manager for SAP.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Database
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ComponentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationCredential[] Credentials { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DatabaseType DatabaseType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DatabaseStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryHost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SQLPort { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdated { get; set; }
	}
	
	/// <summary>
	/// The credentials of your SAP application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationCredential
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CredentialType CredentialType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecretId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CredentialType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADMIN = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DatabaseType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYSTEM = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TENANT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DatabaseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WARNING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetOperationOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Operation Operation { get; set; }
	}
	
	/// <summary>
	/// The operations performed by AWS Systems Manager for SAP.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Operation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OperationStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OperationProperties Properties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OperationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INPROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OperationProperties
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetResourcePermissionOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Policy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListApplicationsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationSummary[] Applications { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The summary of the SAP application registered with AWS Systems Manager for SAP. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListComponentsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ComponentSummary[] Components { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The summary of the component.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ComponentSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ComponentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ComponentType ComponentType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDatabasesOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DatabaseSummary[] Databases { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The summary of the database.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DatabaseSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ComponentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DatabaseType DatabaseType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListOperationsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Operation[] Operations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A specific result obtained by specifying the name, value, and operator. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Filter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FilterOperator Operator { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FilterOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Equals = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GreaterThanOrEquals = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LessThanOrEquals = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConflictException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutResourcePermissionOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Policy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterApplicationOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Application Application { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartApplicationRefreshOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateApplicationSettingsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OperationIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BackintMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWSBackup = 0,
	}
	
	/// <summary>
	/// Configuration parameters for AWS Backint Agent for SAP HANA. You can backup your SAP HANA database with AWS Backup or Amazon S3.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BackintConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BackintMode BackintMode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool EnsureNoBackupInProcess { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PermissionActionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESTORE = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteResourcePermissionInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PermissionActionType ActionType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceResourceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeregisterApplicationInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetApplicationInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AppRegistryArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetComponentInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ComponentId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDatabaseInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ComponentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetOperationInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OperationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetResourcePermissionInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PermissionActionType ActionType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListApplicationsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListComponentsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDatabasesInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ComponentId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListOperationsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Filter[] Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutResourcePermissionInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PermissionActionType ActionType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceResourceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RegisterApplicationInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationType ApplicationType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] Instances { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SapInstanceNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Sid { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationCredential[] Credentials { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartApplicationRefreshInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateApplicationSettingsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationCredential[] CredentialsToAddOrUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationCredential[] CredentialsToRemove { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BackintConfig Backint { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Removes permissions associated with the target database.
		/// DeleteResourcePermission delete-resource-permission
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteResourcePermissionOutput> DeleteResourcePermissionAsync(DeleteResourcePermissionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "delete-resource-permission";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteResourcePermissionOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deregister an SAP application with AWS Systems Manager for SAP. This action does not aﬀect the existing setup of your SAP workloads on Amazon EC2.
		/// DeregisterApplication deregister-application
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeregisterApplicationOutput> DeregisterApplicationAsync(DeregisterApplicationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "deregister-application";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeregisterApplicationOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets an application registered with AWS Systems Manager for SAP. It also returns the components of the application.
		/// GetApplication get-application
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetApplicationOutput> GetApplicationAsync(GetApplicationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "get-application";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetApplicationOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the component of an application registered with AWS Systems Manager for SAP.
		/// GetComponent get-component
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetComponentOutput> GetComponentAsync(GetComponentPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "get-component";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetComponentOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the SAP HANA database of an application registered with AWS Systems Manager for SAP.
		/// GetDatabase get-database
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetDatabaseOutput> GetDatabaseAsync(GetDatabasePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "get-database";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetDatabaseOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the details of an operation by specifying the operation ID.
		/// GetOperation get-operation
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetOperationOutput> GetOperationAsync(GetOperationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "get-operation";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetOperationOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets permissions associated with the target database.
		/// GetResourcePermission get-resource-permission
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetResourcePermissionOutput> GetResourcePermissionAsync(GetResourcePermissionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "get-resource-permission";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetResourcePermissionOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all the applications registered with AWS Systems Manager for SAP.
		/// ListApplications list-applications
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListApplicationsOutput> ListApplicationsAsync(string MaxResults, string NextToken, ListApplicationsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "list-applications?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListApplicationsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all the components registered with AWS Systems Manager for SAP.
		/// ListComponents list-components
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListComponentsOutput> ListComponentsAsync(string MaxResults, string NextToken, ListComponentsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "list-components?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListComponentsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the SAP HANA databases of an application registered with AWS Systems Manager for SAP.
		/// ListDatabases list-databases
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListDatabasesOutput> ListDatabasesAsync(string MaxResults, string NextToken, ListDatabasesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "list-databases?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListDatabasesOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the operations performed by AWS Systems Manager for SAP.
		/// ListOperations list-operations
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListOperationsOutput> ListOperationsAsync(string MaxResults, string NextToken, ListOperationsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "list-operations?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListOperationsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all tags on an SAP HANA application and/or database registered with AWS Systems Manager for SAP.
		/// ListTagsForResource tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) of the resource.</param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string resourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates tag for a resource by specifying the ARN.
		/// TagResource tags/{resourceArn}
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) of the resource.</param>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(string resourceArn, TagResourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds permissions to the target database.
		/// PutResourcePermission put-resource-permission
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutResourcePermissionOutput> PutResourcePermissionAsync(PutResourcePermissionPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "put-resource-permission";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutResourcePermissionOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Register an SAP application with AWS Systems Manager for SAP. You must meet the following requirements before registering. </p> <p>The SAP application you want to register with AWS Systems Manager for SAP is running on Amazon EC2.</p> <p>AWS Systems Manager Agent must be setup on an Amazon EC2 instance along with the required IAM permissions.</p> <p>Amazon EC2 instance(s) must have access to the secrets created in AWS Secrets Manager to manage SAP applications and components.</p>
		/// RegisterApplication register-application
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RegisterApplicationOutput> RegisterApplicationAsync(RegisterApplicationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "register-application";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RegisterApplicationOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Refreshes a registered application.
		/// StartApplicationRefresh start-application-refresh
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartApplicationRefreshOutput> StartApplicationRefreshAsync(StartApplicationRefreshPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "start-application-refresh";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StartApplicationRefreshOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete the tags for a resource.
		/// UntagResource tags/{resourceArn}#tagKeys
		/// </summary>
		/// <param name="resourceArn">The Amazon Resource Name (ARN) of the resource.</param>
		/// <param name="tagKeys">Adds/updates or removes credentials for applications registered with AWS Systems Manager for SAP.</param>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(string resourceArn, string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn))+"#tagKeys&"+string.Join("&", tagKeys.Select(z => $"tagKeys={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UntagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the settings of an application registered with AWS Systems Manager for SAP.
		/// UpdateApplicationSettings update-application-settings
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateApplicationSettingsOutput> UpdateApplicationSettingsAsync(UpdateApplicationSettingsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "update-application-settings";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateApplicationSettingsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class DeleteResourcePermissionPostBody
	{
		
		/// <summary>
		/// Delete or restore the permissions on the target database.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PermissionActionType ActionType { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the source resource.
		/// Pattern: arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\/.+")]
		public string SourceResourceArn { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the resource.
		/// Required
		/// Pattern: arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\/.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\/.+")]
		public string ResourceArn { get; set; }
	}
	
	public class DeregisterApplicationPostBody
	{
		
		/// <summary>
		/// The ID of the application.
		/// Required
		/// Pattern: [\w\d]{1,50}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\d]{1,50}")]
		public string ApplicationId { get; set; }
	}
	
	public class GetApplicationPostBody
	{
		
		/// <summary>
		/// The ID of the application.
		/// Pattern: [\w\d]{1,50}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\d]{1,50}")]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the application. 
		/// Pattern: arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\/.+")]
		public string ApplicationArn { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the application registry.
		/// Pattern: arn:aws:servicecatalog:[a-z0-9:\/-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:aws:servicecatalog:[a-z0-9:\/-]+")]
		public string AppRegistryArn { get; set; }
	}
	
	public class GetComponentPostBody
	{
		
		/// <summary>
		/// The ID of the application.
		/// Required
		/// Pattern: [\w\d]{1,50}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\d]{1,50}")]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// The ID of the component.
		/// Required
		/// Pattern: [\w\d-]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\d-]+")]
		public string ComponentId { get; set; }
	}
	
	public class GetDatabasePostBody
	{
		
		/// <summary>
		/// The ID of the application.
		/// Pattern: [\w\d]{1,50}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\d]{1,50}")]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// The ID of the component.
		/// Pattern: [\w\d-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\d-]+")]
		public string ComponentId { get; set; }
		
		/// <summary>
		/// The ID of the database.
		/// Pattern: .*[\w\d]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".*[\w\d]+")]
		public string DatabaseId { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the database.
		/// Pattern: arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\/.+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\/.+")]
		public string DatabaseArn { get; set; }
	}
	
	public class GetOperationPostBody
	{
		
		/// <summary>
		/// The ID of the operation.
		/// Required
		/// Pattern: [{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?")]
		public string OperationId { get; set; }
	}
	
	public class GetResourcePermissionPostBody
	{
		
		/// <summary>
		/// <p/>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PermissionActionType ActionType { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the resource.
		/// Required
		/// Pattern: arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\/.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\/.+")]
		public string ResourceArn { get; set; }
	}
	
	public class ListApplicationsPostBody
	{
		
		/// <summary>
		/// The token for the next page of results.
		/// Pattern: .{16,1024}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".{16,1024}")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value. 
		/// Minimum: 1
		/// Maximum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 50)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	public class ListComponentsPostBody
	{
		
		/// <summary>
		/// The ID of the application.
		/// Pattern: [\w\d]{1,50}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\d]{1,50}")]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// The token for the next page of results.
		/// Pattern: .{16,1024}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".{16,1024}")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// <p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value.</p> <p>If you do not specify a value for MaxResults, the request returns 50 items per page by default.</p>
		/// Minimum: 1
		/// Maximum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 50)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	public class ListDatabasesPostBody
	{
		
		/// <summary>
		/// The ID of the application.
		/// Pattern: [\w\d]{1,50}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\d]{1,50}")]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// The ID of the component.
		/// Pattern: [\w\d-]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\d-]+")]
		public string ComponentId { get; set; }
		
		/// <summary>
		/// The token for the next page of results. 
		/// Pattern: .{16,1024}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".{16,1024}")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value. If you do not specify a value for MaxResults, the request returns 50 items per page by default.
		/// Minimum: 1
		/// Maximum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 50)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	public class ListOperationsPostBody
	{
		
		/// <summary>
		/// The ID of the application.
		/// Required
		/// Pattern: [\w\d]{1,50}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\d]{1,50}")]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned nextToken value. If you do not specify a value for MaxResults, the request returns 50 items per page by default.
		/// Minimum: 1
		/// Maximum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 50)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The token for the next page of results. 
		/// Pattern: .{16,1024}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@".{16,1024}")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The filters of an operation.
		/// Minimum items: 1
		/// Maximum items: 10
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public Filter[] Filters { get; set; }
	}
	
	public class TagResourcePostBody
	{
		
		/// <summary>
		/// The tags on a resource.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class PutResourcePermissionPostBody
	{
		
		/// <summary>
		/// <p/>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PermissionActionType ActionType { get; set; }
		
		/// <summary>
		/// <p/>
		/// Required
		/// Pattern: arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\/.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\/.+")]
		public string SourceResourceArn { get; set; }
		
		/// <summary>
		/// <p/>
		/// Required
		/// Pattern: arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\/.+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\/.+")]
		public string ResourceArn { get; set; }
	}
	
	public class RegisterApplicationPostBody
	{
		
		/// <summary>
		/// The ID of the application.
		/// Required
		/// Pattern: [\w\d]{1,50}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\d]{1,50}")]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// The type of the application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationType ApplicationType { get; set; }
		
		/// <summary>
		/// The Amazon EC2 instances on which your SAP application is running.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public string[] Instances { get; set; }
		
		/// <summary>
		/// The SAP instance number of the application.
		/// Pattern: [0-9]{2}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[0-9]{2}")]
		public string SapInstanceNumber { get; set; }
		
		/// <summary>
		/// The System ID of the application.
		/// Pattern: [A-Z][A-Z0-9]{2}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[A-Z][A-Z0-9]{2}")]
		public string Sid { get; set; }
		
		/// <summary>
		/// The tags to be attached to the SAP application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// The credentials of the SAP application.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 20
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public ApplicationCredential[] Credentials { get; set; }
	}
	
	public class StartApplicationRefreshPostBody
	{
		
		/// <summary>
		/// The ID of the application.
		/// Required
		/// Pattern: [\w\d]{1,50}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\d]{1,50}")]
		public string ApplicationId { get; set; }
	}
	
	public class UpdateApplicationSettingsPostBody
	{
		
		/// <summary>
		/// The ID of the application.
		/// Required
		/// Pattern: [\w\d]{1,50}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[\w\d]{1,50}")]
		public string ApplicationId { get; set; }
		
		/// <summary>
		/// The credentials to be added or updated.
		/// Minimum items: 1
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public ApplicationCredential[] CredentialsToAddOrUpdate { get; set; }
		
		/// <summary>
		/// The credentials to be removed.
		/// Minimum items: 1
		/// Maximum items: 20
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(20)]
		public ApplicationCredential[] CredentialsToRemove { get; set; }
		
		/// <summary>
		/// Configuration parameters for AWS Backint Agent for SAP HANA. You can backup your SAP HANA database with AWS Backup or Amazon S3.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateApplicationSettingsPostBodyBackint Backint { get; set; }
	}
	
	public class UpdateApplicationSettingsPostBodyBackint
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BackintMode BackintMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EnsureNoBackupInProcess { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

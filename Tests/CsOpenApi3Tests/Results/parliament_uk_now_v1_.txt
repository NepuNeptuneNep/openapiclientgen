//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AnnunciatorMessageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CommonsMain = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LordsMain = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContentStyle
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DividerSolid = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EmptyLine = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Member = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Footer = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AnsweringBody = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WestminsterHallInfo = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GrandCommitteeInfo = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DividerDotted = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DividerDashed = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Division = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Text150 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Text140 = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Text130 = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Text120 = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Text110 = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Text100 = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Text90 = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Text80 = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Text70 = 18,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Generic = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Member = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OralQuestionTime = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AnsweringBody = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bill = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum HorizontalAlignment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Left = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Right = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Centre = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HouseMembershipViewModel
	{
		
		[System.Runtime.Serialization.DataMember(Name="membershipFrom")]
		public string MembershipFrom { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LineViewModel
	{
		
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contentAdditionalJson")]
		public string ContentAdditionalJson { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contentType")]
		public ContentType ContentType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contentUrl")]
		public string ContentUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="displayOrder")]
		public System.Nullable<System.Int32> DisplayOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="forceCapitalisation")]
		public System.Nullable<System.Boolean> ForceCapitalisation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="horizontalAlignment")]
		public HorizontalAlignment HorizontalAlignment { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="member")]
		public MemberViewModel Member { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="style")]
		public ContentStyle Style { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="verticalAlignment")]
		public System.Nullable<LineViewModelVerticalAlignment> VerticalAlignment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MemberViewModel
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="latestHouseMembership")]
		public HouseMembershipViewModel LatestHouseMembership { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="latestParty")]
		public PartyViewModel LatestParty { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nameAddressAs")]
		public string NameAddressAs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nameDisplayAs")]
		public string NameDisplayAs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nameFullTitle")]
		public string NameFullTitle { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nameListAs")]
		public string NameListAs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="thumbnailUrl")]
		public string ThumbnailUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PartyViewModel
	{
		
		[System.Runtime.Serialization.DataMember(Name="backgroundColour")]
		public string BackgroundColour { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LineViewModelVerticalAlignment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Top = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Middle = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bottom = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MessageViewModel
	{
		
		[System.Runtime.Serialization.DataMember(Name="annunciatorDisabled")]
		public System.Nullable<System.Boolean> AnnunciatorDisabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="annunciatorType")]
		public AnnunciatorMessageType AnnunciatorType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isSecurityOverride")]
		public System.Nullable<System.Boolean> IsSecurityOverride { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publishTime")]
		public System.Nullable<System.DateTimeOffset> PublishTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scrollingMessages")]
		public ScrollingMessageViewModel[] ScrollingMessages { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="showCommonsBell")]
		public System.Nullable<System.Boolean> ShowCommonsBell { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="showLordsBell")]
		public System.Nullable<System.Boolean> ShowLordsBell { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="slides")]
		public SlideViewModel[] Slides { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScrollingMessageViewModel
	{
		
		[System.Runtime.Serialization.DataMember(Name="alertType")]
		public System.Nullable<ScrollingMessageViewModelAlertType> AlertType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="content")]
		public string Content { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="displayFrom")]
		public System.Nullable<System.DateTimeOffset> DisplayFrom { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="displayTo")]
		public System.Nullable<System.DateTimeOffset> DisplayTo { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="verticalAlignment")]
		public LineViewModelVerticalAlignment VerticalAlignment { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ScrollingMessageViewModelAlertType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Standard = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SecondaryChamber = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Alert = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SecurityNormal = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SecurityHigh = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SlideViewModel
	{
		
		[System.Runtime.Serialization.DataMember(Name="carouselDisplaySeconds")]
		public System.Nullable<System.Int32> CarouselDisplaySeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="carouselOrder")]
		public System.Nullable<System.Int32> CarouselOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lines")]
		public LineViewModel[] Lines { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="slideTime")]
		public System.Nullable<System.DateTimeOffset> SlideTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="soundToPlay")]
		public System.Nullable<SlideViewModelSoundToPlay> SoundToPlay { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="speakerTime")]
		public System.Nullable<System.DateTimeOffset> SpeakerTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<SlideViewModelType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SlideViewModelSoundToPlay
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NewSlide = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DivisionBell = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Alert = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GenericBeep = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SlideViewModelType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Debate = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Division = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OralQuestionTime = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UrgentQuestion = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Statement = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Prayers = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HouseRisen = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Generic = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotSitting = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PrimeMinistersQuestions = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PointsOfOrder = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BlankSlide = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ScrollingMessageAlertType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Standard = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SecondaryChamber = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Alert = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SecurityNormal = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SecurityHigh = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SlideType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Debate = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Division = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OralQuestionTime = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UrgentQuestion = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Statement = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Prayers = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HouseRisen = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Generic = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotSitting = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PrimeMinistersQuestions = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PointsOfOrder = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BlankSlide = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Sounds
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NewSlide = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DivisionBell = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Alert = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GenericBeep = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VerticalAlignment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Top = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Middle = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bottom = 2,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Return the current message by annunciator type
		/// MessageGetByAnnunciator api/Message/message/{annunciator}/current
		/// </summary>
		/// <param name="annunciator">Current message by annunciator</param>
		/// <returns>Success</returns>
		public async Task<MessageViewModel> MessageGetByAnnunciatorAsync(AnnunciatorMessageType annunciator, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Message/message/"+annunciator+"/current";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<MessageViewModel>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Return the most recent message by annunciator after date time specified
		/// MessageGetByAnnunciatorAndDate api/Message/message/{annunciator}/{date}
		/// </summary>
		/// <param name="annunciator">Message by annunciator type</param>
		/// <param name="date">First message after date time specified</param>
		/// <returns>Latest message for given annunciator was issued before specified date</returns>
		public async Task<MessageViewModel> MessageGetByAnnunciatorAndDateAsync(AnnunciatorMessageType annunciator, System.DateTimeOffset date, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "api/Message/message/"+annunciator+"/"+date.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ");
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<MessageViewModel>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

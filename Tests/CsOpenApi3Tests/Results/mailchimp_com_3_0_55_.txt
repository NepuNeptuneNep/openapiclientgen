//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Information about subscribers in an Automation email queue.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PostAutomationsIdEmailsIdQueueBody
	{
		
		/// <summary>
		/// The list member's email address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
	}
	
	/// <summary>
	/// A folder used to organize campaigns.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PostCampaignFoldersBody
	{
		
		/// <summary>
		/// Name to associate with the folder.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Information about a specific product variant.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PostEcommerceStoresIdProductsIdVariantsBody
	{
		
		/// <summary>
		/// The backorders of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backorders")]
		public string Backorders { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The inventory quantity of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inventory_quantity")]
		public System.Nullable<System.Int32> Inventory_quantity { get; set; }
		
		/// <summary>
		/// The price of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// The stock keeping unit (SKU) of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		/// <summary>
		/// The title of a product variant.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The visibility of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public string Visibility { get; set; }
	}
	
	/// <summary>
	/// An individual folder listed in the File Manager.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PostFileManagerFoldersBody
	{
		
		/// <summary>
		/// The name of the folder.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Interest categories organize interests, which are used to group subscribers based on their preferences. These correspond to Group Titles the application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PostListsIdInterestCategoriesBody
	{
		
		/// <summary>
		/// The order that the categories are displayed in the list. Lower numbers display first.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_order")]
		public System.Nullable<System.Int32> Display_order { get; set; }
		
		/// <summary>
		/// The text description of this category. This field appears on signup forms and is often phrased as a question.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Determines how this categoryâ€™s interests appear on signup forms.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public PostListsIdInterestCategoriesBodyType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostListsIdInterestCategoriesBodyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		checkboxes = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dropdown = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		radio = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hidden = 3,
	}
	
	/// <summary>
	/// Assign subscribers to interests to group them together. Interests are referred to as 'group names' in the Mailchimp application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PostListsIdInterestCategoriesIdInterestsBody
	{
		
		/// <summary>
		/// The display order for interests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_order")]
		public System.Nullable<System.Int32> Display_order { get; set; }
		
		/// <summary>
		/// The name of the interest. This can be shown publicly on a subscription form.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// A specific note for a specific member.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PostListsIdMembersIdNotesBody
	{
		
		/// <summary>
		/// The content of the note. Note length is limited to 1,000 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
	}
	
	/// <summary>
	/// Configure a webhook for the given list.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PostListsIdWebhooksBody
	{
		
		/// <summary>
		/// The events that can trigger the webhook and whether they are enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="events")]
		public PostListsIdWebhooksBodyEvents Events { get; set; }
		
		/// <summary>
		/// The possible sources of any events that can trigger the webhook and whether they are enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public PostListsIdWebhooksBodySources Sources { get; set; }
		
		/// <summary>
		/// A valid URL for the Webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class PostListsIdWebhooksBodyEvents
	{
		
		/// <summary>
		/// Whether the webhook is triggered when a campaign is sent or cancelled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a subscriber's email address is cleaned from the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cleaned")]
		public System.Nullable<System.Boolean> Cleaned { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a subscriber's profile is updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profile")]
		public System.Nullable<System.Boolean> Profile { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a list subscriber is added.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribe")]
		public System.Nullable<System.Boolean> Subscribe { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a list member unsubscribes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe")]
		public System.Nullable<System.Boolean> Unsubscribe { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a subscriber's email address is changed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="upemail")]
		public System.Nullable<System.Boolean> Upemail { get; set; }
	}
	
	public class PostListsIdWebhooksBodySources
	{
		
		/// <summary>
		/// Whether the webhook is triggered by admin-initiated actions in the web interface.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="admin")]
		public System.Nullable<System.Boolean> Admin { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered by actions initiated via the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="api")]
		public System.Nullable<System.Boolean> Api { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered by subscriber-initiated actions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user")]
		public System.Nullable<System.Boolean> User { get; set; }
	}
	
	/// <summary>
	/// A folder used to organize templates.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PostTemplateFoldersBody
	{
		
		/// <summary>
		/// The name of the folder.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Information about a specific template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PostTemplatesBody
	{
		
		/// <summary>
		/// The id of the folder the template is currently in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public string Folder_id { get; set; }
		
		/// <summary>
		/// The raw HTML for the template. We  support the Mailchimp [Template Language](https://mailchimp.com/help/getting-started-with-mailchimps-template-language/) in any HTML code passed via the API.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="html")]
		public string Html { get; set; }
		
		/// <summary>
		/// The name of the template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// List api root resources
		/// Get links to all other resources available in the API.
		/// GetRoot 
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		public async Task<GetRootReturn> GetRootAsync(string[] fields, string[] exclude_fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetRootReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List account exports
		/// Get a list of account exports for a given account.
		/// GetAccountExports account-exports
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		public async Task<GetAccountExportsReturn> GetAccountExportsAsync(string[] fields, string[] exclude_fields, int count, int offset, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "account-exports?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAccountExportsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add export
		/// Create a new account export in your Mailchimp account.
		/// PostAccountExport account-exports
		/// </summary>
		public async Task<PostAccountExportReturn> PostAccountExportAsync(PostAccountExportPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "account-exports";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostAccountExportReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get account export info
		/// Get information about a specific account export.
		/// GetAccountExportId account-exports/{export_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="export_id">The unique id for the account export.</param>
		public async Task<GetAccountExportIdReturn> GetAccountExportIdAsync(string[] fields, string[] exclude_fields, string export_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "account-exports/"+ (export_id==null? "" : System.Uri.EscapeDataString(export_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAccountExportIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get latest chimp chatter
		/// Return the Chimp Chatter for this account ordered by most recent.
		/// GetActivityFeedChimpChatter activity-feed/chimp-chatter
		/// </summary>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <returns>ChimpChatter Collection</returns>
		public async Task<GetActivityFeedChimpChatterReturn> GetActivityFeedChimpChatterAsync(int count, int offset, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "activity-feed/chimp-chatter?count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetActivityFeedChimpChatterReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List authorized apps
		/// Get a list of an account's registered, connected applications.
		/// GetAuthorizedApps authorized-apps
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		public async Task<GetAuthorizedAppsReturn> GetAuthorizedAppsAsync(string[] fields, string[] exclude_fields, int count, int offset, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "authorized-apps?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAuthorizedAppsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get authorized app info
		/// Get information about a specific authorized application.
		/// GetAuthorizedAppsId authorized-apps/{app_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="app_id">The unique id for the connected authorized application.</param>
		public async Task<GetAuthorizedAppsIdReturn> GetAuthorizedAppsIdAsync(string[] fields, string[] exclude_fields, string app_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "authorized-apps/"+ (app_id==null? "" : System.Uri.EscapeDataString(app_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAuthorizedAppsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List automations
		/// Get a summary of an account's classic automations.
		/// GetAutomations automations
		/// </summary>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="before_create_time">Restrict the response to automations created before this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="since_create_time">Restrict the response to automations created after this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="before_start_time">Restrict the response to automations started before this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="since_start_time">Restrict the response to automations started after this time. Uses the ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="status">Restrict the results to automations with the specified status.</param>
		public async Task<GetAutomationsReturn> GetAutomationsAsync(int count, int offset, string[] fields, string[] exclude_fields, System.DateTimeOffset before_create_time, System.DateTimeOffset since_create_time, System.DateTimeOffset before_start_time, System.DateTimeOffset since_start_time, GetAutomationsStatus status, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "automations?count="+count+"&offset="+offset+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&before_create_time=" + before_create_time.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&since_create_time=" + since_create_time.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&before_start_time=" + before_start_time.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&since_start_time=" + since_start_time.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&status=" + status;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAutomationsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add automation
		/// Create a new classic automation in your Mailchimp account.
		/// PostAutomations automations
		/// </summary>
		public async Task<PostAutomationsReturn> PostAutomationsAsync(PostAutomationsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "automations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostAutomationsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get automation info
		/// Get a summary of an individual classic automation workflow's settings and content. The `trigger_settings` object returns information for the first email in the workflow.
		/// GetAutomationsId automations/{workflow_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="workflow_id">The unique id for the Automation workflow.</param>
		public async Task<GetAutomationsIdReturn> GetAutomationsIdAsync(string[] fields, string[] exclude_fields, string workflow_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "automations/"+ (workflow_id==null? "" : System.Uri.EscapeDataString(workflow_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAutomationsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Archive automation
		/// Archiving will permanently end your automation and keep the report data. Youâ€™ll be able to replicate your archived automation, but you canâ€™t restart it.
		/// ArchiveAutomations automations/{workflow_id}/actions/archive
		/// </summary>
		/// <param name="workflow_id">The unique id for the Automation workflow.</param>
		public async Task ArchiveAutomationsAsync(string workflow_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "automations/"+ (workflow_id==null? "" : System.Uri.EscapeDataString(workflow_id))+"/actions/archive";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Pause automation emails
		/// Pause all emails in a specific classic automation workflow.
		/// PostAutomationsIdActionsPauseAllEmails automations/{workflow_id}/actions/pause-all-emails
		/// </summary>
		/// <param name="workflow_id">The unique id for the Automation workflow.</param>
		public async Task PostAutomationsIdActionsPauseAllEmailsAsync(string workflow_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "automations/"+ (workflow_id==null? "" : System.Uri.EscapeDataString(workflow_id))+"/actions/pause-all-emails";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Start automation emails
		/// Start all emails in a classic automation workflow.
		/// PostAutomationsIdActionsStartAllEmails automations/{workflow_id}/actions/start-all-emails
		/// </summary>
		/// <param name="workflow_id">The unique id for the Automation workflow.</param>
		public async Task PostAutomationsIdActionsStartAllEmailsAsync(string workflow_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "automations/"+ (workflow_id==null? "" : System.Uri.EscapeDataString(workflow_id))+"/actions/start-all-emails";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List automated emails
		/// Get a summary of the emails in a classic automation workflow.
		/// GetAutomationsIdEmails automations/{workflow_id}/emails
		/// </summary>
		/// <param name="workflow_id">The unique id for the Automation workflow.</param>
		public async Task<GetAutomationsIdEmailsReturn> GetAutomationsIdEmailsAsync(string workflow_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "automations/"+ (workflow_id==null? "" : System.Uri.EscapeDataString(workflow_id))+"/emails";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAutomationsIdEmailsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete workflow email
		/// Removes an individual classic automation workflow email. Emails from certain workflow types, including the Abandoned Cart Email (abandonedCart) and Product Retargeting Email (abandonedBrowse) Workflows, cannot be deleted.
		/// DeleteAutomationsIdEmailsId automations/{workflow_id}/emails/{workflow_email_id}
		/// </summary>
		/// <param name="workflow_id">The unique id for the Automation workflow.</param>
		/// <param name="workflow_email_id">The unique id for the Automation workflow email.</param>
		public async Task DeleteAutomationsIdEmailsIdAsync(string workflow_id, string workflow_email_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "automations/"+ (workflow_id==null? "" : System.Uri.EscapeDataString(workflow_id))+"/emails/"+ (workflow_email_id==null? "" : System.Uri.EscapeDataString(workflow_email_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get workflow email info
		/// Get information about an individual classic automation workflow email.
		/// GetAutomationsIdEmailsId automations/{workflow_id}/emails/{workflow_email_id}
		/// </summary>
		/// <param name="workflow_id">The unique id for the Automation workflow.</param>
		/// <param name="workflow_email_id">The unique id for the Automation workflow email.</param>
		public async Task<GetAutomationsIdEmailsIdReturn> GetAutomationsIdEmailsIdAsync(string workflow_id, string workflow_email_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "automations/"+ (workflow_id==null? "" : System.Uri.EscapeDataString(workflow_id))+"/emails/"+ (workflow_email_id==null? "" : System.Uri.EscapeDataString(workflow_email_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAutomationsIdEmailsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update workflow email
		/// Update settings for a classic automation workflow email.  Only works with workflows of type: abandonedBrowse, abandonedCart, emailFollowup, or singleWelcome.
		/// PatchAutomationEmailWorkflowId automations/{workflow_id}/emails/{workflow_email_id}
		/// </summary>
		/// <param name="workflow_id">The unique id for the Automation workflow.</param>
		/// <param name="workflow_email_id">The unique id for the Automation workflow email.</param>
		public async Task<PatchAutomationEmailWorkflowIdReturn> PatchAutomationEmailWorkflowIdAsync(string workflow_id, string workflow_email_id, PatchAutomationEmailWorkflowIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "automations/"+ (workflow_id==null? "" : System.Uri.EscapeDataString(workflow_id))+"/emails/"+ (workflow_email_id==null? "" : System.Uri.EscapeDataString(workflow_email_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchAutomationEmailWorkflowIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Pause automated email
		/// Pause an automated email.
		/// PostAutomationsIdEmailsIdActionsPause automations/{workflow_id}/emails/{workflow_email_id}/actions/pause
		/// </summary>
		/// <param name="workflow_id">The unique id for the Automation workflow.</param>
		/// <param name="workflow_email_id">The unique id for the Automation workflow email.</param>
		public async Task PostAutomationsIdEmailsIdActionsPauseAsync(string workflow_id, string workflow_email_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "automations/"+ (workflow_id==null? "" : System.Uri.EscapeDataString(workflow_id))+"/emails/"+ (workflow_email_id==null? "" : System.Uri.EscapeDataString(workflow_email_id))+"/actions/pause";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Start automated email
		/// Start an automated email.
		/// PostAutomationsIdEmailsIdActionsStart automations/{workflow_id}/emails/{workflow_email_id}/actions/start
		/// </summary>
		/// <param name="workflow_id">The unique id for the Automation workflow.</param>
		/// <param name="workflow_email_id">The unique id for the Automation workflow email.</param>
		public async Task PostAutomationsIdEmailsIdActionsStartAsync(string workflow_id, string workflow_email_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "automations/"+ (workflow_id==null? "" : System.Uri.EscapeDataString(workflow_id))+"/emails/"+ (workflow_email_id==null? "" : System.Uri.EscapeDataString(workflow_email_id))+"/actions/start";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List automated email subscribers
		/// Get information about a classic automation email queue.
		/// GetAutomationsIdEmailsIdQueue automations/{workflow_id}/emails/{workflow_email_id}/queue
		/// </summary>
		/// <param name="workflow_id">The unique id for the Automation workflow.</param>
		/// <param name="workflow_email_id">The unique id for the Automation workflow email.</param>
		public async Task<GetAutomationsIdEmailsIdQueueReturn> GetAutomationsIdEmailsIdQueueAsync(string workflow_id, string workflow_email_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "automations/"+ (workflow_id==null? "" : System.Uri.EscapeDataString(workflow_id))+"/emails/"+ (workflow_email_id==null? "" : System.Uri.EscapeDataString(workflow_email_id))+"/queue";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAutomationsIdEmailsIdQueueReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add subscriber to workflow email
		/// Manually add a subscriber to a workflow, bypassing the default trigger settings. You can also use this endpoint to trigger a series of automated emails in an API 3.0 workflow type.
		/// PostAutomationsIdEmailsIdQueue automations/{workflow_id}/emails/{workflow_email_id}/queue
		/// </summary>
		/// <param name="workflow_id">The unique id for the Automation workflow.</param>
		/// <param name="workflow_email_id">The unique id for the Automation workflow email.</param>
		public async Task<PostAutomationsIdEmailsIdQueueReturn> PostAutomationsIdEmailsIdQueueAsync(string workflow_id, string workflow_email_id, PostAutomationsIdEmailsIdQueueBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "automations/"+ (workflow_id==null? "" : System.Uri.EscapeDataString(workflow_id))+"/emails/"+ (workflow_email_id==null? "" : System.Uri.EscapeDataString(workflow_email_id))+"/queue";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostAutomationsIdEmailsIdQueueReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get automated email subscriber
		/// Get information about a specific subscriber in a classic automation email queue.
		/// GetAutomationsIdEmailsIdQueueId automations/{workflow_id}/emails/{workflow_email_id}/queue/{subscriber_hash}
		/// </summary>
		/// <param name="workflow_id">The unique id for the Automation workflow.</param>
		/// <param name="workflow_email_id">The unique id for the Automation workflow email.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address.</param>
		public async Task<GetAutomationsIdEmailsIdQueueIdReturn> GetAutomationsIdEmailsIdQueueIdAsync(string workflow_id, string workflow_email_id, string subscriber_hash, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "automations/"+ (workflow_id==null? "" : System.Uri.EscapeDataString(workflow_id))+"/emails/"+ (workflow_email_id==null? "" : System.Uri.EscapeDataString(workflow_email_id))+"/queue/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAutomationsIdEmailsIdQueueIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List subscribers removed from workflow
		/// Get information about subscribers who were removed from a classic automation workflow.
		/// GetAutomationsIdRemovedSubscribers automations/{workflow_id}/removed-subscribers
		/// </summary>
		/// <param name="workflow_id">The unique id for the Automation workflow.</param>
		public async Task<GetAutomationsIdRemovedSubscribersReturn> GetAutomationsIdRemovedSubscribersAsync(string workflow_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "automations/"+ (workflow_id==null? "" : System.Uri.EscapeDataString(workflow_id))+"/removed-subscribers";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAutomationsIdRemovedSubscribersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Remove subscriber from workflow
		/// Remove a subscriber from a specific classic automation workflow. You can remove a subscriber at any point in an automation workflow, regardless of how many emails they've been sent from that workflow. Once they're removed, they can never be added back to the same workflow.
		/// PostAutomationsIdRemovedSubscribers automations/{workflow_id}/removed-subscribers
		/// </summary>
		/// <param name="workflow_id">The unique id for the Automation workflow.</param>
		public async Task<PostAutomationsIdRemovedSubscribersReturn> PostAutomationsIdRemovedSubscribersAsync(string workflow_id, PostAutomationsIdEmailsIdQueueBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "automations/"+ (workflow_id==null? "" : System.Uri.EscapeDataString(workflow_id))+"/removed-subscribers";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostAutomationsIdRemovedSubscribersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get subscriber removed from workflow
		/// Get information about a specific subscriber who was removed from a classic automation workflow.
		/// GetAutomationsIdRemovedSubscribersId automations/{workflow_id}/removed-subscribers/{subscriber_hash}
		/// </summary>
		/// <param name="workflow_id">The unique id for the Automation workflow.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address.</param>
		public async Task<GetAutomationsIdRemovedSubscribersIdReturn> GetAutomationsIdRemovedSubscribersIdAsync(string workflow_id, string subscriber_hash, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "automations/"+ (workflow_id==null? "" : System.Uri.EscapeDataString(workflow_id))+"/removed-subscribers/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAutomationsIdRemovedSubscribersIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List batch webhooks
		/// Get all webhooks that have been configured for batches.
		/// GetBatchWebhooks batch-webhooks
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		public async Task<GetBatchWebhooksReturn> GetBatchWebhooksAsync(string[] fields, string[] exclude_fields, int count, int offset, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "batch-webhooks?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetBatchWebhooksReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add batch webhook
		/// Configure a webhook that will fire whenever any batch request completes processing.  You may only have a maximum of 20 batch webhooks.
		/// PostBatchWebhooks batch-webhooks
		/// </summary>
		public async Task<PostBatchWebhooksReturn> PostBatchWebhooksAsync(PostBatchWebhooksPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "batch-webhooks";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostBatchWebhooksReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete batch webhook
		/// Remove a batch webhook. Webhooks will no longer be sent to the given URL.
		/// DeleteBatchWebhookId batch-webhooks/{batch_webhook_id}
		/// </summary>
		/// <param name="batch_webhook_id">The unique id for the batch webhook.</param>
		public async Task DeleteBatchWebhookIdAsync(string batch_webhook_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "batch-webhooks/"+ (batch_webhook_id==null? "" : System.Uri.EscapeDataString(batch_webhook_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get batch webhook info
		/// Get information about a specific batch webhook.
		/// GetBatchWebhook batch-webhooks/{batch_webhook_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="batch_webhook_id">The unique id for the batch webhook.</param>
		public async Task<GetBatchWebhookReturn> GetBatchWebhookAsync(string[] fields, string[] exclude_fields, string batch_webhook_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "batch-webhooks/"+ (batch_webhook_id==null? "" : System.Uri.EscapeDataString(batch_webhook_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetBatchWebhookReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update batch webhook
		/// Update a webhook that will fire whenever any batch request completes processing.
		/// PatchBatchWebhooks batch-webhooks/{batch_webhook_id}
		/// </summary>
		/// <param name="batch_webhook_id">The unique id for the batch webhook.</param>
		public async Task<PatchBatchWebhooksReturn> PatchBatchWebhooksAsync(string batch_webhook_id, PatchBatchWebhooksPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "batch-webhooks/"+ (batch_webhook_id==null? "" : System.Uri.EscapeDataString(batch_webhook_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchBatchWebhooksReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List batch requests
		/// Get a summary of batch requests that have been made.
		/// GetBatches batches
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		public async Task<GetBatchesReturn> GetBatchesAsync(string[] fields, string[] exclude_fields, int count, int offset, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "batches?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetBatchesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Start batch operation
		/// Begin processing a batch operations request.
		/// PostBatches batches
		/// </summary>
		public async Task<PostBatchesReturn> PostBatchesAsync(PostBatchesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "batches";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostBatchesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete batch request
		/// Stops a batch request from running. Since only one batch request is run at a time, this can be used to cancel a long running request. The results of any completed operations will not be available after this call.
		/// DeleteBatchesId batches/{batch_id}
		/// </summary>
		/// <param name="batch_id">The unique id for the batch operation.</param>
		public async Task DeleteBatchesIdAsync(string batch_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "batches/"+ (batch_id==null? "" : System.Uri.EscapeDataString(batch_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get batch operation status
		/// Get the status of a batch request.
		/// GetBatchesId batches/{batch_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="batch_id">The unique id for the batch operation.</param>
		public async Task<GetBatchesIdReturn> GetBatchesIdAsync(string[] fields, string[] exclude_fields, string batch_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "batches/"+ (batch_id==null? "" : System.Uri.EscapeDataString(batch_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetBatchesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List campaign folders
		/// Get all folders used to organize campaigns.
		/// GetCampaignFolders campaign-folders
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		public async Task<GetCampaignFoldersReturn> GetCampaignFoldersAsync(string[] fields, string[] exclude_fields, int count, int offset, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaign-folders?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCampaignFoldersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add campaign folder
		/// Create a new campaign folder.
		/// PostCampaignFolders campaign-folders
		/// </summary>
		public async Task<PostCampaignFoldersReturn> PostCampaignFoldersAsync(PostCampaignFoldersBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaign-folders";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostCampaignFoldersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete campaign folder
		/// Delete a specific campaign folder, and mark all the campaigns in the folder as 'unfiled'.
		/// DeleteCampaignFoldersId campaign-folders/{folder_id}
		/// </summary>
		/// <param name="folder_id">The unique id for the campaign folder.</param>
		public async Task DeleteCampaignFoldersIdAsync(string folder_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaign-folders/"+ (folder_id==null? "" : System.Uri.EscapeDataString(folder_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get campaign folder
		/// Get information about a specific folder used to organize campaigns.
		/// GetCampaignFoldersId campaign-folders/{folder_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="folder_id">The unique id for the campaign folder.</param>
		public async Task<GetCampaignFoldersIdReturn> GetCampaignFoldersIdAsync(string[] fields, string[] exclude_fields, string folder_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaign-folders/"+ (folder_id==null? "" : System.Uri.EscapeDataString(folder_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCampaignFoldersIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update campaign folder
		/// Update a specific folder used to organize campaigns.
		/// PatchCampaignFoldersId campaign-folders/{folder_id}
		/// </summary>
		/// <param name="folder_id">The unique id for the campaign folder.</param>
		public async Task<PatchCampaignFoldersIdReturn> PatchCampaignFoldersIdAsync(string folder_id, PostCampaignFoldersBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaign-folders/"+ (folder_id==null? "" : System.Uri.EscapeDataString(folder_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchCampaignFoldersIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List campaigns
		/// Get all campaigns in an account.
		/// GetCampaigns campaigns
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="type">The campaign type.</param>
		/// <param name="status">The status of the campaign.</param>
		/// <param name="before_send_time">Restrict the response to campaigns sent before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="since_send_time">Restrict the response to campaigns sent after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="before_create_time">Restrict the response to campaigns created before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="since_create_time">Restrict the response to campaigns created after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="list_id">The unique id for the list.</param>
		/// <param name="folder_id">The unique folder id.</param>
		/// <param name="member_id">Retrieve campaigns sent to a particular list member. Member ID is The MD5 hash of the lowercase version of the list memberâ€™s email address.</param>
		/// <param name="sort_field">Returns files sorted by the specified field.</param>
		/// <param name="sort_dir">Determines the order direction for sorted results.</param>
		public async Task<GetCampaignsReturn> GetCampaignsAsync(
					string[] fields, 
					string[] exclude_fields, 
					int count, 
					int offset, 
					GetCampaignsType type, 
					GetCampaignsStatus status, 
					System.DateTimeOffset before_send_time, 
					System.DateTimeOffset since_send_time, 
					System.DateTimeOffset before_create_time, 
					System.DateTimeOffset since_create_time, 
					string list_id, 
					string folder_id, 
					string member_id, 
					GetCampaignsSort_field sort_field, 
					GetCampaignsSort_dir sort_dir, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&type=" + type+"&status=" + status+"&before_send_time=" + before_send_time.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&since_send_time=" + since_send_time.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&before_create_time=" + before_create_time.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&since_create_time=" + since_create_time.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&list_id=" + (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"&folder_id=" + (folder_id==null? "" : System.Uri.EscapeDataString(folder_id))+"&member_id=" + (member_id==null? "" : System.Uri.EscapeDataString(member_id))+"&sort_field=" + sort_field+"&sort_dir=" + sort_dir;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCampaignsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add campaign
		/// Create a new Mailchimp campaign.
		/// PostCampaigns campaigns
		/// </summary>
		public async Task<PostCampaignsReturn> PostCampaignsAsync(PostCampaignsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostCampaignsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete campaign
		/// Remove a campaign from your Mailchimp account.
		/// DeleteCampaignsId campaigns/{campaign_id}
		/// </summary>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task DeleteCampaignsIdAsync(string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get campaign info
		/// Get information about a specific campaign.
		/// GetCampaignsId campaigns/{campaign_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task<GetCampaignsIdReturn> GetCampaignsIdAsync(string[] fields, string[] exclude_fields, string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCampaignsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update campaign settings
		/// Update some or all of the settings for a specific campaign.
		/// PatchCampaignsId campaigns/{campaign_id}
		/// </summary>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task<PatchCampaignsIdReturn> PatchCampaignsIdAsync(string campaign_id, PatchCampaignsIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchCampaignsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Cancel campaign
		/// Cancel a Regular or Plain-Text Campaign after you send, before all of your recipients receive it. This feature is included with Mailchimp Pro.
		/// PostCampaignsIdActionsCancelSend campaigns/{campaign_id}/actions/cancel-send
		/// </summary>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task PostCampaignsIdActionsCancelSendAsync(string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/actions/cancel-send";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Resend campaign
		/// Creates a Resend to Non-Openers version of this campaign. We will also check if this campaign meets the criteria for Resend to Non-Openers campaigns.
		/// PostCampaignsIdActionsCreateResend campaigns/{campaign_id}/actions/create-resend
		/// </summary>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task<PostCampaignsIdActionsCreateResendReturn> PostCampaignsIdActionsCreateResendAsync(string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/actions/create-resend";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostCampaignsIdActionsCreateResendReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Pause rss campaign
		/// Pause an RSS-Driven campaign.
		/// PostCampaignsIdActionsPause campaigns/{campaign_id}/actions/pause
		/// </summary>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task PostCampaignsIdActionsPauseAsync(string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/actions/pause";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Replicate campaign
		/// Replicate a campaign in saved or send status.
		/// PostCampaignsIdActionsReplicate campaigns/{campaign_id}/actions/replicate
		/// </summary>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task<PostCampaignsIdActionsReplicateReturn> PostCampaignsIdActionsReplicateAsync(string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/actions/replicate";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostCampaignsIdActionsReplicateReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Resume rss campaign
		/// Resume an RSS-Driven campaign.
		/// PostCampaignsIdActionsResume campaigns/{campaign_id}/actions/resume
		/// </summary>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task PostCampaignsIdActionsResumeAsync(string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/actions/resume";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Schedule campaign
		/// Schedule a campaign for delivery. If you're using Multivariate Campaigns to test send times or sending RSS Campaigns, use the send action instead.
		/// PostCampaignsIdActionsSchedule campaigns/{campaign_id}/actions/schedule
		/// </summary>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task PostCampaignsIdActionsScheduleAsync(string campaign_id, PostCampaignsIdActionsSchedulePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/actions/schedule";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Send campaign
		/// Send a Mailchimp campaign. For RSS Campaigns, the campaign will send according to its schedule. All other campaigns will send immediately.
		/// PostCampaignsIdActionsSend campaigns/{campaign_id}/actions/send
		/// </summary>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task PostCampaignsIdActionsSendAsync(string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/actions/send";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Send test email
		/// Send a test email.
		/// PostCampaignsIdActionsTest campaigns/{campaign_id}/actions/test
		/// </summary>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task PostCampaignsIdActionsTestAsync(string campaign_id, PostCampaignsIdActionsTestPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/actions/test";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Unschedule campaign
		/// Unschedule a scheduled campaign that hasn't started sending.
		/// PostCampaignsIdActionsUnschedule campaigns/{campaign_id}/actions/unschedule
		/// </summary>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task PostCampaignsIdActionsUnscheduleAsync(string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/actions/unschedule";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get campaign content
		/// Get the the HTML and plain-text content for a campaign.
		/// GetCampaignsIdContent campaigns/{campaign_id}/content
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task<GetCampaignsIdContentReturn> GetCampaignsIdContentAsync(string[] fields, string[] exclude_fields, string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/content?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCampaignsIdContentReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Set campaign content
		/// Set the content for a campaign.
		/// PutCampaignsIdContent campaigns/{campaign_id}/content
		/// </summary>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task<PutCampaignsIdContentReturn> PutCampaignsIdContentAsync(string campaign_id, PutCampaignsIdContentPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/content";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutCampaignsIdContentReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List campaign feedback
		/// Get team feedback while you're working together on a Mailchimp campaign.
		/// GetCampaignsIdFeedback campaigns/{campaign_id}/feedback
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task<GetCampaignsIdFeedbackReturn> GetCampaignsIdFeedbackAsync(string[] fields, string[] exclude_fields, string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/feedback?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCampaignsIdFeedbackReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add campaign feedback
		/// Add feedback on a specific campaign.
		/// PostCampaignsIdFeedback campaigns/{campaign_id}/feedback
		/// </summary>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task<PostCampaignsIdFeedbackReturn> PostCampaignsIdFeedbackAsync(string campaign_id, PostCampaignsIdFeedbackPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/feedback";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostCampaignsIdFeedbackReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete campaign feedback message
		/// Remove a specific feedback message for a campaign.
		/// DeleteCampaignsIdFeedbackId campaigns/{campaign_id}/feedback/{feedback_id}
		/// </summary>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		/// <param name="feedback_id">The unique id for the feedback message.</param>
		public async Task DeleteCampaignsIdFeedbackIdAsync(string campaign_id, string feedback_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/feedback/"+ (feedback_id==null? "" : System.Uri.EscapeDataString(feedback_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get campaign feedback message
		/// Get a specific feedback message from a campaign.
		/// GetCampaignsIdFeedbackId campaigns/{campaign_id}/feedback/{feedback_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		/// <param name="feedback_id">The unique id for the feedback message.</param>
		public async Task<GetCampaignsIdFeedbackIdReturn> GetCampaignsIdFeedbackIdAsync(string[] fields, string[] exclude_fields, string campaign_id, string feedback_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/feedback/"+ (feedback_id==null? "" : System.Uri.EscapeDataString(feedback_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCampaignsIdFeedbackIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update campaign feedback message
		/// Update a specific feedback message for a campaign.
		/// PatchCampaignsIdFeedbackId campaigns/{campaign_id}/feedback/{feedback_id}
		/// </summary>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		/// <param name="feedback_id">The unique id for the feedback message.</param>
		public async Task<PatchCampaignsIdFeedbackIdReturn> PatchCampaignsIdFeedbackIdAsync(string campaign_id, string feedback_id, PatchCampaignsIdFeedbackIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/feedback/"+ (feedback_id==null? "" : System.Uri.EscapeDataString(feedback_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchCampaignsIdFeedbackIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get campaign send checklist
		/// Review the send checklist for a campaign, and resolve any issues before sending.
		/// GetCampaignsIdSendChecklist campaigns/{campaign_id}/send-checklist
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task<GetCampaignsIdSendChecklistReturn> GetCampaignsIdSendChecklistAsync(string[] fields, string[] exclude_fields, string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "campaigns/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/send-checklist?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCampaignsIdSendChecklistReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List connected sites
		/// Get all connected sites in an account.
		/// GetConnectedSites connected-sites
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		public async Task<GetConnectedSitesReturn> GetConnectedSitesAsync(string[] fields, string[] exclude_fields, int count, int offset, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "connected-sites?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetConnectedSitesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add connected site
		/// Create a new Mailchimp connected site.
		/// PostConnectedSites connected-sites
		/// </summary>
		public async Task<PostConnectedSitesReturn> PostConnectedSitesAsync(PostConnectedSitesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "connected-sites";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostConnectedSitesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete connected site
		/// Remove a connected site from your Mailchimp account.
		/// DeleteConnectedSitesId connected-sites/{connected_site_id}
		/// </summary>
		/// <param name="connected_site_id">The unique identifier for the site.</param>
		public async Task DeleteConnectedSitesIdAsync(string connected_site_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "connected-sites/"+ (connected_site_id==null? "" : System.Uri.EscapeDataString(connected_site_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get connected site
		/// Get information about a specific connected site.
		/// GetConnectedSitesId connected-sites/{connected_site_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="connected_site_id">The unique identifier for the site.</param>
		public async Task<GetConnectedSitesIdReturn> GetConnectedSitesIdAsync(string[] fields, string[] exclude_fields, string connected_site_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "connected-sites/"+ (connected_site_id==null? "" : System.Uri.EscapeDataString(connected_site_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetConnectedSitesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Verify connected site script
		/// Verify that the connected sites script has been installed, either via the script URL or fragment.
		/// PostConnectedSitesIdActionsVerifyScriptInstallation connected-sites/{connected_site_id}/actions/verify-script-installation
		/// </summary>
		/// <param name="connected_site_id">The unique identifier for the site.</param>
		public async Task PostConnectedSitesIdActionsVerifyScriptInstallationAsync(string connected_site_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "connected-sites/"+ (connected_site_id==null? "" : System.Uri.EscapeDataString(connected_site_id))+"/actions/verify-script-installation";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List conversations
		/// Get a list of conversations for the account. Conversations has been deprecated in favor of Inbox and these endpoints don't include Inbox data. Past Conversations are still available via this endpoint, but new campaign replies and other Inbox messages arenâ€™t available using this endpoint.
		/// GetConversations conversations
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="has_unread_messages">Whether the conversation has any unread messages.</param>
		/// <param name="list_id">The unique id for the list.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task<GetConversationsReturn> GetConversationsAsync(string[] fields, string[] exclude_fields, int count, int offset, GetConversationsHas_unread_messages has_unread_messages, string list_id, string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "conversations?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&has_unread_messages=" + has_unread_messages+"&list_id=" + (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"&campaign_id=" + (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetConversationsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get conversation
		/// Get details about an individual conversation. Conversations has been deprecated in favor of Inbox and these endpoints don't include Inbox data. Past Conversations are still available via this endpoint, but new campaign replies and other Inbox messages arenâ€™t available using this endpoint.
		/// GetConversationsId conversations/{conversation_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="conversation_id">The unique id for the conversation.</param>
		public async Task<GetConversationsIdReturn> GetConversationsIdAsync(string[] fields, string[] exclude_fields, string conversation_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "conversations/"+ (conversation_id==null? "" : System.Uri.EscapeDataString(conversation_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetConversationsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List messages
		/// Get messages from a specific conversation. Conversations has been deprecated in favor of Inbox and these endpoints don't include Inbox data. Past Conversations are still available via this endpoint, but new campaign replies and other Inbox messages arenâ€™t available using this endpoint.
		/// GetConversationsIdMessages conversations/{conversation_id}/messages
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="conversation_id">The unique id for the conversation.</param>
		/// <param name="is_read">Whether a conversation message has been marked as read.</param>
		/// <param name="before_timestamp">Restrict the response to messages created before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="since_timestamp">Restrict the response to messages created after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		public async Task<GetConversationsIdMessagesReturn> GetConversationsIdMessagesAsync(string[] fields, string[] exclude_fields, string conversation_id, GetConversationsIdMessagesIs_read is_read, System.DateTimeOffset before_timestamp, System.DateTimeOffset since_timestamp, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "conversations/"+ (conversation_id==null? "" : System.Uri.EscapeDataString(conversation_id))+"/messages?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&is_read=" + is_read+"&before_timestamp=" + before_timestamp.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&since_timestamp=" + since_timestamp.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ");
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetConversationsIdMessagesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get message
		/// Get an individual message in a conversation. Conversations has been deprecated in favor of Inbox and these endpoints don't include Inbox data. Past Conversations are still available via this endpoint, but new campaign replies and other Inbox messages arenâ€™t available using this endpoint.
		/// GetConversationsIdMessagesId conversations/{conversation_id}/messages/{message_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="conversation_id">The unique id for the conversation.</param>
		/// <param name="message_id">The unique id for the conversation message.</param>
		public async Task<GetConversationsIdMessagesIdReturn> GetConversationsIdMessagesIdAsync(string[] fields, string[] exclude_fields, string conversation_id, string message_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "conversations/"+ (conversation_id==null? "" : System.Uri.EscapeDataString(conversation_id))+"/messages/"+ (message_id==null? "" : System.Uri.EscapeDataString(message_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetConversationsIdMessagesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Customer Journeys API trigger for a contact
		/// A step trigger in a Customer Journey. To use it, create a starting point or step from the Customer Journey builder in the app using the Customer Journeys API condition. Weâ€™ll provide a url during the process that includes the {journey_id} and {step_id}. Youâ€™ll then be able to use this endpoint to trigger the condition for the posted contact.
		/// PostCustomerJourneysJourneysIdStepsIdActionsTrigger customer-journeys/journeys/{journey_id}/steps/{step_id}/actions/trigger
		/// </summary>
		/// <param name="journey_id">The id for the Journey.</param>
		/// <param name="step_id">The id for the Step.</param>
		public async Task PostCustomerJourneysJourneysIdStepsIdActionsTriggerAsync(int journey_id, int step_id, PostCustomerJourneysJourneysIdStepsIdActionsTriggerPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "customer-journeys/journeys/"+journey_id+"/steps/"+step_id+"/actions/trigger";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List account orders
		/// Get information about an account's orders.
		/// GetEcommerceOrders ecommerce/orders
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="campaign_id">Restrict results to orders with a specific `campaign_id` value.</param>
		/// <param name="outreach_id">Restrict results to orders with a specific `outreach_id` value.</param>
		/// <param name="customer_id">Restrict results to orders made by a specific customer.</param>
		/// <param name="has_outreach">Restrict results to orders that have an outreach attached. For example, an email campaign or Facebook ad.</param>
		public async Task<GetEcommerceOrdersReturn> GetEcommerceOrdersAsync(string[] fields, string[] exclude_fields, int count, int offset, string campaign_id, string outreach_id, string customer_id, bool has_outreach, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/orders?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&campaign_id=" + (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"&outreach_id=" + (outreach_id==null? "" : System.Uri.EscapeDataString(outreach_id))+"&customer_id=" + (customer_id==null? "" : System.Uri.EscapeDataString(customer_id))+"&has_outreach="+has_outreach;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceOrdersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List stores
		/// Get information about all stores in the account.
		/// GetEcommerceStores ecommerce/stores
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		public async Task<GetEcommerceStoresReturn> GetEcommerceStoresAsync(string[] fields, string[] exclude_fields, int count, int offset, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add store
		/// Add a new store to your Mailchimp account.
		/// PostEcommerceStores ecommerce/stores
		/// </summary>
		public async Task<PostEcommerceStoresReturn> PostEcommerceStoresAsync(PostEcommerceStoresPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostEcommerceStoresReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete store
		/// Delete a store. Deleting a store will also delete any associated subresources, including Customers, Orders, Products, and Carts.
		/// DeleteEcommerceStoresId ecommerce/stores/{store_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		public async Task DeleteEcommerceStoresIdAsync(string store_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get store info
		/// Get information about a specific store.
		/// GetEcommerceStoresId ecommerce/stores/{store_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="store_id">The store id.</param>
		public async Task<GetEcommerceStoresIdReturn> GetEcommerceStoresIdAsync(string[] fields, string[] exclude_fields, string store_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update store
		/// Update a store.
		/// PatchEcommerceStoresId ecommerce/stores/{store_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		public async Task<PatchEcommerceStoresIdReturn> PatchEcommerceStoresIdAsync(string store_id, PatchEcommerceStoresIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchEcommerceStoresIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List carts
		/// Get information about a store's carts.
		/// GetEcommerceStoresIdCarts ecommerce/stores/{store_id}/carts
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="store_id">The store id.</param>
		public async Task<GetEcommerceStoresIdCartsReturn> GetEcommerceStoresIdCartsAsync(string[] fields, string[] exclude_fields, int count, int offset, string store_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/carts?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdCartsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add cart
		/// Add a new cart to a store.
		/// PostEcommerceStoresIdCarts ecommerce/stores/{store_id}/carts
		/// </summary>
		/// <param name="store_id">The store id.</param>
		public async Task<PostEcommerceStoresIdCartsReturn> PostEcommerceStoresIdCartsAsync(string store_id, PostEcommerceStoresIdCartsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/carts";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostEcommerceStoresIdCartsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete cart
		/// Delete a cart.
		/// DeleteEcommerceStoresIdCartsId ecommerce/stores/{store_id}/carts/{cart_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="cart_id">The id for the cart.</param>
		public async Task DeleteEcommerceStoresIdCartsIdAsync(string store_id, string cart_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/carts/"+ (cart_id==null? "" : System.Uri.EscapeDataString(cart_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get cart info
		/// Get information about a specific cart.
		/// GetEcommerceStoresIdCartsId ecommerce/stores/{store_id}/carts/{cart_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="store_id">The store id.</param>
		/// <param name="cart_id">The id for the cart.</param>
		public async Task<GetEcommerceStoresIdCartsIdReturn> GetEcommerceStoresIdCartsIdAsync(string[] fields, string[] exclude_fields, string store_id, string cart_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/carts/"+ (cart_id==null? "" : System.Uri.EscapeDataString(cart_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdCartsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update cart
		/// Update a specific cart.
		/// PatchEcommerceStoresIdCartsId ecommerce/stores/{store_id}/carts/{cart_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="cart_id">The id for the cart.</param>
		public async Task<PatchEcommerceStoresIdCartsIdReturn> PatchEcommerceStoresIdCartsIdAsync(string store_id, string cart_id, PatchEcommerceStoresIdCartsIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/carts/"+ (cart_id==null? "" : System.Uri.EscapeDataString(cart_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchEcommerceStoresIdCartsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List cart line items
		/// Get information about a cart's line items.
		/// GetEcommerceStoresIdCartsIdLines ecommerce/stores/{store_id}/carts/{cart_id}/lines
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="store_id">The store id.</param>
		/// <param name="cart_id">The id for the cart.</param>
		public async Task<GetEcommerceStoresIdCartsIdLinesReturn> GetEcommerceStoresIdCartsIdLinesAsync(string[] fields, string[] exclude_fields, int count, int offset, string store_id, string cart_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/carts/"+ (cart_id==null? "" : System.Uri.EscapeDataString(cart_id))+"/lines?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdCartsIdLinesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add cart line item
		/// Add a new line item to an existing cart.
		/// PostEcommerceStoresIdCartsIdLines ecommerce/stores/{store_id}/carts/{cart_id}/lines
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="cart_id">The id for the cart.</param>
		public async Task<PostEcommerceStoresIdCartsIdLinesReturn> PostEcommerceStoresIdCartsIdLinesAsync(string store_id, string cart_id, PostEcommerceStoresIdCartsIdLinesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/carts/"+ (cart_id==null? "" : System.Uri.EscapeDataString(cart_id))+"/lines";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostEcommerceStoresIdCartsIdLinesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete cart line item
		/// Delete a specific cart line item.
		/// DeleteEcommerceStoresIdCartsLinesId ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="cart_id">The id for the cart.</param>
		/// <param name="line_id">The id for the line item of a cart.</param>
		public async Task DeleteEcommerceStoresIdCartsLinesIdAsync(string store_id, string cart_id, string line_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/carts/"+ (cart_id==null? "" : System.Uri.EscapeDataString(cart_id))+"/lines/"+ (line_id==null? "" : System.Uri.EscapeDataString(line_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get cart line item
		/// Get information about a specific cart line item.
		/// GetEcommerceStoresIdCartsIdLinesId ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="store_id">The store id.</param>
		/// <param name="cart_id">The id for the cart.</param>
		/// <param name="line_id">The id for the line item of a cart.</param>
		public async Task<GetEcommerceStoresIdCartsIdLinesIdReturn> GetEcommerceStoresIdCartsIdLinesIdAsync(string[] fields, string[] exclude_fields, string store_id, string cart_id, string line_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/carts/"+ (cart_id==null? "" : System.Uri.EscapeDataString(cart_id))+"/lines/"+ (line_id==null? "" : System.Uri.EscapeDataString(line_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdCartsIdLinesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update cart line item
		/// Update a specific cart line item.
		/// PatchEcommerceStoresIdCartsIdLinesId ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="cart_id">The id for the cart.</param>
		/// <param name="line_id">The id for the line item of a cart.</param>
		public async Task<PatchEcommerceStoresIdCartsIdLinesIdReturn> PatchEcommerceStoresIdCartsIdLinesIdAsync(string store_id, string cart_id, string line_id, PatchEcommerceStoresIdCartsIdLinesIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/carts/"+ (cart_id==null? "" : System.Uri.EscapeDataString(cart_id))+"/lines/"+ (line_id==null? "" : System.Uri.EscapeDataString(line_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchEcommerceStoresIdCartsIdLinesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List customers
		/// Get information about a store's customers.
		/// GetEcommerceStoresIdCustomers ecommerce/stores/{store_id}/customers
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="store_id">The store id.</param>
		/// <param name="email_address">Restrict the response to customers with the email address.</param>
		public async Task<GetEcommerceStoresIdCustomersReturn> GetEcommerceStoresIdCustomersAsync(string[] fields, string[] exclude_fields, int count, int offset, string store_id, string email_address, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/customers?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&email_address=" + (email_address==null? "" : System.Uri.EscapeDataString(email_address));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdCustomersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add customer
		/// Add a new customer to a store.
		/// PostEcommerceStoresIdCustomers ecommerce/stores/{store_id}/customers
		/// </summary>
		/// <param name="store_id">The store id.</param>
		public async Task<PostEcommerceStoresIdCustomersReturn> PostEcommerceStoresIdCustomersAsync(string store_id, PostEcommerceStoresIdCustomersPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/customers";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostEcommerceStoresIdCustomersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete customer
		/// Delete a customer from a store.
		/// DeleteEcommerceStoresIdCustomersId ecommerce/stores/{store_id}/customers/{customer_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="customer_id">The id for the customer of a store.</param>
		public async Task DeleteEcommerceStoresIdCustomersIdAsync(string store_id, string customer_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/customers/"+ (customer_id==null? "" : System.Uri.EscapeDataString(customer_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get customer info
		/// Get information about a specific customer.
		/// GetEcommerceStoresIdCustomersId ecommerce/stores/{store_id}/customers/{customer_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="store_id">The store id.</param>
		/// <param name="customer_id">The id for the customer of a store.</param>
		public async Task<GetEcommerceStoresIdCustomersIdReturn> GetEcommerceStoresIdCustomersIdAsync(string[] fields, string[] exclude_fields, string store_id, string customer_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/customers/"+ (customer_id==null? "" : System.Uri.EscapeDataString(customer_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdCustomersIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update customer
		/// Update a customer.
		/// PatchEcommerceStoresIdCustomersId ecommerce/stores/{store_id}/customers/{customer_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="customer_id">The id for the customer of a store.</param>
		public async Task<PatchEcommerceStoresIdCustomersIdReturn> PatchEcommerceStoresIdCustomersIdAsync(string store_id, string customer_id, PatchEcommerceStoresIdCustomersIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/customers/"+ (customer_id==null? "" : System.Uri.EscapeDataString(customer_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchEcommerceStoresIdCustomersIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add or update customer
		/// Add or update a customer.
		/// PutEcommerceStoresIdCustomersId ecommerce/stores/{store_id}/customers/{customer_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="customer_id">The id for the customer of a store.</param>
		public async Task<PutEcommerceStoresIdCustomersIdReturn> PutEcommerceStoresIdCustomersIdAsync(string store_id, string customer_id, PutEcommerceStoresIdCustomersIdPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/customers/"+ (customer_id==null? "" : System.Uri.EscapeDataString(customer_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutEcommerceStoresIdCustomersIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List orders
		/// Get information about a store's orders.
		/// GetEcommerceStoresIdOrders ecommerce/stores/{store_id}/orders
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="store_id">The store id.</param>
		/// <param name="customer_id">Restrict results to orders made by a specific customer.</param>
		/// <param name="has_outreach">Restrict results to orders that have an outreach attached. For example, an email campaign or Facebook ad.</param>
		/// <param name="campaign_id">Restrict results to orders with a specific `campaign_id` value.</param>
		/// <param name="outreach_id">Restrict results to orders with a specific `outreach_id` value.</param>
		public async Task<GetEcommerceStoresIdOrdersReturn> GetEcommerceStoresIdOrdersAsync(string[] fields, string[] exclude_fields, int count, int offset, string store_id, string customer_id, bool has_outreach, string campaign_id, string outreach_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/orders?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&customer_id=" + (customer_id==null? "" : System.Uri.EscapeDataString(customer_id))+"&has_outreach="+has_outreach+"&campaign_id=" + (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"&outreach_id=" + (outreach_id==null? "" : System.Uri.EscapeDataString(outreach_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdOrdersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add order
		/// Add a new order to a store.
		/// PostEcommerceStoresIdOrders ecommerce/stores/{store_id}/orders
		/// </summary>
		/// <param name="store_id">The store id.</param>
		public async Task<PostEcommerceStoresIdOrdersReturn> PostEcommerceStoresIdOrdersAsync(string store_id, PostEcommerceStoresIdOrdersPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/orders";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostEcommerceStoresIdOrdersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete order
		/// Delete an order.
		/// DeleteEcommerceStoresIdOrdersId ecommerce/stores/{store_id}/orders/{order_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="order_id">The id for the order in a store.</param>
		public async Task DeleteEcommerceStoresIdOrdersIdAsync(string store_id, string order_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/orders/"+ (order_id==null? "" : System.Uri.EscapeDataString(order_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get order info
		/// Get information about a specific order.
		/// GetEcommerceStoresIdOrdersId ecommerce/stores/{store_id}/orders/{order_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="store_id">The store id.</param>
		/// <param name="order_id">The id for the order in a store.</param>
		public async Task<GetEcommerceStoresIdOrdersIdReturn> GetEcommerceStoresIdOrdersIdAsync(string[] fields, string[] exclude_fields, string store_id, string order_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/orders/"+ (order_id==null? "" : System.Uri.EscapeDataString(order_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdOrdersIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update order
		/// Update a specific order.
		/// PatchEcommerceStoresIdOrdersId ecommerce/stores/{store_id}/orders/{order_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="order_id">The id for the order in a store.</param>
		public async Task<PatchEcommerceStoresIdOrdersIdReturn> PatchEcommerceStoresIdOrdersIdAsync(string store_id, string order_id, PatchEcommerceStoresIdOrdersIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/orders/"+ (order_id==null? "" : System.Uri.EscapeDataString(order_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchEcommerceStoresIdOrdersIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List order line items
		/// Get information about an order's line items.
		/// GetEcommerceStoresIdOrdersIdLines ecommerce/stores/{store_id}/orders/{order_id}/lines
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="store_id">The store id.</param>
		/// <param name="order_id">The id for the order in a store.</param>
		public async Task<GetEcommerceStoresIdOrdersIdLinesReturn> GetEcommerceStoresIdOrdersIdLinesAsync(string[] fields, string[] exclude_fields, int count, int offset, string store_id, string order_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/orders/"+ (order_id==null? "" : System.Uri.EscapeDataString(order_id))+"/lines?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdOrdersIdLinesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add order line item
		/// Add a new line item to an existing order.
		/// PostEcommerceStoresIdOrdersIdLines ecommerce/stores/{store_id}/orders/{order_id}/lines
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="order_id">The id for the order in a store.</param>
		public async Task<PostEcommerceStoresIdOrdersIdLinesReturn> PostEcommerceStoresIdOrdersIdLinesAsync(string store_id, string order_id, PostEcommerceStoresIdOrdersIdLinesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/orders/"+ (order_id==null? "" : System.Uri.EscapeDataString(order_id))+"/lines";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostEcommerceStoresIdOrdersIdLinesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete order line item
		/// Delete a specific order line item.
		/// DeleteEcommerceStoresIdOrdersIdLinesId ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="order_id">The id for the order in a store.</param>
		/// <param name="line_id">The id for the line item of an order.</param>
		public async Task DeleteEcommerceStoresIdOrdersIdLinesIdAsync(string store_id, string order_id, string line_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/orders/"+ (order_id==null? "" : System.Uri.EscapeDataString(order_id))+"/lines/"+ (line_id==null? "" : System.Uri.EscapeDataString(line_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get order line item
		/// Get information about a specific order line item.
		/// GetEcommerceStoresIdOrdersIdLinesId ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="store_id">The store id.</param>
		/// <param name="order_id">The id for the order in a store.</param>
		/// <param name="line_id">The id for the line item of an order.</param>
		public async Task<GetEcommerceStoresIdOrdersIdLinesIdReturn> GetEcommerceStoresIdOrdersIdLinesIdAsync(string[] fields, string[] exclude_fields, string store_id, string order_id, string line_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/orders/"+ (order_id==null? "" : System.Uri.EscapeDataString(order_id))+"/lines/"+ (line_id==null? "" : System.Uri.EscapeDataString(line_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdOrdersIdLinesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update order line item
		/// Update a specific order line item.
		/// PatchEcommerceStoresIdOrdersIdLinesId ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="order_id">The id for the order in a store.</param>
		/// <param name="line_id">The id for the line item of an order.</param>
		public async Task<PatchEcommerceStoresIdOrdersIdLinesIdReturn> PatchEcommerceStoresIdOrdersIdLinesIdAsync(string store_id, string order_id, string line_id, PatchEcommerceStoresIdOrdersIdLinesIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/orders/"+ (order_id==null? "" : System.Uri.EscapeDataString(order_id))+"/lines/"+ (line_id==null? "" : System.Uri.EscapeDataString(line_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchEcommerceStoresIdOrdersIdLinesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List product
		/// Get information about a store's products.
		/// GetEcommerceStoresIdProducts ecommerce/stores/{store_id}/products
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="store_id">The store id.</param>
		public async Task<GetEcommerceStoresIdProductsReturn> GetEcommerceStoresIdProductsAsync(string[] fields, string[] exclude_fields, int count, int offset, string store_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/products?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdProductsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add product
		/// Add a new product to a store.
		/// PostEcommerceStoresIdProducts ecommerce/stores/{store_id}/products
		/// </summary>
		/// <param name="store_id">The store id.</param>
		public async Task<PostEcommerceStoresIdProductsReturn> PostEcommerceStoresIdProductsAsync(string store_id, PostEcommerceStoresIdProductsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/products";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostEcommerceStoresIdProductsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete product
		/// Delete a product.
		/// DeleteEcommerceStoresIdProductsId ecommerce/stores/{store_id}/products/{product_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="product_id">The id for the product of a store.</param>
		public async Task DeleteEcommerceStoresIdProductsIdAsync(string store_id, string product_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/products/"+ (product_id==null? "" : System.Uri.EscapeDataString(product_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get product info
		/// Get information about a specific product.
		/// GetEcommerceStoresIdProductsId ecommerce/stores/{store_id}/products/{product_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="store_id">The store id.</param>
		/// <param name="product_id">The id for the product of a store.</param>
		public async Task<GetEcommerceStoresIdProductsIdReturn> GetEcommerceStoresIdProductsIdAsync(string[] fields, string[] exclude_fields, string store_id, string product_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/products/"+ (product_id==null? "" : System.Uri.EscapeDataString(product_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdProductsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update product
		/// Update a specific product.
		/// PatchEcommerceStoresIdProductsId ecommerce/stores/{store_id}/products/{product_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="product_id">The id for the product of a store.</param>
		public async Task<PatchEcommerceStoresIdProductsIdReturn> PatchEcommerceStoresIdProductsIdAsync(string store_id, string product_id, PatchEcommerceStoresIdProductsIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/products/"+ (product_id==null? "" : System.Uri.EscapeDataString(product_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchEcommerceStoresIdProductsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List product images
		/// Get information about a product's images.
		/// GetEcommerceStoresIdProductsIdImages ecommerce/stores/{store_id}/products/{product_id}/images
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="store_id">The store id.</param>
		/// <param name="product_id">The id for the product of a store.</param>
		public async Task<GetEcommerceStoresIdProductsIdImagesReturn> GetEcommerceStoresIdProductsIdImagesAsync(string[] fields, string[] exclude_fields, int count, int offset, string store_id, string product_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/products/"+ (product_id==null? "" : System.Uri.EscapeDataString(product_id))+"/images?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdProductsIdImagesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add product image
		/// Add a new image to the product.
		/// PostEcommerceStoresIdProductsIdImages ecommerce/stores/{store_id}/products/{product_id}/images
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="product_id">The id for the product of a store.</param>
		public async Task<PostEcommerceStoresIdProductsIdImagesReturn> PostEcommerceStoresIdProductsIdImagesAsync(string store_id, string product_id, PostEcommerceStoresIdProductsIdImagesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/products/"+ (product_id==null? "" : System.Uri.EscapeDataString(product_id))+"/images";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostEcommerceStoresIdProductsIdImagesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete product image
		/// Delete a product image.
		/// DeleteEcommerceStoresIdProductsIdImagesId ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="product_id">The id for the product of a store.</param>
		/// <param name="image_id">The id for the product image.</param>
		public async Task DeleteEcommerceStoresIdProductsIdImagesIdAsync(string store_id, string product_id, string image_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/products/"+ (product_id==null? "" : System.Uri.EscapeDataString(product_id))+"/images/"+ (image_id==null? "" : System.Uri.EscapeDataString(image_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get product image info
		/// Get information about a specific product image.
		/// GetEcommerceStoresIdProductsIdImagesId ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="store_id">The store id.</param>
		/// <param name="product_id">The id for the product of a store.</param>
		/// <param name="image_id">The id for the product image.</param>
		public async Task<GetEcommerceStoresIdProductsIdImagesIdReturn> GetEcommerceStoresIdProductsIdImagesIdAsync(string[] fields, string[] exclude_fields, string store_id, string product_id, string image_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/products/"+ (product_id==null? "" : System.Uri.EscapeDataString(product_id))+"/images/"+ (image_id==null? "" : System.Uri.EscapeDataString(image_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdProductsIdImagesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update product image
		/// Update a product image.
		/// PatchEcommerceStoresIdProductsIdImagesId ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="product_id">The id for the product of a store.</param>
		/// <param name="image_id">The id for the product image.</param>
		public async Task<PatchEcommerceStoresIdProductsIdImagesIdReturn> PatchEcommerceStoresIdProductsIdImagesIdAsync(string store_id, string product_id, string image_id, PatchEcommerceStoresIdProductsIdImagesIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/products/"+ (product_id==null? "" : System.Uri.EscapeDataString(product_id))+"/images/"+ (image_id==null? "" : System.Uri.EscapeDataString(image_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchEcommerceStoresIdProductsIdImagesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List product variants
		/// Get information about a product's variants.
		/// GetEcommerceStoresIdProductsIdVariants ecommerce/stores/{store_id}/products/{product_id}/variants
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="store_id">The store id.</param>
		/// <param name="product_id">The id for the product of a store.</param>
		public async Task<GetEcommerceStoresIdProductsIdVariantsReturn> GetEcommerceStoresIdProductsIdVariantsAsync(string[] fields, string[] exclude_fields, int count, int offset, string store_id, string product_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/products/"+ (product_id==null? "" : System.Uri.EscapeDataString(product_id))+"/variants?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdProductsIdVariantsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add product variant
		/// Add a new variant to the product.
		/// PostEcommerceStoresIdProductsIdVariants ecommerce/stores/{store_id}/products/{product_id}/variants
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="product_id">The id for the product of a store.</param>
		public async Task<PostEcommerceStoresIdProductsIdVariantsReturn> PostEcommerceStoresIdProductsIdVariantsAsync(string store_id, string product_id, PostEcommerceStoresIdProductsIdVariantsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/products/"+ (product_id==null? "" : System.Uri.EscapeDataString(product_id))+"/variants";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostEcommerceStoresIdProductsIdVariantsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete product variant
		/// Delete a product variant.
		/// DeleteEcommerceStoresIdProductsIdVariantsId ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="product_id">The id for the product of a store.</param>
		/// <param name="variant_id">The id for the product variant.</param>
		public async Task DeleteEcommerceStoresIdProductsIdVariantsIdAsync(string store_id, string product_id, string variant_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/products/"+ (product_id==null? "" : System.Uri.EscapeDataString(product_id))+"/variants/"+ (variant_id==null? "" : System.Uri.EscapeDataString(variant_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get product variant info
		/// Get information about a specific product variant.
		/// GetEcommerceStoresIdProductsIdVariantsId ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="store_id">The store id.</param>
		/// <param name="product_id">The id for the product of a store.</param>
		/// <param name="variant_id">The id for the product variant.</param>
		public async Task<GetEcommerceStoresIdProductsIdVariantsIdReturn> GetEcommerceStoresIdProductsIdVariantsIdAsync(string[] fields, string[] exclude_fields, string store_id, string product_id, string variant_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/products/"+ (product_id==null? "" : System.Uri.EscapeDataString(product_id))+"/variants/"+ (variant_id==null? "" : System.Uri.EscapeDataString(variant_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdProductsIdVariantsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update product variant
		/// Update a product variant.
		/// PatchEcommerceStoresIdProductsIdVariantsId ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="product_id">The id for the product of a store.</param>
		/// <param name="variant_id">The id for the product variant.</param>
		public async Task<PatchEcommerceStoresIdProductsIdVariantsIdReturn> PatchEcommerceStoresIdProductsIdVariantsIdAsync(string store_id, string product_id, string variant_id, PatchEcommerceStoresIdProductsIdVariantsIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/products/"+ (product_id==null? "" : System.Uri.EscapeDataString(product_id))+"/variants/"+ (variant_id==null? "" : System.Uri.EscapeDataString(variant_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchEcommerceStoresIdProductsIdVariantsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add or update product variant
		/// Add or update a product variant.
		/// PutEcommerceStoresIdProductsIdVariantsId ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="product_id">The id for the product of a store.</param>
		/// <param name="variant_id">The id for the product variant.</param>
		public async Task<PutEcommerceStoresIdProductsIdVariantsIdReturn> PutEcommerceStoresIdProductsIdVariantsIdAsync(string store_id, string product_id, string variant_id, PostEcommerceStoresIdProductsIdVariantsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/products/"+ (product_id==null? "" : System.Uri.EscapeDataString(product_id))+"/variants/"+ (variant_id==null? "" : System.Uri.EscapeDataString(variant_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutEcommerceStoresIdProductsIdVariantsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List promo rules
		/// Get information about a store's promo rules.
		/// GetEcommerceStoresIdPromorules ecommerce/stores/{store_id}/promo-rules
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="store_id">The store id.</param>
		public async Task<GetEcommerceStoresIdPromorulesReturn> GetEcommerceStoresIdPromorulesAsync(string[] fields, string[] exclude_fields, int count, int offset, string store_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/promo-rules?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdPromorulesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add promo rule
		/// Add a new promo rule to a store.
		/// PostEcommerceStoresIdPromorules ecommerce/stores/{store_id}/promo-rules
		/// </summary>
		/// <param name="store_id">The store id.</param>
		public async Task<PostEcommerceStoresIdPromorulesReturn> PostEcommerceStoresIdPromorulesAsync(string store_id, PostEcommerceStoresIdPromorulesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/promo-rules";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostEcommerceStoresIdPromorulesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete promo rule
		/// Delete a promo rule from a store.
		/// DeleteEcommerceStoresIdPromorulesId ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="promo_rule_id">The id for the promo rule of a store.</param>
		public async Task DeleteEcommerceStoresIdPromorulesIdAsync(string store_id, string promo_rule_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/promo-rules/"+ (promo_rule_id==null? "" : System.Uri.EscapeDataString(promo_rule_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get promo rule
		/// Get information about a specific promo rule.
		/// GetEcommerceStoresIdPromorulesId ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="store_id">The store id.</param>
		/// <param name="promo_rule_id">The id for the promo rule of a store.</param>
		public async Task<GetEcommerceStoresIdPromorulesIdReturn> GetEcommerceStoresIdPromorulesIdAsync(string[] fields, string[] exclude_fields, string store_id, string promo_rule_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/promo-rules/"+ (promo_rule_id==null? "" : System.Uri.EscapeDataString(promo_rule_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdPromorulesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update promo rule
		/// Update a promo rule.
		/// PatchEcommerceStoresIdPromorulesId ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="promo_rule_id">The id for the promo rule of a store.</param>
		public async Task<PatchEcommerceStoresIdPromorulesIdReturn> PatchEcommerceStoresIdPromorulesIdAsync(string store_id, string promo_rule_id, PatchEcommerceStoresIdPromorulesIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/promo-rules/"+ (promo_rule_id==null? "" : System.Uri.EscapeDataString(promo_rule_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchEcommerceStoresIdPromorulesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List promo codes
		/// Get information about a store's promo codes.
		/// GetEcommerceStoresIdPromocodes ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="promo_rule_id">The id for the promo rule of a store.</param>
		/// <param name="store_id">The store id.</param>
		public async Task<GetEcommerceStoresIdPromocodesReturn> GetEcommerceStoresIdPromocodesAsync(string[] fields, string[] exclude_fields, int count, int offset, string promo_rule_id, string store_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/promo-rules/"+ (promo_rule_id==null? "" : System.Uri.EscapeDataString(promo_rule_id))+"/promo-codes?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdPromocodesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add promo code
		/// Add a new promo code to a store.
		/// PostEcommerceStoresIdPromocodes ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="promo_rule_id">The id for the promo rule of a store.</param>
		public async Task<PostEcommerceStoresIdPromocodesReturn> PostEcommerceStoresIdPromocodesAsync(string store_id, string promo_rule_id, PostEcommerceStoresIdPromocodesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/promo-rules/"+ (promo_rule_id==null? "" : System.Uri.EscapeDataString(promo_rule_id))+"/promo-codes";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostEcommerceStoresIdPromocodesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete promo code
		/// Delete a promo code from a store.
		/// DeleteEcommerceStoresIdPromocodesId ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="promo_rule_id">The id for the promo rule of a store.</param>
		/// <param name="promo_code_id">The id for the promo code of a store.</param>
		public async Task DeleteEcommerceStoresIdPromocodesIdAsync(string store_id, string promo_rule_id, string promo_code_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/promo-rules/"+ (promo_rule_id==null? "" : System.Uri.EscapeDataString(promo_rule_id))+"/promo-codes/"+ (promo_code_id==null? "" : System.Uri.EscapeDataString(promo_code_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get promo code
		/// Get information about a specific promo code.
		/// GetEcommerceStoresIdPromocodesId ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="store_id">The store id.</param>
		/// <param name="promo_rule_id">The id for the promo rule of a store.</param>
		/// <param name="promo_code_id">The id for the promo code of a store.</param>
		public async Task<GetEcommerceStoresIdPromocodesIdReturn> GetEcommerceStoresIdPromocodesIdAsync(string[] fields, string[] exclude_fields, string store_id, string promo_rule_id, string promo_code_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/promo-rules/"+ (promo_rule_id==null? "" : System.Uri.EscapeDataString(promo_rule_id))+"/promo-codes/"+ (promo_code_id==null? "" : System.Uri.EscapeDataString(promo_code_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEcommerceStoresIdPromocodesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update promo code
		/// Update a promo code.
		/// PatchEcommerceStoresIdPromocodesId ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}/promo-codes/{promo_code_id}
		/// </summary>
		/// <param name="store_id">The store id.</param>
		/// <param name="promo_rule_id">The id for the promo rule of a store.</param>
		/// <param name="promo_code_id">The id for the promo code of a store.</param>
		public async Task<PatchEcommerceStoresIdPromocodesIdReturn> PatchEcommerceStoresIdPromocodesIdAsync(string store_id, string promo_rule_id, string promo_code_id, PatchEcommerceStoresIdPromocodesIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ecommerce/stores/"+ (store_id==null? "" : System.Uri.EscapeDataString(store_id))+"/promo-rules/"+ (promo_rule_id==null? "" : System.Uri.EscapeDataString(promo_rule_id))+"/promo-codes/"+ (promo_code_id==null? "" : System.Uri.EscapeDataString(promo_code_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchEcommerceStoresIdPromocodesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List facebook ads
		/// Get list of Facebook ads.
		/// GetAllFacebookAds facebook-ads
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="sort_field">Returns files sorted by the specified field.</param>
		/// <param name="sort_dir">Determines the order direction for sorted results.</param>
		/// <returns>List of Facebook Ad Instances</returns>
		public async Task<GetAllFacebookAdsReturn> GetAllFacebookAdsAsync(string[] fields, string[] exclude_fields, int count, int offset, GetAllFacebookAdsSort_field sort_field, GetCampaignsSort_dir sort_dir, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "facebook-ads?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&sort_field=" + sort_field+"&sort_dir=" + sort_dir;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAllFacebookAdsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get facebook ad info
		/// Get details of a Facebook ad.
		/// GetFacebookAdsId facebook-ads/{outreach_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="outreach_id">The outreach id.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <returns>Facebook Ad Instance</returns>
		public async Task<GetFacebookAdsIdReturn> GetFacebookAdsIdAsync(string[] fields, string outreach_id, string[] exclude_fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "facebook-ads/"+ (outreach_id==null? "" : System.Uri.EscapeDataString(outreach_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetFacebookAdsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List stored files
		/// Get a list of available images and files stored in the File Manager for the account.
		/// GetFileManagerFiles file-manager/files
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="type">The file type for the File Manager file.</param>
		/// <param name="created_by">The Mailchimp account user who created the File Manager file.</param>
		/// <param name="before_created_at">Restrict the response to files created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="since_created_at">Restrict the response to files created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="sort_field">Returns files sorted by the specified field.</param>
		/// <param name="sort_dir">Determines the order direction for sorted results.</param>
		public async Task<GetFileManagerFilesReturn> GetFileManagerFilesAsync(string[] fields, string[] exclude_fields, int count, int offset, string type, string created_by, string before_created_at, string since_created_at, GetFileManagerFilesSort_field sort_field, GetCampaignsSort_dir sort_dir, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "file-manager/files?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&type=" + (type==null? "" : System.Uri.EscapeDataString(type))+"&created_by=" + (created_by==null? "" : System.Uri.EscapeDataString(created_by))+"&before_created_at=" + (before_created_at==null? "" : System.Uri.EscapeDataString(before_created_at))+"&since_created_at=" + (since_created_at==null? "" : System.Uri.EscapeDataString(since_created_at))+"&sort_field=" + sort_field+"&sort_dir=" + sort_dir;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetFileManagerFilesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add file
		/// Upload a new image or file to the File Manager.
		/// PostFileManagerFiles file-manager/files
		/// </summary>
		public async Task<PostFileManagerFilesReturn> PostFileManagerFilesAsync(PostFileManagerFilesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "file-manager/files";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostFileManagerFilesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete file
		/// Remove a specific file from the File Manager.
		/// DeleteFileManagerFilesId file-manager/files/{file_id}
		/// </summary>
		/// <param name="file_id">The unique id for the File Manager file.</param>
		public async Task DeleteFileManagerFilesIdAsync(string file_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "file-manager/files/"+ (file_id==null? "" : System.Uri.EscapeDataString(file_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get file
		/// Get information about a specific file in the File Manager.
		/// GetFileManagerFilesId file-manager/files/{file_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="file_id">The unique id for the File Manager file.</param>
		public async Task<GetFileManagerFilesIdReturn> GetFileManagerFilesIdAsync(string[] fields, string[] exclude_fields, string file_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "file-manager/files/"+ (file_id==null? "" : System.Uri.EscapeDataString(file_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetFileManagerFilesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update file
		/// Update a file in the File Manager.
		/// PatchFileManagerFilesId file-manager/files/{file_id}
		/// </summary>
		/// <param name="file_id">The unique id for the File Manager file.</param>
		public async Task<PatchFileManagerFilesIdReturn> PatchFileManagerFilesIdAsync(string file_id, PatchFileManagerFilesIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "file-manager/files/"+ (file_id==null? "" : System.Uri.EscapeDataString(file_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchFileManagerFilesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List folders
		/// Get a list of all folders in the File Manager.
		/// GetFileManagerFolders file-manager/folders
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="created_by">The Mailchimp account user who created the File Manager file.</param>
		/// <param name="before_created_at">Restrict the response to files created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="since_created_at">Restrict the response to files created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		public async Task<GetFileManagerFoldersReturn> GetFileManagerFoldersAsync(string[] fields, string[] exclude_fields, int count, int offset, string created_by, string before_created_at, string since_created_at, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "file-manager/folders?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&created_by=" + (created_by==null? "" : System.Uri.EscapeDataString(created_by))+"&before_created_at=" + (before_created_at==null? "" : System.Uri.EscapeDataString(before_created_at))+"&since_created_at=" + (since_created_at==null? "" : System.Uri.EscapeDataString(since_created_at));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetFileManagerFoldersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add folder
		/// Create a new folder in the File Manager.
		/// PostFileManagerFolders file-manager/folders
		/// </summary>
		public async Task<PostFileManagerFoldersReturn> PostFileManagerFoldersAsync(PostFileManagerFoldersBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "file-manager/folders";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostFileManagerFoldersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete folder
		/// Delete a specific folder in the File Manager.
		/// DeleteFileManagerFoldersId file-manager/folders/{folder_id}
		/// </summary>
		/// <param name="folder_id">The unique id for the File Manager folder.</param>
		public async Task DeleteFileManagerFoldersIdAsync(string folder_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "file-manager/folders/"+ (folder_id==null? "" : System.Uri.EscapeDataString(folder_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get folder
		/// Get information about a specific folder in the File Manager.
		/// GetFileManagerFoldersId file-manager/folders/{folder_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="folder_id">The unique id for the File Manager folder.</param>
		public async Task<GetFileManagerFoldersIdReturn> GetFileManagerFoldersIdAsync(string[] fields, string[] exclude_fields, string folder_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "file-manager/folders/"+ (folder_id==null? "" : System.Uri.EscapeDataString(folder_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetFileManagerFoldersIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update folder
		/// Update a specific File Manager folder.
		/// PatchFileManagerFoldersId file-manager/folders/{folder_id}
		/// </summary>
		/// <param name="folder_id">The unique id for the File Manager folder.</param>
		public async Task<PatchFileManagerFoldersIdReturn> PatchFileManagerFoldersIdAsync(string folder_id, PostFileManagerFoldersBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "file-manager/folders/"+ (folder_id==null? "" : System.Uri.EscapeDataString(folder_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchFileManagerFoldersIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List stored files
		/// Get a list of available images and files stored in this folder.
		/// GetFileManagerFoldersFiles file-manager/folders/{folder_id}/files
		/// </summary>
		/// <param name="folder_id">The unique id for the File Manager folder.</param>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="type">The file type for the File Manager file.</param>
		/// <param name="created_by">The Mailchimp account user who created the File Manager file.</param>
		/// <param name="before_created_at">Restrict the response to files created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="since_created_at">Restrict the response to files created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="sort_field">Returns files sorted by the specified field.</param>
		/// <param name="sort_dir">Determines the order direction for sorted results.</param>
		public async Task<GetFileManagerFoldersFilesReturn> GetFileManagerFoldersFilesAsync(string folder_id, string[] fields, string[] exclude_fields, int count, int offset, string type, string created_by, string before_created_at, string since_created_at, GetFileManagerFilesSort_field sort_field, GetCampaignsSort_dir sort_dir, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "file-manager/folders/"+ (folder_id==null? "" : System.Uri.EscapeDataString(folder_id))+"/files&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&type=" + (type==null? "" : System.Uri.EscapeDataString(type))+"&created_by=" + (created_by==null? "" : System.Uri.EscapeDataString(created_by))+"&before_created_at=" + (before_created_at==null? "" : System.Uri.EscapeDataString(before_created_at))+"&since_created_at=" + (since_created_at==null? "" : System.Uri.EscapeDataString(since_created_at))+"&sort_field=" + sort_field+"&sort_dir=" + sort_dir;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetFileManagerFoldersFilesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List landing pages
		/// Get all landing pages.
		/// GetAllLandingPages landing-pages
		/// </summary>
		/// <param name="sort_dir">Determines the order direction for sorted results.</param>
		/// <param name="sort_field">Returns files sorted by the specified field.</param>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <returns>Landing Pages Collection</returns>
		public async Task<GetAllLandingPagesReturn> GetAllLandingPagesAsync(GetCampaignsSort_dir sort_dir, GetAllLandingPagesSort_field sort_field, string[] fields, string[] exclude_fields, int count, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "landing-pages?sort_dir=" + sort_dir+"&sort_field=" + sort_field+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAllLandingPagesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add landing page
		/// Create a new Mailchimp landing page.
		/// PostAllLandingPages landing-pages
		/// </summary>
		/// <param name="use_default_list">Will create the Landing Page using the account's Default List instead of requiring a list_id.</param>
		public async Task<PostAllLandingPagesReturn> PostAllLandingPagesAsync(bool use_default_list, PostAllLandingPagesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "landing-pages?use_default_list="+use_default_list;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostAllLandingPagesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete landing page
		/// Delete a landing page.
		/// DeleteLandingPageId landing-pages/{page_id}
		/// </summary>
		/// <param name="page_id">The unique id for the page.</param>
		public async Task DeleteLandingPageIdAsync(string page_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "landing-pages/"+ (page_id==null? "" : System.Uri.EscapeDataString(page_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get landing page info
		/// Get information about a specific page.
		/// GetLandingPageId landing-pages/{page_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="page_id">The unique id for the page.</param>
		/// <returns>Landing Pages Instance</returns>
		public async Task<GetLandingPageIdReturn> GetLandingPageIdAsync(string[] fields, string[] exclude_fields, string page_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "landing-pages/"+ (page_id==null? "" : System.Uri.EscapeDataString(page_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetLandingPageIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update landing page
		/// Update a landing page.
		/// PatchLandingPageId landing-pages/{page_id}
		/// </summary>
		/// <param name="page_id">The unique id for the page.</param>
		public async Task<PatchLandingPageIdReturn> PatchLandingPageIdAsync(string page_id, PatchLandingPageIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "landing-pages/"+ (page_id==null? "" : System.Uri.EscapeDataString(page_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchLandingPageIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Publish landing page
		/// Publish a landing page that is in draft, unpublished, or has been previously published and edited.
		/// PostLandingPageIdActionsPublish landing-pages/{page_id}/actions/publish
		/// </summary>
		/// <param name="page_id">The unique id for the page.</param>
		public async Task PostLandingPageIdActionsPublishAsync(string page_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "landing-pages/"+ (page_id==null? "" : System.Uri.EscapeDataString(page_id))+"/actions/publish";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Unpublish landing page
		/// Unpublish a landing page that is in draft or has been published.
		/// PostLandingPageIdActionsUnpublish landing-pages/{page_id}/actions/unpublish
		/// </summary>
		/// <param name="page_id">The unique id for the page.</param>
		public async Task PostLandingPageIdActionsUnpublishAsync(string page_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "landing-pages/"+ (page_id==null? "" : System.Uri.EscapeDataString(page_id))+"/actions/unpublish";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get landing page content
		/// Get the the HTML for your landing page.
		/// GetLandingPageIdContent landing-pages/{page_id}/content
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="page_id">The unique id for the page.</param>
		public async Task<GetLandingPageIdContentReturn> GetLandingPageIdContentAsync(string[] fields, string[] exclude_fields, string page_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "landing-pages/"+ (page_id==null? "" : System.Uri.EscapeDataString(page_id))+"/content?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetLandingPageIdContentReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get lists info
		/// Get information about all lists in the account.
		/// GetLists lists
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="before_date_created">Restrict response to lists created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="since_date_created">Restrict results to lists created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="before_campaign_last_sent">Restrict results to lists created before the last campaign send date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="since_campaign_last_sent">Restrict results to lists created after the last campaign send date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="email">Restrict results to lists that include a specific subscriber's email address.</param>
		/// <param name="sort_field">Returns files sorted by the specified field.</param>
		/// <param name="sort_dir">Determines the order direction for sorted results.</param>
		/// <param name="has_ecommerce_store">Restrict results to lists that contain an active, connected, undeleted ecommerce store.</param>
		/// <param name="include_total_contacts">Return the total_contacts field in the stats response, which contains an approximate count of all contacts in any state.</param>
		public async Task<GetListsReturn> GetListsAsync(string[] fields, string[] exclude_fields, int count, int offset, string before_date_created, string since_date_created, string before_campaign_last_sent, string since_campaign_last_sent, string email, GetListsSort_field sort_field, GetCampaignsSort_dir sort_dir, bool has_ecommerce_store, bool include_total_contacts, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&before_date_created=" + (before_date_created==null? "" : System.Uri.EscapeDataString(before_date_created))+"&since_date_created=" + (since_date_created==null? "" : System.Uri.EscapeDataString(since_date_created))+"&before_campaign_last_sent=" + (before_campaign_last_sent==null? "" : System.Uri.EscapeDataString(before_campaign_last_sent))+"&since_campaign_last_sent=" + (since_campaign_last_sent==null? "" : System.Uri.EscapeDataString(since_campaign_last_sent))+"&email=" + (email==null? "" : System.Uri.EscapeDataString(email))+"&sort_field=" + sort_field+"&sort_dir=" + sort_dir+"&has_ecommerce_store="+has_ecommerce_store+"&include_total_contacts="+include_total_contacts;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add list
		/// Create a new list in your Mailchimp account.
		/// PostLists lists
		/// </summary>
		public async Task<PostListsReturn> PostListsAsync(PostListsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostListsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete list
		/// Delete a list from your Mailchimp account. If you delete a list, you'll lose the list historyâ€”including subscriber activity, unsubscribes, complaints, and bounces. Youâ€™ll also lose subscribersâ€™ email addresses, unless you exported and backed up your list.
		/// DeleteListsId lists/{list_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		public async Task DeleteListsIdAsync(string list_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get list info
		/// Get information about a specific list in your Mailchimp account. Results include list members who have signed up but haven't confirmed their subscription yet and unsubscribed or cleaned.
		/// GetListsId lists/{list_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="include_total_contacts">Return the total_contacts field in the stats response, which contains an approximate count of all contacts in any state.</param>
		public async Task<GetListsIdReturn> GetListsIdAsync(string[] fields, string[] exclude_fields, string list_id, bool include_total_contacts, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&include_total_contacts="+include_total_contacts;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update lists
		/// Update the settings for a specific list.
		/// PatchListsId lists/{list_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		public async Task<PatchListsIdReturn> PatchListsIdAsync(string list_id, PatchListsIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchListsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Batch subscribe or unsubscribe
		/// Batch subscribe or unsubscribe list members.
		/// PostListsId lists/{list_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="skip_merge_validation">If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false.</param>
		/// <param name="skip_duplicate_check">If skip_duplicate_check is true, we will ignore duplicates sent in the request when using the batch sub/unsub on the lists endpoint. The status of the first appearance in the request will be saved. This defaults to false.</param>
		public async Task<PostListsIdReturn> PostListsIdAsync(string list_id, bool skip_merge_validation, bool skip_duplicate_check, PostListsIdPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"&skip_merge_validation="+skip_merge_validation+"&skip_duplicate_check="+skip_duplicate_check;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostListsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List abuse reports
		/// Get all abuse reports for a specific list.
		/// GetListsIdAbuseReports lists/{list_id}/abuse-reports
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="list_id">The unique ID for the list.</param>
		public async Task<GetListsIdAbuseReportsReturn> GetListsIdAbuseReportsAsync(string[] fields, string[] exclude_fields, int count, int offset, string list_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/abuse-reports?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdAbuseReportsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get abuse report
		/// Get details about a specific abuse report.
		/// GetListsIdAbuseReportsId lists/{list_id}/abuse-reports/{report_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="report_id">The id for the abuse report.</param>
		public async Task<GetListsIdAbuseReportsIdReturn> GetListsIdAbuseReportsIdAsync(string[] fields, string[] exclude_fields, int count, int offset, string list_id, string report_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/abuse-reports/"+ (report_id==null? "" : System.Uri.EscapeDataString(report_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdAbuseReportsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List recent activity
		/// Get up to the previous 180 days of daily detailed aggregated activity stats for a list, not including Automation activity.
		/// GetListsIdActivity lists/{list_id}/activity
		/// </summary>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="list_id">The unique ID for the list.</param>
		public async Task<GetListsIdActivityReturn> GetListsIdActivityAsync(int count, int offset, string[] fields, string[] exclude_fields, string list_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/activity?count="+count+"&offset="+offset+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdActivityReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List top email clients
		/// Get a list of the top email clients based on user-agent strings.
		/// GetListsIdClients lists/{list_id}/clients
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="list_id">The unique ID for the list.</param>
		public async Task<GetListsIdClientsReturn> GetListsIdClientsAsync(string[] fields, string[] exclude_fields, string list_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/clients?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdClientsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List growth history data
		/// Get a month-by-month summary of a specific list's growth activity.
		/// GetListsIdGrowthHistory lists/{list_id}/growth-history
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="sort_field">Returns files sorted by the specified field.</param>
		/// <param name="sort_dir">Determines the order direction for sorted results.</param>
		public async Task<GetListsIdGrowthHistoryReturn> GetListsIdGrowthHistoryAsync(string[] fields, string[] exclude_fields, int count, int offset, string list_id, GetListsIdGrowthHistorySort_field sort_field, GetCampaignsSort_dir sort_dir, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/growth-history?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&sort_field=" + sort_field+"&sort_dir=" + sort_dir;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdGrowthHistoryReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get growth history by month
		/// Get a summary of a specific list's growth activity for a specific month and year.
		/// GetListsIdGrowthHistoryId lists/{list_id}/growth-history/{month}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="month">A specific month of list growth history.</param>
		public async Task<GetListsIdGrowthHistoryIdReturn> GetListsIdGrowthHistoryIdAsync(string[] fields, string[] exclude_fields, string list_id, string month, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/growth-history/"+ (month==null? "" : System.Uri.EscapeDataString(month))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdGrowthHistoryIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List interest categories
		/// Get information about a list's interest categories.
		/// GetListsIdInterestCategories lists/{list_id}/interest-categories
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="type">Restrict results a type of interest group</param>
		public async Task<GetListsIdInterestCategoriesReturn> GetListsIdInterestCategoriesAsync(string list_id, string[] fields, string[] exclude_fields, int count, int offset, string type, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/interest-categories&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&type=" + (type==null? "" : System.Uri.EscapeDataString(type));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdInterestCategoriesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add interest category
		/// Create a new interest category.
		/// PostListsIdInterestCategories lists/{list_id}/interest-categories
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		public async Task<PostListsIdInterestCategoriesReturn> PostListsIdInterestCategoriesAsync(string list_id, PostListsIdInterestCategoriesBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/interest-categories";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostListsIdInterestCategoriesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete interest category
		/// Delete a specific interest category.
		/// DeleteListsIdInterestCategoriesId lists/{list_id}/interest-categories/{interest_category_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="interest_category_id">The unique ID for the interest category.</param>
		public async Task DeleteListsIdInterestCategoriesIdAsync(string list_id, string interest_category_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/interest-categories/"+ (interest_category_id==null? "" : System.Uri.EscapeDataString(interest_category_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get interest category info
		/// Get information about a specific interest category.
		/// GetListsIdInterestCategoriesId lists/{list_id}/interest-categories/{interest_category_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="interest_category_id">The unique ID for the interest category.</param>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		public async Task<GetListsIdInterestCategoriesIdReturn> GetListsIdInterestCategoriesIdAsync(string list_id, string interest_category_id, string[] fields, string[] exclude_fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/interest-categories/"+ (interest_category_id==null? "" : System.Uri.EscapeDataString(interest_category_id))+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdInterestCategoriesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update interest category
		/// Update a specific interest category.
		/// PatchListsIdInterestCategoriesId lists/{list_id}/interest-categories/{interest_category_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="interest_category_id">The unique ID for the interest category.</param>
		public async Task<PatchListsIdInterestCategoriesIdReturn> PatchListsIdInterestCategoriesIdAsync(string list_id, string interest_category_id, PostListsIdInterestCategoriesBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/interest-categories/"+ (interest_category_id==null? "" : System.Uri.EscapeDataString(interest_category_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchListsIdInterestCategoriesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List interests in category
		/// Get a list of this category's interests.
		/// GetListsIdInterestCategoriesIdInterests lists/{list_id}/interest-categories/{interest_category_id}/interests
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="interest_category_id">The unique ID for the interest category.</param>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		public async Task<GetListsIdInterestCategoriesIdInterestsReturn> GetListsIdInterestCategoriesIdInterestsAsync(string list_id, string interest_category_id, string[] fields, string[] exclude_fields, int count, int offset, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/interest-categories/"+ (interest_category_id==null? "" : System.Uri.EscapeDataString(interest_category_id))+"/interests&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdInterestCategoriesIdInterestsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add interest in category
		/// Create a new interest or 'group name' for a specific category.
		/// PostListsIdInterestCategoriesIdInterests lists/{list_id}/interest-categories/{interest_category_id}/interests
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="interest_category_id">The unique ID for the interest category.</param>
		public async Task<PostListsIdInterestCategoriesIdInterestsReturn> PostListsIdInterestCategoriesIdInterestsAsync(string list_id, string interest_category_id, PostListsIdInterestCategoriesIdInterestsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/interest-categories/"+ (interest_category_id==null? "" : System.Uri.EscapeDataString(interest_category_id))+"/interests";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostListsIdInterestCategoriesIdInterestsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete interest in category
		/// Delete interests or group names in a specific category.
		/// DeleteListsIdInterestCategoriesIdInterestsId lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="interest_category_id">The unique ID for the interest category.</param>
		/// <param name="interest_id">The specific interest or 'group name'.</param>
		public async Task DeleteListsIdInterestCategoriesIdInterestsIdAsync(string list_id, string interest_category_id, string interest_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/interest-categories/"+ (interest_category_id==null? "" : System.Uri.EscapeDataString(interest_category_id))+"/interests/"+ (interest_id==null? "" : System.Uri.EscapeDataString(interest_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get interest in category
		/// Get interests or 'group names' for a specific category.
		/// GetListsIdInterestCategoriesIdInterestsId lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="interest_category_id">The unique ID for the interest category.</param>
		/// <param name="interest_id">The specific interest or 'group name'.</param>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		public async Task<GetListsIdInterestCategoriesIdInterestsIdReturn> GetListsIdInterestCategoriesIdInterestsIdAsync(string list_id, string interest_category_id, string interest_id, string[] fields, string[] exclude_fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/interest-categories/"+ (interest_category_id==null? "" : System.Uri.EscapeDataString(interest_category_id))+"/interests/"+ (interest_id==null? "" : System.Uri.EscapeDataString(interest_id))+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdInterestCategoriesIdInterestsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update interest in category
		/// Update interests or 'group names' for a specific category.
		/// PatchListsIdInterestCategoriesIdInterestsId lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="interest_category_id">The unique ID for the interest category.</param>
		/// <param name="interest_id">The specific interest or 'group name'.</param>
		public async Task<PatchListsIdInterestCategoriesIdInterestsIdReturn> PatchListsIdInterestCategoriesIdInterestsIdAsync(string list_id, string interest_category_id, string interest_id, PostListsIdInterestCategoriesIdInterestsBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/interest-categories/"+ (interest_category_id==null? "" : System.Uri.EscapeDataString(interest_category_id))+"/interests/"+ (interest_id==null? "" : System.Uri.EscapeDataString(interest_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchListsIdInterestCategoriesIdInterestsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List locations
		/// Get the locations (countries) that the list's subscribers have been tagged to based on geocoding their IP address.
		/// GetListsIdLocations lists/{list_id}/locations
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="list_id">The unique ID for the list.</param>
		public async Task<GetListsIdLocationsReturn> GetListsIdLocationsAsync(string[] fields, string[] exclude_fields, string list_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/locations?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdLocationsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List members info
		/// Get information about members in a specific Mailchimp list.
		/// GetListsIdMembers lists/{list_id}/members
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="email_type">The email type.</param>
		/// <param name="status">The subscriber's status.</param>
		/// <param name="since_timestamp_opt">Restrict results to subscribers who opted-in after the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="before_timestamp_opt">Restrict results to subscribers who opted-in before the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="since_last_changed">Restrict results to subscribers whose information changed after the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="before_last_changed">Restrict results to subscribers whose information changed before the set timeframe. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="unique_email_id">A unique identifier for the email address across all Mailchimp lists.</param>
		/// <param name="vip_only">A filter to return only the list's VIP members. Passing `true` will restrict results to VIP list members, passing `false` will return all list members.</param>
		/// <param name="interest_category_id">The unique id for the interest category.</param>
		/// <param name="interest_ids">Used to filter list members by interests. Must be accompanied by interest_category_id and interest_match. The value must be a comma separated list of interest ids present for any supplied interest categories.</param>
		/// <param name="interest_match">Used to filter list members by interests. Must be accompanied by interest_category_id and interest_ids. "any" will match a member with any of the interest supplied, "all" will only match members with every interest supplied, and "none" will match members without any of the interest supplied.</param>
		/// <param name="sort_field">Returns files sorted by the specified field.</param>
		/// <param name="sort_dir">Determines the order direction for sorted results.</param>
		/// <param name="since_last_campaign">Filter subscribers by those subscribed/unsubscribed/pending/cleaned since last email campaign send. Member status is required to use this filter.</param>
		/// <param name="unsubscribed_since">Filter subscribers by those unsubscribed since a specific date. Using any status other than unsubscribed with this filter will result in an error.</param>
		public async Task<GetListsIdMembersReturn> GetListsIdMembersAsync(
					string[] fields, 
					string[] exclude_fields, 
					int count, 
					int offset, 
					string list_id, 
					string email_type, 
					GetListsIdMembersStatus status, 
					string since_timestamp_opt, 
					string before_timestamp_opt, 
					string since_last_changed, 
					string before_last_changed, 
					string unique_email_id, 
					bool vip_only, 
					string interest_category_id, 
					string interest_ids, 
					GetListsIdMembersInterest_match interest_match, 
					GetListsIdMembersSort_field sort_field, 
					GetCampaignsSort_dir sort_dir, 
					bool since_last_campaign, 
					string unsubscribed_since, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&email_type=" + (email_type==null? "" : System.Uri.EscapeDataString(email_type))+"&status=" + status+"&since_timestamp_opt=" + (since_timestamp_opt==null? "" : System.Uri.EscapeDataString(since_timestamp_opt))+"&before_timestamp_opt=" + (before_timestamp_opt==null? "" : System.Uri.EscapeDataString(before_timestamp_opt))+"&since_last_changed=" + (since_last_changed==null? "" : System.Uri.EscapeDataString(since_last_changed))+"&before_last_changed=" + (before_last_changed==null? "" : System.Uri.EscapeDataString(before_last_changed))+"&unique_email_id=" + (unique_email_id==null? "" : System.Uri.EscapeDataString(unique_email_id))+"&vip_only="+vip_only+"&interest_category_id=" + (interest_category_id==null? "" : System.Uri.EscapeDataString(interest_category_id))+"&interest_ids=" + (interest_ids==null? "" : System.Uri.EscapeDataString(interest_ids))+"&interest_match=" + interest_match+"&sort_field=" + sort_field+"&sort_dir=" + sort_dir+"&since_last_campaign="+since_last_campaign+"&unsubscribed_since=" + (unsubscribed_since==null? "" : System.Uri.EscapeDataString(unsubscribed_since));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdMembersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add member to list
		/// Add a new member to the list.
		/// PostListsIdMembers lists/{list_id}/members
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="skip_merge_validation">If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false.</param>
		public async Task<PostListsIdMembersReturn> PostListsIdMembersAsync(string list_id, bool skip_merge_validation, PostListsIdMembersPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members&skip_merge_validation="+skip_merge_validation;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostListsIdMembersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Archive list member
		/// Archive a list member. To permanently delete, use the delete-permanent action.
		/// DeleteListsIdMembersId lists/{list_id}/members/{subscriber_hash}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id.</param>
		public async Task DeleteListsIdMembersIdAsync(string list_id, string subscriber_hash, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get member info
		/// Get information about a specific list member, including a currently subscribed, unsubscribed, or bounced member.
		/// GetListsIdMembersId lists/{list_id}/members/{subscriber_hash}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id.</param>
		public async Task<GetListsIdMembersIdReturn> GetListsIdMembersIdAsync(string[] fields, string[] exclude_fields, string list_id, string subscriber_hash, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdMembersIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update list member
		/// Update information for a specific list member.
		/// PatchListsIdMembersId lists/{list_id}/members/{subscriber_hash}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id.</param>
		/// <param name="skip_merge_validation">If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false.</param>
		public async Task<PatchListsIdMembersIdReturn> PatchListsIdMembersIdAsync(string list_id, string subscriber_hash, bool skip_merge_validation, PatchListsIdMembersIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"&skip_merge_validation="+skip_merge_validation;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchListsIdMembersIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add or update list member
		/// Add or update a list member.
		/// PutListsIdMembersId lists/{list_id}/members/{subscriber_hash}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id.</param>
		/// <param name="skip_merge_validation">If skip_merge_validation is true, member data will be accepted without merge field values, even if the merge field is usually required. This defaults to false.</param>
		public async Task<PutListsIdMembersIdReturn> PutListsIdMembersIdAsync(string list_id, string subscriber_hash, bool skip_merge_validation, PutListsIdMembersIdPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"&skip_merge_validation="+skip_merge_validation;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutListsIdMembersIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete list member
		/// Delete all personally identifiable information related to a list member, and remove them from a list. This will make it impossible to re-import the list member.
		/// PostListsIdMembersHashActionsDeletePermanent lists/{list_id}/members/{subscriber_hash}/actions/delete-permanent
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address.</param>
		public async Task PostListsIdMembersHashActionsDeletePermanentAsync(string list_id, string subscriber_hash, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"/actions/delete-permanent";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// View recent activity 50
		/// Get the last 50 events of a member's activity on a specific list, including opens, clicks, and unsubscribes.
		/// GetListsIdMembersIdActivity lists/{list_id}/members/{subscriber_hash}/activity
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id.</param>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="action">A comma seperated list of actions to return.</param>
		public async Task<GetListsIdMembersIdActivityReturn> GetListsIdMembersIdActivityAsync(string list_id, string subscriber_hash, string[] fields, string[] exclude_fields, string[] action, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"/activity&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", action.Select(z => $"action={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdMembersIdActivityReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// View recent activity
		/// Get a member's activity on a specific list, including opens, clicks, and unsubscribes.
		/// GetListsIdMembersIdActivityFeed lists/{list_id}/members/{subscriber_hash}/activity-feed
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address.</param>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="activity_filters">A comma-separated list of activity filters that correspond to a set of activity types, e.g "?activity_filters=open,bounce,click".</param>
		public async Task<GetListsIdMembersIdActivityFeedReturn> GetListsIdMembersIdActivityFeedAsync(string list_id, string subscriber_hash, string[] fields, string[] exclude_fields, int count, int offset, string[] activity_filters, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"/activity-feed&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&"+string.Join("&", activity_filters.Select(z => $"activity_filters={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdMembersIdActivityFeedReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List member events
		/// Get events for a contact.
		/// GetListsIdMembersIdEvents lists/{list_id}/members/{subscriber_hash}/events
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		public async Task<GetListsIdMembersIdEventsReturn> GetListsIdMembersIdEventsAsync(string list_id, string subscriber_hash, int count, int offset, string[] fields, string[] exclude_fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"/events&count="+count+"&offset="+offset+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdMembersIdEventsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add event
		/// Add an event for a list member.
		/// PostListMemberEvents lists/{list_id}/members/{subscriber_hash}/events
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id.</param>
		public async Task PostListMemberEventsAsync(string list_id, string subscriber_hash, PostListMemberEventsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"/events";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List member goal events
		/// Get the last 50 Goal events for a member on a specific list.
		/// GetListsIdMembersIdGoals lists/{list_id}/members/{subscriber_hash}/goals
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id.</param>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		public async Task<GetListsIdMembersIdGoalsReturn> GetListsIdMembersIdGoalsAsync(string list_id, string subscriber_hash, string[] fields, string[] exclude_fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"/goals&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdMembersIdGoalsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List recent member notes
		/// Get recent notes for a specific list member.
		/// GetListsIdMembersIdNotes lists/{list_id}/members/{subscriber_hash}/notes
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address.</param>
		/// <param name="sort_field">Returns notes sorted by the specified field.</param>
		/// <param name="sort_dir">Determines the order direction for sorted results.</param>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		public async Task<GetListsIdMembersIdNotesReturn> GetListsIdMembersIdNotesAsync(string list_id, string subscriber_hash, GetListsIdMembersIdNotesSort_field sort_field, GetCampaignsSort_dir sort_dir, string[] fields, string[] exclude_fields, int count, int offset, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"/notes&sort_field=" + sort_field+"&sort_dir=" + sort_dir+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdMembersIdNotesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add member note
		/// Add a new note for a specific subscriber.
		/// PostListsIdMembersIdNotes lists/{list_id}/members/{subscriber_hash}/notes
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address.</param>
		public async Task<PostListsIdMembersIdNotesReturn> PostListsIdMembersIdNotesAsync(string list_id, string subscriber_hash, PostListsIdMembersIdNotesBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"/notes";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostListsIdMembersIdNotesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete note
		/// Delete a specific note for a specific list member.
		/// DeleteListsIdMembersIdNotesId lists/{list_id}/members/{subscriber_hash}/notes/{note_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id.</param>
		/// <param name="note_id">The id for the note.</param>
		public async Task DeleteListsIdMembersIdNotesIdAsync(string list_id, string subscriber_hash, string note_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"/notes/"+ (note_id==null? "" : System.Uri.EscapeDataString(note_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get member note
		/// Get a specific note for a specific list member.
		/// GetListsIdMembersIdNotesId lists/{list_id}/members/{subscriber_hash}/notes/{note_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id.</param>
		/// <param name="note_id">The id for the note.</param>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		public async Task<GetListsIdMembersIdNotesIdReturn> GetListsIdMembersIdNotesIdAsync(string list_id, string subscriber_hash, string note_id, string[] fields, string[] exclude_fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"/notes/"+ (note_id==null? "" : System.Uri.EscapeDataString(note_id))+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdMembersIdNotesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update note
		/// Update a specific note for a specific list member.
		/// PatchListsIdMembersIdNotesId lists/{list_id}/members/{subscriber_hash}/notes/{note_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id.</param>
		/// <param name="note_id">The id for the note.</param>
		public async Task<PatchListsIdMembersIdNotesIdReturn> PatchListsIdMembersIdNotesIdAsync(string list_id, string subscriber_hash, string note_id, PostListsIdMembersIdNotesBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"/notes/"+ (note_id==null? "" : System.Uri.EscapeDataString(note_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchListsIdMembersIdNotesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List member tags
		/// Get the tags on a list member.
		/// GetListMemberTags lists/{list_id}/members/{subscriber_hash}/tags
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address. This endpoint also accepts a list member's email address or contact_id.</param>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		public async Task<GetListMemberTagsReturn> GetListMemberTagsAsync(string list_id, string subscriber_hash, string[] fields, string[] exclude_fields, int count, int offset, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"/tags&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListMemberTagsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add or remove member tags
		/// Add or remove tags from a list member. If a tag that does not exist is passed in and set as 'active', a new tag will be created.
		/// PostListMemberTags lists/{list_id}/members/{subscriber_hash}/tags
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address.</param>
		public async Task PostListMemberTagsAsync(string list_id, string subscriber_hash, PostListMemberTagsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"/tags";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List merge fields
		/// Get a list of all merge fields for an audience.
		/// GetListsIdMergeFields lists/{list_id}/merge-fields
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="type">The merge field type.</param>
		/// <param name="required">Whether it's a required merge field.</param>
		public async Task<GetListsIdMergeFieldsReturn> GetListsIdMergeFieldsAsync(string list_id, string[] fields, string[] exclude_fields, int count, int offset, string type, bool required, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/merge-fields&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&type=" + (type==null? "" : System.Uri.EscapeDataString(type))+"&required="+required;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdMergeFieldsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add merge field
		/// Add a new merge field for a specific audience.
		/// PostListsIdMergeFields lists/{list_id}/merge-fields
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		public async Task<PostListsIdMergeFieldsReturn> PostListsIdMergeFieldsAsync(string list_id, PostListsIdMergeFieldsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/merge-fields";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostListsIdMergeFieldsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete merge field
		/// Delete a specific merge field.
		/// DeleteListsIdMergeFieldsId lists/{list_id}/merge-fields/{merge_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="merge_id">The id for the merge field.</param>
		public async Task DeleteListsIdMergeFieldsIdAsync(string list_id, string merge_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/merge-fields/"+ (merge_id==null? "" : System.Uri.EscapeDataString(merge_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get merge field
		/// Get information about a specific merge field.
		/// GetListsIdMergeFieldsId lists/{list_id}/merge-fields/{merge_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="merge_id">The id for the merge field.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		public async Task<GetListsIdMergeFieldsIdReturn> GetListsIdMergeFieldsIdAsync(string list_id, string merge_id, string[] exclude_fields, string[] fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/merge-fields/"+ (merge_id==null? "" : System.Uri.EscapeDataString(merge_id))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdMergeFieldsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update merge field
		/// Update a specific merge field.
		/// PatchListsIdMergeFieldsId lists/{list_id}/merge-fields/{merge_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="merge_id">The id for the merge field.</param>
		public async Task<PatchListsIdMergeFieldsIdReturn> PatchListsIdMergeFieldsIdAsync(string list_id, string merge_id, PatchListsIdMergeFieldsIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/merge-fields/"+ (merge_id==null? "" : System.Uri.EscapeDataString(merge_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchListsIdMergeFieldsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List segments
		/// Get information about all available segments for a specific list.
		/// PreviewASegment lists/{list_id}/segments
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="type">Limit results based on segment type.</param>
		/// <param name="since_created_at">Restrict results to segments created after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="before_created_at">Restrict results to segments created before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="include_cleaned">Include cleaned members in response</param>
		/// <param name="include_transactional">Include transactional members in response</param>
		/// <param name="include_unsubscribed">Include unsubscribed members in response</param>
		/// <param name="since_updated_at">Restrict results to segments update after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="before_updated_at">Restrict results to segments update before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		public async Task<PreviewASegmentReturn> PreviewASegmentAsync(string[] fields, string[] exclude_fields, int count, int offset, string list_id, string type, string since_created_at, string before_created_at, bool include_cleaned, bool include_transactional, bool include_unsubscribed, string since_updated_at, string before_updated_at, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/segments?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&type=" + (type==null? "" : System.Uri.EscapeDataString(type))+"&since_created_at=" + (since_created_at==null? "" : System.Uri.EscapeDataString(since_created_at))+"&before_created_at=" + (before_created_at==null? "" : System.Uri.EscapeDataString(before_created_at))+"&include_cleaned="+include_cleaned+"&include_transactional="+include_transactional+"&include_unsubscribed="+include_unsubscribed+"&since_updated_at=" + (since_updated_at==null? "" : System.Uri.EscapeDataString(since_updated_at))+"&before_updated_at=" + (before_updated_at==null? "" : System.Uri.EscapeDataString(before_updated_at));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PreviewASegmentReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add segment
		/// Create a new segment in a specific list.
		/// PostListsIdSegments lists/{list_id}/segments
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		public async Task<PostListsIdSegmentsReturn> PostListsIdSegmentsAsync(string list_id, PostListsIdSegmentsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/segments";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostListsIdSegmentsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete segment
		/// Delete a specific segment in a list.
		/// DeleteListsIdSegmentsId lists/{list_id}/segments/{segment_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="segment_id">The unique id for the segment.</param>
		public async Task DeleteListsIdSegmentsIdAsync(string list_id, string segment_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/segments/"+ (segment_id==null? "" : System.Uri.EscapeDataString(segment_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get segment info
		/// Get information about a specific segment.
		/// GetListsIdSegmentsId lists/{list_id}/segments/{segment_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="segment_id">The unique id for the segment.</param>
		/// <param name="include_cleaned">Include cleaned members in response</param>
		/// <param name="include_transactional">Include transactional members in response</param>
		/// <param name="include_unsubscribed">Include unsubscribed members in response</param>
		public async Task<GetListsIdSegmentsIdReturn> GetListsIdSegmentsIdAsync(string[] fields, string[] exclude_fields, string list_id, string segment_id, bool include_cleaned, bool include_transactional, bool include_unsubscribed, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/segments/"+ (segment_id==null? "" : System.Uri.EscapeDataString(segment_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&include_cleaned="+include_cleaned+"&include_transactional="+include_transactional+"&include_unsubscribed="+include_unsubscribed;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdSegmentsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update segment
		/// Update a specific segment in a list.
		/// PatchListsIdSegmentsId lists/{list_id}/segments/{segment_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="segment_id">The unique id for the segment.</param>
		public async Task<PatchListsIdSegmentsIdReturn> PatchListsIdSegmentsIdAsync(string list_id, string segment_id, PatchListsIdSegmentsIdPatchBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/segments/"+ (segment_id==null? "" : System.Uri.EscapeDataString(segment_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchListsIdSegmentsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Batch add or remove members
		/// Batch add/remove list members to static segment
		/// PostListsIdSegmentsId lists/{list_id}/segments/{segment_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="segment_id">The unique id for the segment.</param>
		public async Task<PostListsIdSegmentsIdReturn> PostListsIdSegmentsIdAsync(string list_id, string segment_id, PostListsIdSegmentsIdPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/segments/"+ (segment_id==null? "" : System.Uri.EscapeDataString(segment_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostListsIdSegmentsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List members in segment
		/// Get information about members in a saved segment.
		/// GetListsIdSegmentsIdMembers lists/{list_id}/segments/{segment_id}/members
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="segment_id">The unique id for the segment.</param>
		/// <param name="include_cleaned">Include cleaned members in response</param>
		/// <param name="include_transactional">Include transactional members in response</param>
		/// <param name="include_unsubscribed">Include unsubscribed members in response</param>
		public async Task<GetListsIdSegmentsIdMembersReturn> GetListsIdSegmentsIdMembersAsync(string[] fields, string[] exclude_fields, int count, int offset, string list_id, string segment_id, bool include_cleaned, bool include_transactional, bool include_unsubscribed, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/segments/"+ (segment_id==null? "" : System.Uri.EscapeDataString(segment_id))+"/members?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&include_cleaned="+include_cleaned+"&include_transactional="+include_transactional+"&include_unsubscribed="+include_unsubscribed;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdSegmentsIdMembersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add member to segment
		/// Add a member to a static segment.
		/// PostListsIdSegmentsIdMembers lists/{list_id}/segments/{segment_id}/members
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="segment_id">The unique id for the segment.</param>
		public async Task<PostListsIdSegmentsIdMembersReturn> PostListsIdSegmentsIdMembersAsync(string list_id, string segment_id, PostListsIdSegmentsIdMembersPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/segments/"+ (segment_id==null? "" : System.Uri.EscapeDataString(segment_id))+"/members";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostListsIdSegmentsIdMembersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Remove list member from segment
		/// Remove a member from the specified static segment.
		/// DeleteListsIdSegmentsIdMembersId lists/{list_id}/segments/{segment_id}/members/{subscriber_hash}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="segment_id">The unique id for the segment.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address.</param>
		public async Task DeleteListsIdSegmentsIdMembersIdAsync(string list_id, string segment_id, string subscriber_hash, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/segments/"+ (segment_id==null? "" : System.Uri.EscapeDataString(segment_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List signup forms
		/// Get signup forms for a specific list.
		/// GetListsIdSignupForms lists/{list_id}/signup-forms
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		public async Task<GetListsIdSignupFormsReturn> GetListsIdSignupFormsAsync(string list_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/signup-forms";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdSignupFormsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Customize signup form
		/// Customize a list's default signup form.
		/// PostListsIdSignupForms lists/{list_id}/signup-forms
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		public async Task<PostListsIdSignupFormsReturn> PostListsIdSignupFormsAsync(string list_id, PostListsIdSignupFormsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/signup-forms";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostListsIdSignupFormsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get information about all surveys for a list
		/// Get information about all available surveys for a specific list.
		/// GetListsIdSurveys lists/{list_id}/surveys
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		public async Task GetListsIdSurveysAsync(string list_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/surveys";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get survey
		/// Get details about a specific survey.
		/// GetListsIdSurveysId lists/{list_id}/surveys/{survey_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="survey_id">The ID of the survey.</param>
		public async Task GetListsIdSurveysIdAsync(string list_id, string survey_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/surveys/"+ (survey_id==null? "" : System.Uri.EscapeDataString(survey_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create a Survey Campaign
		/// Utilize the List ID and Survey ID to generate a Campaign that links to your survey.
		/// PostListsIdSurveysIdActionsCreateEmail lists/{list_id}/surveys/{survey_id}/actions/create-email
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="survey_id">The ID of the survey.</param>
		/// <returns>Campaign Instance</returns>
		public async Task<PostListsIdSurveysIdActionsCreateEmailReturn> PostListsIdSurveysIdActionsCreateEmailAsync(string list_id, string survey_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/surveys/"+ (survey_id==null? "" : System.Uri.EscapeDataString(survey_id))+"/actions/create-email";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostListsIdSurveysIdActionsCreateEmailReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Publish a Survey
		/// Publish a survey that is in draft, unpublished, or has been previously published and edited.
		/// PostListsIdSurveysIdActionsPublish lists/{list_id}/surveys/{survey_id}/actions/publish
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="survey_id">The ID of the survey.</param>
		/// <returns>Survey Published</returns>
		public async Task PostListsIdSurveysIdActionsPublishAsync(string list_id, string survey_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/surveys/"+ (survey_id==null? "" : System.Uri.EscapeDataString(survey_id))+"/actions/publish";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Unpublish a Survey
		/// Unpublish a survey that has been published.
		/// PostListsIdSurveysIdActionsUnpublish lists/{list_id}/surveys/{survey_id}/actions/unpublish
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="survey_id">The ID of the survey.</param>
		/// <returns>Survey Instance</returns>
		public async Task PostListsIdSurveysIdActionsUnpublishAsync(string list_id, string survey_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/surveys/"+ (survey_id==null? "" : System.Uri.EscapeDataString(survey_id))+"/actions/unpublish";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Search for tags on a list by name.
		/// Search for tags on a list by name. If no name is provided, will return all tags on the list.
		/// SearchTagsByName lists/{list_id}/tag-search
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="name">The search query used to filter tags.  The search query will be compared to each tag as a prefix, so all tags that have a name starting with this field will be returned.</param>
		public async Task<SearchTagsByNameReturn> SearchTagsByNameAsync(string list_id, string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/tag-search&name=" + (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SearchTagsByNameReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List webhooks
		/// Get information about all webhooks for a specific list.
		/// GetListsIdWebhooks lists/{list_id}/webhooks
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		public async Task<GetListsIdWebhooksReturn> GetListsIdWebhooksAsync(string list_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/webhooks";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdWebhooksReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add webhook
		/// Create a new webhook for a specific list.
		/// PostListsIdWebhooks lists/{list_id}/webhooks
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		public async Task<PostListsIdWebhooksReturn> PostListsIdWebhooksAsync(string list_id, PostListsIdWebhooksBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/webhooks";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostListsIdWebhooksReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete webhook
		/// Delete a specific webhook in a list.
		/// DeleteListsIdWebhooksId lists/{list_id}/webhooks/{webhook_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="webhook_id">The webhook's id.</param>
		public async Task DeleteListsIdWebhooksIdAsync(string list_id, string webhook_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/webhooks/"+ (webhook_id==null? "" : System.Uri.EscapeDataString(webhook_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get webhook info
		/// Get information about a specific webhook.
		/// GetListsIdWebhooksId lists/{list_id}/webhooks/{webhook_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="webhook_id">The webhook's id.</param>
		public async Task<GetListsIdWebhooksIdReturn> GetListsIdWebhooksIdAsync(string list_id, string webhook_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/webhooks/"+ (webhook_id==null? "" : System.Uri.EscapeDataString(webhook_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetListsIdWebhooksIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update webhook
		/// Update the settings for an existing webhook.
		/// PatchListsIdWebhooksId lists/{list_id}/webhooks/{webhook_id}
		/// </summary>
		/// <param name="list_id">The unique ID for the list.</param>
		/// <param name="webhook_id">The webhook's id.</param>
		public async Task<PatchListsIdWebhooksIdReturn> PatchListsIdWebhooksIdAsync(string list_id, string webhook_id, PostListsIdWebhooksBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "lists/"+ (list_id==null? "" : System.Uri.EscapeDataString(list_id))+"/webhooks/"+ (webhook_id==null? "" : System.Uri.EscapeDataString(webhook_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchListsIdWebhooksIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Ping
		/// A health check for the API that won't return any account-specific information.
		/// GetPing ping
		/// </summary>
		public async Task<GetPingReturn> GetPingAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "ping";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetPingReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List facebook ads reports
		/// Get reports of Facebook ads.
		/// GetReportingFacebookAds reporting/facebook-ads
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="sort_field">Returns files sorted by the specified field.</param>
		/// <param name="sort_dir">Determines the order direction for sorted results.</param>
		/// <returns>List of Facebook Ad Report Instances</returns>
		public async Task<GetReportingFacebookAdsReturn> GetReportingFacebookAdsAsync(string[] fields, string[] exclude_fields, int count, int offset, GetAllFacebookAdsSort_field sort_field, GetCampaignsSort_dir sort_dir, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reporting/facebook-ads?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&sort_field=" + sort_field+"&sort_dir=" + sort_dir;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportingFacebookAdsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get facebook ad report
		/// Get report of a Facebook ad.
		/// GetReportingFacebookAdsId reporting/facebook-ads/{outreach_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="outreach_id">The outreach id.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <returns>Facebook Ad report Instance</returns>
		public async Task<GetReportingFacebookAdsIdReturn> GetReportingFacebookAdsIdAsync(string[] fields, string outreach_id, string[] exclude_fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reporting/facebook-ads/"+ (outreach_id==null? "" : System.Uri.EscapeDataString(outreach_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportingFacebookAdsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List facebook ecommerce report
		/// Get breakdown of product activity for an outreach.
		/// GetReportingFacebookAdsIdEcommerceProductActivity reporting/facebook-ads/{outreach_id}/ecommerce-product-activity
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="outreach_id">The outreach id.</param>
		/// <param name="sort_field">Returns files sorted by the specified field.</param>
		/// <returns>Ecommerce Product Activity Instance</returns>
		public async Task<GetReportingFacebookAdsIdEcommerceProductActivityReturn> GetReportingFacebookAdsIdEcommerceProductActivityAsync(string[] fields, string[] exclude_fields, int count, int offset, string outreach_id, GetReportingFacebookAdsIdEcommerceProductActivitySort_field sort_field, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reporting/facebook-ads/"+ (outreach_id==null? "" : System.Uri.EscapeDataString(outreach_id))+"/ecommerce-product-activity?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&sort_field=" + sort_field;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportingFacebookAdsIdEcommerceProductActivityReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List landing pages reports
		/// Get reports of landing pages.
		/// GetReportingLandingPages reporting/landing-pages
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <returns>List of Landing Page Report Instances</returns>
		public async Task<GetReportingLandingPagesReturn> GetReportingLandingPagesAsync(string[] fields, string[] exclude_fields, int count, int offset, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reporting/landing-pages?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportingLandingPagesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get landing page report
		/// Get report of a landing page.
		/// GetReportingLandingPagesId reporting/landing-pages/{outreach_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="outreach_id">The outreach id.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <returns>Landing Page Report Instance</returns>
		public async Task<GetReportingLandingPagesIdReturn> GetReportingLandingPagesIdAsync(string[] fields, string outreach_id, string[] exclude_fields, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reporting/landing-pages/"+ (outreach_id==null? "" : System.Uri.EscapeDataString(outreach_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportingLandingPagesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List survey reports
		/// Get reports for surveys.
		/// GetReportingSurveys reporting/surveys
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <returns>List of Survey Report Instances</returns>
		public async Task<GetReportingSurveysReturn> GetReportingSurveysAsync(string[] fields, string[] exclude_fields, int count, int offset, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reporting/surveys?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportingSurveysReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get survey report
		/// Get report for a survey.
		/// GetReportingSurveysId reporting/surveys/{outreach_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="outreach_id">The outreach id.</param>
		/// <returns>Survey Report Instance</returns>
		public async Task<GetReportingSurveysIdReturn> GetReportingSurveysIdAsync(string[] fields, string[] exclude_fields, string outreach_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reporting/surveys/"+ (outreach_id==null? "" : System.Uri.EscapeDataString(outreach_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportingSurveysIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List survey question reports
		/// Get reports for survey questions.
		/// GetReportingSurveysIdQuestions reporting/surveys/{outreach_id}/questions
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="outreach_id">The outreach id.</param>
		/// <returns>List of Survey Question Report Instances</returns>
		public async Task<GetReportingSurveysIdQuestionsReturn> GetReportingSurveysIdQuestionsAsync(string[] fields, string[] exclude_fields, string outreach_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reporting/surveys/"+ (outreach_id==null? "" : System.Uri.EscapeDataString(outreach_id))+"/questions?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportingSurveysIdQuestionsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get survey question report
		/// Get report for a survey question.
		/// GetReportingSurveysIdQuestionsId reporting/surveys/{outreach_id}/questions/{question_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="outreach_id">The outreach id.</param>
		/// <param name="question_id">The ID of the survey question.</param>
		/// <returns>Survey Question Report Instance</returns>
		public async Task<GetReportingSurveysIdQuestionsIdReturn> GetReportingSurveysIdQuestionsIdAsync(string[] fields, string[] exclude_fields, string outreach_id, string question_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reporting/surveys/"+ (outreach_id==null? "" : System.Uri.EscapeDataString(outreach_id))+"/questions/"+ (question_id==null? "" : System.Uri.EscapeDataString(question_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportingSurveysIdQuestionsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List answers for question
		/// Get answers for a survey question.
		/// GetReportingSurveysIdQuestionsIdAnswers reporting/surveys/{outreach_id}/questions/{question_id}/answers
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="outreach_id">The outreach id.</param>
		/// <param name="question_id">The ID of the survey question.</param>
		/// <param name="respondent_familiarity_is">Filter survey responses by familiarity of the respondents.</param>
		/// <returns>List of Survey Question Answers</returns>
		public async Task<GetReportingSurveysIdQuestionsIdAnswersReturn> GetReportingSurveysIdQuestionsIdAnswersAsync(string[] fields, string[] exclude_fields, string outreach_id, string question_id, GetReportingSurveysIdQuestionsIdAnswersRespondent_familiarity_is respondent_familiarity_is, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reporting/surveys/"+ (outreach_id==null? "" : System.Uri.EscapeDataString(outreach_id))+"/questions/"+ (question_id==null? "" : System.Uri.EscapeDataString(question_id))+"/answers?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&respondent_familiarity_is=" + respondent_familiarity_is;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportingSurveysIdQuestionsIdAnswersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List survey responses
		/// Get responses to a survey.
		/// GetReportingSurveysIdResponses reporting/surveys/{outreach_id}/responses
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="outreach_id">The outreach id.</param>
		/// <param name="answered_question">The ID of the question that was answered.</param>
		/// <param name="chose_answer">The ID of the option chosen to filter responses on.</param>
		/// <param name="respondent_familiarity_is">Filter survey responses by familiarity of the respondents.</param>
		/// <returns>List of survey responses</returns>
		public async Task<GetReportingSurveysIdResponsesReturn> GetReportingSurveysIdResponsesAsync(string[] fields, string[] exclude_fields, string outreach_id, int answered_question, string chose_answer, GetReportingSurveysIdResponsesRespondent_familiarity_is respondent_familiarity_is, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reporting/surveys/"+ (outreach_id==null? "" : System.Uri.EscapeDataString(outreach_id))+"/responses?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&answered_question="+answered_question+"&chose_answer=" + (chose_answer==null? "" : System.Uri.EscapeDataString(chose_answer))+"&respondent_familiarity_is=" + respondent_familiarity_is;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportingSurveysIdResponsesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get survey response
		/// Get a single survey response.
		/// GetReportingSurveysIdResponsesId reporting/surveys/{outreach_id}/responses/{response_id}
		/// </summary>
		/// <param name="outreach_id">The outreach id.</param>
		/// <param name="response_id">The ID of the survey response.</param>
		/// <returns>Get a single survey response.</returns>
		public async Task<GetReportingSurveysIdResponsesIdReturn> GetReportingSurveysIdResponsesIdAsync(string outreach_id, string response_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reporting/surveys/"+ (outreach_id==null? "" : System.Uri.EscapeDataString(outreach_id))+"/responses/"+ (response_id==null? "" : System.Uri.EscapeDataString(response_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportingSurveysIdResponsesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List campaign reports
		/// Get campaign reports.
		/// GetReports reports
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="type">The campaign type.</param>
		/// <param name="before_send_time">Restrict the response to campaigns sent before the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="since_send_time">Restrict the response to campaigns sent after the set time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		public async Task<GetReportsReturn> GetReportsAsync(string[] fields, string[] exclude_fields, int count, int offset, GetCampaignsType type, System.DateTimeOffset before_send_time, System.DateTimeOffset since_send_time, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&type=" + type+"&before_send_time=" + before_send_time.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&since_send_time=" + since_send_time.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ");
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get campaign report
		/// Get report details for a specific sent campaign.
		/// GetReportsId reports/{campaign_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task<GetReportsIdReturn> GetReportsIdAsync(string[] fields, string[] exclude_fields, string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List abuse reports
		/// Get a list of abuse complaints for a specific campaign.
		/// GetReportsIdAbuseReportsId reports/{campaign_id}/abuse-reports
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task<GetReportsIdAbuseReportsIdReturn> GetReportsIdAbuseReportsIdAsync(string[] fields, string[] exclude_fields, string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/abuse-reports?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdAbuseReportsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get abuse report
		/// Get information about a specific abuse report for a campaign.
		/// GetReportsIdAbuseReportsIdId reports/{campaign_id}/abuse-reports/{report_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		/// <param name="report_id">The id for the abuse report.</param>
		public async Task<GetReportsIdAbuseReportsIdIdReturn> GetReportsIdAbuseReportsIdIdAsync(string[] fields, string[] exclude_fields, string campaign_id, string report_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/abuse-reports/"+ (report_id==null? "" : System.Uri.EscapeDataString(report_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdAbuseReportsIdIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List campaign feedback
		/// Get feedback based on a campaign's statistics. Advice feedback is based on campaign stats like opens, clicks, unsubscribes, bounces, and more.
		/// GetReportsIdAdvice reports/{campaign_id}/advice
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task<GetReportsIdAdviceReturn> GetReportsIdAdviceAsync(string[] fields, string[] exclude_fields, string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/advice?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdAdviceReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List campaign details
		/// Get information about clicks on specific links in your Mailchimp campaigns.
		/// GetReportsIdClickDetails reports/{campaign_id}/click-details
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		/// <param name="sort_field">Returns click reports sorted by the specified field.</param>
		/// <param name="sort_dir">Determines the order direction for sorted results.</param>
		public async Task<GetReportsIdClickDetailsReturn> GetReportsIdClickDetailsAsync(string[] fields, string[] exclude_fields, int count, int offset, string campaign_id, GetReportsIdClickDetailsSort_field sort_field, GetCampaignsSort_dir sort_dir, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/click-details?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&sort_field=" + sort_field+"&sort_dir=" + sort_dir;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdClickDetailsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get campaign link details
		/// Get click details for a specific link in a campaign.
		/// GetReportsIdClickDetailsId reports/{campaign_id}/click-details/{link_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		/// <param name="link_id">The id for the link.</param>
		public async Task<GetReportsIdClickDetailsIdReturn> GetReportsIdClickDetailsIdAsync(string[] fields, string[] exclude_fields, string campaign_id, string link_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/click-details/"+ (link_id==null? "" : System.Uri.EscapeDataString(link_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdClickDetailsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List clicked link subscribers
		/// Get information about list members who clicked on a specific link in a campaign.
		/// GetReportsIdClickDetailsIdMembers reports/{campaign_id}/click-details/{link_id}/members
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		/// <param name="link_id">The id for the link.</param>
		public async Task<GetReportsIdClickDetailsIdMembersReturn> GetReportsIdClickDetailsIdMembersAsync(string[] fields, string[] exclude_fields, int count, int offset, string campaign_id, string link_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/click-details/"+ (link_id==null? "" : System.Uri.EscapeDataString(link_id))+"/members?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdClickDetailsIdMembersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get clicked link subscriber
		/// Get information about a specific subscriber who clicked a link in a specific campaign.
		/// GetReportsIdClickDetailsIdMembersId reports/{campaign_id}/click-details/{link_id}/members/{subscriber_hash}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		/// <param name="link_id">The id for the link.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address.</param>
		public async Task<GetReportsIdClickDetailsIdMembersIdReturn> GetReportsIdClickDetailsIdMembersIdAsync(string[] fields, string[] exclude_fields, string campaign_id, string link_id, string subscriber_hash, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/click-details/"+ (link_id==null? "" : System.Uri.EscapeDataString(link_id))+"/members/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdClickDetailsIdMembersIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List domain performance stats
		/// Get statistics for the top-performing email domains in a campaign.
		/// GetReportsIdDomainPerformance reports/{campaign_id}/domain-performance
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task<GetReportsIdDomainPerformanceReturn> GetReportsIdDomainPerformanceAsync(string[] fields, string[] exclude_fields, string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/domain-performance?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdDomainPerformanceReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List campaign product activity
		/// Get breakdown of product activity for a campaign
		/// GetReportsIdEcommerceProductActivity reports/{campaign_id}/ecommerce-product-activity
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		/// <param name="sort_field">Returns files sorted by the specified field.</param>
		/// <returns>Ecommerce Product Activity Instance</returns>
		public async Task<GetReportsIdEcommerceProductActivityReturn> GetReportsIdEcommerceProductActivityAsync(string[] fields, string[] exclude_fields, int count, int offset, string campaign_id, GetReportingFacebookAdsIdEcommerceProductActivitySort_field sort_field, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/ecommerce-product-activity?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&sort_field=" + sort_field;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdEcommerceProductActivityReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List EepURL activity
		/// Get a summary of social activity for the campaign, tracked by EepURL.
		/// GetReportsIdEepurl reports/{campaign_id}/eepurl
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task<GetReportsIdEepurlReturn> GetReportsIdEepurlAsync(string[] fields, string[] exclude_fields, string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/eepurl?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdEepurlReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List email activity
		/// Get a list of member's subscriber activity in a specific campaign.
		/// GetReportsIdEmailActivity reports/{campaign_id}/email-activity
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		/// <param name="since">Restrict results to email activity events that occur after a specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		public async Task<GetReportsIdEmailActivityReturn> GetReportsIdEmailActivityAsync(string[] fields, string[] exclude_fields, int count, int offset, string campaign_id, string since, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/email-activity?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&since=" + (since==null? "" : System.Uri.EscapeDataString(since));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdEmailActivityReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get subscriber email activity
		/// Get a specific list member's activity in a campaign including opens, clicks, and bounces.
		/// GetReportsIdEmailActivityId reports/{campaign_id}/email-activity/{subscriber_hash}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address.</param>
		/// <param name="since">Restrict results to email activity events that occur after a specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		public async Task<GetReportsIdEmailActivityIdReturn> GetReportsIdEmailActivityIdAsync(string[] fields, string[] exclude_fields, string campaign_id, string subscriber_hash, string since, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/email-activity/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&since=" + (since==null? "" : System.Uri.EscapeDataString(since));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdEmailActivityIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List top open activities
		/// Get top open locations for a specific campaign.
		/// GetReportsIdLocations reports/{campaign_id}/locations
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		public async Task<GetReportsIdLocationsReturn> GetReportsIdLocationsAsync(string[] fields, string[] exclude_fields, string campaign_id, int count, int offset, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/locations?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdLocationsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List campaign open details
		/// Get detailed information about any campaign emails that were opened by a list member.
		/// GetReportsIdOpenDetails reports/{campaign_id}/open-details
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		/// <param name="since">Restrict results to campaign open events that occur after a specific time. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="sort_field">Returns open reports sorted by the specified field.</param>
		/// <param name="sort_dir">Determines the order direction for sorted results.</param>
		public async Task<GetReportsIdOpenDetailsReturn> GetReportsIdOpenDetailsAsync(string[] fields, string[] exclude_fields, int count, int offset, string campaign_id, string since, GetReportsIdOpenDetailsSort_field sort_field, GetCampaignsSort_dir sort_dir, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/open-details?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&since=" + (since==null? "" : System.Uri.EscapeDataString(since))+"&sort_field=" + sort_field+"&sort_dir=" + sort_dir;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdOpenDetailsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get opened campaign subscriber
		/// Get information about a specific subscriber who opened a campaign.
		/// GetReportsIdOpenDetailsIdMembersId reports/{campaign_id}/open-details/{subscriber_hash}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address.</param>
		public async Task<GetReportsIdOpenDetailsIdMembersIdReturn> GetReportsIdOpenDetailsIdMembersIdAsync(string[] fields, string[] exclude_fields, string campaign_id, string subscriber_hash, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/open-details/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdOpenDetailsIdMembersIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List campaign recipients
		/// Get information about campaign recipients.
		/// GetReportsIdSentTo reports/{campaign_id}/sent-to
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task<GetReportsIdSentToReturn> GetReportsIdSentToAsync(string[] fields, string[] exclude_fields, int count, int offset, string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/sent-to?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdSentToReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get campaign recipient info
		/// Get information about a specific campaign recipient.
		/// GetReportsIdSentToId reports/{campaign_id}/sent-to/{subscriber_hash}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address.</param>
		public async Task<GetReportsIdSentToIdReturn> GetReportsIdSentToIdAsync(string[] fields, string[] exclude_fields, string campaign_id, string subscriber_hash, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/sent-to/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdSentToIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List child campaign reports
		/// Get a list of reports with child campaigns for a specific parent campaign.
		/// GetReportsIdSubReportsId reports/{campaign_id}/sub-reports
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task<GetReportsIdSubReportsIdReturn> GetReportsIdSubReportsIdAsync(string[] fields, string[] exclude_fields, string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/sub-reports?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdSubReportsIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List unsubscribed members
		/// Get information about members who have unsubscribed from a specific campaign.
		/// GetReportsIdUnsubscribed reports/{campaign_id}/unsubscribed
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		public async Task<GetReportsIdUnsubscribedReturn> GetReportsIdUnsubscribedAsync(string[] fields, string[] exclude_fields, int count, int offset, string campaign_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/unsubscribed?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdUnsubscribedReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get unsubscribed member
		/// Get information about a specific list member who unsubscribed from a campaign.
		/// GetReportsIdUnsubscribedId reports/{campaign_id}/unsubscribed/{subscriber_hash}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="campaign_id">The unique id for the campaign.</param>
		/// <param name="subscriber_hash">The MD5 hash of the lowercase version of the list member's email address.</param>
		public async Task<GetReportsIdUnsubscribedIdReturn> GetReportsIdUnsubscribedIdAsync(string[] fields, string[] exclude_fields, string campaign_id, string subscriber_hash, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "reports/"+ (campaign_id==null? "" : System.Uri.EscapeDataString(campaign_id))+"/unsubscribed/"+ (subscriber_hash==null? "" : System.Uri.EscapeDataString(subscriber_hash))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetReportsIdUnsubscribedIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Search campaigns
		/// Search all campaigns for the specified query terms.
		/// GetSearchCampaigns search-campaigns
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="query">The search query used to filter results.</param>
		public async Task<GetSearchCampaignsReturn> GetSearchCampaignsAsync(string[] fields, string[] exclude_fields, string query, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "search-campaigns?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&query=" + (query==null? "" : System.Uri.EscapeDataString(query));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetSearchCampaignsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Search members
		/// Search for list members. This search can be restricted to a specific list, or can be used to search across all lists in an account.
		/// GetSearchMembers search-members
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="query">The search query used to filter results. Query should be a valid email, or a string representing a contact's first or last name.</param>
		/// <param name="list_id">The unique id for the list.</param>
		public async Task<GetSearchMembersReturn> GetSearchMembersAsync(string[] fields, string[] exclude_fields, string query, string list_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "search-members?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&query=" + (query==null? "" : System.Uri.EscapeDataString(query))+"&list_id=" + (list_id==null? "" : System.Uri.EscapeDataString(list_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetSearchMembersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List template folders
		/// Get all folders used to organize templates.
		/// GetTemplateFolders template-folders
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		public async Task<GetTemplateFoldersReturn> GetTemplateFoldersAsync(string[] fields, string[] exclude_fields, int count, int offset, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "template-folders?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetTemplateFoldersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add template folder
		/// Create a new template folder.
		/// PostTemplateFolders template-folders
		/// </summary>
		public async Task<PostTemplateFoldersReturn> PostTemplateFoldersAsync(PostTemplateFoldersBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "template-folders";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostTemplateFoldersReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete template folder
		/// Delete a specific template folder, and mark all the templates in the folder as 'unfiled'.
		/// DeleteTemplateFoldersId template-folders/{folder_id}
		/// </summary>
		/// <param name="folder_id">The unique id for the template folder.</param>
		public async Task DeleteTemplateFoldersIdAsync(string folder_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "template-folders/"+ (folder_id==null? "" : System.Uri.EscapeDataString(folder_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get template folder
		/// Get information about a specific folder used to organize templates.
		/// GetTemplateFoldersId template-folders/{folder_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="folder_id">The unique id for the template folder.</param>
		public async Task<GetTemplateFoldersIdReturn> GetTemplateFoldersIdAsync(string[] fields, string[] exclude_fields, string folder_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "template-folders/"+ (folder_id==null? "" : System.Uri.EscapeDataString(folder_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetTemplateFoldersIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update template folder
		/// Update a specific folder used to organize templates.
		/// PatchTemplateFoldersId template-folders/{folder_id}
		/// </summary>
		/// <param name="folder_id">The unique id for the template folder.</param>
		public async Task<PatchTemplateFoldersIdReturn> PatchTemplateFoldersIdAsync(string folder_id, PostTemplateFoldersBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "template-folders/"+ (folder_id==null? "" : System.Uri.EscapeDataString(folder_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchTemplateFoldersIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List templates
		/// Get a list of an account's available templates.
		/// GetTemplates templates
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="count">The number of records to return. Default value is 10. Maximum value is 1000
		/// Maximum: 1000
		// </param>
		/// <param name="offset">Used for [pagination](https://mailchimp.com/developer/marketing/docs/methods-parameters/#pagination), this it the number of records from a collection to skip. Default value is 0.</param>
		/// <param name="created_by">The Mailchimp account user who created the template.</param>
		/// <param name="since_date_created">Restrict the response to templates created after the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="before_date_created">Restrict the response to templates created before the set date. Uses ISO 8601 time format: 2015-10-21T15:41:36+00:00.</param>
		/// <param name="type">Limit results based on template type.</param>
		/// <param name="category">Limit results based on category.</param>
		/// <param name="folder_id">The unique folder id.</param>
		/// <param name="sort_field">Returns user templates sorted by the specified field.</param>
		/// <param name="content_type">Limit results based on how the template's content is put together. Only templates of type `user` can be filtered by `content_type`. If you want to retrieve saved templates created with the legacy email editor, then filter `content_type` to `template`. If you'd rather pull your saved templates for the new editor, filter to `multichannel`. For code your own templates, filter to `html`.</param>
		/// <param name="sort_dir">Determines the order direction for sorted results.</param>
		public async Task<GetTemplatesReturn> GetTemplatesAsync(string[] fields, string[] exclude_fields, int count, int offset, string created_by, string since_date_created, string before_date_created, string type, string category, string folder_id, GetTemplatesSort_field sort_field, GetTemplatesContent_type content_type, GetCampaignsSort_dir sort_dir, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"))+"&count="+count+"&offset="+offset+"&created_by=" + (created_by==null? "" : System.Uri.EscapeDataString(created_by))+"&since_date_created=" + (since_date_created==null? "" : System.Uri.EscapeDataString(since_date_created))+"&before_date_created=" + (before_date_created==null? "" : System.Uri.EscapeDataString(before_date_created))+"&type=" + (type==null? "" : System.Uri.EscapeDataString(type))+"&category=" + (category==null? "" : System.Uri.EscapeDataString(category))+"&folder_id=" + (folder_id==null? "" : System.Uri.EscapeDataString(folder_id))+"&sort_field=" + sort_field+"&content_type=" + content_type+"&sort_dir=" + sort_dir;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetTemplatesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add template
		/// Create a new template for the account. Only Classic templates are supported.
		/// PostTemplates templates
		/// </summary>
		public async Task<PostTemplatesReturn> PostTemplatesAsync(PostTemplatesBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PostTemplatesReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete template
		/// Delete a specific template.
		/// DeleteTemplatesId templates/{template_id}
		/// </summary>
		/// <param name="template_id">The unique id for the template.</param>
		public async Task DeleteTemplatesIdAsync(string template_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates/"+ (template_id==null? "" : System.Uri.EscapeDataString(template_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get template info
		/// Get information about a specific template.
		/// GetTemplatesId templates/{template_id}
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="template_id">The unique id for the template.</param>
		public async Task<GetTemplatesIdReturn> GetTemplatesIdAsync(string[] fields, string[] exclude_fields, string template_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates/"+ (template_id==null? "" : System.Uri.EscapeDataString(template_id))+"?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetTemplatesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update template
		/// Update the name, HTML, or `folder_id` of an existing template.
		/// PatchTemplatesId templates/{template_id}
		/// </summary>
		/// <param name="template_id">The unique id for the template.</param>
		public async Task<PatchTemplatesIdReturn> PatchTemplatesIdAsync(string template_id, PostTemplatesBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates/"+ (template_id==null? "" : System.Uri.EscapeDataString(template_id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PatchTemplatesIdReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// View default content
		/// Get the sections that you can edit in a template, including each section's default content.
		/// GetTemplatesIdDefaultContent templates/{template_id}/default-content
		/// </summary>
		/// <param name="fields">A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="exclude_fields">A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.</param>
		/// <param name="template_id">The unique id for the template.</param>
		public async Task<GetTemplatesIdDefaultContentReturn> GetTemplatesIdDefaultContentAsync(string[] fields, string[] exclude_fields, string template_id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "templates/"+ (template_id==null? "" : System.Uri.EscapeDataString(template_id))+"/default-content?"+string.Join("&", fields.Select(z => $"fields={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exclude_fields.Select(z => $"exclude_fields={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetTemplatesIdDefaultContentReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List sending domains
		/// Get all of the sending domains on the account.
		/// GetVerifiedDomains verified-domains
		/// </summary>
		/// <returns>The domains on the account.</returns>
		public async Task<GetVerifiedDomainsReturn> GetVerifiedDomainsAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "verified-domains";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetVerifiedDomainsReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Add domain to account
		/// Add a domain to the account.
		/// CreateVerifiedDomain verified-domains
		/// </summary>
		/// <returns>The newly-created domain.</returns>
		public async Task<CreateVerifiedDomainReturn> CreateVerifiedDomainAsync(CreateVerifiedDomainPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "verified-domains";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateVerifiedDomainReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete domain
		/// Delete a verified domain from the account.
		/// DeleteVerifiedDomain verified-domains/{domain_name}
		/// </summary>
		/// <param name="domain_name">The domain name.</param>
		public async Task DeleteVerifiedDomainAsync(string domain_name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "verified-domains/"+ (domain_name==null? "" : System.Uri.EscapeDataString(domain_name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get domain info
		/// Get the details for a single domain on the account.
		/// GetVerifiedDomain verified-domains/{domain_name}
		/// </summary>
		/// <param name="domain_name">The domain name.</param>
		public async Task<GetVerifiedDomainReturn> GetVerifiedDomainAsync(string domain_name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "verified-domains/"+ (domain_name==null? "" : System.Uri.EscapeDataString(domain_name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetVerifiedDomainReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Verify domain
		/// Verify a domain for sending.
		/// VerifyDomain verified-domains/{domain_name}/actions/verify
		/// </summary>
		/// <param name="domain_name">The domain name.</param>
		/// <returns>The domain being verified for sending.</returns>
		public async Task<VerifyDomainReturn> VerifyDomainAsync(string domain_name, VerifyDomainPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "verified-domains/"+ (domain_name==null? "" : System.Uri.EscapeDataString(domain_name))+"/actions/verify";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<VerifyDomainReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class GetRootReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetRootReturn_links[] GetRootReturn_links { get; set; }
		
		/// <summary>
		/// The Mailchimp account ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_id")]
		public string Account_id { get; set; }
		
		/// <summary>
		/// The user-specified industry associated with the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_industry")]
		public string Account_industry { get; set; }
		
		/// <summary>
		/// The name of the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_name")]
		public string Account_name { get; set; }
		
		/// <summary>
		/// The timezone currently set for the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="account_timezone")]
		public string Account_timezone { get; set; }
		
		/// <summary>
		/// URL of the avatar for the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avatar_url")]
		public string Avatar_url { get; set; }
		
		/// <summary>
		/// Information about the account contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact")]
		public GetRootReturnContact Contact { get; set; }
		
		/// <summary>
		/// The account email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// The first name tied to the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// Date of first payment for monthly plans.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_payment")]
		public System.Nullable<System.DateTimeOffset> First_payment { get; set; }
		
		/// <summary>
		/// The [average campaign statistics](https://mailchimp.com/resources/research/email-marketing-benchmarks/?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for all campaigns in the account's specified industry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="industry_stats")]
		public GetRootReturnIndustry_stats Industry_stats { get; set; }
		
		/// <summary>
		/// The date and time of the last login for this account in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_login")]
		public System.Nullable<System.DateTimeOffset> Last_login { get; set; }
		
		/// <summary>
		/// The last name tied to the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The ID associated with the user who owns this API key. If you can login to multiple accounts, this ID will be the same for each account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="login_id")]
		public string Login_id { get; set; }
		
		/// <summary>
		/// The date and time that the account was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_since")]
		public System.Nullable<System.DateTimeOffset> Member_since { get; set; }
		
		/// <summary>
		/// The type of pricing plan the account is on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pricing_plan_type")]
		public System.Nullable<GetRootReturnPricing_plan_type> Pricing_plan_type { get; set; }
		
		/// <summary>
		/// Legacy - whether the account includes [Mailchimp Pro](https://mailchimp.com/help/about-mailchimp-pro/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pro_enabled")]
		public System.Nullable<System.Boolean> Pro_enabled { get; set; }
		
		/// <summary>
		/// The [user role](https://mailchimp.com/help/manage-user-levels-in-your-account/) for the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
		
		/// <summary>
		/// The total number of subscribers across all lists in the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_subscribers")]
		public System.Nullable<System.Int32> Total_subscribers { get; set; }
		
		/// <summary>
		/// The username tied to the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	public class GetRootReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public System.Nullable<GetRootReturn_linksMethod> Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetRootReturn_linksMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POST = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PATCH = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPTIONS = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HEAD = 6,
	}
	
	public class GetRootReturnContact
	{
		
		/// <summary>
		/// The street address for the account contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addr1")]
		public string Addr1 { get; set; }
		
		/// <summary>
		/// The street address for the account contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="addr2")]
		public string Addr2 { get; set; }
		
		/// <summary>
		/// The city for the account contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company name for the account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The country for the account contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The state for the account contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// The zip code for the account contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="zip")]
		public string Zip { get; set; }
	}
	
	public class GetRootReturnIndustry_stats
	{
		
		/// <summary>
		/// The average bounce rate for all campaigns in the account's specified industry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bounce_rate")]
		public System.Nullable<System.Double> Bounce_rate { get; set; }
		
		/// <summary>
		/// The average unique click rate for all campaigns in the account's specified industry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The average unique open rate for all campaigns in the account's specified industry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetRootReturnPricing_plan_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		monthly = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pay_as_you_go = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		forever_free = 2,
	}
	
	public class GetAccountExportsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAccountExportsReturn_links[] GetAccountExportsReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing an account export.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exports")]
		public GetAccountExportsReturnExports[] GetAccountExportsReturnExports { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetAccountExportsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetAccountExportsReturnExports
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAccountExportsReturnExports_links[] GetAccountExportsReturnExports_links { get; set; }
		
		/// <summary>
		/// If the export is finished, the download URL for an export. URLs are only valid for 90 days after the export completes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="download_url")]
		public string Download_url { get; set; }
		
		/// <summary>
		/// The ID for the export.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="export_id")]
		public System.Nullable<System.Int32> Export_id { get; set; }
		
		/// <summary>
		/// If finished, the finish time for the export.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finished")]
		public System.Nullable<System.DateTimeOffset> Finished { get; set; }
		
		/// <summary>
		/// The size of the uncompressed export in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size_in_bytes")]
		public System.Nullable<System.Int32> Size_in_bytes { get; set; }
		
		/// <summary>
		/// Start time for the export.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="started")]
		public System.Nullable<System.DateTimeOffset> Started { get; set; }
	}
	
	public class GetAccountExportsReturnExports_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostAccountExportPostBody
	{
		
		/// <summary>
		/// The stages of an account export to include.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="include_stages")]
		public string[] Include_stages { get; set; }
		
		/// <summary>
		/// An ISO 8601 date that will limit the export to only records created after a given time. For instance, the reports stage will contain any campaign sent after the given timestamp. Audiences, however, are excluded from this limit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="since_timestamp")]
		public System.Nullable<System.DateTimeOffset> Since_timestamp { get; set; }
	}
	
	public class PostAccountExportReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostAccountExportReturn_links[] PostAccountExportReturn_links { get; set; }
		
		/// <summary>
		/// If the export is finished, the download URL for an export. URLs are only valid for 90 days after the export completes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="download_url")]
		public string Download_url { get; set; }
		
		/// <summary>
		/// The ID for the export.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="export_id")]
		public System.Nullable<System.Int32> Export_id { get; set; }
		
		/// <summary>
		/// If finished, the finish time for the export.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finished")]
		public System.Nullable<System.DateTimeOffset> Finished { get; set; }
		
		/// <summary>
		/// The size of the uncompressed export in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size_in_bytes")]
		public System.Nullable<System.Int32> Size_in_bytes { get; set; }
		
		/// <summary>
		/// Start time for the export.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="started")]
		public System.Nullable<System.DateTimeOffset> Started { get; set; }
	}
	
	public class PostAccountExportReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetAccountExportIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAccountExportIdReturn_links[] GetAccountExportIdReturn_links { get; set; }
		
		/// <summary>
		/// If the export is finished, the download URL for an export. URLs are only valid for 90 days after the export completes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="download_url")]
		public string Download_url { get; set; }
		
		/// <summary>
		/// The ID for the export.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="export_id")]
		public System.Nullable<System.Int32> Export_id { get; set; }
		
		/// <summary>
		/// If finished, the finish time for the export.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finished")]
		public System.Nullable<System.DateTimeOffset> Finished { get; set; }
		
		/// <summary>
		/// The size of the uncompressed export in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size_in_bytes")]
		public System.Nullable<System.Int32> Size_in_bytes { get; set; }
		
		/// <summary>
		/// Start time for the export.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="started")]
		public System.Nullable<System.DateTimeOffset> Started { get; set; }
	}
	
	public class GetAccountExportIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetActivityFeedChimpChatterReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetActivityFeedChimpChatterReturn_links[] GetActivityFeedChimpChatterReturn_links { get; set; }
		
		/// <summary>
		/// An array of Chimp Chatter messages. There's a maximum of 200 messages present for an account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="chimp_chatter")]
		public GetActivityFeedChimpChatterReturnChimp_chatter[] GetActivityFeedChimpChatterReturnChimp_chatter { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetActivityFeedChimpChatterReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetActivityFeedChimpChatterReturnChimp_chatter
	{
		
		/// <summary>
		/// If it exists, campaign ID for the associated campaign
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// If it exists, list ID for the associated list
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The type of activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GetActivityFeedChimpChatterReturnChimp_chatterType> Type { get; set; }
		
		/// <summary>
		/// The date and time this activity was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="update_time")]
		public System.Nullable<System.DateTimeOffset> Update_time { get; set; }
		
		/// <summary>
		/// URL to a report that includes this activity
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetActivityFeedChimpChatterReturnChimp_chatterType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="lists:new-subscriber")]
		listsnewMinussubscriber = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="lists:unsubscribes")]
		listsunsubscribes = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="lists:profile-updates")]
		listsprofileMinusupdates = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="campaigns:facebook-likes")]
		campaignsfacebookMinuslikes = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="campaigns:forward-to-friend")]
		campaignsforwardMinustoMinusfriend = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="lists:imports")]
		listsimports = 5,
	}
	
	public class GetAuthorizedAppsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAuthorizedAppsReturn_links[] GetAuthorizedAppsReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing an authorized application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="apps")]
		public GetAuthorizedAppsReturnApps[] GetAuthorizedAppsReturnApps { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetAuthorizedAppsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetAuthorizedAppsReturnApps
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAuthorizedAppsReturnApps_links[] GetAuthorizedAppsReturnApps_links { get; set; }
		
		/// <summary>
		/// A short description of the application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The ID for the application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// An array of usernames for users who have linked the app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="users")]
		public string[] Users { get; set; }
	}
	
	public class GetAuthorizedAppsReturnApps_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetAuthorizedAppsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAuthorizedAppsIdReturn_links[] GetAuthorizedAppsIdReturn_links { get; set; }
		
		/// <summary>
		/// A short description of the application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The ID for the application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// An array of usernames for users who have linked the app.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="users")]
		public string[] Users { get; set; }
	}
	
	public class GetAuthorizedAppsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public enum GetAutomationsStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		save = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		paused = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sending = 2,
	}
	
	public class GetAutomationsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAutomationsReturn_links[] GetAutomationsReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automations")]
		public GetAutomationsReturnAutomations[] GetAutomationsReturnAutomations { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetAutomationsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetAutomationsReturnAutomations
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAutomationsReturnAutomations_links[] GetAutomationsReturnAutomations_links { get; set; }
		
		/// <summary>
		/// The date and time the Automation was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="create_time")]
		public System.Nullable<System.DateTimeOffset> Create_time { get; set; }
		
		/// <summary>
		/// The total number of emails sent for the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// A string that identifies the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// List settings for the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public GetAutomationsReturnAutomationsRecipients Recipients { get; set; }
		
		/// <summary>
		/// A summary of opens and clicks for sent campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report_summary")]
		public GetAutomationsReturnAutomationsReport_summary Report_summary { get; set; }
		
		/// <summary>
		/// The settings for the Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public GetAutomationsReturnAutomationsSettings Settings { get; set; }
		
		/// <summary>
		/// The date and time the Automation was started in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_time")]
		public System.Nullable<System.DateTimeOffset> Start_time { get; set; }
		
		/// <summary>
		/// The current status of the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetAutomationsStatus Status { get; set; }
		
		/// <summary>
		/// The tracking options for the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public GetAutomationsReturnAutomationsTracking Tracking { get; set; }
		
		/// <summary>
		/// Available triggers for Automation workflows.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trigger_settings")]
		public GetAutomationsReturnAutomationsTrigger_settings Trigger_settings { get; set; }
	}
	
	public class GetAutomationsReturnAutomations_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetAutomationsReturnAutomationsRecipients
	{
		
		/// <summary>
		/// The unique list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// List Name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// An object representing all segmentation options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_opts")]
		public GetAutomationsReturnAutomationsRecipientsSegment_opts Segment_opts { get; set; }
		
		/// <summary>
		/// The id of the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
	}
	
	public class GetAutomationsReturnAutomationsRecipientsSegment_opts
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Segment match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public System.Nullable<GetAutomationsReturnAutomationsRecipientsSegment_optsMatch> Match { get; set; }
		
		/// <summary>
		/// The id for an existing saved segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saved_segment_id")]
		public System.Nullable<System.Int32> Saved_segment_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetAutomationsReturnAutomationsRecipientsSegment_optsMatch
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		any = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		all = 1,
	}
	
	public class GetAutomationsReturnAutomationsReport_summary
	{
		
		/// <summary>
		/// The number of unique clicks, divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The total number of clicks for an campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The total number of opens for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// The number of unique clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber_clicks")]
		public System.Nullable<System.Int32> Subscriber_clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class GetAutomationsReturnAutomationsSettings
	{
		
		/// <summary>
		/// Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the Automation. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticate")]
		public System.Nullable<System.Boolean> Authenticate { get; set; }
		
		/// <summary>
		/// Whether to automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_footer")]
		public System.Nullable<System.Boolean> Auto_footer { get; set; }
		
		/// <summary>
		/// The 'from' name for the Automation (not an email address).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// Whether to automatically inline the CSS included with the Automation content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inline_css")]
		public System.Nullable<System.Boolean> Inline_css { get; set; }
		
		/// <summary>
		/// The reply-to email address for the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public string Reply_to { get; set; }
		
		/// <summary>
		/// The title of the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The Automation's custom 'To' name, typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to_name")]
		public string To_name { get; set; }
		
		/// <summary>
		/// Whether to use Mailchimp Conversation feature to manage replies
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_conversation")]
		public System.Nullable<System.Boolean> Use_conversation { get; set; }
	}
	
	public class GetAutomationsReturnAutomationsTracking
	{
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capsule")]
		public GetAutomationsReturnAutomationsTrackingCapsule Capsule { get; set; }
		
		/// <summary>
		/// The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicktale")]
		public string Clicktale { get; set; }
		
		/// <summary>
		/// Whether to enable e-commerce tracking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecomm360")]
		public System.Nullable<System.Boolean> Ecomm360 { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal_tracking")]
		public System.Nullable<System.Boolean> Goal_tracking { get; set; }
		
		/// <summary>
		/// The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics")]
		public string Google_analytics { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the Automation. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html_clicks")]
		public System.Nullable<System.Boolean> Html_clicks { get; set; }
		
		/// <summary>
		/// Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Boolean> Opens { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salesforce")]
		public GetAutomationsReturnAutomationsTrackingSalesforce Salesforce { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the Automation. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text_clicks")]
		public System.Nullable<System.Boolean> Text_clicks { get; set; }
	}
	
	public class GetAutomationsReturnAutomationsTrackingCapsule
	{
		
		/// <summary>
		/// Update contact notes for a campaign based on a subscriber's email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class GetAutomationsReturnAutomationsTrackingSalesforce
	{
		
		/// <summary>
		/// Create a campaign in a connected Salesforce account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Update contact notes for a campaign based on a subscriber's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class GetAutomationsReturnAutomationsTrigger_settings
	{
		
		/// <summary>
		/// A workflow's runtime settings for an Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtime")]
		public GetAutomationsReturnAutomationsTrigger_settingsRuntime Runtime { get; set; }
		
		/// <summary>
		/// The number of emails in the Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_emails_count")]
		public System.Nullable<System.Int32> Workflow_emails_count { get; set; }
		
		/// <summary>
		/// The title of the workflow type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_title")]
		public string Workflow_title { get; set; }
		
		/// <summary>
		/// The type of Automation workflow.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflow_type")]
		public GetAutomationsReturnAutomationsTrigger_settingsWorkflow_type Workflow_type { get; set; }
	}
	
	public class GetAutomationsReturnAutomationsTrigger_settingsRuntime
	{
		
		/// <summary>
		/// The days an Automation workflow can send.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="days")]
		public string[] Days { get; set; }
		
		/// <summary>
		/// The hours an Automation workflow can send.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours")]
		public GetAutomationsReturnAutomationsTrigger_settingsRuntimeHours Hours { get; set; }
	}
	
	public class GetAutomationsReturnAutomationsTrigger_settingsRuntimeHours
	{
		
		/// <summary>
		/// When to send the Automation email.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetAutomationsReturnAutomationsTrigger_settingsRuntimeHoursType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetAutomationsReturnAutomationsTrigger_settingsRuntimeHoursType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		send_asap = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		send_between = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		send_at = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetAutomationsReturnAutomationsTrigger_settingsWorkflow_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		abandonedBrowse = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		abandonedCart = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		api = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bestCustomers = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		categoryFollowup = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dateAdded = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		emailFollowup = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		emailSeries = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		groupAdd = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		groupRemove = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mandrill = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		productFollowup = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		purchaseFollowup = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		recurringEvent = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		specialEvent = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		visitUrl = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		welcomeSeries = 16,
	}
	
	public class PostAutomationsPostBody
	{
		
		/// <summary>
		/// List settings for the Automation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public PostAutomationsPostBodyRecipients Recipients { get; set; }
		
		/// <summary>
		/// The settings for the Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public PostAutomationsPostBodySettings Settings { get; set; }
		
		/// <summary>
		/// Trigger settings for the Automation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="trigger_settings")]
		public PostAutomationsPostBodyTrigger_settings Trigger_settings { get; set; }
	}
	
	public class PostAutomationsPostBodyRecipients
	{
		
		/// <summary>
		/// The id of the List.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The id of the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
	}
	
	public class PostAutomationsPostBodySettings
	{
		
		/// <summary>
		/// The 'from' name for the Automation (not an email address).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// The reply-to email address for the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public string Reply_to { get; set; }
	}
	
	public class PostAutomationsPostBodyTrigger_settings
	{
		
		/// <summary>
		/// The type of Automation workflow. Currently only supports 'abandonedCart'.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflow_type")]
		public string Workflow_type { get; set; }
	}
	
	public class PostAutomationsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostAutomationsReturn_links[] PostAutomationsReturn_links { get; set; }
		
		/// <summary>
		/// The date and time the Automation was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="create_time")]
		public System.Nullable<System.DateTimeOffset> Create_time { get; set; }
		
		/// <summary>
		/// The total number of emails sent for the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// A string that identifies the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// List settings for the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public PostAutomationsReturnRecipients Recipients { get; set; }
		
		/// <summary>
		/// A summary of opens and clicks for sent campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report_summary")]
		public PostAutomationsReturnReport_summary Report_summary { get; set; }
		
		/// <summary>
		/// The settings for the Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public PostAutomationsReturnSettings Settings { get; set; }
		
		/// <summary>
		/// The date and time the Automation was started in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_time")]
		public System.Nullable<System.DateTimeOffset> Start_time { get; set; }
		
		/// <summary>
		/// The current status of the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetAutomationsStatus Status { get; set; }
		
		/// <summary>
		/// The tracking options for the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public PostAutomationsReturnTracking Tracking { get; set; }
		
		/// <summary>
		/// Available triggers for Automation workflows.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trigger_settings")]
		public PostAutomationsReturnTrigger_settings Trigger_settings { get; set; }
	}
	
	public class PostAutomationsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostAutomationsReturnRecipients
	{
		
		/// <summary>
		/// The unique list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// List Name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// An object representing all segmentation options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_opts")]
		public PostAutomationsReturnRecipientsSegment_opts Segment_opts { get; set; }
		
		/// <summary>
		/// The id of the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
	}
	
	public class PostAutomationsReturnRecipientsSegment_opts
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Segment match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
		
		/// <summary>
		/// The id for an existing saved segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saved_segment_id")]
		public System.Nullable<System.Int32> Saved_segment_id { get; set; }
	}
	
	public class PostAutomationsReturnReport_summary
	{
		
		/// <summary>
		/// The number of unique clicks, divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The total number of clicks for an campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The total number of opens for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// The number of unique clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber_clicks")]
		public System.Nullable<System.Int32> Subscriber_clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class PostAutomationsReturnSettings
	{
		
		/// <summary>
		/// Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the Automation. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticate")]
		public System.Nullable<System.Boolean> Authenticate { get; set; }
		
		/// <summary>
		/// Whether to automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_footer")]
		public System.Nullable<System.Boolean> Auto_footer { get; set; }
		
		/// <summary>
		/// The 'from' name for the Automation (not an email address).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// Whether to automatically inline the CSS included with the Automation content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inline_css")]
		public System.Nullable<System.Boolean> Inline_css { get; set; }
		
		/// <summary>
		/// The reply-to email address for the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public string Reply_to { get; set; }
		
		/// <summary>
		/// The title of the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The Automation's custom 'To' name, typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to_name")]
		public string To_name { get; set; }
		
		/// <summary>
		/// Whether to use Mailchimp Conversation feature to manage replies
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_conversation")]
		public System.Nullable<System.Boolean> Use_conversation { get; set; }
	}
	
	public class PostAutomationsReturnTracking
	{
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capsule")]
		public PostAutomationsReturnTrackingCapsule Capsule { get; set; }
		
		/// <summary>
		/// The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicktale")]
		public string Clicktale { get; set; }
		
		/// <summary>
		/// Whether to enable e-commerce tracking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecomm360")]
		public System.Nullable<System.Boolean> Ecomm360 { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal_tracking")]
		public System.Nullable<System.Boolean> Goal_tracking { get; set; }
		
		/// <summary>
		/// The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics")]
		public string Google_analytics { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the Automation. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html_clicks")]
		public System.Nullable<System.Boolean> Html_clicks { get; set; }
		
		/// <summary>
		/// Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Boolean> Opens { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salesforce")]
		public PostAutomationsReturnTrackingSalesforce Salesforce { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the Automation. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text_clicks")]
		public System.Nullable<System.Boolean> Text_clicks { get; set; }
	}
	
	public class PostAutomationsReturnTrackingCapsule
	{
		
		/// <summary>
		/// Update contact notes for a campaign based on a subscriber's email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class PostAutomationsReturnTrackingSalesforce
	{
		
		/// <summary>
		/// Create a campaign in a connected Salesforce account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Update contact notes for a campaign based on a subscriber's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class PostAutomationsReturnTrigger_settings
	{
		
		/// <summary>
		/// A workflow's runtime settings for an Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtime")]
		public PostAutomationsReturnTrigger_settingsRuntime Runtime { get; set; }
		
		/// <summary>
		/// The number of emails in the Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_emails_count")]
		public System.Nullable<System.Int32> Workflow_emails_count { get; set; }
		
		/// <summary>
		/// The title of the workflow type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_title")]
		public string Workflow_title { get; set; }
		
		/// <summary>
		/// The type of Automation workflow.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflow_type")]
		public GetAutomationsReturnAutomationsTrigger_settingsWorkflow_type Workflow_type { get; set; }
	}
	
	public class PostAutomationsReturnTrigger_settingsRuntime
	{
		
		/// <summary>
		/// The days an Automation workflow can send.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="days")]
		public string[] Days { get; set; }
		
		/// <summary>
		/// The hours an Automation workflow can send.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours")]
		public PostAutomationsReturnTrigger_settingsRuntimeHours Hours { get; set; }
	}
	
	public class PostAutomationsReturnTrigger_settingsRuntimeHours
	{
		
		/// <summary>
		/// When to send the Automation email.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetAutomationsReturnAutomationsTrigger_settingsRuntimeHoursType Type { get; set; }
	}
	
	public class GetAutomationsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAutomationsIdReturn_links[] GetAutomationsIdReturn_links { get; set; }
		
		/// <summary>
		/// The date and time the Automation was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="create_time")]
		public System.Nullable<System.DateTimeOffset> Create_time { get; set; }
		
		/// <summary>
		/// The total number of emails sent for the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// A string that identifies the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// List settings for the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public GetAutomationsIdReturnRecipients Recipients { get; set; }
		
		/// <summary>
		/// A summary of opens and clicks for sent campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report_summary")]
		public GetAutomationsIdReturnReport_summary Report_summary { get; set; }
		
		/// <summary>
		/// The settings for the Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public GetAutomationsIdReturnSettings Settings { get; set; }
		
		/// <summary>
		/// The date and time the Automation was started in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_time")]
		public System.Nullable<System.DateTimeOffset> Start_time { get; set; }
		
		/// <summary>
		/// The current status of the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetAutomationsStatus Status { get; set; }
		
		/// <summary>
		/// The tracking options for the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public GetAutomationsIdReturnTracking Tracking { get; set; }
		
		/// <summary>
		/// Available triggers for Automation workflows.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trigger_settings")]
		public GetAutomationsIdReturnTrigger_settings Trigger_settings { get; set; }
	}
	
	public class GetAutomationsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetAutomationsIdReturnRecipients
	{
		
		/// <summary>
		/// The unique list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// List Name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// An object representing all segmentation options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_opts")]
		public GetAutomationsIdReturnRecipientsSegment_opts Segment_opts { get; set; }
		
		/// <summary>
		/// The id of the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
	}
	
	public class GetAutomationsIdReturnRecipientsSegment_opts
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Segment match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
		
		/// <summary>
		/// The id for an existing saved segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saved_segment_id")]
		public System.Nullable<System.Int32> Saved_segment_id { get; set; }
	}
	
	public class GetAutomationsIdReturnReport_summary
	{
		
		/// <summary>
		/// The number of unique clicks, divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The total number of clicks for an campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The total number of opens for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// The number of unique clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber_clicks")]
		public System.Nullable<System.Int32> Subscriber_clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class GetAutomationsIdReturnSettings
	{
		
		/// <summary>
		/// Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the Automation. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticate")]
		public System.Nullable<System.Boolean> Authenticate { get; set; }
		
		/// <summary>
		/// Whether to automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_footer")]
		public System.Nullable<System.Boolean> Auto_footer { get; set; }
		
		/// <summary>
		/// The 'from' name for the Automation (not an email address).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// Whether to automatically inline the CSS included with the Automation content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inline_css")]
		public System.Nullable<System.Boolean> Inline_css { get; set; }
		
		/// <summary>
		/// The reply-to email address for the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public string Reply_to { get; set; }
		
		/// <summary>
		/// The title of the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The Automation's custom 'To' name, typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to_name")]
		public string To_name { get; set; }
		
		/// <summary>
		/// Whether to use Mailchimp Conversation feature to manage replies
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_conversation")]
		public System.Nullable<System.Boolean> Use_conversation { get; set; }
	}
	
	public class GetAutomationsIdReturnTracking
	{
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capsule")]
		public GetAutomationsIdReturnTrackingCapsule Capsule { get; set; }
		
		/// <summary>
		/// The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicktale")]
		public string Clicktale { get; set; }
		
		/// <summary>
		/// Whether to enable e-commerce tracking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecomm360")]
		public System.Nullable<System.Boolean> Ecomm360 { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal_tracking")]
		public System.Nullable<System.Boolean> Goal_tracking { get; set; }
		
		/// <summary>
		/// The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics")]
		public string Google_analytics { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the Automation. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html_clicks")]
		public System.Nullable<System.Boolean> Html_clicks { get; set; }
		
		/// <summary>
		/// Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Boolean> Opens { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salesforce")]
		public GetAutomationsIdReturnTrackingSalesforce Salesforce { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the Automation. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text_clicks")]
		public System.Nullable<System.Boolean> Text_clicks { get; set; }
	}
	
	public class GetAutomationsIdReturnTrackingCapsule
	{
		
		/// <summary>
		/// Update contact notes for a campaign based on a subscriber's email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class GetAutomationsIdReturnTrackingSalesforce
	{
		
		/// <summary>
		/// Create a campaign in a connected Salesforce account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Update contact notes for a campaign based on a subscriber's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class GetAutomationsIdReturnTrigger_settings
	{
		
		/// <summary>
		/// A workflow's runtime settings for an Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtime")]
		public GetAutomationsIdReturnTrigger_settingsRuntime Runtime { get; set; }
		
		/// <summary>
		/// The number of emails in the Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_emails_count")]
		public System.Nullable<System.Int32> Workflow_emails_count { get; set; }
		
		/// <summary>
		/// The title of the workflow type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_title")]
		public string Workflow_title { get; set; }
		
		/// <summary>
		/// The type of Automation workflow.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflow_type")]
		public GetAutomationsReturnAutomationsTrigger_settingsWorkflow_type Workflow_type { get; set; }
	}
	
	public class GetAutomationsIdReturnTrigger_settingsRuntime
	{
		
		/// <summary>
		/// The days an Automation workflow can send.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="days")]
		public string[] Days { get; set; }
		
		/// <summary>
		/// The hours an Automation workflow can send.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours")]
		public GetAutomationsIdReturnTrigger_settingsRuntimeHours Hours { get; set; }
	}
	
	public class GetAutomationsIdReturnTrigger_settingsRuntimeHours
	{
		
		/// <summary>
		/// When to send the Automation email.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetAutomationsReturnAutomationsTrigger_settingsRuntimeHoursType Type { get; set; }
	}
	
	public class GetAutomationsIdEmailsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAutomationsIdEmailsReturn_links[] GetAutomationsIdEmailsReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing an email in an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails")]
		public GetAutomationsIdEmailsReturnEmails[] GetAutomationsIdEmailsReturnEmails { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetAutomationsIdEmailsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetAutomationsIdEmailsReturnEmails
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAutomationsIdEmailsReturnEmails_links[] GetAutomationsIdEmailsReturnEmails_links { get; set; }
		
		/// <summary>
		/// The link to the campaign's archive version in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archive_url")]
		public string Archive_url { get; set; }
		
		/// <summary>
		/// How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_type")]
		public string Content_type { get; set; }
		
		/// <summary>
		/// The date and time the campaign was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="create_time")]
		public System.Nullable<System.DateTimeOffset> Create_time { get; set; }
		
		/// <summary>
		/// The delay settings for an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delay")]
		public GetAutomationsIdEmailsReturnEmailsDelay Delay { get; set; }
		
		/// <summary>
		/// The total number of emails sent for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// Determines if the campaign contains the *|BRAND:LOGO|* merge tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="has_logo_merge_tag")]
		public System.Nullable<System.Boolean> Has_logo_merge_tag { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Determines if the automation email needs its blocks refreshed by opening the web-based campaign editor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="needs_block_refresh")]
		public System.Nullable<System.Boolean> Needs_block_refresh { get; set; }
		
		/// <summary>
		/// The position of an Automation email in a workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="position")]
		public System.Nullable<System.Int32> Position { get; set; }
		
		/// <summary>
		/// List settings for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public GetAutomationsIdEmailsReturnEmailsRecipients Recipients { get; set; }
		
		/// <summary>
		/// For sent campaigns, a summary of opens and clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report_summary")]
		public GetAutomationsIdEmailsReturnEmailsReport_summary Report_summary { get; set; }
		
		/// <summary>
		///  The date and time a campaign was sent in ISO 8601 format
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.DateTimeOffset> Send_time { get; set; }
		
		/// <summary>
		/// Settings for the campaign including the email subject, from name, and from email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public GetAutomationsIdEmailsReturnEmailsSettings Settings { get; set; }
		
		/// <summary>
		/// The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="social_card")]
		public GetAutomationsIdEmailsReturnEmailsSocial_card Social_card { get; set; }
		
		/// <summary>
		/// The date and time the campaign was started in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_time")]
		public System.Nullable<System.DateTimeOffset> Start_time { get; set; }
		
		/// <summary>
		/// The current status of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetAutomationsStatus Status { get; set; }
		
		/// <summary>
		/// The tracking options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public GetAutomationsIdEmailsReturnEmailsTracking Tracking { get; set; }
		
		/// <summary>
		/// Available triggers for Automation workflows.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trigger_settings")]
		public GetAutomationsIdEmailsReturnEmailsTrigger_settings Trigger_settings { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this automation in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_id")]
		public string Workflow_id { get; set; }
	}
	
	public class GetAutomationsIdEmailsReturnEmails_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetAutomationsIdEmailsReturnEmailsDelay
	{
		
		/// <summary>
		/// The action that triggers the delay of an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action")]
		public System.Nullable<GetAutomationsIdEmailsReturnEmailsDelayAction> Action { get; set; }
		
		/// <summary>
		/// The user-friendly description of the action that triggers an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action_description")]
		public string Action_description { get; set; }
		
		/// <summary>
		/// The delay amount for an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Int32> Amount { get; set; }
		
		/// <summary>
		/// Whether the delay settings describe before or after the delay action of an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public System.Nullable<GetAutomationsIdEmailsReturnEmailsDelayDirection> Direction { get; set; }
		
		/// <summary>
		/// The user-friendly description of the delay and trigger action settings for an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_description")]
		public string Full_description { get; set; }
		
		/// <summary>
		/// The type of delay for an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GetAutomationsIdEmailsReturnEmailsDelayType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetAutomationsIdEmailsReturnEmailsDelayAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		previous_campaign_sent = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		previous_campaign_opened = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		previous_campaign_not_opened = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		previous_campaign_clicked_any = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		previous_campaign_not_clicked_any = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		previous_campaign_specific_clicked = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecomm_bought_any = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecomm_bought_product = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecomm_bought_category = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecomm_not_bought_any = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecomm_abandoned_cart = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		campaign_sent = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		opened_email = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		not_opened_email = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		clicked_email = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		not_clicked_email = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		campaign_specific_clicked = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		manual = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		signup = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		merge_changed = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		group_add = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		group_remove = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mandrill_sent = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mandrill_opened = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mandrill_clicked = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		mandrill_any = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		api = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		goal = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		annual = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		birthday = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		date = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		date_added = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tag_add = 32,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetAutomationsIdEmailsReturnEmailsDelayDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		before = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		after = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetAutomationsIdEmailsReturnEmailsDelayType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		now = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		day = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hour = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		week = 3,
	}
	
	public class GetAutomationsIdEmailsReturnEmailsRecipients
	{
		
		/// <summary>
		/// The unique list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// Count of the recipients on the associated list. Formatted as an integer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_count")]
		public System.Nullable<System.Int32> Recipient_count { get; set; }
		
		/// <summary>
		/// An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_opts")]
		public GetAutomationsIdEmailsReturnEmailsRecipientsSegment_opts Segment_opts { get; set; }
		
		/// <summary>
		/// A description of the [segment](https://mailchimp.com/help/getting-started-with-groups/) used for the campaign. Formatted as a string marked up with HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_text")]
		public string Segment_text { get; set; }
	}
	
	public class GetAutomationsIdEmailsReturnEmailsRecipientsSegment_opts
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Segment match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
		
		/// <summary>
		/// The prebuilt segment id, if a prebuilt segment has been designated for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prebuilt_segment_id")]
		public string Prebuilt_segment_id { get; set; }
		
		/// <summary>
		/// The id for an existing saved segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saved_segment_id")]
		public System.Nullable<System.Int32> Saved_segment_id { get; set; }
	}
	
	public class GetAutomationsIdEmailsReturnEmailsReport_summary
	{
		
		/// <summary>
		/// The number of unique clicks divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The total number of clicks for an campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The total number of opens for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// The number of unique clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber_clicks")]
		public System.Nullable<System.Int32> Subscriber_clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class GetAutomationsIdEmailsReturnEmailsSettings
	{
		
		/// <summary>
		/// Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticate")]
		public System.Nullable<System.Boolean> Authenticate { get; set; }
		
		/// <summary>
		/// An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_fb_post")]
		public string[] Auto_fb_post { get; set; }
		
		/// <summary>
		/// Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_footer")]
		public System.Nullable<System.Boolean> Auto_footer { get; set; }
		
		/// <summary>
		/// Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_tweet")]
		public System.Nullable<System.Boolean> Auto_tweet { get; set; }
		
		/// <summary>
		/// Whether the campaign uses the drag-and-drop editor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drag_and_drop")]
		public System.Nullable<System.Boolean> Drag_and_drop { get; set; }
		
		/// <summary>
		/// Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fb_comments")]
		public System.Nullable<System.Boolean> Fb_comments { get; set; }
		
		/// <summary>
		/// The 'from' name on the campaign (not an email address).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// Automatically inline the CSS included with the campaign content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inline_css")]
		public System.Nullable<System.Boolean> Inline_css { get; set; }
		
		/// <summary>
		/// The preview text for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preview_text")]
		public string Preview_text { get; set; }
		
		/// <summary>
		/// The reply-to email address for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public string Reply_to { get; set; }
		
		/// <summary>
		/// The subject line for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public string Subject_line { get; set; }
		
		/// <summary>
		/// The id for the template used in this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public System.Nullable<System.Int32> Template_id { get; set; }
		
		/// <summary>
		/// The title of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class GetAutomationsIdEmailsReturnEmailsSocial_card
	{
		
		/// <summary>
		/// A short summary of the campaign to display.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The url for the header image for the card.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The title for the card. Typically the subject line of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class GetAutomationsIdEmailsReturnEmailsTracking
	{
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capsule")]
		public GetAutomationsIdEmailsReturnEmailsTrackingCapsule Capsule { get; set; }
		
		/// <summary>
		/// The custom slug for [Click Tale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicktale")]
		public string Clicktale { get; set; }
		
		/// <summary>
		/// Whether to enable e-commerce tracking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecomm360")]
		public System.Nullable<System.Boolean> Ecomm360 { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal_tracking")]
		public System.Nullable<System.Boolean> Goal_tracking { get; set; }
		
		/// <summary>
		/// The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics")]
		public string Google_analytics { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html_clicks")]
		public System.Nullable<System.Boolean> Html_clicks { get; set; }
		
		/// <summary>
		/// Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Boolean> Opens { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salesforce")]
		public GetAutomationsIdEmailsReturnEmailsTrackingSalesforce Salesforce { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text_clicks")]
		public System.Nullable<System.Boolean> Text_clicks { get; set; }
	}
	
	public class GetAutomationsIdEmailsReturnEmailsTrackingCapsule
	{
		
		/// <summary>
		/// Update contact notes for a campaign based on a subscriber's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class GetAutomationsIdEmailsReturnEmailsTrackingSalesforce
	{
		
		/// <summary>
		/// Create a campaign in a connected Salesforce account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Update contact notes for a campaign based on a subscriber's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class GetAutomationsIdEmailsReturnEmailsTrigger_settings
	{
		
		/// <summary>
		/// A workflow's runtime settings for an Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtime")]
		public GetAutomationsIdEmailsReturnEmailsTrigger_settingsRuntime Runtime { get; set; }
		
		/// <summary>
		/// The number of emails in the Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_emails_count")]
		public System.Nullable<System.Int32> Workflow_emails_count { get; set; }
		
		/// <summary>
		/// The title of the workflow type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_title")]
		public string Workflow_title { get; set; }
		
		/// <summary>
		/// The type of Automation workflow.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflow_type")]
		public GetAutomationsReturnAutomationsTrigger_settingsWorkflow_type Workflow_type { get; set; }
	}
	
	public class GetAutomationsIdEmailsReturnEmailsTrigger_settingsRuntime
	{
		
		/// <summary>
		/// The days an Automation workflow can send.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="days")]
		public string[] Days { get; set; }
		
		/// <summary>
		/// The hours an Automation workflow can send.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours")]
		public GetAutomationsIdEmailsReturnEmailsTrigger_settingsRuntimeHours Hours { get; set; }
	}
	
	public class GetAutomationsIdEmailsReturnEmailsTrigger_settingsRuntimeHours
	{
		
		/// <summary>
		/// When to send the Automation email.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetAutomationsReturnAutomationsTrigger_settingsRuntimeHoursType Type { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAutomationsIdEmailsIdReturn_links[] GetAutomationsIdEmailsIdReturn_links { get; set; }
		
		/// <summary>
		/// The link to the campaign's archive version in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archive_url")]
		public string Archive_url { get; set; }
		
		/// <summary>
		/// How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_type")]
		public string Content_type { get; set; }
		
		/// <summary>
		/// The date and time the campaign was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="create_time")]
		public System.Nullable<System.DateTimeOffset> Create_time { get; set; }
		
		/// <summary>
		/// The delay settings for an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delay")]
		public GetAutomationsIdEmailsIdReturnDelay Delay { get; set; }
		
		/// <summary>
		/// The total number of emails sent for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// Determines if the campaign contains the *|BRAND:LOGO|* merge tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="has_logo_merge_tag")]
		public System.Nullable<System.Boolean> Has_logo_merge_tag { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Determines if the automation email needs its blocks refreshed by opening the web-based campaign editor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="needs_block_refresh")]
		public System.Nullable<System.Boolean> Needs_block_refresh { get; set; }
		
		/// <summary>
		/// The position of an Automation email in a workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="position")]
		public System.Nullable<System.Int32> Position { get; set; }
		
		/// <summary>
		/// List settings for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public GetAutomationsIdEmailsIdReturnRecipients Recipients { get; set; }
		
		/// <summary>
		/// For sent campaigns, a summary of opens and clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report_summary")]
		public GetAutomationsIdEmailsIdReturnReport_summary Report_summary { get; set; }
		
		/// <summary>
		///  The date and time a campaign was sent in ISO 8601 format
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.DateTimeOffset> Send_time { get; set; }
		
		/// <summary>
		/// Settings for the campaign including the email subject, from name, and from email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public GetAutomationsIdEmailsIdReturnSettings Settings { get; set; }
		
		/// <summary>
		/// The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="social_card")]
		public GetAutomationsIdEmailsIdReturnSocial_card Social_card { get; set; }
		
		/// <summary>
		/// The date and time the campaign was started in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_time")]
		public System.Nullable<System.DateTimeOffset> Start_time { get; set; }
		
		/// <summary>
		/// The current status of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetAutomationsStatus Status { get; set; }
		
		/// <summary>
		/// The tracking options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public GetAutomationsIdEmailsIdReturnTracking Tracking { get; set; }
		
		/// <summary>
		/// Available triggers for Automation workflows.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trigger_settings")]
		public GetAutomationsIdEmailsIdReturnTrigger_settings Trigger_settings { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this automation in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_id")]
		public string Workflow_id { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdReturnDelay
	{
		
		/// <summary>
		/// The action that triggers the delay of an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action")]
		public GetAutomationsIdEmailsReturnEmailsDelayAction Action { get; set; }
		
		/// <summary>
		/// The user-friendly description of the action that triggers an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action_description")]
		public string Action_description { get; set; }
		
		/// <summary>
		/// The delay amount for an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Int32> Amount { get; set; }
		
		/// <summary>
		/// Whether the delay settings describe before or after the delay action of an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public GetAutomationsIdEmailsReturnEmailsDelayDirection Direction { get; set; }
		
		/// <summary>
		/// The user-friendly description of the delay and trigger action settings for an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_description")]
		public string Full_description { get; set; }
		
		/// <summary>
		/// The type of delay for an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetAutomationsIdEmailsReturnEmailsDelayType Type { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdReturnRecipients
	{
		
		/// <summary>
		/// The unique list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// Count of the recipients on the associated list. Formatted as an integer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_count")]
		public System.Nullable<System.Int32> Recipient_count { get; set; }
		
		/// <summary>
		/// An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_opts")]
		public GetAutomationsIdEmailsIdReturnRecipientsSegment_opts Segment_opts { get; set; }
		
		/// <summary>
		/// A description of the [segment](https://mailchimp.com/help/getting-started-with-groups/) used for the campaign. Formatted as a string marked up with HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_text")]
		public string Segment_text { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdReturnRecipientsSegment_opts
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Segment match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
		
		/// <summary>
		/// The prebuilt segment id, if a prebuilt segment has been designated for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prebuilt_segment_id")]
		public string Prebuilt_segment_id { get; set; }
		
		/// <summary>
		/// The id for an existing saved segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saved_segment_id")]
		public System.Nullable<System.Int32> Saved_segment_id { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdReturnReport_summary
	{
		
		/// <summary>
		/// The number of unique clicks divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The total number of clicks for an campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The total number of opens for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// The number of unique clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber_clicks")]
		public System.Nullable<System.Int32> Subscriber_clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdReturnSettings
	{
		
		/// <summary>
		/// Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticate")]
		public System.Nullable<System.Boolean> Authenticate { get; set; }
		
		/// <summary>
		/// An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_fb_post")]
		public string[] Auto_fb_post { get; set; }
		
		/// <summary>
		/// Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_footer")]
		public System.Nullable<System.Boolean> Auto_footer { get; set; }
		
		/// <summary>
		/// Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_tweet")]
		public System.Nullable<System.Boolean> Auto_tweet { get; set; }
		
		/// <summary>
		/// Whether the campaign uses the drag-and-drop editor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drag_and_drop")]
		public System.Nullable<System.Boolean> Drag_and_drop { get; set; }
		
		/// <summary>
		/// Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fb_comments")]
		public System.Nullable<System.Boolean> Fb_comments { get; set; }
		
		/// <summary>
		/// The 'from' name on the campaign (not an email address).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// Automatically inline the CSS included with the campaign content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inline_css")]
		public System.Nullable<System.Boolean> Inline_css { get; set; }
		
		/// <summary>
		/// The preview text for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preview_text")]
		public string Preview_text { get; set; }
		
		/// <summary>
		/// The reply-to email address for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public string Reply_to { get; set; }
		
		/// <summary>
		/// The subject line for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public string Subject_line { get; set; }
		
		/// <summary>
		/// The id for the template used in this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public System.Nullable<System.Int32> Template_id { get; set; }
		
		/// <summary>
		/// The title of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdReturnSocial_card
	{
		
		/// <summary>
		/// A short summary of the campaign to display.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The url for the header image for the card.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The title for the card. Typically the subject line of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdReturnTracking
	{
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capsule")]
		public GetAutomationsIdEmailsIdReturnTrackingCapsule Capsule { get; set; }
		
		/// <summary>
		/// The custom slug for [Click Tale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicktale")]
		public string Clicktale { get; set; }
		
		/// <summary>
		/// Whether to enable e-commerce tracking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecomm360")]
		public System.Nullable<System.Boolean> Ecomm360 { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal_tracking")]
		public System.Nullable<System.Boolean> Goal_tracking { get; set; }
		
		/// <summary>
		/// The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics")]
		public string Google_analytics { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html_clicks")]
		public System.Nullable<System.Boolean> Html_clicks { get; set; }
		
		/// <summary>
		/// Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Boolean> Opens { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salesforce")]
		public GetAutomationsIdEmailsIdReturnTrackingSalesforce Salesforce { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text_clicks")]
		public System.Nullable<System.Boolean> Text_clicks { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdReturnTrackingCapsule
	{
		
		/// <summary>
		/// Update contact notes for a campaign based on a subscriber's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdReturnTrackingSalesforce
	{
		
		/// <summary>
		/// Create a campaign in a connected Salesforce account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Update contact notes for a campaign based on a subscriber's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdReturnTrigger_settings
	{
		
		/// <summary>
		/// A workflow's runtime settings for an Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtime")]
		public GetAutomationsIdEmailsIdReturnTrigger_settingsRuntime Runtime { get; set; }
		
		/// <summary>
		/// The number of emails in the Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_emails_count")]
		public System.Nullable<System.Int32> Workflow_emails_count { get; set; }
		
		/// <summary>
		/// The title of the workflow type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_title")]
		public string Workflow_title { get; set; }
		
		/// <summary>
		/// The type of Automation workflow.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflow_type")]
		public GetAutomationsReturnAutomationsTrigger_settingsWorkflow_type Workflow_type { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdReturnTrigger_settingsRuntime
	{
		
		/// <summary>
		/// The days an Automation workflow can send.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="days")]
		public string[] Days { get; set; }
		
		/// <summary>
		/// The hours an Automation workflow can send.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours")]
		public GetAutomationsIdEmailsIdReturnTrigger_settingsRuntimeHours Hours { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdReturnTrigger_settingsRuntimeHours
	{
		
		/// <summary>
		/// When to send the Automation email.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetAutomationsReturnAutomationsTrigger_settingsRuntimeHoursType Type { get; set; }
	}
	
	public class PatchAutomationEmailWorkflowIdPatchBody
	{
		
		/// <summary>
		/// The delay settings for an automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delay")]
		public PatchAutomationEmailWorkflowIdPatchBodyDelay Delay { get; set; }
		
		/// <summary>
		/// Settings for the campaign including the email subject, from name, and from email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public PatchAutomationEmailWorkflowIdPatchBodySettings Settings { get; set; }
	}
	
	public class PatchAutomationEmailWorkflowIdPatchBodyDelay
	{
		
		/// <summary>
		/// The action that triggers the delay of an automation emails.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="action")]
		public PatchAutomationEmailWorkflowIdPatchBodyDelayAction Action { get; set; }
		
		/// <summary>
		/// The delay amount for an automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Int32> Amount { get; set; }
		
		/// <summary>
		/// Whether the delay settings describe before or after the delay action of an automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public System.Nullable<PatchAutomationEmailWorkflowIdPatchBodyDelayDirection> Direction { get; set; }
		
		/// <summary>
		/// The type of delay for an automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetAutomationsIdEmailsReturnEmailsDelayType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PatchAutomationEmailWorkflowIdPatchBodyDelayAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		signup = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecomm_abandoned_browse = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ecomm_abandoned_cart = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PatchAutomationEmailWorkflowIdPatchBodyDelayDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		after = 0,
	}
	
	public class PatchAutomationEmailWorkflowIdPatchBodySettings
	{
		
		/// <summary>
		/// The 'from' name for the Automation (not an email address).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// The preview text for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preview_text")]
		public string Preview_text { get; set; }
		
		/// <summary>
		/// The reply-to email address for the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public string Reply_to { get; set; }
		
		/// <summary>
		/// The subject line for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public string Subject_line { get; set; }
		
		/// <summary>
		/// The title of the Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class PatchAutomationEmailWorkflowIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchAutomationEmailWorkflowIdReturn_links[] PatchAutomationEmailWorkflowIdReturn_links { get; set; }
		
		/// <summary>
		/// The link to the campaign's archive version in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archive_url")]
		public string Archive_url { get; set; }
		
		/// <summary>
		/// How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_type")]
		public string Content_type { get; set; }
		
		/// <summary>
		/// The date and time the campaign was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="create_time")]
		public System.Nullable<System.DateTimeOffset> Create_time { get; set; }
		
		/// <summary>
		/// The delay settings for an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delay")]
		public PatchAutomationEmailWorkflowIdReturnDelay Delay { get; set; }
		
		/// <summary>
		/// The total number of emails sent for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// Determines if the campaign contains the *|BRAND:LOGO|* merge tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="has_logo_merge_tag")]
		public System.Nullable<System.Boolean> Has_logo_merge_tag { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Determines if the automation email needs its blocks refreshed by opening the web-based campaign editor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="needs_block_refresh")]
		public System.Nullable<System.Boolean> Needs_block_refresh { get; set; }
		
		/// <summary>
		/// The position of an Automation email in a workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="position")]
		public System.Nullable<System.Int32> Position { get; set; }
		
		/// <summary>
		/// List settings for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public PatchAutomationEmailWorkflowIdReturnRecipients Recipients { get; set; }
		
		/// <summary>
		/// For sent campaigns, a summary of opens and clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report_summary")]
		public PatchAutomationEmailWorkflowIdReturnReport_summary Report_summary { get; set; }
		
		/// <summary>
		///  The date and time a campaign was sent in ISO 8601 format
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.DateTimeOffset> Send_time { get; set; }
		
		/// <summary>
		/// Settings for the campaign including the email subject, from name, and from email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public PatchAutomationEmailWorkflowIdReturnSettings Settings { get; set; }
		
		/// <summary>
		/// The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="social_card")]
		public PatchAutomationEmailWorkflowIdReturnSocial_card Social_card { get; set; }
		
		/// <summary>
		/// The date and time the campaign was started in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_time")]
		public System.Nullable<System.DateTimeOffset> Start_time { get; set; }
		
		/// <summary>
		/// The current status of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetAutomationsStatus Status { get; set; }
		
		/// <summary>
		/// The tracking options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public PatchAutomationEmailWorkflowIdReturnTracking Tracking { get; set; }
		
		/// <summary>
		/// Available triggers for Automation workflows.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trigger_settings")]
		public PatchAutomationEmailWorkflowIdReturnTrigger_settings Trigger_settings { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this automation in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_id")]
		public string Workflow_id { get; set; }
	}
	
	public class PatchAutomationEmailWorkflowIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchAutomationEmailWorkflowIdReturnDelay
	{
		
		/// <summary>
		/// The action that triggers the delay of an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action")]
		public GetAutomationsIdEmailsReturnEmailsDelayAction Action { get; set; }
		
		/// <summary>
		/// The user-friendly description of the action that triggers an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action_description")]
		public string Action_description { get; set; }
		
		/// <summary>
		/// The delay amount for an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Int32> Amount { get; set; }
		
		/// <summary>
		/// Whether the delay settings describe before or after the delay action of an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="direction")]
		public GetAutomationsIdEmailsReturnEmailsDelayDirection Direction { get; set; }
		
		/// <summary>
		/// The user-friendly description of the delay and trigger action settings for an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_description")]
		public string Full_description { get; set; }
		
		/// <summary>
		/// The type of delay for an Automation email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetAutomationsIdEmailsReturnEmailsDelayType Type { get; set; }
	}
	
	public class PatchAutomationEmailWorkflowIdReturnRecipients
	{
		
		/// <summary>
		/// The unique list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// Count of the recipients on the associated list. Formatted as an integer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_count")]
		public System.Nullable<System.Int32> Recipient_count { get; set; }
		
		/// <summary>
		/// An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_opts")]
		public PatchAutomationEmailWorkflowIdReturnRecipientsSegment_opts Segment_opts { get; set; }
		
		/// <summary>
		/// A description of the [segment](https://mailchimp.com/help/getting-started-with-groups/) used for the campaign. Formatted as a string marked up with HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_text")]
		public string Segment_text { get; set; }
	}
	
	public class PatchAutomationEmailWorkflowIdReturnRecipientsSegment_opts
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Segment match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
		
		/// <summary>
		/// The prebuilt segment id, if a prebuilt segment has been designated for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prebuilt_segment_id")]
		public string Prebuilt_segment_id { get; set; }
		
		/// <summary>
		/// The id for an existing saved segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saved_segment_id")]
		public System.Nullable<System.Int32> Saved_segment_id { get; set; }
	}
	
	public class PatchAutomationEmailWorkflowIdReturnReport_summary
	{
		
		/// <summary>
		/// The number of unique clicks divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The total number of clicks for an campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The total number of opens for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// The number of unique clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber_clicks")]
		public System.Nullable<System.Int32> Subscriber_clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class PatchAutomationEmailWorkflowIdReturnSettings
	{
		
		/// <summary>
		/// Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticate")]
		public System.Nullable<System.Boolean> Authenticate { get; set; }
		
		/// <summary>
		/// An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_fb_post")]
		public string[] Auto_fb_post { get; set; }
		
		/// <summary>
		/// Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_footer")]
		public System.Nullable<System.Boolean> Auto_footer { get; set; }
		
		/// <summary>
		/// Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_tweet")]
		public System.Nullable<System.Boolean> Auto_tweet { get; set; }
		
		/// <summary>
		/// Whether the campaign uses the drag-and-drop editor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drag_and_drop")]
		public System.Nullable<System.Boolean> Drag_and_drop { get; set; }
		
		/// <summary>
		/// Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fb_comments")]
		public System.Nullable<System.Boolean> Fb_comments { get; set; }
		
		/// <summary>
		/// The 'from' name on the campaign (not an email address).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// Automatically inline the CSS included with the campaign content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inline_css")]
		public System.Nullable<System.Boolean> Inline_css { get; set; }
		
		/// <summary>
		/// The preview text for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preview_text")]
		public string Preview_text { get; set; }
		
		/// <summary>
		/// The reply-to email address for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public string Reply_to { get; set; }
		
		/// <summary>
		/// The subject line for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public string Subject_line { get; set; }
		
		/// <summary>
		/// The id for the template used in this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public System.Nullable<System.Int32> Template_id { get; set; }
		
		/// <summary>
		/// The title of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class PatchAutomationEmailWorkflowIdReturnSocial_card
	{
		
		/// <summary>
		/// A short summary of the campaign to display.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The url for the header image for the card.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The title for the card. Typically the subject line of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class PatchAutomationEmailWorkflowIdReturnTracking
	{
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capsule")]
		public PatchAutomationEmailWorkflowIdReturnTrackingCapsule Capsule { get; set; }
		
		/// <summary>
		/// The custom slug for [Click Tale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicktale")]
		public string Clicktale { get; set; }
		
		/// <summary>
		/// Whether to enable e-commerce tracking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecomm360")]
		public System.Nullable<System.Boolean> Ecomm360 { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal_tracking")]
		public System.Nullable<System.Boolean> Goal_tracking { get; set; }
		
		/// <summary>
		/// The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics")]
		public string Google_analytics { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html_clicks")]
		public System.Nullable<System.Boolean> Html_clicks { get; set; }
		
		/// <summary>
		/// Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Boolean> Opens { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salesforce")]
		public PatchAutomationEmailWorkflowIdReturnTrackingSalesforce Salesforce { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text_clicks")]
		public System.Nullable<System.Boolean> Text_clicks { get; set; }
	}
	
	public class PatchAutomationEmailWorkflowIdReturnTrackingCapsule
	{
		
		/// <summary>
		/// Update contact notes for a campaign based on a subscriber's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class PatchAutomationEmailWorkflowIdReturnTrackingSalesforce
	{
		
		/// <summary>
		/// Create a campaign in a connected Salesforce account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Update contact notes for a campaign based on a subscriber's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class PatchAutomationEmailWorkflowIdReturnTrigger_settings
	{
		
		/// <summary>
		/// A workflow's runtime settings for an Automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runtime")]
		public PatchAutomationEmailWorkflowIdReturnTrigger_settingsRuntime Runtime { get; set; }
		
		/// <summary>
		/// The number of emails in the Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_emails_count")]
		public System.Nullable<System.Int32> Workflow_emails_count { get; set; }
		
		/// <summary>
		/// The title of the workflow type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_title")]
		public string Workflow_title { get; set; }
		
		/// <summary>
		/// The type of Automation workflow.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workflow_type")]
		public GetAutomationsReturnAutomationsTrigger_settingsWorkflow_type Workflow_type { get; set; }
	}
	
	public class PatchAutomationEmailWorkflowIdReturnTrigger_settingsRuntime
	{
		
		/// <summary>
		/// The days an Automation workflow can send.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="days")]
		public string[] Days { get; set; }
		
		/// <summary>
		/// The hours an Automation workflow can send.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hours")]
		public PatchAutomationEmailWorkflowIdReturnTrigger_settingsRuntimeHours Hours { get; set; }
	}
	
	public class PatchAutomationEmailWorkflowIdReturnTrigger_settingsRuntimeHours
	{
		
		/// <summary>
		/// When to send the Automation email.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetAutomationsReturnAutomationsTrigger_settingsRuntimeHoursType Type { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdQueueReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAutomationsIdEmailsIdQueueReturn_links[] GetAutomationsIdEmailsIdQueueReturn_links { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies an email in an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a subscriber queue for an email in an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queue")]
		public GetAutomationsIdEmailsIdQueueReturnQueue[] GetAutomationsIdEmailsIdQueueReturnQueue { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_id")]
		public string Workflow_id { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdQueueReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdQueueReturnQueue
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAutomationsIdEmailsIdQueueReturnQueue_links[] GetAutomationsIdEmailsIdQueueReturnQueue_links { get; set; }
		
		/// <summary>
		/// The list member's email address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies an email in an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies a list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The date and time of the next send for the workflow email in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next_send")]
		public System.Nullable<System.DateTimeOffset> Next_send { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_id")]
		public string Workflow_id { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdQueueReturnQueue_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostAutomationsIdEmailsIdQueueReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostAutomationsIdEmailsIdQueueReturn_links[] PostAutomationsIdEmailsIdQueueReturn_links { get; set; }
		
		/// <summary>
		/// The list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies an email in an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies a list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The date and time of the next send for the workflow email in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next_send")]
		public System.Nullable<System.DateTimeOffset> Next_send { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_id")]
		public string Workflow_id { get; set; }
	}
	
	public class PostAutomationsIdEmailsIdQueueReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdQueueIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAutomationsIdEmailsIdQueueIdReturn_links[] GetAutomationsIdEmailsIdQueueIdReturn_links { get; set; }
		
		/// <summary>
		/// The list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies an email in an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies a list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The date and time of the next send for the workflow email in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="next_send")]
		public System.Nullable<System.DateTimeOffset> Next_send { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_id")]
		public string Workflow_id { get; set; }
	}
	
	public class GetAutomationsIdEmailsIdQueueIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetAutomationsIdRemovedSubscribersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAutomationsIdRemovedSubscribersReturn_links[] GetAutomationsIdRemovedSubscribersReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a subscriber who was removed from an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribers")]
		public GetAutomationsIdRemovedSubscribersReturnSubscribers[] GetAutomationsIdRemovedSubscribersReturnSubscribers { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_id")]
		public string Workflow_id { get; set; }
	}
	
	public class GetAutomationsIdRemovedSubscribersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetAutomationsIdRemovedSubscribersReturnSubscribers
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAutomationsIdRemovedSubscribersReturnSubscribers_links[] GetAutomationsIdRemovedSubscribersReturnSubscribers_links { get; set; }
		
		/// <summary>
		/// The list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies a list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_id")]
		public string Workflow_id { get; set; }
	}
	
	public class GetAutomationsIdRemovedSubscribersReturnSubscribers_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostAutomationsIdRemovedSubscribersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostAutomationsIdRemovedSubscribersReturn_links[] PostAutomationsIdRemovedSubscribersReturn_links { get; set; }
		
		/// <summary>
		/// The list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies a list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_id")]
		public string Workflow_id { get; set; }
	}
	
	public class PostAutomationsIdRemovedSubscribersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetAutomationsIdRemovedSubscribersIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAutomationsIdRemovedSubscribersIdReturn_links[] GetAutomationsIdRemovedSubscribersIdReturn_links { get; set; }
		
		/// <summary>
		/// The list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies a list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies an Automation workflow.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workflow_id")]
		public string Workflow_id { get; set; }
	}
	
	public class GetAutomationsIdRemovedSubscribersIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetBatchWebhooksReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetBatchWebhooksReturn_links[] GetBatchWebhooksReturn_links { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a Batch Webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhooks")]
		public GetBatchWebhooksReturnWebhooks[] GetBatchWebhooksReturnWebhooks { get; set; }
	}
	
	public class GetBatchWebhooksReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetBatchWebhooksReturnWebhooks
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetBatchWebhooksReturnWebhooks_links[] GetBatchWebhooksReturnWebhooks_links { get; set; }
		
		/// <summary>
		/// Whether the webhook receives requests or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this Batch Webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A valid URL for the Webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class GetBatchWebhooksReturnWebhooks_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostBatchWebhooksPostBody
	{
		
		/// <summary>
		/// Whether the webhook receives requests or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// A valid URL for the Webhook.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class PostBatchWebhooksReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostBatchWebhooksReturn_links[] PostBatchWebhooksReturn_links { get; set; }
		
		/// <summary>
		/// Whether the webhook receives requests or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this Batch Webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A valid URL for the Webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class PostBatchWebhooksReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetBatchWebhookReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetBatchWebhookReturn_links[] GetBatchWebhookReturn_links { get; set; }
		
		/// <summary>
		/// Whether the webhook receives requests or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this Batch Webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A valid URL for the Webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class GetBatchWebhookReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchBatchWebhooksPatchBody
	{
		
		/// <summary>
		/// Whether the webhook receives requests or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// A valid URL for the Webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class PatchBatchWebhooksReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchBatchWebhooksReturn_links[] PatchBatchWebhooksReturn_links { get; set; }
		
		/// <summary>
		/// Whether the webhook receives requests or not.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this Batch Webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A valid URL for the Webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class PatchBatchWebhooksReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetBatchesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetBatchesReturn_links[] GetBatchesReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects representing batch calls.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="batches")]
		public GetBatchesReturnBatches[] GetBatchesReturnBatches { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetBatchesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetBatchesReturnBatches
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetBatchesReturnBatches_links[] GetBatchesReturnBatches_links { get; set; }
		
		/// <summary>
		/// The date and time when all operations in the batch request completed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="completed_at")]
		public System.Nullable<System.DateTimeOffset> Completed_at { get; set; }
		
		/// <summary>
		/// The number of completed operations that returned an error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errored_operations")]
		public System.Nullable<System.Int32> Errored_operations { get; set; }
		
		/// <summary>
		/// The number of completed operations. This includes operations that returned an error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finished_operations")]
		public System.Nullable<System.Int32> Finished_operations { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this batch request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL of the gzipped archive of the results of all the operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response_body_url")]
		public string Response_body_url { get; set; }
		
		/// <summary>
		/// The status of the batch call. [Learn more](https://mailchimp.com/developer/marketing/guides/run-async-requests-batch-endpoint/#check-the-status-of-a-batch-operation) about the batch operation status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<GetBatchesReturnBatchesStatus> Status { get; set; }
		
		/// <summary>
		/// The date and time when the server received the batch request in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="submitted_at")]
		public System.Nullable<System.DateTimeOffset> Submitted_at { get; set; }
		
		/// <summary>
		/// The total number of operations to complete as part of this batch request. For GET requests requiring pagination, each page counts as a separate operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_operations")]
		public System.Nullable<System.Int32> Total_operations { get; set; }
	}
	
	public class GetBatchesReturnBatches_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetBatchesReturnBatchesStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		preprocessing = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		started = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		finalizing = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		finished = 4,
	}
	
	public class PostBatchesPostBody
	{
		
		/// <summary>
		/// An array of objects that describes operations to perform.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="operations")]
		public PostBatchesPostBodyOperations[] PostBatchesPostBodyOperations { get; set; }
	}
	
	public class PostBatchesPostBodyOperations
	{
		
		/// <summary>
		/// A string containing the JSON body to use with the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="body")]
		public string Body { get; set; }
		
		/// <summary>
		/// The HTTP method to use for the operation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="method")]
		public PostBatchesPostBodyOperationsMethod Method { get; set; }
		
		/// <summary>
		/// An optional client-supplied id returned with the operation results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operation_id")]
		public string Operation_id { get; set; }
		
		/// <summary>
		/// Any request query parameters. Example parameters: {"count":10, "offset":0}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="params")]
		public string Params { get; set; }
		
		/// <summary>
		/// The relative path to use for the operation.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostBatchesPostBodyOperationsMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POST = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PATCH = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE = 4,
	}
	
	public class PostBatchesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostBatchesReturn_links[] PostBatchesReturn_links { get; set; }
		
		/// <summary>
		/// The date and time when all operations in the batch request completed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="completed_at")]
		public System.Nullable<System.DateTimeOffset> Completed_at { get; set; }
		
		/// <summary>
		/// The number of completed operations that returned an error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errored_operations")]
		public System.Nullable<System.Int32> Errored_operations { get; set; }
		
		/// <summary>
		/// The number of completed operations. This includes operations that returned an error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finished_operations")]
		public System.Nullable<System.Int32> Finished_operations { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this batch request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL of the gzipped archive of the results of all the operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response_body_url")]
		public string Response_body_url { get; set; }
		
		/// <summary>
		/// The status of the batch call. [Learn more](https://mailchimp.com/developer/marketing/guides/run-async-requests-batch-endpoint/#check-the-status-of-a-batch-operation) about the batch operation status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetBatchesReturnBatchesStatus Status { get; set; }
		
		/// <summary>
		/// The date and time when the server received the batch request in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="submitted_at")]
		public System.Nullable<System.DateTimeOffset> Submitted_at { get; set; }
		
		/// <summary>
		/// The total number of operations to complete as part of this batch request. For GET requests requiring pagination, each page counts as a separate operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_operations")]
		public System.Nullable<System.Int32> Total_operations { get; set; }
	}
	
	public class PostBatchesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetBatchesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetBatchesIdReturn_links[] GetBatchesIdReturn_links { get; set; }
		
		/// <summary>
		/// The date and time when all operations in the batch request completed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="completed_at")]
		public System.Nullable<System.DateTimeOffset> Completed_at { get; set; }
		
		/// <summary>
		/// The number of completed operations that returned an error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errored_operations")]
		public System.Nullable<System.Int32> Errored_operations { get; set; }
		
		/// <summary>
		/// The number of completed operations. This includes operations that returned an error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finished_operations")]
		public System.Nullable<System.Int32> Finished_operations { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this batch request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL of the gzipped archive of the results of all the operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response_body_url")]
		public string Response_body_url { get; set; }
		
		/// <summary>
		/// The status of the batch call. [Learn more](https://mailchimp.com/developer/marketing/guides/run-async-requests-batch-endpoint/#check-the-status-of-a-batch-operation) about the batch operation status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetBatchesReturnBatchesStatus Status { get; set; }
		
		/// <summary>
		/// The date and time when the server received the batch request in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="submitted_at")]
		public System.Nullable<System.DateTimeOffset> Submitted_at { get; set; }
		
		/// <summary>
		/// The total number of operations to complete as part of this batch request. For GET requests requiring pagination, each page counts as a separate operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_operations")]
		public System.Nullable<System.Int32> Total_operations { get; set; }
	}
	
	public class GetBatchesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetCampaignFoldersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetCampaignFoldersReturn_links[] GetCampaignFoldersReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects representing campaign folders.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folders")]
		public GetCampaignFoldersReturnFolders[] GetCampaignFoldersReturnFolders { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetCampaignFoldersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetCampaignFoldersReturnFolders
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetCampaignFoldersReturnFolders_links[] GetCampaignFoldersReturnFolders_links { get; set; }
		
		/// <summary>
		/// The number of campaigns in the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this campaign folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class GetCampaignFoldersReturnFolders_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostCampaignFoldersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostCampaignFoldersReturn_links[] PostCampaignFoldersReturn_links { get; set; }
		
		/// <summary>
		/// The number of campaigns in the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this campaign folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class PostCampaignFoldersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetCampaignFoldersIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetCampaignFoldersIdReturn_links[] GetCampaignFoldersIdReturn_links { get; set; }
		
		/// <summary>
		/// The number of campaigns in the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this campaign folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class GetCampaignFoldersIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchCampaignFoldersIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchCampaignFoldersIdReturn_links[] PatchCampaignFoldersIdReturn_links { get; set; }
		
		/// <summary>
		/// The number of campaigns in the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this campaign folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class PatchCampaignFoldersIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public enum GetCampaignsType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		regular = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		plaintext = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		absplit = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rss = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		variate = 4,
	}
	
	public enum GetCampaignsStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		save = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		paused = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		schedule = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sending = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sent = 4,
	}
	
	public enum GetCampaignsSort_field
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		create_time = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		send_time = 1,
	}
	
	public enum GetCampaignsSort_dir
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASC = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESC = 1,
	}
	
	public class GetCampaignsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetCampaignsReturn_links[] GetCampaignsReturn_links { get; set; }
		
		/// <summary>
		/// An array of campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaigns")]
		public GetCampaignsReturnCampaigns[] GetCampaignsReturnCampaigns { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetCampaignsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetCampaignsReturnCampaigns
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetCampaignsReturnCampaigns_links[] GetCampaignsReturnCampaigns_links { get; set; }
		
		/// <summary>
		/// [A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ab_split_opts")]
		public GetCampaignsReturnCampaignsAb_split_opts Ab_split_opts { get; set; }
		
		/// <summary>
		/// The link to the campaign's archive version in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archive_url")]
		public string Archive_url { get; set; }
		
		/// <summary>
		/// How the campaign's content is put together.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_type")]
		public System.Nullable<GetCampaignsReturnCampaignsContent_type> Content_type { get; set; }
		
		/// <summary>
		/// The date and time the campaign was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="create_time")]
		public System.Nullable<System.DateTimeOffset> Create_time { get; set; }
		
		/// <summary>
		/// Updates on campaigns in the process of sending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delivery_status")]
		public GetCampaignsReturnCampaignsDelivery_status Delivery_status { get; set; }
		
		/// <summary>
		/// The total number of emails sent for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The original link to the campaign's archive version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="long_archive_url")]
		public string Long_archive_url { get; set; }
		
		/// <summary>
		/// Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="needs_block_refresh")]
		public System.Nullable<System.Boolean> Needs_block_refresh { get; set; }
		
		/// <summary>
		/// If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_campaign_id")]
		public string Parent_campaign_id { get; set; }
		
		/// <summary>
		/// List settings for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public GetCampaignsReturnCampaignsRecipients Recipients { get; set; }
		
		/// <summary>
		/// For sent campaigns, a summary of opens, clicks, and e-commerce data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report_summary")]
		public GetCampaignsReturnCampaignsReport_summary Report_summary { get; set; }
		
		/// <summary>
		/// Determines if the campaign qualifies to be resent to non-openers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resendable")]
		public System.Nullable<System.Boolean> Resendable { get; set; }
		
		/// <summary>
		/// [RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rss_opts")]
		public GetCampaignsReturnCampaignsRss_opts Rss_opts { get; set; }
		
		/// <summary>
		/// The date and time a campaign was sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.DateTimeOffset> Send_time { get; set; }
		
		/// <summary>
		/// The settings for your campaign, including subject, from name, reply-to address, and more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public GetCampaignsReturnCampaignsSettings Settings { get; set; }
		
		/// <summary>
		/// The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="social_card")]
		public GetCampaignsReturnCampaignsSocial_card Social_card { get; set; }
		
		/// <summary>
		/// The current status of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<GetCampaignsReturnCampaignsStatus> Status { get; set; }
		
		/// <summary>
		/// The tracking options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public GetCampaignsReturnCampaignsTracking Tracking { get; set; }
		
		/// <summary>
		/// There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetCampaignsType Type { get; set; }
		
		/// <summary>
		/// The settings specific to A/B test campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variate_settings")]
		public GetCampaignsReturnCampaignsVariate_settings Variate_settings { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class GetCampaignsReturnCampaigns_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetCampaignsReturnCampaignsAb_split_opts
	{
		
		/// <summary>
		/// For campaigns split on 'From Name', the name for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name_a")]
		public string From_name_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the name for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name_b")]
		public string From_name_b { get; set; }
		
		/// <summary>
		/// How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pick_winner")]
		public System.Nullable<GetCampaignsReturnCampaignsAb_split_optsPick_winner> Pick_winner { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the reply-to address for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_email_a")]
		public string Reply_email_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the reply-to address for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_email_b")]
		public string Reply_email_b { get; set; }
		
		/// <summary>
		/// The send time for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_a")]
		public System.Nullable<System.DateTimeOffset> Send_time_a { get; set; }
		
		/// <summary>
		/// The send time for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_b")]
		public System.Nullable<System.DateTimeOffset> Send_time_b { get; set; }
		
		/// <summary>
		/// The send time for the winning version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_winner")]
		public string Send_time_winner { get; set; }
		
		/// <summary>
		/// The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50.
		/// Minimum: 1
		/// Maximum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="split_size")]
		[System.ComponentModel.DataAnnotations.Range(1, 50)]
		public System.Nullable<System.Int32> Split_size { get; set; }
		
		/// <summary>
		/// The type of AB split to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="split_test")]
		public System.Nullable<GetCampaignsReturnCampaignsAb_split_optsSplit_test> Split_test { get; set; }
		
		/// <summary>
		/// For campaigns split on 'Subject Line', the subject line for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_a")]
		public string Subject_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'Subject Line', the subject line for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_b")]
		public string Subject_b { get; set; }
		
		/// <summary>
		/// The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
		
		/// <summary>
		/// How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_units")]
		public System.Nullable<GetCampaignsReturnCampaignsAb_split_optsWait_units> Wait_units { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetCampaignsReturnCampaignsAb_split_optsPick_winner
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		opens = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		clicks = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		manual = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetCampaignsReturnCampaignsAb_split_optsSplit_test
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		subject = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		from_name = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		schedule = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetCampaignsReturnCampaignsAb_split_optsWait_units
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hours = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		days = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetCampaignsReturnCampaignsContent_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		template = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		html = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		url = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		multichannel = 3,
	}
	
	public class GetCampaignsReturnCampaignsDelivery_status
	{
		
		/// <summary>
		/// Whether a campaign send can be canceled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="can_cancel")]
		public System.Nullable<System.Boolean> Can_cancel { get; set; }
		
		/// <summary>
		/// The total number of emails canceled for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_canceled")]
		public System.Nullable<System.Int32> Emails_canceled { get; set; }
		
		/// <summary>
		/// The total number of emails confirmed sent for this campaign so far.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// Whether Campaign Delivery Status is enabled for this account and campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The current state of a campaign delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<GetCampaignsReturnCampaignsDelivery_statusStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetCampaignsReturnCampaignsDelivery_statusStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		delivering = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		delivered = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		canceling = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		canceled = 3,
	}
	
	public class GetCampaignsReturnCampaignsRecipients
	{
		
		/// <summary>
		/// The unique list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// Count of the recipients on the associated list. Formatted as an integer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_count")]
		public System.Nullable<System.Int32> Recipient_count { get; set; }
		
		/// <summary>
		/// An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_opts")]
		public GetCampaignsReturnCampaignsRecipientsSegment_opts Segment_opts { get; set; }
		
		/// <summary>
		/// A description of the [segment](https://mailchimp.com/help/create-and-send-to-a-segment/) used for the campaign. Formatted as a string marked up with HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_text")]
		public string Segment_text { get; set; }
	}
	
	public class GetCampaignsReturnCampaignsRecipientsSegment_opts
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Segment match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
		
		/// <summary>
		/// The prebuilt segment id, if a prebuilt segment has been designated for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prebuilt_segment_id")]
		public string Prebuilt_segment_id { get; set; }
		
		/// <summary>
		/// The id for an existing saved segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saved_segment_id")]
		public System.Nullable<System.Int32> Saved_segment_id { get; set; }
	}
	
	public class GetCampaignsReturnCampaignsReport_summary
	{
		
		/// <summary>
		/// The number of unique clicks divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The total number of clicks for an campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// E-Commerce stats for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecommerce")]
		public GetCampaignsReturnCampaignsReport_summaryEcommerce Ecommerce { get; set; }
		
		/// <summary>
		/// The number of unique opens divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The total number of opens for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// The number of unique clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber_clicks")]
		public System.Nullable<System.Int32> Subscriber_clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class GetCampaignsReturnCampaignsReport_summaryEcommerce
	{
		
		/// <summary>
		/// The total orders for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_orders")]
		public System.Nullable<System.Int32> Total_orders { get; set; }
		
		/// <summary>
		/// The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
		
		/// <summary>
		/// The total spent for a campaign. Calculated as the sum of all order totals with no deductions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
	}
	
	public class GetCampaignsReturnCampaignsRss_opts
	{
		
		/// <summary>
		/// Whether to add CSS to images in the RSS feed to constrain their width in campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="constrain_rss_img")]
		public System.Nullable<System.Boolean> Constrain_rss_img { get; set; }
		
		/// <summary>
		/// The URL for the RSS feed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="feed_url")]
		public string Feed_url { get; set; }
		
		/// <summary>
		/// The frequency of the RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frequency")]
		public System.Nullable<GetCampaignsReturnCampaignsRss_optsFrequency> Frequency { get; set; }
		
		/// <summary>
		/// The date the campaign was last sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_sent")]
		public System.Nullable<System.DateTimeOffset> Last_sent { get; set; }
		
		/// <summary>
		/// The schedule for sending the RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedule")]
		public GetCampaignsReturnCampaignsRss_optsSchedule Schedule { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetCampaignsReturnCampaignsRss_optsFrequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		daily = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		weekly = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		monthly = 2,
	}
	
	public class GetCampaignsReturnCampaignsRss_optsSchedule
	{
		
		/// <summary>
		/// The days of the week to send a daily RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="daily_send")]
		public GetCampaignsReturnCampaignsRss_optsScheduleDaily_send Daily_send { get; set; }
		
		/// <summary>
		/// The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-defaults/).
		/// Minimum: 0
		/// Maximum: 23
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hour")]
		[System.ComponentModel.DataAnnotations.Range(0, 23)]
		public System.Nullable<System.Int32> Hour { get; set; }
		
		/// <summary>
		/// The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February.
		/// Minimum: 0
		/// Maximum: 31
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monthly_send_date")]
		[System.ComponentModel.DataAnnotations.Range(0, 31)]
		public System.Nullable<System.Double> Monthly_send_date { get; set; }
		
		/// <summary>
		/// The day of the week to send a weekly RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weekly_send_day")]
		public System.Nullable<GetCampaignsReturnCampaignsRss_optsScheduleWeekly_send_day> Weekly_send_day { get; set; }
	}
	
	public class GetCampaignsReturnCampaignsRss_optsScheduleDaily_send
	{
		
		/// <summary>
		/// Sends the daily RSS Campaign on Fridays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friday")]
		public System.Nullable<System.Boolean> Friday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Mondays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monday")]
		public System.Nullable<System.Boolean> Monday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Saturdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saturday")]
		public System.Nullable<System.Boolean> Saturday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Sundays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sunday")]
		public System.Nullable<System.Boolean> Sunday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Thursdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thursday")]
		public System.Nullable<System.Boolean> Thursday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Tuesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tuesday")]
		public System.Nullable<System.Boolean> Tuesday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Wednesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wednesday")]
		public System.Nullable<System.Boolean> Wednesday { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetCampaignsReturnCampaignsRss_optsScheduleWeekly_send_day
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sunday = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		monday = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tuesday = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		wednesday = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		thursday = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		friday = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		saturday = 6,
	}
	
	public class GetCampaignsReturnCampaignsSettings
	{
		
		/// <summary>
		/// Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticate")]
		public System.Nullable<System.Boolean> Authenticate { get; set; }
		
		/// <summary>
		/// An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_fb_post")]
		public string[] Auto_fb_post { get; set; }
		
		/// <summary>
		/// Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_footer")]
		public System.Nullable<System.Boolean> Auto_footer { get; set; }
		
		/// <summary>
		/// Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_tweet")]
		public System.Nullable<System.Boolean> Auto_tweet { get; set; }
		
		/// <summary>
		/// Whether the campaign uses the drag-and-drop editor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drag_and_drop")]
		public System.Nullable<System.Boolean> Drag_and_drop { get; set; }
		
		/// <summary>
		/// Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fb_comments")]
		public System.Nullable<System.Boolean> Fb_comments { get; set; }
		
		/// <summary>
		/// If the campaign is listed in a folder, the id for that folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public string Folder_id { get; set; }
		
		/// <summary>
		/// The 'from' name on the campaign (not an email address).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// Automatically inline the CSS included with the campaign content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inline_css")]
		public System.Nullable<System.Boolean> Inline_css { get; set; }
		
		/// <summary>
		/// The preview text for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preview_text")]
		public string Preview_text { get; set; }
		
		/// <summary>
		/// The reply-to email address for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public string Reply_to { get; set; }
		
		/// <summary>
		/// The subject line for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public string Subject_line { get; set; }
		
		/// <summary>
		/// The id for the template used in this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public System.Nullable<System.Int32> Template_id { get; set; }
		
		/// <summary>
		/// Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timewarp")]
		public System.Nullable<System.Boolean> Timewarp { get; set; }
		
		/// <summary>
		/// The title of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to_name")]
		public string To_name { get; set; }
		
		/// <summary>
		/// Use Mailchimp Conversation feature to manage out-of-office replies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_conversation")]
		public System.Nullable<System.Boolean> Use_conversation { get; set; }
	}
	
	public class GetCampaignsReturnCampaignsSocial_card
	{
		
		/// <summary>
		/// A short summary of the campaign to display.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The url for the header image for the card.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The title for the card. Typically the subject line of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetCampaignsReturnCampaignsStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		save = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		paused = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		schedule = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sending = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sent = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		canceled = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		canceling = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		archived = 7,
	}
	
	public class GetCampaignsReturnCampaignsTracking
	{
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capsule")]
		public GetCampaignsReturnCampaignsTrackingCapsule Capsule { get; set; }
		
		/// <summary>
		/// The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicktale")]
		public string Clicktale { get; set; }
		
		/// <summary>
		/// Whether to enable e-commerce tracking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecomm360")]
		public System.Nullable<System.Boolean> Ecomm360 { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal_tracking")]
		public System.Nullable<System.Boolean> Goal_tracking { get; set; }
		
		/// <summary>
		/// The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics")]
		public string Google_analytics { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html_clicks")]
		public System.Nullable<System.Boolean> Html_clicks { get; set; }
		
		/// <summary>
		/// Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Boolean> Opens { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salesforce")]
		public GetCampaignsReturnCampaignsTrackingSalesforce Salesforce { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text_clicks")]
		public System.Nullable<System.Boolean> Text_clicks { get; set; }
	}
	
	public class GetCampaignsReturnCampaignsTrackingCapsule
	{
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class GetCampaignsReturnCampaignsTrackingSalesforce
	{
		
		/// <summary>
		/// Create a campaign in a connected Salesforce account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class GetCampaignsReturnCampaignsVariate_settings
	{
		
		/// <summary>
		/// Combinations of possible variables used to build emails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="combinations")]
		public GetCampaignsReturnCampaignsVariate_settingsCombinations[] GetCampaignsReturnCampaignsVariate_settingsCombinations { get; set; }
		
		/// <summary>
		/// Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public string[] Contents { get; set; }
		
		/// <summary>
		/// The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_names")]
		public string[] From_names { get; set; }
		
		/// <summary>
		/// The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to_addresses")]
		public string[] Reply_to_addresses { get; set; }
		
		/// <summary>
		/// The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_times")]
		public string[] Send_times { get; set; }
		
		/// <summary>
		/// The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_lines")]
		public string[] Subject_lines { get; set; }
		
		/// <summary>
		/// The percentage of recipients to send the test combinations to, must be a value between 10 and 100.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="test_size")]
		public System.Nullable<System.Int32> Test_size { get; set; }
		
		/// <summary>
		/// The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
		
		/// <summary>
		/// The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winner_criteria")]
		public System.Nullable<GetCampaignsReturnCampaignsVariate_settingsWinner_criteria> Winner_criteria { get; set; }
		
		/// <summary>
		/// ID of the campaign that was sent to the remaining recipients based on the winning combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winning_campaign_id")]
		public string Winning_campaign_id { get; set; }
		
		/// <summary>
		/// ID for the winning combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winning_combination_id")]
		public string Winning_combination_id { get; set; }
	}
	
	public class GetCampaignsReturnCampaignsVariate_settingsCombinations
	{
		
		/// <summary>
		/// The index of `variate_settings.contents` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_description")]
		public System.Nullable<System.Int32> Content_description { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.from_names` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public System.Nullable<System.Int32> From_name { get; set; }
		
		/// <summary>
		/// Unique ID for the combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The number of recipients for this combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public System.Nullable<System.Int32> Recipients { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.reply_to_addresses` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public System.Nullable<System.Int32> Reply_to { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.send_times` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.Int32> Send_time { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.subject_lines` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public System.Nullable<System.Int32> Subject_line { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetCampaignsReturnCampaignsVariate_settingsWinner_criteria
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		opens = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		clicks = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		manual = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		total_revenue = 3,
	}
	
	public class PostCampaignsPostBody
	{
		
		/// <summary>
		/// How the campaign's content is put together. The old drag and drop editor uses 'template' while the new editor uses 'multichannel'. Defaults to template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_type")]
		public System.Nullable<PostCampaignsPostBodyContent_type> Content_type { get; set; }
		
		/// <summary>
		/// List settings for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public PostCampaignsPostBodyRecipients Recipients { get; set; }
		
		/// <summary>
		/// [RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options, specific to an RSS campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rss_opts")]
		public PostCampaignsPostBodyRss_opts Rss_opts { get; set; }
		
		/// <summary>
		/// The settings for your campaign, including subject, from name, reply-to address, and more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public PostCampaignsPostBodySettings Settings { get; set; }
		
		/// <summary>
		/// The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="social_card")]
		public PostCampaignsPostBodySocial_card Social_card { get; set; }
		
		/// <summary>
		/// The tracking options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public PostCampaignsPostBodyTracking Tracking { get; set; }
		
		/// <summary>
		/// There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetCampaignsType Type { get; set; }
		
		/// <summary>
		/// The settings specific to A/B test campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variate_settings")]
		public PostCampaignsPostBodyVariate_settings Variate_settings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostCampaignsPostBodyContent_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		template = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		multichannel = 1,
	}
	
	public class PostCampaignsPostBodyRecipients
	{
		
		/// <summary>
		/// The unique list id.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_opts")]
		public PostCampaignsPostBodyRecipientsSegment_opts Segment_opts { get; set; }
	}
	
	public class PostCampaignsPostBodyRecipientsSegment_opts
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Segment match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
		
		/// <summary>
		/// The id for an existing saved segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saved_segment_id")]
		public System.Nullable<System.Int32> Saved_segment_id { get; set; }
	}
	
	public class PostCampaignsPostBodyRss_opts
	{
		
		/// <summary>
		/// Whether to add CSS to images in the RSS feed to constrain their width in campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="constrain_rss_img")]
		public System.Nullable<System.Boolean> Constrain_rss_img { get; set; }
		
		/// <summary>
		/// The URL for the RSS feed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="feed_url")]
		public string Feed_url { get; set; }
		
		/// <summary>
		/// The frequency of the RSS Campaign.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="frequency")]
		public GetCampaignsReturnCampaignsRss_optsFrequency Frequency { get; set; }
		
		/// <summary>
		/// The schedule for sending the RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedule")]
		public PostCampaignsPostBodyRss_optsSchedule Schedule { get; set; }
	}
	
	public class PostCampaignsPostBodyRss_optsSchedule
	{
		
		/// <summary>
		/// The days of the week to send a daily RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="daily_send")]
		public PostCampaignsPostBodyRss_optsScheduleDaily_send Daily_send { get; set; }
		
		/// <summary>
		/// The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-defaults/).
		/// Minimum: 0
		/// Maximum: 23
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hour")]
		[System.ComponentModel.DataAnnotations.Range(0, 23)]
		public System.Nullable<System.Int32> Hour { get; set; }
		
		/// <summary>
		/// The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February.
		/// Minimum: 0
		/// Maximum: 31
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monthly_send_date")]
		[System.ComponentModel.DataAnnotations.Range(0, 31)]
		public System.Nullable<System.Double> Monthly_send_date { get; set; }
		
		/// <summary>
		/// The day of the week to send a weekly RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weekly_send_day")]
		public GetCampaignsReturnCampaignsRss_optsScheduleWeekly_send_day Weekly_send_day { get; set; }
	}
	
	public class PostCampaignsPostBodyRss_optsScheduleDaily_send
	{
		
		/// <summary>
		/// Sends the daily RSS Campaign on Fridays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friday")]
		public System.Nullable<System.Boolean> Friday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Mondays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monday")]
		public System.Nullable<System.Boolean> Monday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Saturdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saturday")]
		public System.Nullable<System.Boolean> Saturday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Sundays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sunday")]
		public System.Nullable<System.Boolean> Sunday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Thursdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thursday")]
		public System.Nullable<System.Boolean> Thursday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Tuesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tuesday")]
		public System.Nullable<System.Boolean> Tuesday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Wednesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wednesday")]
		public System.Nullable<System.Boolean> Wednesday { get; set; }
	}
	
	public class PostCampaignsPostBodySettings
	{
		
		/// <summary>
		/// Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticate")]
		public System.Nullable<System.Boolean> Authenticate { get; set; }
		
		/// <summary>
		/// An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_fb_post")]
		public string[] Auto_fb_post { get; set; }
		
		/// <summary>
		/// Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_footer")]
		public System.Nullable<System.Boolean> Auto_footer { get; set; }
		
		/// <summary>
		/// Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_tweet")]
		public System.Nullable<System.Boolean> Auto_tweet { get; set; }
		
		/// <summary>
		/// Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fb_comments")]
		public System.Nullable<System.Boolean> Fb_comments { get; set; }
		
		/// <summary>
		/// If the campaign is listed in a folder, the id for that folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public string Folder_id { get; set; }
		
		/// <summary>
		/// The 'from' name on the campaign (not an email address).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// Automatically inline the CSS included with the campaign content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inline_css")]
		public System.Nullable<System.Boolean> Inline_css { get; set; }
		
		/// <summary>
		/// The preview text for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preview_text")]
		public string Preview_text { get; set; }
		
		/// <summary>
		/// The reply-to email address for the campaign. Note: while this field is not required for campaign creation, it is required for sending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public string Reply_to { get; set; }
		
		/// <summary>
		/// The subject line for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public string Subject_line { get; set; }
		
		/// <summary>
		/// The id of the template to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public System.Nullable<System.Int32> Template_id { get; set; }
		
		/// <summary>
		/// The title of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to_name")]
		public string To_name { get; set; }
		
		/// <summary>
		/// Use Mailchimp Conversation feature to manage out-of-office replies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_conversation")]
		public System.Nullable<System.Boolean> Use_conversation { get; set; }
	}
	
	public class PostCampaignsPostBodySocial_card
	{
		
		/// <summary>
		/// A short summary of the campaign to display.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The url for the header image for the card.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The title for the card. Typically the subject line of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class PostCampaignsPostBodyTracking
	{
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capsule")]
		public PostCampaignsPostBodyTrackingCapsule Capsule { get; set; }
		
		/// <summary>
		/// The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicktale")]
		public string Clicktale { get; set; }
		
		/// <summary>
		/// Whether to enable e-commerce tracking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecomm360")]
		public System.Nullable<System.Boolean> Ecomm360 { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal_tracking")]
		public System.Nullable<System.Boolean> Goal_tracking { get; set; }
		
		/// <summary>
		/// The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics")]
		public string Google_analytics { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html_clicks")]
		public System.Nullable<System.Boolean> Html_clicks { get; set; }
		
		/// <summary>
		/// Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Boolean> Opens { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salesforce")]
		public PostCampaignsPostBodyTrackingSalesforce Salesforce { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text_clicks")]
		public System.Nullable<System.Boolean> Text_clicks { get; set; }
	}
	
	public class PostCampaignsPostBodyTrackingCapsule
	{
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class PostCampaignsPostBodyTrackingSalesforce
	{
		
		/// <summary>
		/// Create a campaign in a connected Salesforce account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class PostCampaignsPostBodyVariate_settings
	{
		
		/// <summary>
		/// The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_names")]
		public string[] From_names { get; set; }
		
		/// <summary>
		/// The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to_addresses")]
		public string[] Reply_to_addresses { get; set; }
		
		/// <summary>
		/// The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_times")]
		public string[] Send_times { get; set; }
		
		/// <summary>
		/// The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_lines")]
		public string[] Subject_lines { get; set; }
		
		/// <summary>
		/// The percentage of recipients to send the test combinations to, must be a value between 10 and 100.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="test_size")]
		public System.Nullable<System.Int32> Test_size { get; set; }
		
		/// <summary>
		/// The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
		
		/// <summary>
		/// The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="winner_criteria")]
		public GetCampaignsReturnCampaignsVariate_settingsWinner_criteria Winner_criteria { get; set; }
	}
	
	public class PostCampaignsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostCampaignsReturn_links[] PostCampaignsReturn_links { get; set; }
		
		/// <summary>
		/// [A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ab_split_opts")]
		public PostCampaignsReturnAb_split_opts Ab_split_opts { get; set; }
		
		/// <summary>
		/// The link to the campaign's archive version in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archive_url")]
		public string Archive_url { get; set; }
		
		/// <summary>
		/// How the campaign's content is put together.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_type")]
		public GetCampaignsReturnCampaignsContent_type Content_type { get; set; }
		
		/// <summary>
		/// The date and time the campaign was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="create_time")]
		public System.Nullable<System.DateTimeOffset> Create_time { get; set; }
		
		/// <summary>
		/// Updates on campaigns in the process of sending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delivery_status")]
		public PostCampaignsReturnDelivery_status Delivery_status { get; set; }
		
		/// <summary>
		/// The total number of emails sent for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The original link to the campaign's archive version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="long_archive_url")]
		public string Long_archive_url { get; set; }
		
		/// <summary>
		/// Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="needs_block_refresh")]
		public System.Nullable<System.Boolean> Needs_block_refresh { get; set; }
		
		/// <summary>
		/// If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_campaign_id")]
		public string Parent_campaign_id { get; set; }
		
		/// <summary>
		/// List settings for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public PostCampaignsReturnRecipients Recipients { get; set; }
		
		/// <summary>
		/// For sent campaigns, a summary of opens, clicks, and e-commerce data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report_summary")]
		public PostCampaignsReturnReport_summary Report_summary { get; set; }
		
		/// <summary>
		/// Determines if the campaign qualifies to be resent to non-openers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resendable")]
		public System.Nullable<System.Boolean> Resendable { get; set; }
		
		/// <summary>
		/// [RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rss_opts")]
		public PostCampaignsReturnRss_opts Rss_opts { get; set; }
		
		/// <summary>
		/// The date and time a campaign was sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.DateTimeOffset> Send_time { get; set; }
		
		/// <summary>
		/// The settings for your campaign, including subject, from name, reply-to address, and more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public PostCampaignsReturnSettings Settings { get; set; }
		
		/// <summary>
		/// The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="social_card")]
		public PostCampaignsReturnSocial_card Social_card { get; set; }
		
		/// <summary>
		/// The current status of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetCampaignsReturnCampaignsStatus Status { get; set; }
		
		/// <summary>
		/// The tracking options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public PostCampaignsReturnTracking Tracking { get; set; }
		
		/// <summary>
		/// There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetCampaignsType Type { get; set; }
		
		/// <summary>
		/// The settings specific to A/B test campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variate_settings")]
		public PostCampaignsReturnVariate_settings Variate_settings { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class PostCampaignsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostCampaignsReturnAb_split_opts
	{
		
		/// <summary>
		/// For campaigns split on 'From Name', the name for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name_a")]
		public string From_name_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the name for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name_b")]
		public string From_name_b { get; set; }
		
		/// <summary>
		/// How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pick_winner")]
		public GetCampaignsReturnCampaignsAb_split_optsPick_winner Pick_winner { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the reply-to address for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_email_a")]
		public string Reply_email_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the reply-to address for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_email_b")]
		public string Reply_email_b { get; set; }
		
		/// <summary>
		/// The send time for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_a")]
		public System.Nullable<System.DateTimeOffset> Send_time_a { get; set; }
		
		/// <summary>
		/// The send time for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_b")]
		public System.Nullable<System.DateTimeOffset> Send_time_b { get; set; }
		
		/// <summary>
		/// The send time for the winning version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_winner")]
		public string Send_time_winner { get; set; }
		
		/// <summary>
		/// The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50.
		/// Minimum: 1
		/// Maximum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="split_size")]
		[System.ComponentModel.DataAnnotations.Range(1, 50)]
		public System.Nullable<System.Int32> Split_size { get; set; }
		
		/// <summary>
		/// The type of AB split to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="split_test")]
		public GetCampaignsReturnCampaignsAb_split_optsSplit_test Split_test { get; set; }
		
		/// <summary>
		/// For campaigns split on 'Subject Line', the subject line for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_a")]
		public string Subject_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'Subject Line', the subject line for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_b")]
		public string Subject_b { get; set; }
		
		/// <summary>
		/// The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
		
		/// <summary>
		/// How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_units")]
		public GetCampaignsReturnCampaignsAb_split_optsWait_units Wait_units { get; set; }
	}
	
	public class PostCampaignsReturnDelivery_status
	{
		
		/// <summary>
		/// Whether a campaign send can be canceled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="can_cancel")]
		public System.Nullable<System.Boolean> Can_cancel { get; set; }
		
		/// <summary>
		/// The total number of emails canceled for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_canceled")]
		public System.Nullable<System.Int32> Emails_canceled { get; set; }
		
		/// <summary>
		/// The total number of emails confirmed sent for this campaign so far.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// Whether Campaign Delivery Status is enabled for this account and campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The current state of a campaign delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetCampaignsReturnCampaignsDelivery_statusStatus Status { get; set; }
	}
	
	public class PostCampaignsReturnRecipients
	{
		
		/// <summary>
		/// The unique list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// Count of the recipients on the associated list. Formatted as an integer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_count")]
		public System.Nullable<System.Int32> Recipient_count { get; set; }
		
		/// <summary>
		/// An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_opts")]
		public PostCampaignsReturnRecipientsSegment_opts Segment_opts { get; set; }
		
		/// <summary>
		/// A description of the [segment](https://mailchimp.com/help/create-and-send-to-a-segment/) used for the campaign. Formatted as a string marked up with HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_text")]
		public string Segment_text { get; set; }
	}
	
	public class PostCampaignsReturnRecipientsSegment_opts
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Segment match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
		
		/// <summary>
		/// The prebuilt segment id, if a prebuilt segment has been designated for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prebuilt_segment_id")]
		public string Prebuilt_segment_id { get; set; }
		
		/// <summary>
		/// The id for an existing saved segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saved_segment_id")]
		public System.Nullable<System.Int32> Saved_segment_id { get; set; }
	}
	
	public class PostCampaignsReturnReport_summary
	{
		
		/// <summary>
		/// The number of unique clicks divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The total number of clicks for an campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// E-Commerce stats for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecommerce")]
		public PostCampaignsReturnReport_summaryEcommerce Ecommerce { get; set; }
		
		/// <summary>
		/// The number of unique opens divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The total number of opens for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// The number of unique clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber_clicks")]
		public System.Nullable<System.Int32> Subscriber_clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class PostCampaignsReturnReport_summaryEcommerce
	{
		
		/// <summary>
		/// The total orders for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_orders")]
		public System.Nullable<System.Int32> Total_orders { get; set; }
		
		/// <summary>
		/// The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
		
		/// <summary>
		/// The total spent for a campaign. Calculated as the sum of all order totals with no deductions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
	}
	
	public class PostCampaignsReturnRss_opts
	{
		
		/// <summary>
		/// Whether to add CSS to images in the RSS feed to constrain their width in campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="constrain_rss_img")]
		public System.Nullable<System.Boolean> Constrain_rss_img { get; set; }
		
		/// <summary>
		/// The URL for the RSS feed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="feed_url")]
		public string Feed_url { get; set; }
		
		/// <summary>
		/// The frequency of the RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frequency")]
		public GetCampaignsReturnCampaignsRss_optsFrequency Frequency { get; set; }
		
		/// <summary>
		/// The date the campaign was last sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_sent")]
		public System.Nullable<System.DateTimeOffset> Last_sent { get; set; }
		
		/// <summary>
		/// The schedule for sending the RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedule")]
		public PostCampaignsReturnRss_optsSchedule Schedule { get; set; }
	}
	
	public class PostCampaignsReturnRss_optsSchedule
	{
		
		/// <summary>
		/// The days of the week to send a daily RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="daily_send")]
		public PostCampaignsReturnRss_optsScheduleDaily_send Daily_send { get; set; }
		
		/// <summary>
		/// The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-defaults/).
		/// Minimum: 0
		/// Maximum: 23
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hour")]
		[System.ComponentModel.DataAnnotations.Range(0, 23)]
		public System.Nullable<System.Int32> Hour { get; set; }
		
		/// <summary>
		/// The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February.
		/// Minimum: 0
		/// Maximum: 31
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monthly_send_date")]
		[System.ComponentModel.DataAnnotations.Range(0, 31)]
		public System.Nullable<System.Double> Monthly_send_date { get; set; }
		
		/// <summary>
		/// The day of the week to send a weekly RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weekly_send_day")]
		public GetCampaignsReturnCampaignsRss_optsScheduleWeekly_send_day Weekly_send_day { get; set; }
	}
	
	public class PostCampaignsReturnRss_optsScheduleDaily_send
	{
		
		/// <summary>
		/// Sends the daily RSS Campaign on Fridays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friday")]
		public System.Nullable<System.Boolean> Friday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Mondays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monday")]
		public System.Nullable<System.Boolean> Monday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Saturdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saturday")]
		public System.Nullable<System.Boolean> Saturday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Sundays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sunday")]
		public System.Nullable<System.Boolean> Sunday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Thursdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thursday")]
		public System.Nullable<System.Boolean> Thursday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Tuesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tuesday")]
		public System.Nullable<System.Boolean> Tuesday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Wednesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wednesday")]
		public System.Nullable<System.Boolean> Wednesday { get; set; }
	}
	
	public class PostCampaignsReturnSettings
	{
		
		/// <summary>
		/// Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticate")]
		public System.Nullable<System.Boolean> Authenticate { get; set; }
		
		/// <summary>
		/// An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_fb_post")]
		public string[] Auto_fb_post { get; set; }
		
		/// <summary>
		/// Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_footer")]
		public System.Nullable<System.Boolean> Auto_footer { get; set; }
		
		/// <summary>
		/// Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_tweet")]
		public System.Nullable<System.Boolean> Auto_tweet { get; set; }
		
		/// <summary>
		/// Whether the campaign uses the drag-and-drop editor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drag_and_drop")]
		public System.Nullable<System.Boolean> Drag_and_drop { get; set; }
		
		/// <summary>
		/// Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fb_comments")]
		public System.Nullable<System.Boolean> Fb_comments { get; set; }
		
		/// <summary>
		/// If the campaign is listed in a folder, the id for that folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public string Folder_id { get; set; }
		
		/// <summary>
		/// The 'from' name on the campaign (not an email address).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// Automatically inline the CSS included with the campaign content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inline_css")]
		public System.Nullable<System.Boolean> Inline_css { get; set; }
		
		/// <summary>
		/// The preview text for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preview_text")]
		public string Preview_text { get; set; }
		
		/// <summary>
		/// The reply-to email address for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public string Reply_to { get; set; }
		
		/// <summary>
		/// The subject line for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public string Subject_line { get; set; }
		
		/// <summary>
		/// The id for the template used in this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public System.Nullable<System.Int32> Template_id { get; set; }
		
		/// <summary>
		/// Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timewarp")]
		public System.Nullable<System.Boolean> Timewarp { get; set; }
		
		/// <summary>
		/// The title of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to_name")]
		public string To_name { get; set; }
		
		/// <summary>
		/// Use Mailchimp Conversation feature to manage out-of-office replies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_conversation")]
		public System.Nullable<System.Boolean> Use_conversation { get; set; }
	}
	
	public class PostCampaignsReturnSocial_card
	{
		
		/// <summary>
		/// A short summary of the campaign to display.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The url for the header image for the card.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The title for the card. Typically the subject line of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class PostCampaignsReturnTracking
	{
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capsule")]
		public PostCampaignsReturnTrackingCapsule Capsule { get; set; }
		
		/// <summary>
		/// The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicktale")]
		public string Clicktale { get; set; }
		
		/// <summary>
		/// Whether to enable e-commerce tracking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecomm360")]
		public System.Nullable<System.Boolean> Ecomm360 { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal_tracking")]
		public System.Nullable<System.Boolean> Goal_tracking { get; set; }
		
		/// <summary>
		/// The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics")]
		public string Google_analytics { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html_clicks")]
		public System.Nullable<System.Boolean> Html_clicks { get; set; }
		
		/// <summary>
		/// Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Boolean> Opens { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salesforce")]
		public PostCampaignsReturnTrackingSalesforce Salesforce { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text_clicks")]
		public System.Nullable<System.Boolean> Text_clicks { get; set; }
	}
	
	public class PostCampaignsReturnTrackingCapsule
	{
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class PostCampaignsReturnTrackingSalesforce
	{
		
		/// <summary>
		/// Create a campaign in a connected Salesforce account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class PostCampaignsReturnVariate_settings
	{
		
		/// <summary>
		/// Combinations of possible variables used to build emails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="combinations")]
		public PostCampaignsReturnVariate_settingsCombinations[] PostCampaignsReturnVariate_settingsCombinations { get; set; }
		
		/// <summary>
		/// Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public string[] Contents { get; set; }
		
		/// <summary>
		/// The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_names")]
		public string[] From_names { get; set; }
		
		/// <summary>
		/// The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to_addresses")]
		public string[] Reply_to_addresses { get; set; }
		
		/// <summary>
		/// The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_times")]
		public string[] Send_times { get; set; }
		
		/// <summary>
		/// The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_lines")]
		public string[] Subject_lines { get; set; }
		
		/// <summary>
		/// The percentage of recipients to send the test combinations to, must be a value between 10 and 100.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="test_size")]
		public System.Nullable<System.Int32> Test_size { get; set; }
		
		/// <summary>
		/// The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
		
		/// <summary>
		/// The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winner_criteria")]
		public GetCampaignsReturnCampaignsVariate_settingsWinner_criteria Winner_criteria { get; set; }
		
		/// <summary>
		/// ID of the campaign that was sent to the remaining recipients based on the winning combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winning_campaign_id")]
		public string Winning_campaign_id { get; set; }
		
		/// <summary>
		/// ID for the winning combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winning_combination_id")]
		public string Winning_combination_id { get; set; }
	}
	
	public class PostCampaignsReturnVariate_settingsCombinations
	{
		
		/// <summary>
		/// The index of `variate_settings.contents` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_description")]
		public System.Nullable<System.Int32> Content_description { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.from_names` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public System.Nullable<System.Int32> From_name { get; set; }
		
		/// <summary>
		/// Unique ID for the combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The number of recipients for this combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public System.Nullable<System.Int32> Recipients { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.reply_to_addresses` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public System.Nullable<System.Int32> Reply_to { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.send_times` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.Int32> Send_time { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.subject_lines` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public System.Nullable<System.Int32> Subject_line { get; set; }
	}
	
	public class GetCampaignsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetCampaignsIdReturn_links[] GetCampaignsIdReturn_links { get; set; }
		
		/// <summary>
		/// [A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ab_split_opts")]
		public GetCampaignsIdReturnAb_split_opts Ab_split_opts { get; set; }
		
		/// <summary>
		/// The link to the campaign's archive version in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archive_url")]
		public string Archive_url { get; set; }
		
		/// <summary>
		/// How the campaign's content is put together.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_type")]
		public GetCampaignsReturnCampaignsContent_type Content_type { get; set; }
		
		/// <summary>
		/// The date and time the campaign was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="create_time")]
		public System.Nullable<System.DateTimeOffset> Create_time { get; set; }
		
		/// <summary>
		/// Updates on campaigns in the process of sending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delivery_status")]
		public GetCampaignsIdReturnDelivery_status Delivery_status { get; set; }
		
		/// <summary>
		/// The total number of emails sent for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The original link to the campaign's archive version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="long_archive_url")]
		public string Long_archive_url { get; set; }
		
		/// <summary>
		/// Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="needs_block_refresh")]
		public System.Nullable<System.Boolean> Needs_block_refresh { get; set; }
		
		/// <summary>
		/// If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_campaign_id")]
		public string Parent_campaign_id { get; set; }
		
		/// <summary>
		/// List settings for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public GetCampaignsIdReturnRecipients Recipients { get; set; }
		
		/// <summary>
		/// For sent campaigns, a summary of opens, clicks, and e-commerce data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report_summary")]
		public GetCampaignsIdReturnReport_summary Report_summary { get; set; }
		
		/// <summary>
		/// Determines if the campaign qualifies to be resent to non-openers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resendable")]
		public System.Nullable<System.Boolean> Resendable { get; set; }
		
		/// <summary>
		/// [RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rss_opts")]
		public GetCampaignsIdReturnRss_opts Rss_opts { get; set; }
		
		/// <summary>
		/// The date and time a campaign was sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.DateTimeOffset> Send_time { get; set; }
		
		/// <summary>
		/// The settings for your campaign, including subject, from name, reply-to address, and more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public GetCampaignsIdReturnSettings Settings { get; set; }
		
		/// <summary>
		/// The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="social_card")]
		public GetCampaignsIdReturnSocial_card Social_card { get; set; }
		
		/// <summary>
		/// The current status of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetCampaignsReturnCampaignsStatus Status { get; set; }
		
		/// <summary>
		/// The tracking options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public GetCampaignsIdReturnTracking Tracking { get; set; }
		
		/// <summary>
		/// There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetCampaignsType Type { get; set; }
		
		/// <summary>
		/// The settings specific to A/B test campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variate_settings")]
		public GetCampaignsIdReturnVariate_settings Variate_settings { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class GetCampaignsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetCampaignsIdReturnAb_split_opts
	{
		
		/// <summary>
		/// For campaigns split on 'From Name', the name for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name_a")]
		public string From_name_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the name for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name_b")]
		public string From_name_b { get; set; }
		
		/// <summary>
		/// How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pick_winner")]
		public GetCampaignsReturnCampaignsAb_split_optsPick_winner Pick_winner { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the reply-to address for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_email_a")]
		public string Reply_email_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the reply-to address for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_email_b")]
		public string Reply_email_b { get; set; }
		
		/// <summary>
		/// The send time for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_a")]
		public System.Nullable<System.DateTimeOffset> Send_time_a { get; set; }
		
		/// <summary>
		/// The send time for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_b")]
		public System.Nullable<System.DateTimeOffset> Send_time_b { get; set; }
		
		/// <summary>
		/// The send time for the winning version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_winner")]
		public string Send_time_winner { get; set; }
		
		/// <summary>
		/// The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50.
		/// Minimum: 1
		/// Maximum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="split_size")]
		[System.ComponentModel.DataAnnotations.Range(1, 50)]
		public System.Nullable<System.Int32> Split_size { get; set; }
		
		/// <summary>
		/// The type of AB split to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="split_test")]
		public GetCampaignsReturnCampaignsAb_split_optsSplit_test Split_test { get; set; }
		
		/// <summary>
		/// For campaigns split on 'Subject Line', the subject line for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_a")]
		public string Subject_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'Subject Line', the subject line for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_b")]
		public string Subject_b { get; set; }
		
		/// <summary>
		/// The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
		
		/// <summary>
		/// How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_units")]
		public GetCampaignsReturnCampaignsAb_split_optsWait_units Wait_units { get; set; }
	}
	
	public class GetCampaignsIdReturnDelivery_status
	{
		
		/// <summary>
		/// Whether a campaign send can be canceled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="can_cancel")]
		public System.Nullable<System.Boolean> Can_cancel { get; set; }
		
		/// <summary>
		/// The total number of emails canceled for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_canceled")]
		public System.Nullable<System.Int32> Emails_canceled { get; set; }
		
		/// <summary>
		/// The total number of emails confirmed sent for this campaign so far.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// Whether Campaign Delivery Status is enabled for this account and campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The current state of a campaign delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetCampaignsReturnCampaignsDelivery_statusStatus Status { get; set; }
	}
	
	public class GetCampaignsIdReturnRecipients
	{
		
		/// <summary>
		/// The unique list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// Count of the recipients on the associated list. Formatted as an integer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_count")]
		public System.Nullable<System.Int32> Recipient_count { get; set; }
		
		/// <summary>
		/// An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_opts")]
		public GetCampaignsIdReturnRecipientsSegment_opts Segment_opts { get; set; }
		
		/// <summary>
		/// A description of the [segment](https://mailchimp.com/help/create-and-send-to-a-segment/) used for the campaign. Formatted as a string marked up with HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_text")]
		public string Segment_text { get; set; }
	}
	
	public class GetCampaignsIdReturnRecipientsSegment_opts
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Segment match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
		
		/// <summary>
		/// The prebuilt segment id, if a prebuilt segment has been designated for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prebuilt_segment_id")]
		public string Prebuilt_segment_id { get; set; }
		
		/// <summary>
		/// The id for an existing saved segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saved_segment_id")]
		public System.Nullable<System.Int32> Saved_segment_id { get; set; }
	}
	
	public class GetCampaignsIdReturnReport_summary
	{
		
		/// <summary>
		/// The number of unique clicks divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The total number of clicks for an campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// E-Commerce stats for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecommerce")]
		public GetCampaignsIdReturnReport_summaryEcommerce Ecommerce { get; set; }
		
		/// <summary>
		/// The number of unique opens divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The total number of opens for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// The number of unique clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber_clicks")]
		public System.Nullable<System.Int32> Subscriber_clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class GetCampaignsIdReturnReport_summaryEcommerce
	{
		
		/// <summary>
		/// The total orders for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_orders")]
		public System.Nullable<System.Int32> Total_orders { get; set; }
		
		/// <summary>
		/// The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
		
		/// <summary>
		/// The total spent for a campaign. Calculated as the sum of all order totals with no deductions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
	}
	
	public class GetCampaignsIdReturnRss_opts
	{
		
		/// <summary>
		/// Whether to add CSS to images in the RSS feed to constrain their width in campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="constrain_rss_img")]
		public System.Nullable<System.Boolean> Constrain_rss_img { get; set; }
		
		/// <summary>
		/// The URL for the RSS feed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="feed_url")]
		public string Feed_url { get; set; }
		
		/// <summary>
		/// The frequency of the RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frequency")]
		public GetCampaignsReturnCampaignsRss_optsFrequency Frequency { get; set; }
		
		/// <summary>
		/// The date the campaign was last sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_sent")]
		public System.Nullable<System.DateTimeOffset> Last_sent { get; set; }
		
		/// <summary>
		/// The schedule for sending the RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedule")]
		public GetCampaignsIdReturnRss_optsSchedule Schedule { get; set; }
	}
	
	public class GetCampaignsIdReturnRss_optsSchedule
	{
		
		/// <summary>
		/// The days of the week to send a daily RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="daily_send")]
		public GetCampaignsIdReturnRss_optsScheduleDaily_send Daily_send { get; set; }
		
		/// <summary>
		/// The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-defaults/).
		/// Minimum: 0
		/// Maximum: 23
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hour")]
		[System.ComponentModel.DataAnnotations.Range(0, 23)]
		public System.Nullable<System.Int32> Hour { get; set; }
		
		/// <summary>
		/// The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February.
		/// Minimum: 0
		/// Maximum: 31
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monthly_send_date")]
		[System.ComponentModel.DataAnnotations.Range(0, 31)]
		public System.Nullable<System.Double> Monthly_send_date { get; set; }
		
		/// <summary>
		/// The day of the week to send a weekly RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weekly_send_day")]
		public GetCampaignsReturnCampaignsRss_optsScheduleWeekly_send_day Weekly_send_day { get; set; }
	}
	
	public class GetCampaignsIdReturnRss_optsScheduleDaily_send
	{
		
		/// <summary>
		/// Sends the daily RSS Campaign on Fridays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friday")]
		public System.Nullable<System.Boolean> Friday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Mondays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monday")]
		public System.Nullable<System.Boolean> Monday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Saturdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saturday")]
		public System.Nullable<System.Boolean> Saturday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Sundays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sunday")]
		public System.Nullable<System.Boolean> Sunday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Thursdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thursday")]
		public System.Nullable<System.Boolean> Thursday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Tuesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tuesday")]
		public System.Nullable<System.Boolean> Tuesday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Wednesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wednesday")]
		public System.Nullable<System.Boolean> Wednesday { get; set; }
	}
	
	public class GetCampaignsIdReturnSettings
	{
		
		/// <summary>
		/// Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticate")]
		public System.Nullable<System.Boolean> Authenticate { get; set; }
		
		/// <summary>
		/// An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_fb_post")]
		public string[] Auto_fb_post { get; set; }
		
		/// <summary>
		/// Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_footer")]
		public System.Nullable<System.Boolean> Auto_footer { get; set; }
		
		/// <summary>
		/// Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_tweet")]
		public System.Nullable<System.Boolean> Auto_tweet { get; set; }
		
		/// <summary>
		/// Whether the campaign uses the drag-and-drop editor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drag_and_drop")]
		public System.Nullable<System.Boolean> Drag_and_drop { get; set; }
		
		/// <summary>
		/// Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fb_comments")]
		public System.Nullable<System.Boolean> Fb_comments { get; set; }
		
		/// <summary>
		/// If the campaign is listed in a folder, the id for that folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public string Folder_id { get; set; }
		
		/// <summary>
		/// The 'from' name on the campaign (not an email address).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// Automatically inline the CSS included with the campaign content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inline_css")]
		public System.Nullable<System.Boolean> Inline_css { get; set; }
		
		/// <summary>
		/// The preview text for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preview_text")]
		public string Preview_text { get; set; }
		
		/// <summary>
		/// The reply-to email address for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public string Reply_to { get; set; }
		
		/// <summary>
		/// The subject line for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public string Subject_line { get; set; }
		
		/// <summary>
		/// The id for the template used in this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public System.Nullable<System.Int32> Template_id { get; set; }
		
		/// <summary>
		/// Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timewarp")]
		public System.Nullable<System.Boolean> Timewarp { get; set; }
		
		/// <summary>
		/// The title of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to_name")]
		public string To_name { get; set; }
		
		/// <summary>
		/// Use Mailchimp Conversation feature to manage out-of-office replies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_conversation")]
		public System.Nullable<System.Boolean> Use_conversation { get; set; }
	}
	
	public class GetCampaignsIdReturnSocial_card
	{
		
		/// <summary>
		/// A short summary of the campaign to display.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The url for the header image for the card.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The title for the card. Typically the subject line of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class GetCampaignsIdReturnTracking
	{
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capsule")]
		public GetCampaignsIdReturnTrackingCapsule Capsule { get; set; }
		
		/// <summary>
		/// The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicktale")]
		public string Clicktale { get; set; }
		
		/// <summary>
		/// Whether to enable e-commerce tracking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecomm360")]
		public System.Nullable<System.Boolean> Ecomm360 { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal_tracking")]
		public System.Nullable<System.Boolean> Goal_tracking { get; set; }
		
		/// <summary>
		/// The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics")]
		public string Google_analytics { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html_clicks")]
		public System.Nullable<System.Boolean> Html_clicks { get; set; }
		
		/// <summary>
		/// Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Boolean> Opens { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salesforce")]
		public GetCampaignsIdReturnTrackingSalesforce Salesforce { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text_clicks")]
		public System.Nullable<System.Boolean> Text_clicks { get; set; }
	}
	
	public class GetCampaignsIdReturnTrackingCapsule
	{
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class GetCampaignsIdReturnTrackingSalesforce
	{
		
		/// <summary>
		/// Create a campaign in a connected Salesforce account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class GetCampaignsIdReturnVariate_settings
	{
		
		/// <summary>
		/// Combinations of possible variables used to build emails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="combinations")]
		public GetCampaignsIdReturnVariate_settingsCombinations[] GetCampaignsIdReturnVariate_settingsCombinations { get; set; }
		
		/// <summary>
		/// Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public string[] Contents { get; set; }
		
		/// <summary>
		/// The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_names")]
		public string[] From_names { get; set; }
		
		/// <summary>
		/// The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to_addresses")]
		public string[] Reply_to_addresses { get; set; }
		
		/// <summary>
		/// The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_times")]
		public string[] Send_times { get; set; }
		
		/// <summary>
		/// The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_lines")]
		public string[] Subject_lines { get; set; }
		
		/// <summary>
		/// The percentage of recipients to send the test combinations to, must be a value between 10 and 100.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="test_size")]
		public System.Nullable<System.Int32> Test_size { get; set; }
		
		/// <summary>
		/// The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
		
		/// <summary>
		/// The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winner_criteria")]
		public GetCampaignsReturnCampaignsVariate_settingsWinner_criteria Winner_criteria { get; set; }
		
		/// <summary>
		/// ID of the campaign that was sent to the remaining recipients based on the winning combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winning_campaign_id")]
		public string Winning_campaign_id { get; set; }
		
		/// <summary>
		/// ID for the winning combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winning_combination_id")]
		public string Winning_combination_id { get; set; }
	}
	
	public class GetCampaignsIdReturnVariate_settingsCombinations
	{
		
		/// <summary>
		/// The index of `variate_settings.contents` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_description")]
		public System.Nullable<System.Int32> Content_description { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.from_names` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public System.Nullable<System.Int32> From_name { get; set; }
		
		/// <summary>
		/// Unique ID for the combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The number of recipients for this combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public System.Nullable<System.Int32> Recipients { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.reply_to_addresses` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public System.Nullable<System.Int32> Reply_to { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.send_times` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.Int32> Send_time { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.subject_lines` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public System.Nullable<System.Int32> Subject_line { get; set; }
	}
	
	public class PatchCampaignsIdPatchBody
	{
		
		/// <summary>
		/// List settings for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public PatchCampaignsIdPatchBodyRecipients Recipients { get; set; }
		
		/// <summary>
		/// [RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rss_opts")]
		public PatchCampaignsIdPatchBodyRss_opts Rss_opts { get; set; }
		
		/// <summary>
		/// The settings for your campaign, including subject, from name, reply-to address, and more.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public PatchCampaignsIdPatchBodySettings Settings { get; set; }
		
		/// <summary>
		/// The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="social_card")]
		public PatchCampaignsIdPatchBodySocial_card Social_card { get; set; }
		
		/// <summary>
		/// The tracking options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public PatchCampaignsIdPatchBodyTracking Tracking { get; set; }
		
		/// <summary>
		/// The settings specific to A/B test campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variate_settings")]
		public PatchCampaignsIdPatchBodyVariate_settings Variate_settings { get; set; }
	}
	
	public class PatchCampaignsIdPatchBodyRecipients
	{
		
		/// <summary>
		/// The unique list id.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_opts")]
		public PatchCampaignsIdPatchBodyRecipientsSegment_opts Segment_opts { get; set; }
	}
	
	public class PatchCampaignsIdPatchBodyRecipientsSegment_opts
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Segment match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
		
		/// <summary>
		/// The prebuilt segment id, if a prebuilt segment has been designated for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prebuilt_segment_id")]
		public string Prebuilt_segment_id { get; set; }
		
		/// <summary>
		/// The id for an existing saved segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saved_segment_id")]
		public System.Nullable<System.Int32> Saved_segment_id { get; set; }
	}
	
	public class PatchCampaignsIdPatchBodyRss_opts
	{
		
		/// <summary>
		/// Whether to add CSS to images in the RSS feed to constrain their width in campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="constrain_rss_img")]
		public System.Nullable<System.Boolean> Constrain_rss_img { get; set; }
		
		/// <summary>
		/// The URL for the RSS feed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="feed_url")]
		public string Feed_url { get; set; }
		
		/// <summary>
		/// The frequency of the RSS Campaign.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="frequency")]
		public GetCampaignsReturnCampaignsRss_optsFrequency Frequency { get; set; }
		
		/// <summary>
		/// The schedule for sending the RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedule")]
		public PatchCampaignsIdPatchBodyRss_optsSchedule Schedule { get; set; }
	}
	
	public class PatchCampaignsIdPatchBodyRss_optsSchedule
	{
		
		/// <summary>
		/// The days of the week to send a daily RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="daily_send")]
		public PatchCampaignsIdPatchBodyRss_optsScheduleDaily_send Daily_send { get; set; }
		
		/// <summary>
		/// The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-defaults/).
		/// Minimum: 0
		/// Maximum: 23
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hour")]
		[System.ComponentModel.DataAnnotations.Range(0, 23)]
		public System.Nullable<System.Int32> Hour { get; set; }
		
		/// <summary>
		/// The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February.
		/// Minimum: 0
		/// Maximum: 31
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monthly_send_date")]
		[System.ComponentModel.DataAnnotations.Range(0, 31)]
		public System.Nullable<System.Double> Monthly_send_date { get; set; }
		
		/// <summary>
		/// The day of the week to send a weekly RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weekly_send_day")]
		public GetCampaignsReturnCampaignsRss_optsScheduleWeekly_send_day Weekly_send_day { get; set; }
	}
	
	public class PatchCampaignsIdPatchBodyRss_optsScheduleDaily_send
	{
		
		/// <summary>
		/// Sends the daily RSS Campaign on Fridays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friday")]
		public System.Nullable<System.Boolean> Friday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Mondays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monday")]
		public System.Nullable<System.Boolean> Monday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Saturdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saturday")]
		public System.Nullable<System.Boolean> Saturday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Sundays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sunday")]
		public System.Nullable<System.Boolean> Sunday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Thursdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thursday")]
		public System.Nullable<System.Boolean> Thursday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Tuesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tuesday")]
		public System.Nullable<System.Boolean> Tuesday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Wednesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wednesday")]
		public System.Nullable<System.Boolean> Wednesday { get; set; }
	}
	
	public class PatchCampaignsIdPatchBodySettings
	{
		
		/// <summary>
		/// Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticate")]
		public System.Nullable<System.Boolean> Authenticate { get; set; }
		
		/// <summary>
		/// An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_fb_post")]
		public string[] Auto_fb_post { get; set; }
		
		/// <summary>
		/// Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_footer")]
		public System.Nullable<System.Boolean> Auto_footer { get; set; }
		
		/// <summary>
		/// Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_tweet")]
		public System.Nullable<System.Boolean> Auto_tweet { get; set; }
		
		/// <summary>
		/// Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fb_comments")]
		public System.Nullable<System.Boolean> Fb_comments { get; set; }
		
		/// <summary>
		/// If the campaign is listed in a folder, the id for that folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public string Folder_id { get; set; }
		
		/// <summary>
		/// The 'from' name on the campaign (not an email address).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// Automatically inline the CSS included with the campaign content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inline_css")]
		public System.Nullable<System.Boolean> Inline_css { get; set; }
		
		/// <summary>
		/// The preview text for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preview_text")]
		public string Preview_text { get; set; }
		
		/// <summary>
		/// The reply-to email address for the campaign.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public string Reply_to { get; set; }
		
		/// <summary>
		/// The subject line for the campaign.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public string Subject_line { get; set; }
		
		/// <summary>
		/// The id of the template to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public System.Nullable<System.Int32> Template_id { get; set; }
		
		/// <summary>
		/// The title of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to_name")]
		public string To_name { get; set; }
		
		/// <summary>
		/// Use Mailchimp Conversation feature to manage out-of-office replies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_conversation")]
		public System.Nullable<System.Boolean> Use_conversation { get; set; }
	}
	
	public class PatchCampaignsIdPatchBodySocial_card
	{
		
		/// <summary>
		/// A short summary of the campaign to display.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The url for the header image for the card.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The title for the card. Typically the subject line of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class PatchCampaignsIdPatchBodyTracking
	{
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capsule")]
		public PatchCampaignsIdPatchBodyTrackingCapsule Capsule { get; set; }
		
		/// <summary>
		/// The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicktale")]
		public string Clicktale { get; set; }
		
		/// <summary>
		/// Whether to enable e-commerce tracking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecomm360")]
		public System.Nullable<System.Boolean> Ecomm360 { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal_tracking")]
		public System.Nullable<System.Boolean> Goal_tracking { get; set; }
		
		/// <summary>
		/// The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics")]
		public string Google_analytics { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html_clicks")]
		public System.Nullable<System.Boolean> Html_clicks { get; set; }
		
		/// <summary>
		/// Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Boolean> Opens { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salesforce")]
		public PatchCampaignsIdPatchBodyTrackingSalesforce Salesforce { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text_clicks")]
		public System.Nullable<System.Boolean> Text_clicks { get; set; }
	}
	
	public class PatchCampaignsIdPatchBodyTrackingCapsule
	{
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class PatchCampaignsIdPatchBodyTrackingSalesforce
	{
		
		/// <summary>
		/// Create a campaign in a connected Salesforce account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class PatchCampaignsIdPatchBodyVariate_settings
	{
		
		/// <summary>
		/// The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_names")]
		public string[] From_names { get; set; }
		
		/// <summary>
		/// The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to_addresses")]
		public string[] Reply_to_addresses { get; set; }
		
		/// <summary>
		/// The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_times")]
		public string[] Send_times { get; set; }
		
		/// <summary>
		/// The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_lines")]
		public string[] Subject_lines { get; set; }
		
		/// <summary>
		/// The percentage of recipients to send the test combinations to, must be a value between 10 and 100.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="test_size")]
		public System.Nullable<System.Int32> Test_size { get; set; }
		
		/// <summary>
		/// The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
		
		/// <summary>
		/// The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="winner_criteria")]
		public GetCampaignsReturnCampaignsVariate_settingsWinner_criteria Winner_criteria { get; set; }
	}
	
	public class PatchCampaignsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchCampaignsIdReturn_links[] PatchCampaignsIdReturn_links { get; set; }
		
		/// <summary>
		/// [A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ab_split_opts")]
		public PatchCampaignsIdReturnAb_split_opts Ab_split_opts { get; set; }
		
		/// <summary>
		/// The link to the campaign's archive version in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archive_url")]
		public string Archive_url { get; set; }
		
		/// <summary>
		/// How the campaign's content is put together.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_type")]
		public GetCampaignsReturnCampaignsContent_type Content_type { get; set; }
		
		/// <summary>
		/// The date and time the campaign was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="create_time")]
		public System.Nullable<System.DateTimeOffset> Create_time { get; set; }
		
		/// <summary>
		/// Updates on campaigns in the process of sending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delivery_status")]
		public PatchCampaignsIdReturnDelivery_status Delivery_status { get; set; }
		
		/// <summary>
		/// The total number of emails sent for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The original link to the campaign's archive version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="long_archive_url")]
		public string Long_archive_url { get; set; }
		
		/// <summary>
		/// Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="needs_block_refresh")]
		public System.Nullable<System.Boolean> Needs_block_refresh { get; set; }
		
		/// <summary>
		/// If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_campaign_id")]
		public string Parent_campaign_id { get; set; }
		
		/// <summary>
		/// List settings for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public PatchCampaignsIdReturnRecipients Recipients { get; set; }
		
		/// <summary>
		/// For sent campaigns, a summary of opens, clicks, and e-commerce data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report_summary")]
		public PatchCampaignsIdReturnReport_summary Report_summary { get; set; }
		
		/// <summary>
		/// Determines if the campaign qualifies to be resent to non-openers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resendable")]
		public System.Nullable<System.Boolean> Resendable { get; set; }
		
		/// <summary>
		/// [RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rss_opts")]
		public PatchCampaignsIdReturnRss_opts Rss_opts { get; set; }
		
		/// <summary>
		/// The date and time a campaign was sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.DateTimeOffset> Send_time { get; set; }
		
		/// <summary>
		/// The settings for your campaign, including subject, from name, reply-to address, and more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public PatchCampaignsIdReturnSettings Settings { get; set; }
		
		/// <summary>
		/// The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="social_card")]
		public PatchCampaignsIdReturnSocial_card Social_card { get; set; }
		
		/// <summary>
		/// The current status of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetCampaignsReturnCampaignsStatus Status { get; set; }
		
		/// <summary>
		/// The tracking options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public PatchCampaignsIdReturnTracking Tracking { get; set; }
		
		/// <summary>
		/// There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetCampaignsType Type { get; set; }
		
		/// <summary>
		/// The settings specific to A/B test campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variate_settings")]
		public PatchCampaignsIdReturnVariate_settings Variate_settings { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class PatchCampaignsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchCampaignsIdReturnAb_split_opts
	{
		
		/// <summary>
		/// For campaigns split on 'From Name', the name for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name_a")]
		public string From_name_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the name for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name_b")]
		public string From_name_b { get; set; }
		
		/// <summary>
		/// How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pick_winner")]
		public GetCampaignsReturnCampaignsAb_split_optsPick_winner Pick_winner { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the reply-to address for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_email_a")]
		public string Reply_email_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the reply-to address for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_email_b")]
		public string Reply_email_b { get; set; }
		
		/// <summary>
		/// The send time for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_a")]
		public System.Nullable<System.DateTimeOffset> Send_time_a { get; set; }
		
		/// <summary>
		/// The send time for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_b")]
		public System.Nullable<System.DateTimeOffset> Send_time_b { get; set; }
		
		/// <summary>
		/// The send time for the winning version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_winner")]
		public string Send_time_winner { get; set; }
		
		/// <summary>
		/// The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50.
		/// Minimum: 1
		/// Maximum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="split_size")]
		[System.ComponentModel.DataAnnotations.Range(1, 50)]
		public System.Nullable<System.Int32> Split_size { get; set; }
		
		/// <summary>
		/// The type of AB split to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="split_test")]
		public GetCampaignsReturnCampaignsAb_split_optsSplit_test Split_test { get; set; }
		
		/// <summary>
		/// For campaigns split on 'Subject Line', the subject line for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_a")]
		public string Subject_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'Subject Line', the subject line for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_b")]
		public string Subject_b { get; set; }
		
		/// <summary>
		/// The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
		
		/// <summary>
		/// How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_units")]
		public GetCampaignsReturnCampaignsAb_split_optsWait_units Wait_units { get; set; }
	}
	
	public class PatchCampaignsIdReturnDelivery_status
	{
		
		/// <summary>
		/// Whether a campaign send can be canceled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="can_cancel")]
		public System.Nullable<System.Boolean> Can_cancel { get; set; }
		
		/// <summary>
		/// The total number of emails canceled for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_canceled")]
		public System.Nullable<System.Int32> Emails_canceled { get; set; }
		
		/// <summary>
		/// The total number of emails confirmed sent for this campaign so far.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// Whether Campaign Delivery Status is enabled for this account and campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The current state of a campaign delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetCampaignsReturnCampaignsDelivery_statusStatus Status { get; set; }
	}
	
	public class PatchCampaignsIdReturnRecipients
	{
		
		/// <summary>
		/// The unique list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// Count of the recipients on the associated list. Formatted as an integer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_count")]
		public System.Nullable<System.Int32> Recipient_count { get; set; }
		
		/// <summary>
		/// An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_opts")]
		public PatchCampaignsIdReturnRecipientsSegment_opts Segment_opts { get; set; }
		
		/// <summary>
		/// A description of the [segment](https://mailchimp.com/help/create-and-send-to-a-segment/) used for the campaign. Formatted as a string marked up with HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_text")]
		public string Segment_text { get; set; }
	}
	
	public class PatchCampaignsIdReturnRecipientsSegment_opts
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Segment match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
		
		/// <summary>
		/// The prebuilt segment id, if a prebuilt segment has been designated for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prebuilt_segment_id")]
		public string Prebuilt_segment_id { get; set; }
		
		/// <summary>
		/// The id for an existing saved segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saved_segment_id")]
		public System.Nullable<System.Int32> Saved_segment_id { get; set; }
	}
	
	public class PatchCampaignsIdReturnReport_summary
	{
		
		/// <summary>
		/// The number of unique clicks divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The total number of clicks for an campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// E-Commerce stats for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecommerce")]
		public PatchCampaignsIdReturnReport_summaryEcommerce Ecommerce { get; set; }
		
		/// <summary>
		/// The number of unique opens divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The total number of opens for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// The number of unique clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber_clicks")]
		public System.Nullable<System.Int32> Subscriber_clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class PatchCampaignsIdReturnReport_summaryEcommerce
	{
		
		/// <summary>
		/// The total orders for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_orders")]
		public System.Nullable<System.Int32> Total_orders { get; set; }
		
		/// <summary>
		/// The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
		
		/// <summary>
		/// The total spent for a campaign. Calculated as the sum of all order totals with no deductions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
	}
	
	public class PatchCampaignsIdReturnRss_opts
	{
		
		/// <summary>
		/// Whether to add CSS to images in the RSS feed to constrain their width in campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="constrain_rss_img")]
		public System.Nullable<System.Boolean> Constrain_rss_img { get; set; }
		
		/// <summary>
		/// The URL for the RSS feed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="feed_url")]
		public string Feed_url { get; set; }
		
		/// <summary>
		/// The frequency of the RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frequency")]
		public GetCampaignsReturnCampaignsRss_optsFrequency Frequency { get; set; }
		
		/// <summary>
		/// The date the campaign was last sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_sent")]
		public System.Nullable<System.DateTimeOffset> Last_sent { get; set; }
		
		/// <summary>
		/// The schedule for sending the RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedule")]
		public PatchCampaignsIdReturnRss_optsSchedule Schedule { get; set; }
	}
	
	public class PatchCampaignsIdReturnRss_optsSchedule
	{
		
		/// <summary>
		/// The days of the week to send a daily RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="daily_send")]
		public PatchCampaignsIdReturnRss_optsScheduleDaily_send Daily_send { get; set; }
		
		/// <summary>
		/// The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-defaults/).
		/// Minimum: 0
		/// Maximum: 23
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hour")]
		[System.ComponentModel.DataAnnotations.Range(0, 23)]
		public System.Nullable<System.Int32> Hour { get; set; }
		
		/// <summary>
		/// The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February.
		/// Minimum: 0
		/// Maximum: 31
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monthly_send_date")]
		[System.ComponentModel.DataAnnotations.Range(0, 31)]
		public System.Nullable<System.Double> Monthly_send_date { get; set; }
		
		/// <summary>
		/// The day of the week to send a weekly RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weekly_send_day")]
		public GetCampaignsReturnCampaignsRss_optsScheduleWeekly_send_day Weekly_send_day { get; set; }
	}
	
	public class PatchCampaignsIdReturnRss_optsScheduleDaily_send
	{
		
		/// <summary>
		/// Sends the daily RSS Campaign on Fridays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friday")]
		public System.Nullable<System.Boolean> Friday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Mondays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monday")]
		public System.Nullable<System.Boolean> Monday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Saturdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saturday")]
		public System.Nullable<System.Boolean> Saturday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Sundays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sunday")]
		public System.Nullable<System.Boolean> Sunday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Thursdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thursday")]
		public System.Nullable<System.Boolean> Thursday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Tuesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tuesday")]
		public System.Nullable<System.Boolean> Tuesday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Wednesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wednesday")]
		public System.Nullable<System.Boolean> Wednesday { get; set; }
	}
	
	public class PatchCampaignsIdReturnSettings
	{
		
		/// <summary>
		/// Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticate")]
		public System.Nullable<System.Boolean> Authenticate { get; set; }
		
		/// <summary>
		/// An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_fb_post")]
		public string[] Auto_fb_post { get; set; }
		
		/// <summary>
		/// Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_footer")]
		public System.Nullable<System.Boolean> Auto_footer { get; set; }
		
		/// <summary>
		/// Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_tweet")]
		public System.Nullable<System.Boolean> Auto_tweet { get; set; }
		
		/// <summary>
		/// Whether the campaign uses the drag-and-drop editor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drag_and_drop")]
		public System.Nullable<System.Boolean> Drag_and_drop { get; set; }
		
		/// <summary>
		/// Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fb_comments")]
		public System.Nullable<System.Boolean> Fb_comments { get; set; }
		
		/// <summary>
		/// If the campaign is listed in a folder, the id for that folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public string Folder_id { get; set; }
		
		/// <summary>
		/// The 'from' name on the campaign (not an email address).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// Automatically inline the CSS included with the campaign content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inline_css")]
		public System.Nullable<System.Boolean> Inline_css { get; set; }
		
		/// <summary>
		/// The preview text for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preview_text")]
		public string Preview_text { get; set; }
		
		/// <summary>
		/// The reply-to email address for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public string Reply_to { get; set; }
		
		/// <summary>
		/// The subject line for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public string Subject_line { get; set; }
		
		/// <summary>
		/// The id for the template used in this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public System.Nullable<System.Int32> Template_id { get; set; }
		
		/// <summary>
		/// Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timewarp")]
		public System.Nullable<System.Boolean> Timewarp { get; set; }
		
		/// <summary>
		/// The title of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to_name")]
		public string To_name { get; set; }
		
		/// <summary>
		/// Use Mailchimp Conversation feature to manage out-of-office replies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_conversation")]
		public System.Nullable<System.Boolean> Use_conversation { get; set; }
	}
	
	public class PatchCampaignsIdReturnSocial_card
	{
		
		/// <summary>
		/// A short summary of the campaign to display.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The url for the header image for the card.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The title for the card. Typically the subject line of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class PatchCampaignsIdReturnTracking
	{
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capsule")]
		public PatchCampaignsIdReturnTrackingCapsule Capsule { get; set; }
		
		/// <summary>
		/// The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicktale")]
		public string Clicktale { get; set; }
		
		/// <summary>
		/// Whether to enable e-commerce tracking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecomm360")]
		public System.Nullable<System.Boolean> Ecomm360 { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal_tracking")]
		public System.Nullable<System.Boolean> Goal_tracking { get; set; }
		
		/// <summary>
		/// The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics")]
		public string Google_analytics { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html_clicks")]
		public System.Nullable<System.Boolean> Html_clicks { get; set; }
		
		/// <summary>
		/// Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Boolean> Opens { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salesforce")]
		public PatchCampaignsIdReturnTrackingSalesforce Salesforce { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text_clicks")]
		public System.Nullable<System.Boolean> Text_clicks { get; set; }
	}
	
	public class PatchCampaignsIdReturnTrackingCapsule
	{
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class PatchCampaignsIdReturnTrackingSalesforce
	{
		
		/// <summary>
		/// Create a campaign in a connected Salesforce account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class PatchCampaignsIdReturnVariate_settings
	{
		
		/// <summary>
		/// Combinations of possible variables used to build emails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="combinations")]
		public PatchCampaignsIdReturnVariate_settingsCombinations[] PatchCampaignsIdReturnVariate_settingsCombinations { get; set; }
		
		/// <summary>
		/// Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public string[] Contents { get; set; }
		
		/// <summary>
		/// The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_names")]
		public string[] From_names { get; set; }
		
		/// <summary>
		/// The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to_addresses")]
		public string[] Reply_to_addresses { get; set; }
		
		/// <summary>
		/// The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_times")]
		public string[] Send_times { get; set; }
		
		/// <summary>
		/// The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_lines")]
		public string[] Subject_lines { get; set; }
		
		/// <summary>
		/// The percentage of recipients to send the test combinations to, must be a value between 10 and 100.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="test_size")]
		public System.Nullable<System.Int32> Test_size { get; set; }
		
		/// <summary>
		/// The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
		
		/// <summary>
		/// The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winner_criteria")]
		public GetCampaignsReturnCampaignsVariate_settingsWinner_criteria Winner_criteria { get; set; }
		
		/// <summary>
		/// ID of the campaign that was sent to the remaining recipients based on the winning combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winning_campaign_id")]
		public string Winning_campaign_id { get; set; }
		
		/// <summary>
		/// ID for the winning combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winning_combination_id")]
		public string Winning_combination_id { get; set; }
	}
	
	public class PatchCampaignsIdReturnVariate_settingsCombinations
	{
		
		/// <summary>
		/// The index of `variate_settings.contents` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_description")]
		public System.Nullable<System.Int32> Content_description { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.from_names` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public System.Nullable<System.Int32> From_name { get; set; }
		
		/// <summary>
		/// Unique ID for the combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The number of recipients for this combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public System.Nullable<System.Int32> Recipients { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.reply_to_addresses` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public System.Nullable<System.Int32> Reply_to { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.send_times` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.Int32> Send_time { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.subject_lines` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public System.Nullable<System.Int32> Subject_line { get; set; }
	}
	
	public class PostCampaignsIdActionsCreateResendReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostCampaignsIdActionsCreateResendReturn_links[] PostCampaignsIdActionsCreateResendReturn_links { get; set; }
		
		/// <summary>
		/// [A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ab_split_opts")]
		public PostCampaignsIdActionsCreateResendReturnAb_split_opts Ab_split_opts { get; set; }
		
		/// <summary>
		/// The link to the campaign's archive version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archive_url")]
		public string Archive_url { get; set; }
		
		/// <summary>
		/// How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_type")]
		public string Content_type { get; set; }
		
		/// <summary>
		/// The date and time the campaign was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="create_time")]
		public System.Nullable<System.DateTimeOffset> Create_time { get; set; }
		
		/// <summary>
		/// Updates on campaigns in the process of sending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delivery_status")]
		public PostCampaignsIdActionsCreateResendReturnDelivery_status Delivery_status { get; set; }
		
		/// <summary>
		/// The total number of emails sent for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The original link to the campaign's archive version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="long_archive_url")]
		public string Long_archive_url { get; set; }
		
		/// <summary>
		/// Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="needs_block_refresh")]
		public System.Nullable<System.Boolean> Needs_block_refresh { get; set; }
		
		/// <summary>
		/// If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_campaign_id")]
		public string Parent_campaign_id { get; set; }
		
		/// <summary>
		/// List settings for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public PostCampaignsIdActionsCreateResendReturnRecipients Recipients { get; set; }
		
		/// <summary>
		/// For sent campaigns, a summary of opens and clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report_summary")]
		public PostCampaignsIdActionsCreateResendReturnReport_summary Report_summary { get; set; }
		
		/// <summary>
		/// Determines if the campaign qualifies to be resent to non-openers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resendable")]
		public System.Nullable<System.Boolean> Resendable { get; set; }
		
		/// <summary>
		/// [RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rss_opts")]
		public PostCampaignsIdActionsCreateResendReturnRss_opts Rss_opts { get; set; }
		
		/// <summary>
		/// The date and time a campaign was sent in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.DateTimeOffset> Send_time { get; set; }
		
		/// <summary>
		/// The settings for your campaign, including subject, from name, reply-to address, and more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public PostCampaignsIdActionsCreateResendReturnSettings Settings { get; set; }
		
		/// <summary>
		/// The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="social_card")]
		public PostCampaignsIdActionsCreateResendReturnSocial_card Social_card { get; set; }
		
		/// <summary>
		/// The current status of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetCampaignsReturnCampaignsStatus Status { get; set; }
		
		/// <summary>
		/// The tracking options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public PostCampaignsIdActionsCreateResendReturnTracking Tracking { get; set; }
		
		/// <summary>
		/// There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetCampaignsType Type { get; set; }
		
		/// <summary>
		/// The settings specific to A/B test campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variate_settings")]
		public PostCampaignsIdActionsCreateResendReturnVariate_settings Variate_settings { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class PostCampaignsIdActionsCreateResendReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostCampaignsIdActionsCreateResendReturnAb_split_opts
	{
		
		/// <summary>
		/// For campaigns split on 'From Name', the name for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name_a")]
		public string From_name_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the name for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name_b")]
		public string From_name_b { get; set; }
		
		/// <summary>
		/// How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pick_winner")]
		public GetCampaignsReturnCampaignsAb_split_optsPick_winner Pick_winner { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the reply-to address for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_email_a")]
		public string Reply_email_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the reply-to address for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_email_b")]
		public string Reply_email_b { get; set; }
		
		/// <summary>
		/// The send time for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_a")]
		public System.Nullable<System.DateTimeOffset> Send_time_a { get; set; }
		
		/// <summary>
		/// The send time for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_b")]
		public System.Nullable<System.DateTimeOffset> Send_time_b { get; set; }
		
		/// <summary>
		/// The send time for the winning version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_winner")]
		public string Send_time_winner { get; set; }
		
		/// <summary>
		/// The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50.
		/// Minimum: 1
		/// Maximum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="split_size")]
		[System.ComponentModel.DataAnnotations.Range(1, 50)]
		public System.Nullable<System.Int32> Split_size { get; set; }
		
		/// <summary>
		/// The type of AB split to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="split_test")]
		public GetCampaignsReturnCampaignsAb_split_optsSplit_test Split_test { get; set; }
		
		/// <summary>
		/// For campaigns split on 'Subject Line', the subject line for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_a")]
		public string Subject_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'Subject Line', the subject line for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_b")]
		public string Subject_b { get; set; }
		
		/// <summary>
		/// The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
		
		/// <summary>
		/// How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_units")]
		public GetCampaignsReturnCampaignsAb_split_optsWait_units Wait_units { get; set; }
	}
	
	public class PostCampaignsIdActionsCreateResendReturnDelivery_status
	{
		
		/// <summary>
		/// Whether a campaign send can be canceled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="can_cancel")]
		public System.Nullable<System.Boolean> Can_cancel { get; set; }
		
		/// <summary>
		/// The total number of emails canceled for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_canceled")]
		public System.Nullable<System.Int32> Emails_canceled { get; set; }
		
		/// <summary>
		/// The total number of emails confirmed sent for this campaign so far.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// Whether Campaign Delivery Status is enabled for this account and campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The current state of a campaign delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetCampaignsReturnCampaignsDelivery_statusStatus Status { get; set; }
	}
	
	public class PostCampaignsIdActionsCreateResendReturnRecipients
	{
		
		/// <summary>
		/// The unique list id.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// Count of the recipients on the associated list. Formatted as an integer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_count")]
		public System.Nullable<System.Int32> Recipient_count { get; set; }
		
		/// <summary>
		/// An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_opts")]
		public PostCampaignsIdActionsCreateResendReturnRecipientsSegment_opts Segment_opts { get; set; }
		
		/// <summary>
		/// A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/) used for the campaign. Formatted as a string marked up with HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_text")]
		public string Segment_text { get; set; }
	}
	
	public class PostCampaignsIdActionsCreateResendReturnRecipientsSegment_opts
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Segment match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
		
		/// <summary>
		/// The prebuilt segment id, if a prebuilt segment has been designated for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prebuilt_segment_id")]
		public string Prebuilt_segment_id { get; set; }
		
		/// <summary>
		/// The id for an existing saved segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saved_segment_id")]
		public System.Nullable<System.Int32> Saved_segment_id { get; set; }
	}
	
	public class PostCampaignsIdActionsCreateResendReturnReport_summary
	{
		
		/// <summary>
		/// The number of unique clicks divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The total number of clicks for an campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// E-Commerce stats for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecommerce")]
		public PostCampaignsIdActionsCreateResendReturnReport_summaryEcommerce Ecommerce { get; set; }
		
		/// <summary>
		/// The number of unique opens divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The total number of opens for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// The number of unique clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber_clicks")]
		public System.Nullable<System.Int32> Subscriber_clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class PostCampaignsIdActionsCreateResendReturnReport_summaryEcommerce
	{
		
		/// <summary>
		/// The total orders for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_orders")]
		public System.Nullable<System.Int32> Total_orders { get; set; }
		
		/// <summary>
		/// The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
		
		/// <summary>
		/// The total spent for a campaign. Calculated as the sum of all order totals with no deductions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
	}
	
	public class PostCampaignsIdActionsCreateResendReturnRss_opts
	{
		
		/// <summary>
		/// Whether to add CSS to images in the RSS feed to constrain their width in campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="constrain_rss_img")]
		public System.Nullable<System.Boolean> Constrain_rss_img { get; set; }
		
		/// <summary>
		/// The URL for the RSS feed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="feed_url")]
		public string Feed_url { get; set; }
		
		/// <summary>
		/// The frequency of the RSS Campaign.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="frequency")]
		public GetCampaignsReturnCampaignsRss_optsFrequency Frequency { get; set; }
		
		/// <summary>
		/// The date the campaign was last sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_sent")]
		public System.Nullable<System.DateTimeOffset> Last_sent { get; set; }
		
		/// <summary>
		/// The schedule for sending the RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedule")]
		public PostCampaignsIdActionsCreateResendReturnRss_optsSchedule Schedule { get; set; }
	}
	
	public class PostCampaignsIdActionsCreateResendReturnRss_optsSchedule
	{
		
		/// <summary>
		/// The days of the week to send a daily RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="daily_send")]
		public PostCampaignsIdActionsCreateResendReturnRss_optsScheduleDaily_send Daily_send { get; set; }
		
		/// <summary>
		/// The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-details/).
		/// Minimum: 0
		/// Maximum: 23
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hour")]
		[System.ComponentModel.DataAnnotations.Range(0, 23)]
		public System.Nullable<System.Int32> Hour { get; set; }
		
		/// <summary>
		/// The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February.
		/// Minimum: 0
		/// Maximum: 31
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monthly_send_date")]
		[System.ComponentModel.DataAnnotations.Range(0, 31)]
		public System.Nullable<System.Double> Monthly_send_date { get; set; }
		
		/// <summary>
		/// The day of the week to send a weekly RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weekly_send_day")]
		public GetCampaignsReturnCampaignsRss_optsScheduleWeekly_send_day Weekly_send_day { get; set; }
	}
	
	public class PostCampaignsIdActionsCreateResendReturnRss_optsScheduleDaily_send
	{
		
		/// <summary>
		/// Sends the daily RSS Campaign on Fridays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friday")]
		public System.Nullable<System.Boolean> Friday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Mondays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monday")]
		public System.Nullable<System.Boolean> Monday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Saturdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saturday")]
		public System.Nullable<System.Boolean> Saturday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Sundays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sunday")]
		public System.Nullable<System.Boolean> Sunday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Thursdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thursday")]
		public System.Nullable<System.Boolean> Thursday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Tuesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tuesday")]
		public System.Nullable<System.Boolean> Tuesday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Wednesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wednesday")]
		public System.Nullable<System.Boolean> Wednesday { get; set; }
	}
	
	public class PostCampaignsIdActionsCreateResendReturnSettings
	{
		
		/// <summary>
		/// Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticate")]
		public System.Nullable<System.Boolean> Authenticate { get; set; }
		
		/// <summary>
		/// An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_fb_post")]
		public string[] Auto_fb_post { get; set; }
		
		/// <summary>
		/// Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_footer")]
		public System.Nullable<System.Boolean> Auto_footer { get; set; }
		
		/// <summary>
		/// Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_tweet")]
		public System.Nullable<System.Boolean> Auto_tweet { get; set; }
		
		/// <summary>
		/// Whether the campaign uses the drag-and-drop editor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drag_and_drop")]
		public System.Nullable<System.Boolean> Drag_and_drop { get; set; }
		
		/// <summary>
		/// Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fb_comments")]
		public System.Nullable<System.Boolean> Fb_comments { get; set; }
		
		/// <summary>
		/// If the campaign is listed in a folder, the id for that folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public string Folder_id { get; set; }
		
		/// <summary>
		/// The 'from' name on the campaign (not an email address).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// Automatically inline the CSS included with the campaign content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inline_css")]
		public System.Nullable<System.Boolean> Inline_css { get; set; }
		
		/// <summary>
		/// The preview text for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preview_text")]
		public string Preview_text { get; set; }
		
		/// <summary>
		/// The reply-to email address for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public string Reply_to { get; set; }
		
		/// <summary>
		/// The subject line for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public string Subject_line { get; set; }
		
		/// <summary>
		/// The id for the template used in this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public System.Nullable<System.Int32> Template_id { get; set; }
		
		/// <summary>
		/// Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timewarp")]
		public System.Nullable<System.Boolean> Timewarp { get; set; }
		
		/// <summary>
		/// The title of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to_name")]
		public string To_name { get; set; }
		
		/// <summary>
		/// Use Mailchimp Conversation feature to manage replies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_conversation")]
		public System.Nullable<System.Boolean> Use_conversation { get; set; }
	}
	
	public class PostCampaignsIdActionsCreateResendReturnSocial_card
	{
		
		/// <summary>
		/// A short summary of the campaign to display.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The url for the header image for the card.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The title for the card. Typically the subject line of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class PostCampaignsIdActionsCreateResendReturnTracking
	{
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capsule")]
		public PostCampaignsIdActionsCreateResendReturnTrackingCapsule Capsule { get; set; }
		
		/// <summary>
		/// The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicktale")]
		public string Clicktale { get; set; }
		
		/// <summary>
		/// Whether to enable e-commerce tracking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecomm360")]
		public System.Nullable<System.Boolean> Ecomm360 { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal_tracking")]
		public System.Nullable<System.Boolean> Goal_tracking { get; set; }
		
		/// <summary>
		/// The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics")]
		public string Google_analytics { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html_clicks")]
		public System.Nullable<System.Boolean> Html_clicks { get; set; }
		
		/// <summary>
		/// Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Boolean> Opens { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salesforce")]
		public PostCampaignsIdActionsCreateResendReturnTrackingSalesforce Salesforce { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text_clicks")]
		public System.Nullable<System.Boolean> Text_clicks { get; set; }
	}
	
	public class PostCampaignsIdActionsCreateResendReturnTrackingCapsule
	{
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class PostCampaignsIdActionsCreateResendReturnTrackingSalesforce
	{
		
		/// <summary>
		/// Create a campaign in a connected Salesforce account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class PostCampaignsIdActionsCreateResendReturnVariate_settings
	{
		
		/// <summary>
		/// Combinations of possible variables used to build emails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="combinations")]
		public PostCampaignsIdActionsCreateResendReturnVariate_settingsCombinations[] PostCampaignsIdActionsCreateResendReturnVariate_settingsCombinations { get; set; }
		
		/// <summary>
		/// Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public string[] Contents { get; set; }
		
		/// <summary>
		/// The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_names")]
		public string[] From_names { get; set; }
		
		/// <summary>
		/// The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to_addresses")]
		public string[] Reply_to_addresses { get; set; }
		
		/// <summary>
		/// The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_times")]
		public string[] Send_times { get; set; }
		
		/// <summary>
		/// The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_lines")]
		public string[] Subject_lines { get; set; }
		
		/// <summary>
		/// The percentage of recipients to send the test combinations to, must be a value between 10 and 100.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="test_size")]
		public System.Nullable<System.Int32> Test_size { get; set; }
		
		/// <summary>
		/// The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
		
		/// <summary>
		/// The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="winner_criteria")]
		public GetCampaignsReturnCampaignsVariate_settingsWinner_criteria Winner_criteria { get; set; }
		
		/// <summary>
		/// ID of the campaign that was sent to the remaining recipients based on the winning combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winning_campaign_id")]
		public string Winning_campaign_id { get; set; }
		
		/// <summary>
		/// ID for the winning combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winning_combination_id")]
		public string Winning_combination_id { get; set; }
	}
	
	public class PostCampaignsIdActionsCreateResendReturnVariate_settingsCombinations
	{
		
		/// <summary>
		/// The index of `variate_settings.contents` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_description")]
		public System.Nullable<System.Int32> Content_description { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.from_names` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public System.Nullable<System.Int32> From_name { get; set; }
		
		/// <summary>
		/// Unique ID for the combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The number of recipients for this combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public System.Nullable<System.Int32> Recipients { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.reply_to_addresses` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public System.Nullable<System.Int32> Reply_to { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.send_times` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.Int32> Send_time { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.subject_lines` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public System.Nullable<System.Int32> Subject_line { get; set; }
	}
	
	public class PostCampaignsIdActionsReplicateReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostCampaignsIdActionsReplicateReturn_links[] PostCampaignsIdActionsReplicateReturn_links { get; set; }
		
		/// <summary>
		/// [A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ab_split_opts")]
		public PostCampaignsIdActionsReplicateReturnAb_split_opts Ab_split_opts { get; set; }
		
		/// <summary>
		/// The link to the campaign's archive version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archive_url")]
		public string Archive_url { get; set; }
		
		/// <summary>
		/// How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_type")]
		public string Content_type { get; set; }
		
		/// <summary>
		/// The date and time the campaign was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="create_time")]
		public System.Nullable<System.DateTimeOffset> Create_time { get; set; }
		
		/// <summary>
		/// Updates on campaigns in the process of sending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delivery_status")]
		public PostCampaignsIdActionsReplicateReturnDelivery_status Delivery_status { get; set; }
		
		/// <summary>
		/// The total number of emails sent for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The original link to the campaign's archive version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="long_archive_url")]
		public string Long_archive_url { get; set; }
		
		/// <summary>
		/// Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="needs_block_refresh")]
		public System.Nullable<System.Boolean> Needs_block_refresh { get; set; }
		
		/// <summary>
		/// If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_campaign_id")]
		public string Parent_campaign_id { get; set; }
		
		/// <summary>
		/// List settings for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public PostCampaignsIdActionsReplicateReturnRecipients Recipients { get; set; }
		
		/// <summary>
		/// For sent campaigns, a summary of opens and clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report_summary")]
		public PostCampaignsIdActionsReplicateReturnReport_summary Report_summary { get; set; }
		
		/// <summary>
		/// Determines if the campaign qualifies to be resent to non-openers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resendable")]
		public System.Nullable<System.Boolean> Resendable { get; set; }
		
		/// <summary>
		/// [RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rss_opts")]
		public PostCampaignsIdActionsReplicateReturnRss_opts Rss_opts { get; set; }
		
		/// <summary>
		/// The date and time a campaign was sent in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.DateTimeOffset> Send_time { get; set; }
		
		/// <summary>
		/// The settings for your campaign, including subject, from name, reply-to address, and more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public PostCampaignsIdActionsReplicateReturnSettings Settings { get; set; }
		
		/// <summary>
		/// The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="social_card")]
		public PostCampaignsIdActionsReplicateReturnSocial_card Social_card { get; set; }
		
		/// <summary>
		/// The current status of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetCampaignsReturnCampaignsStatus Status { get; set; }
		
		/// <summary>
		/// The tracking options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public PostCampaignsIdActionsReplicateReturnTracking Tracking { get; set; }
		
		/// <summary>
		/// There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetCampaignsType Type { get; set; }
		
		/// <summary>
		/// The settings specific to A/B test campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variate_settings")]
		public PostCampaignsIdActionsReplicateReturnVariate_settings Variate_settings { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class PostCampaignsIdActionsReplicateReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostCampaignsIdActionsReplicateReturnAb_split_opts
	{
		
		/// <summary>
		/// For campaigns split on 'From Name', the name for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name_a")]
		public string From_name_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the name for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name_b")]
		public string From_name_b { get; set; }
		
		/// <summary>
		/// How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pick_winner")]
		public GetCampaignsReturnCampaignsAb_split_optsPick_winner Pick_winner { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the reply-to address for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_email_a")]
		public string Reply_email_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the reply-to address for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_email_b")]
		public string Reply_email_b { get; set; }
		
		/// <summary>
		/// The send time for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_a")]
		public System.Nullable<System.DateTimeOffset> Send_time_a { get; set; }
		
		/// <summary>
		/// The send time for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_b")]
		public System.Nullable<System.DateTimeOffset> Send_time_b { get; set; }
		
		/// <summary>
		/// The send time for the winning version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_winner")]
		public string Send_time_winner { get; set; }
		
		/// <summary>
		/// The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50.
		/// Minimum: 1
		/// Maximum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="split_size")]
		[System.ComponentModel.DataAnnotations.Range(1, 50)]
		public System.Nullable<System.Int32> Split_size { get; set; }
		
		/// <summary>
		/// The type of AB split to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="split_test")]
		public GetCampaignsReturnCampaignsAb_split_optsSplit_test Split_test { get; set; }
		
		/// <summary>
		/// For campaigns split on 'Subject Line', the subject line for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_a")]
		public string Subject_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'Subject Line', the subject line for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_b")]
		public string Subject_b { get; set; }
		
		/// <summary>
		/// The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
		
		/// <summary>
		/// How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_units")]
		public GetCampaignsReturnCampaignsAb_split_optsWait_units Wait_units { get; set; }
	}
	
	public class PostCampaignsIdActionsReplicateReturnDelivery_status
	{
		
		/// <summary>
		/// Whether a campaign send can be canceled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="can_cancel")]
		public System.Nullable<System.Boolean> Can_cancel { get; set; }
		
		/// <summary>
		/// The total number of emails canceled for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_canceled")]
		public System.Nullable<System.Int32> Emails_canceled { get; set; }
		
		/// <summary>
		/// The total number of emails confirmed sent for this campaign so far.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// Whether Campaign Delivery Status is enabled for this account and campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The current state of a campaign delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetCampaignsReturnCampaignsDelivery_statusStatus Status { get; set; }
	}
	
	public class PostCampaignsIdActionsReplicateReturnRecipients
	{
		
		/// <summary>
		/// The unique list id.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// Count of the recipients on the associated list. Formatted as an integer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_count")]
		public System.Nullable<System.Int32> Recipient_count { get; set; }
		
		/// <summary>
		/// An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_opts")]
		public PostCampaignsIdActionsReplicateReturnRecipientsSegment_opts Segment_opts { get; set; }
		
		/// <summary>
		/// A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/) used for the campaign. Formatted as a string marked up with HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_text")]
		public string Segment_text { get; set; }
	}
	
	public class PostCampaignsIdActionsReplicateReturnRecipientsSegment_opts
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Segment match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
		
		/// <summary>
		/// The prebuilt segment id, if a prebuilt segment has been designated for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prebuilt_segment_id")]
		public string Prebuilt_segment_id { get; set; }
		
		/// <summary>
		/// The id for an existing saved segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saved_segment_id")]
		public System.Nullable<System.Int32> Saved_segment_id { get; set; }
	}
	
	public class PostCampaignsIdActionsReplicateReturnReport_summary
	{
		
		/// <summary>
		/// The number of unique clicks divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The total number of clicks for an campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// E-Commerce stats for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecommerce")]
		public PostCampaignsIdActionsReplicateReturnReport_summaryEcommerce Ecommerce { get; set; }
		
		/// <summary>
		/// The number of unique opens divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The total number of opens for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// The number of unique clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber_clicks")]
		public System.Nullable<System.Int32> Subscriber_clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class PostCampaignsIdActionsReplicateReturnReport_summaryEcommerce
	{
		
		/// <summary>
		/// The total orders for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_orders")]
		public System.Nullable<System.Int32> Total_orders { get; set; }
		
		/// <summary>
		/// The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
		
		/// <summary>
		/// The total spent for a campaign. Calculated as the sum of all order totals with no deductions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
	}
	
	public class PostCampaignsIdActionsReplicateReturnRss_opts
	{
		
		/// <summary>
		/// Whether to add CSS to images in the RSS feed to constrain their width in campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="constrain_rss_img")]
		public System.Nullable<System.Boolean> Constrain_rss_img { get; set; }
		
		/// <summary>
		/// The URL for the RSS feed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="feed_url")]
		public string Feed_url { get; set; }
		
		/// <summary>
		/// The frequency of the RSS Campaign.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="frequency")]
		public GetCampaignsReturnCampaignsRss_optsFrequency Frequency { get; set; }
		
		/// <summary>
		/// The date the campaign was last sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_sent")]
		public System.Nullable<System.DateTimeOffset> Last_sent { get; set; }
		
		/// <summary>
		/// The schedule for sending the RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedule")]
		public PostCampaignsIdActionsReplicateReturnRss_optsSchedule Schedule { get; set; }
	}
	
	public class PostCampaignsIdActionsReplicateReturnRss_optsSchedule
	{
		
		/// <summary>
		/// The days of the week to send a daily RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="daily_send")]
		public PostCampaignsIdActionsReplicateReturnRss_optsScheduleDaily_send Daily_send { get; set; }
		
		/// <summary>
		/// The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-details/).
		/// Minimum: 0
		/// Maximum: 23
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hour")]
		[System.ComponentModel.DataAnnotations.Range(0, 23)]
		public System.Nullable<System.Int32> Hour { get; set; }
		
		/// <summary>
		/// The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February.
		/// Minimum: 0
		/// Maximum: 31
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monthly_send_date")]
		[System.ComponentModel.DataAnnotations.Range(0, 31)]
		public System.Nullable<System.Double> Monthly_send_date { get; set; }
		
		/// <summary>
		/// The day of the week to send a weekly RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weekly_send_day")]
		public GetCampaignsReturnCampaignsRss_optsScheduleWeekly_send_day Weekly_send_day { get; set; }
	}
	
	public class PostCampaignsIdActionsReplicateReturnRss_optsScheduleDaily_send
	{
		
		/// <summary>
		/// Sends the daily RSS Campaign on Fridays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friday")]
		public System.Nullable<System.Boolean> Friday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Mondays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monday")]
		public System.Nullable<System.Boolean> Monday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Saturdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saturday")]
		public System.Nullable<System.Boolean> Saturday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Sundays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sunday")]
		public System.Nullable<System.Boolean> Sunday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Thursdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thursday")]
		public System.Nullable<System.Boolean> Thursday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Tuesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tuesday")]
		public System.Nullable<System.Boolean> Tuesday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Wednesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wednesday")]
		public System.Nullable<System.Boolean> Wednesday { get; set; }
	}
	
	public class PostCampaignsIdActionsReplicateReturnSettings
	{
		
		/// <summary>
		/// Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticate")]
		public System.Nullable<System.Boolean> Authenticate { get; set; }
		
		/// <summary>
		/// An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_fb_post")]
		public string[] Auto_fb_post { get; set; }
		
		/// <summary>
		/// Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_footer")]
		public System.Nullable<System.Boolean> Auto_footer { get; set; }
		
		/// <summary>
		/// Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_tweet")]
		public System.Nullable<System.Boolean> Auto_tweet { get; set; }
		
		/// <summary>
		/// Whether the campaign uses the drag-and-drop editor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drag_and_drop")]
		public System.Nullable<System.Boolean> Drag_and_drop { get; set; }
		
		/// <summary>
		/// Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fb_comments")]
		public System.Nullable<System.Boolean> Fb_comments { get; set; }
		
		/// <summary>
		/// If the campaign is listed in a folder, the id for that folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public string Folder_id { get; set; }
		
		/// <summary>
		/// The 'from' name on the campaign (not an email address).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// Automatically inline the CSS included with the campaign content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inline_css")]
		public System.Nullable<System.Boolean> Inline_css { get; set; }
		
		/// <summary>
		/// The preview text for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preview_text")]
		public string Preview_text { get; set; }
		
		/// <summary>
		/// The reply-to email address for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public string Reply_to { get; set; }
		
		/// <summary>
		/// The subject line for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public string Subject_line { get; set; }
		
		/// <summary>
		/// The id for the template used in this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public System.Nullable<System.Int32> Template_id { get; set; }
		
		/// <summary>
		/// Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timewarp")]
		public System.Nullable<System.Boolean> Timewarp { get; set; }
		
		/// <summary>
		/// The title of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to_name")]
		public string To_name { get; set; }
		
		/// <summary>
		/// Use Mailchimp Conversation feature to manage replies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_conversation")]
		public System.Nullable<System.Boolean> Use_conversation { get; set; }
	}
	
	public class PostCampaignsIdActionsReplicateReturnSocial_card
	{
		
		/// <summary>
		/// A short summary of the campaign to display.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The url for the header image for the card.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The title for the card. Typically the subject line of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class PostCampaignsIdActionsReplicateReturnTracking
	{
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capsule")]
		public PostCampaignsIdActionsReplicateReturnTrackingCapsule Capsule { get; set; }
		
		/// <summary>
		/// The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicktale")]
		public string Clicktale { get; set; }
		
		/// <summary>
		/// Whether to enable e-commerce tracking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecomm360")]
		public System.Nullable<System.Boolean> Ecomm360 { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal_tracking")]
		public System.Nullable<System.Boolean> Goal_tracking { get; set; }
		
		/// <summary>
		/// The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics")]
		public string Google_analytics { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html_clicks")]
		public System.Nullable<System.Boolean> Html_clicks { get; set; }
		
		/// <summary>
		/// Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Boolean> Opens { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salesforce")]
		public PostCampaignsIdActionsReplicateReturnTrackingSalesforce Salesforce { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text_clicks")]
		public System.Nullable<System.Boolean> Text_clicks { get; set; }
	}
	
	public class PostCampaignsIdActionsReplicateReturnTrackingCapsule
	{
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class PostCampaignsIdActionsReplicateReturnTrackingSalesforce
	{
		
		/// <summary>
		/// Create a campaign in a connected Salesforce account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class PostCampaignsIdActionsReplicateReturnVariate_settings
	{
		
		/// <summary>
		/// Combinations of possible variables used to build emails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="combinations")]
		public PostCampaignsIdActionsReplicateReturnVariate_settingsCombinations[] PostCampaignsIdActionsReplicateReturnVariate_settingsCombinations { get; set; }
		
		/// <summary>
		/// Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public string[] Contents { get; set; }
		
		/// <summary>
		/// The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_names")]
		public string[] From_names { get; set; }
		
		/// <summary>
		/// The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to_addresses")]
		public string[] Reply_to_addresses { get; set; }
		
		/// <summary>
		/// The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_times")]
		public string[] Send_times { get; set; }
		
		/// <summary>
		/// The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_lines")]
		public string[] Subject_lines { get; set; }
		
		/// <summary>
		/// The percentage of recipients to send the test combinations to, must be a value between 10 and 100.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="test_size")]
		public System.Nullable<System.Int32> Test_size { get; set; }
		
		/// <summary>
		/// The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
		
		/// <summary>
		/// The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="winner_criteria")]
		public GetCampaignsReturnCampaignsVariate_settingsWinner_criteria Winner_criteria { get; set; }
		
		/// <summary>
		/// ID of the campaign that was sent to the remaining recipients based on the winning combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winning_campaign_id")]
		public string Winning_campaign_id { get; set; }
		
		/// <summary>
		/// ID for the winning combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winning_combination_id")]
		public string Winning_combination_id { get; set; }
	}
	
	public class PostCampaignsIdActionsReplicateReturnVariate_settingsCombinations
	{
		
		/// <summary>
		/// The index of `variate_settings.contents` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_description")]
		public System.Nullable<System.Int32> Content_description { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.from_names` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public System.Nullable<System.Int32> From_name { get; set; }
		
		/// <summary>
		/// Unique ID for the combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The number of recipients for this combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public System.Nullable<System.Int32> Recipients { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.reply_to_addresses` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public System.Nullable<System.Int32> Reply_to { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.send_times` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.Int32> Send_time { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.subject_lines` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public System.Nullable<System.Int32> Subject_line { get; set; }
	}
	
	public class PostCampaignsIdActionsSchedulePostBody
	{
		
		/// <summary>
		/// Choose whether the campaign should use [Batch Delivery](https://mailchimp.com/help/schedule-batch-delivery/). Cannot be set to `true` for campaigns using [Timewarp](https://mailchimp.com/help/use-timewarp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="batch_delivery")]
		public PostCampaignsIdActionsSchedulePostBodyBatch_delivery Batch_delivery { get; set; }
		
		/// <summary>
		/// The UTC date and time to schedule the campaign for delivery in ISO 8601 format. Campaigns may only be scheduled to send on the quarter-hour (:00, :15, :30, :45).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="schedule_time")]
		public System.DateTimeOffset Schedule_time { get; set; }
		
		/// <summary>
		/// Choose whether the campaign should use [Timewarp](https://mailchimp.com/help/use-timewarp/) when sending. Campaigns scheduled with Timewarp are localized based on the recipients' time zones. For example, a Timewarp campaign with a `schedule_time` of 13:00 will be sent to each recipient at 1:00pm in their local time. Cannot be set to `true` for campaigns using [Batch Delivery](https://mailchimp.com/help/schedule-batch-delivery/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timewarp")]
		public System.Nullable<System.Boolean> Timewarp { get; set; }
	}
	
	public class PostCampaignsIdActionsSchedulePostBodyBatch_delivery
	{
		
		/// <summary>
		/// The number of batches for the campaign send.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="batch_count")]
		public int Batch_count { get; set; }
		
		/// <summary>
		/// The delay, in minutes, between batches.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="batch_delay")]
		public int Batch_delay { get; set; }
	}
	
	public class PostCampaignsIdActionsTestPostBody
	{
		
		/// <summary>
		/// Choose the type of test email to send.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="send_type")]
		public PostCampaignsIdActionsTestPostBodySend_type Send_type { get; set; }
		
		/// <summary>
		/// An array of email addresses to send the test email to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="test_emails")]
		public string[] Test_emails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostCampaignsIdActionsTestPostBodySend_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		html = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		plaintext = 1,
	}
	
	public class GetCampaignsIdContentReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetCampaignsIdContentReturn_links[] GetCampaignsIdContentReturn_links { get; set; }
		
		/// <summary>
		/// The Archive HTML for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archive_html")]
		public string Archive_html { get; set; }
		
		/// <summary>
		/// The raw HTML for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html")]
		public string Html { get; set; }
		
		/// <summary>
		/// The plain-text portion of the campaign. If left unspecified, we'll generate this automatically.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="plain_text")]
		public string Plain_text { get; set; }
		
		/// <summary>
		/// Content options for multivariate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variate_contents")]
		public GetCampaignsIdContentReturnVariate_contents[] GetCampaignsIdContentReturnVariate_contents { get; set; }
	}
	
	public class GetCampaignsIdContentReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetCampaignsIdContentReturnVariate_contents
	{
		
		/// <summary>
		/// Label used to identify the content option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_label")]
		public string Content_label { get; set; }
		
		/// <summary>
		/// The raw HTML for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html")]
		public string Html { get; set; }
		
		/// <summary>
		/// The plain-text portion of the campaign. If left unspecified, we'll generate this automatically.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="plain_text")]
		public string Plain_text { get; set; }
	}
	
	public class PutCampaignsIdContentPutBody
	{
		
		/// <summary>
		/// Available when uploading an archive to create campaign content. The archive should include all campaign content and images. [Learn more](https://mailchimp.com/help/import-a-custom-html-template/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archive")]
		public PutCampaignsIdContentPutBodyArchive Archive { get; set; }
		
		/// <summary>
		/// The raw HTML for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html")]
		public string Html { get; set; }
		
		/// <summary>
		/// The plain-text portion of the campaign. If left unspecified, we'll generate this automatically.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="plain_text")]
		public string Plain_text { get; set; }
		
		/// <summary>
		/// Use this template to generate the HTML content of the campaign
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template")]
		public PutCampaignsIdContentPutBodyTemplate Template { get; set; }
		
		/// <summary>
		/// When importing a campaign, the URL where the HTML lives.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// Content options for [Multivariate Campaigns](https://mailchimp.com/help/about-multivariate-campaigns/). Each content option must provide HTML content and may optionally provide plain text. For campaigns not testing content, only one object should be provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variate_contents")]
		public PutCampaignsIdContentPutBodyVariate_contents[] PutCampaignsIdContentPutBodyVariate_contents { get; set; }
	}
	
	public class PutCampaignsIdContentPutBodyArchive
	{
		
		/// <summary>
		/// The base64-encoded representation of the archive file.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="archive_content")]
		public string Archive_content { get; set; }
		
		/// <summary>
		/// The type of encoded file. Defaults to zip.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archive_type")]
		public System.Nullable<PutCampaignsIdContentPutBodyArchiveArchive_type> Archive_type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PutCampaignsIdContentPutBodyArchiveArchive_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zip = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="tar.gz")]
		tar_gz = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="tar.bz2")]
		tar_bz2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tar = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tgz = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tbz = 5,
	}
	
	public class PutCampaignsIdContentPutBodyTemplate
	{
		
		/// <summary>
		/// The id of the template to use.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public int Id { get; set; }
		
		/// <summary>
		/// Content for the sections of the template. Each key should be the unique [mc:edit area](https://mailchimp.com/help/create-editable-content-areas-with-mailchimps-template-language/) name from the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sections")]
		public string Sections { get; set; }
	}
	
	public class PutCampaignsIdContentPutBodyVariate_contents
	{
		
		/// <summary>
		/// Available when uploading an archive to create campaign content. The archive should include all campaign content and images. [Learn more](https://mailchimp.com/help/import-a-custom-html-template/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archive")]
		public PutCampaignsIdContentPutBodyVariate_contentsArchive Archive { get; set; }
		
		/// <summary>
		/// The label used to identify the content option.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="content_label")]
		public string Content_label { get; set; }
		
		/// <summary>
		/// The raw HTML for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html")]
		public string Html { get; set; }
		
		/// <summary>
		/// The plain-text portion of the campaign. If left unspecified, we'll generate this automatically.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="plain_text")]
		public string Plain_text { get; set; }
		
		/// <summary>
		/// Use this template to generate the HTML content for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template")]
		public PutCampaignsIdContentPutBodyVariate_contentsTemplate Template { get; set; }
		
		/// <summary>
		/// When importing a campaign, the URL for the HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class PutCampaignsIdContentPutBodyVariate_contentsArchive
	{
		
		/// <summary>
		/// The base64-encoded representation of the archive file.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="archive_content")]
		public string Archive_content { get; set; }
		
		/// <summary>
		/// The type of encoded file. Defaults to zip.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archive_type")]
		public System.Nullable<PutCampaignsIdContentPutBodyVariate_contentsArchiveArchive_type> Archive_type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PutCampaignsIdContentPutBodyVariate_contentsArchiveArchive_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zip = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="tar.gz")]
		tar_gz = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="tar.bz2")]
		tar_bz2 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tar = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tgz = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tbz = 5,
	}
	
	public class PutCampaignsIdContentPutBodyVariate_contentsTemplate
	{
		
		/// <summary>
		/// The id of the template to use.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public int Id { get; set; }
		
		/// <summary>
		/// Content for the sections of the template. Each key should be the unique [mc:edit area](https://mailchimp.com/help/create-editable-content-areas-with-mailchimps-template-language/) name from the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sections")]
		public string Sections { get; set; }
	}
	
	public class PutCampaignsIdContentReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PutCampaignsIdContentReturn_links[] PutCampaignsIdContentReturn_links { get; set; }
		
		/// <summary>
		/// The Archive HTML for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archive_html")]
		public string Archive_html { get; set; }
		
		/// <summary>
		/// The raw HTML for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html")]
		public string Html { get; set; }
		
		/// <summary>
		/// The plain-text portion of the campaign. If left unspecified, we'll generate this automatically.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="plain_text")]
		public string Plain_text { get; set; }
		
		/// <summary>
		/// Content options for multivariate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variate_contents")]
		public PutCampaignsIdContentReturnVariate_contents[] PutCampaignsIdContentReturnVariate_contents { get; set; }
	}
	
	public class PutCampaignsIdContentReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PutCampaignsIdContentReturnVariate_contents
	{
		
		/// <summary>
		/// Label used to identify the content option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_label")]
		public string Content_label { get; set; }
		
		/// <summary>
		/// The raw HTML for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html")]
		public string Html { get; set; }
		
		/// <summary>
		/// The plain-text portion of the campaign. If left unspecified, we'll generate this automatically.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="plain_text")]
		public string Plain_text { get; set; }
	}
	
	public class GetCampaignsIdFeedbackReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetCampaignsIdFeedbackReturn_links[] GetCampaignsIdFeedbackReturn_links { get; set; }
		
		/// <summary>
		/// The unique id for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// A collection of feedback items for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="feedback")]
		public GetCampaignsIdFeedbackReturnFeedback[] GetCampaignsIdFeedbackReturnFeedback { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetCampaignsIdFeedbackReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetCampaignsIdFeedbackReturnFeedback
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetCampaignsIdFeedbackReturnFeedback_links[] GetCampaignsIdFeedbackReturnFeedback_links { get; set; }
		
		/// <summary>
		/// The block id for the editable block that the feedback addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="block_id")]
		public System.Nullable<System.Int32> Block_id { get; set; }
		
		/// <summary>
		/// The unique id for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The date and time the feedback item was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The login name of the user who created the feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The individual id for the feedback item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="feedback_id")]
		public System.Nullable<System.Int32> Feedback_id { get; set; }
		
		/// <summary>
		/// The status of feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_complete")]
		public System.Nullable<System.Boolean> Is_complete { get; set; }
		
		/// <summary>
		/// The content of the feedback.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// If a reply, the id of the parent feedback item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_id")]
		public System.Nullable<System.Int32> Parent_id { get; set; }
		
		/// <summary>
		/// The source of the feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public System.Nullable<GetCampaignsIdFeedbackReturnFeedbackSource> Source { get; set; }
		
		/// <summary>
		/// The date and time the feedback was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class GetCampaignsIdFeedbackReturnFeedback_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetCampaignsIdFeedbackReturnFeedbackSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		api = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		email = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sms = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		web = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ios = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		android = 5,
	}
	
	public class PostCampaignsIdFeedbackPostBody
	{
		
		/// <summary>
		/// The block id for the editable block that the feedback addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="block_id")]
		public System.Nullable<System.Int32> Block_id { get; set; }
		
		/// <summary>
		/// The status of feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_complete")]
		public System.Nullable<System.Boolean> Is_complete { get; set; }
		
		/// <summary>
		/// The content of the feedback.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	public class PostCampaignsIdFeedbackReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostCampaignsIdFeedbackReturn_links[] PostCampaignsIdFeedbackReturn_links { get; set; }
		
		/// <summary>
		/// The block id for the editable block that the feedback addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="block_id")]
		public System.Nullable<System.Int32> Block_id { get; set; }
		
		/// <summary>
		/// The unique id for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The date and time the feedback item was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The login name of the user who created the feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The individual id for the feedback item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="feedback_id")]
		public System.Nullable<System.Int32> Feedback_id { get; set; }
		
		/// <summary>
		/// The status of feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_complete")]
		public System.Nullable<System.Boolean> Is_complete { get; set; }
		
		/// <summary>
		/// The content of the feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// If a reply, the id of the parent feedback item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_id")]
		public System.Nullable<System.Int32> Parent_id { get; set; }
		
		/// <summary>
		/// The source of the feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public GetCampaignsIdFeedbackReturnFeedbackSource Source { get; set; }
		
		/// <summary>
		/// The date and time the feedback was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PostCampaignsIdFeedbackReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetCampaignsIdFeedbackIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetCampaignsIdFeedbackIdReturn_links[] GetCampaignsIdFeedbackIdReturn_links { get; set; }
		
		/// <summary>
		/// The block id for the editable block that the feedback addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="block_id")]
		public System.Nullable<System.Int32> Block_id { get; set; }
		
		/// <summary>
		/// The unique id for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The date and time the feedback item was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The login name of the user who created the feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The individual id for the feedback item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="feedback_id")]
		public System.Nullable<System.Int32> Feedback_id { get; set; }
		
		/// <summary>
		/// The status of feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_complete")]
		public System.Nullable<System.Boolean> Is_complete { get; set; }
		
		/// <summary>
		/// The content of the feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// If a reply, the id of the parent feedback item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_id")]
		public System.Nullable<System.Int32> Parent_id { get; set; }
		
		/// <summary>
		/// The source of the feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public GetCampaignsIdFeedbackReturnFeedbackSource Source { get; set; }
		
		/// <summary>
		/// The date and time the feedback was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class GetCampaignsIdFeedbackIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchCampaignsIdFeedbackIdPatchBody
	{
		
		/// <summary>
		/// The block id for the editable block that the feedback addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="block_id")]
		public System.Nullable<System.Int32> Block_id { get; set; }
		
		/// <summary>
		/// The status of feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_complete")]
		public System.Nullable<System.Boolean> Is_complete { get; set; }
		
		/// <summary>
		/// The content of the feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	public class PatchCampaignsIdFeedbackIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchCampaignsIdFeedbackIdReturn_links[] PatchCampaignsIdFeedbackIdReturn_links { get; set; }
		
		/// <summary>
		/// The block id for the editable block that the feedback addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="block_id")]
		public System.Nullable<System.Int32> Block_id { get; set; }
		
		/// <summary>
		/// The unique id for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The date and time the feedback item was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The login name of the user who created the feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The individual id for the feedback item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="feedback_id")]
		public System.Nullable<System.Int32> Feedback_id { get; set; }
		
		/// <summary>
		/// The status of feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_complete")]
		public System.Nullable<System.Boolean> Is_complete { get; set; }
		
		/// <summary>
		/// The content of the feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// If a reply, the id of the parent feedback item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_id")]
		public System.Nullable<System.Int32> Parent_id { get; set; }
		
		/// <summary>
		/// The source of the feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public GetCampaignsIdFeedbackReturnFeedbackSource Source { get; set; }
		
		/// <summary>
		/// The date and time the feedback was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PatchCampaignsIdFeedbackIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetCampaignsIdSendChecklistReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetCampaignsIdSendChecklistReturn_links[] GetCampaignsIdSendChecklistReturn_links { get; set; }
		
		/// <summary>
		/// Whether the campaign is ready to send.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_ready")]
		public System.Nullable<System.Boolean> Is_ready { get; set; }
		
		/// <summary>
		/// A list of feedback items to review before sending your campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="items")]
		public GetCampaignsIdSendChecklistReturnItems[] GetCampaignsIdSendChecklistReturnItems { get; set; }
	}
	
	public class GetCampaignsIdSendChecklistReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetCampaignsIdSendChecklistReturnItems
	{
		
		/// <summary>
		/// Details about the specific feedback item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string Details { get; set; }
		
		/// <summary>
		/// The heading for the specific item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="heading")]
		public string Heading { get; set; }
		
		/// <summary>
		/// The ID for the specific item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The item type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GetCampaignsIdSendChecklistReturnItemsType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetCampaignsIdSendChecklistReturnItemsType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		success = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		warning = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		error = 2,
	}
	
	public class GetConnectedSitesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetConnectedSitesReturn_links[] GetConnectedSitesReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a connected site.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sites")]
		public GetConnectedSitesReturnSites[] GetConnectedSitesReturnSites { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetConnectedSitesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetConnectedSitesReturnSites
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetConnectedSitesReturnSites_links[] GetConnectedSitesReturnSites_links { get; set; }
		
		/// <summary>
		/// The date and time the connected site was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The connected site domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// The unique identifier for the site.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="foreign_id")]
		public string Foreign_id { get; set; }
		
		/// <summary>
		/// The platform of the connected site.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public string Platform { get; set; }
		
		/// <summary>
		/// The script used to connect your site with Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="site_script")]
		public GetConnectedSitesReturnSitesSite_script Site_script { get; set; }
		
		/// <summary>
		/// The unique identifier for the ecommerce store that's associated with the connected site (if any). The store_id for a specific connected site can't change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The date and time the connected site was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class GetConnectedSitesReturnSites_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetConnectedSitesReturnSitesSite_script
	{
		
		/// <summary>
		/// A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fragment")]
		public string Fragment { get; set; }
		
		/// <summary>
		/// The URL used for any integrations that offer built-in support for connected sites.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class PostConnectedSitesPostBody
	{
		
		/// <summary>
		/// The connected site domain.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// The unique identifier for the site.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="foreign_id")]
		public string Foreign_id { get; set; }
	}
	
	public class PostConnectedSitesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostConnectedSitesReturn_links[] PostConnectedSitesReturn_links { get; set; }
		
		/// <summary>
		/// The date and time the connected site was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The connected site domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// The unique identifier for the site.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="foreign_id")]
		public string Foreign_id { get; set; }
		
		/// <summary>
		/// The platform of the connected site.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public string Platform { get; set; }
		
		/// <summary>
		/// The script used to connect your site with Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="site_script")]
		public PostConnectedSitesReturnSite_script Site_script { get; set; }
		
		/// <summary>
		/// The unique identifier for the ecommerce store that's associated with the connected site (if any). The store_id for a specific connected site can't change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The date and time the connected site was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PostConnectedSitesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostConnectedSitesReturnSite_script
	{
		
		/// <summary>
		/// A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fragment")]
		public string Fragment { get; set; }
		
		/// <summary>
		/// The URL used for any integrations that offer built-in support for connected sites.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class GetConnectedSitesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetConnectedSitesIdReturn_links[] GetConnectedSitesIdReturn_links { get; set; }
		
		/// <summary>
		/// The date and time the connected site was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The connected site domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// The unique identifier for the site.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="foreign_id")]
		public string Foreign_id { get; set; }
		
		/// <summary>
		/// The platform of the connected site.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public string Platform { get; set; }
		
		/// <summary>
		/// The script used to connect your site with Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="site_script")]
		public GetConnectedSitesIdReturnSite_script Site_script { get; set; }
		
		/// <summary>
		/// The unique identifier for the ecommerce store that's associated with the connected site (if any). The store_id for a specific connected site can't change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The date and time the connected site was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class GetConnectedSitesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetConnectedSitesIdReturnSite_script
	{
		
		/// <summary>
		/// A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fragment")]
		public string Fragment { get; set; }
		
		/// <summary>
		/// The URL used for any integrations that offer built-in support for connected sites.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public enum GetConversationsHas_unread_messages
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="true")]
		_true = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="false")]
		_false = 1,
	}
	
	public class GetConversationsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetConversationsReturn_links[] GetConversationsReturn_links { get; set; }
		
		/// <summary>
		/// A list of conversations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversations")]
		public GetConversationsReturnConversations[] GetConversationsReturnConversations { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetConversationsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetConversationsReturnConversations
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetConversationsReturnConversations_links[] GetConversationsReturnConversations_links { get; set; }
		
		/// <summary>
		/// The unique identifier of the campaign for this conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// A label representing the email of the sender of this message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_email")]
		public string From_email { get; set; }
		
		/// <summary>
		/// A label representing the sender of this message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_label")]
		public string From_label { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The most recent message in the conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_message")]
		public GetConversationsReturnConversationsLast_message Last_message { get; set; }
		
		/// <summary>
		/// The unique identifier of the list for this conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The total number of messages in this conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message_count")]
		public System.Nullable<System.Int32> Message_count { get; set; }
		
		/// <summary>
		/// The subject of the message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject")]
		public string Subject { get; set; }
		
		/// <summary>
		/// The number of unread messages in this conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unread_messages")]
		public System.Nullable<System.Int32> Unread_messages { get; set; }
	}
	
	public class GetConversationsReturnConversations_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetConversationsReturnConversationsLast_message
	{
		
		/// <summary>
		/// A label representing the email of the sender of this message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_email")]
		public string From_email { get; set; }
		
		/// <summary>
		/// A label representing the sender of this message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_label")]
		public string From_label { get; set; }
		
		/// <summary>
		/// The plain-text content of the message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Whether this message has been marked as read.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="read")]
		public System.Nullable<System.Boolean> Read { get; set; }
		
		/// <summary>
		/// The subject of this message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject")]
		public string Subject { get; set; }
		
		/// <summary>
		/// The date and time the message was either sent or received in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.DateTimeOffset> Timestamp { get; set; }
	}
	
	public class GetConversationsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetConversationsIdReturn_links[] GetConversationsIdReturn_links { get; set; }
		
		/// <summary>
		/// The unique identifier of the campaign for this conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// A label representing the email of the sender of this message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_email")]
		public string From_email { get; set; }
		
		/// <summary>
		/// A label representing the sender of this message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_label")]
		public string From_label { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The most recent message in the conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_message")]
		public GetConversationsIdReturnLast_message Last_message { get; set; }
		
		/// <summary>
		/// The unique identifier of the list for this conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The total number of messages in this conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message_count")]
		public System.Nullable<System.Int32> Message_count { get; set; }
		
		/// <summary>
		/// The subject of the message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject")]
		public string Subject { get; set; }
		
		/// <summary>
		/// The number of unread messages in this conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unread_messages")]
		public System.Nullable<System.Int32> Unread_messages { get; set; }
	}
	
	public class GetConversationsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetConversationsIdReturnLast_message
	{
		
		/// <summary>
		/// A label representing the email of the sender of this message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_email")]
		public string From_email { get; set; }
		
		/// <summary>
		/// A label representing the sender of this message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_label")]
		public string From_label { get; set; }
		
		/// <summary>
		/// The plain-text content of the message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Whether this message has been marked as read.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="read")]
		public System.Nullable<System.Boolean> Read { get; set; }
		
		/// <summary>
		/// The subject of this message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject")]
		public string Subject { get; set; }
		
		/// <summary>
		/// The date and time the message was either sent or received in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.DateTimeOffset> Timestamp { get; set; }
	}
	
	public enum GetConversationsIdMessagesIs_read
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="true")]
		_true = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="false")]
		_false = 1,
	}
	
	public class GetConversationsIdMessagesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetConversationsIdMessagesReturn_links[] GetConversationsIdMessagesReturn_links { get; set; }
		
		/// <summary>
		/// A string that identifies this conversation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversation_id")]
		public string Conversation_id { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a conversation messages resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversation_messages")]
		public GetConversationsIdMessagesReturnConversation_messages[] GetConversationsIdMessagesReturnConversation_messages { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetConversationsIdMessagesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetConversationsIdMessagesReturnConversation_messages
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetConversationsIdMessagesReturnConversation_messages_links[] GetConversationsIdMessagesReturnConversation_messages_links { get; set; }
		
		/// <summary>
		/// A string that identifies this message's conversation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversation_id")]
		public string Conversation_id { get; set; }
		
		/// <summary>
		/// A label representing the email of the sender of this message
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_email")]
		public string From_email { get; set; }
		
		/// <summary>
		/// A label representing the sender of this message
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_label")]
		public string From_label { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this message
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The list's web ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public System.Nullable<System.Int32> List_id { get; set; }
		
		/// <summary>
		/// The plain-text content of the message
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Whether this message has been marked as read
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="read")]
		public System.Nullable<System.Boolean> Read { get; set; }
		
		/// <summary>
		/// The subject of this message
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject")]
		public string Subject { get; set; }
		
		/// <summary>
		/// The date and time the message was either sent or received in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.DateTimeOffset> Timestamp { get; set; }
	}
	
	public class GetConversationsIdMessagesReturnConversation_messages_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetConversationsIdMessagesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetConversationsIdMessagesIdReturn_links[] GetConversationsIdMessagesIdReturn_links { get; set; }
		
		/// <summary>
		/// A string that identifies this message's conversation
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversation_id")]
		public string Conversation_id { get; set; }
		
		/// <summary>
		/// A label representing the email of the sender of this message
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_email")]
		public string From_email { get; set; }
		
		/// <summary>
		/// A label representing the sender of this message
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_label")]
		public string From_label { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this message
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The list's web ID
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public System.Nullable<System.Int32> List_id { get; set; }
		
		/// <summary>
		/// The plain-text content of the message
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// Whether this message has been marked as read
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="read")]
		public System.Nullable<System.Boolean> Read { get; set; }
		
		/// <summary>
		/// The subject of this message
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject")]
		public string Subject { get; set; }
		
		/// <summary>
		/// The date and time the message was either sent or received in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.DateTimeOffset> Timestamp { get; set; }
	}
	
	public class GetConversationsIdMessagesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostCustomerJourneysJourneysIdStepsIdActionsTriggerPostBody
	{
		
		/// <summary>
		/// The list member's email address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
	}
	
	public class GetEcommerceOrdersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceOrdersReturn_links[] GetEcommerceOrdersReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing an order resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orders")]
		public GetEcommerceOrdersReturnOrders[] GetEcommerceOrdersReturnOrders { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetEcommerceOrdersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceOrdersReturnOrders
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceOrdersReturnOrders_links[] GetEcommerceOrdersReturnOrders_links { get; set; }
		
		/// <summary>
		/// The billing address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billing_address")]
		public GetEcommerceOrdersReturnOrdersBilling_address Billing_address { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the campaign associated with an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The date and time the order was cancelled in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cancelled_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Cancelled_at_foreign { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// Information about a specific customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public GetEcommerceOrdersReturnOrdersCustomer Customer { get; set; }
		
		/// <summary>
		/// The total amount of the discounts to be applied to the price of the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount_total")]
		public System.Nullable<System.Double> Discount_total { get; set; }
		
		/// <summary>
		/// The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="financial_status")]
		public string Financial_status { get; set; }
		
		/// <summary>
		/// The fulfillment status for the order. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fulfillment_status")]
		public string Fulfillment_status { get; set; }
		
		/// <summary>
		/// A unique identifier for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL for the page where the buyer landed when entering the shop.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="landing_site")]
		public string Landing_site { get; set; }
		
		/// <summary>
		/// An array of the order's line items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lines")]
		public GetEcommerceOrdersReturnOrdersLines[] GetEcommerceOrdersReturnOrdersLines { get; set; }
		
		/// <summary>
		/// The order total associated with an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_total")]
		public System.Nullable<System.Double> Order_total { get; set; }
		
		/// <summary>
		/// The URL for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_url")]
		public string Order_url { get; set; }
		
		/// <summary>
		/// The outreach associated with this order. For example, an email campaign or Facebook ad.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outreach")]
		public GetEcommerceOrdersReturnOrdersOutreach Outreach { get; set; }
		
		/// <summary>
		/// The date and time the order was processed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processed_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Processed_at_foreign { get; set; }
		
		/// <summary>
		/// The promo codes applied on the order
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promos")]
		public GetEcommerceOrdersReturnOrdersPromos[] GetEcommerceOrdersReturnOrdersPromos { get; set; }
		
		/// <summary>
		/// The shipping address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipping_address")]
		public GetEcommerceOrdersReturnOrdersShipping_address Shipping_address { get; set; }
		
		/// <summary>
		/// The shipping total for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipping_total")]
		public System.Nullable<System.Double> Shipping_total { get; set; }
		
		/// <summary>
		/// The unique identifier for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The tax total associated with an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_total")]
		public System.Nullable<System.Double> Tax_total { get; set; }
		
		/// <summary>
		/// The tracking carrier associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_carrier")]
		public string Tracking_carrier { get; set; }
		
		/// <summary>
		/// The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_code")]
		public System.Nullable<GetEcommerceOrdersReturnOrdersTracking_code> Tracking_code { get; set; }
		
		/// <summary>
		/// The tracking number associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_number")]
		public string Tracking_number { get; set; }
		
		/// <summary>
		/// The tracking URL associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_url")]
		public string Tracking_url { get; set; }
		
		/// <summary>
		/// The date and time the order was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
	}
	
	public class GetEcommerceOrdersReturnOrders_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceOrdersReturnOrdersBilling_address
	{
		
		/// <summary>
		/// The billing address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company associated with the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The country in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the country in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude for the billing address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude for the billing address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The name associated with an order's billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The phone number for the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The postal or zip code in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The state or normalized province in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the province or state in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class GetEcommerceOrdersReturnOrdersCustomer
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceOrdersReturnOrdersCustomer_links[] GetEcommerceOrdersReturnOrdersCustomer_links { get; set; }
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public GetEcommerceOrdersReturnOrdersCustomerAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The date and time the customer was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The customer's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
		
		/// <summary>
		/// The customer's total order count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orders_count")]
		public System.Nullable<System.Int32> Orders_count { get; set; }
		
		/// <summary>
		/// The total amount the customer has spent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
		
		/// <summary>
		/// The date and time the customer was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class GetEcommerceOrdersReturnOrdersCustomer_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceOrdersReturnOrdersCustomerAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class GetEcommerceOrdersReturnOrdersLines
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceOrdersReturnOrdersLines_links[] GetEcommerceOrdersReturnOrdersLines_links { get; set; }
		
		/// <summary>
		/// The total discount amount applied to a line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount")]
		public System.Nullable<System.Double> Discount { get; set; }
		
		/// <summary>
		/// A unique identifier for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The order line item price.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The name of the product for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_title")]
		public string Product_title { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The name of the product variant for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_title")]
		public string Product_variant_title { get; set; }
		
		/// <summary>
		/// The order line item quantity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class GetEcommerceOrdersReturnOrdersLines_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceOrdersReturnOrdersOutreach
	{
		
		/// <summary>
		/// A unique identifier for the outreach. Can be an email campaign ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name for the outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The date and time the Outreach was published in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_time")]
		public System.Nullable<System.DateTimeOffset> Published_time { get; set; }
		
		/// <summary>
		/// The type of the outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class GetEcommerceOrdersReturnOrdersPromos
	{
		
		/// <summary>
		/// The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount_discounted")]
		public System.Nullable<System.Double> Amount_discounted { get; set; }
		
		/// <summary>
		/// The Promo Code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Type of discount. For free shipping set type to fixed
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GetEcommerceOrdersReturnOrdersPromosType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetEcommerceOrdersReturnOrdersPromosType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fixed")]
		_fixed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		percentage = 1,
	}
	
	public class GetEcommerceOrdersReturnOrdersShipping_address
	{
		
		/// <summary>
		/// The shipping address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company associated with an order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The country in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the country in the shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude for the shipping address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude for the shipping address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The name associated with an order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The phone number for the order's shipping address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The postal or zip code in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The state or normalized province in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the province or state the order's shipping address is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetEcommerceOrdersReturnOrdersTracking_code
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		prec = 0,
	}
	
	public class GetEcommerceStoresReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresReturn_links[] GetEcommerceStoresReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stores")]
		public GetEcommerceStoresReturnStores[] GetEcommerceStoresReturnStores { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetEcommerceStoresReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresReturnStores
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresReturnStores_links[] GetEcommerceStoresReturnStores_links { get; set; }
		
		/// <summary>
		/// The store address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public GetEcommerceStoresReturnStoresAddress Address { get; set; }
		
		/// <summary>
		/// Details for the automations attached to this store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automations")]
		public GetEcommerceStoresReturnStoresAutomations Automations { get; set; }
		
		/// <summary>
		/// The Connected Site associated with the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connected_site")]
		public GetEcommerceStoresReturnStoresConnected_site Connected_site { get; set; }
		
		/// <summary>
		/// The date and time the store was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The store domain.  The store domain must be unique within a user account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// The email address for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The unique identifier for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether to disable automations because the store is currently [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_syncing")]
		public System.Nullable<System.Boolean> Is_syncing { get; set; }
		
		/// <summary>
		/// The unique identifier for the list that's associated with the store. The `list_id` for a specific store can't change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list connected to the store, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The currency format for the store. For example: `$`, `Â£`, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="money_format")]
		public string Money_format { get; set; }
		
		/// <summary>
		/// The name of the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The store phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The e-commerce platform of the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public string Platform { get; set; }
		
		/// <summary>
		/// The primary locale for the store. For example: `en`, `de`, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primary_locale")]
		public string Primary_locale { get; set; }
		
		/// <summary>
		/// The timezone for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
		
		/// <summary>
		/// The date and time the store was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class GetEcommerceStoresReturnStores_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresReturnStoresAddress
	{
		
		/// <summary>
		/// The store's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the store's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the store is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The store's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for to the store's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude of the store location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude of the store location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The store's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The store's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the store's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class GetEcommerceStoresReturnStoresAutomations
	{
		
		/// <summary>
		/// abandonedBrowse automation details. abandonedBrowse is also known as Product Retargeting Email or Retarget Site Visitors on the web.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abandoned_browse")]
		public GetEcommerceStoresReturnStoresAutomationsAbandoned_browse Abandoned_browse { get; set; }
		
		/// <summary>
		/// abandonedCart automation details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abandoned_cart")]
		public GetEcommerceStoresReturnStoresAutomationsAbandoned_cart Abandoned_cart { get; set; }
	}
	
	public class GetEcommerceStoresReturnStoresAutomationsAbandoned_browse
	{
		
		/// <summary>
		/// Unique ID of automation parent campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether this store supports the abandonedBrowse automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_supported")]
		public System.Nullable<System.Boolean> Is_supported { get; set; }
		
		/// <summary>
		/// Status of the abandonedBrowse automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<GetEcommerceStoresReturnStoresAutomationsAbandoned_browseStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetEcommerceStoresReturnStoresAutomationsAbandoned_browseStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		save = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sending = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		paused = 2,
	}
	
	public class GetEcommerceStoresReturnStoresAutomationsAbandoned_cart
	{
		
		/// <summary>
		/// Unique ID of automation parent campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether this store supports the abandonedCart automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_supported")]
		public System.Nullable<System.Boolean> Is_supported { get; set; }
		
		/// <summary>
		/// Status of the abandonedCart automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetEcommerceStoresReturnStoresAutomationsAbandoned_browseStatus Status { get; set; }
	}
	
	public class GetEcommerceStoresReturnStoresConnected_site
	{
		
		/// <summary>
		/// The unique identifier for the connected site.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="site_foreign_id")]
		public string Site_foreign_id { get; set; }
		
		/// <summary>
		/// The script used to connect your site with Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="site_script")]
		public GetEcommerceStoresReturnStoresConnected_siteSite_script Site_script { get; set; }
	}
	
	public class GetEcommerceStoresReturnStoresConnected_siteSite_script
	{
		
		/// <summary>
		/// A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fragment")]
		public string Fragment { get; set; }
		
		/// <summary>
		/// The URL used for any integrations that offer built-in support for connected sites.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class PostEcommerceStoresPostBody
	{
		
		/// <summary>
		/// The store address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PostEcommerceStoresPostBodyAddress Address { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The store domain. This parameter is required for Connected Sites and Google Ads.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// The email address for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The unique identifier for the store.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether to disable automations because the store is currently [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_syncing")]
		public System.Nullable<System.Boolean> Is_syncing { get; set; }
		
		/// <summary>
		/// The unique identifier for the list associated with the store. The `list_id` for a specific store cannot change.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The currency format for the store. For example: `$`, `Â£`, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="money_format")]
		public string Money_format { get; set; }
		
		/// <summary>
		/// The name of the store.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The store phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The e-commerce platform of the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public string Platform { get; set; }
		
		/// <summary>
		/// The primary locale for the store. For example: `en`, `de`, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primary_locale")]
		public string Primary_locale { get; set; }
		
		/// <summary>
		/// The timezone for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
	}
	
	public class PostEcommerceStoresPostBodyAddress
	{
		
		/// <summary>
		/// The store's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the store's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the store is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The store's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for to the store's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude of the store location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude of the store location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The store's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The store's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the store's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PostEcommerceStoresReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostEcommerceStoresReturn_links[] PostEcommerceStoresReturn_links { get; set; }
		
		/// <summary>
		/// The store address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PostEcommerceStoresReturnAddress Address { get; set; }
		
		/// <summary>
		/// Details for the automations attached to this store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automations")]
		public PostEcommerceStoresReturnAutomations Automations { get; set; }
		
		/// <summary>
		/// The Connected Site associated with the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connected_site")]
		public PostEcommerceStoresReturnConnected_site Connected_site { get; set; }
		
		/// <summary>
		/// The date and time the store was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The store domain.  The store domain must be unique within a user account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// The email address for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The unique identifier for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether to disable automations because the store is currently [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_syncing")]
		public System.Nullable<System.Boolean> Is_syncing { get; set; }
		
		/// <summary>
		/// The unique identifier for the list that's associated with the store. The `list_id` for a specific store can't change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list connected to the store, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The currency format for the store. For example: `$`, `Â£`, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="money_format")]
		public string Money_format { get; set; }
		
		/// <summary>
		/// The name of the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The store phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The e-commerce platform of the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public string Platform { get; set; }
		
		/// <summary>
		/// The primary locale for the store. For example: `en`, `de`, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primary_locale")]
		public string Primary_locale { get; set; }
		
		/// <summary>
		/// The timezone for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
		
		/// <summary>
		/// The date and time the store was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PostEcommerceStoresReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostEcommerceStoresReturnAddress
	{
		
		/// <summary>
		/// The store's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the store's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the store is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The store's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for to the store's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude of the store location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude of the store location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The store's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The store's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the store's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PostEcommerceStoresReturnAutomations
	{
		
		/// <summary>
		/// abandonedBrowse automation details. abandonedBrowse is also known as Product Retargeting Email or Retarget Site Visitors on the web.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abandoned_browse")]
		public PostEcommerceStoresReturnAutomationsAbandoned_browse Abandoned_browse { get; set; }
		
		/// <summary>
		/// abandonedCart automation details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abandoned_cart")]
		public PostEcommerceStoresReturnAutomationsAbandoned_cart Abandoned_cart { get; set; }
	}
	
	public class PostEcommerceStoresReturnAutomationsAbandoned_browse
	{
		
		/// <summary>
		/// Unique ID of automation parent campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether this store supports the abandonedBrowse automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_supported")]
		public System.Nullable<System.Boolean> Is_supported { get; set; }
		
		/// <summary>
		/// Status of the abandonedBrowse automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetEcommerceStoresReturnStoresAutomationsAbandoned_browseStatus Status { get; set; }
	}
	
	public class PostEcommerceStoresReturnAutomationsAbandoned_cart
	{
		
		/// <summary>
		/// Unique ID of automation parent campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether this store supports the abandonedCart automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_supported")]
		public System.Nullable<System.Boolean> Is_supported { get; set; }
		
		/// <summary>
		/// Status of the abandonedCart automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetEcommerceStoresReturnStoresAutomationsAbandoned_browseStatus Status { get; set; }
	}
	
	public class PostEcommerceStoresReturnConnected_site
	{
		
		/// <summary>
		/// The unique identifier for the connected site.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="site_foreign_id")]
		public string Site_foreign_id { get; set; }
		
		/// <summary>
		/// The script used to connect your site with Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="site_script")]
		public PostEcommerceStoresReturnConnected_siteSite_script Site_script { get; set; }
	}
	
	public class PostEcommerceStoresReturnConnected_siteSite_script
	{
		
		/// <summary>
		/// A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fragment")]
		public string Fragment { get; set; }
		
		/// <summary>
		/// The URL used for any integrations that offer built-in support for connected sites.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class GetEcommerceStoresIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdReturn_links[] GetEcommerceStoresIdReturn_links { get; set; }
		
		/// <summary>
		/// The store address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public GetEcommerceStoresIdReturnAddress Address { get; set; }
		
		/// <summary>
		/// Details for the automations attached to this store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automations")]
		public GetEcommerceStoresIdReturnAutomations Automations { get; set; }
		
		/// <summary>
		/// The Connected Site associated with the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connected_site")]
		public GetEcommerceStoresIdReturnConnected_site Connected_site { get; set; }
		
		/// <summary>
		/// The date and time the store was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The store domain.  The store domain must be unique within a user account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// The email address for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The unique identifier for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether to disable automations because the store is currently [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_syncing")]
		public System.Nullable<System.Boolean> Is_syncing { get; set; }
		
		/// <summary>
		/// The unique identifier for the list that's associated with the store. The `list_id` for a specific store can't change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list connected to the store, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The currency format for the store. For example: `$`, `Â£`, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="money_format")]
		public string Money_format { get; set; }
		
		/// <summary>
		/// The name of the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The store phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The e-commerce platform of the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public string Platform { get; set; }
		
		/// <summary>
		/// The primary locale for the store. For example: `en`, `de`, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primary_locale")]
		public string Primary_locale { get; set; }
		
		/// <summary>
		/// The timezone for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
		
		/// <summary>
		/// The date and time the store was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class GetEcommerceStoresIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdReturnAddress
	{
		
		/// <summary>
		/// The store's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the store's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the store is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The store's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for to the store's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude of the store location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude of the store location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The store's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The store's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the store's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class GetEcommerceStoresIdReturnAutomations
	{
		
		/// <summary>
		/// abandonedBrowse automation details. abandonedBrowse is also known as Product Retargeting Email or Retarget Site Visitors on the web.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abandoned_browse")]
		public GetEcommerceStoresIdReturnAutomationsAbandoned_browse Abandoned_browse { get; set; }
		
		/// <summary>
		/// abandonedCart automation details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abandoned_cart")]
		public GetEcommerceStoresIdReturnAutomationsAbandoned_cart Abandoned_cart { get; set; }
	}
	
	public class GetEcommerceStoresIdReturnAutomationsAbandoned_browse
	{
		
		/// <summary>
		/// Unique ID of automation parent campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether this store supports the abandonedBrowse automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_supported")]
		public System.Nullable<System.Boolean> Is_supported { get; set; }
		
		/// <summary>
		/// Status of the abandonedBrowse automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetEcommerceStoresReturnStoresAutomationsAbandoned_browseStatus Status { get; set; }
	}
	
	public class GetEcommerceStoresIdReturnAutomationsAbandoned_cart
	{
		
		/// <summary>
		/// Unique ID of automation parent campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether this store supports the abandonedCart automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_supported")]
		public System.Nullable<System.Boolean> Is_supported { get; set; }
		
		/// <summary>
		/// Status of the abandonedCart automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetEcommerceStoresReturnStoresAutomationsAbandoned_browseStatus Status { get; set; }
	}
	
	public class GetEcommerceStoresIdReturnConnected_site
	{
		
		/// <summary>
		/// The unique identifier for the connected site.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="site_foreign_id")]
		public string Site_foreign_id { get; set; }
		
		/// <summary>
		/// The script used to connect your site with Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="site_script")]
		public GetEcommerceStoresIdReturnConnected_siteSite_script Site_script { get; set; }
	}
	
	public class GetEcommerceStoresIdReturnConnected_siteSite_script
	{
		
		/// <summary>
		/// A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fragment")]
		public string Fragment { get; set; }
		
		/// <summary>
		/// The URL used for any integrations that offer built-in support for connected sites.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class PatchEcommerceStoresIdPatchBody
	{
		
		/// <summary>
		/// The store address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PatchEcommerceStoresIdPatchBodyAddress Address { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The store domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// The email address for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// Whether to disable automations because the store is currently [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_syncing")]
		public System.Nullable<System.Boolean> Is_syncing { get; set; }
		
		/// <summary>
		/// The currency format for the store. For example: `$`, `Â£`, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="money_format")]
		public string Money_format { get; set; }
		
		/// <summary>
		/// The name of the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The store phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The e-commerce platform of the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public string Platform { get; set; }
		
		/// <summary>
		/// The primary locale for the store. For example: `en`, `de`, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primary_locale")]
		public string Primary_locale { get; set; }
		
		/// <summary>
		/// The timezone for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
	}
	
	public class PatchEcommerceStoresIdPatchBodyAddress
	{
		
		/// <summary>
		/// The store's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the store's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the store is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The store's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for to the store's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude of the store location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude of the store location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The store's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The store's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the store's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PatchEcommerceStoresIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchEcommerceStoresIdReturn_links[] PatchEcommerceStoresIdReturn_links { get; set; }
		
		/// <summary>
		/// The store address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PatchEcommerceStoresIdReturnAddress Address { get; set; }
		
		/// <summary>
		/// Details for the automations attached to this store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="automations")]
		public PatchEcommerceStoresIdReturnAutomations Automations { get; set; }
		
		/// <summary>
		/// The Connected Site associated with the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connected_site")]
		public PatchEcommerceStoresIdReturnConnected_site Connected_site { get; set; }
		
		/// <summary>
		/// The date and time the store was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The store domain.  The store domain must be unique within a user account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// The email address for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The unique identifier for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether to disable automations because the store is currently [syncing](https://mailchimp.com/developer/marketing/docs/e-commerce/#pausing-store-automations).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_syncing")]
		public System.Nullable<System.Boolean> Is_syncing { get; set; }
		
		/// <summary>
		/// The unique identifier for the list that's associated with the store. The `list_id` for a specific store can't change.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list connected to the store, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The currency format for the store. For example: `$`, `Â£`, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="money_format")]
		public string Money_format { get; set; }
		
		/// <summary>
		/// The name of the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The store phone number.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The e-commerce platform of the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public string Platform { get; set; }
		
		/// <summary>
		/// The primary locale for the store. For example: `en`, `de`, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="primary_locale")]
		public string Primary_locale { get; set; }
		
		/// <summary>
		/// The timezone for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
		
		/// <summary>
		/// The date and time the store was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PatchEcommerceStoresIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchEcommerceStoresIdReturnAddress
	{
		
		/// <summary>
		/// The store's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the store's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the store is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The store's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for to the store's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude of the store location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude of the store location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The store's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The store's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the store's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PatchEcommerceStoresIdReturnAutomations
	{
		
		/// <summary>
		/// abandonedBrowse automation details. abandonedBrowse is also known as Product Retargeting Email or Retarget Site Visitors on the web.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abandoned_browse")]
		public PatchEcommerceStoresIdReturnAutomationsAbandoned_browse Abandoned_browse { get; set; }
		
		/// <summary>
		/// abandonedCart automation details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abandoned_cart")]
		public PatchEcommerceStoresIdReturnAutomationsAbandoned_cart Abandoned_cart { get; set; }
	}
	
	public class PatchEcommerceStoresIdReturnAutomationsAbandoned_browse
	{
		
		/// <summary>
		/// Unique ID of automation parent campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether this store supports the abandonedBrowse automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_supported")]
		public System.Nullable<System.Boolean> Is_supported { get; set; }
		
		/// <summary>
		/// Status of the abandonedBrowse automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetEcommerceStoresReturnStoresAutomationsAbandoned_browseStatus Status { get; set; }
	}
	
	public class PatchEcommerceStoresIdReturnAutomationsAbandoned_cart
	{
		
		/// <summary>
		/// Unique ID of automation parent campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether this store supports the abandonedCart automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_supported")]
		public System.Nullable<System.Boolean> Is_supported { get; set; }
		
		/// <summary>
		/// Status of the abandonedCart automation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetEcommerceStoresReturnStoresAutomationsAbandoned_browseStatus Status { get; set; }
	}
	
	public class PatchEcommerceStoresIdReturnConnected_site
	{
		
		/// <summary>
		/// The unique identifier for the connected site.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="site_foreign_id")]
		public string Site_foreign_id { get; set; }
		
		/// <summary>
		/// The script used to connect your site with Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="site_script")]
		public PatchEcommerceStoresIdReturnConnected_siteSite_script Site_script { get; set; }
	}
	
	public class PatchEcommerceStoresIdReturnConnected_siteSite_script
	{
		
		/// <summary>
		/// A pre-built script that you can copy-and-paste into your site to integrate it with Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fragment")]
		public string Fragment { get; set; }
		
		/// <summary>
		/// The URL used for any integrations that offer built-in support for connected sites.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdCartsReturn_links[] GetEcommerceStoresIdCartsReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="carts")]
		public GetEcommerceStoresIdCartsReturnCarts[] GetEcommerceStoresIdCartsReturnCarts { get; set; }
		
		/// <summary>
		/// The store id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsReturnCarts
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdCartsReturnCarts_links[] GetEcommerceStoresIdCartsReturnCarts_links { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the campaign associated with a cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The URL for the cart. This parameter is required for [Abandoned Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="checkout_url")]
		public string Checkout_url { get; set; }
		
		/// <summary>
		/// The date and time the cart was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the cart uses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// Information about a specific customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public GetEcommerceStoresIdCartsReturnCartsCustomer Customer { get; set; }
		
		/// <summary>
		/// A unique identifier for the cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// An array of the cart's line items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lines")]
		public GetEcommerceStoresIdCartsReturnCartsLines[] GetEcommerceStoresIdCartsReturnCartsLines { get; set; }
		
		/// <summary>
		/// The order total for the cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_total")]
		public System.Nullable<System.Double> Order_total { get; set; }
		
		/// <summary>
		/// The total tax for the cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_total")]
		public System.Nullable<System.Double> Tax_total { get; set; }
		
		/// <summary>
		/// The date and time the cart was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsReturnCarts_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsReturnCartsCustomer
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdCartsReturnCartsCustomer_links[] GetEcommerceStoresIdCartsReturnCartsCustomer_links { get; set; }
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public GetEcommerceStoresIdCartsReturnCartsCustomerAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The date and time the customer was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The customer's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
		
		/// <summary>
		/// The customer's total order count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orders_count")]
		public System.Nullable<System.Int32> Orders_count { get; set; }
		
		/// <summary>
		/// The total amount the customer has spent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
		
		/// <summary>
		/// The date and time the customer was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsReturnCartsCustomer_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsReturnCartsCustomerAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsReturnCartsLines
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdCartsReturnCartsLines_links[] GetEcommerceStoresIdCartsReturnCartsLines_links { get; set; }
		
		/// <summary>
		/// A unique identifier for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The price of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The name of the product for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_title")]
		public string Product_title { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The name of the product variant for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_title")]
		public string Product_variant_title { get; set; }
		
		/// <summary>
		/// The quantity of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsReturnCartsLines_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostEcommerceStoresIdCartsPostBody
	{
		
		/// <summary>
		/// A string that uniquely identifies the campaign for a cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The URL for the cart. This parameter is required for [Abandoned Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="checkout_url")]
		public string Checkout_url { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the cart uses.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// Information about a specific customer. For existing customers include only the `id` parameter in the `customer` object body.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public PostEcommerceStoresIdCartsPostBodyCustomer Customer { get; set; }
		
		/// <summary>
		/// A unique identifier for the cart.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// An array of the cart's line items.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lines")]
		public PostEcommerceStoresIdCartsPostBodyLines[] PostEcommerceStoresIdCartsPostBodyLines { get; set; }
		
		/// <summary>
		/// The order total for the cart.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="order_total")]
		public double Order_total { get; set; }
		
		/// <summary>
		/// The total tax for the cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_total")]
		public System.Nullable<System.Double> Tax_total { get; set; }
	}
	
	public class PostEcommerceStoresIdCartsPostBodyCustomer
	{
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PostEcommerceStoresIdCartsPostBodyCustomerAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The customer's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for the customer. Limited to 50 characters.
		/// Required
		/// Max length: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public string Id { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
	}
	
	public class PostEcommerceStoresIdCartsPostBodyCustomerAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PostEcommerceStoresIdCartsPostBodyLines
	{
		
		/// <summary>
		/// A unique identifier for the cart line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The price of a cart line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="price")]
		public double Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with the cart line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with the cart line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The quantity of a cart line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public int Quantity { get; set; }
	}
	
	public class PostEcommerceStoresIdCartsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostEcommerceStoresIdCartsReturn_links[] PostEcommerceStoresIdCartsReturn_links { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the campaign associated with a cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The URL for the cart. This parameter is required for [Abandoned Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="checkout_url")]
		public string Checkout_url { get; set; }
		
		/// <summary>
		/// The date and time the cart was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the cart uses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// Information about a specific customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public PostEcommerceStoresIdCartsReturnCustomer Customer { get; set; }
		
		/// <summary>
		/// A unique identifier for the cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// An array of the cart's line items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lines")]
		public PostEcommerceStoresIdCartsReturnLines[] PostEcommerceStoresIdCartsReturnLines { get; set; }
		
		/// <summary>
		/// The order total for the cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_total")]
		public System.Nullable<System.Double> Order_total { get; set; }
		
		/// <summary>
		/// The total tax for the cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_total")]
		public System.Nullable<System.Double> Tax_total { get; set; }
		
		/// <summary>
		/// The date and time the cart was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PostEcommerceStoresIdCartsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostEcommerceStoresIdCartsReturnCustomer
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostEcommerceStoresIdCartsReturnCustomer_links[] PostEcommerceStoresIdCartsReturnCustomer_links { get; set; }
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PostEcommerceStoresIdCartsReturnCustomerAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The date and time the customer was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The customer's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
		
		/// <summary>
		/// The customer's total order count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orders_count")]
		public System.Nullable<System.Int32> Orders_count { get; set; }
		
		/// <summary>
		/// The total amount the customer has spent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
		
		/// <summary>
		/// The date and time the customer was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PostEcommerceStoresIdCartsReturnCustomer_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostEcommerceStoresIdCartsReturnCustomerAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PostEcommerceStoresIdCartsReturnLines
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostEcommerceStoresIdCartsReturnLines_links[] PostEcommerceStoresIdCartsReturnLines_links { get; set; }
		
		/// <summary>
		/// A unique identifier for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The price of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The name of the product for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_title")]
		public string Product_title { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The name of the product variant for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_title")]
		public string Product_variant_title { get; set; }
		
		/// <summary>
		/// The quantity of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class PostEcommerceStoresIdCartsReturnLines_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdCartsIdReturn_links[] GetEcommerceStoresIdCartsIdReturn_links { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the campaign associated with a cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The URL for the cart. This parameter is required for [Abandoned Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="checkout_url")]
		public string Checkout_url { get; set; }
		
		/// <summary>
		/// The date and time the cart was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the cart uses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// Information about a specific customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public GetEcommerceStoresIdCartsIdReturnCustomer Customer { get; set; }
		
		/// <summary>
		/// A unique identifier for the cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// An array of the cart's line items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lines")]
		public GetEcommerceStoresIdCartsIdReturnLines[] GetEcommerceStoresIdCartsIdReturnLines { get; set; }
		
		/// <summary>
		/// The order total for the cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_total")]
		public System.Nullable<System.Double> Order_total { get; set; }
		
		/// <summary>
		/// The total tax for the cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_total")]
		public System.Nullable<System.Double> Tax_total { get; set; }
		
		/// <summary>
		/// The date and time the cart was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsIdReturnCustomer
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdCartsIdReturnCustomer_links[] GetEcommerceStoresIdCartsIdReturnCustomer_links { get; set; }
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public GetEcommerceStoresIdCartsIdReturnCustomerAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The date and time the customer was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The customer's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
		
		/// <summary>
		/// The customer's total order count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orders_count")]
		public System.Nullable<System.Int32> Orders_count { get; set; }
		
		/// <summary>
		/// The total amount the customer has spent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
		
		/// <summary>
		/// The date and time the customer was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsIdReturnCustomer_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsIdReturnCustomerAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsIdReturnLines
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdCartsIdReturnLines_links[] GetEcommerceStoresIdCartsIdReturnLines_links { get; set; }
		
		/// <summary>
		/// A unique identifier for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The price of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The name of the product for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_title")]
		public string Product_title { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The name of the product variant for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_title")]
		public string Product_variant_title { get; set; }
		
		/// <summary>
		/// The quantity of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsIdReturnLines_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchEcommerceStoresIdCartsIdPatchBody
	{
		
		/// <summary>
		/// A string that uniquely identifies the campaign associated with a cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The URL for the cart. This parameter is required for [Abandoned Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="checkout_url")]
		public string Checkout_url { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the cart uses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public PatchEcommerceStoresIdCartsIdPatchBodyCustomer Customer { get; set; }
		
		/// <summary>
		/// An array of the cart's line items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lines")]
		public PatchEcommerceStoresIdCartsIdPatchBodyLines[] PatchEcommerceStoresIdCartsIdPatchBodyLines { get; set; }
		
		/// <summary>
		/// The order total for the cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_total")]
		public System.Nullable<System.Double> Order_total { get; set; }
		
		/// <summary>
		/// The total tax for the cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_total")]
		public System.Nullable<System.Double> Tax_total { get; set; }
	}
	
	public class PatchEcommerceStoresIdCartsIdPatchBodyCustomer
	{
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PatchEcommerceStoresIdCartsIdPatchBodyCustomerAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
	}
	
	public class PatchEcommerceStoresIdCartsIdPatchBodyCustomerAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PatchEcommerceStoresIdCartsIdPatchBodyLines
	{
		
		/// <summary>
		/// The price of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The quantity of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class PatchEcommerceStoresIdCartsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchEcommerceStoresIdCartsIdReturn_links[] PatchEcommerceStoresIdCartsIdReturn_links { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the campaign associated with a cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The URL for the cart. This parameter is required for [Abandoned Cart](https://mailchimp.com/help/create-an-abandoned-cart-email/) automations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="checkout_url")]
		public string Checkout_url { get; set; }
		
		/// <summary>
		/// The date and time the cart was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the cart uses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// Information about a specific customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public PatchEcommerceStoresIdCartsIdReturnCustomer Customer { get; set; }
		
		/// <summary>
		/// A unique identifier for the cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// An array of the cart's line items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lines")]
		public PatchEcommerceStoresIdCartsIdReturnLines[] PatchEcommerceStoresIdCartsIdReturnLines { get; set; }
		
		/// <summary>
		/// The order total for the cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_total")]
		public System.Nullable<System.Double> Order_total { get; set; }
		
		/// <summary>
		/// The total tax for the cart.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_total")]
		public System.Nullable<System.Double> Tax_total { get; set; }
		
		/// <summary>
		/// The date and time the cart was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PatchEcommerceStoresIdCartsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchEcommerceStoresIdCartsIdReturnCustomer
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchEcommerceStoresIdCartsIdReturnCustomer_links[] PatchEcommerceStoresIdCartsIdReturnCustomer_links { get; set; }
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PatchEcommerceStoresIdCartsIdReturnCustomerAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The date and time the customer was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The customer's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
		
		/// <summary>
		/// The customer's total order count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orders_count")]
		public System.Nullable<System.Int32> Orders_count { get; set; }
		
		/// <summary>
		/// The total amount the customer has spent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
		
		/// <summary>
		/// The date and time the customer was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PatchEcommerceStoresIdCartsIdReturnCustomer_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchEcommerceStoresIdCartsIdReturnCustomerAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PatchEcommerceStoresIdCartsIdReturnLines
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchEcommerceStoresIdCartsIdReturnLines_links[] PatchEcommerceStoresIdCartsIdReturnLines_links { get; set; }
		
		/// <summary>
		/// A unique identifier for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The price of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The name of the product for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_title")]
		public string Product_title { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The name of the product variant for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_title")]
		public string Product_variant_title { get; set; }
		
		/// <summary>
		/// The quantity of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class PatchEcommerceStoresIdCartsIdReturnLines_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsIdLinesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdCartsIdLinesReturn_links[] GetEcommerceStoresIdCartsIdLinesReturn_links { get; set; }
		
		/// <summary>
		/// The cart id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cart_id")]
		public string Cart_id { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a cart's line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lines")]
		public GetEcommerceStoresIdCartsIdLinesReturnLines[] GetEcommerceStoresIdCartsIdLinesReturnLines { get; set; }
		
		/// <summary>
		/// The store id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsIdLinesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsIdLinesReturnLines
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdCartsIdLinesReturnLines_links[] GetEcommerceStoresIdCartsIdLinesReturnLines_links { get; set; }
		
		/// <summary>
		/// A unique identifier for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The price of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The name of the product for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_title")]
		public string Product_title { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The name of the product variant for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_title")]
		public string Product_variant_title { get; set; }
		
		/// <summary>
		/// The quantity of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsIdLinesReturnLines_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostEcommerceStoresIdCartsIdLinesPostBody
	{
		
		/// <summary>
		/// A unique identifier for the cart line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The price of a cart line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="price")]
		public double Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with the cart line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with the cart line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The quantity of a cart line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public int Quantity { get; set; }
	}
	
	public class PostEcommerceStoresIdCartsIdLinesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostEcommerceStoresIdCartsIdLinesReturn_links[] PostEcommerceStoresIdCartsIdLinesReturn_links { get; set; }
		
		/// <summary>
		/// A unique identifier for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The price of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The name of the product for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_title")]
		public string Product_title { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The name of the product variant for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_title")]
		public string Product_variant_title { get; set; }
		
		/// <summary>
		/// The quantity of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class PostEcommerceStoresIdCartsIdLinesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsIdLinesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdCartsIdLinesIdReturn_links[] GetEcommerceStoresIdCartsIdLinesIdReturn_links { get; set; }
		
		/// <summary>
		/// A unique identifier for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The price of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The name of the product for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_title")]
		public string Product_title { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The name of the product variant for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_title")]
		public string Product_variant_title { get; set; }
		
		/// <summary>
		/// The quantity of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class GetEcommerceStoresIdCartsIdLinesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchEcommerceStoresIdCartsIdLinesIdPatchBody
	{
		
		/// <summary>
		/// The price of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The quantity of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class PatchEcommerceStoresIdCartsIdLinesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchEcommerceStoresIdCartsIdLinesIdReturn_links[] PatchEcommerceStoresIdCartsIdLinesIdReturn_links { get; set; }
		
		/// <summary>
		/// A unique identifier for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The price of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The name of the product for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_title")]
		public string Product_title { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The name of the product variant for the cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_title")]
		public string Product_variant_title { get; set; }
		
		/// <summary>
		/// The quantity of a cart line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class PatchEcommerceStoresIdCartsIdLinesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdCustomersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdCustomersReturn_links[] GetEcommerceStoresIdCustomersReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a customer of a store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customers")]
		public GetEcommerceStoresIdCustomersReturnCustomers[] GetEcommerceStoresIdCustomersReturnCustomers { get; set; }
		
		/// <summary>
		/// The store id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetEcommerceStoresIdCustomersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdCustomersReturnCustomers
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdCustomersReturnCustomers_links[] GetEcommerceStoresIdCustomersReturnCustomers_links { get; set; }
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public GetEcommerceStoresIdCustomersReturnCustomersAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The date and time the customer was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The customer's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
		
		/// <summary>
		/// The customer's total order count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orders_count")]
		public System.Nullable<System.Int32> Orders_count { get; set; }
		
		/// <summary>
		/// The total amount the customer has spent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
		
		/// <summary>
		/// The date and time the customer was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class GetEcommerceStoresIdCustomersReturnCustomers_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdCustomersReturnCustomersAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PostEcommerceStoresIdCustomersPostBody
	{
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PostEcommerceStoresIdCustomersPostBodyAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The customer's email address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for the customer. Limited to 50 characters.
		/// Required
		/// Max length: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public string Id { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public bool Opt_in_status { get; set; }
	}
	
	public class PostEcommerceStoresIdCustomersPostBodyAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PostEcommerceStoresIdCustomersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostEcommerceStoresIdCustomersReturn_links[] PostEcommerceStoresIdCustomersReturn_links { get; set; }
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PostEcommerceStoresIdCustomersReturnAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The date and time the customer was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The customer's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
		
		/// <summary>
		/// The customer's total order count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orders_count")]
		public System.Nullable<System.Int32> Orders_count { get; set; }
		
		/// <summary>
		/// The total amount the customer has spent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
		
		/// <summary>
		/// The date and time the customer was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PostEcommerceStoresIdCustomersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostEcommerceStoresIdCustomersReturnAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class GetEcommerceStoresIdCustomersIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdCustomersIdReturn_links[] GetEcommerceStoresIdCustomersIdReturn_links { get; set; }
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public GetEcommerceStoresIdCustomersIdReturnAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The date and time the customer was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The customer's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
		
		/// <summary>
		/// The customer's total order count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orders_count")]
		public System.Nullable<System.Int32> Orders_count { get; set; }
		
		/// <summary>
		/// The total amount the customer has spent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
		
		/// <summary>
		/// The date and time the customer was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class GetEcommerceStoresIdCustomersIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdCustomersIdReturnAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PatchEcommerceStoresIdCustomersIdPatchBody
	{
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PatchEcommerceStoresIdCustomersIdPatchBodyAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
	}
	
	public class PatchEcommerceStoresIdCustomersIdPatchBodyAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PatchEcommerceStoresIdCustomersIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchEcommerceStoresIdCustomersIdReturn_links[] PatchEcommerceStoresIdCustomersIdReturn_links { get; set; }
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PatchEcommerceStoresIdCustomersIdReturnAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The date and time the customer was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The customer's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
		
		/// <summary>
		/// The customer's total order count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orders_count")]
		public System.Nullable<System.Int32> Orders_count { get; set; }
		
		/// <summary>
		/// The total amount the customer has spent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
		
		/// <summary>
		/// The date and time the customer was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PatchEcommerceStoresIdCustomersIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchEcommerceStoresIdCustomersIdReturnAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PutEcommerceStoresIdCustomersIdPutBody
	{
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PutEcommerceStoresIdCustomersIdPutBodyAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The customer's email address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for the customer. Limited to 50 characters.
		/// Required
		/// Max length: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public string Id { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public bool Opt_in_status { get; set; }
	}
	
	public class PutEcommerceStoresIdCustomersIdPutBodyAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PutEcommerceStoresIdCustomersIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PutEcommerceStoresIdCustomersIdReturn_links[] PutEcommerceStoresIdCustomersIdReturn_links { get; set; }
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PutEcommerceStoresIdCustomersIdReturnAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The date and time the customer was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The customer's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
		
		/// <summary>
		/// The customer's total order count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orders_count")]
		public System.Nullable<System.Int32> Orders_count { get; set; }
		
		/// <summary>
		/// The total amount the customer has spent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
		
		/// <summary>
		/// The date and time the customer was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PutEcommerceStoresIdCustomersIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PutEcommerceStoresIdCustomersIdReturnAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdOrdersReturn_links[] GetEcommerceStoresIdOrdersReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing an order in a store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orders")]
		public GetEcommerceStoresIdOrdersReturnOrders[] GetEcommerceStoresIdOrdersReturnOrders { get; set; }
		
		/// <summary>
		/// The unique identifier for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersReturnOrders
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdOrdersReturnOrders_links[] GetEcommerceStoresIdOrdersReturnOrders_links { get; set; }
		
		/// <summary>
		/// The billing address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billing_address")]
		public GetEcommerceStoresIdOrdersReturnOrdersBilling_address Billing_address { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the campaign associated with an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The date and time the order was cancelled in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cancelled_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Cancelled_at_foreign { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// Information about a specific customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public GetEcommerceStoresIdOrdersReturnOrdersCustomer Customer { get; set; }
		
		/// <summary>
		/// The total amount of the discounts to be applied to the price of the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount_total")]
		public System.Nullable<System.Double> Discount_total { get; set; }
		
		/// <summary>
		/// The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="financial_status")]
		public string Financial_status { get; set; }
		
		/// <summary>
		/// The fulfillment status for the order. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fulfillment_status")]
		public string Fulfillment_status { get; set; }
		
		/// <summary>
		/// A unique identifier for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL for the page where the buyer landed when entering the shop.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="landing_site")]
		public string Landing_site { get; set; }
		
		/// <summary>
		/// An array of the order's line items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lines")]
		public GetEcommerceStoresIdOrdersReturnOrdersLines[] GetEcommerceStoresIdOrdersReturnOrdersLines { get; set; }
		
		/// <summary>
		/// The order total associated with an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_total")]
		public System.Nullable<System.Double> Order_total { get; set; }
		
		/// <summary>
		/// The URL for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_url")]
		public string Order_url { get; set; }
		
		/// <summary>
		/// The outreach associated with this order. For example, an email campaign or Facebook ad.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outreach")]
		public GetEcommerceStoresIdOrdersReturnOrdersOutreach Outreach { get; set; }
		
		/// <summary>
		/// The date and time the order was processed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processed_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Processed_at_foreign { get; set; }
		
		/// <summary>
		/// The promo codes applied on the order
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promos")]
		public GetEcommerceStoresIdOrdersReturnOrdersPromos[] GetEcommerceStoresIdOrdersReturnOrdersPromos { get; set; }
		
		/// <summary>
		/// The shipping address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipping_address")]
		public GetEcommerceStoresIdOrdersReturnOrdersShipping_address Shipping_address { get; set; }
		
		/// <summary>
		/// The shipping total for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipping_total")]
		public System.Nullable<System.Double> Shipping_total { get; set; }
		
		/// <summary>
		/// The unique identifier for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The tax total associated with an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_total")]
		public System.Nullable<System.Double> Tax_total { get; set; }
		
		/// <summary>
		/// The tracking carrier associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_carrier")]
		public string Tracking_carrier { get; set; }
		
		/// <summary>
		/// The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_code")]
		public GetEcommerceOrdersReturnOrdersTracking_code Tracking_code { get; set; }
		
		/// <summary>
		/// The tracking number associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_number")]
		public string Tracking_number { get; set; }
		
		/// <summary>
		/// The tracking URL associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_url")]
		public string Tracking_url { get; set; }
		
		/// <summary>
		/// The date and time the order was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersReturnOrders_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersReturnOrdersBilling_address
	{
		
		/// <summary>
		/// The billing address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company associated with the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The country in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the country in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude for the billing address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude for the billing address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The name associated with an order's billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The phone number for the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The postal or zip code in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The state or normalized province in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the province or state in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersReturnOrdersCustomer
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdOrdersReturnOrdersCustomer_links[] GetEcommerceStoresIdOrdersReturnOrdersCustomer_links { get; set; }
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public GetEcommerceStoresIdOrdersReturnOrdersCustomerAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The date and time the customer was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The customer's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
		
		/// <summary>
		/// The customer's total order count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orders_count")]
		public System.Nullable<System.Int32> Orders_count { get; set; }
		
		/// <summary>
		/// The total amount the customer has spent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
		
		/// <summary>
		/// The date and time the customer was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersReturnOrdersCustomer_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersReturnOrdersCustomerAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersReturnOrdersLines
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdOrdersReturnOrdersLines_links[] GetEcommerceStoresIdOrdersReturnOrdersLines_links { get; set; }
		
		/// <summary>
		/// The total discount amount applied to a line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount")]
		public System.Nullable<System.Double> Discount { get; set; }
		
		/// <summary>
		/// A unique identifier for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The order line item price.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The name of the product for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_title")]
		public string Product_title { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The name of the product variant for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_title")]
		public string Product_variant_title { get; set; }
		
		/// <summary>
		/// The order line item quantity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersReturnOrdersLines_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersReturnOrdersOutreach
	{
		
		/// <summary>
		/// A unique identifier for the outreach. Can be an email campaign ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name for the outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The date and time the Outreach was published in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_time")]
		public System.Nullable<System.DateTimeOffset> Published_time { get; set; }
		
		/// <summary>
		/// The type of the outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersReturnOrdersPromos
	{
		
		/// <summary>
		/// The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount_discounted")]
		public System.Nullable<System.Double> Amount_discounted { get; set; }
		
		/// <summary>
		/// The Promo Code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Type of discount. For free shipping set type to fixed
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GetEcommerceStoresIdOrdersReturnOrdersPromosType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetEcommerceStoresIdOrdersReturnOrdersPromosType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fixed")]
		_fixed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		percentage = 1,
	}
	
	public class GetEcommerceStoresIdOrdersReturnOrdersShipping_address
	{
		
		/// <summary>
		/// The shipping address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company associated with an order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The country in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the country in the shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude for the shipping address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude for the shipping address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The name associated with an order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The phone number for the order's shipping address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The postal or zip code in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The state or normalized province in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the province or state the order's shipping address is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersPostBody
	{
		
		/// <summary>
		/// The billing address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billing_address")]
		public PostEcommerceStoresIdOrdersPostBodyBilling_address Billing_address { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the campaign for an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The date and time the order was cancelled in ISO 8601 format. Note: passing a value for this parameter will cancel the order being created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cancelled_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Cancelled_at_foreign { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// Information about a specific customer. For existing customers include only the `id` parameter in the `customer` object body.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public PostEcommerceStoresIdOrdersPostBodyCustomer Customer { get; set; }
		
		/// <summary>
		/// The total amount of the discounts to be applied to the price of the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount_total")]
		public System.Nullable<System.Double> Discount_total { get; set; }
		
		/// <summary>
		/// The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="financial_status")]
		public string Financial_status { get; set; }
		
		/// <summary>
		/// The fulfillment status for the order. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fulfillment_status")]
		public string Fulfillment_status { get; set; }
		
		/// <summary>
		/// A unique identifier for the order.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL for the page where the buyer landed when entering the shop.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="landing_site")]
		public string Landing_site { get; set; }
		
		/// <summary>
		/// An array of the order's line items.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lines")]
		public PostEcommerceStoresIdOrdersPostBodyLines[] PostEcommerceStoresIdOrdersPostBodyLines { get; set; }
		
		/// <summary>
		/// The total for the order.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="order_total")]
		public double Order_total { get; set; }
		
		/// <summary>
		/// The URL for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_url")]
		public string Order_url { get; set; }
		
		/// <summary>
		/// The outreach associated with this order. For example, an email campaign or Facebook ad.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outreach")]
		public PostEcommerceStoresIdOrdersPostBodyOutreach Outreach { get; set; }
		
		/// <summary>
		/// The date and time the order was processed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processed_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Processed_at_foreign { get; set; }
		
		/// <summary>
		/// The promo codes applied on the order
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promos")]
		public PostEcommerceStoresIdOrdersPostBodyPromos[] PostEcommerceStoresIdOrdersPostBodyPromos { get; set; }
		
		/// <summary>
		/// The shipping address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipping_address")]
		public PostEcommerceStoresIdOrdersPostBodyShipping_address Shipping_address { get; set; }
		
		/// <summary>
		/// The shipping total for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipping_total")]
		public System.Nullable<System.Double> Shipping_total { get; set; }
		
		/// <summary>
		/// The tax total for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_total")]
		public System.Nullable<System.Double> Tax_total { get; set; }
		
		/// <summary>
		/// The tracking carrier associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_carrier")]
		public string Tracking_carrier { get; set; }
		
		/// <summary>
		/// The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_code")]
		public GetEcommerceOrdersReturnOrdersTracking_code Tracking_code { get; set; }
		
		/// <summary>
		/// The tracking number associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_number")]
		public string Tracking_number { get; set; }
		
		/// <summary>
		/// The tracking URL associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_url")]
		public string Tracking_url { get; set; }
		
		/// <summary>
		/// The date and time the order was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersPostBodyBilling_address
	{
		
		/// <summary>
		/// The billing address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company associated with the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The country in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the country in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude for the billing address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude for the billing address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The name associated with the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The phone number for the billing address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The postal or zip code in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The state or normalized province in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the province in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersPostBodyCustomer
	{
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PostEcommerceStoresIdOrdersPostBodyCustomerAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The customer's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for the customer. Limited to 50 characters.
		/// Required
		/// Max length: 50
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		[System.ComponentModel.DataAnnotations.MaxLength(50)]
		public string Id { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersPostBodyCustomerAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersPostBodyLines
	{
		
		/// <summary>
		/// The total discount amount applied to this line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount")]
		public System.Nullable<System.Double> Discount { get; set; }
		
		/// <summary>
		/// A unique identifier for the order line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The price of an order line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="price")]
		public double Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with the order line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with the order line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The quantity of an order line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public int Quantity { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersPostBodyOutreach
	{
		
		/// <summary>
		/// A unique identifier for the outreach. Can be an email campaign ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersPostBodyPromos
	{
		
		/// <summary>
		/// The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount_discounted")]
		public double Amount_discounted { get; set; }
		
		/// <summary>
		/// The Promo Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Type of discount. For free shipping set type to fixed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public PostEcommerceStoresIdOrdersPostBodyPromosType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostEcommerceStoresIdOrdersPostBodyPromosType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fixed")]
		_fixed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		percentage = 1,
	}
	
	public class PostEcommerceStoresIdOrdersPostBodyShipping_address
	{
		
		/// <summary>
		/// The shipping address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company associated with the shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The country in the shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the country in the shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude for the shipping address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude for the shipping address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The name associated with an order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The phone number for the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The postal or zip code in the shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The state or normalized province in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the province or state in the shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostEcommerceStoresIdOrdersReturn_links[] PostEcommerceStoresIdOrdersReturn_links { get; set; }
		
		/// <summary>
		/// The billing address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billing_address")]
		public PostEcommerceStoresIdOrdersReturnBilling_address Billing_address { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the campaign associated with an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The date and time the order was cancelled in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cancelled_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Cancelled_at_foreign { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// Information about a specific customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public PostEcommerceStoresIdOrdersReturnCustomer Customer { get; set; }
		
		/// <summary>
		/// The total amount of the discounts to be applied to the price of the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount_total")]
		public System.Nullable<System.Double> Discount_total { get; set; }
		
		/// <summary>
		/// The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="financial_status")]
		public string Financial_status { get; set; }
		
		/// <summary>
		/// The fulfillment status for the order. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fulfillment_status")]
		public string Fulfillment_status { get; set; }
		
		/// <summary>
		/// A unique identifier for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL for the page where the buyer landed when entering the shop.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="landing_site")]
		public string Landing_site { get; set; }
		
		/// <summary>
		/// An array of the order's line items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lines")]
		public PostEcommerceStoresIdOrdersReturnLines[] PostEcommerceStoresIdOrdersReturnLines { get; set; }
		
		/// <summary>
		/// The order total associated with an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_total")]
		public System.Nullable<System.Double> Order_total { get; set; }
		
		/// <summary>
		/// The URL for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_url")]
		public string Order_url { get; set; }
		
		/// <summary>
		/// The outreach associated with this order. For example, an email campaign or Facebook ad.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outreach")]
		public PostEcommerceStoresIdOrdersReturnOutreach Outreach { get; set; }
		
		/// <summary>
		/// The date and time the order was processed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processed_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Processed_at_foreign { get; set; }
		
		/// <summary>
		/// The promo codes applied on the order
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promos")]
		public PostEcommerceStoresIdOrdersReturnPromos[] PostEcommerceStoresIdOrdersReturnPromos { get; set; }
		
		/// <summary>
		/// The shipping address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipping_address")]
		public PostEcommerceStoresIdOrdersReturnShipping_address Shipping_address { get; set; }
		
		/// <summary>
		/// The shipping total for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipping_total")]
		public System.Nullable<System.Double> Shipping_total { get; set; }
		
		/// <summary>
		/// The unique identifier for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The tax total associated with an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_total")]
		public System.Nullable<System.Double> Tax_total { get; set; }
		
		/// <summary>
		/// The tracking carrier associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_carrier")]
		public string Tracking_carrier { get; set; }
		
		/// <summary>
		/// The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_code")]
		public GetEcommerceOrdersReturnOrdersTracking_code Tracking_code { get; set; }
		
		/// <summary>
		/// The tracking number associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_number")]
		public string Tracking_number { get; set; }
		
		/// <summary>
		/// The tracking URL associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_url")]
		public string Tracking_url { get; set; }
		
		/// <summary>
		/// The date and time the order was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersReturnBilling_address
	{
		
		/// <summary>
		/// The billing address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company associated with the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The country in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the country in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude for the billing address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude for the billing address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The name associated with an order's billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The phone number for the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The postal or zip code in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The state or normalized province in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the province or state in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersReturnCustomer
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostEcommerceStoresIdOrdersReturnCustomer_links[] PostEcommerceStoresIdOrdersReturnCustomer_links { get; set; }
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PostEcommerceStoresIdOrdersReturnCustomerAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The date and time the customer was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The customer's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
		
		/// <summary>
		/// The customer's total order count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orders_count")]
		public System.Nullable<System.Int32> Orders_count { get; set; }
		
		/// <summary>
		/// The total amount the customer has spent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
		
		/// <summary>
		/// The date and time the customer was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersReturnCustomer_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersReturnCustomerAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersReturnLines
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostEcommerceStoresIdOrdersReturnLines_links[] PostEcommerceStoresIdOrdersReturnLines_links { get; set; }
		
		/// <summary>
		/// The total discount amount applied to a line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount")]
		public System.Nullable<System.Double> Discount { get; set; }
		
		/// <summary>
		/// A unique identifier for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The order line item price.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The name of the product for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_title")]
		public string Product_title { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The name of the product variant for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_title")]
		public string Product_variant_title { get; set; }
		
		/// <summary>
		/// The order line item quantity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersReturnLines_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersReturnOutreach
	{
		
		/// <summary>
		/// A unique identifier for the outreach. Can be an email campaign ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name for the outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The date and time the Outreach was published in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_time")]
		public System.Nullable<System.DateTimeOffset> Published_time { get; set; }
		
		/// <summary>
		/// The type of the outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersReturnPromos
	{
		
		/// <summary>
		/// The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount_discounted")]
		public System.Nullable<System.Double> Amount_discounted { get; set; }
		
		/// <summary>
		/// The Promo Code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Type of discount. For free shipping set type to fixed
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<PostEcommerceStoresIdOrdersReturnPromosType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostEcommerceStoresIdOrdersReturnPromosType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fixed")]
		_fixed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		percentage = 1,
	}
	
	public class PostEcommerceStoresIdOrdersReturnShipping_address
	{
		
		/// <summary>
		/// The shipping address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company associated with an order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The country in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the country in the shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude for the shipping address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude for the shipping address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The name associated with an order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The phone number for the order's shipping address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The postal or zip code in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The state or normalized province in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the province or state the order's shipping address is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdOrdersIdReturn_links[] GetEcommerceStoresIdOrdersIdReturn_links { get; set; }
		
		/// <summary>
		/// The billing address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billing_address")]
		public GetEcommerceStoresIdOrdersIdReturnBilling_address Billing_address { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the campaign associated with an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The date and time the order was cancelled in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cancelled_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Cancelled_at_foreign { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// Information about a specific customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public GetEcommerceStoresIdOrdersIdReturnCustomer Customer { get; set; }
		
		/// <summary>
		/// The total amount of the discounts to be applied to the price of the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount_total")]
		public System.Nullable<System.Double> Discount_total { get; set; }
		
		/// <summary>
		/// The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="financial_status")]
		public string Financial_status { get; set; }
		
		/// <summary>
		/// The fulfillment status for the order. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fulfillment_status")]
		public string Fulfillment_status { get; set; }
		
		/// <summary>
		/// A unique identifier for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL for the page where the buyer landed when entering the shop.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="landing_site")]
		public string Landing_site { get; set; }
		
		/// <summary>
		/// An array of the order's line items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lines")]
		public GetEcommerceStoresIdOrdersIdReturnLines[] GetEcommerceStoresIdOrdersIdReturnLines { get; set; }
		
		/// <summary>
		/// The order total associated with an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_total")]
		public System.Nullable<System.Double> Order_total { get; set; }
		
		/// <summary>
		/// The URL for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_url")]
		public string Order_url { get; set; }
		
		/// <summary>
		/// The outreach associated with this order. For example, an email campaign or Facebook ad.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outreach")]
		public GetEcommerceStoresIdOrdersIdReturnOutreach Outreach { get; set; }
		
		/// <summary>
		/// The date and time the order was processed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processed_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Processed_at_foreign { get; set; }
		
		/// <summary>
		/// The promo codes applied on the order
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promos")]
		public GetEcommerceStoresIdOrdersIdReturnPromos[] GetEcommerceStoresIdOrdersIdReturnPromos { get; set; }
		
		/// <summary>
		/// The shipping address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipping_address")]
		public GetEcommerceStoresIdOrdersIdReturnShipping_address Shipping_address { get; set; }
		
		/// <summary>
		/// The shipping total for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipping_total")]
		public System.Nullable<System.Double> Shipping_total { get; set; }
		
		/// <summary>
		/// The unique identifier for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The tax total associated with an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_total")]
		public System.Nullable<System.Double> Tax_total { get; set; }
		
		/// <summary>
		/// The tracking carrier associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_carrier")]
		public string Tracking_carrier { get; set; }
		
		/// <summary>
		/// The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_code")]
		public GetEcommerceOrdersReturnOrdersTracking_code Tracking_code { get; set; }
		
		/// <summary>
		/// The tracking number associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_number")]
		public string Tracking_number { get; set; }
		
		/// <summary>
		/// The tracking URL associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_url")]
		public string Tracking_url { get; set; }
		
		/// <summary>
		/// The date and time the order was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersIdReturnBilling_address
	{
		
		/// <summary>
		/// The billing address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company associated with the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The country in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the country in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude for the billing address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude for the billing address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The name associated with an order's billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The phone number for the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The postal or zip code in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The state or normalized province in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the province or state in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersIdReturnCustomer
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdOrdersIdReturnCustomer_links[] GetEcommerceStoresIdOrdersIdReturnCustomer_links { get; set; }
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public GetEcommerceStoresIdOrdersIdReturnCustomerAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The date and time the customer was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The customer's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
		
		/// <summary>
		/// The customer's total order count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orders_count")]
		public System.Nullable<System.Int32> Orders_count { get; set; }
		
		/// <summary>
		/// The total amount the customer has spent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
		
		/// <summary>
		/// The date and time the customer was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersIdReturnCustomer_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersIdReturnCustomerAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersIdReturnLines
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdOrdersIdReturnLines_links[] GetEcommerceStoresIdOrdersIdReturnLines_links { get; set; }
		
		/// <summary>
		/// The total discount amount applied to a line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount")]
		public System.Nullable<System.Double> Discount { get; set; }
		
		/// <summary>
		/// A unique identifier for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The order line item price.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The name of the product for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_title")]
		public string Product_title { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The name of the product variant for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_title")]
		public string Product_variant_title { get; set; }
		
		/// <summary>
		/// The order line item quantity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersIdReturnLines_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersIdReturnOutreach
	{
		
		/// <summary>
		/// A unique identifier for the outreach. Can be an email campaign ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name for the outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The date and time the Outreach was published in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_time")]
		public System.Nullable<System.DateTimeOffset> Published_time { get; set; }
		
		/// <summary>
		/// The type of the outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersIdReturnPromos
	{
		
		/// <summary>
		/// The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount_discounted")]
		public System.Nullable<System.Double> Amount_discounted { get; set; }
		
		/// <summary>
		/// The Promo Code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Type of discount. For free shipping set type to fixed
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GetEcommerceStoresIdOrdersIdReturnPromosType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetEcommerceStoresIdOrdersIdReturnPromosType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fixed")]
		_fixed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		percentage = 1,
	}
	
	public class GetEcommerceStoresIdOrdersIdReturnShipping_address
	{
		
		/// <summary>
		/// The shipping address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company associated with an order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The country in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the country in the shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude for the shipping address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude for the shipping address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The name associated with an order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The phone number for the order's shipping address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The postal or zip code in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The state or normalized province in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the province or state the order's shipping address is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdPatchBody
	{
		
		/// <summary>
		/// The billing address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billing_address")]
		public PatchEcommerceStoresIdOrdersIdPatchBodyBilling_address Billing_address { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the campaign associated with an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The date and time the order was cancelled in ISO 8601 format. Note: passing a value for this parameter will cancel the order being edited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cancelled_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Cancelled_at_foreign { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public PatchEcommerceStoresIdOrdersIdPatchBodyCustomer Customer { get; set; }
		
		/// <summary>
		/// The total amount of the discounts to be applied to the price of the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount_total")]
		public System.Nullable<System.Double> Discount_total { get; set; }
		
		/// <summary>
		/// The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="financial_status")]
		public string Financial_status { get; set; }
		
		/// <summary>
		/// The fulfillment status for the order. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fulfillment_status")]
		public string Fulfillment_status { get; set; }
		
		/// <summary>
		/// The URL for the page where the buyer landed when entering the shop.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="landing_site")]
		public string Landing_site { get; set; }
		
		/// <summary>
		/// An array of the order's line items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lines")]
		public PatchEcommerceStoresIdOrdersIdPatchBodyLines[] PatchEcommerceStoresIdOrdersIdPatchBodyLines { get; set; }
		
		/// <summary>
		/// The order total associated with an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_total")]
		public System.Nullable<System.Double> Order_total { get; set; }
		
		/// <summary>
		/// The URL for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_url")]
		public string Order_url { get; set; }
		
		/// <summary>
		/// The outreach associated with this order. For example, an email campaign or Facebook ad.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outreach")]
		public PatchEcommerceStoresIdOrdersIdPatchBodyOutreach Outreach { get; set; }
		
		/// <summary>
		/// The date and time the order was processed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processed_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Processed_at_foreign { get; set; }
		
		/// <summary>
		/// The promo codes applied on the order. Note: Patch will completely replace the value of promos with the new one provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promos")]
		public PatchEcommerceStoresIdOrdersIdPatchBodyPromos[] PatchEcommerceStoresIdOrdersIdPatchBodyPromos { get; set; }
		
		/// <summary>
		/// The shipping address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipping_address")]
		public PatchEcommerceStoresIdOrdersIdPatchBodyShipping_address Shipping_address { get; set; }
		
		/// <summary>
		/// The shipping total for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipping_total")]
		public System.Nullable<System.Double> Shipping_total { get; set; }
		
		/// <summary>
		/// The tax total associated with an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_total")]
		public System.Nullable<System.Double> Tax_total { get; set; }
		
		/// <summary>
		/// The tracking carrier associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_carrier")]
		public string Tracking_carrier { get; set; }
		
		/// <summary>
		/// The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_code")]
		public GetEcommerceOrdersReturnOrdersTracking_code Tracking_code { get; set; }
		
		/// <summary>
		/// The tracking number associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_number")]
		public string Tracking_number { get; set; }
		
		/// <summary>
		/// The tracking URL associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_url")]
		public string Tracking_url { get; set; }
		
		/// <summary>
		/// The date and time the order was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdPatchBodyBilling_address
	{
		
		/// <summary>
		/// The billing address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company associated with the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The country in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the country in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude for the billing address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude for the billing address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The name associated with an order's billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The phone number for the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The postal or zip code in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The state or normalized province in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the province or state in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdPatchBodyCustomer
	{
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PatchEcommerceStoresIdOrdersIdPatchBodyCustomerAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdPatchBodyCustomerAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdPatchBodyLines
	{
		
		/// <summary>
		/// The total discount amount applied to this line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount")]
		public System.Nullable<System.Double> Discount { get; set; }
		
		/// <summary>
		/// The price of an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with the order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with the order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The quantity of an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdPatchBodyOutreach
	{
		
		/// <summary>
		/// A unique identifier for the outreach. Can be an email campaign ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdPatchBodyPromos
	{
		
		/// <summary>
		/// The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount_discounted")]
		public double Amount_discounted { get; set; }
		
		/// <summary>
		/// The Promo Code
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Type of discount. For free shipping set type to fixed
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public PatchEcommerceStoresIdOrdersIdPatchBodyPromosType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PatchEcommerceStoresIdOrdersIdPatchBodyPromosType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fixed")]
		_fixed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		percentage = 1,
	}
	
	public class PatchEcommerceStoresIdOrdersIdPatchBodyShipping_address
	{
		
		/// <summary>
		/// The shipping address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company associated with an order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The country in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the country in the shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude for the shipping address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude for the shipping address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The name associated with an order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The phone number for the order's shipping address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The postal or zip code in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The state or normalized province in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the province or state the order's shipping address is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchEcommerceStoresIdOrdersIdReturn_links[] PatchEcommerceStoresIdOrdersIdReturn_links { get; set; }
		
		/// <summary>
		/// The billing address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="billing_address")]
		public PatchEcommerceStoresIdOrdersIdReturnBilling_address Billing_address { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies the campaign associated with an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The date and time the order was cancelled in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cancelled_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Cancelled_at_foreign { get; set; }
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// Information about a specific customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customer")]
		public PatchEcommerceStoresIdOrdersIdReturnCustomer Customer { get; set; }
		
		/// <summary>
		/// The total amount of the discounts to be applied to the price of the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount_total")]
		public System.Nullable<System.Double> Discount_total { get; set; }
		
		/// <summary>
		/// The order status. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="financial_status")]
		public string Financial_status { get; set; }
		
		/// <summary>
		/// The fulfillment status for the order. Use this parameter to trigger [Order Notifications](https://mailchimp.com/developer/marketing/docs/e-commerce/#order-notifications).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fulfillment_status")]
		public string Fulfillment_status { get; set; }
		
		/// <summary>
		/// A unique identifier for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL for the page where the buyer landed when entering the shop.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="landing_site")]
		public string Landing_site { get; set; }
		
		/// <summary>
		/// An array of the order's line items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lines")]
		public PatchEcommerceStoresIdOrdersIdReturnLines[] PatchEcommerceStoresIdOrdersIdReturnLines { get; set; }
		
		/// <summary>
		/// The order total associated with an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_total")]
		public System.Nullable<System.Double> Order_total { get; set; }
		
		/// <summary>
		/// The URL for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_url")]
		public string Order_url { get; set; }
		
		/// <summary>
		/// The outreach associated with this order. For example, an email campaign or Facebook ad.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outreach")]
		public PatchEcommerceStoresIdOrdersIdReturnOutreach Outreach { get; set; }
		
		/// <summary>
		/// The date and time the order was processed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="processed_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Processed_at_foreign { get; set; }
		
		/// <summary>
		/// The promo codes applied on the order
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promos")]
		public PatchEcommerceStoresIdOrdersIdReturnPromos[] PatchEcommerceStoresIdOrdersIdReturnPromos { get; set; }
		
		/// <summary>
		/// The shipping address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipping_address")]
		public PatchEcommerceStoresIdOrdersIdReturnShipping_address Shipping_address { get; set; }
		
		/// <summary>
		/// The shipping total for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shipping_total")]
		public System.Nullable<System.Double> Shipping_total { get; set; }
		
		/// <summary>
		/// The unique identifier for the store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The tax total associated with an order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tax_total")]
		public System.Nullable<System.Double> Tax_total { get; set; }
		
		/// <summary>
		/// The tracking carrier associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_carrier")]
		public string Tracking_carrier { get; set; }
		
		/// <summary>
		/// The Mailchimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_code")]
		public GetEcommerceOrdersReturnOrdersTracking_code Tracking_code { get; set; }
		
		/// <summary>
		/// The tracking number associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_number")]
		public string Tracking_number { get; set; }
		
		/// <summary>
		/// The tracking URL associated with the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking_url")]
		public string Tracking_url { get; set; }
		
		/// <summary>
		/// The date and time the order was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdReturnBilling_address
	{
		
		/// <summary>
		/// The billing address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company associated with the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The country in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the country in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude for the billing address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude for the billing address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The name associated with an order's billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The phone number for the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The postal or zip code in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The state or normalized province in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the province or state in the billing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdReturnCustomer
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchEcommerceStoresIdOrdersIdReturnCustomer_links[] PatchEcommerceStoresIdOrdersIdReturnCustomer_links { get; set; }
		
		/// <summary>
		/// The customer's address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address")]
		public PatchEcommerceStoresIdOrdersIdReturnCustomerAddress Address { get; set; }
		
		/// <summary>
		/// The customer's company.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The date and time the customer was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The customer's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The customer's first name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_name")]
		public string First_name { get; set; }
		
		/// <summary>
		/// A unique identifier for the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The customer's last name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_name")]
		public string Last_name { get; set; }
		
		/// <summary>
		/// The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing Mailchimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your Mailchimp list [will be added as `Transactional` members](https://mailchimp.com/developer/marketing/docs/e-commerce/#customers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opt_in_status")]
		public System.Nullable<System.Boolean> Opt_in_status { get; set; }
		
		/// <summary>
		/// The customer's total order count.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orders_count")]
		public System.Nullable<System.Int32> Orders_count { get; set; }
		
		/// <summary>
		/// The total amount the customer has spent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
		
		/// <summary>
		/// The date and time the customer was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdReturnCustomer_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdReturnCustomerAddress
	{
		
		/// <summary>
		/// The mailing address of the customer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the customer's mailing address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city the customer is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The customer's postal or zip code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The customer's state name or normalized province.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the customer's province or state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdReturnLines
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchEcommerceStoresIdOrdersIdReturnLines_links[] PatchEcommerceStoresIdOrdersIdReturnLines_links { get; set; }
		
		/// <summary>
		/// The total discount amount applied to a line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount")]
		public System.Nullable<System.Double> Discount { get; set; }
		
		/// <summary>
		/// A unique identifier for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The order line item price.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The name of the product for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_title")]
		public string Product_title { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The name of the product variant for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_title")]
		public string Product_variant_title { get; set; }
		
		/// <summary>
		/// The order line item quantity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdReturnLines_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdReturnOutreach
	{
		
		/// <summary>
		/// A unique identifier for the outreach. Can be an email campaign ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name for the outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The date and time the Outreach was published in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_time")]
		public System.Nullable<System.DateTimeOffset> Published_time { get; set; }
		
		/// <summary>
		/// The type of the outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdReturnPromos
	{
		
		/// <summary>
		/// The amount of discount applied on the total price. For example if the total cost was $100 and the customer paid $95.5, amount_discounted will be 4.5 For free shipping set amount_discounted to 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount_discounted")]
		public System.Nullable<System.Double> Amount_discounted { get; set; }
		
		/// <summary>
		/// The Promo Code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Type of discount. For free shipping set type to fixed
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<PatchEcommerceStoresIdOrdersIdReturnPromosType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PatchEcommerceStoresIdOrdersIdReturnPromosType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fixed")]
		_fixed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		percentage = 1,
	}
	
	public class PatchEcommerceStoresIdOrdersIdReturnShipping_address
	{
		
		/// <summary>
		/// The shipping address for the order.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// An additional field for the shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company associated with an order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// The country in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The two-letter code for the country in the shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The latitude for the shipping address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The longitude for the shipping address location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The name associated with an order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The phone number for the order's shipping address
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The postal or zip code in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="postal_code")]
		public string Postal_code { get; set; }
		
		/// <summary>
		/// The state or normalized province in the order's shipping address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province")]
		public string Province { get; set; }
		
		/// <summary>
		/// The two-letter code for the province or state the order's shipping address is located in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="province_code")]
		public string Province_code { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersIdLinesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdOrdersIdLinesReturn_links[] GetEcommerceStoresIdOrdersIdLinesReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing an order's line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lines")]
		public GetEcommerceStoresIdOrdersIdLinesReturnLines[] GetEcommerceStoresIdOrdersIdLinesReturnLines { get; set; }
		
		/// <summary>
		/// The order id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="order_id")]
		public string Order_id { get; set; }
		
		/// <summary>
		/// The store id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersIdLinesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersIdLinesReturnLines
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdOrdersIdLinesReturnLines_links[] GetEcommerceStoresIdOrdersIdLinesReturnLines_links { get; set; }
		
		/// <summary>
		/// The total discount amount applied to a line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount")]
		public System.Nullable<System.Double> Discount { get; set; }
		
		/// <summary>
		/// A unique identifier for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The order line item price.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The name of the product for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_title")]
		public string Product_title { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The name of the product variant for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_title")]
		public string Product_variant_title { get; set; }
		
		/// <summary>
		/// The order line item quantity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersIdLinesReturnLines_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersIdLinesPostBody
	{
		
		/// <summary>
		/// The total discount amount applied to this line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount")]
		public System.Nullable<System.Double> Discount { get; set; }
		
		/// <summary>
		/// A unique identifier for the order line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The price of an order line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="price")]
		public double Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with the order line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with the order line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The quantity of an order line item.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public int Quantity { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersIdLinesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostEcommerceStoresIdOrdersIdLinesReturn_links[] PostEcommerceStoresIdOrdersIdLinesReturn_links { get; set; }
		
		/// <summary>
		/// The total discount amount applied to a line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount")]
		public System.Nullable<System.Double> Discount { get; set; }
		
		/// <summary>
		/// A unique identifier for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The order line item price.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The name of the product for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_title")]
		public string Product_title { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The name of the product variant for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_title")]
		public string Product_variant_title { get; set; }
		
		/// <summary>
		/// The order line item quantity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class PostEcommerceStoresIdOrdersIdLinesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersIdLinesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdOrdersIdLinesIdReturn_links[] GetEcommerceStoresIdOrdersIdLinesIdReturn_links { get; set; }
		
		/// <summary>
		/// The total discount amount applied to a line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount")]
		public System.Nullable<System.Double> Discount { get; set; }
		
		/// <summary>
		/// A unique identifier for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The order line item price.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The name of the product for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_title")]
		public string Product_title { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The name of the product variant for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_title")]
		public string Product_variant_title { get; set; }
		
		/// <summary>
		/// The order line item quantity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class GetEcommerceStoresIdOrdersIdLinesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdLinesIdPatchBody
	{
		
		/// <summary>
		/// The total discount amount applied to this line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount")]
		public System.Nullable<System.Double> Discount { get; set; }
		
		/// <summary>
		/// The price of an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with the order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with the order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The quantity of an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdLinesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchEcommerceStoresIdOrdersIdLinesIdReturn_links[] PatchEcommerceStoresIdOrdersIdLinesIdReturn_links { get; set; }
		
		/// <summary>
		/// The total discount amount applied to a line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="discount")]
		public System.Nullable<System.Double> Discount { get; set; }
		
		/// <summary>
		/// A unique identifier for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The order line item price.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// A unique identifier for the product associated with an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The name of the product for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_title")]
		public string Product_title { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant associated with an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_id")]
		public string Product_variant_id { get; set; }
		
		/// <summary>
		/// The name of the product variant for an order line item.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_variant_title")]
		public string Product_variant_title { get; set; }
		
		/// <summary>
		/// The order line item quantity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="quantity")]
		public System.Nullable<System.Int32> Quantity { get; set; }
	}
	
	public class PatchEcommerceStoresIdOrdersIdLinesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdProductsReturn_links[] GetEcommerceStoresIdProductsReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a store product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="products")]
		public GetEcommerceStoresIdProductsReturnProducts[] GetEcommerceStoresIdProductsReturnProducts { get; set; }
		
		/// <summary>
		/// The store id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsReturnProducts
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdProductsReturnProducts_links[] GetEcommerceStoresIdProductsReturnProducts_links { get; set; }
		
		/// <summary>
		/// The currency code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The description of a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The handle of a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="handle")]
		public string Handle { get; set; }
		
		/// <summary>
		/// A unique identifier for the product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// An array of the product's images.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="images")]
		public GetEcommerceStoresIdProductsReturnProductsImages[] GetEcommerceStoresIdProductsReturnProductsImages { get; set; }
		
		/// <summary>
		/// The date and time the product was published in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Published_at_foreign { get; set; }
		
		/// <summary>
		/// The title of a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The type of product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// Returns up to 50 of the product's variants. To retrieve all variants use [Product Variants](https://mailchimp.com/developer/marketing/api/ecommerce-product-variants/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variants")]
		public GetEcommerceStoresIdProductsReturnProductsVariants[] GetEcommerceStoresIdProductsReturnProductsVariants { get; set; }
		
		/// <summary>
		/// The vendor for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vendor")]
		public string Vendor { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsReturnProducts_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsReturnProductsImages
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdProductsReturnProductsImages_links[] GetEcommerceStoresIdProductsReturnProductsImages_links { get; set; }
		
		/// <summary>
		/// A unique identifier for the product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL for a product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The list of product variants using the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variant_ids")]
		public string[] Variant_ids { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsReturnProductsImages_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsReturnProductsVariants
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdProductsReturnProductsVariants_links[] GetEcommerceStoresIdProductsReturnProductsVariants_links { get; set; }
		
		/// <summary>
		/// The backorders of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backorders")]
		public string Backorders { get; set; }
		
		/// <summary>
		/// The date and time the product was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The inventory quantity of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inventory_quantity")]
		public System.Nullable<System.Int32> Inventory_quantity { get; set; }
		
		/// <summary>
		/// The price of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// The stock keeping unit (SKU) of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		/// <summary>
		/// The title of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The date and time the product was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The visibility of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public string Visibility { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsReturnProductsVariants_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostEcommerceStoresIdProductsPostBody
	{
		
		/// <summary>
		/// The description of a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The handle of a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="handle")]
		public string Handle { get; set; }
		
		/// <summary>
		/// A unique identifier for the product.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// An array of the product's images.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="images")]
		public PostEcommerceStoresIdProductsPostBodyImages[] PostEcommerceStoresIdProductsPostBodyImages { get; set; }
		
		/// <summary>
		/// The date and time the product was published.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Published_at_foreign { get; set; }
		
		/// <summary>
		/// The title of a product.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The type of product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// An array of the product's variants. At least one variant is required for each product. A variant can use the same `id` and `title` as the parent product.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="variants")]
		public PostEcommerceStoresIdProductsPostBodyVariants[] PostEcommerceStoresIdProductsPostBodyVariants { get; set; }
		
		/// <summary>
		/// The vendor for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vendor")]
		public string Vendor { get; set; }
	}
	
	public class PostEcommerceStoresIdProductsPostBodyImages
	{
		
		/// <summary>
		/// A unique identifier for the product image.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL for a product image.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The list of product variants using the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variant_ids")]
		public string[] Variant_ids { get; set; }
	}
	
	public class PostEcommerceStoresIdProductsPostBodyVariants
	{
		
		/// <summary>
		/// The backorders of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backorders")]
		public string Backorders { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The inventory quantity of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inventory_quantity")]
		public System.Nullable<System.Int32> Inventory_quantity { get; set; }
		
		/// <summary>
		/// The price of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// The stock keeping unit (SKU) of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		/// <summary>
		/// The title of a product variant.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The visibility of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public string Visibility { get; set; }
	}
	
	public class PostEcommerceStoresIdProductsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostEcommerceStoresIdProductsReturn_links[] PostEcommerceStoresIdProductsReturn_links { get; set; }
		
		/// <summary>
		/// The currency code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The description of a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The handle of a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="handle")]
		public string Handle { get; set; }
		
		/// <summary>
		/// A unique identifier for the product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// An array of the product's images.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="images")]
		public PostEcommerceStoresIdProductsReturnImages[] PostEcommerceStoresIdProductsReturnImages { get; set; }
		
		/// <summary>
		/// The date and time the product was published in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Published_at_foreign { get; set; }
		
		/// <summary>
		/// The title of a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The type of product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// Returns up to 50 of the product's variants. To retrieve all variants use [Product Variants](https://mailchimp.com/developer/marketing/api/ecommerce-product-variants/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variants")]
		public PostEcommerceStoresIdProductsReturnVariants[] PostEcommerceStoresIdProductsReturnVariants { get; set; }
		
		/// <summary>
		/// The vendor for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vendor")]
		public string Vendor { get; set; }
	}
	
	public class PostEcommerceStoresIdProductsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostEcommerceStoresIdProductsReturnImages
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostEcommerceStoresIdProductsReturnImages_links[] PostEcommerceStoresIdProductsReturnImages_links { get; set; }
		
		/// <summary>
		/// A unique identifier for the product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL for a product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The list of product variants using the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variant_ids")]
		public string[] Variant_ids { get; set; }
	}
	
	public class PostEcommerceStoresIdProductsReturnImages_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostEcommerceStoresIdProductsReturnVariants
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostEcommerceStoresIdProductsReturnVariants_links[] PostEcommerceStoresIdProductsReturnVariants_links { get; set; }
		
		/// <summary>
		/// The backorders of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backorders")]
		public string Backorders { get; set; }
		
		/// <summary>
		/// The date and time the product was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The inventory quantity of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inventory_quantity")]
		public System.Nullable<System.Int32> Inventory_quantity { get; set; }
		
		/// <summary>
		/// The price of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// The stock keeping unit (SKU) of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		/// <summary>
		/// The title of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The date and time the product was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The visibility of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public string Visibility { get; set; }
	}
	
	public class PostEcommerceStoresIdProductsReturnVariants_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdProductsIdReturn_links[] GetEcommerceStoresIdProductsIdReturn_links { get; set; }
		
		/// <summary>
		/// The currency code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The description of a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The handle of a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="handle")]
		public string Handle { get; set; }
		
		/// <summary>
		/// A unique identifier for the product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// An array of the product's images.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="images")]
		public GetEcommerceStoresIdProductsIdReturnImages[] GetEcommerceStoresIdProductsIdReturnImages { get; set; }
		
		/// <summary>
		/// The date and time the product was published in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Published_at_foreign { get; set; }
		
		/// <summary>
		/// The title of a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The type of product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// Returns up to 50 of the product's variants. To retrieve all variants use [Product Variants](https://mailchimp.com/developer/marketing/api/ecommerce-product-variants/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variants")]
		public GetEcommerceStoresIdProductsIdReturnVariants[] GetEcommerceStoresIdProductsIdReturnVariants { get; set; }
		
		/// <summary>
		/// The vendor for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vendor")]
		public string Vendor { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsIdReturnImages
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdProductsIdReturnImages_links[] GetEcommerceStoresIdProductsIdReturnImages_links { get; set; }
		
		/// <summary>
		/// A unique identifier for the product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL for a product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The list of product variants using the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variant_ids")]
		public string[] Variant_ids { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsIdReturnImages_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsIdReturnVariants
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdProductsIdReturnVariants_links[] GetEcommerceStoresIdProductsIdReturnVariants_links { get; set; }
		
		/// <summary>
		/// The backorders of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backorders")]
		public string Backorders { get; set; }
		
		/// <summary>
		/// The date and time the product was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The inventory quantity of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inventory_quantity")]
		public System.Nullable<System.Int32> Inventory_quantity { get; set; }
		
		/// <summary>
		/// The price of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// The stock keeping unit (SKU) of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		/// <summary>
		/// The title of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The date and time the product was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The visibility of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public string Visibility { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsIdReturnVariants_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchEcommerceStoresIdProductsIdPatchBody
	{
		
		/// <summary>
		/// The description of a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The handle of a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="handle")]
		public string Handle { get; set; }
		
		/// <summary>
		/// The image URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// An array of the product's images.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="images")]
		public PatchEcommerceStoresIdProductsIdPatchBodyImages[] PatchEcommerceStoresIdProductsIdPatchBodyImages { get; set; }
		
		/// <summary>
		/// The date and time the product was published in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Published_at_foreign { get; set; }
		
		/// <summary>
		/// The title of a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The type of product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// An array of the product's variants. At least one variant is required for each product. A variant can use the same `id` and `title` as the parent product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variants")]
		public PatchEcommerceStoresIdProductsIdPatchBodyVariants[] PatchEcommerceStoresIdProductsIdPatchBodyVariants { get; set; }
		
		/// <summary>
		/// The vendor for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vendor")]
		public string Vendor { get; set; }
	}
	
	public class PatchEcommerceStoresIdProductsIdPatchBodyImages
	{
		
		/// <summary>
		/// A unique identifier for the product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL for a product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The list of product variants using the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variant_ids")]
		public string[] Variant_ids { get; set; }
	}
	
	public class PatchEcommerceStoresIdProductsIdPatchBodyVariants
	{
		
		/// <summary>
		/// The backorders of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backorders")]
		public string Backorders { get; set; }
		
		/// <summary>
		/// The image URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The inventory quantity of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inventory_quantity")]
		public System.Nullable<System.Int32> Inventory_quantity { get; set; }
		
		/// <summary>
		/// The price of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// The stock keeping unit (SKU) of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		/// <summary>
		/// The title of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The visibility of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public string Visibility { get; set; }
	}
	
	public class PatchEcommerceStoresIdProductsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchEcommerceStoresIdProductsIdReturn_links[] PatchEcommerceStoresIdProductsIdReturn_links { get; set; }
		
		/// <summary>
		/// The currency code
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The description of a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The handle of a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="handle")]
		public string Handle { get; set; }
		
		/// <summary>
		/// A unique identifier for the product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// An array of the product's images.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="images")]
		public PatchEcommerceStoresIdProductsIdReturnImages[] PatchEcommerceStoresIdProductsIdReturnImages { get; set; }
		
		/// <summary>
		/// The date and time the product was published in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Published_at_foreign { get; set; }
		
		/// <summary>
		/// The title of a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The type of product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The URL for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// Returns up to 50 of the product's variants. To retrieve all variants use [Product Variants](https://mailchimp.com/developer/marketing/api/ecommerce-product-variants/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variants")]
		public PatchEcommerceStoresIdProductsIdReturnVariants[] PatchEcommerceStoresIdProductsIdReturnVariants { get; set; }
		
		/// <summary>
		/// The vendor for a product.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vendor")]
		public string Vendor { get; set; }
	}
	
	public class PatchEcommerceStoresIdProductsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchEcommerceStoresIdProductsIdReturnImages
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchEcommerceStoresIdProductsIdReturnImages_links[] PatchEcommerceStoresIdProductsIdReturnImages_links { get; set; }
		
		/// <summary>
		/// A unique identifier for the product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL for a product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The list of product variants using the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variant_ids")]
		public string[] Variant_ids { get; set; }
	}
	
	public class PatchEcommerceStoresIdProductsIdReturnImages_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchEcommerceStoresIdProductsIdReturnVariants
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchEcommerceStoresIdProductsIdReturnVariants_links[] PatchEcommerceStoresIdProductsIdReturnVariants_links { get; set; }
		
		/// <summary>
		/// The backorders of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backorders")]
		public string Backorders { get; set; }
		
		/// <summary>
		/// The date and time the product was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The inventory quantity of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inventory_quantity")]
		public System.Nullable<System.Int32> Inventory_quantity { get; set; }
		
		/// <summary>
		/// The price of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// The stock keeping unit (SKU) of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		/// <summary>
		/// The title of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The date and time the product was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The visibility of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public string Visibility { get; set; }
	}
	
	public class PatchEcommerceStoresIdProductsIdReturnVariants_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsIdImagesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdProductsIdImagesReturn_links[] GetEcommerceStoresIdProductsIdImagesReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a product image resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="images")]
		public GetEcommerceStoresIdProductsIdImagesReturnImages[] GetEcommerceStoresIdProductsIdImagesReturnImages { get; set; }
		
		/// <summary>
		/// The product id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The store id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsIdImagesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsIdImagesReturnImages
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdProductsIdImagesReturnImages_links[] GetEcommerceStoresIdProductsIdImagesReturnImages_links { get; set; }
		
		/// <summary>
		/// A unique identifier for the product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL for a product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The list of product variants using the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variant_ids")]
		public string[] Variant_ids { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsIdImagesReturnImages_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostEcommerceStoresIdProductsIdImagesPostBody
	{
		
		/// <summary>
		/// A unique identifier for the product image.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL for a product image.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The list of product variants using the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variant_ids")]
		public string[] Variant_ids { get; set; }
	}
	
	public class PostEcommerceStoresIdProductsIdImagesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostEcommerceStoresIdProductsIdImagesReturn_links[] PostEcommerceStoresIdProductsIdImagesReturn_links { get; set; }
		
		/// <summary>
		/// A unique identifier for the product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL for a product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The list of product variants using the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variant_ids")]
		public string[] Variant_ids { get; set; }
	}
	
	public class PostEcommerceStoresIdProductsIdImagesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsIdImagesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdProductsIdImagesIdReturn_links[] GetEcommerceStoresIdProductsIdImagesIdReturn_links { get; set; }
		
		/// <summary>
		/// A unique identifier for the product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL for a product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The list of product variants using the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variant_ids")]
		public string[] Variant_ids { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsIdImagesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchEcommerceStoresIdProductsIdImagesIdPatchBody
	{
		
		/// <summary>
		/// A unique identifier for the product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL for a product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The list of product variants using the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variant_ids")]
		public string[] Variant_ids { get; set; }
	}
	
	public class PatchEcommerceStoresIdProductsIdImagesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchEcommerceStoresIdProductsIdImagesIdReturn_links[] PatchEcommerceStoresIdProductsIdImagesIdReturn_links { get; set; }
		
		/// <summary>
		/// A unique identifier for the product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The URL for a product image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The list of product variants using the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variant_ids")]
		public string[] Variant_ids { get; set; }
	}
	
	public class PatchEcommerceStoresIdProductsIdImagesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsIdVariantsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdProductsIdVariantsReturn_links[] GetEcommerceStoresIdProductsIdVariantsReturn_links { get; set; }
		
		/// <summary>
		/// The product id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="product_id")]
		public string Product_id { get; set; }
		
		/// <summary>
		/// The store id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a product's variants.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variants")]
		public GetEcommerceStoresIdProductsIdVariantsReturnVariants[] GetEcommerceStoresIdProductsIdVariantsReturnVariants { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsIdVariantsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsIdVariantsReturnVariants
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdProductsIdVariantsReturnVariants_links[] GetEcommerceStoresIdProductsIdVariantsReturnVariants_links { get; set; }
		
		/// <summary>
		/// The backorders of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backorders")]
		public string Backorders { get; set; }
		
		/// <summary>
		/// The date and time the product was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The inventory quantity of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inventory_quantity")]
		public System.Nullable<System.Int32> Inventory_quantity { get; set; }
		
		/// <summary>
		/// The price of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// The stock keeping unit (SKU) of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		/// <summary>
		/// The title of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The date and time the product was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The visibility of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public string Visibility { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsIdVariantsReturnVariants_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostEcommerceStoresIdProductsIdVariantsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostEcommerceStoresIdProductsIdVariantsReturn_links[] PostEcommerceStoresIdProductsIdVariantsReturn_links { get; set; }
		
		/// <summary>
		/// The backorders of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backorders")]
		public string Backorders { get; set; }
		
		/// <summary>
		/// The date and time the product was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The inventory quantity of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inventory_quantity")]
		public System.Nullable<System.Int32> Inventory_quantity { get; set; }
		
		/// <summary>
		/// The price of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// The stock keeping unit (SKU) of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		/// <summary>
		/// The title of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The date and time the product was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The visibility of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public string Visibility { get; set; }
	}
	
	public class PostEcommerceStoresIdProductsIdVariantsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsIdVariantsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdProductsIdVariantsIdReturn_links[] GetEcommerceStoresIdProductsIdVariantsIdReturn_links { get; set; }
		
		/// <summary>
		/// The backorders of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backorders")]
		public string Backorders { get; set; }
		
		/// <summary>
		/// The date and time the product was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The inventory quantity of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inventory_quantity")]
		public System.Nullable<System.Int32> Inventory_quantity { get; set; }
		
		/// <summary>
		/// The price of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// The stock keeping unit (SKU) of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		/// <summary>
		/// The title of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The date and time the product was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The visibility of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public string Visibility { get; set; }
	}
	
	public class GetEcommerceStoresIdProductsIdVariantsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchEcommerceStoresIdProductsIdVariantsIdPatchBody
	{
		
		/// <summary>
		/// The backorders of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backorders")]
		public string Backorders { get; set; }
		
		/// <summary>
		/// The image URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The inventory quantity of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inventory_quantity")]
		public System.Nullable<System.Int32> Inventory_quantity { get; set; }
		
		/// <summary>
		/// The price of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// The stock keeping unit (SKU) of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		/// <summary>
		/// The title of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The visibility of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public string Visibility { get; set; }
	}
	
	public class PatchEcommerceStoresIdProductsIdVariantsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchEcommerceStoresIdProductsIdVariantsIdReturn_links[] PatchEcommerceStoresIdProductsIdVariantsIdReturn_links { get; set; }
		
		/// <summary>
		/// The backorders of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backorders")]
		public string Backorders { get; set; }
		
		/// <summary>
		/// The date and time the product was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The inventory quantity of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inventory_quantity")]
		public System.Nullable<System.Int32> Inventory_quantity { get; set; }
		
		/// <summary>
		/// The price of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// The stock keeping unit (SKU) of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		/// <summary>
		/// The title of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The date and time the product was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The visibility of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public string Visibility { get; set; }
	}
	
	public class PatchEcommerceStoresIdProductsIdVariantsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PutEcommerceStoresIdProductsIdVariantsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PutEcommerceStoresIdProductsIdVariantsIdReturn_links[] PutEcommerceStoresIdProductsIdVariantsIdReturn_links { get; set; }
		
		/// <summary>
		/// The backorders of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="backorders")]
		public string Backorders { get; set; }
		
		/// <summary>
		/// The date and time the product was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// A unique identifier for the product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The image URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The inventory quantity of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inventory_quantity")]
		public System.Nullable<System.Int32> Inventory_quantity { get; set; }
		
		/// <summary>
		/// The price of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="price")]
		public System.Nullable<System.Double> Price { get; set; }
		
		/// <summary>
		/// The stock keeping unit (SKU) of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		/// <summary>
		/// The title of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The date and time the product was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The URL for a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The visibility of a product variant.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public string Visibility { get; set; }
	}
	
	public class PutEcommerceStoresIdProductsIdVariantsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdPromorulesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdPromorulesReturn_links[] GetEcommerceStoresIdPromorulesReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing promo rules defined for a store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promo_rules")]
		public GetEcommerceStoresIdPromorulesReturnPromo_rules[] GetEcommerceStoresIdPromorulesReturnPromo_rules { get; set; }
		
		/// <summary>
		/// The store id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetEcommerceStoresIdPromorulesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdPromorulesReturnPromo_rules
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdPromorulesReturnPromo_rules_links[] GetEcommerceStoresIdPromorulesReturnPromo_rules_links { get; set; }
		
		/// <summary>
		/// The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Single> Amount { get; set; }
		
		/// <summary>
		/// The date and time the promotion was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Created_at_foreign { get; set; }
		
		/// <summary>
		/// The description of a promotion restricted to UTF-8 characters with max length 255.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Whether the promo rule is currently enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ends_at")]
		public string Ends_at { get; set; }
		
		/// <summary>
		/// A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The date and time when the promotion is in effect in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="starts_at")]
		public System.Nullable<System.DateTimeOffset> Starts_at { get; set; }
		
		/// <summary>
		/// The target that the discount applies to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public System.Nullable<GetEcommerceStoresIdPromorulesReturnPromo_rulesTarget> Target { get; set; }
		
		/// <summary>
		/// The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Type of discount. For free shipping set type to fixed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GetEcommerceStoresIdPromorulesReturnPromo_rulesType> Type { get; set; }
		
		/// <summary>
		/// The date and time the promotion was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
	}
	
	public class GetEcommerceStoresIdPromorulesReturnPromo_rules_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetEcommerceStoresIdPromorulesReturnPromo_rulesTarget
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		per_item = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		total = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		shipping = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetEcommerceStoresIdPromorulesReturnPromo_rulesType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fixed")]
		_fixed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		percentage = 1,
	}
	
	public class PostEcommerceStoresIdPromorulesPostBody
	{
		
		/// <summary>
		/// The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public float Amount { get; set; }
		
		/// <summary>
		/// The date and time the promotion was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Created_at_foreign { get; set; }
		
		/// <summary>
		/// The description of a promotion restricted to UTF-8 characters with max length 255.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Whether the promo rule is currently enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ends_at")]
		public string Ends_at { get; set; }
		
		/// <summary>
		/// A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The date and time when the promotion is in effect in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="starts_at")]
		public System.Nullable<System.DateTimeOffset> Starts_at { get; set; }
		
		/// <summary>
		/// The target that the discount applies to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="target")]
		public GetEcommerceStoresIdPromorulesReturnPromo_rulesTarget Target { get; set; }
		
		/// <summary>
		/// The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Type of discount. For free shipping set type to fixed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public PostEcommerceStoresIdPromorulesPostBodyType Type { get; set; }
		
		/// <summary>
		/// The date and time the promotion was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostEcommerceStoresIdPromorulesPostBodyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fixed")]
		_fixed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		percentage = 1,
	}
	
	public class PostEcommerceStoresIdPromorulesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostEcommerceStoresIdPromorulesReturn_links[] PostEcommerceStoresIdPromorulesReturn_links { get; set; }
		
		/// <summary>
		/// The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Single> Amount { get; set; }
		
		/// <summary>
		/// The date and time the promotion was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Created_at_foreign { get; set; }
		
		/// <summary>
		/// The description of a promotion restricted to UTF-8 characters with max length 255.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Whether the promo rule is currently enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ends_at")]
		public string Ends_at { get; set; }
		
		/// <summary>
		/// A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The date and time when the promotion is in effect in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="starts_at")]
		public System.Nullable<System.DateTimeOffset> Starts_at { get; set; }
		
		/// <summary>
		/// The target that the discount applies to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public GetEcommerceStoresIdPromorulesReturnPromo_rulesTarget Target { get; set; }
		
		/// <summary>
		/// The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Type of discount. For free shipping set type to fixed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<PostEcommerceStoresIdPromorulesReturnType> Type { get; set; }
		
		/// <summary>
		/// The date and time the promotion was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
	}
	
	public class PostEcommerceStoresIdPromorulesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostEcommerceStoresIdPromorulesReturnType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fixed")]
		_fixed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		percentage = 1,
	}
	
	public class GetEcommerceStoresIdPromorulesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdPromorulesIdReturn_links[] GetEcommerceStoresIdPromorulesIdReturn_links { get; set; }
		
		/// <summary>
		/// The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Single> Amount { get; set; }
		
		/// <summary>
		/// The date and time the promotion was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Created_at_foreign { get; set; }
		
		/// <summary>
		/// The description of a promotion restricted to UTF-8 characters with max length 255.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Whether the promo rule is currently enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ends_at")]
		public string Ends_at { get; set; }
		
		/// <summary>
		/// A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The date and time when the promotion is in effect in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="starts_at")]
		public System.Nullable<System.DateTimeOffset> Starts_at { get; set; }
		
		/// <summary>
		/// The target that the discount applies to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public GetEcommerceStoresIdPromorulesReturnPromo_rulesTarget Target { get; set; }
		
		/// <summary>
		/// The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Type of discount. For free shipping set type to fixed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GetEcommerceStoresIdPromorulesIdReturnType> Type { get; set; }
		
		/// <summary>
		/// The date and time the promotion was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
	}
	
	public class GetEcommerceStoresIdPromorulesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetEcommerceStoresIdPromorulesIdReturnType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fixed")]
		_fixed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		percentage = 1,
	}
	
	public class PatchEcommerceStoresIdPromorulesIdPatchBody
	{
		
		/// <summary>
		/// The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Single> Amount { get; set; }
		
		/// <summary>
		/// The date and time the promotion was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Created_at_foreign { get; set; }
		
		/// <summary>
		/// The description of a promotion restricted to UTF-8 characters with max length 255.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Whether the promo rule is currently enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ends_at")]
		public string Ends_at { get; set; }
		
		/// <summary>
		/// The date and time when the promotion is in effect in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="starts_at")]
		public System.Nullable<System.DateTimeOffset> Starts_at { get; set; }
		
		/// <summary>
		/// The target that the discount applies to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public GetEcommerceStoresIdPromorulesReturnPromo_rulesTarget Target { get; set; }
		
		/// <summary>
		/// The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Type of discount. For free shipping set type to fixed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<PatchEcommerceStoresIdPromorulesIdPatchBodyType> Type { get; set; }
		
		/// <summary>
		/// The date and time the promotion was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PatchEcommerceStoresIdPromorulesIdPatchBodyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fixed")]
		_fixed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		percentage = 1,
	}
	
	public class PatchEcommerceStoresIdPromorulesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchEcommerceStoresIdPromorulesIdReturn_links[] PatchEcommerceStoresIdPromorulesIdReturn_links { get; set; }
		
		/// <summary>
		/// The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="amount")]
		public System.Nullable<System.Single> Amount { get; set; }
		
		/// <summary>
		/// The date and time the promotion was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Created_at_foreign { get; set; }
		
		/// <summary>
		/// The description of a promotion restricted to UTF-8 characters with max length 255.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Whether the promo rule is currently enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ends_at")]
		public string Ends_at { get; set; }
		
		/// <summary>
		/// A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The date and time when the promotion is in effect in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="starts_at")]
		public System.Nullable<System.DateTimeOffset> Starts_at { get; set; }
		
		/// <summary>
		/// The target that the discount applies to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target")]
		public GetEcommerceStoresIdPromorulesReturnPromo_rulesTarget Target { get; set; }
		
		/// <summary>
		/// The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length of 100 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Type of discount. For free shipping set type to fixed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<PatchEcommerceStoresIdPromorulesIdReturnType> Type { get; set; }
		
		/// <summary>
		/// The date and time the promotion was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
	}
	
	public class PatchEcommerceStoresIdPromorulesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PatchEcommerceStoresIdPromorulesIdReturnType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="fixed")]
		_fixed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		percentage = 1,
	}
	
	public class GetEcommerceStoresIdPromocodesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdPromocodesReturn_links[] GetEcommerceStoresIdPromocodesReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing promo codes defined for a store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promo_codes")]
		public GetEcommerceStoresIdPromocodesReturnPromo_codes[] GetEcommerceStoresIdPromocodesReturnPromo_codes { get; set; }
		
		/// <summary>
		/// The store id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetEcommerceStoresIdPromocodesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdPromocodesReturnPromo_codes
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdPromocodesReturnPromo_codes_links[] GetEcommerceStoresIdPromocodesReturnPromo_codes_links { get; set; }
		
		/// <summary>
		/// The discount code. Restricted to UTF-8 characters with max length 50.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The date and time the promotion was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Created_at_foreign { get; set; }
		
		/// <summary>
		/// Whether the promo code is currently enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// A unique identifier for the promo Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The url that should be used in the promotion campaign restricted to UTF-8 characters with max length 2000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redemption_url")]
		public string Redemption_url { get; set; }
		
		/// <summary>
		/// The date and time the promotion was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
		
		/// <summary>
		/// Number of times promo code has been used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usage_count")]
		public System.Nullable<System.Int32> Usage_count { get; set; }
	}
	
	public class GetEcommerceStoresIdPromocodesReturnPromo_codes_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostEcommerceStoresIdPromocodesPostBody
	{
		
		/// <summary>
		/// The discount code. Restricted to UTF-8 characters with max length 50.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The date and time the promotion was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Created_at_foreign { get; set; }
		
		/// <summary>
		/// Whether the promo code is currently enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// A unique identifier for the promo code. Restricted to UTF-8 characters with max length 50.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The url that should be used in the promotion campaign restricted to UTF-8 characters with max length 2000.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="redemption_url")]
		public string Redemption_url { get; set; }
		
		/// <summary>
		/// The date and time the promotion was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
		
		/// <summary>
		/// Number of times promo code has been used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usage_count")]
		public System.Nullable<System.Int32> Usage_count { get; set; }
	}
	
	public class PostEcommerceStoresIdPromocodesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostEcommerceStoresIdPromocodesReturn_links[] PostEcommerceStoresIdPromocodesReturn_links { get; set; }
		
		/// <summary>
		/// The discount code. Restricted to UTF-8 characters with max length 50.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The date and time the promotion was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Created_at_foreign { get; set; }
		
		/// <summary>
		/// Whether the promo code is currently enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// A unique identifier for the promo Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The url that should be used in the promotion campaign restricted to UTF-8 characters with max length 2000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redemption_url")]
		public string Redemption_url { get; set; }
		
		/// <summary>
		/// The date and time the promotion was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
		
		/// <summary>
		/// Number of times promo code has been used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usage_count")]
		public System.Nullable<System.Int32> Usage_count { get; set; }
	}
	
	public class PostEcommerceStoresIdPromocodesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetEcommerceStoresIdPromocodesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetEcommerceStoresIdPromocodesIdReturn_links[] GetEcommerceStoresIdPromocodesIdReturn_links { get; set; }
		
		/// <summary>
		/// The discount code. Restricted to UTF-8 characters with max length 50.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The date and time the promotion was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Created_at_foreign { get; set; }
		
		/// <summary>
		/// Whether the promo code is currently enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// A unique identifier for the promo Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The url that should be used in the promotion campaign restricted to UTF-8 characters with max length 2000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redemption_url")]
		public string Redemption_url { get; set; }
		
		/// <summary>
		/// The date and time the promotion was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
		
		/// <summary>
		/// Number of times promo code has been used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usage_count")]
		public System.Nullable<System.Int32> Usage_count { get; set; }
	}
	
	public class GetEcommerceStoresIdPromocodesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchEcommerceStoresIdPromocodesIdPatchBody
	{
		
		/// <summary>
		/// The discount code. Restricted to UTF-8 characters with max length 50.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The date and time the promotion was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Created_at_foreign { get; set; }
		
		/// <summary>
		/// Whether the promo code is currently enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The url that should be used in the promotion campaign restricted to UTF-8 characters with max length 2000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redemption_url")]
		public string Redemption_url { get; set; }
		
		/// <summary>
		/// The date and time the promotion was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
		
		/// <summary>
		/// Number of times promo code has been used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usage_count")]
		public System.Nullable<System.Int32> Usage_count { get; set; }
	}
	
	public class PatchEcommerceStoresIdPromocodesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchEcommerceStoresIdPromocodesIdReturn_links[] PatchEcommerceStoresIdPromocodesIdReturn_links { get; set; }
		
		/// <summary>
		/// The discount code. Restricted to UTF-8 characters with max length 50.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// The date and time the promotion was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Created_at_foreign { get; set; }
		
		/// <summary>
		/// Whether the promo code is currently enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// A unique identifier for the promo Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The url that should be used in the promotion campaign restricted to UTF-8 characters with max length 2000.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="redemption_url")]
		public string Redemption_url { get; set; }
		
		/// <summary>
		/// The date and time the promotion was updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at_foreign")]
		public System.Nullable<System.DateTimeOffset> Updated_at_foreign { get; set; }
		
		/// <summary>
		/// Number of times promo code has been used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="usage_count")]
		public System.Nullable<System.Int32> Usage_count { get; set; }
	}
	
	public class PatchEcommerceStoresIdPromocodesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public enum GetAllFacebookAdsSort_field
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		created_at = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		updated_at = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		end_time = 2,
	}
	
	public class GetAllFacebookAdsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAllFacebookAdsReturn_links[] GetAllFacebookAdsReturn_links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="facebook_ads")]
		public string[] Facebook_ads { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetAllFacebookAdsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetFacebookAdsIdReturn
	{
		
		/// <summary>
		/// The date and time the outreach was canceled in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canceled_at")]
		public System.Nullable<System.DateTimeOffset> Canceled_at { get; set; }
		
		/// <summary>
		/// The date and time the outreach was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="create_time")]
		public System.Nullable<System.DateTimeOffset> Create_time { get; set; }
		
		/// <summary>
		/// If this outreach targets a segment of your audience.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="has_segment")]
		public System.Nullable<System.Boolean> Has_segment { get; set; }
		
		/// <summary>
		/// Unique ID of an Outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Title or name of an Outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The date and time the outreach was (or will be) published in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_time")]
		public System.Nullable<System.DateTimeOffset> Published_time { get; set; }
		
		/// <summary>
		/// High level audience information for who the outreach targets.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public GetFacebookAdsIdReturnRecipients Recipients { get; set; }
		
		/// <summary>
		/// High level reporting stats for an outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report_summary")]
		public GetFacebookAdsIdReturnReport_summary Report_summary { get; set; }
		
		/// <summary>
		/// Outreach report availability. Note: This property is hotly debated in what it _should_ convey. See [MCP-1371](https://jira.mailchimp.com/browse/MCP-1371) for more context.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="show_report")]
		public System.Nullable<System.Boolean> Show_report { get; set; }
		
		/// <summary>
		/// The date and time the outreach was started in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_time")]
		public System.Nullable<System.DateTimeOffset> Start_time { get; set; }
		
		/// <summary>
		/// The status of this outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<GetFacebookAdsIdReturnStatus> Status { get; set; }
		
		/// <summary>
		/// The URL of the thumbnail for this outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnail")]
		public string Thumbnail { get; set; }
		
		/// <summary>
		/// The type of outreach this object is.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GetFacebookAdsIdReturnType> Type { get; set; }
		
		/// <summary>
		/// The date and time the outreach was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. For example, for a `regular` outreach, you can view this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class GetFacebookAdsIdReturnRecipients
	{
		
		/// <summary>
		/// The unique list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// Count of the recipients on the associated list. Formatted as an integer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_count")]
		public System.Nullable<System.Int32> Recipient_count { get; set; }
		
		/// <summary>
		/// An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_opts")]
		public GetFacebookAdsIdReturnRecipientsSegment_opts Segment_opts { get; set; }
		
		/// <summary>
		/// A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/) used for the campaign. Formatted as a string marked up with HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_text")]
		public string Segment_text { get; set; }
	}
	
	public class GetFacebookAdsIdReturnRecipientsSegment_opts
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Segment match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
		
		/// <summary>
		/// The prebuilt segment id, if a prebuilt segment has been designated for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prebuilt_segment_id")]
		public string Prebuilt_segment_id { get; set; }
		
		/// <summary>
		/// The id for an existing saved segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saved_segment_id")]
		public System.Nullable<System.Int32> Saved_segment_id { get; set; }
	}
	
	public class GetFacebookAdsIdReturnReport_summary
	{
		
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="conversion_rate")]
		public System.Nullable<System.Double> Conversion_rate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ecommerce")]
		public GetFacebookAdsIdReturnReport_summaryEcommerce Ecommerce { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="engagements")]
		public System.Nullable<System.Int32> Engagements { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="impressions")]
		public System.Nullable<System.Double> Impressions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reach")]
		public System.Nullable<System.Int32> Reach { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subscriber_clicks")]
		public System.Nullable<System.Int32> Subscriber_clicks { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subscribes")]
		public System.Nullable<System.Int32> Subscribes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total_sent")]
		public System.Nullable<System.Int32> Total_sent { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unique_visits")]
		public System.Nullable<System.Int32> Unique_visits { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="visits")]
		public System.Nullable<System.Int32> Visits { get; set; }
	}
	
	public class GetFacebookAdsIdReturnReport_summaryEcommerce
	{
		
		[System.Runtime.Serialization.DataMember(Name="average_order_revenue")]
		public System.Nullable<System.Double> Average_order_revenue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetFacebookAdsIdReturnStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		save = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		paused = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		schedule = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		scheduled = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sending = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sent = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		canceled = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		canceling = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		active = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		disconnected = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		somepaused = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		draft = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		completed = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		partialRejected = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rejected = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		published = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unpublished = 17,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetFacebookAdsIdReturnType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		regular = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="email-touchpoint")]
		emailMinustouchpoint = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		plaintext = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rss = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		reconfirm = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		variate = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		absplit = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		automation = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		facebook = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		google = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		autoresponder = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		transactional = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		page = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		website = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		social_post = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		survey = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		customer_journey = 16,
	}
	
	public enum GetFileManagerFilesSort_field
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		added_date = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		name = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		size = 2,
	}
	
	public class GetFileManagerFilesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetFileManagerFilesReturn_links[] GetFileManagerFilesReturn_links { get; set; }
		
		/// <summary>
		///  A list of files and images in an account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="files")]
		public GetFileManagerFilesReturnFiles[] GetFileManagerFilesReturnFiles { get; set; }
		
		/// <summary>
		/// The total size of all File Manager files in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_file_size")]
		public System.Nullable<System.Double> Total_file_size { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetFileManagerFilesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetFileManagerFilesReturnFiles
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetFileManagerFilesReturnFiles_links[] GetFileManagerFilesReturnFiles_links { get; set; }
		
		/// <summary>
		/// The date and time a file was added to the File Manager in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The username of the profile that uploaded the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The id of the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public System.Nullable<System.Int32> Folder_id { get; set; }
		
		/// <summary>
		/// The url of the full-size file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_size_url")]
		public string Full_size_url { get; set; }
		
		/// <summary>
		/// The height of an image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Int32> Height { get; set; }
		
		/// <summary>
		/// The unique id of the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The size of the file in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
		
		/// <summary>
		/// The url of the thumbnail preview.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnail_url")]
		public string Thumbnail_url { get; set; }
		
		/// <summary>
		/// The type of file in the File Manager.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GetFileManagerFilesReturnFilesType> Type { get; set; }
		
		/// <summary>
		/// The width of the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Int32> Width { get; set; }
	}
	
	public class GetFileManagerFilesReturnFiles_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetFileManagerFilesReturnFilesType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		image = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		file = 1,
	}
	
	public class PostFileManagerFilesPostBody
	{
		
		/// <summary>
		/// The base64-encoded contents of the file.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="file_data")]
		public string File_data { get; set; }
		
		/// <summary>
		/// The id of the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public System.Nullable<System.Int32> Folder_id { get; set; }
		
		/// <summary>
		/// The name of the file.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class PostFileManagerFilesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostFileManagerFilesReturn_links[] PostFileManagerFilesReturn_links { get; set; }
		
		/// <summary>
		/// The date and time a file was added to the File Manager in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The username of the profile that uploaded the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The id of the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public System.Nullable<System.Int32> Folder_id { get; set; }
		
		/// <summary>
		/// The url of the full-size file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_size_url")]
		public string Full_size_url { get; set; }
		
		/// <summary>
		/// The height of an image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Int32> Height { get; set; }
		
		/// <summary>
		/// The unique id of the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The size of the file in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
		
		/// <summary>
		/// The url of the thumbnail preview.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnail_url")]
		public string Thumbnail_url { get; set; }
		
		/// <summary>
		/// The type of file in the File Manager.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetFileManagerFilesReturnFilesType Type { get; set; }
		
		/// <summary>
		/// The width of the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Int32> Width { get; set; }
	}
	
	public class PostFileManagerFilesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetFileManagerFilesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetFileManagerFilesIdReturn_links[] GetFileManagerFilesIdReturn_links { get; set; }
		
		/// <summary>
		/// The date and time a file was added to the File Manager in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The username of the profile that uploaded the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The id of the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public System.Nullable<System.Int32> Folder_id { get; set; }
		
		/// <summary>
		/// The url of the full-size file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_size_url")]
		public string Full_size_url { get; set; }
		
		/// <summary>
		/// The height of an image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Int32> Height { get; set; }
		
		/// <summary>
		/// The unique id of the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The size of the file in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
		
		/// <summary>
		/// The url of the thumbnail preview.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnail_url")]
		public string Thumbnail_url { get; set; }
		
		/// <summary>
		/// The type of file in the File Manager.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetFileManagerFilesReturnFilesType Type { get; set; }
		
		/// <summary>
		/// The width of the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Int32> Width { get; set; }
	}
	
	public class GetFileManagerFilesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchFileManagerFilesIdPatchBody
	{
		
		/// <summary>
		/// The id of the folder. Setting `folder_id` to `0` will remove a file from its current folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public System.Nullable<System.Int32> Folder_id { get; set; }
		
		/// <summary>
		/// The name of the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class PatchFileManagerFilesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchFileManagerFilesIdReturn_links[] PatchFileManagerFilesIdReturn_links { get; set; }
		
		/// <summary>
		/// The date and time a file was added to the File Manager in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The username of the profile that uploaded the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The id of the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public System.Nullable<System.Int32> Folder_id { get; set; }
		
		/// <summary>
		/// The url of the full-size file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_size_url")]
		public string Full_size_url { get; set; }
		
		/// <summary>
		/// The height of an image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Int32> Height { get; set; }
		
		/// <summary>
		/// The unique id of the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The size of the file in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
		
		/// <summary>
		/// The url of the thumbnail preview.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnail_url")]
		public string Thumbnail_url { get; set; }
		
		/// <summary>
		/// The type of file in the File Manager.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetFileManagerFilesReturnFilesType Type { get; set; }
		
		/// <summary>
		/// The width of the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Int32> Width { get; set; }
	}
	
	public class PatchFileManagerFilesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetFileManagerFoldersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetFileManagerFoldersReturn_links[] GetFileManagerFoldersReturn_links { get; set; }
		
		/// <summary>
		/// A list of all folders in the File Manager.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folders")]
		public GetFileManagerFoldersReturnFolders[] GetFileManagerFoldersReturnFolders { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetFileManagerFoldersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetFileManagerFoldersReturnFolders
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetFileManagerFoldersReturnFolders_links[] GetFileManagerFoldersReturnFolders_links { get; set; }
		
		/// <summary>
		/// The date and time a file was added to the File Manager in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The username of the profile that created the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The number of files in the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="file_count")]
		public System.Nullable<System.Int32> File_count { get; set; }
		
		/// <summary>
		/// The unique id for the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class GetFileManagerFoldersReturnFolders_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostFileManagerFoldersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostFileManagerFoldersReturn_links[] PostFileManagerFoldersReturn_links { get; set; }
		
		/// <summary>
		/// The date and time a file was added to the File Manager in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The username of the profile that created the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The number of files in the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="file_count")]
		public System.Nullable<System.Int32> File_count { get; set; }
		
		/// <summary>
		/// The unique id for the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class PostFileManagerFoldersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetFileManagerFoldersIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetFileManagerFoldersIdReturn_links[] GetFileManagerFoldersIdReturn_links { get; set; }
		
		/// <summary>
		/// The date and time a file was added to the File Manager in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The username of the profile that created the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The number of files in the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="file_count")]
		public System.Nullable<System.Int32> File_count { get; set; }
		
		/// <summary>
		/// The unique id for the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class GetFileManagerFoldersIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchFileManagerFoldersIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchFileManagerFoldersIdReturn_links[] PatchFileManagerFoldersIdReturn_links { get; set; }
		
		/// <summary>
		/// The date and time a file was added to the File Manager in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The username of the profile that created the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The number of files in the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="file_count")]
		public System.Nullable<System.Int32> File_count { get; set; }
		
		/// <summary>
		/// The unique id for the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class PatchFileManagerFoldersIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetFileManagerFoldersFilesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetFileManagerFoldersFilesReturn_links[] GetFileManagerFoldersFilesReturn_links { get; set; }
		
		/// <summary>
		///  A list of files and images in an account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="files")]
		public GetFileManagerFoldersFilesReturnFiles[] GetFileManagerFoldersFilesReturnFiles { get; set; }
		
		/// <summary>
		/// The total size of all File Manager files in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_file_size")]
		public System.Nullable<System.Double> Total_file_size { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetFileManagerFoldersFilesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetFileManagerFoldersFilesReturnFiles
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetFileManagerFoldersFilesReturnFiles_links[] GetFileManagerFoldersFilesReturnFiles_links { get; set; }
		
		/// <summary>
		/// The date and time a file was added to the File Manager in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The username of the profile that uploaded the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The id of the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public System.Nullable<System.Int32> Folder_id { get; set; }
		
		/// <summary>
		/// The url of the full-size file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_size_url")]
		public string Full_size_url { get; set; }
		
		/// <summary>
		/// The height of an image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Int32> Height { get; set; }
		
		/// <summary>
		/// The unique id of the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The size of the file in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
		
		/// <summary>
		/// The url of the thumbnail preview.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnail_url")]
		public string Thumbnail_url { get; set; }
		
		/// <summary>
		/// The type of file in the File Manager.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetFileManagerFilesReturnFilesType Type { get; set; }
		
		/// <summary>
		/// The width of the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Int32> Width { get; set; }
	}
	
	public class GetFileManagerFoldersFilesReturnFiles_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public enum GetAllLandingPagesSort_field
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		created_at = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		updated_at = 1,
	}
	
	public class GetAllLandingPagesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAllLandingPagesReturn_links[] GetAllLandingPagesReturn_links { get; set; }
		
		/// <summary>
		/// The landing pages on the account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="landing_pages")]
		public GetAllLandingPagesReturnLanding_pages[] GetAllLandingPagesReturnLanding_pages { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetAllLandingPagesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetAllLandingPagesReturnLanding_pages
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetAllLandingPagesReturnLanding_pages_links[] GetAllLandingPagesReturnLanding_pages_links { get; set; }
		
		/// <summary>
		/// The time this landing page was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// Created by mobile or web
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by_source")]
		public string Created_by_source { get; set; }
		
		/// <summary>
		/// The description of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The list's ID associated with this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The name of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The time this landing page was published.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_at")]
		public System.Nullable<System.DateTimeOffset> Published_at { get; set; }
		
		/// <summary>
		/// The status of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<GetAllLandingPagesReturnLanding_pagesStatus> Status { get; set; }
		
		/// <summary>
		/// The ID of the store associated with this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The template_id of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public System.Nullable<System.Int32> Template_id { get; set; }
		
		/// <summary>
		/// The title of this landing page seen in the browser's title bar.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The tracking settings applied to this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public GetAllLandingPagesReturnLanding_pagesTracking Tracking { get; set; }
		
		/// <summary>
		/// The time this landing page was unpublished.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unpublished_at")]
		public System.Nullable<System.DateTimeOffset> Unpublished_at { get; set; }
		
		/// <summary>
		/// The time this landing page was updated at.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The url of the published landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class GetAllLandingPagesReturnLanding_pages_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetAllLandingPagesReturnLanding_pagesStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		published = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unpublished = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		draft = 2,
	}
	
	public class GetAllLandingPagesReturnLanding_pagesTracking
	{
		
		/// <summary>
		/// Google offers restricted data processing in connection with the California Consumer Privacy Act (CCPA) to restrict how Google uses certain identifiers and other data processed in the provision of its services. You can learn more about Google's restricted data processing within Google Ads [here](https://privacy.google.com/businesses/rdp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enable_restricted_data_processing")]
		public System.Nullable<System.Boolean> Enable_restricted_data_processing { get; set; }
		
		/// <summary>
		/// Use cookies to track unique visitors and calculate overall conversion rate. Learn more [here](https://mailchimp.com/help/use-track-mailchimp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="track_with_mailchimp")]
		public System.Nullable<System.Boolean> Track_with_mailchimp { get; set; }
	}
	
	public class PostAllLandingPagesPostBody
	{
		
		/// <summary>
		/// The description of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The list's ID associated with this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The name of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The ID of the store associated with this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The template_id of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public System.Nullable<System.Int32> Template_id { get; set; }
		
		/// <summary>
		/// The title of this landing page seen in the browser's title bar.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The tracking settings applied to this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public PostAllLandingPagesPostBodyTracking Tracking { get; set; }
		
		/// <summary>
		/// The type of template the landing page has.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<PostAllLandingPagesPostBodyType> Type { get; set; }
	}
	
	public class PostAllLandingPagesPostBodyTracking
	{
		
		/// <summary>
		/// Google offers restricted data processing in connection with the California Consumer Privacy Act (CCPA) to restrict how Google uses certain identifiers and other data processed in the provision of its services. You can learn more about Google's restricted data processing within Google Ads [here](https://privacy.google.com/businesses/rdp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enable_restricted_data_processing")]
		public System.Nullable<System.Boolean> Enable_restricted_data_processing { get; set; }
		
		/// <summary>
		/// Use cookies to track unique visitors and calculate overall conversion rate. Learn more [here](https://mailchimp.com/help/use-track-mailchimp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="track_with_mailchimp")]
		public System.Nullable<System.Boolean> Track_with_mailchimp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostAllLandingPagesPostBodyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		signup = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		product = 1,
	}
	
	public class PostAllLandingPagesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostAllLandingPagesReturn_links[] PostAllLandingPagesReturn_links { get; set; }
		
		/// <summary>
		/// The time this landing page was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// Created by mobile or web
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by_source")]
		public string Created_by_source { get; set; }
		
		/// <summary>
		/// The description of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The list's ID associated with this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The name of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The time this landing page was published.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_at")]
		public System.Nullable<System.DateTimeOffset> Published_at { get; set; }
		
		/// <summary>
		/// The status of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetAllLandingPagesReturnLanding_pagesStatus Status { get; set; }
		
		/// <summary>
		/// The ID of the store associated with this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The template_id of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public System.Nullable<System.Int32> Template_id { get; set; }
		
		/// <summary>
		/// The title of this landing page seen in the browser's title bar.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The tracking settings applied to this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public PostAllLandingPagesReturnTracking Tracking { get; set; }
		
		/// <summary>
		/// The time this landing page was unpublished.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unpublished_at")]
		public System.Nullable<System.DateTimeOffset> Unpublished_at { get; set; }
		
		/// <summary>
		/// The time this landing page was updated at.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The url of the published landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class PostAllLandingPagesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostAllLandingPagesReturnTracking
	{
		
		/// <summary>
		/// Google offers restricted data processing in connection with the California Consumer Privacy Act (CCPA) to restrict how Google uses certain identifiers and other data processed in the provision of its services. You can learn more about Google's restricted data processing within Google Ads [here](https://privacy.google.com/businesses/rdp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enable_restricted_data_processing")]
		public System.Nullable<System.Boolean> Enable_restricted_data_processing { get; set; }
		
		/// <summary>
		/// Use cookies to track unique visitors and calculate overall conversion rate. Learn more [here](https://mailchimp.com/help/use-track-mailchimp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="track_with_mailchimp")]
		public System.Nullable<System.Boolean> Track_with_mailchimp { get; set; }
	}
	
	public class GetLandingPageIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetLandingPageIdReturn_links[] GetLandingPageIdReturn_links { get; set; }
		
		/// <summary>
		/// The time this landing page was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// Created by mobile or web
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by_source")]
		public string Created_by_source { get; set; }
		
		/// <summary>
		/// The description of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The list's ID associated with this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The name of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The time this landing page was published.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_at")]
		public System.Nullable<System.DateTimeOffset> Published_at { get; set; }
		
		/// <summary>
		/// The status of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetAllLandingPagesReturnLanding_pagesStatus Status { get; set; }
		
		/// <summary>
		/// The ID of the store associated with this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The template_id of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public System.Nullable<System.Int32> Template_id { get; set; }
		
		/// <summary>
		/// The title of this landing page seen in the browser's title bar.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The tracking settings applied to this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public GetLandingPageIdReturnTracking Tracking { get; set; }
		
		/// <summary>
		/// The time this landing page was unpublished.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unpublished_at")]
		public System.Nullable<System.DateTimeOffset> Unpublished_at { get; set; }
		
		/// <summary>
		/// The time this landing page was updated at.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The url of the published landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class GetLandingPageIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetLandingPageIdReturnTracking
	{
		
		/// <summary>
		/// Google offers restricted data processing in connection with the California Consumer Privacy Act (CCPA) to restrict how Google uses certain identifiers and other data processed in the provision of its services. You can learn more about Google's restricted data processing within Google Ads [here](https://privacy.google.com/businesses/rdp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enable_restricted_data_processing")]
		public System.Nullable<System.Boolean> Enable_restricted_data_processing { get; set; }
		
		/// <summary>
		/// Use cookies to track unique visitors and calculate overall conversion rate. Learn more [here](https://mailchimp.com/help/use-track-mailchimp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="track_with_mailchimp")]
		public System.Nullable<System.Boolean> Track_with_mailchimp { get; set; }
	}
	
	public class PatchLandingPageIdPatchBody
	{
		
		/// <summary>
		/// The description of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The list's ID associated with this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The name of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The ID of the store associated with this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The title of this landing page seen in the browser's title bar.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The tracking settings applied to this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public PatchLandingPageIdPatchBodyTracking Tracking { get; set; }
	}
	
	public class PatchLandingPageIdPatchBodyTracking
	{
		
		/// <summary>
		/// Google offers restricted data processing in connection with the California Consumer Privacy Act (CCPA) to restrict how Google uses certain identifiers and other data processed in the provision of its services. You can learn more about Google's restricted data processing within Google Ads [here](https://privacy.google.com/businesses/rdp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enable_restricted_data_processing")]
		public System.Nullable<System.Boolean> Enable_restricted_data_processing { get; set; }
		
		/// <summary>
		/// Use cookies to track unique visitors and calculate overall conversion rate. Learn more [here](https://mailchimp.com/help/use-track-mailchimp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="track_with_mailchimp")]
		public System.Nullable<System.Boolean> Track_with_mailchimp { get; set; }
	}
	
	public class PatchLandingPageIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchLandingPageIdReturn_links[] PatchLandingPageIdReturn_links { get; set; }
		
		/// <summary>
		/// The time this landing page was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// Created by mobile or web
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by_source")]
		public string Created_by_source { get; set; }
		
		/// <summary>
		/// The description of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The list's ID associated with this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The name of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The time this landing page was published.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_at")]
		public System.Nullable<System.DateTimeOffset> Published_at { get; set; }
		
		/// <summary>
		/// The status of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetAllLandingPagesReturnLanding_pagesStatus Status { get; set; }
		
		/// <summary>
		/// The ID of the store associated with this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="store_id")]
		public string Store_id { get; set; }
		
		/// <summary>
		/// The template_id of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public System.Nullable<System.Int32> Template_id { get; set; }
		
		/// <summary>
		/// The title of this landing page seen in the browser's title bar.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The tracking settings applied to this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public PatchLandingPageIdReturnTracking Tracking { get; set; }
		
		/// <summary>
		/// The time this landing page was unpublished.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unpublished_at")]
		public System.Nullable<System.DateTimeOffset> Unpublished_at { get; set; }
		
		/// <summary>
		/// The time this landing page was updated at.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The url of the published landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class PatchLandingPageIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchLandingPageIdReturnTracking
	{
		
		/// <summary>
		/// Google offers restricted data processing in connection with the California Consumer Privacy Act (CCPA) to restrict how Google uses certain identifiers and other data processed in the provision of its services. You can learn more about Google's restricted data processing within Google Ads [here](https://privacy.google.com/businesses/rdp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enable_restricted_data_processing")]
		public System.Nullable<System.Boolean> Enable_restricted_data_processing { get; set; }
		
		/// <summary>
		/// Use cookies to track unique visitors and calculate overall conversion rate. Learn more [here](https://mailchimp.com/help/use-track-mailchimp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="track_with_mailchimp")]
		public System.Nullable<System.Boolean> Track_with_mailchimp { get; set; }
	}
	
	public class GetLandingPageIdContentReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetLandingPageIdContentReturn_links[] GetLandingPageIdContentReturn_links { get; set; }
		
		/// <summary>
		/// The raw HTML for the landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html")]
		public string Html { get; set; }
		
		/// <summary>
		/// The JSON Structure for the landing page
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="json")]
		public string Json { get; set; }
	}
	
	public class GetLandingPageIdContentReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public enum GetListsSort_field
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		date_created = 0,
	}
	
	public class GetListsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsReturn_links[] GetListsReturn_links { get; set; }
		
		/// <summary>
		/// Do particular authorization constraints around this collection limit creation of new instances?
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="constraints")]
		public GetListsReturnConstraints Constraints { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lists")]
		public GetListsReturnLists[] GetListsReturnLists { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetListsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsReturnConstraints
	{
		
		/// <summary>
		/// How many total instances of this resource are already in use? This is independent of any filter conditions applied to the query. Value may be larger than max_instances. As a special case, -1 is returned when access is unlimited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="current_total_instances")]
		public System.Nullable<System.Int32> Current_total_instances { get; set; }
		
		/// <summary>
		/// How many total instances of this resource are allowed? This is independent of any filter conditions applied to the query. As a special case, -1 indicates unlimited.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="max_instances")]
		public int Max_instances { get; set; }
		
		/// <summary>
		/// May the user create additional instances of this resource?
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="may_create")]
		public bool May_create { get; set; }
	}
	
	public class GetListsReturnLists
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsReturnLists_links[] GetListsReturnLists_links { get; set; }
		
		/// <summary>
		/// The list's [Email Beamer](https://mailchimp.com/help/use-email-beamer-to-create-a-campaign/) address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="beamer_address")]
		public string Beamer_address { get; set; }
		
		/// <summary>
		/// [Default values for campaigns](https://mailchimp.com/help/edit-your-emails-subject-preview-text-from-name-or-from-email-address/) created for this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_defaults")]
		public GetListsReturnListsCampaign_defaults Campaign_defaults { get; set; }
		
		/// <summary>
		/// [Contact information displayed in campaign footers](https://mailchimp.com/help/about-campaign-footers/) to comply with international spam laws.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact")]
		public GetListsReturnListsContact Contact { get; set; }
		
		/// <summary>
		/// The date and time that this list was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// Whether or not to require the subscriber to confirm subscription via email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="double_optin")]
		public System.Nullable<System.Boolean> Double_optin { get; set; }
		
		/// <summary>
		/// Whether the list supports [multiple formats for emails](https://mailchimp.com/help/change-audience-name-defaults/). When set to `true`, subscribers can choose whether they want to receive HTML or plain-text emails. When set to `false`, subscribers will receive HTML emails, with a plain-text alternative backup.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type_option")]
		public System.Nullable<System.Boolean> Email_type_option { get; set; }
		
		/// <summary>
		/// Whether or not this list has a welcome automation connected. Welcome Automations: welcomeSeries, singleWelcome, emailFollowup.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="has_welcome")]
		public System.Nullable<System.Boolean> Has_welcome { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// An auto-generated activity score for the list (0-5).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_rating")]
		public System.Nullable<System.Int32> List_rating { get; set; }
		
		/// <summary>
		/// Whether or not the list has marketing permissions (eg. GDPR) enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permissions")]
		public System.Nullable<System.Boolean> Marketing_permissions { get; set; }
		
		/// <summary>
		/// Any list-specific modules installed for this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modules")]
		public string[] Modules { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The email address to send [subscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/) to.
		/// </summary>
		[System.ComponentModel.DefaultValue("false")]
		[System.Runtime.Serialization.DataMember(Name="notify_on_subscribe")]
		public string Notify_on_subscribe { get; set; } = "false";
		
		/// <summary>
		/// The email address to send [unsubscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/) to.
		/// </summary>
		[System.ComponentModel.DefaultValue("false")]
		[System.Runtime.Serialization.DataMember(Name="notify_on_unsubscribe")]
		public string Notify_on_unsubscribe { get; set; } = "false";
		
		/// <summary>
		/// The [permission reminder](https://mailchimp.com/help/edit-the-permission-reminder/) for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permission_reminder")]
		public string Permission_reminder { get; set; }
		
		/// <summary>
		/// Stats for the list. Many of these are cached for at least five minutes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public GetListsReturnListsStats Stats { get; set; }
		
		/// <summary>
		/// The full version of this list's subscribe form (host will vary).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribe_url_long")]
		public string Subscribe_url_long { get; set; }
		
		/// <summary>
		/// Our [url shortened](https://mailchimp.com/help/share-your-signup-form/) version of this list's subscribe form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribe_url_short")]
		public string Subscribe_url_short { get; set; }
		
		/// <summary>
		/// Whether campaigns for this list use the [Archive Bar](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) in archives by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_archive_bar")]
		public System.Nullable<System.Boolean> Use_archive_bar { get; set; }
		
		/// <summary>
		/// Legacy - visibility settings are no longer used
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public System.Nullable<GetListsReturnListsVisibility> Visibility { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this list in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/members/?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class GetListsReturnLists_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsReturnListsCampaign_defaults
	{
		
		/// <summary>
		/// The default from email for campaigns sent to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_email")]
		public string From_email { get; set; }
		
		/// <summary>
		/// The default from name for campaigns sent to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// The default language for this lists's forms.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The default subject line for campaigns sent to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject")]
		public string Subject { get; set; }
	}
	
	public class GetListsReturnListsContact
	{
		
		/// <summary>
		/// The street address for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// The street address for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company name for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// A two-character ISO3166 country code. Defaults to US if invalid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The phone number for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The state for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// The postal or zip code for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="zip")]
		public string Zip { get; set; }
	}
	
	public class GetListsReturnListsStats
	{
		
		/// <summary>
		/// The average number of subscriptions per month for the list (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_sub_rate")]
		public System.Nullable<System.Double> Avg_sub_rate { get; set; }
		
		/// <summary>
		/// The average number of unsubscriptions per month for the list (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_unsub_rate")]
		public System.Nullable<System.Double> Avg_unsub_rate { get; set; }
		
		/// <summary>
		/// The number of campaigns in any status that use this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_count")]
		public System.Nullable<System.Int32> Campaign_count { get; set; }
		
		/// <summary>
		/// The date and time the last campaign was sent to this list in ISO 8601 format. This is updated when a campaign is sent to 10 or more recipients.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_last_sent")]
		public System.Nullable<System.DateTimeOffset> Campaign_last_sent { get; set; }
		
		/// <summary>
		/// The number of members cleaned from the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cleaned_count")]
		public System.Nullable<System.Int32> Cleaned_count { get; set; }
		
		/// <summary>
		/// The number of members cleaned from the list since the last campaign was sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cleaned_count_since_send")]
		public System.Nullable<System.Int32> Cleaned_count_since_send { get; set; }
		
		/// <summary>
		/// The average click rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The date and time of the last time someone subscribed to this list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_sub_date")]
		public System.Nullable<System.DateTimeOffset> Last_sub_date { get; set; }
		
		/// <summary>
		/// The date and time of the last time someone unsubscribed from this list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_unsub_date")]
		public System.Nullable<System.DateTimeOffset> Last_unsub_date { get; set; }
		
		/// <summary>
		/// The number of active members in the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_count")]
		public System.Nullable<System.Int32> Member_count { get; set; }
		
		/// <summary>
		/// The number of active members in the list since the last campaign was sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_count_since_send")]
		public System.Nullable<System.Int32> Member_count_since_send { get; set; }
		
		/// <summary>
		/// The number of merge fields ([audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)) for this list (doesn't include EMAIL).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_field_count")]
		public System.Nullable<System.Int32> Merge_field_count { get; set; }
		
		/// <summary>
		/// The average open rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The target number of subscriptions per month for the list to keep it growing (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target_sub_rate")]
		public System.Nullable<System.Double> Target_sub_rate { get; set; }
		
		/// <summary>
		/// The number of contacts in the list, including subscribed, unsubscribed, pending, cleaned, deleted, transactional, and those that need to be reconfirmed. Requires include_total_contacts query parameter to be included.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_contacts")]
		public System.Nullable<System.Int32> Total_contacts { get; set; }
		
		/// <summary>
		/// The number of members who have unsubscribed from the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe_count")]
		public System.Nullable<System.Int32> Unsubscribe_count { get; set; }
		
		/// <summary>
		/// The number of members who have unsubscribed since the last campaign was sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe_count_since_send")]
		public System.Nullable<System.Int32> Unsubscribe_count_since_send { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetListsReturnListsVisibility
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pub = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		prv = 1,
	}
	
	public class PostListsPostBody
	{
		
		/// <summary>
		/// [Default values for campaigns](https://mailchimp.com/help/edit-your-emails-subject-preview-text-from-name-or-from-email-address/) created for this list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="campaign_defaults")]
		public PostListsPostBodyCampaign_defaults Campaign_defaults { get; set; }
		
		/// <summary>
		/// [Contact information displayed in campaign footers](https://mailchimp.com/help/about-campaign-footers/) to comply with international spam laws.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contact")]
		public PostListsPostBodyContact Contact { get; set; }
		
		/// <summary>
		/// Whether or not to require the subscriber to confirm subscription via email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="double_optin")]
		public System.Nullable<System.Boolean> Double_optin { get; set; }
		
		/// <summary>
		/// Whether the list supports [multiple formats for emails](https://mailchimp.com/help/change-audience-name-defaults/). When set to `true`, subscribers can choose whether they want to receive HTML or plain-text emails. When set to `false`, subscribers will receive HTML emails, with a plain-text alternative backup.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email_type_option")]
		public bool Email_type_option { get; set; }
		
		/// <summary>
		/// Whether or not the list has marketing permissions (eg. GDPR) enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permissions")]
		public System.Nullable<System.Boolean> Marketing_permissions { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The email address to send [subscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/) to.
		/// </summary>
		[System.ComponentModel.DefaultValue("false")]
		[System.Runtime.Serialization.DataMember(Name="notify_on_subscribe")]
		public string Notify_on_subscribe { get; set; } = "false";
		
		/// <summary>
		/// The email address to send [unsubscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/) to.
		/// </summary>
		[System.ComponentModel.DefaultValue("false")]
		[System.Runtime.Serialization.DataMember(Name="notify_on_unsubscribe")]
		public string Notify_on_unsubscribe { get; set; } = "false";
		
		/// <summary>
		/// The [permission reminder](https://mailchimp.com/help/edit-the-permission-reminder/) for the list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="permission_reminder")]
		public string Permission_reminder { get; set; }
		
		/// <summary>
		/// Whether campaigns for this list use the [Archive Bar](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) in archives by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_archive_bar")]
		public System.Nullable<System.Boolean> Use_archive_bar { get; set; }
	}
	
	public class PostListsPostBodyCampaign_defaults
	{
		
		/// <summary>
		/// The default from email for campaigns sent to this list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="from_email")]
		public string From_email { get; set; }
		
		/// <summary>
		/// The default from name for campaigns sent to this list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// The default language for this lists's forms.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The default subject line for campaigns sent to this list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="subject")]
		public string Subject { get; set; }
	}
	
	public class PostListsPostBodyContact
	{
		
		/// <summary>
		/// The street address for the list contact.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// The street address for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city for the list contact.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company name for the list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// A two-character ISO3166 country code. Defaults to US if invalid.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The phone number for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The state for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// The postal or zip code for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="zip")]
		public string Zip { get; set; }
	}
	
	public class PostListsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostListsReturn_links[] PostListsReturn_links { get; set; }
		
		/// <summary>
		/// The list's [Email Beamer](https://mailchimp.com/help/use-email-beamer-to-create-a-campaign/) address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="beamer_address")]
		public string Beamer_address { get; set; }
		
		/// <summary>
		/// [Default values for campaigns](https://mailchimp.com/help/edit-your-emails-subject-preview-text-from-name-or-from-email-address/) created for this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_defaults")]
		public PostListsReturnCampaign_defaults Campaign_defaults { get; set; }
		
		/// <summary>
		/// [Contact information displayed in campaign footers](https://mailchimp.com/help/about-campaign-footers/) to comply with international spam laws.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact")]
		public PostListsReturnContact Contact { get; set; }
		
		/// <summary>
		/// The date and time that this list was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// Whether or not to require the subscriber to confirm subscription via email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="double_optin")]
		public System.Nullable<System.Boolean> Double_optin { get; set; }
		
		/// <summary>
		/// Whether the list supports [multiple formats for emails](https://mailchimp.com/help/change-audience-name-defaults/). When set to `true`, subscribers can choose whether they want to receive HTML or plain-text emails. When set to `false`, subscribers will receive HTML emails, with a plain-text alternative backup.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type_option")]
		public System.Nullable<System.Boolean> Email_type_option { get; set; }
		
		/// <summary>
		/// Whether or not this list has a welcome automation connected. Welcome Automations: welcomeSeries, singleWelcome, emailFollowup.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="has_welcome")]
		public System.Nullable<System.Boolean> Has_welcome { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// An auto-generated activity score for the list (0-5).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_rating")]
		public System.Nullable<System.Int32> List_rating { get; set; }
		
		/// <summary>
		/// Whether or not the list has marketing permissions (eg. GDPR) enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permissions")]
		public System.Nullable<System.Boolean> Marketing_permissions { get; set; }
		
		/// <summary>
		/// Any list-specific modules installed for this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modules")]
		public string[] Modules { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The email address to send [subscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/) to.
		/// </summary>
		[System.ComponentModel.DefaultValue("false")]
		[System.Runtime.Serialization.DataMember(Name="notify_on_subscribe")]
		public string Notify_on_subscribe { get; set; } = "false";
		
		/// <summary>
		/// The email address to send [unsubscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/) to.
		/// </summary>
		[System.ComponentModel.DefaultValue("false")]
		[System.Runtime.Serialization.DataMember(Name="notify_on_unsubscribe")]
		public string Notify_on_unsubscribe { get; set; } = "false";
		
		/// <summary>
		/// The [permission reminder](https://mailchimp.com/help/edit-the-permission-reminder/) for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permission_reminder")]
		public string Permission_reminder { get; set; }
		
		/// <summary>
		/// Stats for the list. Many of these are cached for at least five minutes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public PostListsReturnStats Stats { get; set; }
		
		/// <summary>
		/// The full version of this list's subscribe form (host will vary).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribe_url_long")]
		public string Subscribe_url_long { get; set; }
		
		/// <summary>
		/// Our [url shortened](https://mailchimp.com/help/share-your-signup-form/) version of this list's subscribe form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribe_url_short")]
		public string Subscribe_url_short { get; set; }
		
		/// <summary>
		/// Whether campaigns for this list use the [Archive Bar](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) in archives by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_archive_bar")]
		public System.Nullable<System.Boolean> Use_archive_bar { get; set; }
		
		/// <summary>
		/// Legacy - visibility settings are no longer used
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public GetListsReturnListsVisibility Visibility { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this list in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/members/?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class PostListsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostListsReturnCampaign_defaults
	{
		
		/// <summary>
		/// The default from email for campaigns sent to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_email")]
		public string From_email { get; set; }
		
		/// <summary>
		/// The default from name for campaigns sent to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// The default language for this lists's forms.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The default subject line for campaigns sent to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject")]
		public string Subject { get; set; }
	}
	
	public class PostListsReturnContact
	{
		
		/// <summary>
		/// The street address for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// The street address for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company name for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// A two-character ISO3166 country code. Defaults to US if invalid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The phone number for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The state for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// The postal or zip code for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="zip")]
		public string Zip { get; set; }
	}
	
	public class PostListsReturnStats
	{
		
		/// <summary>
		/// The average number of subscriptions per month for the list (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_sub_rate")]
		public System.Nullable<System.Double> Avg_sub_rate { get; set; }
		
		/// <summary>
		/// The average number of unsubscriptions per month for the list (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_unsub_rate")]
		public System.Nullable<System.Double> Avg_unsub_rate { get; set; }
		
		/// <summary>
		/// The number of campaigns in any status that use this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_count")]
		public System.Nullable<System.Int32> Campaign_count { get; set; }
		
		/// <summary>
		/// The date and time the last campaign was sent to this list in ISO 8601 format. This is updated when a campaign is sent to 10 or more recipients.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_last_sent")]
		public System.Nullable<System.DateTimeOffset> Campaign_last_sent { get; set; }
		
		/// <summary>
		/// The number of members cleaned from the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cleaned_count")]
		public System.Nullable<System.Int32> Cleaned_count { get; set; }
		
		/// <summary>
		/// The number of members cleaned from the list since the last campaign was sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cleaned_count_since_send")]
		public System.Nullable<System.Int32> Cleaned_count_since_send { get; set; }
		
		/// <summary>
		/// The average click rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The date and time of the last time someone subscribed to this list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_sub_date")]
		public System.Nullable<System.DateTimeOffset> Last_sub_date { get; set; }
		
		/// <summary>
		/// The date and time of the last time someone unsubscribed from this list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_unsub_date")]
		public System.Nullable<System.DateTimeOffset> Last_unsub_date { get; set; }
		
		/// <summary>
		/// The number of active members in the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_count")]
		public System.Nullable<System.Int32> Member_count { get; set; }
		
		/// <summary>
		/// The number of active members in the list since the last campaign was sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_count_since_send")]
		public System.Nullable<System.Int32> Member_count_since_send { get; set; }
		
		/// <summary>
		/// The number of merge fields ([audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)) for this list (doesn't include EMAIL).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_field_count")]
		public System.Nullable<System.Int32> Merge_field_count { get; set; }
		
		/// <summary>
		/// The average open rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The target number of subscriptions per month for the list to keep it growing (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target_sub_rate")]
		public System.Nullable<System.Double> Target_sub_rate { get; set; }
		
		/// <summary>
		/// The number of contacts in the list, including subscribed, unsubscribed, pending, cleaned, deleted, transactional, and those that need to be reconfirmed. Requires include_total_contacts query parameter to be included.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_contacts")]
		public System.Nullable<System.Int32> Total_contacts { get; set; }
		
		/// <summary>
		/// The number of members who have unsubscribed from the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe_count")]
		public System.Nullable<System.Int32> Unsubscribe_count { get; set; }
		
		/// <summary>
		/// The number of members who have unsubscribed since the last campaign was sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe_count_since_send")]
		public System.Nullable<System.Int32> Unsubscribe_count_since_send { get; set; }
	}
	
	public class GetListsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdReturn_links[] GetListsIdReturn_links { get; set; }
		
		/// <summary>
		/// The list's [Email Beamer](https://mailchimp.com/help/use-email-beamer-to-create-a-campaign/) address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="beamer_address")]
		public string Beamer_address { get; set; }
		
		/// <summary>
		/// [Default values for campaigns](https://mailchimp.com/help/edit-your-emails-subject-preview-text-from-name-or-from-email-address/) created for this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_defaults")]
		public GetListsIdReturnCampaign_defaults Campaign_defaults { get; set; }
		
		/// <summary>
		/// [Contact information displayed in campaign footers](https://mailchimp.com/help/about-campaign-footers/) to comply with international spam laws.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact")]
		public GetListsIdReturnContact Contact { get; set; }
		
		/// <summary>
		/// The date and time that this list was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// Whether or not to require the subscriber to confirm subscription via email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="double_optin")]
		public System.Nullable<System.Boolean> Double_optin { get; set; }
		
		/// <summary>
		/// Whether the list supports [multiple formats for emails](https://mailchimp.com/help/change-audience-name-defaults/). When set to `true`, subscribers can choose whether they want to receive HTML or plain-text emails. When set to `false`, subscribers will receive HTML emails, with a plain-text alternative backup.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type_option")]
		public System.Nullable<System.Boolean> Email_type_option { get; set; }
		
		/// <summary>
		/// Whether or not this list has a welcome automation connected. Welcome Automations: welcomeSeries, singleWelcome, emailFollowup.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="has_welcome")]
		public System.Nullable<System.Boolean> Has_welcome { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// An auto-generated activity score for the list (0-5).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_rating")]
		public System.Nullable<System.Int32> List_rating { get; set; }
		
		/// <summary>
		/// Whether or not the list has marketing permissions (eg. GDPR) enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permissions")]
		public System.Nullable<System.Boolean> Marketing_permissions { get; set; }
		
		/// <summary>
		/// Any list-specific modules installed for this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modules")]
		public string[] Modules { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The email address to send [subscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/) to.
		/// </summary>
		[System.ComponentModel.DefaultValue("false")]
		[System.Runtime.Serialization.DataMember(Name="notify_on_subscribe")]
		public string Notify_on_subscribe { get; set; } = "false";
		
		/// <summary>
		/// The email address to send [unsubscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/) to.
		/// </summary>
		[System.ComponentModel.DefaultValue("false")]
		[System.Runtime.Serialization.DataMember(Name="notify_on_unsubscribe")]
		public string Notify_on_unsubscribe { get; set; } = "false";
		
		/// <summary>
		/// The [permission reminder](https://mailchimp.com/help/edit-the-permission-reminder/) for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permission_reminder")]
		public string Permission_reminder { get; set; }
		
		/// <summary>
		/// Stats for the list. Many of these are cached for at least five minutes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public GetListsIdReturnStats Stats { get; set; }
		
		/// <summary>
		/// The full version of this list's subscribe form (host will vary).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribe_url_long")]
		public string Subscribe_url_long { get; set; }
		
		/// <summary>
		/// Our [url shortened](https://mailchimp.com/help/share-your-signup-form/) version of this list's subscribe form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribe_url_short")]
		public string Subscribe_url_short { get; set; }
		
		/// <summary>
		/// Whether campaigns for this list use the [Archive Bar](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) in archives by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_archive_bar")]
		public System.Nullable<System.Boolean> Use_archive_bar { get; set; }
		
		/// <summary>
		/// Legacy - visibility settings are no longer used
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public GetListsReturnListsVisibility Visibility { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this list in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/members/?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class GetListsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdReturnCampaign_defaults
	{
		
		/// <summary>
		/// The default from email for campaigns sent to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_email")]
		public string From_email { get; set; }
		
		/// <summary>
		/// The default from name for campaigns sent to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// The default language for this lists's forms.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The default subject line for campaigns sent to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject")]
		public string Subject { get; set; }
	}
	
	public class GetListsIdReturnContact
	{
		
		/// <summary>
		/// The street address for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// The street address for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company name for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// A two-character ISO3166 country code. Defaults to US if invalid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The phone number for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The state for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// The postal or zip code for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="zip")]
		public string Zip { get; set; }
	}
	
	public class GetListsIdReturnStats
	{
		
		/// <summary>
		/// The average number of subscriptions per month for the list (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_sub_rate")]
		public System.Nullable<System.Double> Avg_sub_rate { get; set; }
		
		/// <summary>
		/// The average number of unsubscriptions per month for the list (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_unsub_rate")]
		public System.Nullable<System.Double> Avg_unsub_rate { get; set; }
		
		/// <summary>
		/// The number of campaigns in any status that use this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_count")]
		public System.Nullable<System.Int32> Campaign_count { get; set; }
		
		/// <summary>
		/// The date and time the last campaign was sent to this list in ISO 8601 format. This is updated when a campaign is sent to 10 or more recipients.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_last_sent")]
		public System.Nullable<System.DateTimeOffset> Campaign_last_sent { get; set; }
		
		/// <summary>
		/// The number of members cleaned from the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cleaned_count")]
		public System.Nullable<System.Int32> Cleaned_count { get; set; }
		
		/// <summary>
		/// The number of members cleaned from the list since the last campaign was sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cleaned_count_since_send")]
		public System.Nullable<System.Int32> Cleaned_count_since_send { get; set; }
		
		/// <summary>
		/// The average click rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The date and time of the last time someone subscribed to this list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_sub_date")]
		public System.Nullable<System.DateTimeOffset> Last_sub_date { get; set; }
		
		/// <summary>
		/// The date and time of the last time someone unsubscribed from this list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_unsub_date")]
		public System.Nullable<System.DateTimeOffset> Last_unsub_date { get; set; }
		
		/// <summary>
		/// The number of active members in the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_count")]
		public System.Nullable<System.Int32> Member_count { get; set; }
		
		/// <summary>
		/// The number of active members in the list since the last campaign was sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_count_since_send")]
		public System.Nullable<System.Int32> Member_count_since_send { get; set; }
		
		/// <summary>
		/// The number of merge fields ([audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)) for this list (doesn't include EMAIL).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_field_count")]
		public System.Nullable<System.Int32> Merge_field_count { get; set; }
		
		/// <summary>
		/// The average open rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The target number of subscriptions per month for the list to keep it growing (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target_sub_rate")]
		public System.Nullable<System.Double> Target_sub_rate { get; set; }
		
		/// <summary>
		/// The number of contacts in the list, including subscribed, unsubscribed, pending, cleaned, deleted, transactional, and those that need to be reconfirmed. Requires include_total_contacts query parameter to be included.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_contacts")]
		public System.Nullable<System.Int32> Total_contacts { get; set; }
		
		/// <summary>
		/// The number of members who have unsubscribed from the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe_count")]
		public System.Nullable<System.Int32> Unsubscribe_count { get; set; }
		
		/// <summary>
		/// The number of members who have unsubscribed since the last campaign was sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe_count_since_send")]
		public System.Nullable<System.Int32> Unsubscribe_count_since_send { get; set; }
	}
	
	public class PatchListsIdPatchBody
	{
		
		/// <summary>
		/// [Default values for campaigns](https://mailchimp.com/help/edit-your-emails-subject-preview-text-from-name-or-from-email-address/) created for this list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="campaign_defaults")]
		public PatchListsIdPatchBodyCampaign_defaults Campaign_defaults { get; set; }
		
		/// <summary>
		/// [Contact information displayed in campaign footers](https://mailchimp.com/help/about-campaign-footers/) to comply with international spam laws.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contact")]
		public PatchListsIdPatchBodyContact Contact { get; set; }
		
		/// <summary>
		/// Whether or not to require the subscriber to confirm subscription via email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="double_optin")]
		public System.Nullable<System.Boolean> Double_optin { get; set; }
		
		/// <summary>
		/// Whether the list supports [multiple formats for emails](https://mailchimp.com/help/change-audience-name-defaults/). When set to `true`, subscribers can choose whether they want to receive HTML or plain-text emails. When set to `false`, subscribers will receive HTML emails, with a plain-text alternative backup.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email_type_option")]
		public bool Email_type_option { get; set; }
		
		/// <summary>
		/// Whether or not the list has marketing permissions (eg. GDPR) enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permissions")]
		public System.Nullable<System.Boolean> Marketing_permissions { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The email address to send [subscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/) to.
		/// </summary>
		[System.ComponentModel.DefaultValue("false")]
		[System.Runtime.Serialization.DataMember(Name="notify_on_subscribe")]
		public string Notify_on_subscribe { get; set; } = "false";
		
		/// <summary>
		/// The email address to send [unsubscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/) to.
		/// </summary>
		[System.ComponentModel.DefaultValue("false")]
		[System.Runtime.Serialization.DataMember(Name="notify_on_unsubscribe")]
		public string Notify_on_unsubscribe { get; set; } = "false";
		
		/// <summary>
		/// The [permission reminder](https://mailchimp.com/help/edit-the-permission-reminder/) for the list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="permission_reminder")]
		public string Permission_reminder { get; set; }
		
		/// <summary>
		/// Whether campaigns for this list use the [Archive Bar](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) in archives by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_archive_bar")]
		public System.Nullable<System.Boolean> Use_archive_bar { get; set; }
	}
	
	public class PatchListsIdPatchBodyCampaign_defaults
	{
		
		/// <summary>
		/// The default from email for campaigns sent to this list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="from_email")]
		public string From_email { get; set; }
		
		/// <summary>
		/// The default from name for campaigns sent to this list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// The default language for this lists's forms.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The default subject line for campaigns sent to this list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="subject")]
		public string Subject { get; set; }
	}
	
	public class PatchListsIdPatchBodyContact
	{
		
		/// <summary>
		/// The street address for the list contact.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// The street address for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city for the list contact.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company name for the list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// A two-character ISO3166 country code. Defaults to US if invalid.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The phone number for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The state for the list contact.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// The postal or zip code for the list contact.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="zip")]
		public string Zip { get; set; }
	}
	
	public class PatchListsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchListsIdReturn_links[] PatchListsIdReturn_links { get; set; }
		
		/// <summary>
		/// The list's [Email Beamer](https://mailchimp.com/help/use-email-beamer-to-create-a-campaign/) address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="beamer_address")]
		public string Beamer_address { get; set; }
		
		/// <summary>
		/// [Default values for campaigns](https://mailchimp.com/help/edit-your-emails-subject-preview-text-from-name-or-from-email-address/) created for this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_defaults")]
		public PatchListsIdReturnCampaign_defaults Campaign_defaults { get; set; }
		
		/// <summary>
		/// [Contact information displayed in campaign footers](https://mailchimp.com/help/about-campaign-footers/) to comply with international spam laws.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact")]
		public PatchListsIdReturnContact Contact { get; set; }
		
		/// <summary>
		/// The date and time that this list was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// Whether or not to require the subscriber to confirm subscription via email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="double_optin")]
		public System.Nullable<System.Boolean> Double_optin { get; set; }
		
		/// <summary>
		/// Whether the list supports [multiple formats for emails](https://mailchimp.com/help/change-audience-name-defaults/). When set to `true`, subscribers can choose whether they want to receive HTML or plain-text emails. When set to `false`, subscribers will receive HTML emails, with a plain-text alternative backup.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type_option")]
		public System.Nullable<System.Boolean> Email_type_option { get; set; }
		
		/// <summary>
		/// Whether or not this list has a welcome automation connected. Welcome Automations: welcomeSeries, singleWelcome, emailFollowup.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="has_welcome")]
		public System.Nullable<System.Boolean> Has_welcome { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// An auto-generated activity score for the list (0-5).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_rating")]
		public System.Nullable<System.Int32> List_rating { get; set; }
		
		/// <summary>
		/// Whether or not the list has marketing permissions (eg. GDPR) enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permissions")]
		public System.Nullable<System.Boolean> Marketing_permissions { get; set; }
		
		/// <summary>
		/// Any list-specific modules installed for this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="modules")]
		public string[] Modules { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The email address to send [subscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/) to.
		/// </summary>
		[System.ComponentModel.DefaultValue("false")]
		[System.Runtime.Serialization.DataMember(Name="notify_on_subscribe")]
		public string Notify_on_subscribe { get; set; } = "false";
		
		/// <summary>
		/// The email address to send [unsubscribe notifications](https://mailchimp.com/help/change-subscribe-and-unsubscribe-notifications/) to.
		/// </summary>
		[System.ComponentModel.DefaultValue("false")]
		[System.Runtime.Serialization.DataMember(Name="notify_on_unsubscribe")]
		public string Notify_on_unsubscribe { get; set; } = "false";
		
		/// <summary>
		/// The [permission reminder](https://mailchimp.com/help/edit-the-permission-reminder/) for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permission_reminder")]
		public string Permission_reminder { get; set; }
		
		/// <summary>
		/// Stats for the list. Many of these are cached for at least five minutes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public PatchListsIdReturnStats Stats { get; set; }
		
		/// <summary>
		/// The full version of this list's subscribe form (host will vary).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribe_url_long")]
		public string Subscribe_url_long { get; set; }
		
		/// <summary>
		/// Our [url shortened](https://mailchimp.com/help/share-your-signup-form/) version of this list's subscribe form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribe_url_short")]
		public string Subscribe_url_short { get; set; }
		
		/// <summary>
		/// Whether campaigns for this list use the [Archive Bar](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) in archives by default.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_archive_bar")]
		public System.Nullable<System.Boolean> Use_archive_bar { get; set; }
		
		/// <summary>
		/// Legacy - visibility settings are no longer used
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visibility")]
		public GetListsReturnListsVisibility Visibility { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this list in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/members/?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class PatchListsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchListsIdReturnCampaign_defaults
	{
		
		/// <summary>
		/// The default from email for campaigns sent to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_email")]
		public string From_email { get; set; }
		
		/// <summary>
		/// The default from name for campaigns sent to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// The default language for this lists's forms.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The default subject line for campaigns sent to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject")]
		public string Subject { get; set; }
	}
	
	public class PatchListsIdReturnContact
	{
		
		/// <summary>
		/// The street address for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address1")]
		public string Address1 { get; set; }
		
		/// <summary>
		/// The street address for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="address2")]
		public string Address2 { get; set; }
		
		/// <summary>
		/// The city for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="city")]
		public string City { get; set; }
		
		/// <summary>
		/// The company name for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="company")]
		public string Company { get; set; }
		
		/// <summary>
		/// A two-character ISO3166 country code. Defaults to US if invalid.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The phone number for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone")]
		public string Phone { get; set; }
		
		/// <summary>
		/// The state for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public string State { get; set; }
		
		/// <summary>
		/// The postal or zip code for the list contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="zip")]
		public string Zip { get; set; }
	}
	
	public class PatchListsIdReturnStats
	{
		
		/// <summary>
		/// The average number of subscriptions per month for the list (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_sub_rate")]
		public System.Nullable<System.Double> Avg_sub_rate { get; set; }
		
		/// <summary>
		/// The average number of unsubscriptions per month for the list (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_unsub_rate")]
		public System.Nullable<System.Double> Avg_unsub_rate { get; set; }
		
		/// <summary>
		/// The number of campaigns in any status that use this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_count")]
		public System.Nullable<System.Int32> Campaign_count { get; set; }
		
		/// <summary>
		/// The date and time the last campaign was sent to this list in ISO 8601 format. This is updated when a campaign is sent to 10 or more recipients.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_last_sent")]
		public System.Nullable<System.DateTimeOffset> Campaign_last_sent { get; set; }
		
		/// <summary>
		/// The number of members cleaned from the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cleaned_count")]
		public System.Nullable<System.Int32> Cleaned_count { get; set; }
		
		/// <summary>
		/// The number of members cleaned from the list since the last campaign was sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cleaned_count_since_send")]
		public System.Nullable<System.Int32> Cleaned_count_since_send { get; set; }
		
		/// <summary>
		/// The average click rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The date and time of the last time someone subscribed to this list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_sub_date")]
		public System.Nullable<System.DateTimeOffset> Last_sub_date { get; set; }
		
		/// <summary>
		/// The date and time of the last time someone unsubscribed from this list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_unsub_date")]
		public System.Nullable<System.DateTimeOffset> Last_unsub_date { get; set; }
		
		/// <summary>
		/// The number of active members in the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_count")]
		public System.Nullable<System.Int32> Member_count { get; set; }
		
		/// <summary>
		/// The number of active members in the list since the last campaign was sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_count_since_send")]
		public System.Nullable<System.Int32> Member_count_since_send { get; set; }
		
		/// <summary>
		/// The number of merge fields ([audience field](https://mailchimp.com/help/getting-started-with-merge-tags/)) for this list (doesn't include EMAIL).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_field_count")]
		public System.Nullable<System.Int32> Merge_field_count { get; set; }
		
		/// <summary>
		/// The average open rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The target number of subscriptions per month for the list to keep it growing (not returned if we haven't calculated it yet).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="target_sub_rate")]
		public System.Nullable<System.Double> Target_sub_rate { get; set; }
		
		/// <summary>
		/// The number of contacts in the list, including subscribed, unsubscribed, pending, cleaned, deleted, transactional, and those that need to be reconfirmed. Requires include_total_contacts query parameter to be included.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_contacts")]
		public System.Nullable<System.Int32> Total_contacts { get; set; }
		
		/// <summary>
		/// The number of members who have unsubscribed from the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe_count")]
		public System.Nullable<System.Int32> Unsubscribe_count { get; set; }
		
		/// <summary>
		/// The number of members who have unsubscribed since the last campaign was sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe_count_since_send")]
		public System.Nullable<System.Int32> Unsubscribe_count_since_send { get; set; }
	}
	
	public class PostListsIdPostBody
	{
		
		/// <summary>
		/// An array of objects, each representing an email address and the subscription status for a specific list. Up to 500 members may be added or updated with each API call.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="members")]
		public PostListsIdPostBodyMembers[] PostListsIdPostBodyMembers { get; set; }
		
		/// <summary>
		/// Whether this batch operation will replace all existing tags with tags in request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sync_tags")]
		public System.Nullable<System.Boolean> Sync_tags { get; set; }
		
		/// <summary>
		/// Whether this batch operation will change existing members' subscription status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="update_existing")]
		public System.Nullable<System.Boolean> Update_existing { get; set; }
	}
	
	public class PostListsIdPostBodyMembers
	{
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// Type of email this member asked to get ('html' or 'text').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type")]
		public string Email_type { get; set; }
		
		/// <summary>
		/// The key of this object's properties is the ID of the interest in question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interests")]
		public System.Collections.Generic.Dictionary<string, bool> Interests { get; set; }
		
		/// <summary>
		/// The IP address the subscriber used to confirm their opt-in status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_opt")]
		public string Ip_opt { get; set; }
		
		/// <summary>
		/// IP address the subscriber signed up from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_signup")]
		public string Ip_signup { get; set; }
		
		/// <summary>
		/// If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// Subscriber location information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public PostListsIdPostBodyMembersLocation Location { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// Subscriber's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<PostListsIdPostBodyMembersStatus> Status { get; set; }
		
		/// <summary>
		/// The date and time the subscriber confirmed their opt-in status in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_opt")]
		public System.Nullable<System.DateTimeOffset> Timestamp_opt { get; set; }
		
		/// <summary>
		/// The date and time the subscriber signed up for the list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_signup")]
		public System.Nullable<System.DateTimeOffset> Timestamp_signup { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class PostListsIdPostBodyMembersLocation
	{
		
		/// <summary>
		/// The location latitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The location longitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostListsIdPostBodyMembersStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		subscribed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unsubscribed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cleaned = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		transactional = 4,
	}
	
	public class PostListsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostListsIdReturn_links[] PostListsIdReturn_links { get; set; }
		
		/// <summary>
		/// The total number of items matching the query, irrespective of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error_count")]
		public System.Nullable<System.Int32> Error_count { get; set; }
		
		/// <summary>
		/// An array of objects, each representing an email address that could not be added to the list or updated and an error message providing more details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public PostListsIdReturnErrors[] PostListsIdReturnErrors { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a new member that was added to the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="new_members")]
		public PostListsIdReturnNew_members[] PostListsIdReturnNew_members { get; set; }
		
		/// <summary>
		/// The total number of items matching the query, irrespective of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_created")]
		public System.Nullable<System.Int32> Total_created { get; set; }
		
		/// <summary>
		/// The total number of items matching the query, irrespective of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_updated")]
		public System.Nullable<System.Int32> Total_updated { get; set; }
		
		/// <summary>
		/// An array of objects, each representing an existing list member whose subscription status was updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_members")]
		public PostListsIdReturnUpdated_members[] PostListsIdReturnUpdated_members { get; set; }
	}
	
	public class PostListsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostListsIdReturnErrors
	{
		
		/// <summary>
		/// The email address that could not be added or updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The error message indicating why the email address could not be added or updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
		
		/// <summary>
		/// A unique code that identifies this specifc error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error_code")]
		public System.Nullable<PostListsIdReturnErrorsError_code> Error_code { get; set; }
		
		/// <summary>
		/// If the error is field-related, information about which field is at issue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="field")]
		public string Field { get; set; }
		
		/// <summary>
		/// Message indicating how to resolve a field-related error.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="field_message")]
		public string Field_message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostListsIdReturnErrorsError_code
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR_CONTACT_EXISTS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR_GENERIC = 1,
	}
	
	public class PostListsIdReturnNew_members
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostListsIdReturnNew_members_links[] PostListsIdReturnNew_members_links { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The list member's email client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_client")]
		public string Email_client { get; set; }
		
		/// <summary>
		/// Type of email this member asked to get ('html' or 'text').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type")]
		public string Email_type { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The key of this object's properties is the ID of the interest in question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interests")]
		public System.Collections.Generic.Dictionary<string, bool> Interests { get; set; }
		
		/// <summary>
		/// The IP address the subscriber used to confirm their opt-in status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_opt")]
		public string Ip_opt { get; set; }
		
		/// <summary>
		/// IP address the subscriber signed up from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_signup")]
		public string Ip_signup { get; set; }
		
		/// <summary>
		/// If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The date and time the member's info was last changed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_changed")]
		public System.Nullable<System.DateTimeOffset> Last_changed { get; set; }
		
		/// <summary>
		/// The most recent Note added about this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_note")]
		public PostListsIdReturnNew_membersLast_note Last_note { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// Subscriber location information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public PostListsIdReturnNew_membersLocation Location { get; set; }
		
		/// <summary>
		/// Star rating for this member, between 1 and 5.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_rating")]
		public System.Nullable<System.Int32> Member_rating { get; set; }
		
		/// <summary>
		/// An individual merge var and value for a member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// Open and click rates for this subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public PostListsIdReturnNew_membersStats Stats { get; set; }
		
		/// <summary>
		/// Subscriber's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PostListsIdPostBodyMembersStatus Status { get; set; }
		
		/// <summary>
		/// The tags applied to this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public PostListsIdReturnNew_membersTags[] PostListsIdReturnNew_membersTags { get; set; }
		
		/// <summary>
		/// The number of tags applied to this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags_count")]
		public System.Nullable<System.Int32> Tags_count { get; set; }
		
		/// <summary>
		/// The date and time the subscriber confirmed their opt-in status in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_opt")]
		public System.Nullable<System.DateTimeOffset> Timestamp_opt { get; set; }
		
		/// <summary>
		/// The date and time the subscriber signed up for the list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_signup")]
		public System.Nullable<System.DateTimeOffset> Timestamp_signup { get; set; }
		
		/// <summary>
		/// An identifier for the address across all of Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_email_id")]
		public string Unique_email_id { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class PostListsIdReturnNew_members_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostListsIdReturnNew_membersLast_note
	{
		
		/// <summary>
		/// The date and time the note was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The author of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The content of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// The note id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note_id")]
		public System.Nullable<System.Int32> Note_id { get; set; }
	}
	
	public class PostListsIdReturnNew_membersLocation
	{
		
		/// <summary>
		/// The unique code for the location country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The offset for timezones where daylight saving time is observed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dstoff")]
		public System.Nullable<System.Int32> Dstoff { get; set; }
		
		/// <summary>
		/// The time difference in hours from GMT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gmtoff")]
		public System.Nullable<System.Int32> Gmtoff { get; set; }
		
		/// <summary>
		/// The location latitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The location longitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The timezone for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
	}
	
	public class PostListsIdReturnNew_membersStats
	{
		
		/// <summary>
		/// A subscriber's average clickthrough rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_click_rate")]
		public System.Nullable<System.Double> Avg_click_rate { get; set; }
		
		/// <summary>
		/// A subscriber's average open rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_open_rate")]
		public System.Nullable<System.Double> Avg_open_rate { get; set; }
	}
	
	public class PostListsIdReturnNew_membersTags
	{
		
		/// <summary>
		/// The tag id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the tag
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class PostListsIdReturnUpdated_members
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostListsIdReturnUpdated_members_links[] PostListsIdReturnUpdated_members_links { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The list member's email client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_client")]
		public string Email_client { get; set; }
		
		/// <summary>
		/// Type of email this member asked to get ('html' or 'text').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type")]
		public string Email_type { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The key of this object's properties is the ID of the interest in question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interests")]
		public System.Collections.Generic.Dictionary<string, bool> Interests { get; set; }
		
		/// <summary>
		/// The IP address the subscriber used to confirm their opt-in status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_opt")]
		public string Ip_opt { get; set; }
		
		/// <summary>
		/// IP address the subscriber signed up from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_signup")]
		public string Ip_signup { get; set; }
		
		/// <summary>
		/// If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The date and time the member's info was last changed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_changed")]
		public System.Nullable<System.DateTimeOffset> Last_changed { get; set; }
		
		/// <summary>
		/// The most recent Note added about this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_note")]
		public PostListsIdReturnUpdated_membersLast_note Last_note { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// Subscriber location information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public PostListsIdReturnUpdated_membersLocation Location { get; set; }
		
		/// <summary>
		/// Star rating for this member, between 1 and 5.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_rating")]
		public System.Nullable<System.Int32> Member_rating { get; set; }
		
		/// <summary>
		/// An individual merge var and value for a member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// Open and click rates for this subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public PostListsIdReturnUpdated_membersStats Stats { get; set; }
		
		/// <summary>
		/// Subscriber's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PostListsIdPostBodyMembersStatus Status { get; set; }
		
		/// <summary>
		/// The tags applied to this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public PostListsIdReturnUpdated_membersTags[] PostListsIdReturnUpdated_membersTags { get; set; }
		
		/// <summary>
		/// The number of tags applied to this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags_count")]
		public System.Nullable<System.Int32> Tags_count { get; set; }
		
		/// <summary>
		/// The date and time the subscriber confirmed their opt-in status in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_opt")]
		public System.Nullable<System.DateTimeOffset> Timestamp_opt { get; set; }
		
		/// <summary>
		/// The date and time the subscriber signed up for the list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_signup")]
		public System.Nullable<System.DateTimeOffset> Timestamp_signup { get; set; }
		
		/// <summary>
		/// An identifier for the address across all of Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_email_id")]
		public string Unique_email_id { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class PostListsIdReturnUpdated_members_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostListsIdReturnUpdated_membersLast_note
	{
		
		/// <summary>
		/// The date and time the note was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The author of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The content of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// The note id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note_id")]
		public System.Nullable<System.Int32> Note_id { get; set; }
	}
	
	public class PostListsIdReturnUpdated_membersLocation
	{
		
		/// <summary>
		/// The unique code for the location country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The offset for timezones where daylight saving time is observed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dstoff")]
		public System.Nullable<System.Int32> Dstoff { get; set; }
		
		/// <summary>
		/// The time difference in hours from GMT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gmtoff")]
		public System.Nullable<System.Int32> Gmtoff { get; set; }
		
		/// <summary>
		/// The location latitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The location longitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The timezone for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
	}
	
	public class PostListsIdReturnUpdated_membersStats
	{
		
		/// <summary>
		/// A subscriber's average clickthrough rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_click_rate")]
		public System.Nullable<System.Double> Avg_click_rate { get; set; }
		
		/// <summary>
		/// A subscriber's average open rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_open_rate")]
		public System.Nullable<System.Double> Avg_open_rate { get; set; }
	}
	
	public class PostListsIdReturnUpdated_membersTags
	{
		
		/// <summary>
		/// The tag id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the tag
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class GetListsIdAbuseReportsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdAbuseReportsReturn_links[] GetListsIdAbuseReportsReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing an abuse report resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abuse_reports")]
		public GetListsIdAbuseReportsReturnAbuse_reports[] GetListsIdAbuseReportsReturnAbuse_reports { get; set; }
		
		/// <summary>
		/// The list id for the abuse report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetListsIdAbuseReportsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdAbuseReportsReturnAbuse_reports
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdAbuseReportsReturnAbuse_reports_links[] GetListsIdAbuseReportsReturnAbuse_reports_links { get; set; }
		
		/// <summary>
		/// The campaign id for the abuse report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// Date for the abuse report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The id for the abuse report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The list id for the abuse report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class GetListsIdAbuseReportsReturnAbuse_reports_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdAbuseReportsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdAbuseReportsIdReturn_links[] GetListsIdAbuseReportsIdReturn_links { get; set; }
		
		/// <summary>
		/// The campaign id for the abuse report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// Date for the abuse report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The id for the abuse report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The list id for the abuse report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class GetListsIdAbuseReportsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdActivityReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdActivityReturn_links[] GetListsIdActivityReturn_links { get; set; }
		
		/// <summary>
		/// Recent list activity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activity")]
		public GetListsIdActivityReturnActivity[] GetListsIdActivityReturnActivity { get; set; }
		
		/// <summary>
		/// The unique id for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetListsIdActivityReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdActivityReturnActivity
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdActivityReturnActivity_links[] GetListsIdActivityReturnActivity_links { get; set; }
		
		/// <summary>
		/// The date for the activity summary.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="day")]
		public string Day { get; set; }
		
		/// <summary>
		/// The total number of emails sent on the date for the activity summary.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// The number of hard bounces.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hard_bounce")]
		public System.Nullable<System.Int32> Hard_bounce { get; set; }
		
		/// <summary>
		/// The number of subscribers who may have been added outside of the [double opt-in process](https://mailchimp.com/help/about-double-opt-in/), such as imports or API activity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="other_adds")]
		public System.Nullable<System.Int32> Other_adds { get; set; }
		
		/// <summary>
		/// The number of subscribers who may have been removed outside of unsubscribing or reporting an email as spam (for example, deleted subscribers).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="other_removes")]
		public System.Nullable<System.Int32> Other_removes { get; set; }
		
		/// <summary>
		/// The number of clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_clicks")]
		public System.Nullable<System.Int32> Recipient_clicks { get; set; }
		
		/// <summary>
		/// The number of soft bounces
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="soft_bounce")]
		public System.Nullable<System.Int32> Soft_bounce { get; set; }
		
		/// <summary>
		/// The number of subscribes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subs")]
		public System.Nullable<System.Int32> Subs { get; set; }
		
		/// <summary>
		/// The number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
		
		/// <summary>
		/// The number of unsubscribes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubs")]
		public System.Nullable<System.Int32> Unsubs { get; set; }
	}
	
	public class GetListsIdActivityReturnActivity_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdClientsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdClientsReturn_links[] GetListsIdClientsReturn_links { get; set; }
		
		/// <summary>
		/// An array of top email clients.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clients")]
		public GetListsIdClientsReturnClients[] GetListsIdClientsReturnClients { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetListsIdClientsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdClientsReturnClients
	{
		
		/// <summary>
		/// The name of the email client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client")]
		public string Client { get; set; }
		
		/// <summary>
		/// The number of subscribed members who used this email client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public System.Nullable<System.Int32> Members { get; set; }
	}
	
	public enum GetListsIdGrowthHistorySort_field
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		month = 0,
	}
	
	public class GetListsIdGrowthHistoryReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdGrowthHistoryReturn_links[] GetListsIdGrowthHistoryReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a monthly growth report for a list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="history")]
		public GetListsIdGrowthHistoryReturnHistory[] GetListsIdGrowthHistoryReturnHistory { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetListsIdGrowthHistoryReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdGrowthHistoryReturnHistory
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdGrowthHistoryReturnHistory_links[] GetListsIdGrowthHistoryReturnHistory_links { get; set; }
		
		/// <summary>
		/// Newly cleaned (hard-bounced) members on the list for a specific month.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cleaned")]
		public System.Nullable<System.Int32> Cleaned { get; set; }
		
		/// <summary>
		/// Newly deleted members on the list for a specific month.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleted")]
		public System.Nullable<System.Int32> Deleted { get; set; }
		
		/// <summary>
		/// (deprecated)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="existing")]
		public System.Nullable<System.Int32> Existing { get; set; }
		
		/// <summary>
		/// (deprecated)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imports")]
		public System.Nullable<System.Int32> Imports { get; set; }
		
		/// <summary>
		/// The list id for the growth activity report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The month that the growth history is describing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="month")]
		public string Month { get; set; }
		
		/// <summary>
		/// (deprecated)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="optins")]
		public System.Nullable<System.Int32> Optins { get; set; }
		
		/// <summary>
		/// Pending members on the list for a specific month.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pending")]
		public System.Nullable<System.Int32> Pending { get; set; }
		
		/// <summary>
		/// Newly reconfirmed members on the list for a specific month.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reconfirm")]
		public System.Nullable<System.Int32> Reconfirm { get; set; }
		
		/// <summary>
		/// Total subscribed members on the list at the end of the month.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribed")]
		public System.Nullable<System.Int32> Subscribed { get; set; }
		
		/// <summary>
		/// Subscribers that have been sent transactional emails via Mandrill.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transactional")]
		public System.Nullable<System.Int32> Transactional { get; set; }
		
		/// <summary>
		/// Newly unsubscribed members on the list for a specific month.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribed")]
		public System.Nullable<System.Int32> Unsubscribed { get; set; }
	}
	
	public class GetListsIdGrowthHistoryReturnHistory_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdGrowthHistoryIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdGrowthHistoryIdReturn_links[] GetListsIdGrowthHistoryIdReturn_links { get; set; }
		
		/// <summary>
		/// Newly cleaned (hard-bounced) members on the list for a specific month.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cleaned")]
		public System.Nullable<System.Int32> Cleaned { get; set; }
		
		/// <summary>
		/// Newly deleted members on the list for a specific month.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleted")]
		public System.Nullable<System.Int32> Deleted { get; set; }
		
		/// <summary>
		/// (deprecated)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="existing")]
		public System.Nullable<System.Int32> Existing { get; set; }
		
		/// <summary>
		/// (deprecated)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imports")]
		public System.Nullable<System.Int32> Imports { get; set; }
		
		/// <summary>
		/// The list id for the growth activity report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The month that the growth history is describing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="month")]
		public string Month { get; set; }
		
		/// <summary>
		/// (deprecated)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="optins")]
		public System.Nullable<System.Int32> Optins { get; set; }
		
		/// <summary>
		/// Pending members on the list for a specific month.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pending")]
		public System.Nullable<System.Int32> Pending { get; set; }
		
		/// <summary>
		/// Newly reconfirmed members on the list for a specific month.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reconfirm")]
		public System.Nullable<System.Int32> Reconfirm { get; set; }
		
		/// <summary>
		/// Total subscribed members on the list at the end of the month.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribed")]
		public System.Nullable<System.Int32> Subscribed { get; set; }
		
		/// <summary>
		/// Subscribers that have been sent transactional emails via Mandrill.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="transactional")]
		public System.Nullable<System.Int32> Transactional { get; set; }
		
		/// <summary>
		/// Newly unsubscribed members on the list for a specific month.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribed")]
		public System.Nullable<System.Int32> Unsubscribed { get; set; }
	}
	
	public class GetListsIdGrowthHistoryIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdInterestCategoriesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdInterestCategoriesReturn_links[] GetListsIdInterestCategoriesReturn_links { get; set; }
		
		/// <summary>
		/// This array contains individual interest categories.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="categories")]
		public GetListsIdInterestCategoriesReturnCategories[] GetListsIdInterestCategoriesReturnCategories { get; set; }
		
		/// <summary>
		/// The ID for the list that this category belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetListsIdInterestCategoriesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdInterestCategoriesReturnCategories
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdInterestCategoriesReturnCategories_links[] GetListsIdInterestCategoriesReturnCategories_links { get; set; }
		
		/// <summary>
		/// The order that the categories are displayed in the list. Lower numbers display first.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_order")]
		public System.Nullable<System.Int32> Display_order { get; set; }
		
		/// <summary>
		/// The id for the interest category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The unique list id for the category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The text description of this category. This field appears on signup forms and is often phrased as a question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Determines how this categoryâ€™s interests appear on signup forms.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public PostListsIdInterestCategoriesBodyType Type { get; set; }
	}
	
	public class GetListsIdInterestCategoriesReturnCategories_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostListsIdInterestCategoriesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostListsIdInterestCategoriesReturn_links[] PostListsIdInterestCategoriesReturn_links { get; set; }
		
		/// <summary>
		/// The order that the categories are displayed in the list. Lower numbers display first.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_order")]
		public System.Nullable<System.Int32> Display_order { get; set; }
		
		/// <summary>
		/// The id for the interest category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The unique list id for the category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The text description of this category. This field appears on signup forms and is often phrased as a question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Determines how this categoryâ€™s interests appear on signup forms.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public PostListsIdInterestCategoriesBodyType Type { get; set; }
	}
	
	public class PostListsIdInterestCategoriesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdInterestCategoriesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdInterestCategoriesIdReturn_links[] GetListsIdInterestCategoriesIdReturn_links { get; set; }
		
		/// <summary>
		/// The order that the categories are displayed in the list. Lower numbers display first.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_order")]
		public System.Nullable<System.Int32> Display_order { get; set; }
		
		/// <summary>
		/// The id for the interest category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The unique list id for the category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The text description of this category. This field appears on signup forms and is often phrased as a question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Determines how this categoryâ€™s interests appear on signup forms.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public PostListsIdInterestCategoriesBodyType Type { get; set; }
	}
	
	public class GetListsIdInterestCategoriesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchListsIdInterestCategoriesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchListsIdInterestCategoriesIdReturn_links[] PatchListsIdInterestCategoriesIdReturn_links { get; set; }
		
		/// <summary>
		/// The order that the categories are displayed in the list. Lower numbers display first.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_order")]
		public System.Nullable<System.Int32> Display_order { get; set; }
		
		/// <summary>
		/// The id for the interest category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The unique list id for the category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The text description of this category. This field appears on signup forms and is often phrased as a question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Determines how this categoryâ€™s interests appear on signup forms.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public PostListsIdInterestCategoriesBodyType Type { get; set; }
	}
	
	public class PatchListsIdInterestCategoriesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdInterestCategoriesIdInterestsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdInterestCategoriesIdInterestsReturn_links[] GetListsIdInterestCategoriesIdInterestsReturn_links { get; set; }
		
		/// <summary>
		/// The id for the interest category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category_id")]
		public string Category_id { get; set; }
		
		/// <summary>
		/// An array of this category's interests
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interests")]
		public GetListsIdInterestCategoriesIdInterestsReturnInterests[] GetListsIdInterestCategoriesIdInterestsReturnInterests { get; set; }
		
		/// <summary>
		/// The unique list id that the interests belong to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetListsIdInterestCategoriesIdInterestsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdInterestCategoriesIdInterestsReturnInterests
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdInterestCategoriesIdInterestsReturnInterests_links[] GetListsIdInterestCategoriesIdInterestsReturnInterests_links { get; set; }
		
		/// <summary>
		/// The id for the interest category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category_id")]
		public string Category_id { get; set; }
		
		/// <summary>
		/// The display order for interests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_order")]
		public System.Nullable<System.Int32> Display_order { get; set; }
		
		/// <summary>
		/// The ID for the interest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The ID for the list that this interest belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The name of the interest. This can be shown publicly on a subscription form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The number of subscribers associated with this interest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber_count")]
		public string Subscriber_count { get; set; }
	}
	
	public class GetListsIdInterestCategoriesIdInterestsReturnInterests_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostListsIdInterestCategoriesIdInterestsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostListsIdInterestCategoriesIdInterestsReturn_links[] PostListsIdInterestCategoriesIdInterestsReturn_links { get; set; }
		
		/// <summary>
		/// The id for the interest category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category_id")]
		public string Category_id { get; set; }
		
		/// <summary>
		/// The display order for interests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_order")]
		public System.Nullable<System.Int32> Display_order { get; set; }
		
		/// <summary>
		/// The ID for the interest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The ID for the list that this interest belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The name of the interest. This can be shown publicly on a subscription form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The number of subscribers associated with this interest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber_count")]
		public string Subscriber_count { get; set; }
	}
	
	public class PostListsIdInterestCategoriesIdInterestsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdInterestCategoriesIdInterestsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdInterestCategoriesIdInterestsIdReturn_links[] GetListsIdInterestCategoriesIdInterestsIdReturn_links { get; set; }
		
		/// <summary>
		/// The id for the interest category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category_id")]
		public string Category_id { get; set; }
		
		/// <summary>
		/// The display order for interests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_order")]
		public System.Nullable<System.Int32> Display_order { get; set; }
		
		/// <summary>
		/// The ID for the interest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The ID for the list that this interest belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The name of the interest. This can be shown publicly on a subscription form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The number of subscribers associated with this interest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber_count")]
		public string Subscriber_count { get; set; }
	}
	
	public class GetListsIdInterestCategoriesIdInterestsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchListsIdInterestCategoriesIdInterestsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchListsIdInterestCategoriesIdInterestsIdReturn_links[] PatchListsIdInterestCategoriesIdInterestsIdReturn_links { get; set; }
		
		/// <summary>
		/// The id for the interest category.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category_id")]
		public string Category_id { get; set; }
		
		/// <summary>
		/// The display order for interests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_order")]
		public System.Nullable<System.Int32> Display_order { get; set; }
		
		/// <summary>
		/// The ID for the interest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The ID for the list that this interest belongs to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The name of the interest. This can be shown publicly on a subscription form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The number of subscribers associated with this interest.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber_count")]
		public string Subscriber_count { get; set; }
	}
	
	public class PatchListsIdInterestCategoriesIdInterestsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdLocationsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdLocationsReturn_links[] GetListsIdLocationsReturn_links { get; set; }
		
		/// <summary>
		/// The unique id for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a list's top subscriber locations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locations")]
		public GetListsIdLocationsReturnLocations[] GetListsIdLocationsReturnLocations { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetListsIdLocationsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdLocationsReturnLocations
	{
		
		/// <summary>
		/// The ISO 3166 2 digit country code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cc")]
		public string Cc { get; set; }
		
		/// <summary>
		/// The name of the country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// The percent of subscribers in the country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="percent")]
		public System.Nullable<System.Double> Percent { get; set; }
		
		/// <summary>
		/// The total number of subscribers in the country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total")]
		public System.Nullable<System.Int32> Total { get; set; }
	}
	
	public enum GetListsIdMembersStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		subscribed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unsubscribed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cleaned = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		transactional = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		archived = 5,
	}
	
	public enum GetListsIdMembersInterest_match
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		any = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		all = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 2,
	}
	
	public enum GetListsIdMembersSort_field
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		timestamp_opt = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		timestamp_signup = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		last_changed = 2,
	}
	
	public class GetListsIdMembersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdMembersReturn_links[] GetListsIdMembersReturn_links { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a specific list member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public GetListsIdMembersReturnMembers[] GetListsIdMembersReturnMembers { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetListsIdMembersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdMembersReturnMembers
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdMembersReturnMembers_links[] GetListsIdMembersReturnMembers_links { get; set; }
		
		/// <summary>
		/// Indicates whether a contact consents to 1:1 messaging.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consents_to_one_to_one_messaging")]
		public System.Nullable<System.Boolean> Consents_to_one_to_one_messaging { get; set; }
		
		/// <summary>
		/// As Mailchimp evolves beyond email, you may eventually have contacts without email addresses. While the `id` is the MD5 hash of their email address, this `contact_id` is agnostic of contactâ€™s inclusion of an email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The list member's email client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_client")]
		public string Email_client { get; set; }
		
		/// <summary>
		/// Type of email this member asked to get ('html' or 'text').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type")]
		public string Email_type { get; set; }
		
		/// <summary>
		/// The contact's full name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_name")]
		public string Full_name { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The key of this object's properties is the ID of the interest in question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interests")]
		public System.Collections.Generic.Dictionary<string, bool> Interests { get; set; }
		
		/// <summary>
		/// The IP address the subscriber used to confirm their opt-in status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_opt")]
		public string Ip_opt { get; set; }
		
		/// <summary>
		/// IP address the subscriber signed up from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_signup")]
		public string Ip_signup { get; set; }
		
		/// <summary>
		/// If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The date and time the member's info was last changed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_changed")]
		public System.Nullable<System.DateTimeOffset> Last_changed { get; set; }
		
		/// <summary>
		/// The most recent Note added about this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_note")]
		public GetListsIdMembersReturnMembersLast_note Last_note { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// Subscriber location information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public GetListsIdMembersReturnMembersLocation Location { get; set; }
		
		/// <summary>
		/// The marketing permissions for the subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permissions")]
		public GetListsIdMembersReturnMembersMarketing_permissions[] GetListsIdMembersReturnMembersMarketing_permissions { get; set; }
		
		/// <summary>
		/// Star rating for this member, between 1 and 5.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_rating")]
		public System.Nullable<System.Int32> Member_rating { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// The source from which the subscriber was added to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		/// <summary>
		/// Open and click rates for this subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public GetListsIdMembersReturnMembersStats Stats { get; set; }
		
		/// <summary>
		/// Subscriber's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetListsIdMembersStatus Status { get; set; }
		
		/// <summary>
		/// Returns up to 50 tags applied to this member. To retrieve all tags see [Member Tags](https://mailchimp.com/developer/marketing/api/list-member-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public GetListsIdMembersReturnMembersTags[] GetListsIdMembersReturnMembersTags { get; set; }
		
		/// <summary>
		/// The number of tags applied to this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags_count")]
		public System.Nullable<System.Int32> Tags_count { get; set; }
		
		/// <summary>
		/// The date and time the subscriber confirmed their opt-in status in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_opt")]
		public System.Nullable<System.DateTimeOffset> Timestamp_opt { get; set; }
		
		/// <summary>
		/// The date and time the subscriber signed up for the list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_signup")]
		public System.Nullable<System.DateTimeOffset> Timestamp_signup { get; set; }
		
		/// <summary>
		/// An identifier for the address across all of Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_email_id")]
		public string Unique_email_id { get; set; }
		
		/// <summary>
		/// A subscriber's reason for unsubscribing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe_reason")]
		public string Unsubscribe_reason { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this member in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/members/view?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class GetListsIdMembersReturnMembers_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdMembersReturnMembersLast_note
	{
		
		/// <summary>
		/// The date and time the note was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The author of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The content of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// The note id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note_id")]
		public System.Nullable<System.Int32> Note_id { get; set; }
	}
	
	public class GetListsIdMembersReturnMembersLocation
	{
		
		/// <summary>
		/// The unique code for the location country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The offset for timezones where daylight saving time is observed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dstoff")]
		public System.Nullable<System.Int32> Dstoff { get; set; }
		
		/// <summary>
		/// The time difference in hours from GMT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gmtoff")]
		public System.Nullable<System.Int32> Gmtoff { get; set; }
		
		/// <summary>
		/// The location latitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The location longitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The region for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The timezone for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
	}
	
	public class GetListsIdMembersReturnMembersMarketing_permissions
	{
		
		/// <summary>
		/// If the subscriber has opted-in to the marketing permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The id for the marketing permission on the list
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permission_id")]
		public string Marketing_permission_id { get; set; }
		
		/// <summary>
		/// The text of the marketing permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	public class GetListsIdMembersReturnMembersStats
	{
		
		/// <summary>
		/// A subscriber's average clickthrough rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_click_rate")]
		public System.Nullable<System.Double> Avg_click_rate { get; set; }
		
		/// <summary>
		/// A subscriber's average open rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_open_rate")]
		public System.Nullable<System.Double> Avg_open_rate { get; set; }
		
		/// <summary>
		/// Ecommerce stats for the list member if the list is attached to a store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecommerce_data")]
		public GetListsIdMembersReturnMembersStatsEcommerce_data Ecommerce_data { get; set; }
	}
	
	public class GetListsIdMembersReturnMembersStatsEcommerce_data
	{
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The total number of orders placed by the list member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="number_of_orders")]
		public System.Nullable<System.Double> Number_of_orders { get; set; }
		
		/// <summary>
		/// The total revenue the list member has brought in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
	}
	
	public class GetListsIdMembersReturnMembersTags
	{
		
		/// <summary>
		/// The tag id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the tag
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class PostListsIdMembersPostBody
	{
		
		/// <summary>
		/// Email address for a subscriber.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// Type of email this member asked to get ('html' or 'text').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type")]
		public string Email_type { get; set; }
		
		/// <summary>
		/// The key of this object's properties is the ID of the interest in question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interests")]
		public System.Collections.Generic.Dictionary<string, bool> Interests { get; set; }
		
		/// <summary>
		/// The IP address the subscriber used to confirm their opt-in status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_opt")]
		public string Ip_opt { get; set; }
		
		/// <summary>
		/// IP address the subscriber signed up from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_signup")]
		public string Ip_signup { get; set; }
		
		/// <summary>
		/// If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// Subscriber location information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public PostListsIdMembersPostBodyLocation Location { get; set; }
		
		/// <summary>
		/// The marketing permissions for the subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permissions")]
		public PostListsIdMembersPostBodyMarketing_permissions[] PostListsIdMembersPostBodyMarketing_permissions { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// Subscriber's current status.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PostListsIdPostBodyMembersStatus Status { get; set; }
		
		/// <summary>
		/// The tags that are associated with a member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string[] Tags { get; set; }
		
		/// <summary>
		/// The date and time the subscriber confirmed their opt-in status in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_opt")]
		public System.Nullable<System.DateTimeOffset> Timestamp_opt { get; set; }
		
		/// <summary>
		/// The date and time the subscriber signed up for the list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_signup")]
		public System.Nullable<System.DateTimeOffset> Timestamp_signup { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class PostListsIdMembersPostBodyLocation
	{
		
		/// <summary>
		/// The location latitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The location longitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
	}
	
	public class PostListsIdMembersPostBodyMarketing_permissions
	{
		
		/// <summary>
		/// If the subscriber has opted-in to the marketing permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The id for the marketing permission on the list
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permission_id")]
		public string Marketing_permission_id { get; set; }
	}
	
	public class PostListsIdMembersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostListsIdMembersReturn_links[] PostListsIdMembersReturn_links { get; set; }
		
		/// <summary>
		/// Indicates whether a contact consents to 1:1 messaging.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consents_to_one_to_one_messaging")]
		public System.Nullable<System.Boolean> Consents_to_one_to_one_messaging { get; set; }
		
		/// <summary>
		/// As Mailchimp evolves beyond email, you may eventually have contacts without email addresses. While the `id` is the MD5 hash of their email address, this `contact_id` is agnostic of contactâ€™s inclusion of an email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The list member's email client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_client")]
		public string Email_client { get; set; }
		
		/// <summary>
		/// Type of email this member asked to get ('html' or 'text').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type")]
		public string Email_type { get; set; }
		
		/// <summary>
		/// The contact's full name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_name")]
		public string Full_name { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The key of this object's properties is the ID of the interest in question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interests")]
		public System.Collections.Generic.Dictionary<string, bool> Interests { get; set; }
		
		/// <summary>
		/// The IP address the subscriber used to confirm their opt-in status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_opt")]
		public string Ip_opt { get; set; }
		
		/// <summary>
		/// IP address the subscriber signed up from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_signup")]
		public string Ip_signup { get; set; }
		
		/// <summary>
		/// If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The date and time the member's info was last changed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_changed")]
		public System.Nullable<System.DateTimeOffset> Last_changed { get; set; }
		
		/// <summary>
		/// The most recent Note added about this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_note")]
		public PostListsIdMembersReturnLast_note Last_note { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// Subscriber location information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public PostListsIdMembersReturnLocation Location { get; set; }
		
		/// <summary>
		/// The marketing permissions for the subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permissions")]
		public PostListsIdMembersReturnMarketing_permissions[] PostListsIdMembersReturnMarketing_permissions { get; set; }
		
		/// <summary>
		/// Star rating for this member, between 1 and 5.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_rating")]
		public System.Nullable<System.Int32> Member_rating { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// The source from which the subscriber was added to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		/// <summary>
		/// Open and click rates for this subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public PostListsIdMembersReturnStats Stats { get; set; }
		
		/// <summary>
		/// Subscriber's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetListsIdMembersStatus Status { get; set; }
		
		/// <summary>
		/// Returns up to 50 tags applied to this member. To retrieve all tags see [Member Tags](https://mailchimp.com/developer/marketing/api/list-member-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public PostListsIdMembersReturnTags[] PostListsIdMembersReturnTags { get; set; }
		
		/// <summary>
		/// The number of tags applied to this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags_count")]
		public System.Nullable<System.Int32> Tags_count { get; set; }
		
		/// <summary>
		/// The date and time the subscriber confirmed their opt-in status in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_opt")]
		public System.Nullable<System.DateTimeOffset> Timestamp_opt { get; set; }
		
		/// <summary>
		/// The date and time the subscriber signed up for the list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_signup")]
		public System.Nullable<System.DateTimeOffset> Timestamp_signup { get; set; }
		
		/// <summary>
		/// An identifier for the address across all of Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_email_id")]
		public string Unique_email_id { get; set; }
		
		/// <summary>
		/// A subscriber's reason for unsubscribing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe_reason")]
		public string Unsubscribe_reason { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this member in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/members/view?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class PostListsIdMembersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostListsIdMembersReturnLast_note
	{
		
		/// <summary>
		/// The date and time the note was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The author of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The content of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// The note id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note_id")]
		public System.Nullable<System.Int32> Note_id { get; set; }
	}
	
	public class PostListsIdMembersReturnLocation
	{
		
		/// <summary>
		/// The unique code for the location country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The offset for timezones where daylight saving time is observed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dstoff")]
		public System.Nullable<System.Int32> Dstoff { get; set; }
		
		/// <summary>
		/// The time difference in hours from GMT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gmtoff")]
		public System.Nullable<System.Int32> Gmtoff { get; set; }
		
		/// <summary>
		/// The location latitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The location longitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The region for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The timezone for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
	}
	
	public class PostListsIdMembersReturnMarketing_permissions
	{
		
		/// <summary>
		/// If the subscriber has opted-in to the marketing permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The id for the marketing permission on the list
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permission_id")]
		public string Marketing_permission_id { get; set; }
		
		/// <summary>
		/// The text of the marketing permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	public class PostListsIdMembersReturnStats
	{
		
		/// <summary>
		/// A subscriber's average clickthrough rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_click_rate")]
		public System.Nullable<System.Double> Avg_click_rate { get; set; }
		
		/// <summary>
		/// A subscriber's average open rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_open_rate")]
		public System.Nullable<System.Double> Avg_open_rate { get; set; }
		
		/// <summary>
		/// Ecommerce stats for the list member if the list is attached to a store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecommerce_data")]
		public PostListsIdMembersReturnStatsEcommerce_data Ecommerce_data { get; set; }
	}
	
	public class PostListsIdMembersReturnStatsEcommerce_data
	{
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The total number of orders placed by the list member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="number_of_orders")]
		public System.Nullable<System.Double> Number_of_orders { get; set; }
		
		/// <summary>
		/// The total revenue the list member has brought in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
	}
	
	public class PostListsIdMembersReturnTags
	{
		
		/// <summary>
		/// The tag id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the tag
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class GetListsIdMembersIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdMembersIdReturn_links[] GetListsIdMembersIdReturn_links { get; set; }
		
		/// <summary>
		/// Indicates whether a contact consents to 1:1 messaging.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consents_to_one_to_one_messaging")]
		public System.Nullable<System.Boolean> Consents_to_one_to_one_messaging { get; set; }
		
		/// <summary>
		/// As Mailchimp evolves beyond email, you may eventually have contacts without email addresses. While the `id` is the MD5 hash of their email address, this `contact_id` is agnostic of contactâ€™s inclusion of an email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The list member's email client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_client")]
		public string Email_client { get; set; }
		
		/// <summary>
		/// Type of email this member asked to get ('html' or 'text').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type")]
		public string Email_type { get; set; }
		
		/// <summary>
		/// The contact's full name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_name")]
		public string Full_name { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The key of this object's properties is the ID of the interest in question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interests")]
		public System.Collections.Generic.Dictionary<string, bool> Interests { get; set; }
		
		/// <summary>
		/// The IP address the subscriber used to confirm their opt-in status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_opt")]
		public string Ip_opt { get; set; }
		
		/// <summary>
		/// IP address the subscriber signed up from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_signup")]
		public string Ip_signup { get; set; }
		
		/// <summary>
		/// If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The date and time the member's info was last changed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_changed")]
		public System.Nullable<System.DateTimeOffset> Last_changed { get; set; }
		
		/// <summary>
		/// The most recent Note added about this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_note")]
		public GetListsIdMembersIdReturnLast_note Last_note { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// Subscriber location information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public GetListsIdMembersIdReturnLocation Location { get; set; }
		
		/// <summary>
		/// The marketing permissions for the subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permissions")]
		public GetListsIdMembersIdReturnMarketing_permissions[] GetListsIdMembersIdReturnMarketing_permissions { get; set; }
		
		/// <summary>
		/// Star rating for this member, between 1 and 5.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_rating")]
		public System.Nullable<System.Int32> Member_rating { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// The source from which the subscriber was added to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		/// <summary>
		/// Open and click rates for this subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public GetListsIdMembersIdReturnStats Stats { get; set; }
		
		/// <summary>
		/// Subscriber's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetListsIdMembersStatus Status { get; set; }
		
		/// <summary>
		/// Returns up to 50 tags applied to this member. To retrieve all tags see [Member Tags](https://mailchimp.com/developer/marketing/api/list-member-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public GetListsIdMembersIdReturnTags[] GetListsIdMembersIdReturnTags { get; set; }
		
		/// <summary>
		/// The number of tags applied to this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags_count")]
		public System.Nullable<System.Int32> Tags_count { get; set; }
		
		/// <summary>
		/// The date and time the subscriber confirmed their opt-in status in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_opt")]
		public System.Nullable<System.DateTimeOffset> Timestamp_opt { get; set; }
		
		/// <summary>
		/// The date and time the subscriber signed up for the list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_signup")]
		public System.Nullable<System.DateTimeOffset> Timestamp_signup { get; set; }
		
		/// <summary>
		/// An identifier for the address across all of Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_email_id")]
		public string Unique_email_id { get; set; }
		
		/// <summary>
		/// A subscriber's reason for unsubscribing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe_reason")]
		public string Unsubscribe_reason { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this member in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/members/view?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class GetListsIdMembersIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdMembersIdReturnLast_note
	{
		
		/// <summary>
		/// The date and time the note was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The author of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The content of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// The note id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note_id")]
		public System.Nullable<System.Int32> Note_id { get; set; }
	}
	
	public class GetListsIdMembersIdReturnLocation
	{
		
		/// <summary>
		/// The unique code for the location country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The offset for timezones where daylight saving time is observed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dstoff")]
		public System.Nullable<System.Int32> Dstoff { get; set; }
		
		/// <summary>
		/// The time difference in hours from GMT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gmtoff")]
		public System.Nullable<System.Int32> Gmtoff { get; set; }
		
		/// <summary>
		/// The location latitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The location longitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The region for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The timezone for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
	}
	
	public class GetListsIdMembersIdReturnMarketing_permissions
	{
		
		/// <summary>
		/// If the subscriber has opted-in to the marketing permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The id for the marketing permission on the list
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permission_id")]
		public string Marketing_permission_id { get; set; }
		
		/// <summary>
		/// The text of the marketing permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	public class GetListsIdMembersIdReturnStats
	{
		
		/// <summary>
		/// A subscriber's average clickthrough rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_click_rate")]
		public System.Nullable<System.Double> Avg_click_rate { get; set; }
		
		/// <summary>
		/// A subscriber's average open rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_open_rate")]
		public System.Nullable<System.Double> Avg_open_rate { get; set; }
		
		/// <summary>
		/// Ecommerce stats for the list member if the list is attached to a store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecommerce_data")]
		public GetListsIdMembersIdReturnStatsEcommerce_data Ecommerce_data { get; set; }
	}
	
	public class GetListsIdMembersIdReturnStatsEcommerce_data
	{
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The total number of orders placed by the list member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="number_of_orders")]
		public System.Nullable<System.Double> Number_of_orders { get; set; }
		
		/// <summary>
		/// The total revenue the list member has brought in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
	}
	
	public class GetListsIdMembersIdReturnTags
	{
		
		/// <summary>
		/// The tag id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the tag
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class PatchListsIdMembersIdPatchBody
	{
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// Type of email this member asked to get ('html' or 'text').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type")]
		public string Email_type { get; set; }
		
		/// <summary>
		/// The key of this object's properties is the ID of the interest in question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interests")]
		public System.Collections.Generic.Dictionary<string, bool> Interests { get; set; }
		
		/// <summary>
		/// The IP address the subscriber used to confirm their opt-in status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_opt")]
		public string Ip_opt { get; set; }
		
		/// <summary>
		/// IP address the subscriber signed up from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_signup")]
		public string Ip_signup { get; set; }
		
		/// <summary>
		/// If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// Subscriber location information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public PatchListsIdMembersIdPatchBodyLocation Location { get; set; }
		
		/// <summary>
		/// The marketing permissions for the subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permissions")]
		public PatchListsIdMembersIdPatchBodyMarketing_permissions[] PatchListsIdMembersIdPatchBodyMarketing_permissions { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// Subscriber's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<PatchListsIdMembersIdPatchBodyStatus> Status { get; set; }
		
		/// <summary>
		/// The date and time the subscriber confirmed their opt-in status in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_opt")]
		public System.Nullable<System.DateTimeOffset> Timestamp_opt { get; set; }
		
		/// <summary>
		/// The date and time the subscriber signed up for the list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_signup")]
		public System.Nullable<System.DateTimeOffset> Timestamp_signup { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class PatchListsIdMembersIdPatchBodyLocation
	{
		
		/// <summary>
		/// The location latitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The location longitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
	}
	
	public class PatchListsIdMembersIdPatchBodyMarketing_permissions
	{
		
		/// <summary>
		/// If the subscriber has opted-in to the marketing permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The id for the marketing permission on the list
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permission_id")]
		public string Marketing_permission_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PatchListsIdMembersIdPatchBodyStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		subscribed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unsubscribed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cleaned = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 3,
	}
	
	public class PatchListsIdMembersIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchListsIdMembersIdReturn_links[] PatchListsIdMembersIdReturn_links { get; set; }
		
		/// <summary>
		/// Indicates whether a contact consents to 1:1 messaging.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consents_to_one_to_one_messaging")]
		public System.Nullable<System.Boolean> Consents_to_one_to_one_messaging { get; set; }
		
		/// <summary>
		/// As Mailchimp evolves beyond email, you may eventually have contacts without email addresses. While the `id` is the MD5 hash of their email address, this `contact_id` is agnostic of contactâ€™s inclusion of an email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The list member's email client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_client")]
		public string Email_client { get; set; }
		
		/// <summary>
		/// Type of email this member asked to get ('html' or 'text').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type")]
		public string Email_type { get; set; }
		
		/// <summary>
		/// The contact's full name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_name")]
		public string Full_name { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The key of this object's properties is the ID of the interest in question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interests")]
		public System.Collections.Generic.Dictionary<string, bool> Interests { get; set; }
		
		/// <summary>
		/// The IP address the subscriber used to confirm their opt-in status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_opt")]
		public string Ip_opt { get; set; }
		
		/// <summary>
		/// IP address the subscriber signed up from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_signup")]
		public string Ip_signup { get; set; }
		
		/// <summary>
		/// If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The date and time the member's info was last changed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_changed")]
		public System.Nullable<System.DateTimeOffset> Last_changed { get; set; }
		
		/// <summary>
		/// The most recent Note added about this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_note")]
		public PatchListsIdMembersIdReturnLast_note Last_note { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// Subscriber location information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public PatchListsIdMembersIdReturnLocation Location { get; set; }
		
		/// <summary>
		/// The marketing permissions for the subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permissions")]
		public PatchListsIdMembersIdReturnMarketing_permissions[] PatchListsIdMembersIdReturnMarketing_permissions { get; set; }
		
		/// <summary>
		/// Star rating for this member, between 1 and 5.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_rating")]
		public System.Nullable<System.Int32> Member_rating { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// The source from which the subscriber was added to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		/// <summary>
		/// Open and click rates for this subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public PatchListsIdMembersIdReturnStats Stats { get; set; }
		
		/// <summary>
		/// Subscriber's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetListsIdMembersStatus Status { get; set; }
		
		/// <summary>
		/// Returns up to 50 tags applied to this member. To retrieve all tags see [Member Tags](https://mailchimp.com/developer/marketing/api/list-member-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public PatchListsIdMembersIdReturnTags[] PatchListsIdMembersIdReturnTags { get; set; }
		
		/// <summary>
		/// The number of tags applied to this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags_count")]
		public System.Nullable<System.Int32> Tags_count { get; set; }
		
		/// <summary>
		/// The date and time the subscriber confirmed their opt-in status in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_opt")]
		public System.Nullable<System.DateTimeOffset> Timestamp_opt { get; set; }
		
		/// <summary>
		/// The date and time the subscriber signed up for the list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_signup")]
		public System.Nullable<System.DateTimeOffset> Timestamp_signup { get; set; }
		
		/// <summary>
		/// An identifier for the address across all of Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_email_id")]
		public string Unique_email_id { get; set; }
		
		/// <summary>
		/// A subscriber's reason for unsubscribing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe_reason")]
		public string Unsubscribe_reason { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this member in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/members/view?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class PatchListsIdMembersIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchListsIdMembersIdReturnLast_note
	{
		
		/// <summary>
		/// The date and time the note was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The author of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The content of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// The note id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note_id")]
		public System.Nullable<System.Int32> Note_id { get; set; }
	}
	
	public class PatchListsIdMembersIdReturnLocation
	{
		
		/// <summary>
		/// The unique code for the location country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The offset for timezones where daylight saving time is observed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dstoff")]
		public System.Nullable<System.Int32> Dstoff { get; set; }
		
		/// <summary>
		/// The time difference in hours from GMT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gmtoff")]
		public System.Nullable<System.Int32> Gmtoff { get; set; }
		
		/// <summary>
		/// The location latitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The location longitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The region for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The timezone for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
	}
	
	public class PatchListsIdMembersIdReturnMarketing_permissions
	{
		
		/// <summary>
		/// If the subscriber has opted-in to the marketing permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The id for the marketing permission on the list
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permission_id")]
		public string Marketing_permission_id { get; set; }
		
		/// <summary>
		/// The text of the marketing permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	public class PatchListsIdMembersIdReturnStats
	{
		
		/// <summary>
		/// A subscriber's average clickthrough rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_click_rate")]
		public System.Nullable<System.Double> Avg_click_rate { get; set; }
		
		/// <summary>
		/// A subscriber's average open rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_open_rate")]
		public System.Nullable<System.Double> Avg_open_rate { get; set; }
		
		/// <summary>
		/// Ecommerce stats for the list member if the list is attached to a store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecommerce_data")]
		public PatchListsIdMembersIdReturnStatsEcommerce_data Ecommerce_data { get; set; }
	}
	
	public class PatchListsIdMembersIdReturnStatsEcommerce_data
	{
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The total number of orders placed by the list member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="number_of_orders")]
		public System.Nullable<System.Double> Number_of_orders { get; set; }
		
		/// <summary>
		/// The total revenue the list member has brought in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
	}
	
	public class PatchListsIdMembersIdReturnTags
	{
		
		/// <summary>
		/// The tag id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the tag
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class PutListsIdMembersIdPutBody
	{
		
		/// <summary>
		/// Email address for a subscriber. This value is required only if the email address is not already present on the list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// Type of email this member asked to get ('html' or 'text').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type")]
		public string Email_type { get; set; }
		
		/// <summary>
		/// The key of this object's properties is the ID of the interest in question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interests")]
		public System.Collections.Generic.Dictionary<string, bool> Interests { get; set; }
		
		/// <summary>
		/// The IP address the subscriber used to confirm their opt-in status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_opt")]
		public string Ip_opt { get; set; }
		
		/// <summary>
		/// IP address the subscriber signed up from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_signup")]
		public string Ip_signup { get; set; }
		
		/// <summary>
		/// If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// Subscriber location information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public PutListsIdMembersIdPutBodyLocation Location { get; set; }
		
		/// <summary>
		/// The marketing permissions for the subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permissions")]
		public PutListsIdMembersIdPutBodyMarketing_permissions[] PutListsIdMembersIdPutBodyMarketing_permissions { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// Subscriber's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PostListsIdPostBodyMembersStatus Status { get; set; }
		
		/// <summary>
		/// Subscriber's status. This value is required only if the email address is not already present on the list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status_if_new")]
		public PostListsIdPostBodyMembersStatus Status_if_new { get; set; }
		
		/// <summary>
		/// The date and time the subscriber confirmed their opt-in status in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_opt")]
		public System.Nullable<System.DateTimeOffset> Timestamp_opt { get; set; }
		
		/// <summary>
		/// The date and time the subscriber signed up for the list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_signup")]
		public System.Nullable<System.DateTimeOffset> Timestamp_signup { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class PutListsIdMembersIdPutBodyLocation
	{
		
		/// <summary>
		/// The location latitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The location longitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
	}
	
	public class PutListsIdMembersIdPutBodyMarketing_permissions
	{
		
		/// <summary>
		/// If the subscriber has opted-in to the marketing permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The id for the marketing permission on the list
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permission_id")]
		public string Marketing_permission_id { get; set; }
	}
	
	public class PutListsIdMembersIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PutListsIdMembersIdReturn_links[] PutListsIdMembersIdReturn_links { get; set; }
		
		/// <summary>
		/// Indicates whether a contact consents to 1:1 messaging.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consents_to_one_to_one_messaging")]
		public System.Nullable<System.Boolean> Consents_to_one_to_one_messaging { get; set; }
		
		/// <summary>
		/// As Mailchimp evolves beyond email, you may eventually have contacts without email addresses. While the `id` is the MD5 hash of their email address, this `contact_id` is agnostic of contactâ€™s inclusion of an email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The list member's email client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_client")]
		public string Email_client { get; set; }
		
		/// <summary>
		/// Type of email this member asked to get ('html' or 'text').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type")]
		public string Email_type { get; set; }
		
		/// <summary>
		/// The contact's full name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_name")]
		public string Full_name { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The key of this object's properties is the ID of the interest in question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interests")]
		public System.Collections.Generic.Dictionary<string, bool> Interests { get; set; }
		
		/// <summary>
		/// The IP address the subscriber used to confirm their opt-in status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_opt")]
		public string Ip_opt { get; set; }
		
		/// <summary>
		/// IP address the subscriber signed up from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_signup")]
		public string Ip_signup { get; set; }
		
		/// <summary>
		/// If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The date and time the member's info was last changed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_changed")]
		public System.Nullable<System.DateTimeOffset> Last_changed { get; set; }
		
		/// <summary>
		/// The most recent Note added about this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_note")]
		public PutListsIdMembersIdReturnLast_note Last_note { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// Subscriber location information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public PutListsIdMembersIdReturnLocation Location { get; set; }
		
		/// <summary>
		/// The marketing permissions for the subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permissions")]
		public PutListsIdMembersIdReturnMarketing_permissions[] PutListsIdMembersIdReturnMarketing_permissions { get; set; }
		
		/// <summary>
		/// Star rating for this member, between 1 and 5.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_rating")]
		public System.Nullable<System.Int32> Member_rating { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// The source from which the subscriber was added to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		/// <summary>
		/// Open and click rates for this subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public PutListsIdMembersIdReturnStats Stats { get; set; }
		
		/// <summary>
		/// Subscriber's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetListsIdMembersStatus Status { get; set; }
		
		/// <summary>
		/// Returns up to 50 tags applied to this member. To retrieve all tags see [Member Tags](https://mailchimp.com/developer/marketing/api/list-member-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public PutListsIdMembersIdReturnTags[] PutListsIdMembersIdReturnTags { get; set; }
		
		/// <summary>
		/// The number of tags applied to this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags_count")]
		public System.Nullable<System.Int32> Tags_count { get; set; }
		
		/// <summary>
		/// The date and time the subscriber confirmed their opt-in status in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_opt")]
		public System.Nullable<System.DateTimeOffset> Timestamp_opt { get; set; }
		
		/// <summary>
		/// The date and time the subscriber signed up for the list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_signup")]
		public System.Nullable<System.DateTimeOffset> Timestamp_signup { get; set; }
		
		/// <summary>
		/// An identifier for the address across all of Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_email_id")]
		public string Unique_email_id { get; set; }
		
		/// <summary>
		/// A subscriber's reason for unsubscribing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe_reason")]
		public string Unsubscribe_reason { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this member in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/members/view?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class PutListsIdMembersIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PutListsIdMembersIdReturnLast_note
	{
		
		/// <summary>
		/// The date and time the note was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The author of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The content of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// The note id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note_id")]
		public System.Nullable<System.Int32> Note_id { get; set; }
	}
	
	public class PutListsIdMembersIdReturnLocation
	{
		
		/// <summary>
		/// The unique code for the location country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The offset for timezones where daylight saving time is observed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dstoff")]
		public System.Nullable<System.Int32> Dstoff { get; set; }
		
		/// <summary>
		/// The time difference in hours from GMT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gmtoff")]
		public System.Nullable<System.Int32> Gmtoff { get; set; }
		
		/// <summary>
		/// The location latitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The location longitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The region for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The timezone for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
	}
	
	public class PutListsIdMembersIdReturnMarketing_permissions
	{
		
		/// <summary>
		/// If the subscriber has opted-in to the marketing permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The id for the marketing permission on the list
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permission_id")]
		public string Marketing_permission_id { get; set; }
		
		/// <summary>
		/// The text of the marketing permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	public class PutListsIdMembersIdReturnStats
	{
		
		/// <summary>
		/// A subscriber's average clickthrough rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_click_rate")]
		public System.Nullable<System.Double> Avg_click_rate { get; set; }
		
		/// <summary>
		/// A subscriber's average open rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_open_rate")]
		public System.Nullable<System.Double> Avg_open_rate { get; set; }
		
		/// <summary>
		/// Ecommerce stats for the list member if the list is attached to a store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecommerce_data")]
		public PutListsIdMembersIdReturnStatsEcommerce_data Ecommerce_data { get; set; }
	}
	
	public class PutListsIdMembersIdReturnStatsEcommerce_data
	{
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The total number of orders placed by the list member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="number_of_orders")]
		public System.Nullable<System.Double> Number_of_orders { get; set; }
		
		/// <summary>
		/// The total revenue the list member has brought in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
	}
	
	public class PutListsIdMembersIdReturnTags
	{
		
		/// <summary>
		/// The tag id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the tag
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class GetListsIdMembersIdActivityReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdMembersIdActivityReturn_links[] GetListsIdMembersIdActivityReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a member event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activity")]
		public GetListsIdMembersIdActivityReturnActivity[] GetListsIdMembersIdActivityReturnActivity { get; set; }
		
		/// <summary>
		/// As Mailchimp evolves beyond email, you may eventually have contacts without email addresses. While the `email_id` is the MD5 hash of their email address, this `contact_id` is agnostic of contactâ€™s inclusion of an email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetListsIdMembersIdActivityReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdMembersIdActivityReturnActivity
	{
		
		/// <summary>
		/// The type of action recorded for the subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action")]
		public string Action { get; set; }
		
		/// <summary>
		/// The web-based ID for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The ID of the parent campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_campaign")]
		public string Parent_campaign { get; set; }
		
		/// <summary>
		/// The date and time recorded for the action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.DateTimeOffset> Timestamp { get; set; }
		
		/// <summary>
		/// If set, the campaign's title.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The type of campaign that was sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// For clicks, the URL the subscriber clicked on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class GetListsIdMembersIdActivityFeedReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdMembersIdActivityFeedReturn_links[] GetListsIdMembersIdActivityFeedReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a contact event. There are multiple possible types, see the [activity schema documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#activity-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activity")]
		public string[] Activity { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
	}
	
	public class GetListsIdMembersIdActivityFeedReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdMembersIdEventsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdMembersIdEventsReturn_links[] GetListsIdMembersIdEventsReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing an event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="events")]
		public GetListsIdMembersIdEventsReturnEvents[] GetListsIdMembersIdEventsReturnEvents { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetListsIdMembersIdEventsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdMembersIdEventsReturnEvents
	{
		
		/// <summary>
		/// The name for this type of event ('purchased', 'visited', etc). Must be 2-30 characters in length
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The date and time the event occurred in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="occurred_at")]
		public System.Nullable<System.DateTimeOffset> Occurred_at { get; set; }
		
		/// <summary>
		/// An optional list of properties
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public System.Collections.Generic.Dictionary<string, string> Properties { get; set; }
	}
	
	public class PostListMemberEventsPostBody
	{
		
		/// <summary>
		/// Events created with the is_syncing value set to `true` will not trigger automations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_syncing")]
		public System.Nullable<System.Boolean> Is_syncing { get; set; }
		
		/// <summary>
		/// The name for this type of event ('purchased', 'visited', etc). Must be 2-30 characters in length
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The date and time the event occurred in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="occurred_at")]
		public System.Nullable<System.DateTimeOffset> Occurred_at { get; set; }
		
		/// <summary>
		/// An optional list of properties
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="properties")]
		public System.Collections.Generic.Dictionary<string, string> Properties { get; set; }
	}
	
	public class GetListsIdMembersIdGoalsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdMembersIdGoalsReturn_links[] GetListsIdMembersIdGoalsReturn_links { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The last 50 Goal events triggered by a member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goals")]
		public GetListsIdMembersIdGoalsReturnGoals[] GetListsIdMembersIdGoalsReturnGoals { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetListsIdMembersIdGoalsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdMembersIdGoalsReturnGoals
	{
		
		/// <summary>
		/// Any extra data passed with the Goal event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="data")]
		public string Data { get; set; }
		
		/// <summary>
		/// The name/type of Goal event triggered.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="event")]
		public string Event { get; set; }
		
		/// <summary>
		/// The id for a Goal event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal_id")]
		public System.Nullable<System.Int32> Goal_id { get; set; }
		
		/// <summary>
		/// The date and time the user last triggered the Goal event in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_visited_at")]
		public System.Nullable<System.DateTimeOffset> Last_visited_at { get; set; }
	}
	
	public enum GetListsIdMembersIdNotesSort_field
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		created_at = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		updated_at = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		note_id = 2,
	}
	
	public class GetListsIdMembersIdNotesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdMembersIdNotesReturn_links[] GetListsIdMembersIdNotesReturn_links { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a note resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public GetListsIdMembersIdNotesReturnNotes[] GetListsIdMembersIdNotesReturnNotes { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetListsIdMembersIdNotesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdMembersIdNotesReturnNotes
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdMembersIdNotesReturnNotes_links[] GetListsIdMembersIdNotesReturnNotes_links { get; set; }
		
		/// <summary>
		/// As Mailchimp evolves beyond email, you may eventually have contacts without email addresses. While the `email_id` is the MD5 hash of their email address, this `contact_id` is agnostic of contactâ€™s inclusion of an email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// The date and time the note was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The author of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The note id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The unique id for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The content of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// The date and time the note was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class GetListsIdMembersIdNotesReturnNotes_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostListsIdMembersIdNotesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostListsIdMembersIdNotesReturn_links[] PostListsIdMembersIdNotesReturn_links { get; set; }
		
		/// <summary>
		/// As Mailchimp evolves beyond email, you may eventually have contacts without email addresses. While the `email_id` is the MD5 hash of their email address, this `contact_id` is agnostic of contactâ€™s inclusion of an email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// The date and time the note was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The author of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The note id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The unique id for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The content of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// The date and time the note was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PostListsIdMembersIdNotesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdMembersIdNotesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdMembersIdNotesIdReturn_links[] GetListsIdMembersIdNotesIdReturn_links { get; set; }
		
		/// <summary>
		/// As Mailchimp evolves beyond email, you may eventually have contacts without email addresses. While the `email_id` is the MD5 hash of their email address, this `contact_id` is agnostic of contactâ€™s inclusion of an email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// The date and time the note was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The author of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The note id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The unique id for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The content of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// The date and time the note was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class GetListsIdMembersIdNotesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchListsIdMembersIdNotesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchListsIdMembersIdNotesIdReturn_links[] PatchListsIdMembersIdNotesIdReturn_links { get; set; }
		
		/// <summary>
		/// As Mailchimp evolves beyond email, you may eventually have contacts without email addresses. While the `email_id` is the MD5 hash of their email address, this `contact_id` is agnostic of contactâ€™s inclusion of an email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// The date and time the note was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The author of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The note id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The unique id for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The content of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// The date and time the note was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PatchListsIdMembersIdNotesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListMemberTagsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListMemberTagsReturn_links[] GetListMemberTagsReturn_links { get; set; }
		
		/// <summary>
		/// A list of tags assigned to the list member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public GetListMemberTagsReturnTags[] GetListMemberTagsReturnTags { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetListMemberTagsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListMemberTagsReturnTags
	{
		
		/// <summary>
		/// The date and time the tag was added to the list member in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_added")]
		public System.Nullable<System.DateTimeOffset> Date_added { get; set; }
		
		/// <summary>
		/// The unique id for the tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class PostListMemberTagsPostBody
	{
		
		/// <summary>
		/// When is_syncing is true, automations based on the tags in the request will not fire
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_syncing")]
		public System.Nullable<System.Boolean> Is_syncing { get; set; }
		
		/// <summary>
		/// A list of tags assigned to the list member.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public PostListMemberTagsPostBodyTags[] PostListMemberTagsPostBodyTags { get; set; }
	}
	
	public class PostListMemberTagsPostBodyTags
	{
		
		/// <summary>
		/// The name of the tag.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The status for the tag on the member, pass in active to add a tag or inactive to remove it.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PostListMemberTagsPostBodyTagsStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostListMemberTagsPostBodyTagsStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inactive = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		active = 1,
	}
	
	public class GetListsIdMergeFieldsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdMergeFieldsReturn_links[] GetListsIdMergeFieldsReturn_links { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a merge field resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public GetListsIdMergeFieldsReturnMerge_fields[] GetListsIdMergeFieldsReturnMerge_fields { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetListsIdMergeFieldsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdMergeFieldsReturnMerge_fields
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdMergeFieldsReturnMerge_fields_links[] GetListsIdMergeFieldsReturnMerge_fields_links { get; set; }
		
		/// <summary>
		/// The default value for the merge field if `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default_value")]
		public string Default_value { get; set; }
		
		/// <summary>
		/// The order that the merge field displays on the list signup form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_order")]
		public System.Nullable<System.Int32> Display_order { get; set; }
		
		/// <summary>
		/// Extra text to help the subscriber fill out the form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="help_text")]
		public string Help_text { get; set; }
		
		/// <summary>
		/// The ID that identifies this merge field's audience'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// An unchanging id for the merge field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_id")]
		public System.Nullable<System.Int32> Merge_id { get; set; }
		
		/// <summary>
		/// The name of the merge field (audience field).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Extra options for some merge field types.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public GetListsIdMergeFieldsReturnMerge_fieldsOptions Options { get; set; }
		
		/// <summary>
		/// Whether the merge field is displayed on the signup form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="public")]
		public System.Nullable<System.Boolean> Public { get; set; }
		
		/// <summary>
		/// The boolean value if the merge field is required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="required")]
		public System.Nullable<System.Boolean> Required { get; set; }
		
		/// <summary>
		/// The merge tag used for Mailchimp campaigns and [adding contact information](https://mailchimp.com/developer/marketing/docs/merge-fields/#add-merge-data-to-contacts).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tag")]
		public string Tag { get; set; }
		
		/// <summary>
		/// The [type](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for the merge field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GetListsIdMergeFieldsReturnMerge_fieldsType> Type { get; set; }
	}
	
	public class GetListsIdMergeFieldsReturnMerge_fields_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdMergeFieldsReturnMerge_fieldsOptions
	{
		
		/// <summary>
		/// In a radio or dropdown non-group field, the available options for contacts to pick from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="choices")]
		public string[] Choices { get; set; }
		
		/// <summary>
		/// In a date or birthday field, the format of the date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_format")]
		public string Date_format { get; set; }
		
		/// <summary>
		/// In an address field, the default country code if none supplied.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default_country")]
		public System.Nullable<System.Int32> Default_country { get; set; }
		
		/// <summary>
		/// In a phone field, the phone number type: US or International.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_format")]
		public string Phone_format { get; set; }
		
		/// <summary>
		/// In a text field, the default length of the text field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetListsIdMergeFieldsReturnMerge_fieldsType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		text = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		number = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		address = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		phone = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		date = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		url = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		imageurl = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		radio = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dropdown = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		birthday = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		zip = 10,
	}
	
	public class PostListsIdMergeFieldsPostBody
	{
		
		/// <summary>
		/// The default value for the merge field if `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default_value")]
		public string Default_value { get; set; }
		
		/// <summary>
		/// The order that the merge field displays on the list signup form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_order")]
		public System.Nullable<System.Int32> Display_order { get; set; }
		
		/// <summary>
		/// Extra text to help the subscriber fill out the form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="help_text")]
		public string Help_text { get; set; }
		
		/// <summary>
		/// The name of the merge field (audience field).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Extra options for some merge field types.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public PostListsIdMergeFieldsPostBodyOptions Options { get; set; }
		
		/// <summary>
		/// Whether the merge field is displayed on the signup form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="public")]
		public System.Nullable<System.Boolean> Public { get; set; }
		
		/// <summary>
		/// Whether the merge field is required to import a contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="required")]
		public System.Nullable<System.Boolean> Required { get; set; }
		
		/// <summary>
		/// The merge tag used for Mailchimp campaigns and [adding contact information](https://mailchimp.com/developer/marketing/docs/merge-fields/#add-merge-data-to-contacts).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tag")]
		public string Tag { get; set; }
		
		/// <summary>
		/// The [type](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for the merge field.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetListsIdMergeFieldsReturnMerge_fieldsType Type { get; set; }
	}
	
	public class PostListsIdMergeFieldsPostBodyOptions
	{
		
		/// <summary>
		/// In a radio or dropdown non-group field, the available options for contacts to pick from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="choices")]
		public string[] Choices { get; set; }
		
		/// <summary>
		/// In a date or birthday field, the format of the date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_format")]
		public string Date_format { get; set; }
		
		/// <summary>
		/// In an address field, the default country code if none supplied.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default_country")]
		public System.Nullable<System.Int32> Default_country { get; set; }
		
		/// <summary>
		/// In a phone field, the phone number type: US or International.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_format")]
		public string Phone_format { get; set; }
		
		/// <summary>
		/// In a text field, the default length of the text field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	public class PostListsIdMergeFieldsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostListsIdMergeFieldsReturn_links[] PostListsIdMergeFieldsReturn_links { get; set; }
		
		/// <summary>
		/// The default value for the merge field if `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default_value")]
		public string Default_value { get; set; }
		
		/// <summary>
		/// The order that the merge field displays on the list signup form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_order")]
		public System.Nullable<System.Int32> Display_order { get; set; }
		
		/// <summary>
		/// Extra text to help the subscriber fill out the form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="help_text")]
		public string Help_text { get; set; }
		
		/// <summary>
		/// The ID that identifies this merge field's audience'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// An unchanging id for the merge field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_id")]
		public System.Nullable<System.Int32> Merge_id { get; set; }
		
		/// <summary>
		/// The name of the merge field (audience field).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Extra options for some merge field types.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public PostListsIdMergeFieldsReturnOptions Options { get; set; }
		
		/// <summary>
		/// Whether the merge field is displayed on the signup form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="public")]
		public System.Nullable<System.Boolean> Public { get; set; }
		
		/// <summary>
		/// The boolean value if the merge field is required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="required")]
		public System.Nullable<System.Boolean> Required { get; set; }
		
		/// <summary>
		/// The merge tag used for Mailchimp campaigns and [adding contact information](https://mailchimp.com/developer/marketing/docs/merge-fields/#add-merge-data-to-contacts).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tag")]
		public string Tag { get; set; }
		
		/// <summary>
		/// The [type](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for the merge field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetListsIdMergeFieldsReturnMerge_fieldsType Type { get; set; }
	}
	
	public class PostListsIdMergeFieldsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostListsIdMergeFieldsReturnOptions
	{
		
		/// <summary>
		/// In a radio or dropdown non-group field, the available options for contacts to pick from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="choices")]
		public string[] Choices { get; set; }
		
		/// <summary>
		/// In a date or birthday field, the format of the date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_format")]
		public string Date_format { get; set; }
		
		/// <summary>
		/// In an address field, the default country code if none supplied.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default_country")]
		public System.Nullable<System.Int32> Default_country { get; set; }
		
		/// <summary>
		/// In a phone field, the phone number type: US or International.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_format")]
		public string Phone_format { get; set; }
		
		/// <summary>
		/// In a text field, the default length of the text field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	public class GetListsIdMergeFieldsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdMergeFieldsIdReturn_links[] GetListsIdMergeFieldsIdReturn_links { get; set; }
		
		/// <summary>
		/// The default value for the merge field if `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default_value")]
		public string Default_value { get; set; }
		
		/// <summary>
		/// The order that the merge field displays on the list signup form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_order")]
		public System.Nullable<System.Int32> Display_order { get; set; }
		
		/// <summary>
		/// Extra text to help the subscriber fill out the form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="help_text")]
		public string Help_text { get; set; }
		
		/// <summary>
		/// The ID that identifies this merge field's audience'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// An unchanging id for the merge field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_id")]
		public System.Nullable<System.Int32> Merge_id { get; set; }
		
		/// <summary>
		/// The name of the merge field (audience field).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Extra options for some merge field types.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public GetListsIdMergeFieldsIdReturnOptions Options { get; set; }
		
		/// <summary>
		/// Whether the merge field is displayed on the signup form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="public")]
		public System.Nullable<System.Boolean> Public { get; set; }
		
		/// <summary>
		/// The boolean value if the merge field is required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="required")]
		public System.Nullable<System.Boolean> Required { get; set; }
		
		/// <summary>
		/// The merge tag used for Mailchimp campaigns and [adding contact information](https://mailchimp.com/developer/marketing/docs/merge-fields/#add-merge-data-to-contacts).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tag")]
		public string Tag { get; set; }
		
		/// <summary>
		/// The [type](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for the merge field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetListsIdMergeFieldsReturnMerge_fieldsType Type { get; set; }
	}
	
	public class GetListsIdMergeFieldsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdMergeFieldsIdReturnOptions
	{
		
		/// <summary>
		/// In a radio or dropdown non-group field, the available options for contacts to pick from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="choices")]
		public string[] Choices { get; set; }
		
		/// <summary>
		/// In a date or birthday field, the format of the date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_format")]
		public string Date_format { get; set; }
		
		/// <summary>
		/// In an address field, the default country code if none supplied.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default_country")]
		public System.Nullable<System.Int32> Default_country { get; set; }
		
		/// <summary>
		/// In a phone field, the phone number type: US or International.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_format")]
		public string Phone_format { get; set; }
		
		/// <summary>
		/// In a text field, the default length of the text field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	public class PatchListsIdMergeFieldsIdPatchBody
	{
		
		/// <summary>
		/// The default value for the merge field if `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default_value")]
		public string Default_value { get; set; }
		
		/// <summary>
		/// The order that the merge field displays on the list signup form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_order")]
		public System.Nullable<System.Int32> Display_order { get; set; }
		
		/// <summary>
		/// Extra text to help the subscriber fill out the form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="help_text")]
		public string Help_text { get; set; }
		
		/// <summary>
		/// The name of the merge field (audience field).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Extra options for some merge field types.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public PatchListsIdMergeFieldsIdPatchBodyOptions Options { get; set; }
		
		/// <summary>
		/// Whether the merge field is displayed on the signup form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="public")]
		public System.Nullable<System.Boolean> Public { get; set; }
		
		/// <summary>
		/// Whether the merge field is required to import a contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="required")]
		public System.Nullable<System.Boolean> Required { get; set; }
		
		/// <summary>
		/// The merge tag used for Mailchimp campaigns and [adding contact information](https://mailchimp.com/developer/marketing/docs/merge-fields/#add-merge-data-to-contacts).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tag")]
		public string Tag { get; set; }
	}
	
	public class PatchListsIdMergeFieldsIdPatchBodyOptions
	{
		
		/// <summary>
		/// In a radio or dropdown non-group field, the available options for members to pick from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="choices")]
		public string[] Choices { get; set; }
		
		/// <summary>
		/// In a date or birthday field, the format of the date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_format")]
		public string Date_format { get; set; }
		
		/// <summary>
		/// In an address field, the default country code if none supplied.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default_country")]
		public System.Nullable<System.Int32> Default_country { get; set; }
		
		/// <summary>
		/// In a phone field, the phone number type: US or International.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_format")]
		public string Phone_format { get; set; }
	}
	
	public class PatchListsIdMergeFieldsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchListsIdMergeFieldsIdReturn_links[] PatchListsIdMergeFieldsIdReturn_links { get; set; }
		
		/// <summary>
		/// The default value for the merge field if `null`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default_value")]
		public string Default_value { get; set; }
		
		/// <summary>
		/// The order that the merge field displays on the list signup form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="display_order")]
		public System.Nullable<System.Int32> Display_order { get; set; }
		
		/// <summary>
		/// Extra text to help the subscriber fill out the form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="help_text")]
		public string Help_text { get; set; }
		
		/// <summary>
		/// The ID that identifies this merge field's audience'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// An unchanging id for the merge field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_id")]
		public System.Nullable<System.Int32> Merge_id { get; set; }
		
		/// <summary>
		/// The name of the merge field (audience field).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Extra options for some merge field types.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public PatchListsIdMergeFieldsIdReturnOptions Options { get; set; }
		
		/// <summary>
		/// Whether the merge field is displayed on the signup form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="public")]
		public System.Nullable<System.Boolean> Public { get; set; }
		
		/// <summary>
		/// The boolean value if the merge field is required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="required")]
		public System.Nullable<System.Boolean> Required { get; set; }
		
		/// <summary>
		/// The merge tag used for Mailchimp campaigns and [adding contact information](https://mailchimp.com/developer/marketing/docs/merge-fields/#add-merge-data-to-contacts).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tag")]
		public string Tag { get; set; }
		
		/// <summary>
		/// The [type](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for the merge field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetListsIdMergeFieldsReturnMerge_fieldsType Type { get; set; }
	}
	
	public class PatchListsIdMergeFieldsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchListsIdMergeFieldsIdReturnOptions
	{
		
		/// <summary>
		/// In a radio or dropdown non-group field, the available options for contacts to pick from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="choices")]
		public string[] Choices { get; set; }
		
		/// <summary>
		/// In a date or birthday field, the format of the date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_format")]
		public string Date_format { get; set; }
		
		/// <summary>
		/// In an address field, the default country code if none supplied.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="default_country")]
		public System.Nullable<System.Int32> Default_country { get; set; }
		
		/// <summary>
		/// In a phone field, the phone number type: US or International.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="phone_format")]
		public string Phone_format { get; set; }
		
		/// <summary>
		/// In a text field, the default length of the text field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="size")]
		public System.Nullable<System.Int32> Size { get; set; }
	}
	
	public class PreviewASegmentReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PreviewASegmentReturn_links[] PreviewASegmentReturn_links { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a list segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segments")]
		public PreviewASegmentReturnSegments[] PreviewASegmentReturnSegments { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class PreviewASegmentReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PreviewASegmentReturnSegments
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PreviewASegmentReturnSegments_links[] PreviewASegmentReturnSegments_links { get; set; }
		
		/// <summary>
		/// The date and time the segment was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The unique id for the segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The number of active subscribers currently included in the segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_count")]
		public System.Nullable<System.Int32> Member_count { get; set; }
		
		/// <summary>
		/// The name of the segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The conditions of the segment. Static segments (tags) and fuzzy segments don't have conditions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public PreviewASegmentReturnSegmentsOptions Options { get; set; }
		
		/// <summary>
		/// The type of segment. Static segments are now known as tags. Learn more about [tags](https://mailchimp.com/help/getting-started-tags?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<PreviewASegmentReturnSegmentsType> Type { get; set; }
		
		/// <summary>
		/// The date and time the segment was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PreviewASegmentReturnSegments_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PreviewASegmentReturnSegmentsOptions
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PreviewASegmentReturnSegmentsType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		saved = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="static")]
		_static = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fuzzy = 2,
	}
	
	public class PostListsIdSegmentsPostBody
	{
		
		/// <summary>
		/// The name of the segment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The [conditions of the segment](https://mailchimp.com/help/save-and-manage-segments/). Static and fuzzy segments don't have conditions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public PostListsIdSegmentsPostBodyOptions Options { get; set; }
		
		/// <summary>
		/// An array of emails to be used for a static segment. Any emails provided that are not present on the list will be ignored. Passing an empty array will create a static segment without any subscribers. This field cannot be provided with the options field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="static_segment")]
		public string[] Static_segment { get; set; }
	}
	
	public class PostListsIdSegmentsPostBodyOptions
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
	}
	
	public class PostListsIdSegmentsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostListsIdSegmentsReturn_links[] PostListsIdSegmentsReturn_links { get; set; }
		
		/// <summary>
		/// The date and time the segment was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The unique id for the segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The number of active subscribers currently included in the segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_count")]
		public System.Nullable<System.Int32> Member_count { get; set; }
		
		/// <summary>
		/// The name of the segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The conditions of the segment. Static segments (tags) and fuzzy segments don't have conditions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public PostListsIdSegmentsReturnOptions Options { get; set; }
		
		/// <summary>
		/// The type of segment. Static segments are now known as tags. Learn more about [tags](https://mailchimp.com/help/getting-started-tags?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<PostListsIdSegmentsReturnType> Type { get; set; }
		
		/// <summary>
		/// The date and time the segment was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PostListsIdSegmentsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostListsIdSegmentsReturnOptions
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostListsIdSegmentsReturnType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		saved = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="static")]
		_static = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fuzzy = 2,
	}
	
	public class GetListsIdSegmentsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdSegmentsIdReturn_links[] GetListsIdSegmentsIdReturn_links { get; set; }
		
		/// <summary>
		/// The date and time the segment was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The unique id for the segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The number of active subscribers currently included in the segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_count")]
		public System.Nullable<System.Int32> Member_count { get; set; }
		
		/// <summary>
		/// The name of the segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The conditions of the segment. Static segments (tags) and fuzzy segments don't have conditions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public GetListsIdSegmentsIdReturnOptions Options { get; set; }
		
		/// <summary>
		/// The type of segment. Static segments are now known as tags. Learn more about [tags](https://mailchimp.com/help/getting-started-tags?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GetListsIdSegmentsIdReturnType> Type { get; set; }
		
		/// <summary>
		/// The date and time the segment was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class GetListsIdSegmentsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdSegmentsIdReturnOptions
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetListsIdSegmentsIdReturnType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		saved = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="static")]
		_static = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fuzzy = 2,
	}
	
	public class PatchListsIdSegmentsIdPatchBody
	{
		
		/// <summary>
		/// The name of the segment.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The [conditions of the segment](https://mailchimp.com/help/save-and-manage-segments/). Static and fuzzy segments don't have conditions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public PatchListsIdSegmentsIdPatchBodyOptions Options { get; set; }
		
		/// <summary>
		/// An array of emails to be used for a static segment. Any emails provided that are not present on the list will be ignored. Passing an empty array for an existing static segment will reset that segment and remove all members. This field cannot be provided with the `options` field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="static_segment")]
		public string[] Static_segment { get; set; }
	}
	
	public class PatchListsIdSegmentsIdPatchBodyOptions
	{
		
		/// <summary>
		/// An array of segment conditions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
	}
	
	public class PatchListsIdSegmentsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchListsIdSegmentsIdReturn_links[] PatchListsIdSegmentsIdReturn_links { get; set; }
		
		/// <summary>
		/// The date and time the segment was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The unique id for the segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The number of active subscribers currently included in the segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_count")]
		public System.Nullable<System.Int32> Member_count { get; set; }
		
		/// <summary>
		/// The name of the segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The conditions of the segment. Static segments (tags) and fuzzy segments don't have conditions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public PatchListsIdSegmentsIdReturnOptions Options { get; set; }
		
		/// <summary>
		/// The type of segment. Static segments are now known as tags. Learn more about [tags](https://mailchimp.com/help/getting-started-tags?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<PatchListsIdSegmentsIdReturnType> Type { get; set; }
		
		/// <summary>
		/// The date and time the segment was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
	}
	
	public class PatchListsIdSegmentsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchListsIdSegmentsIdReturnOptions
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PatchListsIdSegmentsIdReturnType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		saved = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="static")]
		_static = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		fuzzy = 2,
	}
	
	public class PostListsIdSegmentsIdPostBody
	{
		
		/// <summary>
		/// An array of emails to be used for a static segment. Any emails provided that are not present on the list will be ignored. A maximum of 500 members can be sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members_to_add")]
		public string[] Members_to_add { get; set; }
		
		/// <summary>
		/// An array of emails to be used for a static segment. Any emails provided that are not present on the list will be ignored. A maximum of 500 members can be sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members_to_remove")]
		public string[] Members_to_remove { get; set; }
	}
	
	public class PostListsIdSegmentsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostListsIdSegmentsIdReturn_links[] PostListsIdSegmentsIdReturn_links { get; set; }
		
		/// <summary>
		/// The total number of items matching the query, irrespective of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error_count")]
		public System.Nullable<System.Int32> Error_count { get; set; }
		
		/// <summary>
		/// An array of objects, each representing an array of email addresses that could not be added to the segment or removed and an error message providing more details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public PostListsIdSegmentsIdReturnErrors[] PostListsIdSegmentsIdReturnErrors { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a new member that was added to the static segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members_added")]
		public PostListsIdSegmentsIdReturnMembers_added[] PostListsIdSegmentsIdReturnMembers_added { get; set; }
		
		/// <summary>
		/// An array of objects, each representing an existing list member that got deleted from the static segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members_removed")]
		public PostListsIdSegmentsIdReturnMembers_removed[] PostListsIdSegmentsIdReturnMembers_removed { get; set; }
		
		/// <summary>
		/// The total number of items matching the query, irrespective of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_added")]
		public System.Nullable<System.Int32> Total_added { get; set; }
		
		/// <summary>
		/// The total number of items matching the query, irrespective of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_removed")]
		public System.Nullable<System.Int32> Total_removed { get; set; }
	}
	
	public class PostListsIdSegmentsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostListsIdSegmentsIdReturnErrors
	{
		
		/// <summary>
		/// Email addresses added to the static segment or removed
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_addresses")]
		public string[] Email_addresses { get; set; }
		
		/// <summary>
		/// The error message indicating why the email addresses could not be added or updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public string Error { get; set; }
	}
	
	public class PostListsIdSegmentsIdReturnMembers_added
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostListsIdSegmentsIdReturnMembers_added_links[] PostListsIdSegmentsIdReturnMembers_added_links { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The list member's email client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_client")]
		public string Email_client { get; set; }
		
		/// <summary>
		/// Type of email this member asked to get ('html' or 'text').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type")]
		public string Email_type { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The key of this object's properties is the ID of the interest in question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interests")]
		public System.Collections.Generic.Dictionary<string, bool> Interests { get; set; }
		
		/// <summary>
		/// The IP address the subscriber used to confirm their opt-in status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_opt")]
		public string Ip_opt { get; set; }
		
		/// <summary>
		/// IP address the subscriber signed up from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_signup")]
		public string Ip_signup { get; set; }
		
		/// <summary>
		/// If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The date and time the member's info was last changed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_changed")]
		public System.Nullable<System.DateTimeOffset> Last_changed { get; set; }
		
		/// <summary>
		/// The most recent Note added about this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_note")]
		public PostListsIdSegmentsIdReturnMembers_addedLast_note Last_note { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// Subscriber location information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public PostListsIdSegmentsIdReturnMembers_addedLocation Location { get; set; }
		
		/// <summary>
		/// Star rating for this member, between 1 and 5.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_rating")]
		public System.Nullable<System.Int32> Member_rating { get; set; }
		
		/// <summary>
		/// An individual merge var and value for a member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// Open and click rates for this subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public PostListsIdSegmentsIdReturnMembers_addedStats Stats { get; set; }
		
		/// <summary>
		/// Subscriber's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PostListsIdPostBodyMembersStatus Status { get; set; }
		
		/// <summary>
		/// The tags applied to this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public PostListsIdSegmentsIdReturnMembers_addedTags[] PostListsIdSegmentsIdReturnMembers_addedTags { get; set; }
		
		/// <summary>
		/// The number of tags applied to this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags_count")]
		public System.Nullable<System.Int32> Tags_count { get; set; }
		
		/// <summary>
		/// The date and time the subscriber confirmed their opt-in status in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_opt")]
		public System.Nullable<System.DateTimeOffset> Timestamp_opt { get; set; }
		
		/// <summary>
		/// The date and time the subscriber signed up for the list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_signup")]
		public System.Nullable<System.DateTimeOffset> Timestamp_signup { get; set; }
		
		/// <summary>
		/// An identifier for the address across all of Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_email_id")]
		public string Unique_email_id { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class PostListsIdSegmentsIdReturnMembers_added_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostListsIdSegmentsIdReturnMembers_addedLast_note
	{
		
		/// <summary>
		/// The date and time the note was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The author of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The content of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// The note id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note_id")]
		public System.Nullable<System.Int32> Note_id { get; set; }
	}
	
	public class PostListsIdSegmentsIdReturnMembers_addedLocation
	{
		
		/// <summary>
		/// The unique code for the location country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The offset for timezones where daylight saving time is observed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dstoff")]
		public System.Nullable<System.Int32> Dstoff { get; set; }
		
		/// <summary>
		/// The time difference in hours from GMT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gmtoff")]
		public System.Nullable<System.Int32> Gmtoff { get; set; }
		
		/// <summary>
		/// The location latitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The location longitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The timezone for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
	}
	
	public class PostListsIdSegmentsIdReturnMembers_addedStats
	{
		
		/// <summary>
		/// A subscriber's average clickthrough rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_click_rate")]
		public System.Nullable<System.Double> Avg_click_rate { get; set; }
		
		/// <summary>
		/// A subscriber's average open rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_open_rate")]
		public System.Nullable<System.Double> Avg_open_rate { get; set; }
	}
	
	public class PostListsIdSegmentsIdReturnMembers_addedTags
	{
		
		/// <summary>
		/// The tag id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the tag
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class PostListsIdSegmentsIdReturnMembers_removed
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostListsIdSegmentsIdReturnMembers_removed_links[] PostListsIdSegmentsIdReturnMembers_removed_links { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The list member's email client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_client")]
		public string Email_client { get; set; }
		
		/// <summary>
		/// Type of email this member asked to get ('html' or 'text').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type")]
		public string Email_type { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The key of this object's properties is the ID of the interest in question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interests")]
		public System.Collections.Generic.Dictionary<string, bool> Interests { get; set; }
		
		/// <summary>
		/// The IP address the subscriber used to confirm their opt-in status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_opt")]
		public string Ip_opt { get; set; }
		
		/// <summary>
		/// IP address the subscriber signed up from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_signup")]
		public string Ip_signup { get; set; }
		
		/// <summary>
		/// If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The date and time the member's info was last changed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_changed")]
		public System.Nullable<System.DateTimeOffset> Last_changed { get; set; }
		
		/// <summary>
		/// The most recent Note added about this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_note")]
		public PostListsIdSegmentsIdReturnMembers_removedLast_note Last_note { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// Subscriber location information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public PostListsIdSegmentsIdReturnMembers_removedLocation Location { get; set; }
		
		/// <summary>
		/// Star rating for this member, between 1 and 5.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_rating")]
		public System.Nullable<System.Int32> Member_rating { get; set; }
		
		/// <summary>
		/// An individual merge var and value for a member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// Open and click rates for this subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public PostListsIdSegmentsIdReturnMembers_removedStats Stats { get; set; }
		
		/// <summary>
		/// Subscriber's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PostListsIdPostBodyMembersStatus Status { get; set; }
		
		/// <summary>
		/// The tags applied to this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public PostListsIdSegmentsIdReturnMembers_removedTags[] PostListsIdSegmentsIdReturnMembers_removedTags { get; set; }
		
		/// <summary>
		/// The number of tags applied to this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags_count")]
		public System.Nullable<System.Int32> Tags_count { get; set; }
		
		/// <summary>
		/// The date and time the subscriber confirmed their opt-in status in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_opt")]
		public System.Nullable<System.DateTimeOffset> Timestamp_opt { get; set; }
		
		/// <summary>
		/// The date and time the subscriber signed up for the list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_signup")]
		public System.Nullable<System.DateTimeOffset> Timestamp_signup { get; set; }
		
		/// <summary>
		/// An identifier for the address across all of Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_email_id")]
		public string Unique_email_id { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class PostListsIdSegmentsIdReturnMembers_removed_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostListsIdSegmentsIdReturnMembers_removedLast_note
	{
		
		/// <summary>
		/// The date and time the note was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The author of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The content of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// The note id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note_id")]
		public System.Nullable<System.Int32> Note_id { get; set; }
	}
	
	public class PostListsIdSegmentsIdReturnMembers_removedLocation
	{
		
		/// <summary>
		/// The unique code for the location country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The offset for timezones where daylight saving time is observed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dstoff")]
		public System.Nullable<System.Int32> Dstoff { get; set; }
		
		/// <summary>
		/// The time difference in hours from GMT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gmtoff")]
		public System.Nullable<System.Int32> Gmtoff { get; set; }
		
		/// <summary>
		/// The location latitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The location longitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The timezone for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
	}
	
	public class PostListsIdSegmentsIdReturnMembers_removedStats
	{
		
		/// <summary>
		/// A subscriber's average clickthrough rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_click_rate")]
		public System.Nullable<System.Double> Avg_click_rate { get; set; }
		
		/// <summary>
		/// A subscriber's average open rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_open_rate")]
		public System.Nullable<System.Double> Avg_open_rate { get; set; }
	}
	
	public class PostListsIdSegmentsIdReturnMembers_removedTags
	{
		
		/// <summary>
		/// The tag id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the tag
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class GetListsIdSegmentsIdMembersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdSegmentsIdMembersReturn_links[] GetListsIdSegmentsIdMembersReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a specific list member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public GetListsIdSegmentsIdMembersReturnMembers[] GetListsIdSegmentsIdMembersReturnMembers { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetListsIdSegmentsIdMembersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdSegmentsIdMembersReturnMembers
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdSegmentsIdMembersReturnMembers_links[] GetListsIdSegmentsIdMembersReturnMembers_links { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The list member's email client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_client")]
		public string Email_client { get; set; }
		
		/// <summary>
		/// Type of email this member asked to get ('html' or 'text').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type")]
		public string Email_type { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The key of this object's properties is the ID of the interest in question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interests")]
		public System.Collections.Generic.Dictionary<string, bool> Interests { get; set; }
		
		/// <summary>
		/// The IP address the subscriber used to confirm their opt-in status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_opt")]
		public string Ip_opt { get; set; }
		
		/// <summary>
		/// IP address the subscriber signed up from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_signup")]
		public string Ip_signup { get; set; }
		
		/// <summary>
		/// If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The date and time the member's info was last changed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_changed")]
		public System.Nullable<System.DateTimeOffset> Last_changed { get; set; }
		
		/// <summary>
		/// The most recent Note added about this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_note")]
		public GetListsIdSegmentsIdMembersReturnMembersLast_note Last_note { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// Subscriber location information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public GetListsIdSegmentsIdMembersReturnMembersLocation Location { get; set; }
		
		/// <summary>
		/// Star rating for this member, between 1 and 5.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_rating")]
		public System.Nullable<System.Int32> Member_rating { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// Open and click rates for this subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public GetListsIdSegmentsIdMembersReturnMembersStats Stats { get; set; }
		
		/// <summary>
		/// Subscriber's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PostListsIdPostBodyMembersStatus Status { get; set; }
		
		/// <summary>
		/// The date and time the subscriber confirmed their opt-in status in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_opt")]
		public System.Nullable<System.DateTimeOffset> Timestamp_opt { get; set; }
		
		/// <summary>
		/// The date and time the subscriber signed up for the list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_signup")]
		public System.Nullable<System.DateTimeOffset> Timestamp_signup { get; set; }
		
		/// <summary>
		/// An identifier for the address across all of Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_email_id")]
		public string Unique_email_id { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class GetListsIdSegmentsIdMembersReturnMembers_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdSegmentsIdMembersReturnMembersLast_note
	{
		
		/// <summary>
		/// The date and time the note was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The author of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The content of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// The note id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note_id")]
		public System.Nullable<System.Int32> Note_id { get; set; }
	}
	
	public class GetListsIdSegmentsIdMembersReturnMembersLocation
	{
		
		/// <summary>
		/// The unique code for the location country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The offset for timezones where daylight saving time is observed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dstoff")]
		public System.Nullable<System.Int32> Dstoff { get; set; }
		
		/// <summary>
		/// The time difference in hours from GMT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gmtoff")]
		public System.Nullable<System.Int32> Gmtoff { get; set; }
		
		/// <summary>
		/// The location latitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The location longitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The timezone for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
	}
	
	public class GetListsIdSegmentsIdMembersReturnMembersStats
	{
		
		/// <summary>
		/// A subscriber's average clickthrough rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_click_rate")]
		public System.Nullable<System.Double> Avg_click_rate { get; set; }
		
		/// <summary>
		/// A subscriber's average open rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_open_rate")]
		public System.Nullable<System.Double> Avg_open_rate { get; set; }
	}
	
	public class PostListsIdSegmentsIdMembersPostBody
	{
		
		/// <summary>
		/// Email address for a subscriber.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
	}
	
	public class PostListsIdSegmentsIdMembersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostListsIdSegmentsIdMembersReturn_links[] PostListsIdSegmentsIdMembersReturn_links { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The list member's email client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_client")]
		public string Email_client { get; set; }
		
		/// <summary>
		/// Type of email this member asked to get ('html' or 'text').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type")]
		public string Email_type { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The key of this object's properties is the ID of the interest in question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interests")]
		public System.Collections.Generic.Dictionary<string, bool> Interests { get; set; }
		
		/// <summary>
		/// The IP address the subscriber used to confirm their opt-in status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_opt")]
		public string Ip_opt { get; set; }
		
		/// <summary>
		/// IP address the subscriber signed up from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_signup")]
		public string Ip_signup { get; set; }
		
		/// <summary>
		/// If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The date and time the member's info was last changed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_changed")]
		public System.Nullable<System.DateTimeOffset> Last_changed { get; set; }
		
		/// <summary>
		/// The most recent Note added about this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_note")]
		public PostListsIdSegmentsIdMembersReturnLast_note Last_note { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// Subscriber location information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public PostListsIdSegmentsIdMembersReturnLocation Location { get; set; }
		
		/// <summary>
		/// Star rating for this member, between 1 and 5.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_rating")]
		public System.Nullable<System.Int32> Member_rating { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// Open and click rates for this subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public PostListsIdSegmentsIdMembersReturnStats Stats { get; set; }
		
		/// <summary>
		/// Subscriber's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public PostListsIdPostBodyMembersStatus Status { get; set; }
		
		/// <summary>
		/// The date and time the subscriber confirmed their opt-in status in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_opt")]
		public System.Nullable<System.DateTimeOffset> Timestamp_opt { get; set; }
		
		/// <summary>
		/// The date and time the subscriber signed up for the list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_signup")]
		public System.Nullable<System.DateTimeOffset> Timestamp_signup { get; set; }
		
		/// <summary>
		/// An identifier for the address across all of Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_email_id")]
		public string Unique_email_id { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class PostListsIdSegmentsIdMembersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostListsIdSegmentsIdMembersReturnLast_note
	{
		
		/// <summary>
		/// The date and time the note was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The author of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The content of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// The note id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note_id")]
		public System.Nullable<System.Int32> Note_id { get; set; }
	}
	
	public class PostListsIdSegmentsIdMembersReturnLocation
	{
		
		/// <summary>
		/// The unique code for the location country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The offset for timezones where daylight saving time is observed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dstoff")]
		public System.Nullable<System.Int32> Dstoff { get; set; }
		
		/// <summary>
		/// The time difference in hours from GMT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gmtoff")]
		public System.Nullable<System.Int32> Gmtoff { get; set; }
		
		/// <summary>
		/// The location latitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The location longitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The timezone for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
	}
	
	public class PostListsIdSegmentsIdMembersReturnStats
	{
		
		/// <summary>
		/// A subscriber's average clickthrough rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_click_rate")]
		public System.Nullable<System.Double> Avg_click_rate { get; set; }
		
		/// <summary>
		/// A subscriber's average open rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_open_rate")]
		public System.Nullable<System.Double> Avg_open_rate { get; set; }
	}
	
	public class GetListsIdSignupFormsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdSignupFormsReturn_links[] GetListsIdSignupFormsReturn_links { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// List signup form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="signup_forms")]
		public GetListsIdSignupFormsReturnSignup_forms[] GetListsIdSignupFormsReturnSignup_forms { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetListsIdSignupFormsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdSignupFormsReturnSignup_forms
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdSignupFormsReturnSignup_forms_links[] GetListsIdSignupFormsReturnSignup_forms_links { get; set; }
		
		/// <summary>
		/// The signup form body content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public GetListsIdSignupFormsReturnSignup_formsContents[] GetListsIdSignupFormsReturnSignup_formsContents { get; set; }
		
		/// <summary>
		/// Options for customizing your signup form header.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="header")]
		public GetListsIdSignupFormsReturnSignup_formsHeader Header { get; set; }
		
		/// <summary>
		/// The signup form's list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// Signup form URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="signup_form_url")]
		public string Signup_form_url { get; set; }
		
		/// <summary>
		/// An array of objects, each representing an element style for the signup form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="styles")]
		public GetListsIdSignupFormsReturnSignup_formsStyles[] GetListsIdSignupFormsReturnSignup_formsStyles { get; set; }
	}
	
	public class GetListsIdSignupFormsReturnSignup_forms_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdSignupFormsReturnSignup_formsContents
	{
		
		/// <summary>
		/// The content section name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="section")]
		public System.Nullable<GetListsIdSignupFormsReturnSignup_formsContentsSection> Section { get; set; }
		
		/// <summary>
		/// The content section text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetListsIdSignupFormsReturnSignup_formsContentsSection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		signup_message = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unsub_message = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		signup_thank_you_title = 2,
	}
	
	public class GetListsIdSignupFormsReturnSignup_formsHeader
	{
		
		/// <summary>
		/// Image alignment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_align")]
		public System.Nullable<GetListsIdSignupFormsReturnSignup_formsHeaderImage_align> Image_align { get; set; }
		
		/// <summary>
		/// Alt text for the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_alt")]
		public string Image_alt { get; set; }
		
		/// <summary>
		/// Image border color.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_border_color")]
		public string Image_border_color { get; set; }
		
		/// <summary>
		/// Image border style.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_border_style")]
		public System.Nullable<GetListsIdSignupFormsReturnSignup_formsHeaderImage_border_style> Image_border_style { get; set; }
		
		/// <summary>
		/// Image border width.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_border_width")]
		public string Image_border_width { get; set; }
		
		/// <summary>
		/// Image height, in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_height")]
		public string Image_height { get; set; }
		
		/// <summary>
		/// The URL that the header image will link to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_link")]
		public string Image_link { get; set; }
		
		/// <summary>
		/// Image link target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_target")]
		public System.Nullable<GetListsIdSignupFormsReturnSignup_formsHeaderImage_target> Image_target { get; set; }
		
		/// <summary>
		/// Header image URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// Image width, in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_width")]
		public string Image_width { get; set; }
		
		/// <summary>
		/// Header text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetListsIdSignupFormsReturnSignup_formsHeaderImage_align
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		left = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		center = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		right = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetListsIdSignupFormsReturnSignup_formsHeaderImage_border_style
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		solid = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dotted = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dashed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="double")]
		_double = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		groove = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		outset = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inset = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ridge = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetListsIdSignupFormsReturnSignup_formsHeaderImage_target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_blank = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="null")]
		_null = 1,
	}
	
	public class GetListsIdSignupFormsReturnSignup_formsStyles
	{
		
		/// <summary>
		/// A collection of options for a selector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public GetListsIdSignupFormsReturnSignup_formsStylesOptions[] GetListsIdSignupFormsReturnSignup_formsStylesOptions { get; set; }
		
		/// <summary>
		/// A string that identifies the element selector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selector")]
		public System.Nullable<GetListsIdSignupFormsReturnSignup_formsStylesSelector> Selector { get; set; }
	}
	
	public class GetListsIdSignupFormsReturnSignup_formsStylesOptions
	{
		
		/// <summary>
		/// A string that identifies the property.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="property")]
		public string Property { get; set; }
		
		/// <summary>
		/// A string that identifies value of the property.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetListsIdSignupFormsReturnSignup_formsStylesSelector
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		page_background = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		page_header = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		page_outer_wrapper = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		body_background = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		body_link_style = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		forms_buttons = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		forms_buttons_hovered = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		forms_field_label = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		forms_field_text = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		forms_required = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		forms_required_legend = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		forms_help_text = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		forms_errors = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		monkey_rewards_badge = 13,
	}
	
	public class PostListsIdSignupFormsPostBody
	{
		
		/// <summary>
		/// The signup form body content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public PostListsIdSignupFormsPostBodyContents[] PostListsIdSignupFormsPostBodyContents { get; set; }
		
		/// <summary>
		/// Options for customizing your signup form header.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="header")]
		public PostListsIdSignupFormsPostBodyHeader Header { get; set; }
		
		/// <summary>
		/// An array of objects, each representing an element style for the signup form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="styles")]
		public PostListsIdSignupFormsPostBodyStyles[] PostListsIdSignupFormsPostBodyStyles { get; set; }
	}
	
	public class PostListsIdSignupFormsPostBodyContents
	{
		
		/// <summary>
		/// The content section name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="section")]
		public GetListsIdSignupFormsReturnSignup_formsContentsSection Section { get; set; }
		
		/// <summary>
		/// The content section text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class PostListsIdSignupFormsPostBodyHeader
	{
		
		/// <summary>
		/// Image alignment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_align")]
		public GetListsIdSignupFormsReturnSignup_formsHeaderImage_align Image_align { get; set; }
		
		/// <summary>
		/// Alt text for the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_alt")]
		public string Image_alt { get; set; }
		
		/// <summary>
		/// Image border color.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_border_color")]
		public string Image_border_color { get; set; }
		
		/// <summary>
		/// Image border style.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_border_style")]
		public System.Nullable<PostListsIdSignupFormsPostBodyHeaderImage_border_style> Image_border_style { get; set; }
		
		/// <summary>
		/// Image border width.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_border_width")]
		public string Image_border_width { get; set; }
		
		/// <summary>
		/// Image height, in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_height")]
		public string Image_height { get; set; }
		
		/// <summary>
		/// The URL that the header image will link to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_link")]
		public string Image_link { get; set; }
		
		/// <summary>
		/// Image link target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_target")]
		public System.Nullable<PostListsIdSignupFormsPostBodyHeaderImage_target> Image_target { get; set; }
		
		/// <summary>
		/// Header image URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// Image width, in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_width")]
		public string Image_width { get; set; }
		
		/// <summary>
		/// Header text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostListsIdSignupFormsPostBodyHeaderImage_border_style
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		solid = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dotted = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dashed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="double")]
		_double = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		groove = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		outset = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inset = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ridge = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostListsIdSignupFormsPostBodyHeaderImage_target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_blank = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="null")]
		_null = 1,
	}
	
	public class PostListsIdSignupFormsPostBodyStyles
	{
		
		/// <summary>
		/// A collection of options for a selector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public PostListsIdSignupFormsPostBodyStylesOptions[] PostListsIdSignupFormsPostBodyStylesOptions { get; set; }
		
		/// <summary>
		/// A string that identifies the element selector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selector")]
		public GetListsIdSignupFormsReturnSignup_formsStylesSelector Selector { get; set; }
	}
	
	public class PostListsIdSignupFormsPostBodyStylesOptions
	{
		
		/// <summary>
		/// A string that identifies the property.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="property")]
		public string Property { get; set; }
		
		/// <summary>
		/// A string that identifies value of the property.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class PostListsIdSignupFormsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostListsIdSignupFormsReturn_links[] PostListsIdSignupFormsReturn_links { get; set; }
		
		/// <summary>
		/// The signup form body content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public PostListsIdSignupFormsReturnContents[] PostListsIdSignupFormsReturnContents { get; set; }
		
		/// <summary>
		/// Options for customizing your signup form header.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="header")]
		public PostListsIdSignupFormsReturnHeader Header { get; set; }
		
		/// <summary>
		/// The signup form's list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// Signup form URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="signup_form_url")]
		public string Signup_form_url { get; set; }
		
		/// <summary>
		/// An array of objects, each representing an element style for the signup form.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="styles")]
		public PostListsIdSignupFormsReturnStyles[] PostListsIdSignupFormsReturnStyles { get; set; }
	}
	
	public class PostListsIdSignupFormsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostListsIdSignupFormsReturnContents
	{
		
		/// <summary>
		/// The content section name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="section")]
		public GetListsIdSignupFormsReturnSignup_formsContentsSection Section { get; set; }
		
		/// <summary>
		/// The content section text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class PostListsIdSignupFormsReturnHeader
	{
		
		/// <summary>
		/// Image alignment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_align")]
		public GetListsIdSignupFormsReturnSignup_formsHeaderImage_align Image_align { get; set; }
		
		/// <summary>
		/// Alt text for the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_alt")]
		public string Image_alt { get; set; }
		
		/// <summary>
		/// Image border color.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_border_color")]
		public string Image_border_color { get; set; }
		
		/// <summary>
		/// Image border style.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_border_style")]
		public System.Nullable<PostListsIdSignupFormsReturnHeaderImage_border_style> Image_border_style { get; set; }
		
		/// <summary>
		/// Image border width.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_border_width")]
		public string Image_border_width { get; set; }
		
		/// <summary>
		/// Image height, in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_height")]
		public string Image_height { get; set; }
		
		/// <summary>
		/// The URL that the header image will link to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_link")]
		public string Image_link { get; set; }
		
		/// <summary>
		/// Image link target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_target")]
		public System.Nullable<PostListsIdSignupFormsReturnHeaderImage_target> Image_target { get; set; }
		
		/// <summary>
		/// Header image URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// Image width, in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_width")]
		public string Image_width { get; set; }
		
		/// <summary>
		/// Header text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostListsIdSignupFormsReturnHeaderImage_border_style
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		solid = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dotted = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		dashed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="double")]
		_double = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		groove = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		outset = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inset = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ridge = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PostListsIdSignupFormsReturnHeaderImage_target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_blank = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="null")]
		_null = 1,
	}
	
	public class PostListsIdSignupFormsReturnStyles
	{
		
		/// <summary>
		/// A collection of options for a selector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public PostListsIdSignupFormsReturnStylesOptions[] PostListsIdSignupFormsReturnStylesOptions { get; set; }
		
		/// <summary>
		/// A string that identifies the element selector.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="selector")]
		public GetListsIdSignupFormsReturnSignup_formsStylesSelector Selector { get; set; }
	}
	
	public class PostListsIdSignupFormsReturnStylesOptions
	{
		
		/// <summary>
		/// A string that identifies the property.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="property")]
		public string Property { get; set; }
		
		/// <summary>
		/// A string that identifies value of the property.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class PostListsIdSurveysIdActionsCreateEmailReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostListsIdSurveysIdActionsCreateEmailReturn_links[] PostListsIdSurveysIdActionsCreateEmailReturn_links { get; set; }
		
		/// <summary>
		/// [A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ab_split_opts")]
		public PostListsIdSurveysIdActionsCreateEmailReturnAb_split_opts Ab_split_opts { get; set; }
		
		/// <summary>
		/// The link to the campaign's archive version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archive_url")]
		public string Archive_url { get; set; }
		
		/// <summary>
		/// How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_type")]
		public string Content_type { get; set; }
		
		/// <summary>
		/// The date and time the campaign was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="create_time")]
		public System.Nullable<System.DateTimeOffset> Create_time { get; set; }
		
		/// <summary>
		/// Updates on campaigns in the process of sending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delivery_status")]
		public PostListsIdSurveysIdActionsCreateEmailReturnDelivery_status Delivery_status { get; set; }
		
		/// <summary>
		/// The total number of emails sent for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The original link to the campaign's archive version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="long_archive_url")]
		public string Long_archive_url { get; set; }
		
		/// <summary>
		/// Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="needs_block_refresh")]
		public System.Nullable<System.Boolean> Needs_block_refresh { get; set; }
		
		/// <summary>
		/// If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_campaign_id")]
		public string Parent_campaign_id { get; set; }
		
		/// <summary>
		/// List settings for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public PostListsIdSurveysIdActionsCreateEmailReturnRecipients Recipients { get; set; }
		
		/// <summary>
		/// For sent campaigns, a summary of opens and clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report_summary")]
		public PostListsIdSurveysIdActionsCreateEmailReturnReport_summary Report_summary { get; set; }
		
		/// <summary>
		/// Determines if the campaign qualifies to be resent to non-openers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resendable")]
		public System.Nullable<System.Boolean> Resendable { get; set; }
		
		/// <summary>
		/// [RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rss_opts")]
		public PostListsIdSurveysIdActionsCreateEmailReturnRss_opts Rss_opts { get; set; }
		
		/// <summary>
		/// The date and time a campaign was sent in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.DateTimeOffset> Send_time { get; set; }
		
		/// <summary>
		/// The settings for your campaign, including subject, from name, reply-to address, and more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public PostListsIdSurveysIdActionsCreateEmailReturnSettings Settings { get; set; }
		
		/// <summary>
		/// The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="social_card")]
		public PostListsIdSurveysIdActionsCreateEmailReturnSocial_card Social_card { get; set; }
		
		/// <summary>
		/// The current status of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetCampaignsReturnCampaignsStatus Status { get; set; }
		
		/// <summary>
		/// The tracking options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public PostListsIdSurveysIdActionsCreateEmailReturnTracking Tracking { get; set; }
		
		/// <summary>
		/// There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetCampaignsType Type { get; set; }
		
		/// <summary>
		/// The settings specific to A/B test campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variate_settings")]
		public PostListsIdSurveysIdActionsCreateEmailReturnVariate_settings Variate_settings { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class PostListsIdSurveysIdActionsCreateEmailReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostListsIdSurveysIdActionsCreateEmailReturnAb_split_opts
	{
		
		/// <summary>
		/// For campaigns split on 'From Name', the name for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name_a")]
		public string From_name_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the name for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name_b")]
		public string From_name_b { get; set; }
		
		/// <summary>
		/// How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pick_winner")]
		public GetCampaignsReturnCampaignsAb_split_optsPick_winner Pick_winner { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the reply-to address for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_email_a")]
		public string Reply_email_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the reply-to address for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_email_b")]
		public string Reply_email_b { get; set; }
		
		/// <summary>
		/// The send time for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_a")]
		public System.Nullable<System.DateTimeOffset> Send_time_a { get; set; }
		
		/// <summary>
		/// The send time for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_b")]
		public System.Nullable<System.DateTimeOffset> Send_time_b { get; set; }
		
		/// <summary>
		/// The send time for the winning version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_winner")]
		public string Send_time_winner { get; set; }
		
		/// <summary>
		/// The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50.
		/// Minimum: 1
		/// Maximum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="split_size")]
		[System.ComponentModel.DataAnnotations.Range(1, 50)]
		public System.Nullable<System.Int32> Split_size { get; set; }
		
		/// <summary>
		/// The type of AB split to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="split_test")]
		public GetCampaignsReturnCampaignsAb_split_optsSplit_test Split_test { get; set; }
		
		/// <summary>
		/// For campaigns split on 'Subject Line', the subject line for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_a")]
		public string Subject_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'Subject Line', the subject line for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_b")]
		public string Subject_b { get; set; }
		
		/// <summary>
		/// The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
		
		/// <summary>
		/// How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_units")]
		public GetCampaignsReturnCampaignsAb_split_optsWait_units Wait_units { get; set; }
	}
	
	public class PostListsIdSurveysIdActionsCreateEmailReturnDelivery_status
	{
		
		/// <summary>
		/// Whether a campaign send can be canceled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="can_cancel")]
		public System.Nullable<System.Boolean> Can_cancel { get; set; }
		
		/// <summary>
		/// The total number of emails canceled for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_canceled")]
		public System.Nullable<System.Int32> Emails_canceled { get; set; }
		
		/// <summary>
		/// The total number of emails confirmed sent for this campaign so far.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// Whether Campaign Delivery Status is enabled for this account and campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The current state of a campaign delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetCampaignsReturnCampaignsDelivery_statusStatus Status { get; set; }
	}
	
	public class PostListsIdSurveysIdActionsCreateEmailReturnRecipients
	{
		
		/// <summary>
		/// The unique list id.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// Count of the recipients on the associated list. Formatted as an integer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_count")]
		public System.Nullable<System.Int32> Recipient_count { get; set; }
		
		/// <summary>
		/// An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_opts")]
		public PostListsIdSurveysIdActionsCreateEmailReturnRecipientsSegment_opts Segment_opts { get; set; }
		
		/// <summary>
		/// A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/) used for the campaign. Formatted as a string marked up with HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_text")]
		public string Segment_text { get; set; }
	}
	
	public class PostListsIdSurveysIdActionsCreateEmailReturnRecipientsSegment_opts
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Segment match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
		
		/// <summary>
		/// The prebuilt segment id, if a prebuilt segment has been designated for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prebuilt_segment_id")]
		public string Prebuilt_segment_id { get; set; }
		
		/// <summary>
		/// The id for an existing saved segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saved_segment_id")]
		public System.Nullable<System.Int32> Saved_segment_id { get; set; }
	}
	
	public class PostListsIdSurveysIdActionsCreateEmailReturnReport_summary
	{
		
		/// <summary>
		/// The number of unique clicks divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The total number of clicks for an campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// E-Commerce stats for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecommerce")]
		public PostListsIdSurveysIdActionsCreateEmailReturnReport_summaryEcommerce Ecommerce { get; set; }
		
		/// <summary>
		/// The number of unique opens divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The total number of opens for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// The number of unique clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber_clicks")]
		public System.Nullable<System.Int32> Subscriber_clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class PostListsIdSurveysIdActionsCreateEmailReturnReport_summaryEcommerce
	{
		
		/// <summary>
		/// The total orders for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_orders")]
		public System.Nullable<System.Int32> Total_orders { get; set; }
		
		/// <summary>
		/// The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
		
		/// <summary>
		/// The total spent for a campaign. Calculated as the sum of all order totals with no deductions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
	}
	
	public class PostListsIdSurveysIdActionsCreateEmailReturnRss_opts
	{
		
		/// <summary>
		/// Whether to add CSS to images in the RSS feed to constrain their width in campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="constrain_rss_img")]
		public System.Nullable<System.Boolean> Constrain_rss_img { get; set; }
		
		/// <summary>
		/// The URL for the RSS feed.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="feed_url")]
		public string Feed_url { get; set; }
		
		/// <summary>
		/// The frequency of the RSS Campaign.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="frequency")]
		public GetCampaignsReturnCampaignsRss_optsFrequency Frequency { get; set; }
		
		/// <summary>
		/// The date the campaign was last sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_sent")]
		public System.Nullable<System.DateTimeOffset> Last_sent { get; set; }
		
		/// <summary>
		/// The schedule for sending the RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedule")]
		public PostListsIdSurveysIdActionsCreateEmailReturnRss_optsSchedule Schedule { get; set; }
	}
	
	public class PostListsIdSurveysIdActionsCreateEmailReturnRss_optsSchedule
	{
		
		/// <summary>
		/// The days of the week to send a daily RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="daily_send")]
		public PostListsIdSurveysIdActionsCreateEmailReturnRss_optsScheduleDaily_send Daily_send { get; set; }
		
		/// <summary>
		/// The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-details/).
		/// Minimum: 0
		/// Maximum: 23
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hour")]
		[System.ComponentModel.DataAnnotations.Range(0, 23)]
		public System.Nullable<System.Int32> Hour { get; set; }
		
		/// <summary>
		/// The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February.
		/// Minimum: 0
		/// Maximum: 31
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monthly_send_date")]
		[System.ComponentModel.DataAnnotations.Range(0, 31)]
		public System.Nullable<System.Double> Monthly_send_date { get; set; }
		
		/// <summary>
		/// The day of the week to send a weekly RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weekly_send_day")]
		public GetCampaignsReturnCampaignsRss_optsScheduleWeekly_send_day Weekly_send_day { get; set; }
	}
	
	public class PostListsIdSurveysIdActionsCreateEmailReturnRss_optsScheduleDaily_send
	{
		
		/// <summary>
		/// Sends the daily RSS Campaign on Fridays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friday")]
		public System.Nullable<System.Boolean> Friday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Mondays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monday")]
		public System.Nullable<System.Boolean> Monday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Saturdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saturday")]
		public System.Nullable<System.Boolean> Saturday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Sundays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sunday")]
		public System.Nullable<System.Boolean> Sunday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Thursdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thursday")]
		public System.Nullable<System.Boolean> Thursday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Tuesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tuesday")]
		public System.Nullable<System.Boolean> Tuesday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Wednesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wednesday")]
		public System.Nullable<System.Boolean> Wednesday { get; set; }
	}
	
	public class PostListsIdSurveysIdActionsCreateEmailReturnSettings
	{
		
		/// <summary>
		/// Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticate")]
		public System.Nullable<System.Boolean> Authenticate { get; set; }
		
		/// <summary>
		/// An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_fb_post")]
		public string[] Auto_fb_post { get; set; }
		
		/// <summary>
		/// Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_footer")]
		public System.Nullable<System.Boolean> Auto_footer { get; set; }
		
		/// <summary>
		/// Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_tweet")]
		public System.Nullable<System.Boolean> Auto_tweet { get; set; }
		
		/// <summary>
		/// Whether the campaign uses the drag-and-drop editor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drag_and_drop")]
		public System.Nullable<System.Boolean> Drag_and_drop { get; set; }
		
		/// <summary>
		/// Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fb_comments")]
		public System.Nullable<System.Boolean> Fb_comments { get; set; }
		
		/// <summary>
		/// If the campaign is listed in a folder, the id for that folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public string Folder_id { get; set; }
		
		/// <summary>
		/// The 'from' name on the campaign (not an email address).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// Automatically inline the CSS included with the campaign content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inline_css")]
		public System.Nullable<System.Boolean> Inline_css { get; set; }
		
		/// <summary>
		/// The preview text for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preview_text")]
		public string Preview_text { get; set; }
		
		/// <summary>
		/// The reply-to email address for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public string Reply_to { get; set; }
		
		/// <summary>
		/// The subject line for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public string Subject_line { get; set; }
		
		/// <summary>
		/// The id for the template used in this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public System.Nullable<System.Int32> Template_id { get; set; }
		
		/// <summary>
		/// Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timewarp")]
		public System.Nullable<System.Boolean> Timewarp { get; set; }
		
		/// <summary>
		/// The title of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to_name")]
		public string To_name { get; set; }
		
		/// <summary>
		/// Use Mailchimp Conversation feature to manage replies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_conversation")]
		public System.Nullable<System.Boolean> Use_conversation { get; set; }
	}
	
	public class PostListsIdSurveysIdActionsCreateEmailReturnSocial_card
	{
		
		/// <summary>
		/// A short summary of the campaign to display.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The url for the header image for the card.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The title for the card. Typically the subject line of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class PostListsIdSurveysIdActionsCreateEmailReturnTracking
	{
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capsule")]
		public PostListsIdSurveysIdActionsCreateEmailReturnTrackingCapsule Capsule { get; set; }
		
		/// <summary>
		/// The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicktale")]
		public string Clicktale { get; set; }
		
		/// <summary>
		/// Whether to enable e-commerce tracking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecomm360")]
		public System.Nullable<System.Boolean> Ecomm360 { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal_tracking")]
		public System.Nullable<System.Boolean> Goal_tracking { get; set; }
		
		/// <summary>
		/// The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics")]
		public string Google_analytics { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html_clicks")]
		public System.Nullable<System.Boolean> Html_clicks { get; set; }
		
		/// <summary>
		/// Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Boolean> Opens { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salesforce")]
		public PostListsIdSurveysIdActionsCreateEmailReturnTrackingSalesforce Salesforce { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text_clicks")]
		public System.Nullable<System.Boolean> Text_clicks { get; set; }
	}
	
	public class PostListsIdSurveysIdActionsCreateEmailReturnTrackingCapsule
	{
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class PostListsIdSurveysIdActionsCreateEmailReturnTrackingSalesforce
	{
		
		/// <summary>
		/// Create a campaign in a connected Salesforce account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class PostListsIdSurveysIdActionsCreateEmailReturnVariate_settings
	{
		
		/// <summary>
		/// Combinations of possible variables used to build emails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="combinations")]
		public PostListsIdSurveysIdActionsCreateEmailReturnVariate_settingsCombinations[] PostListsIdSurveysIdActionsCreateEmailReturnVariate_settingsCombinations { get; set; }
		
		/// <summary>
		/// Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public string[] Contents { get; set; }
		
		/// <summary>
		/// The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_names")]
		public string[] From_names { get; set; }
		
		/// <summary>
		/// The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to_addresses")]
		public string[] Reply_to_addresses { get; set; }
		
		/// <summary>
		/// The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_times")]
		public string[] Send_times { get; set; }
		
		/// <summary>
		/// The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_lines")]
		public string[] Subject_lines { get; set; }
		
		/// <summary>
		/// The percentage of recipients to send the test combinations to, must be a value between 10 and 100.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="test_size")]
		public System.Nullable<System.Int32> Test_size { get; set; }
		
		/// <summary>
		/// The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
		
		/// <summary>
		/// The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="winner_criteria")]
		public GetCampaignsReturnCampaignsVariate_settingsWinner_criteria Winner_criteria { get; set; }
		
		/// <summary>
		/// ID of the campaign that was sent to the remaining recipients based on the winning combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winning_campaign_id")]
		public string Winning_campaign_id { get; set; }
		
		/// <summary>
		/// ID for the winning combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winning_combination_id")]
		public string Winning_combination_id { get; set; }
	}
	
	public class PostListsIdSurveysIdActionsCreateEmailReturnVariate_settingsCombinations
	{
		
		/// <summary>
		/// The index of `variate_settings.contents` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_description")]
		public System.Nullable<System.Int32> Content_description { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.from_names` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public System.Nullable<System.Int32> From_name { get; set; }
		
		/// <summary>
		/// Unique ID for the combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The number of recipients for this combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public System.Nullable<System.Int32> Recipients { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.reply_to_addresses` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public System.Nullable<System.Int32> Reply_to { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.send_times` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.Int32> Send_time { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.subject_lines` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public System.Nullable<System.Int32> Subject_line { get; set; }
	}
	
	public class SearchTagsByNameReturn
	{
		
		/// <summary>
		/// A list of matching tags.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public SearchTagsByNameReturnTags[] SearchTagsByNameReturnTags { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class SearchTagsByNameReturnTags
	{
		
		/// <summary>
		/// The unique id for the tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class GetListsIdWebhooksReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdWebhooksReturn_links[] GetListsIdWebhooksReturn_links { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a specific list member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="webhooks")]
		public GetListsIdWebhooksReturnWebhooks[] GetListsIdWebhooksReturnWebhooks { get; set; }
	}
	
	public class GetListsIdWebhooksReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdWebhooksReturnWebhooks
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdWebhooksReturnWebhooks_links[] GetListsIdWebhooksReturnWebhooks_links { get; set; }
		
		/// <summary>
		/// The events that can trigger the webhook and whether they are enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="events")]
		public GetListsIdWebhooksReturnWebhooksEvents Events { get; set; }
		
		/// <summary>
		/// An string that uniquely identifies this webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The unique id for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The possible sources of any events that can trigger the webhook and whether they are enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public GetListsIdWebhooksReturnWebhooksSources Sources { get; set; }
		
		/// <summary>
		/// A valid URL for the Webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class GetListsIdWebhooksReturnWebhooks_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdWebhooksReturnWebhooksEvents
	{
		
		/// <summary>
		/// Whether the webhook is triggered when a campaign is sent or cancelled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a subscriber's email address is cleaned from the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cleaned")]
		public System.Nullable<System.Boolean> Cleaned { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a subscriber's profile is updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profile")]
		public System.Nullable<System.Boolean> Profile { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a list subscriber is added.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribe")]
		public System.Nullable<System.Boolean> Subscribe { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a list member unsubscribes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe")]
		public System.Nullable<System.Boolean> Unsubscribe { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a subscriber's email address is changed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="upemail")]
		public System.Nullable<System.Boolean> Upemail { get; set; }
	}
	
	public class GetListsIdWebhooksReturnWebhooksSources
	{
		
		/// <summary>
		/// Whether the webhook is triggered by admin-initiated actions in the web interface.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="admin")]
		public System.Nullable<System.Boolean> Admin { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered by actions initiated via the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="api")]
		public System.Nullable<System.Boolean> Api { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered by subscriber-initiated actions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user")]
		public System.Nullable<System.Boolean> User { get; set; }
	}
	
	public class PostListsIdWebhooksReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostListsIdWebhooksReturn_links[] PostListsIdWebhooksReturn_links { get; set; }
		
		/// <summary>
		/// The events that can trigger the webhook and whether they are enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="events")]
		public PostListsIdWebhooksReturnEvents Events { get; set; }
		
		/// <summary>
		/// An string that uniquely identifies this webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The unique id for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The possible sources of any events that can trigger the webhook and whether they are enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public PostListsIdWebhooksReturnSources Sources { get; set; }
		
		/// <summary>
		/// A valid URL for the Webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class PostListsIdWebhooksReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostListsIdWebhooksReturnEvents
	{
		
		/// <summary>
		/// Whether the webhook is triggered when a campaign is sent or cancelled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a subscriber's email address is cleaned from the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cleaned")]
		public System.Nullable<System.Boolean> Cleaned { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a subscriber's profile is updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profile")]
		public System.Nullable<System.Boolean> Profile { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a list subscriber is added.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribe")]
		public System.Nullable<System.Boolean> Subscribe { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a list member unsubscribes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe")]
		public System.Nullable<System.Boolean> Unsubscribe { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a subscriber's email address is changed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="upemail")]
		public System.Nullable<System.Boolean> Upemail { get; set; }
	}
	
	public class PostListsIdWebhooksReturnSources
	{
		
		/// <summary>
		/// Whether the webhook is triggered by admin-initiated actions in the web interface.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="admin")]
		public System.Nullable<System.Boolean> Admin { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered by actions initiated via the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="api")]
		public System.Nullable<System.Boolean> Api { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered by subscriber-initiated actions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user")]
		public System.Nullable<System.Boolean> User { get; set; }
	}
	
	public class GetListsIdWebhooksIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetListsIdWebhooksIdReturn_links[] GetListsIdWebhooksIdReturn_links { get; set; }
		
		/// <summary>
		/// The events that can trigger the webhook and whether they are enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="events")]
		public GetListsIdWebhooksIdReturnEvents Events { get; set; }
		
		/// <summary>
		/// An string that uniquely identifies this webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The unique id for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The possible sources of any events that can trigger the webhook and whether they are enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public GetListsIdWebhooksIdReturnSources Sources { get; set; }
		
		/// <summary>
		/// A valid URL for the Webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class GetListsIdWebhooksIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetListsIdWebhooksIdReturnEvents
	{
		
		/// <summary>
		/// Whether the webhook is triggered when a campaign is sent or cancelled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a subscriber's email address is cleaned from the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cleaned")]
		public System.Nullable<System.Boolean> Cleaned { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a subscriber's profile is updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profile")]
		public System.Nullable<System.Boolean> Profile { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a list subscriber is added.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribe")]
		public System.Nullable<System.Boolean> Subscribe { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a list member unsubscribes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe")]
		public System.Nullable<System.Boolean> Unsubscribe { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a subscriber's email address is changed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="upemail")]
		public System.Nullable<System.Boolean> Upemail { get; set; }
	}
	
	public class GetListsIdWebhooksIdReturnSources
	{
		
		/// <summary>
		/// Whether the webhook is triggered by admin-initiated actions in the web interface.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="admin")]
		public System.Nullable<System.Boolean> Admin { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered by actions initiated via the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="api")]
		public System.Nullable<System.Boolean> Api { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered by subscriber-initiated actions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user")]
		public System.Nullable<System.Boolean> User { get; set; }
	}
	
	public class PatchListsIdWebhooksIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchListsIdWebhooksIdReturn_links[] PatchListsIdWebhooksIdReturn_links { get; set; }
		
		/// <summary>
		/// The events that can trigger the webhook and whether they are enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="events")]
		public PatchListsIdWebhooksIdReturnEvents Events { get; set; }
		
		/// <summary>
		/// An string that uniquely identifies this webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The unique id for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The possible sources of any events that can trigger the webhook and whether they are enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sources")]
		public PatchListsIdWebhooksIdReturnSources Sources { get; set; }
		
		/// <summary>
		/// A valid URL for the Webhook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class PatchListsIdWebhooksIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchListsIdWebhooksIdReturnEvents
	{
		
		/// <summary>
		/// Whether the webhook is triggered when a campaign is sent or cancelled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a subscriber's email address is cleaned from the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cleaned")]
		public System.Nullable<System.Boolean> Cleaned { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a subscriber's profile is updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="profile")]
		public System.Nullable<System.Boolean> Profile { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a list subscriber is added.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribe")]
		public System.Nullable<System.Boolean> Subscribe { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a list member unsubscribes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe")]
		public System.Nullable<System.Boolean> Unsubscribe { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered when a subscriber's email address is changed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="upemail")]
		public System.Nullable<System.Boolean> Upemail { get; set; }
	}
	
	public class PatchListsIdWebhooksIdReturnSources
	{
		
		/// <summary>
		/// Whether the webhook is triggered by admin-initiated actions in the web interface.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="admin")]
		public System.Nullable<System.Boolean> Admin { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered by actions initiated via the API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="api")]
		public System.Nullable<System.Boolean> Api { get; set; }
		
		/// <summary>
		/// Whether the webhook is triggered by subscriber-initiated actions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="user")]
		public System.Nullable<System.Boolean> User { get; set; }
	}
	
	public class GetPingReturn
	{
		
		/// <summary>
		/// This will return a constant string value if the request is successful. Ex. "Everything's Chimpy!"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="health_status")]
		public string Health_status { get; set; }
	}
	
	public class GetReportingFacebookAdsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportingFacebookAdsReturn_links[] GetReportingFacebookAdsReturn_links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="facebook_ads")]
		public string[] Facebook_ads { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetReportingFacebookAdsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportingFacebookAdsIdReturn
	{
		
		/// <summary>
		/// The date and time the outreach was canceled in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="canceled_at")]
		public System.Nullable<System.DateTimeOffset> Canceled_at { get; set; }
		
		/// <summary>
		/// The date and time the outreach was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="create_time")]
		public System.Nullable<System.DateTimeOffset> Create_time { get; set; }
		
		/// <summary>
		/// If this outreach targets a segment of your audience.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="has_segment")]
		public System.Nullable<System.Boolean> Has_segment { get; set; }
		
		/// <summary>
		/// Unique ID of an Outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Title or name of an Outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The date and time the outreach was (or will be) published in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_time")]
		public System.Nullable<System.DateTimeOffset> Published_time { get; set; }
		
		/// <summary>
		/// High level audience information for who the outreach targets.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public GetReportingFacebookAdsIdReturnRecipients Recipients { get; set; }
		
		/// <summary>
		/// High level reporting stats for an outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report_summary")]
		public GetReportingFacebookAdsIdReturnReport_summary Report_summary { get; set; }
		
		/// <summary>
		/// Outreach report availability. Note: This property is hotly debated in what it _should_ convey. See [MCP-1371](https://jira.mailchimp.com/browse/MCP-1371) for more context.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="show_report")]
		public System.Nullable<System.Boolean> Show_report { get; set; }
		
		/// <summary>
		/// The date and time the outreach was started in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="start_time")]
		public System.Nullable<System.DateTimeOffset> Start_time { get; set; }
		
		/// <summary>
		/// The status of this outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetFacebookAdsIdReturnStatus Status { get; set; }
		
		/// <summary>
		/// The URL of the thumbnail for this outreach.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnail")]
		public string Thumbnail { get; set; }
		
		/// <summary>
		/// The type of outreach this object is.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GetReportingFacebookAdsIdReturnType> Type { get; set; }
		
		/// <summary>
		/// The date and time the outreach was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. For example, for a `regular` outreach, you can view this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class GetReportingFacebookAdsIdReturnRecipients
	{
		
		/// <summary>
		/// The unique list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// Count of the recipients on the associated list. Formatted as an integer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_count")]
		public System.Nullable<System.Int32> Recipient_count { get; set; }
		
		/// <summary>
		/// An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_opts")]
		public GetReportingFacebookAdsIdReturnRecipientsSegment_opts Segment_opts { get; set; }
		
		/// <summary>
		/// A description of the [segment](https://mailchimp.com/help/save-and-manage-segments/) used for the campaign. Formatted as a string marked up with HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_text")]
		public string Segment_text { get; set; }
	}
	
	public class GetReportingFacebookAdsIdReturnRecipientsSegment_opts
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Segment match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
		
		/// <summary>
		/// The prebuilt segment id, if a prebuilt segment has been designated for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prebuilt_segment_id")]
		public string Prebuilt_segment_id { get; set; }
		
		/// <summary>
		/// The id for an existing saved segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saved_segment_id")]
		public System.Nullable<System.Int32> Saved_segment_id { get; set; }
	}
	
	public class GetReportingFacebookAdsIdReturnReport_summary
	{
		
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="conversion_rate")]
		public System.Nullable<System.Double> Conversion_rate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ecommerce")]
		public GetReportingFacebookAdsIdReturnReport_summaryEcommerce Ecommerce { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="engagements")]
		public System.Nullable<System.Int32> Engagements { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="impressions")]
		public System.Nullable<System.Double> Impressions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reach")]
		public System.Nullable<System.Int32> Reach { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subscriber_clicks")]
		public System.Nullable<System.Int32> Subscriber_clicks { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subscribes")]
		public System.Nullable<System.Int32> Subscribes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total_sent")]
		public System.Nullable<System.Int32> Total_sent { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unique_visits")]
		public System.Nullable<System.Int32> Unique_visits { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="visits")]
		public System.Nullable<System.Int32> Visits { get; set; }
	}
	
	public class GetReportingFacebookAdsIdReturnReport_summaryEcommerce
	{
		
		[System.Runtime.Serialization.DataMember(Name="average_order_revenue")]
		public System.Nullable<System.Double> Average_order_revenue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetReportingFacebookAdsIdReturnType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		regular = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="email-touchpoint")]
		emailMinustouchpoint = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		plaintext = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		rss = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		reconfirm = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		variate = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		absplit = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		automation = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		facebook = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		google = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		autoresponder = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		transactional = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		page = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		website = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		social_post = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		survey = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		customer_journey = 16,
	}
	
	public enum GetReportingFacebookAdsIdEcommerceProductActivitySort_field
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		title = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		total_revenue = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		total_purchased = 2,
	}
	
	public class GetReportingFacebookAdsIdEcommerceProductActivityReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportingFacebookAdsIdEcommerceProductActivityReturn_links[] GetReportingFacebookAdsIdEcommerceProductActivityReturn_links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="products")]
		public GetReportingFacebookAdsIdEcommerceProductActivityReturnProducts[] GetReportingFacebookAdsIdEcommerceProductActivityReturnProducts { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetReportingFacebookAdsIdEcommerceProductActivityReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportingFacebookAdsIdEcommerceProductActivityReturnProducts
	{
		
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendation_purchased")]
		public System.Nullable<System.Int32> Recommendation_purchased { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendation_total")]
		public System.Nullable<System.Int32> Recommendation_total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total_purchased")]
		public System.Nullable<System.Double> Total_purchased { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
	}
	
	public class GetReportingLandingPagesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportingLandingPagesReturn_links[] GetReportingLandingPagesReturn_links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="landing_pages")]
		public GetReportingLandingPagesReturnLanding_pages[] GetReportingLandingPagesReturnLanding_pages { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetReportingLandingPagesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportingLandingPagesReturnLanding_pages
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportingLandingPagesReturnLanding_pages_links[] GetReportingLandingPagesReturnLanding_pages_links { get; set; }
		
		/// <summary>
		/// The number of clicks to this landing pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// The percentage of people who visited your landing page and were added to your list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversion_rate")]
		public System.Nullable<System.Double> Conversion_rate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ecommerce")]
		public GetReportingLandingPagesReturnLanding_pagesEcommerce Ecommerce { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The list id connected to this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// List Name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// The name of this landing page the user will see.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The time this landing page was published.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_at")]
		public System.Nullable<System.DateTimeOffset> Published_at { get; set; }
		
		/// <summary>
		/// A list of tags associated to the landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="signup_tags")]
		public GetReportingLandingPagesReturnLanding_pagesSignup_tags[] GetReportingLandingPagesReturnLanding_pagesSignup_tags { get; set; }
		
		/// <summary>
		/// The status of the landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// The number of subscribes to this landing pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribes")]
		public System.Nullable<System.Int32> Subscribes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timeseries")]
		public GetReportingLandingPagesReturnLanding_pagesTimeseries Timeseries { get; set; }
		
		/// <summary>
		/// The name of the landing page the user's customers will see.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The number of unique visits to this landing pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_visits")]
		public System.Nullable<System.Int32> Unique_visits { get; set; }
		
		/// <summary>
		/// The time this landing page was unpublished.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unpublished_at")]
		public System.Nullable<System.DateTimeOffset> Unpublished_at { get; set; }
		
		/// <summary>
		/// The landing page url.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The number of visits to this landing pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visits")]
		public System.Nullable<System.Int32> Visits { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class GetReportingLandingPagesReturnLanding_pages_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportingLandingPagesReturnLanding_pagesEcommerce
	{
		
		/// <summary>
		/// The average order revenue of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="average_order_revenue")]
		public System.Nullable<System.Double> Average_order_revenue { get; set; }
		
		/// <summary>
		/// The user's currency code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The total number of orders associated with this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_orders")]
		public System.Nullable<System.Int32> Total_orders { get; set; }
		
		/// <summary>
		/// The total revenue of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
	}
	
	public class GetReportingLandingPagesReturnLanding_pagesSignup_tags
	{
		
		/// <summary>
		/// The unique id for the tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tag_id")]
		public System.Nullable<System.Int32> Tag_id { get; set; }
		
		/// <summary>
		/// The name of the tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tag_name")]
		public string Tag_name { get; set; }
	}
	
	public class GetReportingLandingPagesReturnLanding_pagesTimeseries
	{
		
		/// <summary>
		/// The clicks and visits data from the last seven days.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="daily_stats")]
		public GetReportingLandingPagesReturnLanding_pagesTimeseriesDaily_stats Daily_stats { get; set; }
		
		/// <summary>
		/// The clicks and visits data from the last five weeks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weekly_stats")]
		public GetReportingLandingPagesReturnLanding_pagesTimeseriesWeekly_stats Weekly_stats { get; set; }
	}
	
	public class GetReportingLandingPagesReturnLanding_pagesTimeseriesDaily_stats
	{
		
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public GetReportingLandingPagesReturnLanding_pagesTimeseriesDaily_statsClicks[] GetReportingLandingPagesReturnLanding_pagesTimeseriesDaily_statsClicks { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unique_visits")]
		public GetReportingLandingPagesReturnLanding_pagesTimeseriesDaily_statsUnique_visits[] GetReportingLandingPagesReturnLanding_pagesTimeseriesDaily_statsUnique_visits { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="visits")]
		public GetReportingLandingPagesReturnLanding_pagesTimeseriesDaily_statsVisits[] GetReportingLandingPagesReturnLanding_pagesTimeseriesDaily_statsVisits { get; set; }
	}
	
	public class GetReportingLandingPagesReturnLanding_pagesTimeseriesDaily_statsClicks
	{
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="val")]
		public System.Nullable<System.Int32> Val { get; set; }
	}
	
	public class GetReportingLandingPagesReturnLanding_pagesTimeseriesDaily_statsUnique_visits
	{
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="val")]
		public System.Nullable<System.Int32> Val { get; set; }
	}
	
	public class GetReportingLandingPagesReturnLanding_pagesTimeseriesDaily_statsVisits
	{
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="val")]
		public System.Nullable<System.Int32> Val { get; set; }
	}
	
	public class GetReportingLandingPagesReturnLanding_pagesTimeseriesWeekly_stats
	{
		
		/// <summary>
		/// The total number of clicks in a week.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public GetReportingLandingPagesReturnLanding_pagesTimeseriesWeekly_statsClicks[] GetReportingLandingPagesReturnLanding_pagesTimeseriesWeekly_statsClicks { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unique_visits")]
		public GetReportingLandingPagesReturnLanding_pagesTimeseriesWeekly_statsUnique_visits[] GetReportingLandingPagesReturnLanding_pagesTimeseriesWeekly_statsUnique_visits { get; set; }
		
		/// <summary>
		/// The total number of visits in a week.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visits")]
		public GetReportingLandingPagesReturnLanding_pagesTimeseriesWeekly_statsVisits[] GetReportingLandingPagesReturnLanding_pagesTimeseriesWeekly_statsVisits { get; set; }
	}
	
	public class GetReportingLandingPagesReturnLanding_pagesTimeseriesWeekly_statsClicks
	{
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="val")]
		public System.Nullable<System.Int32> Val { get; set; }
	}
	
	public class GetReportingLandingPagesReturnLanding_pagesTimeseriesWeekly_statsUnique_visits
	{
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="val")]
		public System.Nullable<System.Int32> Val { get; set; }
	}
	
	public class GetReportingLandingPagesReturnLanding_pagesTimeseriesWeekly_statsVisits
	{
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="val")]
		public System.Nullable<System.Int32> Val { get; set; }
	}
	
	public class GetReportingLandingPagesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportingLandingPagesIdReturn_links[] GetReportingLandingPagesIdReturn_links { get; set; }
		
		/// <summary>
		/// The number of clicks to this landing pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// The percentage of people who visited your landing page and were added to your list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conversion_rate")]
		public System.Nullable<System.Double> Conversion_rate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ecommerce")]
		public GetReportingLandingPagesIdReturnEcommerce Ecommerce { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The list id connected to this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// List Name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// The name of this landing page the user will see.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The time this landing page was published.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_at")]
		public System.Nullable<System.DateTimeOffset> Published_at { get; set; }
		
		/// <summary>
		/// A list of tags associated to the landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="signup_tags")]
		public GetReportingLandingPagesIdReturnSignup_tags[] GetReportingLandingPagesIdReturnSignup_tags { get; set; }
		
		/// <summary>
		/// The status of the landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// The number of subscribes to this landing pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribes")]
		public System.Nullable<System.Int32> Subscribes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timeseries")]
		public GetReportingLandingPagesIdReturnTimeseries Timeseries { get; set; }
		
		/// <summary>
		/// The name of the landing page the user's customers will see.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The number of unique visits to this landing pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_visits")]
		public System.Nullable<System.Int32> Unique_visits { get; set; }
		
		/// <summary>
		/// The time this landing page was unpublished.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unpublished_at")]
		public System.Nullable<System.DateTimeOffset> Unpublished_at { get; set; }
		
		/// <summary>
		/// The landing page url.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The number of visits to this landing pages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visits")]
		public System.Nullable<System.Int32> Visits { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class GetReportingLandingPagesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportingLandingPagesIdReturnEcommerce
	{
		
		/// <summary>
		/// The average order revenue of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="average_order_revenue")]
		public System.Nullable<System.Double> Average_order_revenue { get; set; }
		
		/// <summary>
		/// The user's currency code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The total number of orders associated with this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_orders")]
		public System.Nullable<System.Int32> Total_orders { get; set; }
		
		/// <summary>
		/// The total revenue of this landing page.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
	}
	
	public class GetReportingLandingPagesIdReturnSignup_tags
	{
		
		/// <summary>
		/// The unique id for the tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tag_id")]
		public System.Nullable<System.Int32> Tag_id { get; set; }
		
		/// <summary>
		/// The name of the tag.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tag_name")]
		public string Tag_name { get; set; }
	}
	
	public class GetReportingLandingPagesIdReturnTimeseries
	{
		
		/// <summary>
		/// The clicks and visits data from the last seven days.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="daily_stats")]
		public GetReportingLandingPagesIdReturnTimeseriesDaily_stats Daily_stats { get; set; }
		
		/// <summary>
		/// The clicks and visits data from the last five weeks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weekly_stats")]
		public GetReportingLandingPagesIdReturnTimeseriesWeekly_stats Weekly_stats { get; set; }
	}
	
	public class GetReportingLandingPagesIdReturnTimeseriesDaily_stats
	{
		
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public GetReportingLandingPagesIdReturnTimeseriesDaily_statsClicks[] GetReportingLandingPagesIdReturnTimeseriesDaily_statsClicks { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unique_visits")]
		public GetReportingLandingPagesIdReturnTimeseriesDaily_statsUnique_visits[] GetReportingLandingPagesIdReturnTimeseriesDaily_statsUnique_visits { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="visits")]
		public GetReportingLandingPagesIdReturnTimeseriesDaily_statsVisits[] GetReportingLandingPagesIdReturnTimeseriesDaily_statsVisits { get; set; }
	}
	
	public class GetReportingLandingPagesIdReturnTimeseriesDaily_statsClicks
	{
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="val")]
		public System.Nullable<System.Int32> Val { get; set; }
	}
	
	public class GetReportingLandingPagesIdReturnTimeseriesDaily_statsUnique_visits
	{
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="val")]
		public System.Nullable<System.Int32> Val { get; set; }
	}
	
	public class GetReportingLandingPagesIdReturnTimeseriesDaily_statsVisits
	{
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="val")]
		public System.Nullable<System.Int32> Val { get; set; }
	}
	
	public class GetReportingLandingPagesIdReturnTimeseriesWeekly_stats
	{
		
		/// <summary>
		/// The total number of clicks in a week.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public GetReportingLandingPagesIdReturnTimeseriesWeekly_statsClicks[] GetReportingLandingPagesIdReturnTimeseriesWeekly_statsClicks { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unique_visits")]
		public GetReportingLandingPagesIdReturnTimeseriesWeekly_statsUnique_visits[] GetReportingLandingPagesIdReturnTimeseriesWeekly_statsUnique_visits { get; set; }
		
		/// <summary>
		/// The total number of visits in a week.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="visits")]
		public GetReportingLandingPagesIdReturnTimeseriesWeekly_statsVisits[] GetReportingLandingPagesIdReturnTimeseriesWeekly_statsVisits { get; set; }
	}
	
	public class GetReportingLandingPagesIdReturnTimeseriesWeekly_statsClicks
	{
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="val")]
		public System.Nullable<System.Int32> Val { get; set; }
	}
	
	public class GetReportingLandingPagesIdReturnTimeseriesWeekly_statsUnique_visits
	{
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="val")]
		public System.Nullable<System.Int32> Val { get; set; }
	}
	
	public class GetReportingLandingPagesIdReturnTimeseriesWeekly_statsVisits
	{
		
		[System.Runtime.Serialization.DataMember(Name="date")]
		public string Date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="val")]
		public System.Nullable<System.Int32> Val { get; set; }
	}
	
	public class GetReportingSurveysReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportingSurveysReturn_links[] GetReportingSurveysReturn_links { get; set; }
		
		/// <summary>
		/// The surveys that have reports available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="surveys")]
		public GetReportingSurveysReturnSurveys[] GetReportingSurveysReturnSurveys { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetReportingSurveysReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportingSurveysReturnSurveys
	{
		
		/// <summary>
		/// The date and time the survey was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The ID of the list connected to this survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The name of the list connected to this survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// The date and time the survey was published in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_at")]
		public System.Nullable<System.DateTimeOffset> Published_at { get; set; }
		
		/// <summary>
		/// The survey's status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<GetReportingSurveysReturnSurveysStatus> Status { get; set; }
		
		/// <summary>
		/// The title of the survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The total number of responses to this survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_responses")]
		public System.Nullable<System.Int32> Total_responses { get; set; }
		
		/// <summary>
		/// The date and time the survey was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The URL for the survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this survey report in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/surveys/results?survey_id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetReportingSurveysReturnSurveysStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		published = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unpublished = 1,
	}
	
	public class GetReportingSurveysIdReturn
	{
		
		/// <summary>
		/// The date and time the survey was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The ID of the list connected to this survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The name of the list connected to this survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// The date and time the survey was published in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="published_at")]
		public System.Nullable<System.DateTimeOffset> Published_at { get; set; }
		
		/// <summary>
		/// The survey's status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetReportingSurveysReturnSurveysStatus Status { get; set; }
		
		/// <summary>
		/// The title of the survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The total number of responses to this survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_responses")]
		public System.Nullable<System.Int32> Total_responses { get; set; }
		
		/// <summary>
		/// The date and time the survey was last updated in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updated_at")]
		public System.Nullable<System.DateTimeOffset> Updated_at { get; set; }
		
		/// <summary>
		/// The URL for the survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this survey report in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/surveys/results?survey_id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class GetReportingSurveysIdQuestionsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportingSurveysIdQuestionsReturn_links[] GetReportingSurveysIdQuestionsReturn_links { get; set; }
		
		/// <summary>
		/// An array of reports for each question on the survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="questions")]
		public GetReportingSurveysIdQuestionsReturnQuestions[] GetReportingSurveysIdQuestionsReturnQuestions { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetReportingSurveysIdQuestionsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportingSurveysIdQuestionsReturnQuestions
	{
		
		/// <summary>
		/// The average rating for this range question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="average_rating")]
		public System.Nullable<System.Single> Average_rating { get; set; }
		
		/// <summary>
		/// For email question types, how many are new, known, or unknown contacts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_counts")]
		public GetReportingSurveysIdQuestionsReturnQuestionsContact_counts Contact_counts { get; set; }
		
		/// <summary>
		/// Whether this survey question has an 'other' option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="has_other")]
		public System.Nullable<System.Boolean> Has_other { get; set; }
		
		/// <summary>
		/// The ID of the survey question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether this survey question is required to answer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_required")]
		public System.Nullable<System.Boolean> Is_required { get; set; }
		
		/// <summary>
		/// A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/) for an audience.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_field")]
		public GetReportingSurveysIdQuestionsReturnQuestionsMerge_field Merge_field { get; set; }
		
		/// <summary>
		/// The answer choices for this question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public GetReportingSurveysIdQuestionsReturnQuestionsOptions[] GetReportingSurveysIdQuestionsReturnQuestionsOptions { get; set; }
		
		/// <summary>
		/// Label used for the 'other' option of this survey question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="other_label")]
		public string Other_label { get; set; }
		
		/// <summary>
		/// Placeholder text for this survey question's answer box.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="placeholder_label")]
		public string Placeholder_label { get; set; }
		
		/// <summary>
		/// The query of the survey question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string Query { get; set; }
		
		/// <summary>
		/// Label for the high end of the range.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="range_high_label")]
		public string Range_high_label { get; set; }
		
		/// <summary>
		/// Label for the low end of the range.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="range_low_label")]
		public string Range_low_label { get; set; }
		
		/// <summary>
		/// Whether the subscribe checkbox is shown for this email question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribe_checkbox_enabled")]
		public System.Nullable<System.Boolean> Subscribe_checkbox_enabled { get; set; }
		
		/// <summary>
		/// Label used for the subscribe checkbox for this email question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribe_checkbox_label")]
		public string Subscribe_checkbox_label { get; set; }
		
		/// <summary>
		/// The unique ID of the survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="survey_id")]
		public string Survey_id { get; set; }
		
		/// <summary>
		/// The total number of responses to this question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_responses")]
		public System.Nullable<System.Int32> Total_responses { get; set; }
		
		/// <summary>
		/// The response type of the survey question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GetReportingSurveysIdQuestionsReturnQuestionsType> Type { get; set; }
	}
	
	public class GetReportingSurveysIdQuestionsReturnQuestionsContact_counts
	{
		
		/// <summary>
		/// The number of known contacts that responded to this survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="known")]
		public System.Nullable<System.Int32> Known { get; set; }
		
		/// <summary>
		/// The number of new contacts that responded to this survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="new")]
		public System.Nullable<System.Int32> New { get; set; }
		
		/// <summary>
		/// The number of unknown contacts that responded to this survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unknown")]
		public System.Nullable<System.Int32> Unknown { get; set; }
	}
	
	public class GetReportingSurveysIdQuestionsReturnQuestionsMerge_field
	{
		
		/// <summary>
		/// An unchanging id for the merge field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The [label](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for the merge field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label")]
		public string Label { get; set; }
		
		/// <summary>
		/// The [type](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for the merge field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetListsIdMergeFieldsReturnMerge_fieldsType Type { get; set; }
	}
	
	public class GetReportingSurveysIdQuestionsReturnQuestionsOptions
	{
		
		/// <summary>
		/// The count of responses that selected this survey question option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// The ID for this survey question option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The label for this survey question option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label")]
		public string Label { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetReportingSurveysIdQuestionsReturnQuestionsType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pickOne = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pickMany = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		range = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		text = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		email = 4,
	}
	
	public class GetReportingSurveysIdQuestionsIdReturn
	{
		
		/// <summary>
		/// The average rating for this range question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="average_rating")]
		public System.Nullable<System.Single> Average_rating { get; set; }
		
		/// <summary>
		/// For email question types, how many are new, known, or unknown contacts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_counts")]
		public GetReportingSurveysIdQuestionsIdReturnContact_counts Contact_counts { get; set; }
		
		/// <summary>
		/// Whether this survey question has an 'other' option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="has_other")]
		public System.Nullable<System.Boolean> Has_other { get; set; }
		
		/// <summary>
		/// The ID of the survey question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Whether this survey question is required to answer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_required")]
		public System.Nullable<System.Boolean> Is_required { get; set; }
		
		/// <summary>
		/// A [merge field](https://mailchimp.com/developer/marketing/docs/merge-fields/) for an audience.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_field")]
		public GetReportingSurveysIdQuestionsIdReturnMerge_field Merge_field { get; set; }
		
		/// <summary>
		/// The answer choices for this question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public GetReportingSurveysIdQuestionsIdReturnOptions[] GetReportingSurveysIdQuestionsIdReturnOptions { get; set; }
		
		/// <summary>
		/// Label used for the 'other' option of this survey question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="other_label")]
		public string Other_label { get; set; }
		
		/// <summary>
		/// Placeholder text for this survey question's answer box.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="placeholder_label")]
		public string Placeholder_label { get; set; }
		
		/// <summary>
		/// The query of the survey question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string Query { get; set; }
		
		/// <summary>
		/// Label for the high end of the range.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="range_high_label")]
		public string Range_high_label { get; set; }
		
		/// <summary>
		/// Label for the low end of the range.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="range_low_label")]
		public string Range_low_label { get; set; }
		
		/// <summary>
		/// Whether the subscribe checkbox is shown for this email question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribe_checkbox_enabled")]
		public System.Nullable<System.Boolean> Subscribe_checkbox_enabled { get; set; }
		
		/// <summary>
		/// Label used for the subscribe checkbox for this email question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscribe_checkbox_label")]
		public string Subscribe_checkbox_label { get; set; }
		
		/// <summary>
		/// The unique ID of the survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="survey_id")]
		public string Survey_id { get; set; }
		
		/// <summary>
		/// The total number of responses to this question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_responses")]
		public System.Nullable<System.Int32> Total_responses { get; set; }
		
		/// <summary>
		/// The response type of the survey question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetReportingSurveysIdQuestionsReturnQuestionsType Type { get; set; }
	}
	
	public class GetReportingSurveysIdQuestionsIdReturnContact_counts
	{
		
		/// <summary>
		/// The number of known contacts that responded to this survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="known")]
		public System.Nullable<System.Int32> Known { get; set; }
		
		/// <summary>
		/// The number of new contacts that responded to this survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="new")]
		public System.Nullable<System.Int32> New { get; set; }
		
		/// <summary>
		/// The number of unknown contacts that responded to this survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unknown")]
		public System.Nullable<System.Int32> Unknown { get; set; }
	}
	
	public class GetReportingSurveysIdQuestionsIdReturnMerge_field
	{
		
		/// <summary>
		/// An unchanging id for the merge field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The [label](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for the merge field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label")]
		public string Label { get; set; }
		
		/// <summary>
		/// The [type](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for the merge field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetListsIdMergeFieldsReturnMerge_fieldsType Type { get; set; }
	}
	
	public class GetReportingSurveysIdQuestionsIdReturnOptions
	{
		
		/// <summary>
		/// The count of responses that selected this survey question option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// The ID for this survey question option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The label for this survey question option.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label")]
		public string Label { get; set; }
	}
	
	public enum GetReportingSurveysIdQuestionsIdAnswersRespondent_familiarity_is
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="new")]
		_new = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		known = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unknown = 2,
	}
	
	public class GetReportingSurveysIdQuestionsIdAnswersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportingSurveysIdQuestionsIdAnswersReturn_links[] GetReportingSurveysIdQuestionsIdAnswersReturn_links { get; set; }
		
		/// <summary>
		/// An array of answers for a question on the survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="answers")]
		public GetReportingSurveysIdQuestionsIdAnswersReturnAnswers[] GetReportingSurveysIdQuestionsIdAnswersReturnAnswers { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetReportingSurveysIdQuestionsIdAnswersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportingSurveysIdQuestionsIdAnswersReturnAnswers
	{
		
		/// <summary>
		/// Information about the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact")]
		public GetReportingSurveysIdQuestionsIdAnswersReturnAnswersContact Contact { get; set; }
		
		/// <summary>
		/// The ID of the answer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// If this contact was added to the Mailchimp audience via this survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_new_contact")]
		public System.Nullable<System.Boolean> Is_new_contact { get; set; }
		
		/// <summary>
		/// The ID of the survey response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response_id")]
		public string Response_id { get; set; }
		
		/// <summary>
		/// The date and time when the survey response was submitted in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="submitted_at")]
		public System.Nullable<System.DateTimeOffset> Submitted_at { get; set; }
		
		/// <summary>
		/// The raw text answer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class GetReportingSurveysIdQuestionsIdAnswersReturnAnswersContact
	{
		
		/// <summary>
		/// URL for the contact's avatar or profile image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avatar_url")]
		public string Avatar_url { get; set; }
		
		/// <summary>
		/// Indicates whether a contact consents to 1:1 messaging.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consents_to_one_to_one_messaging")]
		public System.Nullable<System.Boolean> Consents_to_one_to_one_messaging { get; set; }
		
		/// <summary>
		/// The ID of this contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// The contact's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The contact's full name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_name")]
		public string Full_name { get; set; }
		
		/// <summary>
		/// The contact's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<GetReportingSurveysIdQuestionsIdAnswersReturnAnswersContactStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetReportingSurveysIdQuestionsIdAnswersReturnAnswersContactStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Subscribed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unsubscribed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Non-Subscribed")]
		NonMinusSubscribed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cleaned = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Archived = 4,
	}
	
	public enum GetReportingSurveysIdResponsesRespondent_familiarity_is
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="new")]
		_new = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		known = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unknown = 2,
	}
	
	public class GetReportingSurveysIdResponsesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportingSurveysIdResponsesReturn_links[] GetReportingSurveysIdResponsesReturn_links { get; set; }
		
		/// <summary>
		/// An array of responses to a survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="responses")]
		public GetReportingSurveysIdResponsesReturnResponses[] GetReportingSurveysIdResponsesReturnResponses { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetReportingSurveysIdResponsesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportingSurveysIdResponsesReturnResponses
	{
		
		/// <summary>
		/// Information about the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact")]
		public GetReportingSurveysIdResponsesReturnResponsesContact Contact { get; set; }
		
		/// <summary>
		/// If this contact was added to the Mailchimp audience via this survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_new_contact")]
		public System.Nullable<System.Boolean> Is_new_contact { get; set; }
		
		/// <summary>
		/// The ID for the survey response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response_id")]
		public string Response_id { get; set; }
		
		/// <summary>
		/// The date and time when the survey response was submitted in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="submitted_at")]
		public System.Nullable<System.DateTimeOffset> Submitted_at { get; set; }
	}
	
	public class GetReportingSurveysIdResponsesReturnResponsesContact
	{
		
		/// <summary>
		/// URL for the contact's avatar or profile image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avatar_url")]
		public string Avatar_url { get; set; }
		
		/// <summary>
		/// Indicates whether a contact consents to 1:1 messaging.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consents_to_one_to_one_messaging")]
		public System.Nullable<System.Boolean> Consents_to_one_to_one_messaging { get; set; }
		
		/// <summary>
		/// The ID of this contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// The contact's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The contact's full name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_name")]
		public string Full_name { get; set; }
		
		/// <summary>
		/// The contact's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<GetReportingSurveysIdResponsesReturnResponsesContactStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetReportingSurveysIdResponsesReturnResponsesContactStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Subscribed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unsubscribed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Non-Subscribed")]
		NonMinusSubscribed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cleaned = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Archived = 4,
	}
	
	public class GetReportingSurveysIdResponsesIdReturn
	{
		
		/// <summary>
		/// Information about the contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact")]
		public GetReportingSurveysIdResponsesIdReturnContact Contact { get; set; }
		
		/// <summary>
		/// If this contact was added to the Mailchimp audience via this survey.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_new_contact")]
		public System.Nullable<System.Boolean> Is_new_contact { get; set; }
		
		/// <summary>
		/// The ID for the survey response.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response_id")]
		public string Response_id { get; set; }
		
		/// <summary>
		/// The survey questions and the answers to those questions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="results")]
		public GetReportingSurveysIdResponsesIdReturnResults[] GetReportingSurveysIdResponsesIdReturnResults { get; set; }
		
		/// <summary>
		/// The date and time when the survey response was submitted in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="submitted_at")]
		public System.Nullable<System.DateTimeOffset> Submitted_at { get; set; }
	}
	
	public class GetReportingSurveysIdResponsesIdReturnContact
	{
		
		/// <summary>
		/// URL for the contact's avatar or profile image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avatar_url")]
		public string Avatar_url { get; set; }
		
		/// <summary>
		/// Indicates whether a contact consents to 1:1 messaging.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consents_to_one_to_one_messaging")]
		public System.Nullable<System.Boolean> Consents_to_one_to_one_messaging { get; set; }
		
		/// <summary>
		/// The ID of this contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// The contact's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The contact's full name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_name")]
		public string Full_name { get; set; }
		
		/// <summary>
		/// The contact's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<GetReportingSurveysIdResponsesIdReturnContactStatus> Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetReportingSurveysIdResponsesIdReturnContactStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Subscribed = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unsubscribed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Non-Subscribed")]
		NonMinusSubscribed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cleaned = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Archived = 4,
	}
	
	public class GetReportingSurveysIdResponsesIdReturnResults
	{
		
		/// <summary>
		/// The answer to this survey question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="answer")]
		public string Answer { get; set; }
		
		/// <summary>
		/// The survey question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="query")]
		public string Query { get; set; }
		
		/// <summary>
		/// The unique ID for this question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="question_id")]
		public string Question_id { get; set; }
		
		/// <summary>
		/// The type of question this is.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="question_type")]
		public GetReportingSurveysIdQuestionsReturnQuestionsType Question_type { get; set; }
	}
	
	public class GetReportsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsReturn_links[] GetReportsReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a report resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reports")]
		public GetReportsReturnReports[] GetReportsReturnReports { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetReportsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsReturnReports
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsReturnReports_links[] GetReportsReturnReports_links { get; set; }
		
		/// <summary>
		/// General stats about different groups of an A/B Split campaign. Does not return information about Multivariate Campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ab_split")]
		public GetReportsReturnReportsAb_split Ab_split { get; set; }
		
		/// <summary>
		/// The number of abuse reports generated for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abuse_reports")]
		public System.Nullable<System.Int32> Abuse_reports { get; set; }
		
		/// <summary>
		/// An object describing the bounce summary for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bounces")]
		public GetReportsReturnReportsBounces Bounces { get; set; }
		
		/// <summary>
		/// The title of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_title")]
		public string Campaign_title { get; set; }
		
		/// <summary>
		/// An object describing the click activity for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public GetReportsReturnReportsClicks Clicks { get; set; }
		
		/// <summary>
		/// Updates on campaigns in the process of sending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delivery_status")]
		public GetReportsReturnReportsDelivery_status Delivery_status { get; set; }
		
		/// <summary>
		/// E-Commerce stats for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecommerce")]
		public GetReportsReturnReportsEcommerce Ecommerce { get; set; }
		
		/// <summary>
		/// The total number of emails sent for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// An object describing campaign engagement on Facebook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="facebook_likes")]
		public GetReportsReturnReportsFacebook_likes Facebook_likes { get; set; }
		
		/// <summary>
		/// An object describing the forwards and forward activity for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards")]
		public GetReportsReturnReportsForwards Forwards { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The average campaign statistics for your industry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="industry_stats")]
		public GetReportsReturnReportsIndustry_stats Industry_stats { get; set; }
		
		/// <summary>
		/// The unique list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// The average campaign statistics for your list. This won't be present if we haven't calculated it yet for this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_stats")]
		public GetReportsReturnReportsList_stats List_stats { get; set; }
		
		/// <summary>
		/// An object describing the open activity for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public GetReportsReturnReportsOpens Opens { get; set; }
		
		/// <summary>
		/// The preview text for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preview_text")]
		public string Preview_text { get; set; }
		
		/// <summary>
		/// For RSS campaigns, the date and time of the last send in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rss_last_send")]
		public System.Nullable<System.DateTimeOffset> Rss_last_send { get; set; }
		
		/// <summary>
		/// The date and time a campaign was sent in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.DateTimeOffset> Send_time { get; set; }
		
		/// <summary>
		/// The url and password for the [VIP report](https://mailchimp.com/help/share-a-campaign-report/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="share_report")]
		public GetReportsReturnReportsShare_report Share_report { get; set; }
		
		/// <summary>
		/// The subject line for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public string Subject_line { get; set; }
		
		/// <summary>
		/// An hourly breakdown of the performance of the campaign over the first 24 hours.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeseries")]
		public GetReportsReturnReportsTimeseries[] GetReportsReturnReportsTimeseries { get; set; }
		
		/// <summary>
		/// An hourly breakdown of sends, opens, and clicks if a campaign is sent using timewarp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timewarp")]
		public GetReportsReturnReportsTimewarp[] GetReportsReturnReportsTimewarp { get; set; }
		
		/// <summary>
		/// The type of campaign (regular, plain-text, ab_split, rss, automation, variate, or auto).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The total number of unsubscribed members for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribed")]
		public System.Nullable<System.Int32> Unsubscribed { get; set; }
	}
	
	public class GetReportsReturnReports_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsReturnReportsAb_split
	{
		
		/// <summary>
		/// Stats for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="a")]
		public GetReportsReturnReportsAb_splitA A { get; set; }
		
		/// <summary>
		/// Stats for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="b")]
		public GetReportsReturnReportsAb_splitB B { get; set; }
	}
	
	public class GetReportsReturnReportsAb_splitA
	{
		
		/// <summary>
		/// Abuse reports for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abuse_reports")]
		public System.Nullable<System.Int32> Abuse_reports { get; set; }
		
		/// <summary>
		/// Bounces for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bounces")]
		public System.Nullable<System.Int32> Bounces { get; set; }
		
		/// <summary>
		/// Forwards for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards")]
		public System.Nullable<System.Int32> Forwards { get; set; }
		
		/// <summary>
		/// Opens from forwards for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards_opens")]
		public System.Nullable<System.Int32> Forwards_opens { get; set; }
		
		/// <summary>
		/// The last open for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_open")]
		public string Last_open { get; set; }
		
		/// <summary>
		/// Opens for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// Recipient Clicks for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_clicks")]
		public System.Nullable<System.Int32> Recipient_clicks { get; set; }
		
		/// <summary>
		/// Unique opens for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
		
		/// <summary>
		/// Unsubscribes for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubs")]
		public System.Nullable<System.Int32> Unsubs { get; set; }
	}
	
	public class GetReportsReturnReportsAb_splitB
	{
		
		/// <summary>
		/// Abuse reports for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abuse_reports")]
		public System.Nullable<System.Int32> Abuse_reports { get; set; }
		
		/// <summary>
		/// Bounces for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bounces")]
		public System.Nullable<System.Int32> Bounces { get; set; }
		
		/// <summary>
		/// Forwards for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards")]
		public System.Nullable<System.Int32> Forwards { get; set; }
		
		/// <summary>
		/// Opens for forwards from Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards_opens")]
		public System.Nullable<System.Int32> Forwards_opens { get; set; }
		
		/// <summary>
		/// The last open for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_open")]
		public string Last_open { get; set; }
		
		/// <summary>
		/// Opens for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// Recipients clicks for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_clicks")]
		public System.Nullable<System.Int32> Recipient_clicks { get; set; }
		
		/// <summary>
		/// Unique opens for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
		
		/// <summary>
		/// Unsubscribes for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubs")]
		public System.Nullable<System.Int32> Unsubs { get; set; }
	}
	
	public class GetReportsReturnReportsBounces
	{
		
		/// <summary>
		/// The total number of hard bounced email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hard_bounces")]
		public System.Nullable<System.Int32> Hard_bounces { get; set; }
		
		/// <summary>
		/// The total number of soft bounced email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="soft_bounces")]
		public System.Nullable<System.Int32> Soft_bounces { get; set; }
		
		/// <summary>
		/// The total number of addresses that were syntax-related bounces.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="syntax_errors")]
		public System.Nullable<System.Int32> Syntax_errors { get; set; }
	}
	
	public class GetReportsReturnReportsClicks
	{
		
		/// <summary>
		/// The number of unique clicks divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The total number of clicks for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks_total")]
		public System.Nullable<System.Int32> Clicks_total { get; set; }
		
		/// <summary>
		/// The date and time of the last recorded click for the campaign in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_click")]
		public System.Nullable<System.DateTimeOffset> Last_click { get; set; }
		
		/// <summary>
		/// The total number of unique clicks for links across a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_clicks")]
		public System.Nullable<System.Int32> Unique_clicks { get; set; }
		
		/// <summary>
		/// The total number of subscribers who clicked on a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_subscriber_clicks")]
		public System.Nullable<System.Int32> Unique_subscriber_clicks { get; set; }
	}
	
	public class GetReportsReturnReportsDelivery_status
	{
		
		/// <summary>
		/// Whether a campaign send can be canceled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="can_cancel")]
		public System.Nullable<System.Boolean> Can_cancel { get; set; }
		
		/// <summary>
		/// The total number of emails canceled for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_canceled")]
		public System.Nullable<System.Int32> Emails_canceled { get; set; }
		
		/// <summary>
		/// The total number of emails confirmed sent for this campaign so far.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// Whether Campaign Delivery Status is enabled for this account and campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The current state of a campaign delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetCampaignsReturnCampaignsDelivery_statusStatus Status { get; set; }
	}
	
	public class GetReportsReturnReportsEcommerce
	{
		
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The total orders for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_orders")]
		public System.Nullable<System.Int32> Total_orders { get; set; }
		
		/// <summary>
		/// The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
		
		/// <summary>
		/// The total spent for a campaign. Calculated as the sum of all order totals with no deductions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
	}
	
	public class GetReportsReturnReportsFacebook_likes
	{
		
		/// <summary>
		/// The number of Facebook likes for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="facebook_likes")]
		public System.Nullable<System.Int32> Facebook_likes { get; set; }
		
		/// <summary>
		/// The number of recipients who liked the campaign on Facebook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_likes")]
		public System.Nullable<System.Int32> Recipient_likes { get; set; }
		
		/// <summary>
		/// The number of unique likes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_likes")]
		public System.Nullable<System.Int32> Unique_likes { get; set; }
	}
	
	public class GetReportsReturnReportsForwards
	{
		
		/// <summary>
		/// How many times the campaign has been forwarded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards_count")]
		public System.Nullable<System.Int32> Forwards_count { get; set; }
		
		/// <summary>
		/// How many times the forwarded campaign has been opened.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards_opens")]
		public System.Nullable<System.Int32> Forwards_opens { get; set; }
	}
	
	public class GetReportsReturnReportsIndustry_stats
	{
		
		/// <summary>
		/// The industry abuse rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abuse_rate")]
		public System.Nullable<System.Double> Abuse_rate { get; set; }
		
		/// <summary>
		/// The industry bounce rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bounce_rate")]
		public System.Nullable<System.Double> Bounce_rate { get; set; }
		
		/// <summary>
		/// The industry click rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The industry open rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The type of business industry associated with your account. For example: retail, education, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The industry unopened rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unopen_rate")]
		public System.Nullable<System.Double> Unopen_rate { get; set; }
		
		/// <summary>
		/// The industry unsubscribe rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsub_rate")]
		public System.Nullable<System.Double> Unsub_rate { get; set; }
	}
	
	public class GetReportsReturnReportsList_stats
	{
		
		/// <summary>
		/// The average click rate (a percentage represented as a number between 0 and 100) per campaign for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The average open rate (a percentage represented as a number between 0 and 100) per campaign for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The average number of subscriptions per month for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sub_rate")]
		public System.Nullable<System.Double> Sub_rate { get; set; }
		
		/// <summary>
		/// The average number of unsubscriptions per month for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsub_rate")]
		public System.Nullable<System.Double> Unsub_rate { get; set; }
	}
	
	public class GetReportsReturnReportsOpens
	{
		
		/// <summary>
		/// The date and time of the last recorded open in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_open")]
		public System.Nullable<System.DateTimeOffset> Last_open { get; set; }
		
		/// <summary>
		/// The number of unique opens divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The total number of opens for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens_total")]
		public System.Nullable<System.Int32> Opens_total { get; set; }
		
		/// <summary>
		/// The total number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class GetReportsReturnReportsShare_report
	{
		
		/// <summary>
		/// If password protected, the password for the VIP report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="share_password")]
		public string Share_password { get; set; }
		
		/// <summary>
		/// The URL for the VIP report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="share_url")]
		public string Share_url { get; set; }
	}
	
	public class GetReportsReturnReportsTimeseries
	{
		
		/// <summary>
		/// The number of emails sent in the timeseries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// The number of clicks in the timeseries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients_clicks")]
		public System.Nullable<System.Int32> Recipients_clicks { get; set; }
		
		/// <summary>
		/// The date and time for the series in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.DateTimeOffset> Timestamp { get; set; }
		
		/// <summary>
		/// The number of unique opens in the timeseries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class GetReportsReturnReportsTimewarp
	{
		
		/// <summary>
		/// The number of bounces.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bounces")]
		public System.Nullable<System.Int32> Bounces { get; set; }
		
		/// <summary>
		/// The number of clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// For campaigns sent with timewarp, the time zone group the member is apart of.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gmt_offset")]
		public System.Nullable<System.Int32> Gmt_offset { get; set; }
		
		/// <summary>
		/// The date and time of the last click in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_click")]
		public System.Nullable<System.DateTimeOffset> Last_click { get; set; }
		
		/// <summary>
		/// The date and time of the last open in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_open")]
		public System.Nullable<System.DateTimeOffset> Last_open { get; set; }
		
		/// <summary>
		/// The number of opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// The number of unique clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_clicks")]
		public System.Nullable<System.Int32> Unique_clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class GetReportsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdReturn_links[] GetReportsIdReturn_links { get; set; }
		
		/// <summary>
		/// General stats about different groups of an A/B Split campaign. Does not return information about Multivariate Campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ab_split")]
		public GetReportsIdReturnAb_split Ab_split { get; set; }
		
		/// <summary>
		/// The number of abuse reports generated for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abuse_reports")]
		public System.Nullable<System.Int32> Abuse_reports { get; set; }
		
		/// <summary>
		/// An object describing the bounce summary for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bounces")]
		public GetReportsIdReturnBounces Bounces { get; set; }
		
		/// <summary>
		/// The title of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_title")]
		public string Campaign_title { get; set; }
		
		/// <summary>
		/// An object describing the click activity for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public GetReportsIdReturnClicks Clicks { get; set; }
		
		/// <summary>
		/// Updates on campaigns in the process of sending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delivery_status")]
		public GetReportsIdReturnDelivery_status Delivery_status { get; set; }
		
		/// <summary>
		/// E-Commerce stats for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecommerce")]
		public GetReportsIdReturnEcommerce Ecommerce { get; set; }
		
		/// <summary>
		/// The total number of emails sent for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// An object describing campaign engagement on Facebook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="facebook_likes")]
		public GetReportsIdReturnFacebook_likes Facebook_likes { get; set; }
		
		/// <summary>
		/// An object describing the forwards and forward activity for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards")]
		public GetReportsIdReturnForwards Forwards { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The average campaign statistics for your industry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="industry_stats")]
		public GetReportsIdReturnIndustry_stats Industry_stats { get; set; }
		
		/// <summary>
		/// The unique list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// The average campaign statistics for your list. This won't be present if we haven't calculated it yet for this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_stats")]
		public GetReportsIdReturnList_stats List_stats { get; set; }
		
		/// <summary>
		/// An object describing the open activity for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public GetReportsIdReturnOpens Opens { get; set; }
		
		/// <summary>
		/// The preview text for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preview_text")]
		public string Preview_text { get; set; }
		
		/// <summary>
		/// For RSS campaigns, the date and time of the last send in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rss_last_send")]
		public System.Nullable<System.DateTimeOffset> Rss_last_send { get; set; }
		
		/// <summary>
		/// The date and time a campaign was sent in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.DateTimeOffset> Send_time { get; set; }
		
		/// <summary>
		/// The url and password for the [VIP report](https://mailchimp.com/help/share-a-campaign-report/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="share_report")]
		public GetReportsIdReturnShare_report Share_report { get; set; }
		
		/// <summary>
		/// The subject line for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public string Subject_line { get; set; }
		
		/// <summary>
		/// An hourly breakdown of the performance of the campaign over the first 24 hours.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeseries")]
		public GetReportsIdReturnTimeseries[] GetReportsIdReturnTimeseries { get; set; }
		
		/// <summary>
		/// An hourly breakdown of sends, opens, and clicks if a campaign is sent using timewarp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timewarp")]
		public GetReportsIdReturnTimewarp[] GetReportsIdReturnTimewarp { get; set; }
		
		/// <summary>
		/// The type of campaign (regular, plain-text, ab_split, rss, automation, variate, or auto).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The total number of unsubscribed members for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribed")]
		public System.Nullable<System.Int32> Unsubscribed { get; set; }
	}
	
	public class GetReportsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdReturnAb_split
	{
		
		/// <summary>
		/// Stats for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="a")]
		public GetReportsIdReturnAb_splitA A { get; set; }
		
		/// <summary>
		/// Stats for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="b")]
		public GetReportsIdReturnAb_splitB B { get; set; }
	}
	
	public class GetReportsIdReturnAb_splitA
	{
		
		/// <summary>
		/// Abuse reports for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abuse_reports")]
		public System.Nullable<System.Int32> Abuse_reports { get; set; }
		
		/// <summary>
		/// Bounces for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bounces")]
		public System.Nullable<System.Int32> Bounces { get; set; }
		
		/// <summary>
		/// Forwards for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards")]
		public System.Nullable<System.Int32> Forwards { get; set; }
		
		/// <summary>
		/// Opens from forwards for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards_opens")]
		public System.Nullable<System.Int32> Forwards_opens { get; set; }
		
		/// <summary>
		/// The last open for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_open")]
		public string Last_open { get; set; }
		
		/// <summary>
		/// Opens for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// Recipient Clicks for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_clicks")]
		public System.Nullable<System.Int32> Recipient_clicks { get; set; }
		
		/// <summary>
		/// Unique opens for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
		
		/// <summary>
		/// Unsubscribes for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubs")]
		public System.Nullable<System.Int32> Unsubs { get; set; }
	}
	
	public class GetReportsIdReturnAb_splitB
	{
		
		/// <summary>
		/// Abuse reports for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abuse_reports")]
		public System.Nullable<System.Int32> Abuse_reports { get; set; }
		
		/// <summary>
		/// Bounces for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bounces")]
		public System.Nullable<System.Int32> Bounces { get; set; }
		
		/// <summary>
		/// Forwards for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards")]
		public System.Nullable<System.Int32> Forwards { get; set; }
		
		/// <summary>
		/// Opens for forwards from Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards_opens")]
		public System.Nullable<System.Int32> Forwards_opens { get; set; }
		
		/// <summary>
		/// The last open for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_open")]
		public string Last_open { get; set; }
		
		/// <summary>
		/// Opens for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// Recipients clicks for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_clicks")]
		public System.Nullable<System.Int32> Recipient_clicks { get; set; }
		
		/// <summary>
		/// Unique opens for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
		
		/// <summary>
		/// Unsubscribes for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubs")]
		public System.Nullable<System.Int32> Unsubs { get; set; }
	}
	
	public class GetReportsIdReturnBounces
	{
		
		/// <summary>
		/// The total number of hard bounced email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hard_bounces")]
		public System.Nullable<System.Int32> Hard_bounces { get; set; }
		
		/// <summary>
		/// The total number of soft bounced email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="soft_bounces")]
		public System.Nullable<System.Int32> Soft_bounces { get; set; }
		
		/// <summary>
		/// The total number of addresses that were syntax-related bounces.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="syntax_errors")]
		public System.Nullable<System.Int32> Syntax_errors { get; set; }
	}
	
	public class GetReportsIdReturnClicks
	{
		
		/// <summary>
		/// The number of unique clicks divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The total number of clicks for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks_total")]
		public System.Nullable<System.Int32> Clicks_total { get; set; }
		
		/// <summary>
		/// The date and time of the last recorded click for the campaign in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_click")]
		public System.Nullable<System.DateTimeOffset> Last_click { get; set; }
		
		/// <summary>
		/// The total number of unique clicks for links across a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_clicks")]
		public System.Nullable<System.Int32> Unique_clicks { get; set; }
		
		/// <summary>
		/// The total number of subscribers who clicked on a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_subscriber_clicks")]
		public System.Nullable<System.Int32> Unique_subscriber_clicks { get; set; }
	}
	
	public class GetReportsIdReturnDelivery_status
	{
		
		/// <summary>
		/// Whether a campaign send can be canceled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="can_cancel")]
		public System.Nullable<System.Boolean> Can_cancel { get; set; }
		
		/// <summary>
		/// The total number of emails canceled for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_canceled")]
		public System.Nullable<System.Int32> Emails_canceled { get; set; }
		
		/// <summary>
		/// The total number of emails confirmed sent for this campaign so far.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// Whether Campaign Delivery Status is enabled for this account and campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The current state of a campaign delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetCampaignsReturnCampaignsDelivery_statusStatus Status { get; set; }
	}
	
	public class GetReportsIdReturnEcommerce
	{
		
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The total orders for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_orders")]
		public System.Nullable<System.Int32> Total_orders { get; set; }
		
		/// <summary>
		/// The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
		
		/// <summary>
		/// The total spent for a campaign. Calculated as the sum of all order totals with no deductions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
	}
	
	public class GetReportsIdReturnFacebook_likes
	{
		
		/// <summary>
		/// The number of Facebook likes for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="facebook_likes")]
		public System.Nullable<System.Int32> Facebook_likes { get; set; }
		
		/// <summary>
		/// The number of recipients who liked the campaign on Facebook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_likes")]
		public System.Nullable<System.Int32> Recipient_likes { get; set; }
		
		/// <summary>
		/// The number of unique likes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_likes")]
		public System.Nullable<System.Int32> Unique_likes { get; set; }
	}
	
	public class GetReportsIdReturnForwards
	{
		
		/// <summary>
		/// How many times the campaign has been forwarded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards_count")]
		public System.Nullable<System.Int32> Forwards_count { get; set; }
		
		/// <summary>
		/// How many times the forwarded campaign has been opened.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards_opens")]
		public System.Nullable<System.Int32> Forwards_opens { get; set; }
	}
	
	public class GetReportsIdReturnIndustry_stats
	{
		
		/// <summary>
		/// The industry abuse rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abuse_rate")]
		public System.Nullable<System.Double> Abuse_rate { get; set; }
		
		/// <summary>
		/// The industry bounce rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bounce_rate")]
		public System.Nullable<System.Double> Bounce_rate { get; set; }
		
		/// <summary>
		/// The industry click rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The industry open rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The type of business industry associated with your account. For example: retail, education, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The industry unopened rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unopen_rate")]
		public System.Nullable<System.Double> Unopen_rate { get; set; }
		
		/// <summary>
		/// The industry unsubscribe rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsub_rate")]
		public System.Nullable<System.Double> Unsub_rate { get; set; }
	}
	
	public class GetReportsIdReturnList_stats
	{
		
		/// <summary>
		/// The average click rate (a percentage represented as a number between 0 and 100) per campaign for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The average open rate (a percentage represented as a number between 0 and 100) per campaign for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The average number of subscriptions per month for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sub_rate")]
		public System.Nullable<System.Double> Sub_rate { get; set; }
		
		/// <summary>
		/// The average number of unsubscriptions per month for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsub_rate")]
		public System.Nullable<System.Double> Unsub_rate { get; set; }
	}
	
	public class GetReportsIdReturnOpens
	{
		
		/// <summary>
		/// The date and time of the last recorded open in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_open")]
		public System.Nullable<System.DateTimeOffset> Last_open { get; set; }
		
		/// <summary>
		/// The number of unique opens divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The total number of opens for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens_total")]
		public System.Nullable<System.Int32> Opens_total { get; set; }
		
		/// <summary>
		/// The total number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class GetReportsIdReturnShare_report
	{
		
		/// <summary>
		/// If password protected, the password for the VIP report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="share_password")]
		public string Share_password { get; set; }
		
		/// <summary>
		/// The URL for the VIP report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="share_url")]
		public string Share_url { get; set; }
	}
	
	public class GetReportsIdReturnTimeseries
	{
		
		/// <summary>
		/// The number of emails sent in the timeseries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// The number of clicks in the timeseries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients_clicks")]
		public System.Nullable<System.Int32> Recipients_clicks { get; set; }
		
		/// <summary>
		/// The date and time for the series in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.DateTimeOffset> Timestamp { get; set; }
		
		/// <summary>
		/// The number of unique opens in the timeseries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class GetReportsIdReturnTimewarp
	{
		
		/// <summary>
		/// The number of bounces.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bounces")]
		public System.Nullable<System.Int32> Bounces { get; set; }
		
		/// <summary>
		/// The number of clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// For campaigns sent with timewarp, the time zone group the member is apart of.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gmt_offset")]
		public System.Nullable<System.Int32> Gmt_offset { get; set; }
		
		/// <summary>
		/// The date and time of the last click in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_click")]
		public System.Nullable<System.DateTimeOffset> Last_click { get; set; }
		
		/// <summary>
		/// The date and time of the last open in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_open")]
		public System.Nullable<System.DateTimeOffset> Last_open { get; set; }
		
		/// <summary>
		/// The number of opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// The number of unique clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_clicks")]
		public System.Nullable<System.Int32> Unique_clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class GetReportsIdAbuseReportsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdAbuseReportsIdReturn_links[] GetReportsIdAbuseReportsIdReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing an abuse report resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abuse_reports")]
		public GetReportsIdAbuseReportsIdReturnAbuse_reports[] GetReportsIdAbuseReportsIdReturnAbuse_reports { get; set; }
		
		/// <summary>
		/// The campaign id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetReportsIdAbuseReportsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdAbuseReportsIdReturnAbuse_reports
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdAbuseReportsIdReturnAbuse_reports_links[] GetReportsIdAbuseReportsIdReturnAbuse_reports_links { get; set; }
		
		/// <summary>
		/// The campaign id for the abuse report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// Date for the abuse report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date")]
		public System.Nullable<System.DateTimeOffset> Date { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The id for the abuse report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The unique id of the list for the abuse report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class GetReportsIdAbuseReportsIdReturnAbuse_reports_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdAbuseReportsIdIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdAbuseReportsIdIdReturn_links[] GetReportsIdAbuseReportsIdIdReturn_links { get; set; }
		
		/// <summary>
		/// The campaign id for the abuse report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// Date for the abuse report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date")]
		public System.Nullable<System.DateTimeOffset> Date { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The id for the abuse report
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The unique id of the list for the abuse report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class GetReportsIdAbuseReportsIdIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdAdviceReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdAdviceReturn_links[] GetReportsIdAdviceReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a point of campaign feedback.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="advice")]
		public GetReportsIdAdviceReturnAdvice[] GetReportsIdAdviceReturnAdvice { get; set; }
		
		/// <summary>
		/// The campaign id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetReportsIdAdviceReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdAdviceReturnAdvice
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdAdviceReturnAdvice_links[] GetReportsIdAdviceReturnAdvice_links { get; set; }
		
		/// <summary>
		/// The advice message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// The sentiment type for a feedback message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GetReportsIdAdviceReturnAdviceType> Type { get; set; }
	}
	
	public class GetReportsIdAdviceReturnAdvice_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetReportsIdAdviceReturnAdviceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		negative = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		positive = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		neutral = 2,
	}
	
	public enum GetReportsIdClickDetailsSort_field
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		total_clicks = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		unique_clicks = 1,
	}
	
	public class GetReportsIdClickDetailsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdClickDetailsReturn_links[] GetReportsIdClickDetailsReturn_links { get; set; }
		
		/// <summary>
		/// The campaign id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a specific URL contained in the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="urls_clicked")]
		public GetReportsIdClickDetailsReturnUrls_clicked[] GetReportsIdClickDetailsReturnUrls_clicked { get; set; }
	}
	
	public class GetReportsIdClickDetailsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdClickDetailsReturnUrls_clicked
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdClickDetailsReturnUrls_clicked_links[] GetReportsIdClickDetailsReturnUrls_clicked_links { get; set; }
		
		/// <summary>
		/// A breakdown of clicks by different groups of an A/B Split campaign. Does not return information about Multivariate Campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ab_split")]
		public GetReportsIdClickDetailsReturnUrls_clickedAb_split Ab_split { get; set; }
		
		/// <summary>
		/// The campaign id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The percentage of total clicks a link generated for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_percentage")]
		public System.Nullable<System.Double> Click_percentage { get; set; }
		
		/// <summary>
		/// The unique id for the link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The date and time for the last recorded click for a link in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_click")]
		public System.Nullable<System.DateTimeOffset> Last_click { get; set; }
		
		/// <summary>
		/// The number of total clicks for a link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_clicks")]
		public System.Nullable<System.Int32> Total_clicks { get; set; }
		
		/// <summary>
		/// The percentage of unique clicks a link generated for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_click_percentage")]
		public System.Nullable<System.Double> Unique_click_percentage { get; set; }
		
		/// <summary>
		/// Number of unique clicks for a link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_clicks")]
		public System.Nullable<System.Int32> Unique_clicks { get; set; }
		
		/// <summary>
		/// The URL for the link in the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class GetReportsIdClickDetailsReturnUrls_clicked_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdClickDetailsReturnUrls_clickedAb_split
	{
		
		/// <summary>
		/// Stats for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="a")]
		public GetReportsIdClickDetailsReturnUrls_clickedAb_splitA A { get; set; }
		
		/// <summary>
		/// Stats for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="b")]
		public GetReportsIdClickDetailsReturnUrls_clickedAb_splitB B { get; set; }
	}
	
	public class GetReportsIdClickDetailsReturnUrls_clickedAb_splitA
	{
		
		/// <summary>
		/// The percentage of total clicks for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_percentage_a")]
		public System.Nullable<System.Double> Click_percentage_a { get; set; }
		
		/// <summary>
		/// The total number of clicks for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_clicks_a")]
		public System.Nullable<System.Int32> Total_clicks_a { get; set; }
		
		/// <summary>
		/// The percentage of unique clicks for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_click_percentage_a")]
		public System.Nullable<System.Double> Unique_click_percentage_a { get; set; }
		
		/// <summary>
		/// The number of unique clicks for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_clicks_a")]
		public System.Nullable<System.Int32> Unique_clicks_a { get; set; }
	}
	
	public class GetReportsIdClickDetailsReturnUrls_clickedAb_splitB
	{
		
		/// <summary>
		/// The percentage of total clicks for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_percentage_b")]
		public System.Nullable<System.Double> Click_percentage_b { get; set; }
		
		/// <summary>
		/// The total number of clicks for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_clicks_b")]
		public System.Nullable<System.Int32> Total_clicks_b { get; set; }
		
		/// <summary>
		/// The percentage of unique clicks for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_click_percentage_b")]
		public System.Nullable<System.Double> Unique_click_percentage_b { get; set; }
		
		/// <summary>
		/// The number of unique clicks for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_clicks_b")]
		public System.Nullable<System.Int32> Unique_clicks_b { get; set; }
	}
	
	public class GetReportsIdClickDetailsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdClickDetailsIdReturn_links[] GetReportsIdClickDetailsIdReturn_links { get; set; }
		
		/// <summary>
		/// A breakdown of clicks by different groups of an A/B Split campaign. Does not return information about Multivariate Campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ab_split")]
		public GetReportsIdClickDetailsIdReturnAb_split Ab_split { get; set; }
		
		/// <summary>
		/// The campaign id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The percentage of total clicks a link generated for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_percentage")]
		public System.Nullable<System.Double> Click_percentage { get; set; }
		
		/// <summary>
		/// The unique id for the link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The date and time for the last recorded click for a link in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_click")]
		public System.Nullable<System.DateTimeOffset> Last_click { get; set; }
		
		/// <summary>
		/// The number of total clicks for a link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_clicks")]
		public System.Nullable<System.Int32> Total_clicks { get; set; }
		
		/// <summary>
		/// The percentage of unique clicks a link generated for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_click_percentage")]
		public System.Nullable<System.Double> Unique_click_percentage { get; set; }
		
		/// <summary>
		/// Number of unique clicks for a link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_clicks")]
		public System.Nullable<System.Int32> Unique_clicks { get; set; }
		
		/// <summary>
		/// The URL for the link in the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class GetReportsIdClickDetailsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdClickDetailsIdReturnAb_split
	{
		
		/// <summary>
		/// Stats for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="a")]
		public GetReportsIdClickDetailsIdReturnAb_splitA A { get; set; }
		
		/// <summary>
		/// Stats for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="b")]
		public GetReportsIdClickDetailsIdReturnAb_splitB B { get; set; }
	}
	
	public class GetReportsIdClickDetailsIdReturnAb_splitA
	{
		
		/// <summary>
		/// The percentage of total clicks for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_percentage_a")]
		public System.Nullable<System.Double> Click_percentage_a { get; set; }
		
		/// <summary>
		/// The total number of clicks for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_clicks_a")]
		public System.Nullable<System.Int32> Total_clicks_a { get; set; }
		
		/// <summary>
		/// The percentage of unique clicks for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_click_percentage_a")]
		public System.Nullable<System.Double> Unique_click_percentage_a { get; set; }
		
		/// <summary>
		/// The number of unique clicks for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_clicks_a")]
		public System.Nullable<System.Int32> Unique_clicks_a { get; set; }
	}
	
	public class GetReportsIdClickDetailsIdReturnAb_splitB
	{
		
		/// <summary>
		/// The percentage of total clicks for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_percentage_b")]
		public System.Nullable<System.Double> Click_percentage_b { get; set; }
		
		/// <summary>
		/// The total number of clicks for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_clicks_b")]
		public System.Nullable<System.Int32> Total_clicks_b { get; set; }
		
		/// <summary>
		/// The percentage of unique clicks for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_click_percentage_b")]
		public System.Nullable<System.Double> Unique_click_percentage_b { get; set; }
		
		/// <summary>
		/// The number of unique clicks for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_clicks_b")]
		public System.Nullable<System.Int32> Unique_clicks_b { get; set; }
	}
	
	public class GetReportsIdClickDetailsIdMembersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdClickDetailsIdMembersReturn_links[] GetReportsIdClickDetailsIdMembersReturn_links { get; set; }
		
		/// <summary>
		/// The campaign id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a member who clicked a specific link within a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public GetReportsIdClickDetailsIdMembersReturnMembers[] GetReportsIdClickDetailsIdMembersReturnMembers { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetReportsIdClickDetailsIdMembersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdClickDetailsIdMembersReturnMembers
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdClickDetailsIdMembersReturnMembers_links[] GetReportsIdClickDetailsIdMembersReturnMembers_links { get; set; }
		
		/// <summary>
		/// The campaign id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The total number of times the subscriber clicked on the link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// The status of the member, namely if they are subscribed, unsubscribed, deleted, non-subscribed, transactional, pending, or need reconfirmation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_status")]
		public string Contact_status { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// The id for the tracked URL in the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url_id")]
		public string Url_id { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class GetReportsIdClickDetailsIdMembersReturnMembers_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdClickDetailsIdMembersIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdClickDetailsIdMembersIdReturn_links[] GetReportsIdClickDetailsIdMembersIdReturn_links { get; set; }
		
		/// <summary>
		/// The campaign id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The total number of times the subscriber clicked on the link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// The status of the member, namely if they are subscribed, unsubscribed, deleted, non-subscribed, transactional, pending, or need reconfirmation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_status")]
		public string Contact_status { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// The id for the tracked URL in the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url_id")]
		public string Url_id { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class GetReportsIdClickDetailsIdMembersIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdDomainPerformanceReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdDomainPerformanceReturn_links[] GetReportsIdDomainPerformanceReturn_links { get; set; }
		
		/// <summary>
		/// The unique id for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The top 5 email domains based on total delivered emails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domains")]
		public GetReportsIdDomainPerformanceReturnDomains[] GetReportsIdDomainPerformanceReturnDomains { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
		
		/// <summary>
		/// The total number of emails sent for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_sent")]
		public System.Nullable<System.Int32> Total_sent { get; set; }
	}
	
	public class GetReportsIdDomainPerformanceReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdDomainPerformanceReturnDomains
	{
		
		/// <summary>
		/// The number of bounces at a domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bounces")]
		public System.Nullable<System.Int32> Bounces { get; set; }
		
		/// <summary>
		/// The percentage of total bounces from this domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bounces_pct")]
		public System.Nullable<System.Double> Bounces_pct { get; set; }
		
		/// <summary>
		/// The number of clicks for a domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// The percentage of total clicks from this domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks_pct")]
		public System.Nullable<System.Double> Clicks_pct { get; set; }
		
		/// <summary>
		/// The number of successful deliveries for a domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delivered")]
		public System.Nullable<System.Int32> Delivered { get; set; }
		
		/// <summary>
		/// The name of the domain (gmail.com, hotmail.com, yahoo.com).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// The percentage of total emails that went to this domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_pct")]
		public System.Nullable<System.Double> Emails_pct { get; set; }
		
		/// <summary>
		/// The number of emails sent to that specific domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// The number of opens for a domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// The percentage of total opens from this domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens_pct")]
		public System.Nullable<System.Double> Opens_pct { get; set; }
		
		/// <summary>
		/// The total number of unsubscribes for a domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubs")]
		public System.Nullable<System.Int32> Unsubs { get; set; }
		
		/// <summary>
		/// The percentage of total unsubscribes from this domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubs_pct")]
		public System.Nullable<System.Double> Unsubs_pct { get; set; }
	}
	
	public class GetReportsIdEcommerceProductActivityReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdEcommerceProductActivityReturn_links[] GetReportsIdEcommerceProductActivityReturn_links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="products")]
		public GetReportsIdEcommerceProductActivityReturnProducts[] GetReportsIdEcommerceProductActivityReturnProducts { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetReportsIdEcommerceProductActivityReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdEcommerceProductActivityReturnProducts
	{
		
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendation_purchased")]
		public System.Nullable<System.Int32> Recommendation_purchased { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendation_total")]
		public System.Nullable<System.Int32> Recommendation_total { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total_purchased")]
		public System.Nullable<System.Double> Total_purchased { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
	}
	
	public class GetReportsIdEepurlReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdEepurlReturn_links[] GetReportsIdEepurlReturn_links { get; set; }
		
		/// <summary>
		/// The unique id for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// A summary of the click-throughs on the campaign's URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public GetReportsIdEepurlReturnClicks Clicks { get; set; }
		
		/// <summary>
		/// The shortened link used for tracking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eepurl")]
		public string Eepurl { get; set; }
		
		/// <summary>
		/// A summary of the top referrers for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="referrers")]
		public GetReportsIdEepurlReturnReferrers[] GetReportsIdEepurlReturnReferrers { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
		
		/// <summary>
		/// A summary of Twitter activity for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="twitter")]
		public GetReportsIdEepurlReturnTwitter Twitter { get; set; }
	}
	
	public class GetReportsIdEepurlReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdEepurlReturnClicks
	{
		
		/// <summary>
		/// The total number of clicks to the campaign's URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// The timestamp for the first click to the URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_click")]
		public System.Nullable<System.DateTimeOffset> First_click { get; set; }
		
		/// <summary>
		/// The timestamp for the last click to the URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_click")]
		public System.Nullable<System.DateTimeOffset> Last_click { get; set; }
		
		/// <summary>
		/// A summary of the top click locations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locations")]
		public GetReportsIdEepurlReturnClicksLocations[] GetReportsIdEepurlReturnClicksLocations { get; set; }
	}
	
	public class GetReportsIdEepurlReturnClicksLocations
	{
		
		/// <summary>
		/// The two-digit country code for a recorded click.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country")]
		public string Country { get; set; }
		
		/// <summary>
		/// If available, a specific region where the click was recorded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
	}
	
	public class GetReportsIdEepurlReturnReferrers
	{
		
		/// <summary>
		/// The number of clicks a single referrer generated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// The timestamp for the first click from this referrer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_click")]
		public System.Nullable<System.DateTimeOffset> First_click { get; set; }
		
		/// <summary>
		/// The timestamp for the last click from this referrer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_click")]
		public System.Nullable<System.DateTimeOffset> Last_click { get; set; }
		
		/// <summary>
		/// A referrer (truncated to 100 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="referrer")]
		public string Referrer { get; set; }
	}
	
	public class GetReportsIdEepurlReturnTwitter
	{
		
		/// <summary>
		/// The day and time of the first recorded tweet with a link to the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="first_tweet")]
		public string First_tweet { get; set; }
		
		/// <summary>
		/// The day and time of the last recorded tweet with a link to the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_tweet")]
		public string Last_tweet { get; set; }
		
		/// <summary>
		/// The number of retweets that include a link to the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retweets")]
		public System.Nullable<System.Int32> Retweets { get; set; }
		
		/// <summary>
		/// A summary of tweets that include a link to the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="statuses")]
		public GetReportsIdEepurlReturnTwitterStatuses[] GetReportsIdEepurlReturnTwitterStatuses { get; set; }
		
		/// <summary>
		/// The number of tweets including a link to the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tweets")]
		public System.Nullable<System.Int32> Tweets { get; set; }
	}
	
	public class GetReportsIdEepurlReturnTwitterStatuses
	{
		
		/// <summary>
		/// A timestamp for the tweet.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="datetime")]
		public System.Nullable<System.DateTimeOffset> Datetime { get; set; }
		
		/// <summary>
		/// A 'true' or 'false' status of whether the tweet is a retweet.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="is_retweet")]
		public System.Nullable<System.Boolean> Is_retweet { get; set; }
		
		/// <summary>
		/// The Twitter handle for the author of the tweet.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="screen_name")]
		public string Screen_name { get; set; }
		
		/// <summary>
		/// The body of the tweet.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// The individual id for the tweet.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status_id")]
		public string Status_id { get; set; }
	}
	
	public class GetReportsIdEmailActivityReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdEmailActivityReturn_links[] GetReportsIdEmailActivityReturn_links { get; set; }
		
		/// <summary>
		/// The unique id for the sent campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// An array of members that were sent the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails")]
		public GetReportsIdEmailActivityReturnEmails[] GetReportsIdEmailActivityReturnEmails { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetReportsIdEmailActivityReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdEmailActivityReturnEmails
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdEmailActivityReturnEmails_links[] GetReportsIdEmailActivityReturnEmails_links { get; set; }
		
		/// <summary>
		/// An array of objects, each showing an interaction with the email. Member activity limited to 1,000 open activities and 1,000 click activities per member per campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activity")]
		public GetReportsIdEmailActivityReturnEmailsActivity[] GetReportsIdEmailActivityReturnEmailsActivity { get; set; }
		
		/// <summary>
		/// The unique id for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The unique id for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
	}
	
	public class GetReportsIdEmailActivityReturnEmails_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdEmailActivityReturnEmailsActivity
	{
		
		/// <summary>
		/// One of the following actions: 'open', 'click', or 'bounce'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action")]
		public string Action { get; set; }
		
		/// <summary>
		/// The IP address recorded for the action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip")]
		public string Ip { get; set; }
		
		/// <summary>
		/// The date and time recorded for the action in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.DateTimeOffset> Timestamp { get; set; }
		
		/// <summary>
		/// If the action is a 'bounce', the type of bounce received: 'hard', 'soft'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// If the action is a 'click', the URL on which the member clicked.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class GetReportsIdEmailActivityIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdEmailActivityIdReturn_links[] GetReportsIdEmailActivityIdReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects, each showing an interaction with the email. Member activity limited to 1,000 open activities and 1,000 click activities per member per campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="activity")]
		public GetReportsIdEmailActivityIdReturnActivity[] GetReportsIdEmailActivityIdReturnActivity { get; set; }
		
		/// <summary>
		/// The unique id for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The unique id for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
	}
	
	public class GetReportsIdEmailActivityIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdEmailActivityIdReturnActivity
	{
		
		/// <summary>
		/// One of the following actions: 'open', 'click', or 'bounce'
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="action")]
		public string Action { get; set; }
		
		/// <summary>
		/// The IP address recorded for the action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip")]
		public string Ip { get; set; }
		
		/// <summary>
		/// The date and time recorded for the action in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.DateTimeOffset> Timestamp { get; set; }
		
		/// <summary>
		/// If the action is a 'bounce', the type of bounce received: 'hard', 'soft'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// If the action is a 'click', the URL on which the member clicked.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class GetReportsIdLocationsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdLocationsReturn_links[] GetReportsIdLocationsReturn_links { get; set; }
		
		/// <summary>
		/// The campaign id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a top location for opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locations")]
		public GetReportsIdLocationsReturnLocations[] GetReportsIdLocationsReturnLocations { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetReportsIdLocationsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdLocationsReturnLocations
	{
		
		/// <summary>
		/// The ISO 3166 2 digit country code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The number of unique campaign opens for a region.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// An internal code for the region representing the more specific location area such as city or state. When this is blank, it indicates we know the country, but not the region.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The name of the region, if we have one. For blank "region" values, this will be "Rest of Country".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region_name")]
		public string Region_name { get; set; }
	}
	
	public enum GetReportsIdOpenDetailsSort_field
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		opens_count = 0,
	}
	
	public class GetReportsIdOpenDetailsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdOpenDetailsReturn_links[] GetReportsIdOpenDetailsReturn_links { get; set; }
		
		/// <summary>
		/// The campaign id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a list member who opened a campaign email. Each members object will contain information about the number of total opens by a single member, as well as timestamps for each open event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public GetReportsIdOpenDetailsReturnMembers[] GetReportsIdOpenDetailsReturnMembers { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
		
		/// <summary>
		/// The total number of opens matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_opens")]
		public System.Nullable<System.Int32> Total_opens { get; set; }
	}
	
	public class GetReportsIdOpenDetailsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdOpenDetailsReturnMembers
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdOpenDetailsReturnMembers_links[] GetReportsIdOpenDetailsReturnMembers_links { get; set; }
		
		/// <summary>
		/// The unique id for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The status of the member, namely if they are subscribed, unsubscribed, deleted, non-subscribed, transactional, pending, or need reconfirmation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_status")]
		public string Contact_status { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The unique id for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// An array of timestamps for each time a list member opened the campaign. If a list member opens an email multiple times, this will return a separate timestamp for each open event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public GetReportsIdOpenDetailsReturnMembersOpens[] GetReportsIdOpenDetailsReturnMembersOpens { get; set; }
		
		/// <summary>
		/// The total number of times the this campaign was opened by the list member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens_count")]
		public System.Nullable<System.Int32> Opens_count { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class GetReportsIdOpenDetailsReturnMembers_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdOpenDetailsReturnMembersOpens
	{
		
		/// <summary>
		/// The date and time recorded for the action in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.DateTimeOffset> Timestamp { get; set; }
	}
	
	public class GetReportsIdOpenDetailsIdMembersIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdOpenDetailsIdMembersIdReturn_links[] GetReportsIdOpenDetailsIdMembersIdReturn_links { get; set; }
		
		/// <summary>
		/// The unique id for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The status of the member, namely if they are subscribed, unsubscribed, deleted, non-subscribed, transactional, pending, or need reconfirmation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_status")]
		public string Contact_status { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The unique id for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// An array of timestamps for each time a list member opened the campaign. If a list member opens an email multiple times, this will return a separate timestamp for each open event.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public GetReportsIdOpenDetailsIdMembersIdReturnOpens[] GetReportsIdOpenDetailsIdMembersIdReturnOpens { get; set; }
		
		/// <summary>
		/// The total number of times the this campaign was opened by the list member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens_count")]
		public System.Nullable<System.Int32> Opens_count { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class GetReportsIdOpenDetailsIdMembersIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdOpenDetailsIdMembersIdReturnOpens
	{
		
		/// <summary>
		/// The date and time recorded for the action in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.DateTimeOffset> Timestamp { get; set; }
	}
	
	public class GetReportsIdSentToReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdSentToReturn_links[] GetReportsIdSentToReturn_links { get; set; }
		
		/// <summary>
		/// The campaign id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a campaign recipient.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sent_to")]
		public GetReportsIdSentToReturnSent_to[] GetReportsIdSentToReturnSent_to { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetReportsIdSentToReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdSentToReturnSent_to
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdSentToReturnSent_to_links[] GetReportsIdSentToReturnSent_to_links { get; set; }
		
		/// <summary>
		/// For A/B Split Campaigns, the group the member was apart of.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="absplit_group")]
		public System.Nullable<GetReportsIdSentToReturnSent_toAbsplit_group> Absplit_group { get; set; }
		
		/// <summary>
		/// The campaign id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// For campaigns sent with timewarp, the time zone group the member is apart of.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gmt_offset")]
		public System.Nullable<System.Int32> Gmt_offset { get; set; }
		
		/// <summary>
		/// The date and time of the last open for this member in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_open")]
		public System.Nullable<System.DateTimeOffset> Last_open { get; set; }
		
		/// <summary>
		/// The unique list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// The number of times a campaign was opened by this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_count")]
		public System.Nullable<System.Int32> Open_count { get; set; }
		
		/// <summary>
		/// The status of the email delivered to this subscriber. `hard` and `soft` refer to different [bounce types](https://mailchimp.com/help/soft-vs-hard-bounces/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<GetReportsIdSentToReturnSent_toStatus> Status { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class GetReportsIdSentToReturnSent_to_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetReportsIdSentToReturnSent_toAbsplit_group
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		a = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		b = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		winner = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetReportsIdSentToReturnSent_toStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		sent = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hard = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		soft = 2,
	}
	
	public class GetReportsIdSentToIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdSentToIdReturn_links[] GetReportsIdSentToIdReturn_links { get; set; }
		
		/// <summary>
		/// For A/B Split Campaigns, the group the member was apart of.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="absplit_group")]
		public GetReportsIdSentToReturnSent_toAbsplit_group Absplit_group { get; set; }
		
		/// <summary>
		/// The campaign id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// For campaigns sent with timewarp, the time zone group the member is apart of.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gmt_offset")]
		public System.Nullable<System.Int32> Gmt_offset { get; set; }
		
		/// <summary>
		/// The date and time of the last open for this member in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_open")]
		public System.Nullable<System.DateTimeOffset> Last_open { get; set; }
		
		/// <summary>
		/// The unique list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// The number of times a campaign was opened by this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_count")]
		public System.Nullable<System.Int32> Open_count { get; set; }
		
		/// <summary>
		/// The status of the email delivered to this subscriber. `hard` and `soft` refer to different [bounce types](https://mailchimp.com/help/soft-vs-hard-bounces/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetReportsIdSentToReturnSent_toStatus Status { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class GetReportsIdSentToIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdSubReportsIdReturn_links[] GetReportsIdSubReportsIdReturn_links { get; set; }
		
		/// <summary>
		/// Unique identifier of the parent campaign
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a report resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reports")]
		public GetReportsIdSubReportsIdReturnReports[] GetReportsIdSubReportsIdReturnReports { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturnReports
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdSubReportsIdReturnReports_links[] GetReportsIdSubReportsIdReturnReports_links { get; set; }
		
		/// <summary>
		/// General stats about different groups of an A/B Split campaign. Does not return information about Multivariate Campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ab_split")]
		public GetReportsIdSubReportsIdReturnReportsAb_split Ab_split { get; set; }
		
		/// <summary>
		/// The number of abuse reports generated for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abuse_reports")]
		public System.Nullable<System.Int32> Abuse_reports { get; set; }
		
		/// <summary>
		/// An object describing the bounce summary for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bounces")]
		public GetReportsIdSubReportsIdReturnReportsBounces Bounces { get; set; }
		
		/// <summary>
		/// The title of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_title")]
		public string Campaign_title { get; set; }
		
		/// <summary>
		/// An object describing the click activity for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public GetReportsIdSubReportsIdReturnReportsClicks Clicks { get; set; }
		
		/// <summary>
		/// Updates on campaigns in the process of sending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delivery_status")]
		public GetReportsIdSubReportsIdReturnReportsDelivery_status Delivery_status { get; set; }
		
		/// <summary>
		/// E-Commerce stats for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecommerce")]
		public GetReportsIdSubReportsIdReturnReportsEcommerce Ecommerce { get; set; }
		
		/// <summary>
		/// The total number of emails sent for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// An object describing campaign engagement on Facebook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="facebook_likes")]
		public GetReportsIdSubReportsIdReturnReportsFacebook_likes Facebook_likes { get; set; }
		
		/// <summary>
		/// An object describing the forwards and forward activity for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards")]
		public GetReportsIdSubReportsIdReturnReportsForwards Forwards { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The average campaign statistics for your industry.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="industry_stats")]
		public GetReportsIdSubReportsIdReturnReportsIndustry_stats Industry_stats { get; set; }
		
		/// <summary>
		/// The unique list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// The average campaign statistics for your list. This won't be present if we haven't calculated it yet for this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_stats")]
		public GetReportsIdSubReportsIdReturnReportsList_stats List_stats { get; set; }
		
		/// <summary>
		/// An object describing the open activity for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public GetReportsIdSubReportsIdReturnReportsOpens Opens { get; set; }
		
		/// <summary>
		/// The preview text for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preview_text")]
		public string Preview_text { get; set; }
		
		/// <summary>
		/// For RSS campaigns, the date and time of the last send in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rss_last_send")]
		public System.Nullable<System.DateTimeOffset> Rss_last_send { get; set; }
		
		/// <summary>
		/// The date and time a campaign was sent in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.DateTimeOffset> Send_time { get; set; }
		
		/// <summary>
		/// The url and password for the [VIP report](https://mailchimp.com/help/share-a-campaign-report/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="share_report")]
		public GetReportsIdSubReportsIdReturnReportsShare_report Share_report { get; set; }
		
		/// <summary>
		/// The subject line for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public string Subject_line { get; set; }
		
		/// <summary>
		/// An hourly breakdown of the performance of the campaign over the first 24 hours.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeseries")]
		public GetReportsIdSubReportsIdReturnReportsTimeseries[] GetReportsIdSubReportsIdReturnReportsTimeseries { get; set; }
		
		/// <summary>
		/// An hourly breakdown of sends, opens, and clicks if a campaign is sent using timewarp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timewarp")]
		public GetReportsIdSubReportsIdReturnReportsTimewarp[] GetReportsIdSubReportsIdReturnReportsTimewarp { get; set; }
		
		/// <summary>
		/// The type of campaign (regular, plain-text, ab_split, rss, automation, variate, or auto).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The total number of unsubscribed members for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribed")]
		public System.Nullable<System.Int32> Unsubscribed { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturnReports_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturnReportsAb_split
	{
		
		/// <summary>
		/// Stats for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="a")]
		public GetReportsIdSubReportsIdReturnReportsAb_splitA A { get; set; }
		
		/// <summary>
		/// Stats for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="b")]
		public GetReportsIdSubReportsIdReturnReportsAb_splitB B { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturnReportsAb_splitA
	{
		
		/// <summary>
		/// Abuse reports for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abuse_reports")]
		public System.Nullable<System.Int32> Abuse_reports { get; set; }
		
		/// <summary>
		/// Bounces for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bounces")]
		public System.Nullable<System.Int32> Bounces { get; set; }
		
		/// <summary>
		/// Forwards for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards")]
		public System.Nullable<System.Int32> Forwards { get; set; }
		
		/// <summary>
		/// Opens from forwards for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards_opens")]
		public System.Nullable<System.Int32> Forwards_opens { get; set; }
		
		/// <summary>
		/// The last open for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_open")]
		public string Last_open { get; set; }
		
		/// <summary>
		/// Opens for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// Recipient Clicks for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_clicks")]
		public System.Nullable<System.Int32> Recipient_clicks { get; set; }
		
		/// <summary>
		/// Unique opens for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
		
		/// <summary>
		/// Unsubscribes for Campaign A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubs")]
		public System.Nullable<System.Int32> Unsubs { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturnReportsAb_splitB
	{
		
		/// <summary>
		/// Abuse reports for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abuse_reports")]
		public System.Nullable<System.Int32> Abuse_reports { get; set; }
		
		/// <summary>
		/// Bounces for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bounces")]
		public System.Nullable<System.Int32> Bounces { get; set; }
		
		/// <summary>
		/// Forwards for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards")]
		public System.Nullable<System.Int32> Forwards { get; set; }
		
		/// <summary>
		/// Opens for forwards from Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards_opens")]
		public System.Nullable<System.Int32> Forwards_opens { get; set; }
		
		/// <summary>
		/// The last open for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_open")]
		public string Last_open { get; set; }
		
		/// <summary>
		/// Opens for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// Recipients clicks for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_clicks")]
		public System.Nullable<System.Int32> Recipient_clicks { get; set; }
		
		/// <summary>
		/// Unique opens for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
		
		/// <summary>
		/// Unsubscribes for Campaign B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubs")]
		public System.Nullable<System.Int32> Unsubs { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturnReportsBounces
	{
		
		/// <summary>
		/// The total number of hard bounced email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hard_bounces")]
		public System.Nullable<System.Int32> Hard_bounces { get; set; }
		
		/// <summary>
		/// The total number of soft bounced email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="soft_bounces")]
		public System.Nullable<System.Int32> Soft_bounces { get; set; }
		
		/// <summary>
		/// The total number of addresses that were syntax-related bounces.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="syntax_errors")]
		public System.Nullable<System.Int32> Syntax_errors { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturnReportsClicks
	{
		
		/// <summary>
		/// The number of unique clicks divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The total number of clicks for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks_total")]
		public System.Nullable<System.Int32> Clicks_total { get; set; }
		
		/// <summary>
		/// The date and time of the last recorded click for the campaign in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_click")]
		public System.Nullable<System.DateTimeOffset> Last_click { get; set; }
		
		/// <summary>
		/// The total number of unique clicks for links across a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_clicks")]
		public System.Nullable<System.Int32> Unique_clicks { get; set; }
		
		/// <summary>
		/// The total number of subscribers who clicked on a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_subscriber_clicks")]
		public System.Nullable<System.Int32> Unique_subscriber_clicks { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturnReportsDelivery_status
	{
		
		/// <summary>
		/// Whether a campaign send can be canceled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="can_cancel")]
		public System.Nullable<System.Boolean> Can_cancel { get; set; }
		
		/// <summary>
		/// The total number of emails canceled for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_canceled")]
		public System.Nullable<System.Int32> Emails_canceled { get; set; }
		
		/// <summary>
		/// The total number of emails confirmed sent for this campaign so far.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// Whether Campaign Delivery Status is enabled for this account and campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The current state of a campaign delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetCampaignsReturnCampaignsDelivery_statusStatus Status { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturnReportsEcommerce
	{
		
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The total orders for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_orders")]
		public System.Nullable<System.Int32> Total_orders { get; set; }
		
		/// <summary>
		/// The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
		
		/// <summary>
		/// The total spent for a campaign. Calculated as the sum of all order totals with no deductions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturnReportsFacebook_likes
	{
		
		/// <summary>
		/// The number of Facebook likes for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="facebook_likes")]
		public System.Nullable<System.Int32> Facebook_likes { get; set; }
		
		/// <summary>
		/// The number of recipients who liked the campaign on Facebook.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_likes")]
		public System.Nullable<System.Int32> Recipient_likes { get; set; }
		
		/// <summary>
		/// The number of unique likes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_likes")]
		public System.Nullable<System.Int32> Unique_likes { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturnReportsForwards
	{
		
		/// <summary>
		/// How many times the campaign has been forwarded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards_count")]
		public System.Nullable<System.Int32> Forwards_count { get; set; }
		
		/// <summary>
		/// How many times the forwarded campaign has been opened.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="forwards_opens")]
		public System.Nullable<System.Int32> Forwards_opens { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturnReportsIndustry_stats
	{
		
		/// <summary>
		/// The industry abuse rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="abuse_rate")]
		public System.Nullable<System.Double> Abuse_rate { get; set; }
		
		/// <summary>
		/// The industry bounce rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bounce_rate")]
		public System.Nullable<System.Double> Bounce_rate { get; set; }
		
		/// <summary>
		/// The industry click rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The industry open rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The type of business industry associated with your account. For example: retail, education, etc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		/// <summary>
		/// The industry unopened rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unopen_rate")]
		public System.Nullable<System.Double> Unopen_rate { get; set; }
		
		/// <summary>
		/// The industry unsubscribe rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsub_rate")]
		public System.Nullable<System.Double> Unsub_rate { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturnReportsList_stats
	{
		
		/// <summary>
		/// The average click rate (a percentage represented as a number between 0 and 100) per campaign for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The average open rate (a percentage represented as a number between 0 and 100) per campaign for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The average number of subscriptions per month for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sub_rate")]
		public System.Nullable<System.Double> Sub_rate { get; set; }
		
		/// <summary>
		/// The average number of unsubscriptions per month for the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsub_rate")]
		public System.Nullable<System.Double> Unsub_rate { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturnReportsOpens
	{
		
		/// <summary>
		/// The date and time of the last recorded open in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_open")]
		public System.Nullable<System.DateTimeOffset> Last_open { get; set; }
		
		/// <summary>
		/// The number of unique opens divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The total number of opens for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens_total")]
		public System.Nullable<System.Int32> Opens_total { get; set; }
		
		/// <summary>
		/// The total number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturnReportsShare_report
	{
		
		/// <summary>
		/// If password protected, the password for the VIP report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="share_password")]
		public string Share_password { get; set; }
		
		/// <summary>
		/// The URL for the VIP report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="share_url")]
		public string Share_url { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturnReportsTimeseries
	{
		
		/// <summary>
		/// The number of emails sent in the timeseries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// The number of clicks in the timeseries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients_clicks")]
		public System.Nullable<System.Int32> Recipients_clicks { get; set; }
		
		/// <summary>
		/// The date and time for the series in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.DateTimeOffset> Timestamp { get; set; }
		
		/// <summary>
		/// The number of unique opens in the timeseries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class GetReportsIdSubReportsIdReturnReportsTimewarp
	{
		
		/// <summary>
		/// The number of bounces.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bounces")]
		public System.Nullable<System.Int32> Bounces { get; set; }
		
		/// <summary>
		/// The number of clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// For campaigns sent with timewarp, the time zone group the member is apart of.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gmt_offset")]
		public System.Nullable<System.Int32> Gmt_offset { get; set; }
		
		/// <summary>
		/// The date and time of the last click in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_click")]
		public System.Nullable<System.DateTimeOffset> Last_click { get; set; }
		
		/// <summary>
		/// The date and time of the last open in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_open")]
		public System.Nullable<System.DateTimeOffset> Last_open { get; set; }
		
		/// <summary>
		/// The number of opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// The number of unique clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_clicks")]
		public System.Nullable<System.Int32> Unique_clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class GetReportsIdUnsubscribedReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdUnsubscribedReturn_links[] GetReportsIdUnsubscribedReturn_links { get; set; }
		
		/// <summary>
		/// The campaign id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
		
		/// <summary>
		/// An array of objects, each representing a member who unsubscribed from a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribes")]
		public GetReportsIdUnsubscribedReturnUnsubscribes[] GetReportsIdUnsubscribedReturnUnsubscribes { get; set; }
	}
	
	public class GetReportsIdUnsubscribedReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdUnsubscribedReturnUnsubscribes
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdUnsubscribedReturnUnsubscribes_links[] GetReportsIdUnsubscribedReturnUnsubscribes_links { get; set; }
		
		/// <summary>
		/// The campaign id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// If available, the reason listed by the member for unsubscribing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		/// <summary>
		/// The date and time the member opted-out in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.DateTimeOffset> Timestamp { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class GetReportsIdUnsubscribedReturnUnsubscribes_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetReportsIdUnsubscribedIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetReportsIdUnsubscribedIdReturn_links[] GetReportsIdUnsubscribedIdReturn_links { get; set; }
		
		/// <summary>
		/// The campaign id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign_id")]
		public string Campaign_id { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_id")]
		public string Email_id { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// If available, the reason listed by the member for unsubscribing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		/// <summary>
		/// The date and time the member opted-out in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public System.Nullable<System.DateTimeOffset> Timestamp { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
	}
	
	public class GetReportsIdUnsubscribedIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetSearchCampaignsReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetSearchCampaignsReturn_links[] GetSearchCampaignsReturn_links { get; set; }
		
		/// <summary>
		/// An array of matching campaigns and snippets.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="results")]
		public GetSearchCampaignsReturnResults[] GetSearchCampaignsReturnResults { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetSearchCampaignsReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetSearchCampaignsReturnResults
	{
		
		/// <summary>
		/// A summary of an individual campaign's settings and content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public GetSearchCampaignsReturnResultsCampaign Campaign { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="snippet")]
		public string Snippet { get; set; }
	}
	
	public class GetSearchCampaignsReturnResultsCampaign
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetSearchCampaignsReturnResultsCampaign_links[] GetSearchCampaignsReturnResultsCampaign_links { get; set; }
		
		/// <summary>
		/// [A/B Testing](https://mailchimp.com/help/about-ab-testing-campaigns/) options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ab_split_opts")]
		public GetSearchCampaignsReturnResultsCampaignAb_split_opts Ab_split_opts { get; set; }
		
		/// <summary>
		/// The link to the campaign's archive version in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="archive_url")]
		public string Archive_url { get; set; }
		
		/// <summary>
		/// How the campaign's content is put together.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_type")]
		public GetCampaignsReturnCampaignsContent_type Content_type { get; set; }
		
		/// <summary>
		/// The date and time the campaign was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="create_time")]
		public System.Nullable<System.DateTimeOffset> Create_time { get; set; }
		
		/// <summary>
		/// Updates on campaigns in the process of sending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="delivery_status")]
		public GetSearchCampaignsReturnResultsCampaignDelivery_status Delivery_status { get; set; }
		
		/// <summary>
		/// The total number of emails sent for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The original link to the campaign's archive version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="long_archive_url")]
		public string Long_archive_url { get; set; }
		
		/// <summary>
		/// Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor. Deprecated and will always return false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="needs_block_refresh")]
		public System.Nullable<System.Boolean> Needs_block_refresh { get; set; }
		
		/// <summary>
		/// If this campaign is the child of another campaign, this identifies the parent campaign. For Example, for RSS or Automation children.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent_campaign_id")]
		public string Parent_campaign_id { get; set; }
		
		/// <summary>
		/// List settings for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public GetSearchCampaignsReturnResultsCampaignRecipients Recipients { get; set; }
		
		/// <summary>
		/// For sent campaigns, a summary of opens, clicks, and e-commerce data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="report_summary")]
		public GetSearchCampaignsReturnResultsCampaignReport_summary Report_summary { get; set; }
		
		/// <summary>
		/// Determines if the campaign qualifies to be resent to non-openers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resendable")]
		public System.Nullable<System.Boolean> Resendable { get; set; }
		
		/// <summary>
		/// [RSS](https://mailchimp.com/help/share-your-blog-posts-with-mailchimp/) options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rss_opts")]
		public GetSearchCampaignsReturnResultsCampaignRss_opts Rss_opts { get; set; }
		
		/// <summary>
		/// The date and time a campaign was sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.DateTimeOffset> Send_time { get; set; }
		
		/// <summary>
		/// The settings for your campaign, including subject, from name, reply-to address, and more.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public GetSearchCampaignsReturnResultsCampaignSettings Settings { get; set; }
		
		/// <summary>
		/// The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](https://mailchimp.com/help/enable-and-customize-social-cards/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="social_card")]
		public GetSearchCampaignsReturnResultsCampaignSocial_card Social_card { get; set; }
		
		/// <summary>
		/// The current status of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetCampaignsReturnCampaignsStatus Status { get; set; }
		
		/// <summary>
		/// The tracking options for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tracking")]
		public GetSearchCampaignsReturnResultsCampaignTracking Tracking { get; set; }
		
		/// <summary>
		/// There are four types of [campaigns](https://mailchimp.com/help/getting-started-with-campaigns/) you can create in Mailchimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GetCampaignsType Type { get; set; }
		
		/// <summary>
		/// The settings specific to A/B test campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="variate_settings")]
		public GetSearchCampaignsReturnResultsCampaignVariate_settings Variate_settings { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this campaign in your Mailchimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class GetSearchCampaignsReturnResultsCampaign_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetSearchCampaignsReturnResultsCampaignAb_split_opts
	{
		
		/// <summary>
		/// For campaigns split on 'From Name', the name for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name_a")]
		public string From_name_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the name for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name_b")]
		public string From_name_b { get; set; }
		
		/// <summary>
		/// How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pick_winner")]
		public GetCampaignsReturnCampaignsAb_split_optsPick_winner Pick_winner { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the reply-to address for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_email_a")]
		public string Reply_email_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'From Name', the reply-to address for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_email_b")]
		public string Reply_email_b { get; set; }
		
		/// <summary>
		/// The send time for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_a")]
		public System.Nullable<System.DateTimeOffset> Send_time_a { get; set; }
		
		/// <summary>
		/// The send time for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_b")]
		public System.Nullable<System.DateTimeOffset> Send_time_b { get; set; }
		
		/// <summary>
		/// The send time for the winning version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time_winner")]
		public string Send_time_winner { get; set; }
		
		/// <summary>
		/// The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50.
		/// Minimum: 1
		/// Maximum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="split_size")]
		[System.ComponentModel.DataAnnotations.Range(1, 50)]
		public System.Nullable<System.Int32> Split_size { get; set; }
		
		/// <summary>
		/// The type of AB split to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="split_test")]
		public GetCampaignsReturnCampaignsAb_split_optsSplit_test Split_test { get; set; }
		
		/// <summary>
		/// For campaigns split on 'Subject Line', the subject line for Group A.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_a")]
		public string Subject_a { get; set; }
		
		/// <summary>
		/// For campaigns split on 'Subject Line', the subject line for Group B.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_b")]
		public string Subject_b { get; set; }
		
		/// <summary>
		/// The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
		
		/// <summary>
		/// How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_units")]
		public GetCampaignsReturnCampaignsAb_split_optsWait_units Wait_units { get; set; }
	}
	
	public class GetSearchCampaignsReturnResultsCampaignDelivery_status
	{
		
		/// <summary>
		/// Whether a campaign send can be canceled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="can_cancel")]
		public System.Nullable<System.Boolean> Can_cancel { get; set; }
		
		/// <summary>
		/// The total number of emails canceled for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_canceled")]
		public System.Nullable<System.Int32> Emails_canceled { get; set; }
		
		/// <summary>
		/// The total number of emails confirmed sent for this campaign so far.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emails_sent")]
		public System.Nullable<System.Int32> Emails_sent { get; set; }
		
		/// <summary>
		/// Whether Campaign Delivery Status is enabled for this account and campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The current state of a campaign delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetCampaignsReturnCampaignsDelivery_statusStatus Status { get; set; }
	}
	
	public class GetSearchCampaignsReturnResultsCampaignRecipients
	{
		
		/// <summary>
		/// The unique list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// The status of the list used, namely if it's deleted or disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_is_active")]
		public System.Nullable<System.Boolean> List_is_active { get; set; }
		
		/// <summary>
		/// The name of the list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_name")]
		public string List_name { get; set; }
		
		/// <summary>
		/// Count of the recipients on the associated list. Formatted as an integer.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipient_count")]
		public System.Nullable<System.Int32> Recipient_count { get; set; }
		
		/// <summary>
		/// An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_opts")]
		public GetSearchCampaignsReturnResultsCampaignRecipientsSegment_opts Segment_opts { get; set; }
		
		/// <summary>
		/// A description of the [segment](https://mailchimp.com/help/create-and-send-to-a-segment/) used for the campaign. Formatted as a string marked up with HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="segment_text")]
		public string Segment_text { get; set; }
	}
	
	public class GetSearchCampaignsReturnResultsCampaignRecipientsSegment_opts
	{
		
		/// <summary>
		/// Segment match conditions. There are multiple possible types, see the [condition types documentation](https://mailchimp.com/developer/marketing/docs/alternative-schemas/#segment-condition-schemas).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public string[] Conditions { get; set; }
		
		/// <summary>
		/// Segment match type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public GetAutomationsReturnAutomationsRecipientsSegment_optsMatch Match { get; set; }
		
		/// <summary>
		/// The prebuilt segment id, if a prebuilt segment has been designated for this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="prebuilt_segment_id")]
		public string Prebuilt_segment_id { get; set; }
		
		/// <summary>
		/// The id for an existing saved segment.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saved_segment_id")]
		public System.Nullable<System.Int32> Saved_segment_id { get; set; }
	}
	
	public class GetSearchCampaignsReturnResultsCampaignReport_summary
	{
		
		/// <summary>
		/// The number of unique clicks divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="click_rate")]
		public System.Nullable<System.Double> Click_rate { get; set; }
		
		/// <summary>
		/// The total number of clicks for an campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicks")]
		public System.Nullable<System.Int32> Clicks { get; set; }
		
		/// <summary>
		/// E-Commerce stats for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecommerce")]
		public GetSearchCampaignsReturnResultsCampaignReport_summaryEcommerce Ecommerce { get; set; }
		
		/// <summary>
		/// The number of unique opens divided by the total number of successful deliveries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="open_rate")]
		public System.Nullable<System.Double> Open_rate { get; set; }
		
		/// <summary>
		/// The total number of opens for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Int32> Opens { get; set; }
		
		/// <summary>
		/// The number of unique clicks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subscriber_clicks")]
		public System.Nullable<System.Int32> Subscriber_clicks { get; set; }
		
		/// <summary>
		/// The number of unique opens.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_opens")]
		public System.Nullable<System.Int32> Unique_opens { get; set; }
	}
	
	public class GetSearchCampaignsReturnResultsCampaignReport_summaryEcommerce
	{
		
		/// <summary>
		/// The total orders for a campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_orders")]
		public System.Nullable<System.Int32> Total_orders { get; set; }
		
		/// <summary>
		/// The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
		
		/// <summary>
		/// The total spent for a campaign. Calculated as the sum of all order totals with no deductions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_spent")]
		public System.Nullable<System.Double> Total_spent { get; set; }
	}
	
	public class GetSearchCampaignsReturnResultsCampaignRss_opts
	{
		
		/// <summary>
		/// Whether to add CSS to images in the RSS feed to constrain their width in campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="constrain_rss_img")]
		public System.Nullable<System.Boolean> Constrain_rss_img { get; set; }
		
		/// <summary>
		/// The URL for the RSS feed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="feed_url")]
		public string Feed_url { get; set; }
		
		/// <summary>
		/// The frequency of the RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frequency")]
		public GetCampaignsReturnCampaignsRss_optsFrequency Frequency { get; set; }
		
		/// <summary>
		/// The date the campaign was last sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_sent")]
		public System.Nullable<System.DateTimeOffset> Last_sent { get; set; }
		
		/// <summary>
		/// The schedule for sending the RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedule")]
		public GetSearchCampaignsReturnResultsCampaignRss_optsSchedule Schedule { get; set; }
	}
	
	public class GetSearchCampaignsReturnResultsCampaignRss_optsSchedule
	{
		
		/// <summary>
		/// The days of the week to send a daily RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="daily_send")]
		public GetSearchCampaignsReturnResultsCampaignRss_optsScheduleDaily_send Daily_send { get; set; }
		
		/// <summary>
		/// The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](https://mailchimp.com/help/set-account-defaults/).
		/// Minimum: 0
		/// Maximum: 23
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hour")]
		[System.ComponentModel.DataAnnotations.Range(0, 23)]
		public System.Nullable<System.Int32> Hour { get; set; }
		
		/// <summary>
		/// The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February.
		/// Minimum: 0
		/// Maximum: 31
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monthly_send_date")]
		[System.ComponentModel.DataAnnotations.Range(0, 31)]
		public System.Nullable<System.Double> Monthly_send_date { get; set; }
		
		/// <summary>
		/// The day of the week to send a weekly RSS Campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="weekly_send_day")]
		public GetCampaignsReturnCampaignsRss_optsScheduleWeekly_send_day Weekly_send_day { get; set; }
	}
	
	public class GetSearchCampaignsReturnResultsCampaignRss_optsScheduleDaily_send
	{
		
		/// <summary>
		/// Sends the daily RSS Campaign on Fridays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="friday")]
		public System.Nullable<System.Boolean> Friday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Mondays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="monday")]
		public System.Nullable<System.Boolean> Monday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Saturdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="saturday")]
		public System.Nullable<System.Boolean> Saturday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Sundays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sunday")]
		public System.Nullable<System.Boolean> Sunday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Thursdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thursday")]
		public System.Nullable<System.Boolean> Thursday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Tuesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tuesday")]
		public System.Nullable<System.Boolean> Tuesday { get; set; }
		
		/// <summary>
		/// Sends the daily RSS Campaign on Wednesdays.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wednesday")]
		public System.Nullable<System.Boolean> Wednesday { get; set; }
	}
	
	public class GetSearchCampaignsReturnResultsCampaignSettings
	{
		
		/// <summary>
		/// Whether Mailchimp [authenticated](https://mailchimp.com/help/about-email-authentication/) the campaign. Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticate")]
		public System.Nullable<System.Boolean> Authenticate { get; set; }
		
		/// <summary>
		/// An array of [Facebook](https://mailchimp.com/help/connect-or-disconnect-the-facebook-integration/) page ids to auto-post to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_fb_post")]
		public string[] Auto_fb_post { get; set; }
		
		/// <summary>
		/// Automatically append Mailchimp's [default footer](https://mailchimp.com/help/about-campaign-footers/) to the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_footer")]
		public System.Nullable<System.Boolean> Auto_footer { get; set; }
		
		/// <summary>
		/// Automatically tweet a link to the [campaign archive](https://mailchimp.com/help/about-email-campaign-archives-and-pages/) page when the campaign is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auto_tweet")]
		public System.Nullable<System.Boolean> Auto_tweet { get; set; }
		
		/// <summary>
		/// Whether the campaign uses the drag-and-drop editor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drag_and_drop")]
		public System.Nullable<System.Boolean> Drag_and_drop { get; set; }
		
		/// <summary>
		/// Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fb_comments")]
		public System.Nullable<System.Boolean> Fb_comments { get; set; }
		
		/// <summary>
		/// If the campaign is listed in a folder, the id for that folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public string Folder_id { get; set; }
		
		/// <summary>
		/// The 'from' name on the campaign (not an email address).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public string From_name { get; set; }
		
		/// <summary>
		/// Automatically inline the CSS included with the campaign content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inline_css")]
		public System.Nullable<System.Boolean> Inline_css { get; set; }
		
		/// <summary>
		/// The preview text for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="preview_text")]
		public string Preview_text { get; set; }
		
		/// <summary>
		/// The reply-to email address for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public string Reply_to { get; set; }
		
		/// <summary>
		/// The subject line for the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public string Subject_line { get; set; }
		
		/// <summary>
		/// The id for the template used in this campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template_id")]
		public System.Nullable<System.Int32> Template_id { get; set; }
		
		/// <summary>
		/// Send this campaign using [Timewarp](https://mailchimp.com/help/use-timewarp/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timewarp")]
		public System.Nullable<System.Boolean> Timewarp { get; set; }
		
		/// <summary>
		/// The title of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The campaign's custom 'To' name. Typically the first name [audience field](https://mailchimp.com/help/getting-started-with-merge-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="to_name")]
		public string To_name { get; set; }
		
		/// <summary>
		/// Use Mailchimp Conversation feature to manage out-of-office replies.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="use_conversation")]
		public System.Nullable<System.Boolean> Use_conversation { get; set; }
	}
	
	public class GetSearchCampaignsReturnResultsCampaignSocial_card
	{
		
		/// <summary>
		/// A short summary of the campaign to display.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// The url for the header image for the card.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image_url")]
		public string Image_url { get; set; }
		
		/// <summary>
		/// The title for the card. Typically the subject line of the campaign.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class GetSearchCampaignsReturnResultsCampaignTracking
	{
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="capsule")]
		public GetSearchCampaignsReturnResultsCampaignTrackingCapsule Capsule { get; set; }
		
		/// <summary>
		/// The custom slug for [ClickTale](https://mailchimp.com/help/additional-tracking-options-for-campaigns/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clicktale")]
		public string Clicktale { get; set; }
		
		/// <summary>
		/// Whether to enable e-commerce tracking.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecomm360")]
		public System.Nullable<System.Boolean> Ecomm360 { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="goal_tracking")]
		public System.Nullable<System.Boolean> Goal_tracking { get; set; }
		
		/// <summary>
		/// The custom slug for [Google Analytics](https://mailchimp.com/help/integrate-google-analytics-with-mailchimp/) tracking (max of 50 bytes).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="google_analytics")]
		public string Google_analytics { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="html_clicks")]
		public System.Nullable<System.Boolean> Html_clicks { get; set; }
		
		/// <summary>
		/// Whether to [track opens](https://mailchimp.com/help/about-open-tracking/). Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="opens")]
		public System.Nullable<System.Boolean> Opens { get; set; }
		
		/// <summary>
		/// Deprecated
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="salesforce")]
		public GetSearchCampaignsReturnResultsCampaignTrackingSalesforce Salesforce { get; set; }
		
		/// <summary>
		/// Whether to [track clicks](https://mailchimp.com/help/enable-and-view-click-tracking/) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text_clicks")]
		public System.Nullable<System.Boolean> Text_clicks { get; set; }
	}
	
	public class GetSearchCampaignsReturnResultsCampaignTrackingCapsule
	{
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class GetSearchCampaignsReturnResultsCampaignTrackingSalesforce
	{
		
		/// <summary>
		/// Create a campaign in a connected Salesforce account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="campaign")]
		public System.Nullable<System.Boolean> Campaign { get; set; }
		
		/// <summary>
		/// Update contact notes for a campaign based on subscriber email addresses.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public System.Nullable<System.Boolean> Notes { get; set; }
	}
	
	public class GetSearchCampaignsReturnResultsCampaignVariate_settings
	{
		
		/// <summary>
		/// Combinations of possible variables used to build emails.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="combinations")]
		public GetSearchCampaignsReturnResultsCampaignVariate_settingsCombinations[] GetSearchCampaignsReturnResultsCampaignVariate_settingsCombinations { get; set; }
		
		/// <summary>
		/// Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contents")]
		public string[] Contents { get; set; }
		
		/// <summary>
		/// The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_names")]
		public string[] From_names { get; set; }
		
		/// <summary>
		/// The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to_addresses")]
		public string[] Reply_to_addresses { get; set; }
		
		/// <summary>
		/// The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_times")]
		public string[] Send_times { get; set; }
		
		/// <summary>
		/// The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_lines")]
		public string[] Subject_lines { get; set; }
		
		/// <summary>
		/// The percentage of recipients to send the test combinations to, must be a value between 10 and 100.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="test_size")]
		public System.Nullable<System.Int32> Test_size { get; set; }
		
		/// <summary>
		/// The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="wait_time")]
		public System.Nullable<System.Int32> Wait_time { get; set; }
		
		/// <summary>
		/// The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue -- or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the Mailchimp web application.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winner_criteria")]
		public GetCampaignsReturnCampaignsVariate_settingsWinner_criteria Winner_criteria { get; set; }
		
		/// <summary>
		/// ID of the campaign that was sent to the remaining recipients based on the winning combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winning_campaign_id")]
		public string Winning_campaign_id { get; set; }
		
		/// <summary>
		/// ID for the winning combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="winning_combination_id")]
		public string Winning_combination_id { get; set; }
	}
	
	public class GetSearchCampaignsReturnResultsCampaignVariate_settingsCombinations
	{
		
		/// <summary>
		/// The index of `variate_settings.contents` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_description")]
		public System.Nullable<System.Int32> Content_description { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.from_names` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="from_name")]
		public System.Nullable<System.Int32> From_name { get; set; }
		
		/// <summary>
		/// Unique ID for the combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The number of recipients for this combination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public System.Nullable<System.Int32> Recipients { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.reply_to_addresses` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reply_to")]
		public System.Nullable<System.Int32> Reply_to { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.send_times` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="send_time")]
		public System.Nullable<System.Int32> Send_time { get; set; }
		
		/// <summary>
		/// The index of `variate_settings.subject_lines` used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subject_line")]
		public System.Nullable<System.Int32> Subject_line { get; set; }
	}
	
	public class GetSearchMembersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetSearchMembersReturn_links[] GetSearchMembersReturn_links { get; set; }
		
		/// <summary>
		/// Exact matches of the provided search query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exact_matches")]
		public GetSearchMembersReturnExact_matches Exact_matches { get; set; }
		
		/// <summary>
		/// Partial matches of the provided search query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_search")]
		public GetSearchMembersReturnFull_search Full_search { get; set; }
	}
	
	public class GetSearchMembersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetSearchMembersReturnExact_matches
	{
		
		/// <summary>
		/// An array of objects, each representing a specific list member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public GetSearchMembersReturnExact_matchesMembers[] GetSearchMembersReturnExact_matchesMembers { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetSearchMembersReturnExact_matchesMembers
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetSearchMembersReturnExact_matchesMembers_links[] GetSearchMembersReturnExact_matchesMembers_links { get; set; }
		
		/// <summary>
		/// Indicates whether a contact consents to 1:1 messaging.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consents_to_one_to_one_messaging")]
		public System.Nullable<System.Boolean> Consents_to_one_to_one_messaging { get; set; }
		
		/// <summary>
		/// As Mailchimp evolves beyond email, you may eventually have contacts without email addresses. While the `id` is the MD5 hash of their email address, this `contact_id` is agnostic of contactâ€™s inclusion of an email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The list member's email client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_client")]
		public string Email_client { get; set; }
		
		/// <summary>
		/// Type of email this member asked to get ('html' or 'text').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type")]
		public string Email_type { get; set; }
		
		/// <summary>
		/// The contact's full name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_name")]
		public string Full_name { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The key of this object's properties is the ID of the interest in question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interests")]
		public System.Collections.Generic.Dictionary<string, bool> Interests { get; set; }
		
		/// <summary>
		/// The IP address the subscriber used to confirm their opt-in status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_opt")]
		public string Ip_opt { get; set; }
		
		/// <summary>
		/// IP address the subscriber signed up from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_signup")]
		public string Ip_signup { get; set; }
		
		/// <summary>
		/// If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The date and time the member's info was last changed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_changed")]
		public System.Nullable<System.DateTimeOffset> Last_changed { get; set; }
		
		/// <summary>
		/// The most recent Note added about this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_note")]
		public GetSearchMembersReturnExact_matchesMembersLast_note Last_note { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// Subscriber location information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public GetSearchMembersReturnExact_matchesMembersLocation Location { get; set; }
		
		/// <summary>
		/// The marketing permissions for the subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permissions")]
		public GetSearchMembersReturnExact_matchesMembersMarketing_permissions[] GetSearchMembersReturnExact_matchesMembersMarketing_permissions { get; set; }
		
		/// <summary>
		/// Star rating for this member, between 1 and 5.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_rating")]
		public System.Nullable<System.Int32> Member_rating { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// The source from which the subscriber was added to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		/// <summary>
		/// Open and click rates for this subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public GetSearchMembersReturnExact_matchesMembersStats Stats { get; set; }
		
		/// <summary>
		/// Subscriber's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetListsIdMembersStatus Status { get; set; }
		
		/// <summary>
		/// Returns up to 50 tags applied to this member. To retrieve all tags see [Member Tags](https://mailchimp.com/developer/marketing/api/list-member-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public GetSearchMembersReturnExact_matchesMembersTags[] GetSearchMembersReturnExact_matchesMembersTags { get; set; }
		
		/// <summary>
		/// The number of tags applied to this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags_count")]
		public System.Nullable<System.Int32> Tags_count { get; set; }
		
		/// <summary>
		/// The date and time the subscriber confirmed their opt-in status in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_opt")]
		public System.Nullable<System.DateTimeOffset> Timestamp_opt { get; set; }
		
		/// <summary>
		/// The date and time the subscriber signed up for the list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_signup")]
		public System.Nullable<System.DateTimeOffset> Timestamp_signup { get; set; }
		
		/// <summary>
		/// An identifier for the address across all of Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_email_id")]
		public string Unique_email_id { get; set; }
		
		/// <summary>
		/// A subscriber's reason for unsubscribing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe_reason")]
		public string Unsubscribe_reason { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this member in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/members/view?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class GetSearchMembersReturnExact_matchesMembers_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetSearchMembersReturnExact_matchesMembersLast_note
	{
		
		/// <summary>
		/// The date and time the note was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The author of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The content of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// The note id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note_id")]
		public System.Nullable<System.Int32> Note_id { get; set; }
	}
	
	public class GetSearchMembersReturnExact_matchesMembersLocation
	{
		
		/// <summary>
		/// The unique code for the location country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The offset for timezones where daylight saving time is observed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dstoff")]
		public System.Nullable<System.Int32> Dstoff { get; set; }
		
		/// <summary>
		/// The time difference in hours from GMT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gmtoff")]
		public System.Nullable<System.Int32> Gmtoff { get; set; }
		
		/// <summary>
		/// The location latitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The location longitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The region for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The timezone for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
	}
	
	public class GetSearchMembersReturnExact_matchesMembersMarketing_permissions
	{
		
		/// <summary>
		/// If the subscriber has opted-in to the marketing permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The id for the marketing permission on the list
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permission_id")]
		public string Marketing_permission_id { get; set; }
		
		/// <summary>
		/// The text of the marketing permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	public class GetSearchMembersReturnExact_matchesMembersStats
	{
		
		/// <summary>
		/// A subscriber's average clickthrough rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_click_rate")]
		public System.Nullable<System.Double> Avg_click_rate { get; set; }
		
		/// <summary>
		/// A subscriber's average open rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_open_rate")]
		public System.Nullable<System.Double> Avg_open_rate { get; set; }
		
		/// <summary>
		/// Ecommerce stats for the list member if the list is attached to a store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecommerce_data")]
		public GetSearchMembersReturnExact_matchesMembersStatsEcommerce_data Ecommerce_data { get; set; }
	}
	
	public class GetSearchMembersReturnExact_matchesMembersStatsEcommerce_data
	{
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The total number of orders placed by the list member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="number_of_orders")]
		public System.Nullable<System.Double> Number_of_orders { get; set; }
		
		/// <summary>
		/// The total revenue the list member has brought in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
	}
	
	public class GetSearchMembersReturnExact_matchesMembersTags
	{
		
		/// <summary>
		/// The tag id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the tag
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class GetSearchMembersReturnFull_search
	{
		
		/// <summary>
		/// An array of objects, each representing a specific list member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public GetSearchMembersReturnFull_searchMembers[] GetSearchMembersReturnFull_searchMembers { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetSearchMembersReturnFull_searchMembers
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetSearchMembersReturnFull_searchMembers_links[] GetSearchMembersReturnFull_searchMembers_links { get; set; }
		
		/// <summary>
		/// Indicates whether a contact consents to 1:1 messaging.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="consents_to_one_to_one_messaging")]
		public System.Nullable<System.Boolean> Consents_to_one_to_one_messaging { get; set; }
		
		/// <summary>
		/// As Mailchimp evolves beyond email, you may eventually have contacts without email addresses. While the `id` is the MD5 hash of their email address, this `contact_id` is agnostic of contactâ€™s inclusion of an email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contact_id")]
		public string Contact_id { get; set; }
		
		/// <summary>
		/// Email address for a subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_address")]
		public string Email_address { get; set; }
		
		/// <summary>
		/// The list member's email client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_client")]
		public string Email_client { get; set; }
		
		/// <summary>
		/// Type of email this member asked to get ('html' or 'text').
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="email_type")]
		public string Email_type { get; set; }
		
		/// <summary>
		/// The contact's full name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="full_name")]
		public string Full_name { get; set; }
		
		/// <summary>
		/// The MD5 hash of the lowercase version of the list member's email address.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The key of this object's properties is the ID of the interest in question.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="interests")]
		public System.Collections.Generic.Dictionary<string, bool> Interests { get; set; }
		
		/// <summary>
		/// The IP address the subscriber used to confirm their opt-in status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_opt")]
		public string Ip_opt { get; set; }
		
		/// <summary>
		/// IP address the subscriber signed up from.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ip_signup")]
		public string Ip_signup { get; set; }
		
		/// <summary>
		/// If set/detected, the [subscriber's language](https://mailchimp.com/help/view-and-edit-contact-languages/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// The date and time the member's info was last changed in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_changed")]
		public System.Nullable<System.DateTimeOffset> Last_changed { get; set; }
		
		/// <summary>
		/// The most recent Note added about this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="last_note")]
		public GetSearchMembersReturnFull_searchMembersLast_note Last_note { get; set; }
		
		/// <summary>
		/// The list id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="list_id")]
		public string List_id { get; set; }
		
		/// <summary>
		/// Subscriber location information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public GetSearchMembersReturnFull_searchMembersLocation Location { get; set; }
		
		/// <summary>
		/// The marketing permissions for the subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permissions")]
		public GetSearchMembersReturnFull_searchMembersMarketing_permissions[] GetSearchMembersReturnFull_searchMembersMarketing_permissions { get; set; }
		
		/// <summary>
		/// Star rating for this member, between 1 and 5.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="member_rating")]
		public System.Nullable<System.Int32> Member_rating { get; set; }
		
		/// <summary>
		/// A dictionary of merge fields where the keys are the merge tags. See the [Merge Fields documentation](https://mailchimp.com/developer/marketing/docs/merge-fields/#structure) for more about the structure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="merge_fields")]
		public System.Collections.Generic.Dictionary<string, object> Merge_fields { get; set; }
		
		/// <summary>
		/// The source from which the subscriber was added to this list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		/// <summary>
		/// Open and click rates for this subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="stats")]
		public GetSearchMembersReturnFull_searchMembersStats Stats { get; set; }
		
		/// <summary>
		/// Subscriber's current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GetListsIdMembersStatus Status { get; set; }
		
		/// <summary>
		/// Returns up to 50 tags applied to this member. To retrieve all tags see [Member Tags](https://mailchimp.com/developer/marketing/api/list-member-tags/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public GetSearchMembersReturnFull_searchMembersTags[] GetSearchMembersReturnFull_searchMembersTags { get; set; }
		
		/// <summary>
		/// The number of tags applied to this member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags_count")]
		public System.Nullable<System.Int32> Tags_count { get; set; }
		
		/// <summary>
		/// The date and time the subscriber confirmed their opt-in status in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_opt")]
		public System.Nullable<System.DateTimeOffset> Timestamp_opt { get; set; }
		
		/// <summary>
		/// The date and time the subscriber signed up for the list in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timestamp_signup")]
		public System.Nullable<System.DateTimeOffset> Timestamp_signup { get; set; }
		
		/// <summary>
		/// An identifier for the address across all of Mailchimp.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unique_email_id")]
		public string Unique_email_id { get; set; }
		
		/// <summary>
		/// A subscriber's reason for unsubscribing.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="unsubscribe_reason")]
		public string Unsubscribe_reason { get; set; }
		
		/// <summary>
		/// [VIP status](https://mailchimp.com/help/designate-and-send-to-vip-contacts/) for subscriber.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vip")]
		public System.Nullable<System.Boolean> Vip { get; set; }
		
		/// <summary>
		/// The ID used in the Mailchimp web application. View this member in your Mailchimp account at `https://{dc}.admin.mailchimp.com/lists/members/view?id={web_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="web_id")]
		public System.Nullable<System.Int32> Web_id { get; set; }
	}
	
	public class GetSearchMembersReturnFull_searchMembers_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetSearchMembersReturnFull_searchMembersLast_note
	{
		
		/// <summary>
		/// The date and time the note was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_at")]
		public System.Nullable<System.DateTimeOffset> Created_at { get; set; }
		
		/// <summary>
		/// The author of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The content of the note.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note")]
		public string Note { get; set; }
		
		/// <summary>
		/// The note id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="note_id")]
		public System.Nullable<System.Int32> Note_id { get; set; }
	}
	
	public class GetSearchMembersReturnFull_searchMembersLocation
	{
		
		/// <summary>
		/// The unique code for the location country.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="country_code")]
		public string Country_code { get; set; }
		
		/// <summary>
		/// The offset for timezones where daylight saving time is observed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dstoff")]
		public System.Nullable<System.Int32> Dstoff { get; set; }
		
		/// <summary>
		/// The time difference in hours from GMT.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gmtoff")]
		public System.Nullable<System.Int32> Gmtoff { get; set; }
		
		/// <summary>
		/// The location latitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latitude")]
		public System.Nullable<System.Double> Latitude { get; set; }
		
		/// <summary>
		/// The location longitude.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="longitude")]
		public System.Nullable<System.Double> Longitude { get; set; }
		
		/// <summary>
		/// The region for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="region")]
		public string Region { get; set; }
		
		/// <summary>
		/// The timezone for the location.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezone")]
		public string Timezone { get; set; }
	}
	
	public class GetSearchMembersReturnFull_searchMembersMarketing_permissions
	{
		
		/// <summary>
		/// If the subscriber has opted-in to the marketing permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// The id for the marketing permission on the list
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="marketing_permission_id")]
		public string Marketing_permission_id { get; set; }
		
		/// <summary>
		/// The text of the marketing permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="text")]
		public string Text { get; set; }
	}
	
	public class GetSearchMembersReturnFull_searchMembersStats
	{
		
		/// <summary>
		/// A subscriber's average clickthrough rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_click_rate")]
		public System.Nullable<System.Double> Avg_click_rate { get; set; }
		
		/// <summary>
		/// A subscriber's average open rate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="avg_open_rate")]
		public System.Nullable<System.Double> Avg_open_rate { get; set; }
		
		/// <summary>
		/// Ecommerce stats for the list member if the list is attached to a store.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ecommerce_data")]
		public GetSearchMembersReturnFull_searchMembersStatsEcommerce_data Ecommerce_data { get; set; }
	}
	
	public class GetSearchMembersReturnFull_searchMembersStatsEcommerce_data
	{
		
		/// <summary>
		/// The three-letter ISO 4217 code for the currency that the store accepts.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="currency_code")]
		public string Currency_code { get; set; }
		
		/// <summary>
		/// The total number of orders placed by the list member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="number_of_orders")]
		public System.Nullable<System.Double> Number_of_orders { get; set; }
		
		/// <summary>
		/// The total revenue the list member has brought in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_revenue")]
		public System.Nullable<System.Double> Total_revenue { get; set; }
	}
	
	public class GetSearchMembersReturnFull_searchMembersTags
	{
		
		/// <summary>
		/// The tag id.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the tag
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class GetTemplateFoldersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetTemplateFoldersReturn_links[] GetTemplateFoldersReturn_links { get; set; }
		
		/// <summary>
		/// An array of objects representing template folders.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folders")]
		public GetTemplateFoldersReturnFolders[] GetTemplateFoldersReturnFolders { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetTemplateFoldersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetTemplateFoldersReturnFolders
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetTemplateFoldersReturnFolders_links[] GetTemplateFoldersReturnFolders_links { get; set; }
		
		/// <summary>
		/// The number of templates in the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this template folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class GetTemplateFoldersReturnFolders_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PostTemplateFoldersReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostTemplateFoldersReturn_links[] PostTemplateFoldersReturn_links { get; set; }
		
		/// <summary>
		/// The number of templates in the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this template folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class PostTemplateFoldersReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetTemplateFoldersIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetTemplateFoldersIdReturn_links[] GetTemplateFoldersIdReturn_links { get; set; }
		
		/// <summary>
		/// The number of templates in the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this template folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class GetTemplateFoldersIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchTemplateFoldersIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchTemplateFoldersIdReturn_links[] PatchTemplateFoldersIdReturn_links { get; set; }
		
		/// <summary>
		/// The number of templates in the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// A string that uniquely identifies this template folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The name of the folder.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	public class PatchTemplateFoldersIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public enum GetTemplatesSort_field
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		date_created = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		date_edited = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		name = 2,
	}
	
	public enum GetTemplatesContent_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		html = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		template = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		multichannel = 2,
	}
	
	public class GetTemplatesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetTemplatesReturn_links[] GetTemplatesReturn_links { get; set; }
		
		/// <summary>
		/// All of an account's saved or custom templates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="templates")]
		public GetTemplatesReturnTemplates[] GetTemplatesReturnTemplates { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetTemplatesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetTemplatesReturnTemplates
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetTemplatesReturnTemplates_links[] GetTemplatesReturnTemplates_links { get; set; }
		
		/// <summary>
		/// User templates are not 'deleted,' but rather marked as 'inactive.' Returns whether the template is still active.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="active")]
		public System.Nullable<System.Boolean> Active { get; set; }
		
		/// <summary>
		/// If available, the category the template is listed in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category")]
		public string Category { get; set; }
		
		/// <summary>
		/// How the template's content is put together.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_type")]
		public System.Nullable<GetTemplatesReturnTemplatesContent_type> Content_type { get; set; }
		
		/// <summary>
		/// The login name for template's creator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The date and time the template was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// The date and time the template was edited in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_edited")]
		public System.Nullable<System.DateTimeOffset> Date_edited { get; set; }
		
		/// <summary>
		/// Whether the template uses the drag and drop editor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drag_and_drop")]
		public System.Nullable<System.Boolean> Drag_and_drop { get; set; }
		
		/// <summary>
		/// The login name who last edited the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="edited_by")]
		public string Edited_by { get; set; }
		
		/// <summary>
		/// The id of the folder the template is currently in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public string Folder_id { get; set; }
		
		/// <summary>
		/// The individual id for the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Whether the template contains media queries to make it responsive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="responsive")]
		public System.Nullable<System.Boolean> Responsive { get; set; }
		
		/// <summary>
		/// The URL used for [template sharing](https://mailchimp.com/help/share-a-template/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="share_url")]
		public string Share_url { get; set; }
		
		/// <summary>
		/// If available, the URL for a thumbnail of the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnail")]
		public string Thumbnail { get; set; }
		
		/// <summary>
		/// The type of template (user, base, or gallery).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class GetTemplatesReturnTemplates_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GetTemplatesReturnTemplatesContent_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		template = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		multichannel = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		html = 2,
	}
	
	public class PostTemplatesReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PostTemplatesReturn_links[] PostTemplatesReturn_links { get; set; }
		
		/// <summary>
		/// User templates are not 'deleted,' but rather marked as 'inactive.' Returns whether the template is still active.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="active")]
		public System.Nullable<System.Boolean> Active { get; set; }
		
		/// <summary>
		/// If available, the category the template is listed in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category")]
		public string Category { get; set; }
		
		/// <summary>
		/// How the template's content is put together.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_type")]
		public GetTemplatesReturnTemplatesContent_type Content_type { get; set; }
		
		/// <summary>
		/// The login name for template's creator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The date and time the template was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// The date and time the template was edited in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_edited")]
		public System.Nullable<System.DateTimeOffset> Date_edited { get; set; }
		
		/// <summary>
		/// Whether the template uses the drag and drop editor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drag_and_drop")]
		public System.Nullable<System.Boolean> Drag_and_drop { get; set; }
		
		/// <summary>
		/// The login name who last edited the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="edited_by")]
		public string Edited_by { get; set; }
		
		/// <summary>
		/// The id of the folder the template is currently in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public string Folder_id { get; set; }
		
		/// <summary>
		/// The individual id for the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Whether the template contains media queries to make it responsive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="responsive")]
		public System.Nullable<System.Boolean> Responsive { get; set; }
		
		/// <summary>
		/// The URL used for [template sharing](https://mailchimp.com/help/share-a-template/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="share_url")]
		public string Share_url { get; set; }
		
		/// <summary>
		/// If available, the URL for a thumbnail of the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnail")]
		public string Thumbnail { get; set; }
		
		/// <summary>
		/// The type of template (user, base, or gallery).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class PostTemplatesReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetTemplatesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetTemplatesIdReturn_links[] GetTemplatesIdReturn_links { get; set; }
		
		/// <summary>
		/// User templates are not 'deleted,' but rather marked as 'inactive.' Returns whether the template is still active.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="active")]
		public System.Nullable<System.Boolean> Active { get; set; }
		
		/// <summary>
		/// If available, the category the template is listed in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category")]
		public string Category { get; set; }
		
		/// <summary>
		/// How the template's content is put together.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_type")]
		public GetTemplatesReturnTemplatesContent_type Content_type { get; set; }
		
		/// <summary>
		/// The login name for template's creator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The date and time the template was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// The date and time the template was edited in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_edited")]
		public System.Nullable<System.DateTimeOffset> Date_edited { get; set; }
		
		/// <summary>
		/// Whether the template uses the drag and drop editor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drag_and_drop")]
		public System.Nullable<System.Boolean> Drag_and_drop { get; set; }
		
		/// <summary>
		/// The login name who last edited the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="edited_by")]
		public string Edited_by { get; set; }
		
		/// <summary>
		/// The id of the folder the template is currently in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public string Folder_id { get; set; }
		
		/// <summary>
		/// The individual id for the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Whether the template contains media queries to make it responsive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="responsive")]
		public System.Nullable<System.Boolean> Responsive { get; set; }
		
		/// <summary>
		/// The URL used for [template sharing](https://mailchimp.com/help/share-a-template/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="share_url")]
		public string Share_url { get; set; }
		
		/// <summary>
		/// If available, the URL for a thumbnail of the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnail")]
		public string Thumbnail { get; set; }
		
		/// <summary>
		/// The type of template (user, base, or gallery).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class GetTemplatesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class PatchTemplatesIdReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PatchTemplatesIdReturn_links[] PatchTemplatesIdReturn_links { get; set; }
		
		/// <summary>
		/// User templates are not 'deleted,' but rather marked as 'inactive.' Returns whether the template is still active.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="active")]
		public System.Nullable<System.Boolean> Active { get; set; }
		
		/// <summary>
		/// If available, the category the template is listed in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="category")]
		public string Category { get; set; }
		
		/// <summary>
		/// How the template's content is put together.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="content_type")]
		public GetTemplatesReturnTemplatesContent_type Content_type { get; set; }
		
		/// <summary>
		/// The login name for template's creator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="created_by")]
		public string Created_by { get; set; }
		
		/// <summary>
		/// The date and time the template was created in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_created")]
		public System.Nullable<System.DateTimeOffset> Date_created { get; set; }
		
		/// <summary>
		/// The date and time the template was edited in ISO 8601 format.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="date_edited")]
		public System.Nullable<System.DateTimeOffset> Date_edited { get; set; }
		
		/// <summary>
		/// Whether the template uses the drag and drop editor.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="drag_and_drop")]
		public System.Nullable<System.Boolean> Drag_and_drop { get; set; }
		
		/// <summary>
		/// The login name who last edited the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="edited_by")]
		public string Edited_by { get; set; }
		
		/// <summary>
		/// The id of the folder the template is currently in.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="folder_id")]
		public string Folder_id { get; set; }
		
		/// <summary>
		/// The individual id for the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="id")]
		public System.Nullable<System.Int32> Id { get; set; }
		
		/// <summary>
		/// The name of the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Whether the template contains media queries to make it responsive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="responsive")]
		public System.Nullable<System.Boolean> Responsive { get; set; }
		
		/// <summary>
		/// The URL used for [template sharing](https://mailchimp.com/help/share-a-template/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="share_url")]
		public string Share_url { get; set; }
		
		/// <summary>
		/// If available, the URL for a thumbnail of the template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnail")]
		public string Thumbnail { get; set; }
		
		/// <summary>
		/// The type of template (user, base, or gallery).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class PatchTemplatesIdReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetTemplatesIdDefaultContentReturn
	{
		
		/// <summary>
		/// A list of link types and descriptions for the API schema documents.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public GetTemplatesIdDefaultContentReturn_links[] GetTemplatesIdDefaultContentReturn_links { get; set; }
		
		/// <summary>
		/// The sections that you can edit in the template, including each section's default content.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sections")]
		public System.Collections.Generic.Dictionary<string, object> Sections { get; set; }
	}
	
	public class GetTemplatesIdDefaultContentReturn_links
	{
		
		/// <summary>
		/// This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="href")]
		public string Href { get; set; }
		
		/// <summary>
		/// The HTTP method that should be used when accessing the URL defined in 'href'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="method")]
		public GetRootReturn_linksMethod Method { get; set; }
		
		/// <summary>
		/// As with an HTML 'rel' attribute, this describes the type of link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rel")]
		public string Rel { get; set; }
		
		/// <summary>
		/// For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schema")]
		public string Schema { get; set; }
		
		/// <summary>
		/// For GETs, this is a URL representing the schema that the response should conform to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="targetSchema")]
		public string TargetSchema { get; set; }
	}
	
	public class GetVerifiedDomainsReturn
	{
		
		/// <summary>
		/// The domains on the account
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domains")]
		public GetVerifiedDomainsReturnDomains[] GetVerifiedDomainsReturnDomains { get; set; }
		
		/// <summary>
		/// The total number of items matching the query regardless of pagination.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="total_items")]
		public System.Nullable<System.Int32> Total_items { get; set; }
	}
	
	public class GetVerifiedDomainsReturnDomains
	{
		
		/// <summary>
		/// Whether domain authentication is enabled for this domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticated")]
		public System.Nullable<System.Boolean> Authenticated { get; set; }
		
		/// <summary>
		/// The name of this domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// The e-mail address receiving the two-factor challenge for this domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verification_email")]
		public string Verification_email { get; set; }
		
		/// <summary>
		/// The date/time that the two-factor challenge was sent to the verification email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verification_sent")]
		public System.Nullable<System.DateTimeOffset> Verification_sent { get; set; }
		
		/// <summary>
		/// Whether the domain has been verified for sending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verified")]
		public System.Nullable<System.Boolean> Verified { get; set; }
	}
	
	public class CreateVerifiedDomainPostBody
	{
		
		/// <summary>
		/// The e-mail address at the domain you want to verify. This will receive a two-factor challenge to be used in the verify action.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="verification_email")]
		public string Verification_email { get; set; }
	}
	
	public class CreateVerifiedDomainReturn
	{
		
		/// <summary>
		/// Whether domain authentication is enabled for this domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticated")]
		public System.Nullable<System.Boolean> Authenticated { get; set; }
		
		/// <summary>
		/// The name of this domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// The e-mail address receiving the two-factor challenge for this domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verification_email")]
		public string Verification_email { get; set; }
		
		/// <summary>
		/// The date/time that the two-factor challenge was sent to the verification email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verification_sent")]
		public System.Nullable<System.DateTimeOffset> Verification_sent { get; set; }
		
		/// <summary>
		/// Whether the domain has been verified for sending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verified")]
		public System.Nullable<System.Boolean> Verified { get; set; }
	}
	
	public class GetVerifiedDomainReturn
	{
		
		/// <summary>
		/// Whether domain authentication is enabled for this domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticated")]
		public System.Nullable<System.Boolean> Authenticated { get; set; }
		
		/// <summary>
		/// The name of this domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// The e-mail address receiving the two-factor challenge for this domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verification_email")]
		public string Verification_email { get; set; }
		
		/// <summary>
		/// The date/time that the two-factor challenge was sent to the verification email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verification_sent")]
		public System.Nullable<System.DateTimeOffset> Verification_sent { get; set; }
		
		/// <summary>
		/// Whether the domain has been verified for sending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verified")]
		public System.Nullable<System.Boolean> Verified { get; set; }
	}
	
	public class VerifyDomainPostBody
	{
		
		/// <summary>
		/// The code that was sent to the email address provided when adding a new domain to verify.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
	}
	
	public class VerifyDomainReturn
	{
		
		/// <summary>
		/// Whether domain authentication is enabled for this domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authenticated")]
		public System.Nullable<System.Boolean> Authenticated { get; set; }
		
		/// <summary>
		/// The name of this domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="domain")]
		public string Domain { get; set; }
		
		/// <summary>
		/// The e-mail address receiving the two-factor challenge for this domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verification_email")]
		public string Verification_email { get; set; }
		
		/// <summary>
		/// The date/time that the two-factor challenge was sent to the verification email.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verification_sent")]
		public System.Nullable<System.DateTimeOffset> Verification_sent { get; set; }
		
		/// <summary>
		/// Whether the domain has been verified for sending.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="verified")]
		public System.Nullable<System.Boolean> Verified { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddInstanceFleetOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceFleetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClusterArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddInstanceFleetInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetConfig InstanceFleet { get; set; }
	}
	
	/// <summary>
	/// <p>The configuration that defines an instance fleet.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceFleetConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetType InstanceFleetType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TargetOnDemandCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TargetSpotCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceTypeConfig[] InstanceTypeConfigs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetProvisioningSpecifications LaunchSpecifications { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetResizingSpecifications ResizeSpecifications { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InstanceFleetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MASTER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CORE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TASK = 2,
	}
	
	/// <summary>
	/// <p>An instance type configuration for each instance type in an instance fleet, which determines the Amazon EC2 instances Amazon EMR attempts to provision to fulfill On-Demand and Spot target capacities. When you use an allocation strategy, you can include a maximum of 30 instance type configurations for a fleet. For more information about how to use an allocation strategy, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html">Configure Instance Fleets</a>. Without an allocation strategy, you may specify a maximum of five instance type configurations for a fleet.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceTypeConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WeightedCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BidPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> BidPriceAsPercentageOfOnDemandPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EbsConfiguration EbsConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Configuration[] Configurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomAmiId { get; set; }
	}
	
	/// <summary>
	/// The Amazon EBS configuration of a cluster instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EbsConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EbsBlockDeviceConfig[] EbsBlockDeviceConfigs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EbsOptimized { get; set; }
	}
	
	/// <summary>
	/// Configuration of requested EBS block device associated with the instance group with count of volumes that are associated to every instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EbsBlockDeviceConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VolumeSpecification VolumeSpecification { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VolumesPerInstance { get; set; }
	}
	
	/// <summary>
	/// EBS volume specifications such as volume type, IOPS, size (GiB) and throughput (MiB/s) that are requested for the EBS volume attached to an Amazon EC2 instance in the cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VolumeSpecification
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VolumeType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Iops { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int SizeInGB { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Throughput { get; set; }
	}
	
	/// <summary>
	/// <note> <p>Amazon EMR releases 4.x or later.</p> </note> <p>An optional configuration specification to be used when provisioning cluster instances, which can include configurations for applications and software bundled with Amazon EMR. A configuration consists of a classification, properties, and optional nested configurations. A classification refers to an application-specific configuration file. Properties are the settings you want to change in that file. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html">Configuring Applications</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Configuration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Classification { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Configuration[] Configurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringMap Properties { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StringMap
	{
	}
	
	/// <summary>
	/// <p>The launch specification for Spot Instances in the fleet, which determines the defined duration, provisioning timeout behavior, and allocation strategy.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions. On-Demand and Spot instance allocation strategies are available in Amazon EMR releases 5.12.1 and later.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceFleetProvisioningSpecifications
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SpotProvisioningSpecification SpotSpecification { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OnDemandProvisioningSpecification OnDemandSpecification { get; set; }
	}
	
	/// <summary>
	/// <p>The launch specification for Spot Instances in the instance fleet, which determines the defined duration, provisioning timeout behavior, and allocation strategy.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions. Spot Instance allocation strategy is available in Amazon EMR releases 5.12.1 and later.</p> </note> <note> <p>Spot Instances with a defined duration (also known as Spot blocks) are no longer available to new customers from July 1, 2021. For customers who have previously used the feature, we will continue to support Spot Instances with a defined duration until December 31, 2022. </p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SpotProvisioningSpecification
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int TimeoutDurationMinutes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SpotProvisioningTimeoutAction TimeoutAction { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> BlockDurationMinutes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SpotProvisioningAllocationStrategy AllocationStrategy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SpotProvisioningTimeoutAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SWITCH_TO_ON_DEMAND = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATE_CLUSTER = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SpotProvisioningAllocationStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="capacity-optimized")]
		capacityMinusoptimized = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="price-capacity-optimized")]
		priceMinuscapacityMinusoptimized = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="lowest-price")]
		lowestMinusprice = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		diversified = 3,
	}
	
	/// <summary>
	/// <p> The launch specification for On-Demand Instances in the instance fleet, which determines the allocation strategy. </p> <note> <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions. On-Demand Instances allocation strategy is available in Amazon EMR releases 5.12.1 and later.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OnDemandProvisioningSpecification
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OnDemandProvisioningAllocationStrategy AllocationStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OnDemandCapacityReservationOptions CapacityReservationOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OnDemandProvisioningAllocationStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="lowest-price")]
		lowestMinusprice = 0,
	}
	
	/// <summary>
	/// Describes the strategy for using unused Capacity Reservations for fulfilling On-Demand capacity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OnDemandCapacityReservationOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OnDemandCapacityReservationUsageStrategy UsageStrategy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OnDemandCapacityReservationPreference CapacityReservationPreference { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CapacityReservationResourceGroupArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OnDemandCapacityReservationUsageStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="use-capacity-reservations-first")]
		useMinuscapacityMinusreservationsMinusfirst = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OnDemandCapacityReservationPreference
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		open = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		none = 1,
	}
	
	/// <summary>
	/// The resize specification for On-Demand and Spot Instances in the fleet.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceFleetResizingSpecifications
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SpotResizingSpecification SpotResizeSpecification { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OnDemandResizingSpecification OnDemandResizeSpecification { get; set; }
	}
	
	/// <summary>
	/// The resize specification for Spot Instances in the instance fleet, which contains the resize timeout period. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SpotResizingSpecification
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int TimeoutDurationMinutes { get; set; }
	}
	
	/// <summary>
	/// The resize specification for On-Demand Instances in the instance fleet, which contains the resize timeout period. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OnDemandResizingSpecification
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int TimeoutDurationMinutes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalServerException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidRequestException
	{
	}
	
	/// <summary>
	/// Output from an AddInstanceGroups call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddInstanceGroupsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string JobFlowId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InstanceGroupIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClusterArn { get; set; }
	}
	
	/// <summary>
	/// Input to an AddInstanceGroups call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddInstanceGroupsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InstanceGroupConfig[] InstanceGroups { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string JobFlowId { get; set; }
	}
	
	/// <summary>
	/// Configuration defining a new instance group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceGroupConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MarketType Market { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetType InstanceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BidPrice { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int InstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Configuration[] Configurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EbsConfiguration EbsConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingPolicy AutoScalingPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomAmiId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MarketType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ON_DEMAND = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPOT = 1,
	}
	
	/// <summary>
	/// An automatic scaling policy for a core instance group or task instance group in an Amazon EMR cluster. An automatic scaling policy defines how an instance group dynamically adds and terminates Amazon EC2 instances in response to the value of a CloudWatch metric. See <a>PutAutoScalingPolicy</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoScalingPolicy
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalingConstraints Constraints { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalingRule[] Rules { get; set; }
	}
	
	/// <summary>
	/// The upper and lower Amazon EC2 instance limits for an automatic scaling policy. Automatic scaling activities triggered by automatic scaling rules will not cause an instance group to grow above or below these limits.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScalingConstraints
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MinCapacity { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MaxCapacity { get; set; }
	}
	
	/// <summary>
	/// A scale-in or scale-out rule that defines scaling activity, including the CloudWatch metric alarm that triggers activity, how Amazon EC2 instances are added or removed, and the periodicity of adjustments. The automatic scaling policy for an instance group can comprise one or more automatic scaling rules.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScalingRule
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalingAction Action { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalingTrigger Trigger { get; set; }
	}
	
	/// <summary>
	/// The type of adjustment the automatic scaling activity makes when triggered, and the periodicity of the adjustment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScalingAction
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MarketType Market { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SimpleScalingPolicyConfiguration SimpleScalingPolicyConfiguration { get; set; }
	}
	
	/// <summary>
	/// An automatic scaling configuration, which describes how the policy adds or removes instances, the cooldown period, and the number of Amazon EC2 instances that will be added each time the CloudWatch metric alarm condition is satisfied.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SimpleScalingPolicyConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AdjustmentType AdjustmentType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ScalingAdjustment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CoolDown { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AdjustmentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CHANGE_IN_CAPACITY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERCENT_CHANGE_IN_CAPACITY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXACT_CAPACITY = 2,
	}
	
	/// <summary>
	/// The conditions that trigger an automatic scaling activity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScalingTrigger
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchAlarmDefinition CloudWatchAlarmDefinition { get; set; }
	}
	
	/// <summary>
	/// The definition of a CloudWatch metric alarm, which determines when an automatic scaling activity is triggered. When the defined alarm conditions are satisfied, scaling activity begins.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudWatchAlarmDefinition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ComparisonOperator ComparisonOperator { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> EvaluationPeriods { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MetricName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Namespace { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int Period { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Statistic Statistic { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double Threshold { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Unit Unit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MetricDimension[] Dimensions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ComparisonOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GREATER_THAN_OR_EQUAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GREATER_THAN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LESS_THAN = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LESS_THAN_OR_EQUAL = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Statistic
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAMPLE_COUNT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AVERAGE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MINIMUM = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAXIMUM = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Unit
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SECONDS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MICRO_SECONDS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MILLI_SECONDS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BYTES = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KILO_BYTES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEGA_BYTES = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GIGA_BYTES = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERA_BYTES = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BITS = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KILO_BITS = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEGA_BITS = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GIGA_BITS = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERA_BITS = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERCENT = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNT = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BYTES_PER_SECOND = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KILO_BYTES_PER_SECOND = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEGA_BYTES_PER_SECOND = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GIGA_BYTES_PER_SECOND = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERA_BYTES_PER_SECOND = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BITS_PER_SECOND = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KILO_BITS_PER_SECOND = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEGA_BITS_PER_SECOND = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GIGA_BITS_PER_SECOND = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERA_BITS_PER_SECOND = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COUNT_PER_SECOND = 26,
	}
	
	/// <summary>
	/// A CloudWatch dimension, which is specified using a <code>Key</code> (known as a <code>Name</code> in CloudWatch), <code>Value</code> pair. By default, Amazon EMR uses one dimension whose <code>Key</code> is <code>JobFlowID</code> and <code>Value</code> is a variable representing the cluster ID, which is <code>${emr.clusterId}</code>. This enables the rule to bootstrap when the cluster ID becomes available.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MetricDimension
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalServerError
	{
	}
	
	/// <summary>
	///  The output for the <a>AddJobFlowSteps</a> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddJobFlowStepsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StepIds { get; set; }
	}
	
	/// <summary>
	///  The input argument to the <a>AddJobFlowSteps</a> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddJobFlowStepsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string JobFlowId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StepConfig[] Steps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
	}
	
	/// <summary>
	/// Specification for a cluster (job flow) step.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StepConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActionOnFailure ActionOnFailure { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HadoopJarStepConfig HadoopJarStep { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ActionOnFailure
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATE_JOB_FLOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATE_CLUSTER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCEL_AND_WAIT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTINUE = 3,
	}
	
	/// <summary>
	/// A job flow step consisting of a JAR file whose main function will be executed. The main function submits a job for Hadoop to execute and waits for the job to finish or fail.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HadoopJarStepConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public KeyValue[] Properties { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Jar { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MainClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Args { get; set; }
	}
	
	/// <summary>
	/// A key-value pair.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KeyValue
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// This output indicates the result of adding tags to a resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddTagsOutput
	{
	}
	
	/// <summary>
	/// This input identifies an Amazon EMR resource and a list of tags to attach.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddTagsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// A key-value pair containing user-defined metadata that you can associate with an Amazon EMR resource. Tags make it easier to associate clusters in various ways, such as grouping clusters to track your Amazon EMR resource allocation costs. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-tags.html">Tag Clusters</a>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tag
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	/// <summary>
	///  The output for the <a>CancelSteps</a> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelStepsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CancelStepsInfo[] CancelStepsInfoList { get; set; }
	}
	
	/// <summary>
	/// Specification of the status of a CancelSteps request. Available only in Amazon EMR version 4.8.0 and later, excluding version 5.0.0.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelStepsInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StepId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CancelStepsRequestStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Reason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CancelStepsRequestStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBMITTED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 1,
	}
	
	/// <summary>
	/// The input argument to the <a>CancelSteps</a> operation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CancelStepsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] StepIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StepCancellationOption StepCancellationOption { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StepCancellationOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEND_INTERRUPT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATE_PROCESS = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSecurityConfigurationOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationDateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateSecurityConfigurationInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecurityConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateStudioOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StudioId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateStudioInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AuthMode AuthMode { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ServiceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserRole { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string WorkspaceSecurityGroupId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EngineSecurityGroupId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DefaultS3Location { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdpAuthUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdpRelayStateParameterName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AuthMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SSO = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IAM = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateStudioSessionMappingInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StudioId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IdentityType IdentityType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SessionPolicyArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IdentityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GROUP = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSecurityConfigurationOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSecurityConfigurationInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteStudioInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StudioId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteStudioSessionMappingInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StudioId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IdentityType IdentityType { get; set; }
	}
	
	/// <summary>
	/// This output contains the description of the cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeClusterOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Cluster Cluster { get; set; }
	}
	
	/// <summary>
	/// The detailed description of the cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Cluster
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClusterStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Ec2InstanceAttributes Ec2InstanceAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceCollectionType InstanceCollectionType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogEncryptionKmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RequestedAmiVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RunningAmiVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReleaseLabel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoTerminate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> TerminationProtected { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> VisibleToAllUsers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Application[] Applications { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServiceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NormalizedInstanceHours { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterPublicDnsName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Configuration[] Configurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecurityConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AutoScalingRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScaleDownBehavior ScaleDownBehavior { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomAmiId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> EbsRootVolumeSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RepoUpgradeOnBoot RepoUpgradeOnBoot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KerberosAttributes KerberosAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClusterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OutpostArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StepConcurrencyLevel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PlacementGroupConfig[] PlacementGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OSReleaseLabel { get; set; }
	}
	
	/// <summary>
	/// The detailed status of the cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClusterStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ClusterState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClusterStateChangeReason StateChangeReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClusterTimeline Timeline { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ErrorDetail[] ErrorDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ClusterState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOOTSTRAPPING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WAITING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATED_WITH_ERRORS = 6,
	}
	
	/// <summary>
	/// The reason that the cluster changed to its current state.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClusterStateChangeReason
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ClusterStateChangeReasonCode Code { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ClusterStateChangeReasonCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_ERROR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATION_ERROR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTANCE_FAILURE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTANCE_FLEET_TIMEOUT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOOTSTRAP_FAILURE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER_REQUEST = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STEP_FAILURE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_STEPS_COMPLETED = 7,
	}
	
	/// <summary>
	/// Represents the timeline of the cluster's lifecycle.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClusterTimeline
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ReadyDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndDateTime { get; set; }
	}
	
	/// <summary>
	/// A tuple that provides information about an error that caused a cluster to terminate.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ErrorDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringMap[] ErrorData { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
	}
	
	/// <summary>
	/// Provides information about the Amazon EC2 instances in a cluster grouped by category. For example, key name, subnet ID, IAM instance profile, and so on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Ec2InstanceAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Ec2KeyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Ec2SubnetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RequestedEc2SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Ec2AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RequestedEc2AvailabilityZones { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IamInstanceProfile { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EmrManagedMasterSecurityGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EmrManagedSlaveSecurityGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServiceAccessSecurityGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AdditionalMasterSecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AdditionalSlaveSecurityGroups { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InstanceCollectionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTANCE_FLEET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTANCE_GROUP = 1,
	}
	
	/// <summary>
	/// <p>With Amazon EMR release version 4.0 and later, the only accepted parameter is the application name. To pass arguments to applications, you use configuration classifications specified using configuration JSON objects. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html">Configuring Applications</a>.</p> <p>With earlier Amazon EMR releases, the application is any Amazon or third-party software that you can add to the cluster. This structure contains a list of strings that indicates the software to use with the cluster and accepts a user argument list. Amazon EMR accepts and forwards the argument list to the corresponding installation script as bootstrap action argument.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Application
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Args { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringMap AdditionalInfo { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ScaleDownBehavior
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATE_AT_INSTANCE_HOUR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATE_AT_TASK_COMPLETION = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RepoUpgradeOnBoot
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SECURITY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 1,
	}
	
	/// <summary>
	/// Attributes for Kerberos configuration when Kerberos authentication is enabled using a security configuration. For more information see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-kerberos.html">Use Kerberos Authentication</a> in the <i>Amazon EMR Management Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KerberosAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Realm { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string KdcAdminPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CrossRealmTrustPrincipalPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ADDomainJoinUser { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ADDomainJoinPassword { get; set; }
	}
	
	/// <summary>
	/// <p>Placement group configuration for an Amazon EMR cluster. The configuration specifies the placement strategy that can be applied to instance roles during cluster creation.</p> <p>To use this configuration, consider attaching managed policy AmazonElasticMapReducePlacementGroupPolicy to the Amazon EMR role.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PlacementGroupConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetType InstanceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PlacementGroupStrategy PlacementStrategy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PlacementGroupStrategy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPREAD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARTITION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLUSTER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 3,
	}
	
	/// <summary>
	/// This input determines which cluster to describe.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeClusterInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
	}
	
	/// <summary>
	///  The output for the <a>DescribeJobFlows</a> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeJobFlowsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public JobFlowDetail[] JobFlows { get; set; }
	}
	
	/// <summary>
	/// A description of a cluster (job flow).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobFlowDetail
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string JobFlowId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogEncryptionKmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AmiVersion { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JobFlowExecutionStatusDetail ExecutionStatusDetail { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JobFlowInstancesDetail Instances { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StepDetail[] Steps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BootstrapActionDetail[] BootstrapActions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SupportedProducts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> VisibleToAllUsers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string JobFlowRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServiceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AutoScalingRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScaleDownBehavior ScaleDownBehavior { get; set; }
	}
	
	/// <summary>
	/// Describes the status of the cluster (job flow).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobFlowExecutionStatusDetail
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JobFlowExecutionState State { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ReadyDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastStateChangeReason { get; set; }
	}
	
	/// <summary>
	/// The type of instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JobFlowExecutionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOOTSTRAPPING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WAITING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHUTTING_DOWN = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 7,
	}
	
	/// <summary>
	/// Specify the type of Amazon EC2 instances that the cluster (job flow) runs on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobFlowInstancesDetail
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MasterInstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterPublicDnsName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterInstanceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SlaveInstanceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int InstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceGroupDetail[] InstanceGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NormalizedInstanceHours { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Ec2KeyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Ec2SubnetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PlacementType Placement { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> KeepJobFlowAliveWhenNoSteps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> TerminationProtected { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HadoopVersion { get; set; }
	}
	
	/// <summary>
	/// Detailed information about an instance group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceGroupDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MarketType Market { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetType InstanceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BidPrice { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int InstanceRequestCount { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int InstanceRunningCount { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InstanceGroupState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastStateChangeReason { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ReadyDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomAmiId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InstanceGroupState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROVISIONING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOOTSTRAPPING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECONFIGURING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESIZING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUSPENDED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATING = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ARRESTED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHUTTING_DOWN = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENDED = 10,
	}
	
	/// <summary>
	/// The Amazon EC2 Availability Zone configuration of the cluster (job flow).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PlacementType
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AvailabilityZone { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AvailabilityZones { get; set; }
	}
	
	/// <summary>
	/// Combines the execution state and configuration of a step.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StepDetail
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StepConfig StepConfig { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StepExecutionStatusDetail ExecutionStatusDetail { get; set; }
	}
	
	/// <summary>
	/// The execution state of a step.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StepExecutionStatusDetail
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StepExecutionState State { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastStateChangeReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StepExecutionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTINUE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERRUPTED = 6,
	}
	
	/// <summary>
	/// Reports the configuration of a bootstrap action in a cluster (job flow).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BootstrapActionDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BootstrapActionConfig BootstrapActionConfig { get; set; }
	}
	
	/// <summary>
	/// Configuration of a bootstrap action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BootstrapActionConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScriptBootstrapActionConfig ScriptBootstrapAction { get; set; }
	}
	
	/// <summary>
	/// Configuration of the script to run during a bootstrap action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ScriptBootstrapActionConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Path { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Args { get; set; }
	}
	
	/// <summary>
	///  The input for the <a>DescribeJobFlows</a> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeJobFlowsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] JobFlowIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JobFlowExecutionState[] JobFlowStates { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeNotebookExecutionOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NotebookExecution NotebookExecution { get; set; }
	}
	
	/// <summary>
	/// A notebook execution. An execution is a specific instance that an Amazon EMR Notebook is run using the <code>StartNotebookExecution</code> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotebookExecution
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NotebookExecutionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EditorId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExecutionEngineConfig ExecutionEngine { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NotebookExecutionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NotebookParams { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotebookExecutionStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OutputNotebookURI { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LastStateChangeReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NotebookInstanceSecurityGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotebookS3LocationForOutput NotebookS3Location { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutputNotebookS3LocationForOutput OutputNotebookS3Location { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutputNotebookFormat OutputNotebookFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentVariablesMap EnvironmentVariables { get; set; }
	}
	
	/// <summary>
	/// Specifies the execution engine (cluster) to run the notebook and perform the notebook execution, for example, an Amazon EMR cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ExecutionEngineConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ExecutionEngineType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterInstanceSecurityGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ExecutionEngineType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMR = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum NotebookExecutionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		START_PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FINISHING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FINISHED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOP_PENDING = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPING = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPED = 9,
	}
	
	/// <summary>
	/// The Amazon S3 location that stores the notebook execution input.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotebookS3LocationForOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
	}
	
	/// <summary>
	/// The Amazon S3 location that stores the notebook execution output.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OutputNotebookS3LocationForOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum OutputNotebookFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HTML = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EnvironmentVariablesMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeNotebookExecutionInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string NotebookExecutionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeReleaseLabelOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReleaseLabel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SimplifiedApplication[] Applications { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OSRelease[] AvailableOSReleases { get; set; }
	}
	
	/// <summary>
	/// The returned release label application names or versions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SimplifiedApplication
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// The Amazon Linux release specified for a cluster in the RunJobFlow request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OSRelease
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Label { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeReleaseLabelInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReleaseLabel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeSecurityConfigurationOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecurityConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationDateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeSecurityConfigurationInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// This output contains the description of the cluster step.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStepOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Step Step { get; set; }
	}
	
	/// <summary>
	/// This represents a step in a cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Step
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HadoopStepConfig Config { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActionOnFailure ActionOnFailure { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StepStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
	}
	
	/// <summary>
	/// A cluster step consisting of a JAR file whose main function will be executed. The main function submits a job for Hadoop to execute and waits for the job to finish or fail.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HadoopStepConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Jar { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StringMap Properties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MainClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Args { get; set; }
	}
	
	/// <summary>
	/// The execution status details of the cluster step.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StepStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StepState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StepStateChangeReason StateChangeReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FailureDetails FailureDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StepTimeline Timeline { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StepState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCEL_PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERRUPTED = 6,
	}
	
	/// <summary>
	/// The details of the step state change reason.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StepStateChangeReason
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StepStateChangeReasonCode Code { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StepStateChangeReasonCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
	}
	
	/// <summary>
	/// The details of the step failure. The service attempts to detect the root cause for many common failures.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FailureDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Reason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogFile { get; set; }
	}
	
	/// <summary>
	/// The timeline of the cluster step lifecycle.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StepTimeline
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndDateTime { get; set; }
	}
	
	/// <summary>
	/// This input determines which step to describe.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStepInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StepId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStudioOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Studio Studio { get; set; }
	}
	
	/// <summary>
	/// Details for an Amazon EMR Studio including ID, creation time, name, and so on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Studio
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StudioId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StudioArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AuthMode AuthMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServiceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UserRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WorkspaceSecurityGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EngineSecurityGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultS3Location { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdpAuthUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdpRelayStateParameterName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeStudioInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StudioId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAutoTerminationPolicyOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTerminationPolicy AutoTerminationPolicy { get; set; }
	}
	
	/// <summary>
	/// An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. For alternative cluster termination options, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-termination.html">Control cluster termination</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoTerminationPolicy
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> IdleTimeout { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAutoTerminationPolicyInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetBlockPublicAccessConfigurationOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BlockPublicAccessConfiguration BlockPublicAccessConfiguration { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BlockPublicAccessConfigurationMetadata BlockPublicAccessConfigurationMetadata { get; set; }
	}
	
	/// <summary>
	/// A configuration for Amazon EMR block public access. When <code>BlockPublicSecurityGroupRules</code> is set to <code>true</code>, Amazon EMR prevents cluster creation if one of the cluster's security groups has a rule that allows inbound traffic from 0.0.0.0/0 or ::/0 on a port, unless the port is specified as an exception using <code>PermittedPublicSecurityGroupRuleRanges</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BlockPublicAccessConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool BlockPublicSecurityGroupRules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PortRange[] PermittedPublicSecurityGroupRuleRanges { get; set; }
	}
	
	/// <summary>
	/// A list of port ranges that are permitted to allow inbound traffic from all public IP addresses. To specify a single port, use the same value for <code>MinRange</code> and <code>MaxRange</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PortRange
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MinRange { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxRange { get; set; }
	}
	
	/// <summary>
	/// Properties that describe the Amazon Web Services principal that created the <code>BlockPublicAccessConfiguration</code> using the <code>PutBlockPublicAccessConfiguration</code> action as well as the date and time that the configuration was created. Each time a configuration for block public access is updated, Amazon EMR updates this metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BlockPublicAccessConfigurationMetadata
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationDateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CreatedByArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetBlockPublicAccessConfigurationInput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetClusterSessionCredentialsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Credentials Credentials { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ExpiresAt { get; set; }
	}
	
	/// <summary>
	/// The credentials that you can use to connect to cluster endpoints. Credentials consist of a username and a password.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Credentials
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UsernamePassword UsernamePassword { get; set; }
	}
	
	/// <summary>
	/// The username and password that you use to connect to cluster endpoints.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UsernamePassword
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Username { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Password { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetClusterSessionCredentialsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionRoleArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetManagedScalingPolicyOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ManagedScalingPolicy ManagedScalingPolicy { get; set; }
	}
	
	/// <summary>
	///  Managed scaling policy for an Amazon EMR cluster. The policy specifies the limits for resources that can be added or terminated from a cluster. The policy only applies to the core and task nodes. The master node cannot be scaled after initial configuration. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ManagedScalingPolicy
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ComputeLimits ComputeLimits { get; set; }
	}
	
	/// <summary>
	///  The Amazon EC2 unit limits for a managed scaling policy. The managed scaling activity of a cluster can not be above or below these limits. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ComputeLimits
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ComputeLimitsUnitType UnitType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MinimumCapacityUnits { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MaximumCapacityUnits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumOnDemandCapacityUnits { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaximumCoreCapacityUnits { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ComputeLimitsUnitType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InstanceFleetUnits = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Instances = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VCPU = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetManagedScalingPolicyInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetStudioSessionMappingOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SessionMappingDetail SessionMapping { get; set; }
	}
	
	/// <summary>
	/// Details for an Amazon EMR Studio session mapping including creation time, user or group ID, Studio ID, and so on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SessionMappingDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StudioId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IdentityType IdentityType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SessionPolicyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastModifiedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetStudioSessionMappingInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StudioId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IdentityType IdentityType { get; set; }
	}
	
	/// <summary>
	/// This output contains the bootstrap actions detail.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListBootstrapActionsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Command[] BootstrapActions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// An entity describing an executable that runs on a cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Command
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ScriptPath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Args { get; set; }
	}
	
	/// <summary>
	/// This input determines which bootstrap actions to retrieve.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListBootstrapActionsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// This contains a ClusterSummaryList with the cluster details; for example, the cluster IDs, names, and status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListClustersOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ClusterSummary[] Clusters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// The summary description of the cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClusterSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClusterStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NormalizedInstanceHours { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClusterArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OutpostArn { get; set; }
	}
	
	/// <summary>
	/// This input determines how the ListClusters action filters the list of clusters that it returns.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListClustersInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedAfter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedBefore { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ClusterState[] ClusterStates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInstanceFleetsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleet[] InstanceFleets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// <p>Describes an instance fleet, which is a group of Amazon EC2 instances that host a particular node type (master, core, or task) in an Amazon EMR cluster. Instance fleets can consist of a mix of instance types and On-Demand and Spot Instances, which are provisioned to meet a defined target capacity. </p> <note> <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceFleet
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetType InstanceFleetType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TargetOnDemandCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TargetSpotCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ProvisionedOnDemandCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ProvisionedSpotCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceTypeSpecification[] InstanceTypeSpecifications { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetProvisioningSpecifications LaunchSpecifications { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetResizingSpecifications ResizeSpecifications { get; set; }
	}
	
	/// <summary>
	/// <p>The status of the instance fleet.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceFleetStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetStateChangeReason StateChangeReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetTimeline Timeline { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InstanceFleetState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROVISIONING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOOTSTRAPPING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESIZING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUSPENDED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATED = 6,
	}
	
	/// <summary>
	/// <p>Provides status change reason details for the instance fleet.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceFleetStateChangeReason
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetStateChangeReasonCode Code { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InstanceFleetStateChangeReasonCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_ERROR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATION_ERROR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTANCE_FAILURE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLUSTER_TERMINATED = 3,
	}
	
	/// <summary>
	/// <p>Provides historical timestamps for the instance fleet, including the time of creation, the time it became ready to run jobs, and the time of termination.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceFleetTimeline
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ReadyDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndDateTime { get; set; }
	}
	
	/// <summary>
	/// <p>The configuration specification for each instance type in an instance fleet.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceTypeSpecification
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> WeightedCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BidPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> BidPriceAsPercentageOfOnDemandPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Configuration[] Configurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EbsBlockDevice[] EbsBlockDevices { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EbsOptimized { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomAmiId { get; set; }
	}
	
	/// <summary>
	/// Configuration of requested EBS block device associated with the instance group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EbsBlockDevice
	{
		
		[System.Runtime.Serialization.DataMember()]
		public VolumeSpecification VolumeSpecification { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Device { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInstanceFleetsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// This input determines which instance groups to retrieve.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInstanceGroupsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceGroup[] InstanceGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// This entity represents an instance group, which is a group of instances that have common purpose. For example, CORE instance group is used for HDFS.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MarketType Market { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetType InstanceGroupType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BidPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RequestedInstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> RunningInstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceGroupStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Configuration[] Configurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ConfigurationsVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Configuration[] LastSuccessfullyAppliedConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LastSuccessfullyAppliedConfigurationsVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EbsBlockDevice[] EbsBlockDevices { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EbsOptimized { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ShrinkPolicy ShrinkPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingPolicyDescription AutoScalingPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomAmiId { get; set; }
	}
	
	/// <summary>
	/// The details of the instance group status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceGroupStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceGroupState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceGroupStateChangeReason StateChangeReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceGroupTimeline Timeline { get; set; }
	}
	
	/// <summary>
	/// The status change reason details for the instance group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceGroupStateChangeReason
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetStateChangeReasonCode Code { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// The timeline of the instance group lifecycle.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceGroupTimeline
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ReadyDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndDateTime { get; set; }
	}
	
	/// <summary>
	/// Policy for customizing shrink operations. Allows configuration of decommissioning timeout and targeted instance shrinking.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ShrinkPolicy
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> DecommissionTimeout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceResizePolicy InstanceResizePolicy { get; set; }
	}
	
	/// <summary>
	/// Custom policy for requesting termination protection or termination of specific instances when shrinking an instance group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceResizePolicy
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InstancesToTerminate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InstancesToProtect { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InstanceTerminationTimeout { get; set; }
	}
	
	/// <summary>
	/// An automatic scaling policy for a core instance group or task instance group in an Amazon EMR cluster. The automatic scaling policy defines how an instance group dynamically adds and terminates Amazon EC2 instances in response to the value of a CloudWatch metric. See <a>PutAutoScalingPolicy</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoScalingPolicyDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingPolicyStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScalingConstraints Constraints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScalingRule[] Rules { get; set; }
	}
	
	/// <summary>
	/// The status of an automatic scaling policy. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoScalingPolicyStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingPolicyState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingPolicyStateChangeReason StateChangeReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AutoScalingPolicyState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTACHING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ATTACHED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DETACHING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DETACHED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 5,
	}
	
	/// <summary>
	/// The reason for an <a>AutoScalingPolicyStatus</a> change.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AutoScalingPolicyStateChangeReason
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingPolicyStateChangeReasonCode Code { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AutoScalingPolicyStateChangeReasonCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER_REQUEST = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROVISION_FAILURE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLEANUP_FAILURE = 2,
	}
	
	/// <summary>
	/// This input determines which instance groups to retrieve.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInstanceGroupsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// This output contains the list of instances.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInstancesOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Instance[] Instances { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// Represents an Amazon EC2 instance provisioned as part of cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Instance
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Ec2InstanceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublicDnsName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PublicIpAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrivateDnsName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrivateIpAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceFleetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MarketType Market { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EbsVolume[] EbsVolumes { get; set; }
	}
	
	/// <summary>
	/// The instance status details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceStatus
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceStateChangeReason StateChangeReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceTimeline Timeline { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InstanceState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWAITING_FULFILLMENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROVISIONING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOOTSTRAPPING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATED = 4,
	}
	
	/// <summary>
	/// The details of the status change reason for the instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceStateChangeReason
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceStateChangeReasonCode Code { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InstanceStateChangeReasonCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_ERROR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATION_ERROR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTANCE_FAILURE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOOTSTRAP_FAILURE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLUSTER_TERMINATED = 4,
	}
	
	/// <summary>
	/// The timeline of the instance lifecycle.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceTimeline
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ReadyDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndDateTime { get; set; }
	}
	
	/// <summary>
	/// EBS block device that's attached to an Amazon EC2 instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EbsVolume
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Device { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VolumeId { get; set; }
	}
	
	/// <summary>
	/// This input determines which instances to list.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInstancesInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceGroupType[] InstanceGroupTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceFleetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetType InstanceFleetType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceState[] InstanceStates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InstanceGroupType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MASTER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CORE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TASK = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListNotebookExecutionsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NotebookExecutionSummary[] NotebookExecutions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// Details for a notebook execution. The details include information such as the unique ID and status of the notebook execution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotebookExecutionSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NotebookExecutionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EditorId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NotebookExecutionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotebookExecutionStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotebookS3LocationForOutput NotebookS3Location { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionEngineId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListNotebookExecutionsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EditorId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotebookExecutionStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset From { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset To { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExecutionEngineId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListReleaseLabelsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ReleaseLabels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListReleaseLabelsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ReleaseLabelFilter Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	/// <summary>
	/// The release label filters by application or version prefix.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReleaseLabelFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Prefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Application { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSecurityConfigurationsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SecurityConfigurationSummary[] SecurityConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// The creation date and time, and name, of a security configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SecurityConfigurationSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationDateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSecurityConfigurationsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// This output contains the list of steps returned in reverse order. This means that the last step is the first element in the list.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStepsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StepSummary[] Steps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// The summary of the cluster step.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StepSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HadoopStepConfig Config { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ActionOnFailure ActionOnFailure { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StepStatus Status { get; set; }
	}
	
	/// <summary>
	/// This input determines which steps to list.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStepsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StepState[] StepStates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StepIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStudioSessionMappingsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SessionMappingSummary[] SessionMappings { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// Details for an Amazon EMR Studio session mapping. The details do not include the time the session mapping was last modified.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SessionMappingSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StudioId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IdentityType IdentityType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SessionPolicyArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStudioSessionMappingsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StudioId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public IdentityType IdentityType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStudiosOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StudioSummary[] Studios { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// Details for an Amazon EMR Studio, including ID, Name, VPC, and Description. The details do not include subnets, IAM roles, security groups, or tags associated with the Studio.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StudioSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StudioId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AuthMode AuthMode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreationTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListStudiosInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSupportedInstanceTypesOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SupportedInstanceType[] SupportedInstanceTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	/// <summary>
	/// An instance type that the specified Amazon EMR release supports.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SupportedInstanceType
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public float MemoryGB { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StorageGB { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> VCPU { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Is64BitsOnly { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceFamilyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EbsOptimizedAvailable { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EbsOptimizedByDefault { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumberOfDisks { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EbsStorageOnly { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Architecture { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSupportedInstanceTypesInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReleaseLabel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Marker { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyClusterOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StepConcurrencyLevel { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyClusterInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StepConcurrencyLevel { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyInstanceFleetInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetModifyConfig InstanceFleet { get; set; }
	}
	
	/// <summary>
	/// <p>Configuration parameters for an instance fleet modification request.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceFleetModifyConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceFleetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TargetOnDemandCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> TargetSpotCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetResizingSpecifications ResizeSpecifications { get; set; }
	}
	
	/// <summary>
	/// Change the size of some instance groups.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ModifyInstanceGroupsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceGroupModifyConfig[] InstanceGroups { get; set; }
	}
	
	/// <summary>
	/// Modify the size or configurations of an instance group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InstanceGroupModifyConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] EC2InstanceIdsToTerminate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ShrinkPolicy ShrinkPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReconfigurationType ReconfigurationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Configuration[] Configurations { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ReconfigurationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OVERWRITE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MERGE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutAutoScalingPolicyOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InstanceGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingPolicyDescription AutoScalingPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClusterArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutAutoScalingPolicyInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceGroupId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AutoScalingPolicy AutoScalingPolicy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutAutoTerminationPolicyOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutAutoTerminationPolicyInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AutoTerminationPolicy AutoTerminationPolicy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutBlockPublicAccessConfigurationOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutBlockPublicAccessConfigurationInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BlockPublicAccessConfiguration BlockPublicAccessConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutManagedScalingPolicyOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutManagedScalingPolicyInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ManagedScalingPolicy ManagedScalingPolicy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveAutoScalingPolicyOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveAutoScalingPolicyInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InstanceGroupId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveAutoTerminationPolicyOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveAutoTerminationPolicyInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveManagedScalingPolicyOutput
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveManagedScalingPolicyInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ClusterId { get; set; }
	}
	
	/// <summary>
	/// This output indicates the result of removing tags from the resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveTagsOutput
	{
	}
	
	/// <summary>
	/// This input identifies an Amazon EMR resource and a list of tags to remove.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RemoveTagsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] TagKeys { get; set; }
	}
	
	/// <summary>
	///  The result of the <a>RunJobFlow</a> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RunJobFlowOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string JobFlowId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClusterArn { get; set; }
	}
	
	/// <summary>
	///  Input to the <a>RunJobFlow</a> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RunJobFlowInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogUri { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogEncryptionKmsKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AdditionalInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AmiVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReleaseLabel { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public JobFlowInstancesConfig Instances { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StepConfig[] Steps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BootstrapActionConfig[] BootstrapActions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SupportedProducts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SupportedProductConfig[] NewSupportedProducts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Application[] Applications { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Configuration[] Configurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> VisibleToAllUsers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string JobFlowRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServiceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecurityConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AutoScalingRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScaleDownBehavior ScaleDownBehavior { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomAmiId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> EbsRootVolumeSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RepoUpgradeOnBoot RepoUpgradeOnBoot { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KerberosAttributes KerberosAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StepConcurrencyLevel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ManagedScalingPolicy ManagedScalingPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PlacementGroupConfig[] PlacementGroupConfigs { get; set; }
		
		/// <summary>
		/// An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. For alternative cluster termination options, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-termination.html">Control cluster termination</a>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AutoTerminationPolicy AutoTerminationPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OSReleaseLabel { get; set; }
	}
	
	/// <summary>
	/// A description of the Amazon EC2 instance on which the cluster (job flow) runs. A valid JobFlowInstancesConfig must contain either InstanceGroups or InstanceFleets. They cannot be used together. You may also have MasterInstanceType, SlaveInstanceType, and InstanceCount (all three must be present), but we don't recommend this configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JobFlowInstancesConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MasterInstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SlaveInstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InstanceCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceGroupConfig[] InstanceGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InstanceFleetConfig[] InstanceFleets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Ec2KeyName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PlacementType Placement { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> KeepJobFlowAliveWhenNoSteps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> TerminationProtected { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string HadoopVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Ec2SubnetId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Ec2SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EmrManagedMasterSecurityGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EmrManagedSlaveSecurityGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServiceAccessSecurityGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AdditionalMasterSecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AdditionalSlaveSecurityGroups { get; set; }
	}
	
	/// <summary>
	/// The list of supported product configurations that allow user-supplied arguments. Amazon EMR accepts these arguments and forwards them to the corresponding installation script as bootstrap action arguments.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SupportedProductConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Args { get; set; }
	}
	
	/// <summary>
	///  The input argument to the <a>TerminationProtection</a> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetTerminationProtectionInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] JobFlowIds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool TerminationProtected { get; set; }
	}
	
	/// <summary>
	/// The input to the SetVisibleToAllUsers action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetVisibleToAllUsersInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] JobFlowIds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool VisibleToAllUsers { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartNotebookExecutionOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NotebookExecutionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartNotebookExecutionInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EditorId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RelativePath { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NotebookExecutionName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NotebookParams { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ExecutionEngineConfig ExecutionEngine { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ServiceRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NotebookInstanceSecurityGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotebookS3LocationFromInput NotebookS3Location { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutputNotebookS3LocationFromInput OutputNotebookS3Location { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutputNotebookFormat OutputNotebookFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentVariablesMap EnvironmentVariables { get; set; }
	}
	
	/// <summary>
	/// The Amazon S3 location that stores the notebook execution input.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotebookS3LocationFromInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
	}
	
	/// <summary>
	/// The Amazon S3 location that stores the notebook execution output.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OutputNotebookS3LocationFromInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopNotebookExecutionInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string NotebookExecutionId { get; set; }
	}
	
	/// <summary>
	///  Input to the <a>TerminateJobFlows</a> operation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TerminateJobFlowsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] JobFlowIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateStudioInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StudioId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DefaultS3Location { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateStudioSessionMappingInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string StudioId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IdentityType IdentityType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SessionPolicyArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InstanceRoleType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MASTER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CORE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TASK = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InstanceGroupStateChangeReasonCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_ERROR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATION_ERROR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTANCE_FAILURE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLUSTER_TERMINATED = 3,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Adds an instance fleet to a running cluster.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x.</p> </note>
		/// AddInstanceFleet #X-Amz-Target=ElasticMapReduce.AddInstanceFleet
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddInstanceFleetOutput> AddInstanceFleetAsync(AddInstanceFleetInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.AddInstanceFleet";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AddInstanceFleetOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds one or more instance groups to a running cluster.
		/// AddInstanceGroups #X-Amz-Target=ElasticMapReduce.AddInstanceGroups
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddInstanceGroupsOutput> AddInstanceGroupsAsync(AddInstanceGroupsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.AddInstanceGroups";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AddInstanceGroupsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>AddJobFlowSteps adds new steps to a running cluster. A maximum of 256 steps are allowed in each job flow.</p> <p>If your cluster is long-running (such as a Hive data warehouse) or complex, you may require more than 256 steps to process your data. You can bypass the 256-step limitation in various ways, including using SSH to connect to the master node and submitting queries directly to the software running on the master node, such as Hive and Hadoop.</p> <p>A step specifies the location of a JAR file stored either on the master node of the cluster or in Amazon S3. Each step is performed by the main function of the main class of the JAR file. The main class can be specified either in the manifest of the JAR or by using the MainFunction parameter of the step.</p> <p>Amazon EMR executes each step in the order listed. For a step to be considered complete, the main function must exit with a zero exit code and all Hadoop jobs started while the step was running must have completed and run successfully.</p> <p>You can only add steps to a cluster that is in one of the following states: STARTING, BOOTSTRAPPING, RUNNING, or WAITING.</p> <note> <p>The string values passed into <code>HadoopJarStep</code> object cannot exceed a total of 10240 characters.</p> </note>
		/// AddJobFlowSteps #X-Amz-Target=ElasticMapReduce.AddJobFlowSteps
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddJobFlowStepsOutput> AddJobFlowStepsAsync(AddJobFlowStepsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.AddJobFlowSteps";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AddJobFlowStepsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds tags to an Amazon EMR resource, such as a cluster or an Amazon EMR Studio. Tags make it easier to associate resources in various ways, such as grouping clusters to track your Amazon EMR resource allocation costs. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-tags.html">Tag Clusters</a>.
		/// AddTags #X-Amz-Target=ElasticMapReduce.AddTags
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddTagsOutput> AddTagsAsync(AddTagsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.AddTags";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AddTagsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Cancels a pending step or steps in a running cluster. Available only in Amazon EMR versions 4.8.0 and later, excluding version 5.0.0. A maximum of 256 steps are allowed in each CancelSteps request. CancelSteps is idempotent but asynchronous; it does not guarantee that a step will be canceled, even if the request is successfully submitted. When you use Amazon EMR releases 5.28.0 and later, you can cancel steps that are in a <code>PENDING</code> or <code>RUNNING</code> state. In earlier versions of Amazon EMR, you can only cancel steps that are in a <code>PENDING</code> state.
		/// CancelSteps #X-Amz-Target=ElasticMapReduce.CancelSteps
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CancelStepsOutput> CancelStepsAsync(CancelStepsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.CancelSteps";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CancelStepsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a security configuration, which is stored in the service and can be specified when a cluster is created.
		/// CreateSecurityConfiguration #X-Amz-Target=ElasticMapReduce.CreateSecurityConfiguration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateSecurityConfigurationOutput> CreateSecurityConfigurationAsync(CreateSecurityConfigurationInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.CreateSecurityConfiguration";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateSecurityConfigurationOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new Amazon EMR Studio.
		/// CreateStudio #X-Amz-Target=ElasticMapReduce.CreateStudio
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateStudioOutput> CreateStudioAsync(CreateStudioInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.CreateStudio";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateStudioOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Maps a user or group to the Amazon EMR Studio specified by <code>StudioId</code>, and applies a session policy to refine Studio permissions for that user or group. Use <code>CreateStudioSessionMapping</code> to assign users to a Studio when you use IAM Identity Center authentication. For instructions on how to assign users to a Studio when you use IAM authentication, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-studio-manage-users.html#emr-studio-assign-users-groups">Assign a user or group to your EMR Studio</a>.
		/// CreateStudioSessionMapping #X-Amz-Target=ElasticMapReduce.CreateStudioSessionMapping
		/// </summary>
		/// <returns>Success</returns>
		public async Task CreateStudioSessionMappingAsync(CreateStudioSessionMappingInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.CreateStudioSessionMapping";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a security configuration.
		/// DeleteSecurityConfiguration #X-Amz-Target=ElasticMapReduce.DeleteSecurityConfiguration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteSecurityConfigurationOutput> DeleteSecurityConfigurationAsync(DeleteSecurityConfigurationInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.DeleteSecurityConfiguration";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteSecurityConfigurationOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes an Amazon EMR Studio from the Studio metadata store.
		/// DeleteStudio #X-Amz-Target=ElasticMapReduce.DeleteStudio
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteStudioAsync(DeleteStudioInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.DeleteStudio";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes a user or group from an Amazon EMR Studio.
		/// DeleteStudioSessionMapping #X-Amz-Target=ElasticMapReduce.DeleteStudioSessionMapping
		/// </summary>
		/// <returns>Success</returns>
		public async Task DeleteStudioSessionMappingAsync(DeleteStudioSessionMappingInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.DeleteStudioSessionMapping";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides cluster-level details including status, hardware and software configuration, VPC settings, and so on.
		/// DescribeCluster #X-Amz-Target=ElasticMapReduce.DescribeCluster
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeClusterOutput> DescribeClusterAsync(DescribeClusterInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.DescribeCluster";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeClusterOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>This API is no longer supported and will eventually be removed. We recommend you use <a>ListClusters</a>, <a>DescribeCluster</a>, <a>ListSteps</a>, <a>ListInstanceGroups</a> and <a>ListBootstrapActions</a> instead.</p> <p>DescribeJobFlows returns a list of job flows that match all of the supplied parameters. The parameters can include a list of job flow IDs, job flow states, and restrictions on job flow creation date and time.</p> <p>Regardless of supplied parameters, only job flows created within the last two months are returned.</p> <p>If no parameters are supplied, then job flows matching either of the following criteria are returned:</p> <ul> <li> <p>Job flows created and completed in the last two weeks</p> </li> <li> <p> Job flows created within the last two months that are in one of the following states: <code>RUNNING</code>, <code>WAITING</code>, <code>SHUTTING_DOWN</code>, <code>STARTING</code> </p> </li> </ul> <p>Amazon EMR can return a maximum of 512 job flow descriptions.</p>
		/// DescribeJobFlows #X-Amz-Target=ElasticMapReduce.DescribeJobFlows
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeJobFlowsOutput> DescribeJobFlowsAsync(DescribeJobFlowsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.DescribeJobFlows";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeJobFlowsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides details of a notebook execution.
		/// DescribeNotebookExecution #X-Amz-Target=ElasticMapReduce.DescribeNotebookExecution
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeNotebookExecutionOutput> DescribeNotebookExecutionAsync(DescribeNotebookExecutionInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.DescribeNotebookExecution";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeNotebookExecutionOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides Amazon EMR release label details, such as the releases available the Region where the API request is run, and the available applications for a specific Amazon EMR release label. Can also list Amazon EMR releases that support a specified version of Spark.
		/// DescribeReleaseLabel #X-Amz-Target=ElasticMapReduce.DescribeReleaseLabel
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeReleaseLabelOutput> DescribeReleaseLabelAsync(DescribeReleaseLabelInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.DescribeReleaseLabel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeReleaseLabelOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides the details of a security configuration by returning the configuration JSON.
		/// DescribeSecurityConfiguration #X-Amz-Target=ElasticMapReduce.DescribeSecurityConfiguration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeSecurityConfigurationOutput> DescribeSecurityConfigurationAsync(DescribeSecurityConfigurationInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.DescribeSecurityConfiguration";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeSecurityConfigurationOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides more detail about the cluster step.
		/// DescribeStep #X-Amz-Target=ElasticMapReduce.DescribeStep
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeStepOutput> DescribeStepAsync(DescribeStepInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.DescribeStep";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeStepOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns details for the specified Amazon EMR Studio including ID, Name, VPC, Studio access URL, and so on.
		/// DescribeStudio #X-Amz-Target=ElasticMapReduce.DescribeStudio
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeStudioOutput> DescribeStudioAsync(DescribeStudioInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.DescribeStudio";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeStudioOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the auto-termination policy for an Amazon EMR cluster.
		/// GetAutoTerminationPolicy #X-Amz-Target=ElasticMapReduce.GetAutoTerminationPolicy
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetAutoTerminationPolicyOutput> GetAutoTerminationPolicyAsync(GetAutoTerminationPolicyInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.GetAutoTerminationPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAutoTerminationPolicyOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the Amazon EMR block public access configuration for your Amazon Web Services account in the current Region. For more information see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/configure-block-public-access.html">Configure Block Public Access for Amazon EMR</a> in the <i>Amazon EMR Management Guide</i>.
		/// GetBlockPublicAccessConfiguration #X-Amz-Target=ElasticMapReduce.GetBlockPublicAccessConfiguration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetBlockPublicAccessConfigurationOutput> GetBlockPublicAccessConfigurationAsync(GetBlockPublicAccessConfigurationInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.GetBlockPublicAccessConfiguration";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetBlockPublicAccessConfigurationOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides temporary, HTTP basic credentials that are associated with a given runtime IAM role and used by a cluster with fine-grained access control activated. You can use these credentials to connect to cluster endpoints that support username and password authentication.
		/// GetClusterSessionCredentials #X-Amz-Target=ElasticMapReduce.GetClusterSessionCredentials
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetClusterSessionCredentialsOutput> GetClusterSessionCredentialsAsync(GetClusterSessionCredentialsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.GetClusterSessionCredentials";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetClusterSessionCredentialsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Fetches the attached managed scaling policy for an Amazon EMR cluster.
		/// GetManagedScalingPolicy #X-Amz-Target=ElasticMapReduce.GetManagedScalingPolicy
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetManagedScalingPolicyOutput> GetManagedScalingPolicyAsync(GetManagedScalingPolicyInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.GetManagedScalingPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetManagedScalingPolicyOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Fetches mapping details for the specified Amazon EMR Studio and identity (user or group).
		/// GetStudioSessionMapping #X-Amz-Target=ElasticMapReduce.GetStudioSessionMapping
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetStudioSessionMappingOutput> GetStudioSessionMappingAsync(GetStudioSessionMappingInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.GetStudioSessionMapping";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetStudioSessionMappingOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides information about the bootstrap actions associated with a cluster.
		/// ListBootstrapActions #X-Amz-Target=ElasticMapReduce.ListBootstrapActions
		/// </summary>
		/// <param name="Marker">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListBootstrapActionsOutput> ListBootstrapActionsAsync(string Marker, ListBootstrapActionsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.ListBootstrapActions?Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListBootstrapActionsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides the status of all clusters visible to this Amazon Web Services account. Allows you to filter the list of clusters based on certain criteria; for example, filtering by cluster creation date and time or by status. This call returns a maximum of 50 clusters in unsorted order per call, but returns a marker to track the paging of the cluster list across multiple ListClusters calls.
		/// ListClusters #X-Amz-Target=ElasticMapReduce.ListClusters
		/// </summary>
		/// <param name="Marker">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListClustersOutput> ListClustersAsync(string Marker, ListClustersInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.ListClusters?Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListClustersOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists all available details about the instance fleets in a cluster.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions.</p> </note>
		/// ListInstanceFleets #X-Amz-Target=ElasticMapReduce.ListInstanceFleets
		/// </summary>
		/// <param name="Marker">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListInstanceFleetsOutput> ListInstanceFleetsAsync(string Marker, ListInstanceFleetsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.ListInstanceFleets?Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListInstanceFleetsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides all available details about the instance groups in a cluster.
		/// ListInstanceGroups #X-Amz-Target=ElasticMapReduce.ListInstanceGroups
		/// </summary>
		/// <param name="Marker">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListInstanceGroupsOutput> ListInstanceGroupsAsync(string Marker, ListInstanceGroupsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.ListInstanceGroups?Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListInstanceGroupsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides information for all active Amazon EC2 instances and Amazon EC2 instances terminated in the last 30 days, up to a maximum of 2,000. Amazon EC2 instances in any of the following states are considered active: AWAITING_FULFILLMENT, PROVISIONING, BOOTSTRAPPING, RUNNING.
		/// ListInstances #X-Amz-Target=ElasticMapReduce.ListInstances
		/// </summary>
		/// <param name="Marker">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListInstancesOutput> ListInstancesAsync(string Marker, ListInstancesInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.ListInstances?Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListInstancesOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides summaries of all notebook executions. You can filter the list based on multiple criteria such as status, time range, and editor id. Returns a maximum of 50 notebook executions and a marker to track the paging of a longer notebook execution list across multiple <code>ListNotebookExecutions</code> calls.
		/// ListNotebookExecutions #X-Amz-Target=ElasticMapReduce.ListNotebookExecutions
		/// </summary>
		/// <param name="Marker">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListNotebookExecutionsOutput> ListNotebookExecutionsAsync(string Marker, ListNotebookExecutionsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.ListNotebookExecutions?Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListNotebookExecutionsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves release labels of Amazon EMR services in the Region where the API is called.
		/// ListReleaseLabels #X-Amz-Target=ElasticMapReduce.ListReleaseLabels
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListReleaseLabelsOutput> ListReleaseLabelsAsync(string MaxResults, string NextToken, ListReleaseLabelsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.ListReleaseLabels?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListReleaseLabelsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all the security configurations visible to this account, providing their creation dates and times, and their names. This call returns a maximum of 50 clusters per call, but returns a marker to track the paging of the cluster list across multiple ListSecurityConfigurations calls.
		/// ListSecurityConfigurations #X-Amz-Target=ElasticMapReduce.ListSecurityConfigurations
		/// </summary>
		/// <param name="Marker">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListSecurityConfigurationsOutput> ListSecurityConfigurationsAsync(string Marker, ListSecurityConfigurationsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.ListSecurityConfigurations?Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListSecurityConfigurationsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides a list of steps for the cluster in reverse order unless you specify <code>stepIds</code> with the request or filter by <code>StepStates</code>. You can specify a maximum of 10 <code>stepIDs</code>. The CLI automatically paginates results to return a list greater than 50 steps. To return more than 50 steps using the CLI, specify a <code>Marker</code>, which is a pagination token that indicates the next set of steps to retrieve.
		/// ListSteps #X-Amz-Target=ElasticMapReduce.ListSteps
		/// </summary>
		/// <param name="Marker">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListStepsOutput> ListStepsAsync(string Marker, ListStepsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.ListSteps?Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListStepsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of all user or group session mappings for the Amazon EMR Studio specified by <code>StudioId</code>.
		/// ListStudioSessionMappings #X-Amz-Target=ElasticMapReduce.ListStudioSessionMappings
		/// </summary>
		/// <param name="Marker">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListStudioSessionMappingsOutput> ListStudioSessionMappingsAsync(string Marker, ListStudioSessionMappingsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.ListStudioSessionMappings?Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListStudioSessionMappingsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of all Amazon EMR Studios associated with the Amazon Web Services account. The list includes details such as ID, Studio Access URL, and creation time for each Studio.
		/// ListStudios #X-Amz-Target=ElasticMapReduce.ListStudios
		/// </summary>
		/// <param name="Marker">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListStudiosOutput> ListStudiosAsync(string Marker, ListStudiosInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.ListStudios?Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListStudiosOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// A list of the instance types that Amazon EMR supports. You can filter the list by Amazon Web Services Region and Amazon EMR release.
		/// ListSupportedInstanceTypes #X-Amz-Target=ElasticMapReduce.ListSupportedInstanceTypes
		/// </summary>
		/// <param name="Marker">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListSupportedInstanceTypesOutput> ListSupportedInstanceTypesAsync(string Marker, ListSupportedInstanceTypesInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.ListSupportedInstanceTypes?Marker=" + (Marker==null? "" : System.Uri.EscapeDataString(Marker));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListSupportedInstanceTypesOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Modifies the number of steps that can be executed concurrently for the cluster specified using ClusterID.
		/// ModifyCluster #X-Amz-Target=ElasticMapReduce.ModifyCluster
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ModifyClusterOutput> ModifyClusterAsync(ModifyClusterInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.ModifyCluster";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ModifyClusterOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Modifies the target On-Demand and target Spot capacities for the instance fleet with the specified InstanceFleetID within the cluster specified using ClusterID. The call either succeeds or fails atomically.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions.</p> </note>
		/// ModifyInstanceFleet #X-Amz-Target=ElasticMapReduce.ModifyInstanceFleet
		/// </summary>
		/// <returns>Success</returns>
		public async Task ModifyInstanceFleetAsync(ModifyInstanceFleetInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.ModifyInstanceFleet";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// ModifyInstanceGroups modifies the number of nodes and configuration settings of an instance group. The input parameters include the new target instance count for the group and the instance group ID. The call will either succeed or fail atomically.
		/// ModifyInstanceGroups #X-Amz-Target=ElasticMapReduce.ModifyInstanceGroups
		/// </summary>
		/// <returns>Success</returns>
		public async Task ModifyInstanceGroupsAsync(ModifyInstanceGroupsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.ModifyInstanceGroups";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates or updates an automatic scaling policy for a core instance group or task instance group in an Amazon EMR cluster. The automatic scaling policy defines how an instance group dynamically adds and terminates Amazon EC2 instances in response to the value of a CloudWatch metric.
		/// PutAutoScalingPolicy #X-Amz-Target=ElasticMapReduce.PutAutoScalingPolicy
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutAutoScalingPolicyOutput> PutAutoScalingPolicyAsync(PutAutoScalingPolicyInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.PutAutoScalingPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutAutoScalingPolicyOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <note> <p>Auto-termination is supported in Amazon EMR releases 5.30.0 and 6.1.0 and later. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-auto-termination-policy.html">Using an auto-termination policy</a>.</p> </note> <p>Creates or updates an auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. For alternative cluster termination options, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-termination.html">Control cluster termination</a>.</p>
		/// PutAutoTerminationPolicy #X-Amz-Target=ElasticMapReduce.PutAutoTerminationPolicy
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutAutoTerminationPolicyOutput> PutAutoTerminationPolicyAsync(PutAutoTerminationPolicyInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.PutAutoTerminationPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutAutoTerminationPolicyOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates or updates an Amazon EMR block public access configuration for your Amazon Web Services account in the current Region. For more information see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/configure-block-public-access.html">Configure Block Public Access for Amazon EMR</a> in the <i>Amazon EMR Management Guide</i>.
		/// PutBlockPublicAccessConfiguration #X-Amz-Target=ElasticMapReduce.PutBlockPublicAccessConfiguration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutBlockPublicAccessConfigurationOutput> PutBlockPublicAccessConfigurationAsync(PutBlockPublicAccessConfigurationInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.PutBlockPublicAccessConfiguration";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutBlockPublicAccessConfigurationOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates or updates a managed scaling policy for an Amazon EMR cluster. The managed scaling policy defines the limits for resources, such as Amazon EC2 instances that can be added or terminated from a cluster. The policy only applies to the core and task nodes. The master node cannot be scaled after initial configuration.
		/// PutManagedScalingPolicy #X-Amz-Target=ElasticMapReduce.PutManagedScalingPolicy
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutManagedScalingPolicyOutput> PutManagedScalingPolicyAsync(PutManagedScalingPolicyInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.PutManagedScalingPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutManagedScalingPolicyOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes an automatic scaling policy from a specified instance group within an Amazon EMR cluster.
		/// RemoveAutoScalingPolicy #X-Amz-Target=ElasticMapReduce.RemoveAutoScalingPolicy
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RemoveAutoScalingPolicyOutput> RemoveAutoScalingPolicyAsync(RemoveAutoScalingPolicyInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.RemoveAutoScalingPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RemoveAutoScalingPolicyOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes an auto-termination policy from an Amazon EMR cluster.
		/// RemoveAutoTerminationPolicy #X-Amz-Target=ElasticMapReduce.RemoveAutoTerminationPolicy
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RemoveAutoTerminationPolicyOutput> RemoveAutoTerminationPolicyAsync(RemoveAutoTerminationPolicyInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.RemoveAutoTerminationPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RemoveAutoTerminationPolicyOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes a managed scaling policy from a specified Amazon EMR cluster.
		/// RemoveManagedScalingPolicy #X-Amz-Target=ElasticMapReduce.RemoveManagedScalingPolicy
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RemoveManagedScalingPolicyOutput> RemoveManagedScalingPolicyAsync(RemoveManagedScalingPolicyInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.RemoveManagedScalingPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RemoveManagedScalingPolicyOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Removes tags from an Amazon EMR resource, such as a cluster or Amazon EMR Studio. Tags make it easier to associate resources in various ways, such as grouping clusters to track your Amazon EMR resource allocation costs. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-tags.html">Tag Clusters</a>. </p> <p>The following example removes the stack tag with value Prod from a cluster:</p>
		/// RemoveTags #X-Amz-Target=ElasticMapReduce.RemoveTags
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RemoveTagsOutput> RemoveTagsAsync(RemoveTagsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.RemoveTags";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RemoveTagsOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>RunJobFlow creates and starts running a new cluster (job flow). The cluster runs the steps specified. After the steps complete, the cluster stops and the HDFS partition is lost. To prevent loss of data, configure the last step of the job flow to store results in Amazon S3. If the <a>JobFlowInstancesConfig</a> <code>KeepJobFlowAliveWhenNoSteps</code> parameter is set to <code>TRUE</code>, the cluster transitions to the WAITING state rather than shutting down after the steps have completed. </p> <p>For additional protection, you can set the <a>JobFlowInstancesConfig</a> <code>TerminationProtected</code> parameter to <code>TRUE</code> to lock the cluster and prevent it from being terminated by API call, user intervention, or in the event of a job flow error.</p> <p>A maximum of 256 steps are allowed in each job flow.</p> <p>If your cluster is long-running (such as a Hive data warehouse) or complex, you may require more than 256 steps to process your data. You can bypass the 256-step limitation in various ways, including using the SSH shell to connect to the master node and submitting queries directly to the software running on the master node, such as Hive and Hadoop.</p> <p>For long-running clusters, we recommend that you periodically store your results.</p> <note> <p>The instance fleets configuration is available only in Amazon EMR releases 4.8.0 and later, excluding 5.0.x versions. The RunJobFlow request can contain InstanceFleets parameters or InstanceGroups parameters, but not both.</p> </note>
		/// RunJobFlow #X-Amz-Target=ElasticMapReduce.RunJobFlow
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RunJobFlowOutput> RunJobFlowAsync(RunJobFlowInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.RunJobFlow";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RunJobFlowOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>SetTerminationProtection locks a cluster (job flow) so the Amazon EC2 instances in the cluster cannot be terminated by user intervention, an API call, or in the event of a job-flow error. The cluster still terminates upon successful completion of the job flow. Calling <code>SetTerminationProtection</code> on a cluster is similar to calling the Amazon EC2 <code>DisableAPITermination</code> API on all Amazon EC2 instances in a cluster.</p> <p> <code>SetTerminationProtection</code> is used to prevent accidental termination of a cluster and to ensure that in the event of an error, the instances persist so that you can recover any data stored in their ephemeral instance storage.</p> <p> To terminate a cluster that has been locked by setting <code>SetTerminationProtection</code> to <code>true</code>, you must first unlock the job flow by a subsequent call to <code>SetTerminationProtection</code> in which you set the value to <code>false</code>. </p> <p> For more information, see<a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/UsingEMR_TerminationProtection.html">Managing Cluster Termination</a> in the <i>Amazon EMR Management Guide</i>. </p>
		/// SetTerminationProtection #X-Amz-Target=ElasticMapReduce.SetTerminationProtection
		/// </summary>
		/// <returns>Success</returns>
		public async Task SetTerminationProtectionAsync(SetTerminationProtectionInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.SetTerminationProtection";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <important> <p>The SetVisibleToAllUsers parameter is no longer supported. Your cluster may be visible to all users in your account. To restrict cluster access using an IAM policy, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-access-IAM.html">Identity and Access Management for Amazon EMR</a>. </p> </important> <p>Sets the <a>Cluster$VisibleToAllUsers</a> value for an Amazon EMR cluster. When <code>true</code>, IAM principals in the Amazon Web Services account can perform Amazon EMR cluster actions that their IAM policies allow. When <code>false</code>, only the IAM principal that created the cluster and the Amazon Web Services account root user can perform Amazon EMR actions on the cluster, regardless of IAM permissions policies attached to other IAM principals.</p> <p>This action works on running clusters. When you create a cluster, use the <a>RunJobFlowInput$VisibleToAllUsers</a> parameter.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/security_IAM_emr-with-IAM.html#security_set_visible_to_all_users">Understanding the Amazon EMR Cluster VisibleToAllUsers Setting</a> in the <i>Amazon EMR Management Guide</i>.</p>
		/// SetVisibleToAllUsers #X-Amz-Target=ElasticMapReduce.SetVisibleToAllUsers
		/// </summary>
		/// <returns>Success</returns>
		public async Task SetVisibleToAllUsersAsync(SetVisibleToAllUsersInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.SetVisibleToAllUsers";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Starts a notebook execution.
		/// StartNotebookExecution #X-Amz-Target=ElasticMapReduce.StartNotebookExecution
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartNotebookExecutionOutput> StartNotebookExecutionAsync(StartNotebookExecutionInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.StartNotebookExecution";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StartNotebookExecutionOutput>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Stops a notebook execution.
		/// StopNotebookExecution #X-Amz-Target=ElasticMapReduce.StopNotebookExecution
		/// </summary>
		/// <returns>Success</returns>
		public async Task StopNotebookExecutionAsync(StopNotebookExecutionInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.StopNotebookExecution";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>TerminateJobFlows shuts a list of clusters (job flows) down. When a job flow is shut down, any step not yet completed is canceled and the Amazon EC2 instances on which the cluster is running are stopped. Any log files not already saved are uploaded to Amazon S3 if a LogUri was specified when the cluster was created.</p> <p>The maximum number of clusters allowed is 10. The call to <code>TerminateJobFlows</code> is asynchronous. Depending on the configuration of the cluster, it may take up to 1-5 minutes for the cluster to completely terminate and release allocated resources, such as Amazon EC2 instances.</p>
		/// TerminateJobFlows #X-Amz-Target=ElasticMapReduce.TerminateJobFlows
		/// </summary>
		/// <returns>Success</returns>
		public async Task TerminateJobFlowsAsync(TerminateJobFlowsInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.TerminateJobFlows";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates an Amazon EMR Studio configuration, including attributes such as name, description, and subnets.
		/// UpdateStudio #X-Amz-Target=ElasticMapReduce.UpdateStudio
		/// </summary>
		/// <returns>Success</returns>
		public async Task UpdateStudioAsync(UpdateStudioInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.UpdateStudio";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the session policy attached to the user or group for the specified Amazon EMR Studio.
		/// UpdateStudioSessionMapping #X-Amz-Target=ElasticMapReduce.UpdateStudioSessionMapping
		/// </summary>
		/// <returns>Success</returns>
		public async Task UpdateStudioSessionMappingAsync(UpdateStudioSessionMappingInput requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ElasticMapReduce.UpdateStudioSessionMapping";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum AddInstanceFleetX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.AddInstanceFleet")]
		ElasticMapReduce_AddInstanceFleet = 0,
	}
	
	public enum AddInstanceGroupsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.AddInstanceGroups")]
		ElasticMapReduce_AddInstanceGroups = 0,
	}
	
	public enum AddJobFlowStepsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.AddJobFlowSteps")]
		ElasticMapReduce_AddJobFlowSteps = 0,
	}
	
	public enum AddTagsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.AddTags")]
		ElasticMapReduce_AddTags = 0,
	}
	
	public enum CancelStepsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.CancelSteps")]
		ElasticMapReduce_CancelSteps = 0,
	}
	
	public enum CreateSecurityConfigurationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.CreateSecurityConfiguration")]
		ElasticMapReduce_CreateSecurityConfiguration = 0,
	}
	
	public enum CreateStudioX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.CreateStudio")]
		ElasticMapReduce_CreateStudio = 0,
	}
	
	public enum CreateStudioSessionMappingX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.CreateStudioSessionMapping")]
		ElasticMapReduce_CreateStudioSessionMapping = 0,
	}
	
	public enum DeleteSecurityConfigurationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.DeleteSecurityConfiguration")]
		ElasticMapReduce_DeleteSecurityConfiguration = 0,
	}
	
	public enum DeleteStudioX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.DeleteStudio")]
		ElasticMapReduce_DeleteStudio = 0,
	}
	
	public enum DeleteStudioSessionMappingX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.DeleteStudioSessionMapping")]
		ElasticMapReduce_DeleteStudioSessionMapping = 0,
	}
	
	public enum DescribeClusterX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.DescribeCluster")]
		ElasticMapReduce_DescribeCluster = 0,
	}
	
	public enum DescribeJobFlowsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.DescribeJobFlows")]
		ElasticMapReduce_DescribeJobFlows = 0,
	}
	
	public enum DescribeNotebookExecutionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.DescribeNotebookExecution")]
		ElasticMapReduce_DescribeNotebookExecution = 0,
	}
	
	public enum DescribeReleaseLabelX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.DescribeReleaseLabel")]
		ElasticMapReduce_DescribeReleaseLabel = 0,
	}
	
	public enum DescribeSecurityConfigurationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.DescribeSecurityConfiguration")]
		ElasticMapReduce_DescribeSecurityConfiguration = 0,
	}
	
	public enum DescribeStepX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.DescribeStep")]
		ElasticMapReduce_DescribeStep = 0,
	}
	
	public enum DescribeStudioX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.DescribeStudio")]
		ElasticMapReduce_DescribeStudio = 0,
	}
	
	public enum GetAutoTerminationPolicyX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.GetAutoTerminationPolicy")]
		ElasticMapReduce_GetAutoTerminationPolicy = 0,
	}
	
	public enum GetBlockPublicAccessConfigurationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.GetBlockPublicAccessConfiguration")]
		ElasticMapReduce_GetBlockPublicAccessConfiguration = 0,
	}
	
	public enum GetClusterSessionCredentialsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.GetClusterSessionCredentials")]
		ElasticMapReduce_GetClusterSessionCredentials = 0,
	}
	
	public enum GetManagedScalingPolicyX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.GetManagedScalingPolicy")]
		ElasticMapReduce_GetManagedScalingPolicy = 0,
	}
	
	public enum GetStudioSessionMappingX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.GetStudioSessionMapping")]
		ElasticMapReduce_GetStudioSessionMapping = 0,
	}
	
	public enum ListBootstrapActionsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.ListBootstrapActions")]
		ElasticMapReduce_ListBootstrapActions = 0,
	}
	
	public enum ListClustersX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.ListClusters")]
		ElasticMapReduce_ListClusters = 0,
	}
	
	public enum ListInstanceFleetsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.ListInstanceFleets")]
		ElasticMapReduce_ListInstanceFleets = 0,
	}
	
	public enum ListInstanceGroupsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.ListInstanceGroups")]
		ElasticMapReduce_ListInstanceGroups = 0,
	}
	
	public enum ListInstancesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.ListInstances")]
		ElasticMapReduce_ListInstances = 0,
	}
	
	public enum ListNotebookExecutionsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.ListNotebookExecutions")]
		ElasticMapReduce_ListNotebookExecutions = 0,
	}
	
	public enum ListReleaseLabelsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.ListReleaseLabels")]
		ElasticMapReduce_ListReleaseLabels = 0,
	}
	
	public enum ListSecurityConfigurationsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.ListSecurityConfigurations")]
		ElasticMapReduce_ListSecurityConfigurations = 0,
	}
	
	public enum ListStepsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.ListSteps")]
		ElasticMapReduce_ListSteps = 0,
	}
	
	public enum ListStudioSessionMappingsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.ListStudioSessionMappings")]
		ElasticMapReduce_ListStudioSessionMappings = 0,
	}
	
	public enum ListStudiosX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.ListStudios")]
		ElasticMapReduce_ListStudios = 0,
	}
	
	public enum ListSupportedInstanceTypesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.ListSupportedInstanceTypes")]
		ElasticMapReduce_ListSupportedInstanceTypes = 0,
	}
	
	public enum ModifyClusterX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.ModifyCluster")]
		ElasticMapReduce_ModifyCluster = 0,
	}
	
	public enum ModifyInstanceFleetX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.ModifyInstanceFleet")]
		ElasticMapReduce_ModifyInstanceFleet = 0,
	}
	
	public enum ModifyInstanceGroupsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.ModifyInstanceGroups")]
		ElasticMapReduce_ModifyInstanceGroups = 0,
	}
	
	public enum PutAutoScalingPolicyX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.PutAutoScalingPolicy")]
		ElasticMapReduce_PutAutoScalingPolicy = 0,
	}
	
	public enum PutAutoTerminationPolicyX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.PutAutoTerminationPolicy")]
		ElasticMapReduce_PutAutoTerminationPolicy = 0,
	}
	
	public enum PutBlockPublicAccessConfigurationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.PutBlockPublicAccessConfiguration")]
		ElasticMapReduce_PutBlockPublicAccessConfiguration = 0,
	}
	
	public enum PutManagedScalingPolicyX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.PutManagedScalingPolicy")]
		ElasticMapReduce_PutManagedScalingPolicy = 0,
	}
	
	public enum RemoveAutoScalingPolicyX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.RemoveAutoScalingPolicy")]
		ElasticMapReduce_RemoveAutoScalingPolicy = 0,
	}
	
	public enum RemoveAutoTerminationPolicyX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.RemoveAutoTerminationPolicy")]
		ElasticMapReduce_RemoveAutoTerminationPolicy = 0,
	}
	
	public enum RemoveManagedScalingPolicyX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.RemoveManagedScalingPolicy")]
		ElasticMapReduce_RemoveManagedScalingPolicy = 0,
	}
	
	public enum RemoveTagsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.RemoveTags")]
		ElasticMapReduce_RemoveTags = 0,
	}
	
	public enum RunJobFlowX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.RunJobFlow")]
		ElasticMapReduce_RunJobFlow = 0,
	}
	
	public enum SetTerminationProtectionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.SetTerminationProtection")]
		ElasticMapReduce_SetTerminationProtection = 0,
	}
	
	public enum SetVisibleToAllUsersX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.SetVisibleToAllUsers")]
		ElasticMapReduce_SetVisibleToAllUsers = 0,
	}
	
	public enum StartNotebookExecutionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.StartNotebookExecution")]
		ElasticMapReduce_StartNotebookExecution = 0,
	}
	
	public enum StopNotebookExecutionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.StopNotebookExecution")]
		ElasticMapReduce_StopNotebookExecution = 0,
	}
	
	public enum TerminateJobFlowsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.TerminateJobFlows")]
		ElasticMapReduce_TerminateJobFlows = 0,
	}
	
	public enum UpdateStudioX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.UpdateStudio")]
		ElasticMapReduce_UpdateStudio = 0,
	}
	
	public enum UpdateStudioSessionMappingX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ElasticMapReduce.UpdateStudioSessionMapping")]
		ElasticMapReduce_UpdateStudioSessionMapping = 0,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Article
	{
		
		[System.Runtime.Serialization.DataMember(Name="abstract")]
		public string Abstract { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="byline")]
		public string Byline { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="column")]
		public string Column { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="des_facet")]
		public DesFacet Des_facet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="geo_facet")]
		public GeoFacet Geo_facet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="media")]
		public string[] Media { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="org_facet")]
		public string[] Org_facet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="per_facet")]
		public string[] Per_facet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="published_date")]
		public string Published_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="section")]
		public string Section { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ArticleWithCountType
	{
		
		[System.Runtime.Serialization.DataMember(Name="abstract")]
		public string Abstract { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="byline")]
		public string Byline { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="column")]
		public string Column { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="count_type")]
		public string Count_type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="des_facet")]
		public DesFacet Des_facet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="geo_facet")]
		public GeoFacet Geo_facet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="media")]
		public ArticleWithCountTypeMedia[] ArticleWithCountTypeMedia { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="org_facet")]
		public string[] Org_facet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="per_facet")]
		public string[] Per_facet { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="published_date")]
		public string Published_date { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="section")]
		public string Section { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class ArticleWithCountTypeMedia
	{
		
		[System.Runtime.Serialization.DataMember(Name="caption")]
		public string Caption { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="copyright")]
		public string Copyright { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="media-metadata")]
		public ArticleWithCountTypeMediaMedia_metadata Media_metadata { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subtype")]
		public string Subtype { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public class ArticleWithCountTypeMediaMedia_metadata
	{
		
		[System.Runtime.Serialization.DataMember(Name="format")]
		public string Format { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Int32> Height { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Int32> Width { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DesFacet
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GeoFacet
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="")]
		_ = 0,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Most Emailed by Section & Time Period
		/// GET_mostemailed_section_time_period_json mostemailed/{section}/{time_period}.json
		/// </summary>
		/// <returns>An array of Articles</returns>
		public async Task<GET_mostemailed_section_time_period_jsonReturn> GET_mostemailed_section_time_period_jsonAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "mostemailed/{section}/{time_period}.json";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GET_mostemailed_section_time_period_jsonReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Most Shared by Section & Time Period
		/// GET_mostshared_section_time_period_json mostshared/{section}/{time_period}.json
		/// </summary>
		/// <returns>An array of Articles</returns>
		public async Task<GET_mostshared_section_time_period_jsonReturn> GET_mostshared_section_time_period_jsonAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "mostshared/{section}/{time_period}.json";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GET_mostshared_section_time_period_jsonReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Most Viewed by Section & Time Period
		/// GET_mostviewed_section_time_period_json mostviewed/{section}/{time_period}.json
		/// </summary>
		/// <returns>An array of Articles</returns>
		public async Task<GET_mostviewed_section_time_period_jsonReturn> GET_mostviewed_section_time_period_jsonAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "mostviewed/{section}/{time_period}.json";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GET_mostviewed_section_time_period_jsonReturn>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class GET_mostemailed_section_time_period_jsonReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="copyright")]
		public string Copyright { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_results")]
		public System.Nullable<System.Int32> Num_results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public ArticleWithCountType[] Results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	public class GET_mostshared_section_time_period_jsonReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="copyright")]
		public string Copyright { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_results")]
		public System.Nullable<System.Int32> Num_results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public Article[] Results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
	
	public class GET_mostviewed_section_time_period_jsonReturn
	{
		
		[System.Runtime.Serialization.DataMember(Name="copyright")]
		public string Copyright { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="num_results")]
		public System.Nullable<System.Int32> Num_results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="results")]
		public Article[] Results { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

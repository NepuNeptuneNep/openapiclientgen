//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AgeRatingDeclaration
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AgeRatingDeclarationAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AgeRatingDeclarationType Type { get; set; }
	}
	
	public class AgeRatingDeclarationAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="alcoholTobaccoOrDrugUseOrReferences")]
		public System.Nullable<AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences> AlcoholTobaccoOrDrugUseOrReferences { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contests")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences Contests { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gambling")]
		public System.Nullable<System.Boolean> Gambling { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gamblingAndContests")]
		public System.Nullable<System.Boolean> GamblingAndContests { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gamblingSimulated")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences GamblingSimulated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="horrorOrFearThemes")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences HorrorOrFearThemes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kidsAgeBand")]
		public System.Nullable<AgeRatingDeclarationAttributesKidsAgeBand> KidsAgeBand { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="matureOrSuggestiveThemes")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences MatureOrSuggestiveThemes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="medicalOrTreatmentInformation")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences MedicalOrTreatmentInformation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="profanityOrCrudeHumor")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences ProfanityOrCrudeHumor { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="seventeenPlus")]
		public System.Nullable<System.Boolean> SeventeenPlus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sexualContentGraphicAndNudity")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences SexualContentGraphicAndNudity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sexualContentOrNudity")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences SexualContentOrNudity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unrestrictedWebAccess")]
		public System.Nullable<System.Boolean> UnrestrictedWebAccess { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="violenceCartoonOrFantasy")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences ViolenceCartoonOrFantasy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="violenceRealistic")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences ViolenceRealistic { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="violenceRealisticProlongedGraphicOrSadistic")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences ViolenceRealisticProlongedGraphicOrSadistic { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFREQUENT_OR_MILD = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FREQUENT_OR_INTENSE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AgeRatingDeclarationAttributesKidsAgeBand
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIVE_AND_UNDER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIX_TO_EIGHT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NINE_TO_ELEVEN = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceLinks
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AgeRatingDeclarationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ageRatingDeclarations = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AgeRatingDeclarationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AgeRatingDeclaration Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DocumentLinks
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AgeRatingDeclarationUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AgeRatingDeclarationUpdateRequestData Data { get; set; }
	}
	
	public class AgeRatingDeclarationUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AgeRatingDeclarationUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AgeRatingDeclarationType Type { get; set; }
	}
	
	public class AgeRatingDeclarationUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="alcoholTobaccoOrDrugUseOrReferences")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences AlcoholTobaccoOrDrugUseOrReferences { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contests")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences Contests { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gambling")]
		public System.Nullable<System.Boolean> Gambling { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gamblingAndContests")]
		public System.Nullable<System.Boolean> GamblingAndContests { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gamblingSimulated")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences GamblingSimulated { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="horrorOrFearThemes")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences HorrorOrFearThemes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kidsAgeBand")]
		public AgeRatingDeclarationAttributesKidsAgeBand KidsAgeBand { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="matureOrSuggestiveThemes")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences MatureOrSuggestiveThemes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="medicalOrTreatmentInformation")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences MedicalOrTreatmentInformation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="profanityOrCrudeHumor")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences ProfanityOrCrudeHumor { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="seventeenPlus")]
		public System.Nullable<System.Boolean> SeventeenPlus { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sexualContentGraphicAndNudity")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences SexualContentGraphicAndNudity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sexualContentOrNudity")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences SexualContentOrNudity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="unrestrictedWebAccess")]
		public System.Nullable<System.Boolean> UnrestrictedWebAccess { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="violenceCartoonOrFantasy")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences ViolenceCartoonOrFantasy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="violenceRealistic")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences ViolenceRealistic { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="violenceRealisticProlongedGraphicOrSadistic")]
		public AgeRatingDeclarationAttributesAlcoholTobaccoOrDrugUseOrReferences ViolenceRealisticProlongedGraphicOrSadistic { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class App
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class AppAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="availableInNewTerritories")]
		public System.Nullable<System.Boolean> AvailableInNewTerritories { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bundleId")]
		public string BundleId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contentRightsDeclaration")]
		public System.Nullable<AppAttributesContentRightsDeclaration> ContentRightsDeclaration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isOrEverWasMadeForKids")]
		public System.Nullable<System.Boolean> IsOrEverWasMadeForKids { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="primaryLocale")]
		public string PrimaryLocale { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sku")]
		public string Sku { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppAttributesContentRightsDeclaration
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOES_NOT_USE_THIRD_PARTY_CONTENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USES_THIRD_PARTY_CONTENT = 1,
	}
	
	public class AppRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="appInfos")]
		public AppRelationshipsAppInfos AppInfos { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="appStoreVersions")]
		public AppRelationshipsAppStoreVersions AppStoreVersions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="availableTerritories")]
		public AppRelationshipsAvailableTerritories AvailableTerritories { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="betaAppLocalizations")]
		public AppRelationshipsBetaAppLocalizations BetaAppLocalizations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="betaAppReviewDetail")]
		public AppRelationshipsBetaAppReviewDetail BetaAppReviewDetail { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="betaGroups")]
		public AppRelationshipsBetaGroups BetaGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="betaLicenseAgreement")]
		public AppRelationshipsBetaLicenseAgreement BetaLicenseAgreement { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="builds")]
		public AppRelationshipsBuilds Builds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="endUserLicenseAgreement")]
		public AppRelationshipsEndUserLicenseAgreement EndUserLicenseAgreement { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="gameCenterEnabledVersions")]
		public AppRelationshipsGameCenterEnabledVersions GameCenterEnabledVersions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inAppPurchases")]
		public AppRelationshipsInAppPurchases InAppPurchases { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="preOrder")]
		public AppRelationshipsPreOrder PreOrder { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="preReleaseVersions")]
		public AppRelationshipsPreReleaseVersions PreReleaseVersions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="prices")]
		public AppRelationshipsPrices Prices { get; set; }
	}
	
	public class AppRelationshipsAppInfos
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppRelationshipsAppInfosData[] AppRelationshipsAppInfosData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppRelationshipsAppInfosLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppRelationshipsAppInfosData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppInfosDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppRelationshipsAppInfosDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appInfos = 0,
	}
	
	public class AppRelationshipsAppInfosLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PagingInformation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="paging")]
		public PagingInformationPaging Paging { get; set; }
	}
	
	public class PagingInformationPaging
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="limit")]
		public int Limit { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="total")]
		public int Total { get; set; }
	}
	
	public class AppRelationshipsAppStoreVersions
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppRelationshipsAppStoreVersionsData[] AppRelationshipsAppStoreVersionsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppRelationshipsAppStoreVersionsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppRelationshipsAppStoreVersionsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppStoreVersionsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppRelationshipsAppStoreVersionsDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appStoreVersions = 0,
	}
	
	public class AppRelationshipsAppStoreVersionsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppRelationshipsAvailableTerritories
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppRelationshipsAvailableTerritoriesData[] AppRelationshipsAvailableTerritoriesData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppRelationshipsAvailableTerritoriesLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppRelationshipsAvailableTerritoriesData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAvailableTerritoriesDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppRelationshipsAvailableTerritoriesDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		territories = 0,
	}
	
	public class AppRelationshipsAvailableTerritoriesLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppRelationshipsBetaAppLocalizations
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppRelationshipsBetaAppLocalizationsData[] AppRelationshipsBetaAppLocalizationsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppRelationshipsBetaAppLocalizationsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppRelationshipsBetaAppLocalizationsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaAppLocalizationsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppRelationshipsBetaAppLocalizationsDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		betaAppLocalizations = 0,
	}
	
	public class AppRelationshipsBetaAppLocalizationsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppRelationshipsBetaAppReviewDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppRelationshipsBetaAppReviewDetailData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppRelationshipsBetaAppReviewDetailLinks Links { get; set; }
	}
	
	public class AppRelationshipsBetaAppReviewDetailData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaAppReviewDetailDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppRelationshipsBetaAppReviewDetailDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		betaAppReviewDetails = 0,
	}
	
	public class AppRelationshipsBetaAppReviewDetailLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppRelationshipsBetaGroups
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppRelationshipsBetaGroupsData[] AppRelationshipsBetaGroupsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppRelationshipsBetaGroupsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppRelationshipsBetaGroupsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaGroupsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppRelationshipsBetaGroupsDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		betaGroups = 0,
	}
	
	public class AppRelationshipsBetaGroupsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppRelationshipsBetaLicenseAgreement
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppRelationshipsBetaLicenseAgreementData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppRelationshipsBetaLicenseAgreementLinks Links { get; set; }
	}
	
	public class AppRelationshipsBetaLicenseAgreementData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaLicenseAgreementDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppRelationshipsBetaLicenseAgreementDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		betaLicenseAgreements = 0,
	}
	
	public class AppRelationshipsBetaLicenseAgreementLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppRelationshipsBuilds
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppRelationshipsBuildsData[] AppRelationshipsBuildsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppRelationshipsBuildsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppRelationshipsBuildsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppRelationshipsBuildsDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		builds = 0,
	}
	
	public class AppRelationshipsBuildsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppRelationshipsEndUserLicenseAgreement
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppRelationshipsEndUserLicenseAgreementData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppRelationshipsEndUserLicenseAgreementLinks Links { get; set; }
	}
	
	public class AppRelationshipsEndUserLicenseAgreementData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsEndUserLicenseAgreementDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppRelationshipsEndUserLicenseAgreementDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		endUserLicenseAgreements = 0,
	}
	
	public class AppRelationshipsEndUserLicenseAgreementLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppRelationshipsGameCenterEnabledVersions
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppRelationshipsGameCenterEnabledVersionsData[] AppRelationshipsGameCenterEnabledVersionsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppRelationshipsGameCenterEnabledVersionsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppRelationshipsGameCenterEnabledVersionsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsGameCenterEnabledVersionsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppRelationshipsGameCenterEnabledVersionsDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gameCenterEnabledVersions = 0,
	}
	
	public class AppRelationshipsGameCenterEnabledVersionsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppRelationshipsInAppPurchases
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppRelationshipsInAppPurchasesData[] AppRelationshipsInAppPurchasesData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppRelationshipsInAppPurchasesLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppRelationshipsInAppPurchasesData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsInAppPurchasesDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppRelationshipsInAppPurchasesDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		inAppPurchases = 0,
	}
	
	public class AppRelationshipsInAppPurchasesLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppRelationshipsPreOrder
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppRelationshipsPreOrderData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppRelationshipsPreOrderLinks Links { get; set; }
	}
	
	public class AppRelationshipsPreOrderData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsPreOrderDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppRelationshipsPreOrderDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appPreOrders = 0,
	}
	
	public class AppRelationshipsPreOrderLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppRelationshipsPreReleaseVersions
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppRelationshipsPreReleaseVersionsData[] AppRelationshipsPreReleaseVersionsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppRelationshipsPreReleaseVersionsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppRelationshipsPreReleaseVersionsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsPreReleaseVersionsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppRelationshipsPreReleaseVersionsDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		preReleaseVersions = 0,
	}
	
	public class AppRelationshipsPreReleaseVersionsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppRelationshipsPrices
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppRelationshipsPricesData[] AppRelationshipsPricesData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppRelationshipsPricesLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppRelationshipsPricesData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsPricesDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppRelationshipsPricesDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appPrices = 0,
	}
	
	public class AppRelationshipsPricesLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		apps = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppBetaTestersLinkagesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppBetaTestersLinkagesRequestData[] AppBetaTestersLinkagesRequestData { get; set; }
	}
	
	public class AppBetaTestersLinkagesRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppBetaTestersLinkagesRequestDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppBetaTestersLinkagesRequestDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		betaTesters = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppCategoriesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppCategory[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppCategory
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppCategoryAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppCategoryRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppCategoryRelationshipsParentDataType Type { get; set; }
	}
	
	public class AppCategoryAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="platforms")]
		public Platform[] Platforms { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Platform
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IOS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAC_OS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TV_OS = 2,
	}
	
	public class AppCategoryRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public AppCategoryRelationshipsParent Parent { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subcategories")]
		public AppCategoryRelationshipsSubcategories Subcategories { get; set; }
	}
	
	public class AppCategoryRelationshipsParent
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppCategoryRelationshipsParentData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppCategoryRelationshipsParentLinks Links { get; set; }
	}
	
	public class AppCategoryRelationshipsParentData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppCategoryRelationshipsParentDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppCategoryRelationshipsParentDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appCategories = 0,
	}
	
	public class AppCategoryRelationshipsParentLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppCategoryRelationshipsSubcategories
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppCategoryRelationshipsSubcategoriesData[] AppCategoryRelationshipsSubcategoriesData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppCategoryRelationshipsSubcategoriesLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppCategoryRelationshipsSubcategoriesData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppCategoryRelationshipsParentDataType Type { get; set; }
	}
	
	public class AppCategoryRelationshipsSubcategoriesLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PagedDocumentLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="first")]
		public string First { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="next")]
		public string Next { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppCategoryResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppCategory Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppEncryptionDeclaration
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppEncryptionDeclarationAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppEncryptionDeclarationRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppEncryptionDeclarationType Type { get; set; }
	}
	
	public class AppEncryptionDeclarationAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="appEncryptionDeclarationState")]
		public System.Nullable<AppEncryptionDeclarationAttributesAppEncryptionDeclarationState> AppEncryptionDeclarationState { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="availableOnFrenchStore")]
		public System.Nullable<System.Boolean> AvailableOnFrenchStore { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="codeValue")]
		public string CodeValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="containsProprietaryCryptography")]
		public System.Nullable<System.Boolean> ContainsProprietaryCryptography { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="containsThirdPartyCryptography")]
		public System.Nullable<System.Boolean> ContainsThirdPartyCryptography { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="documentName")]
		public string DocumentName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="documentType")]
		public string DocumentType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="documentUrl")]
		public string DocumentUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="exempt")]
		public System.Nullable<System.Boolean> Exempt { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public Platform Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uploadedDate")]
		public System.Nullable<System.DateTimeOffset> UploadedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usesEncryption")]
		public System.Nullable<System.Boolean> UsesEncryption { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppEncryptionDeclarationAttributesAppEncryptionDeclarationState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_REVIEW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPIRED = 4,
	}
	
	public class AppEncryptionDeclarationRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="app")]
		public AppEncryptionDeclarationRelationshipsApp App { get; set; }
	}
	
	public class AppEncryptionDeclarationRelationshipsApp
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppEncryptionDeclarationRelationshipsAppData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppEncryptionDeclarationRelationshipsAppLinks Links { get; set; }
	}
	
	public class AppEncryptionDeclarationRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class AppEncryptionDeclarationRelationshipsAppLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppEncryptionDeclarationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appEncryptionDeclarations = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppEncryptionDeclarationBuildsLinkagesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppEncryptionDeclarationBuildsLinkagesRequestData[] AppEncryptionDeclarationBuildsLinkagesRequestData { get; set; }
	}
	
	public class AppEncryptionDeclarationBuildsLinkagesRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppEncryptionDeclarationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppEncryptionDeclaration Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public App[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppEncryptionDeclarationState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_REVIEW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPIRED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppEncryptionDeclarationsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppEncryptionDeclaration[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public App[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppInfo
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppInfoAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppInfoRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppInfosDataType Type { get; set; }
	}
	
	public class AppInfoAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="appStoreAgeRating")]
		public System.Nullable<AppInfoAttributesAppStoreAgeRating> AppStoreAgeRating { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="appStoreState")]
		public System.Nullable<AppInfoAttributesAppStoreState> AppStoreState { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="brazilAgeRating")]
		public System.Nullable<AppInfoAttributesBrazilAgeRating> BrazilAgeRating { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kidsAgeBand")]
		public AgeRatingDeclarationAttributesKidsAgeBand KidsAgeBand { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppInfoAttributesAppStoreAgeRating
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FOUR_PLUS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NINE_PLUS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TWELVE_PLUS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEVENTEEN_PLUS = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppInfoAttributesAppStoreState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEVELOPER_REMOVED_FROM_SALE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEVELOPER_REJECTED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_REVIEW = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_BINARY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		METADATA_REJECTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_APPLE_RELEASE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_CONTRACT = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_DEVELOPER_RELEASE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREPARE_FOR_SUBMISSION = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREORDER_READY_FOR_SALE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING_FOR_APP_STORE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY_FOR_SALE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVED_FROM_SALE = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WAITING_FOR_EXPORT_COMPLIANCE = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WAITING_FOR_REVIEW = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPLACED_WITH_NEW_VERSION = 16,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppInfoAttributesBrazilAgeRating
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		L = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TWELVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FOURTEEN = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIXTEEN = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EIGHTEEN = 5,
	}
	
	public class AppInfoRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="ageRatingDeclaration")]
		public AppInfoRelationshipsAgeRatingDeclaration AgeRatingDeclaration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="app")]
		public AppInfoRelationshipsApp App { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="appInfoLocalizations")]
		public AppInfoRelationshipsAppInfoLocalizations AppInfoLocalizations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="primaryCategory")]
		public AppInfoRelationshipsPrimaryCategory PrimaryCategory { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="primarySubcategoryOne")]
		public AppInfoRelationshipsPrimarySubcategoryOne PrimarySubcategoryOne { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="primarySubcategoryTwo")]
		public AppInfoRelationshipsPrimarySubcategoryTwo PrimarySubcategoryTwo { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="secondaryCategory")]
		public AppInfoRelationshipsSecondaryCategory SecondaryCategory { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="secondarySubcategoryOne")]
		public AppInfoRelationshipsSecondarySubcategoryOne SecondarySubcategoryOne { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="secondarySubcategoryTwo")]
		public AppInfoRelationshipsSecondarySubcategoryTwo SecondarySubcategoryTwo { get; set; }
	}
	
	public class AppInfoRelationshipsAgeRatingDeclaration
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoRelationshipsAgeRatingDeclarationData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppInfoRelationshipsAgeRatingDeclarationLinks Links { get; set; }
	}
	
	public class AppInfoRelationshipsAgeRatingDeclarationData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AgeRatingDeclarationType Type { get; set; }
	}
	
	public class AppInfoRelationshipsAgeRatingDeclarationLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppInfoRelationshipsApp
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoRelationshipsAppData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppInfoRelationshipsAppLinks Links { get; set; }
	}
	
	public class AppInfoRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class AppInfoRelationshipsAppLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppInfoRelationshipsAppInfoLocalizations
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoRelationshipsAppInfoLocalizationsData[] AppInfoRelationshipsAppInfoLocalizationsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppInfoRelationshipsAppInfoLocalizationsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppInfoRelationshipsAppInfoLocalizationsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppInfoRelationshipsAppInfoLocalizationsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppInfoRelationshipsAppInfoLocalizationsDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appInfoLocalizations = 0,
	}
	
	public class AppInfoRelationshipsAppInfoLocalizationsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppInfoRelationshipsPrimaryCategory
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoRelationshipsPrimaryCategoryData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppInfoRelationshipsPrimaryCategoryLinks Links { get; set; }
	}
	
	public class AppInfoRelationshipsPrimaryCategoryData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppCategoryRelationshipsParentDataType Type { get; set; }
	}
	
	public class AppInfoRelationshipsPrimaryCategoryLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppInfoRelationshipsPrimarySubcategoryOne
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoRelationshipsPrimarySubcategoryOneData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppInfoRelationshipsPrimarySubcategoryOneLinks Links { get; set; }
	}
	
	public class AppInfoRelationshipsPrimarySubcategoryOneData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppCategoryRelationshipsParentDataType Type { get; set; }
	}
	
	public class AppInfoRelationshipsPrimarySubcategoryOneLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppInfoRelationshipsPrimarySubcategoryTwo
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoRelationshipsPrimarySubcategoryTwoData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppInfoRelationshipsPrimarySubcategoryTwoLinks Links { get; set; }
	}
	
	public class AppInfoRelationshipsPrimarySubcategoryTwoData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppCategoryRelationshipsParentDataType Type { get; set; }
	}
	
	public class AppInfoRelationshipsPrimarySubcategoryTwoLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppInfoRelationshipsSecondaryCategory
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoRelationshipsSecondaryCategoryData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppInfoRelationshipsSecondaryCategoryLinks Links { get; set; }
	}
	
	public class AppInfoRelationshipsSecondaryCategoryData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppCategoryRelationshipsParentDataType Type { get; set; }
	}
	
	public class AppInfoRelationshipsSecondaryCategoryLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppInfoRelationshipsSecondarySubcategoryOne
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoRelationshipsSecondarySubcategoryOneData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppInfoRelationshipsSecondarySubcategoryOneLinks Links { get; set; }
	}
	
	public class AppInfoRelationshipsSecondarySubcategoryOneData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppCategoryRelationshipsParentDataType Type { get; set; }
	}
	
	public class AppInfoRelationshipsSecondarySubcategoryOneLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppInfoRelationshipsSecondarySubcategoryTwo
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoRelationshipsSecondarySubcategoryTwoData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppInfoRelationshipsSecondarySubcategoryTwoLinks Links { get; set; }
	}
	
	public class AppInfoRelationshipsSecondarySubcategoryTwoData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppCategoryRelationshipsParentDataType Type { get; set; }
	}
	
	public class AppInfoRelationshipsSecondarySubcategoryTwoLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppInfoLocalization
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppInfoLocalizationAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppInfoLocalizationRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppInfoRelationshipsAppInfoLocalizationsDataType Type { get; set; }
	}
	
	public class AppInfoLocalizationAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="locale")]
		public string Locale { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="privacyPolicyText")]
		public string PrivacyPolicyText { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="privacyPolicyUrl")]
		public string PrivacyPolicyUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subtitle")]
		public string Subtitle { get; set; }
	}
	
	public class AppInfoLocalizationRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="appInfo")]
		public AppInfoLocalizationRelationshipsAppInfo AppInfo { get; set; }
	}
	
	public class AppInfoLocalizationRelationshipsAppInfo
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoLocalizationRelationshipsAppInfoData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppInfoLocalizationRelationshipsAppInfoLinks Links { get; set; }
	}
	
	public class AppInfoLocalizationRelationshipsAppInfoData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppInfosDataType Type { get; set; }
	}
	
	public class AppInfoLocalizationRelationshipsAppInfoLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppInfoLocalizationCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoLocalizationCreateRequestData Data { get; set; }
	}
	
	public class AppInfoLocalizationCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppInfoLocalizationCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppInfoLocalizationCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppInfoRelationshipsAppInfoLocalizationsDataType Type { get; set; }
	}
	
	public class AppInfoLocalizationCreateRequestDataAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="locale")]
		public string Locale { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="privacyPolicyText")]
		public string PrivacyPolicyText { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="privacyPolicyUrl")]
		public string PrivacyPolicyUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subtitle")]
		public string Subtitle { get; set; }
	}
	
	public class AppInfoLocalizationCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="appInfo")]
		public AppInfoLocalizationCreateRequestDataRelationshipsAppInfo AppInfo { get; set; }
	}
	
	public class AppInfoLocalizationCreateRequestDataRelationshipsAppInfo
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoLocalizationCreateRequestDataRelationshipsAppInfoData Data { get; set; }
	}
	
	public class AppInfoLocalizationCreateRequestDataRelationshipsAppInfoData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppInfosDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppInfoLocalizationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoLocalization Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppInfoLocalizationUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoLocalizationUpdateRequestData Data { get; set; }
	}
	
	public class AppInfoLocalizationUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppInfoLocalizationUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppInfoRelationshipsAppInfoLocalizationsDataType Type { get; set; }
	}
	
	public class AppInfoLocalizationUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="privacyPolicyText")]
		public string PrivacyPolicyText { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="privacyPolicyUrl")]
		public string PrivacyPolicyUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subtitle")]
		public string Subtitle { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppInfoLocalizationsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoLocalization[] Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppInfoResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfo Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppInfoUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoUpdateRequestData Data { get; set; }
	}
	
	public class AppInfoUpdateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppInfoUpdateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppInfosDataType Type { get; set; }
	}
	
	public class AppInfoUpdateRequestDataRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="primaryCategory")]
		public AppInfoUpdateRequestDataRelationshipsPrimaryCategory PrimaryCategory { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="primarySubcategoryOne")]
		public AppInfoUpdateRequestDataRelationshipsPrimarySubcategoryOne PrimarySubcategoryOne { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="primarySubcategoryTwo")]
		public AppInfoUpdateRequestDataRelationshipsPrimarySubcategoryTwo PrimarySubcategoryTwo { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="secondaryCategory")]
		public AppInfoUpdateRequestDataRelationshipsSecondaryCategory SecondaryCategory { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="secondarySubcategoryOne")]
		public AppInfoUpdateRequestDataRelationshipsSecondarySubcategoryOne SecondarySubcategoryOne { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="secondarySubcategoryTwo")]
		public AppInfoUpdateRequestDataRelationshipsSecondarySubcategoryTwo SecondarySubcategoryTwo { get; set; }
	}
	
	public class AppInfoUpdateRequestDataRelationshipsPrimaryCategory
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoUpdateRequestDataRelationshipsPrimaryCategoryData Data { get; set; }
	}
	
	public class AppInfoUpdateRequestDataRelationshipsPrimaryCategoryData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppCategoryRelationshipsParentDataType Type { get; set; }
	}
	
	public class AppInfoUpdateRequestDataRelationshipsPrimarySubcategoryOne
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoUpdateRequestDataRelationshipsPrimarySubcategoryOneData Data { get; set; }
	}
	
	public class AppInfoUpdateRequestDataRelationshipsPrimarySubcategoryOneData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppCategoryRelationshipsParentDataType Type { get; set; }
	}
	
	public class AppInfoUpdateRequestDataRelationshipsPrimarySubcategoryTwo
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoUpdateRequestDataRelationshipsPrimarySubcategoryTwoData Data { get; set; }
	}
	
	public class AppInfoUpdateRequestDataRelationshipsPrimarySubcategoryTwoData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppCategoryRelationshipsParentDataType Type { get; set; }
	}
	
	public class AppInfoUpdateRequestDataRelationshipsSecondaryCategory
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoUpdateRequestDataRelationshipsSecondaryCategoryData Data { get; set; }
	}
	
	public class AppInfoUpdateRequestDataRelationshipsSecondaryCategoryData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppCategoryRelationshipsParentDataType Type { get; set; }
	}
	
	public class AppInfoUpdateRequestDataRelationshipsSecondarySubcategoryOne
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoUpdateRequestDataRelationshipsSecondarySubcategoryOneData Data { get; set; }
	}
	
	public class AppInfoUpdateRequestDataRelationshipsSecondarySubcategoryOneData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppCategoryRelationshipsParentDataType Type { get; set; }
	}
	
	public class AppInfoUpdateRequestDataRelationshipsSecondarySubcategoryTwo
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfoUpdateRequestDataRelationshipsSecondarySubcategoryTwoData Data { get; set; }
	}
	
	public class AppInfoUpdateRequestDataRelationshipsSecondarySubcategoryTwoData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppCategoryRelationshipsParentDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppInfosResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppInfo[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppMediaAssetState
	{
		
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public AppMediaStateError[] Errors { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<AppMediaAssetStateState> State { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="warnings")]
		public AppMediaStateError[] Warnings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppMediaStateError
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppMediaAssetStateState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWAITING_UPLOAD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPLOAD_COMPLETE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPreOrder
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppPreOrderAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppPreOrderRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsPreOrderDataType Type { get; set; }
	}
	
	public class AppPreOrderAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="appReleaseDate")]
		public System.Nullable<System.DateOnly> AppReleaseDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="preOrderAvailableDate")]
		public System.Nullable<System.DateOnly> PreOrderAvailableDate { get; set; }
	}
	
	public class AppPreOrderRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="app")]
		public AppPreOrderRelationshipsApp App { get; set; }
	}
	
	public class AppPreOrderRelationshipsApp
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreOrderRelationshipsAppData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppPreOrderRelationshipsAppLinks Links { get; set; }
	}
	
	public class AppPreOrderRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class AppPreOrderRelationshipsAppLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPreOrderCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreOrderCreateRequestData Data { get; set; }
	}
	
	public class AppPreOrderCreateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppPreOrderCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppPreOrderCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsPreOrderDataType Type { get; set; }
	}
	
	public class AppPreOrderCreateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="appReleaseDate")]
		public System.Nullable<System.DateOnly> AppReleaseDate { get; set; }
	}
	
	public class AppPreOrderCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="app")]
		public AppPreOrderCreateRequestDataRelationshipsApp App { get; set; }
	}
	
	public class AppPreOrderCreateRequestDataRelationshipsApp
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreOrderCreateRequestDataRelationshipsAppData Data { get; set; }
	}
	
	public class AppPreOrderCreateRequestDataRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPreOrderResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreOrder Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPreOrderUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreOrderUpdateRequestData Data { get; set; }
	}
	
	public class AppPreOrderUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppPreOrderUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsPreOrderDataType Type { get; set; }
	}
	
	public class AppPreOrderUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="appReleaseDate")]
		public System.Nullable<System.DateOnly> AppReleaseDate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPreview
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppPreviewAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppPreviewRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewType Type { get; set; }
	}
	
	public class AppPreviewAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="assetDeliveryState")]
		public AppMediaAssetState AssetDeliveryState { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fileName")]
		public string FileName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fileSize")]
		public System.Nullable<System.Int32> FileSize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previewFrameTimeCode")]
		public string PreviewFrameTimeCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previewImage")]
		public ImageAsset PreviewImage { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sourceFileChecksum")]
		public string SourceFileChecksum { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uploadOperations")]
		public UploadOperation[] UploadOperations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="videoUrl")]
		public string VideoUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImageAsset
	{
		
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Int32> Height { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="templateUrl")]
		public string TemplateUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Int32> Width { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UploadOperation
	{
		
		[System.Runtime.Serialization.DataMember(Name="length")]
		public System.Nullable<System.Int32> Length { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="method")]
		public string Method { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="offset")]
		public System.Nullable<System.Int32> Offset { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="requestHeaders")]
		public UploadOperationHeader[] RequestHeaders { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UploadOperationHeader
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	public class AppPreviewRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="appPreviewSet")]
		public AppPreviewRelationshipsAppPreviewSet AppPreviewSet { get; set; }
	}
	
	public class AppPreviewRelationshipsAppPreviewSet
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreviewRelationshipsAppPreviewSetData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppPreviewRelationshipsAppPreviewSetLinks Links { get; set; }
	}
	
	public class AppPreviewRelationshipsAppPreviewSetData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewRelationshipsAppPreviewSetDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppPreviewRelationshipsAppPreviewSetDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appPreviewSets = 0,
	}
	
	public class AppPreviewRelationshipsAppPreviewSetLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppPreviewType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appPreviews = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPreviewCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreviewCreateRequestData Data { get; set; }
	}
	
	public class AppPreviewCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppPreviewCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppPreviewCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewType Type { get; set; }
	}
	
	public class AppPreviewCreateRequestDataAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fileName")]
		public string FileName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fileSize")]
		public int FileSize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mimeType")]
		public string MimeType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="previewFrameTimeCode")]
		public string PreviewFrameTimeCode { get; set; }
	}
	
	public class AppPreviewCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="appPreviewSet")]
		public AppPreviewCreateRequestDataRelationshipsAppPreviewSet AppPreviewSet { get; set; }
	}
	
	public class AppPreviewCreateRequestDataRelationshipsAppPreviewSet
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreviewCreateRequestDataRelationshipsAppPreviewSetData Data { get; set; }
	}
	
	public class AppPreviewCreateRequestDataRelationshipsAppPreviewSetData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewRelationshipsAppPreviewSetDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPreviewResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreview Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPreviewSet
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppPreviewSetAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppPreviewSetRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewRelationshipsAppPreviewSetDataType Type { get; set; }
	}
	
	public class AppPreviewSetAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="previewType")]
		public System.Nullable<AppPreviewSetAttributesPreviewType> PreviewType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppPreviewSetAttributesPreviewType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPHONE_65 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPHONE_58 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPHONE_55 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPHONE_47 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPHONE_40 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPHONE_35 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPAD_PRO_3GEN_129 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPAD_PRO_3GEN_11 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPAD_PRO_129 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPAD_105 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPAD_97 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESKTOP = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WATCH_SERIES_4 = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WATCH_SERIES_3 = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLE_TV = 14,
	}
	
	public class AppPreviewSetRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="appPreviews")]
		public AppPreviewSetRelationshipsAppPreviews AppPreviews { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="appStoreVersionLocalization")]
		public AppPreviewSetRelationshipsAppStoreVersionLocalization AppStoreVersionLocalization { get; set; }
	}
	
	public class AppPreviewSetRelationshipsAppPreviews
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreviewSetRelationshipsAppPreviewsData[] AppPreviewSetRelationshipsAppPreviewsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppPreviewSetRelationshipsAppPreviewsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppPreviewSetRelationshipsAppPreviewsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewType Type { get; set; }
	}
	
	public class AppPreviewSetRelationshipsAppPreviewsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppPreviewSetRelationshipsAppStoreVersionLocalization
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreviewSetRelationshipsAppStoreVersionLocalizationData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppPreviewSetRelationshipsAppStoreVersionLocalizationLinks Links { get; set; }
	}
	
	public class AppPreviewSetRelationshipsAppStoreVersionLocalizationData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewSetRelationshipsAppStoreVersionLocalizationDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppPreviewSetRelationshipsAppStoreVersionLocalizationDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appStoreVersionLocalizations = 0,
	}
	
	public class AppPreviewSetRelationshipsAppStoreVersionLocalizationLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPreviewSetAppPreviewsLinkagesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreviewSetAppPreviewsLinkagesRequestData[] AppPreviewSetAppPreviewsLinkagesRequestData { get; set; }
	}
	
	public class AppPreviewSetAppPreviewsLinkagesRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPreviewSetAppPreviewsLinkagesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreviewSetAppPreviewsLinkagesResponseData[] AppPreviewSetAppPreviewsLinkagesResponseData { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppPreviewSetAppPreviewsLinkagesResponseData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPreviewSetCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreviewSetCreateRequestData Data { get; set; }
	}
	
	public class AppPreviewSetCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppPreviewSetCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppPreviewSetCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewRelationshipsAppPreviewSetDataType Type { get; set; }
	}
	
	public class AppPreviewSetCreateRequestDataAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="previewType")]
		public AppPreviewSetAttributesPreviewType PreviewType { get; set; }
	}
	
	public class AppPreviewSetCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="appStoreVersionLocalization")]
		public AppPreviewSetCreateRequestDataRelationshipsAppStoreVersionLocalization AppStoreVersionLocalization { get; set; }
	}
	
	public class AppPreviewSetCreateRequestDataRelationshipsAppStoreVersionLocalization
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreviewSetCreateRequestDataRelationshipsAppStoreVersionLocalizationData Data { get; set; }
	}
	
	public class AppPreviewSetCreateRequestDataRelationshipsAppStoreVersionLocalizationData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewSetRelationshipsAppStoreVersionLocalizationDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPreviewSetResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreviewSet Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public AppPreview[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPreviewSetsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreviewSet[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public AppPreview[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPreviewUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreviewUpdateRequestData Data { get; set; }
	}
	
	public class AppPreviewUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppPreviewUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewType Type { get; set; }
	}
	
	public class AppPreviewUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="previewFrameTimeCode")]
		public string PreviewFrameTimeCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sourceFileChecksum")]
		public string SourceFileChecksum { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uploaded")]
		public System.Nullable<System.Boolean> Uploaded { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPreviewsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPreview[] Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPrice
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppPriceRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsPricesDataType Type { get; set; }
	}
	
	public class AppPriceRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="app")]
		public AppPriceRelationshipsApp App { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="priceTier")]
		public AppPriceRelationshipsPriceTier PriceTier { get; set; }
	}
	
	public class AppPriceRelationshipsApp
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPriceRelationshipsAppData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppPriceRelationshipsAppLinks Links { get; set; }
	}
	
	public class AppPriceRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class AppPriceRelationshipsAppLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppPriceRelationshipsPriceTier
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPriceRelationshipsPriceTierData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppPriceRelationshipsPriceTierLinks Links { get; set; }
	}
	
	public class AppPriceRelationshipsPriceTierData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPriceRelationshipsPriceTierDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppPriceRelationshipsPriceTierDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appPriceTiers = 0,
	}
	
	public class AppPriceRelationshipsPriceTierLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPricePoint
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppPricePointAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppPricePointRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPricePointType Type { get; set; }
	}
	
	public class AppPricePointAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="customerPrice")]
		public string CustomerPrice { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="proceeds")]
		public string Proceeds { get; set; }
	}
	
	public class AppPricePointRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="priceTier")]
		public AppPricePointRelationshipsPriceTier PriceTier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="territory")]
		public AppPricePointRelationshipsTerritory Territory { get; set; }
	}
	
	public class AppPricePointRelationshipsPriceTier
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPricePointRelationshipsPriceTierData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppPricePointRelationshipsPriceTierLinks Links { get; set; }
	}
	
	public class AppPricePointRelationshipsPriceTierData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPriceRelationshipsPriceTierDataType Type { get; set; }
	}
	
	public class AppPricePointRelationshipsPriceTierLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppPricePointRelationshipsTerritory
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPricePointRelationshipsTerritoryData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppPricePointRelationshipsTerritoryLinks Links { get; set; }
	}
	
	public class AppPricePointRelationshipsTerritoryData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAvailableTerritoriesDataType Type { get; set; }
	}
	
	public class AppPricePointRelationshipsTerritoryLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppPricePointType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appPricePoints = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPricePointResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPricePoint Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public Territory[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Territory
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public TerritoryAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAvailableTerritoriesDataType Type { get; set; }
	}
	
	public class TerritoryAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public string Currency { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPricePointsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPricePoint[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public Territory[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPriceResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPrice Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPriceTier
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppPriceTierRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPriceRelationshipsPriceTierDataType Type { get; set; }
	}
	
	public class AppPriceTierRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="pricePoints")]
		public AppPriceTierRelationshipsPricePoints PricePoints { get; set; }
	}
	
	public class AppPriceTierRelationshipsPricePoints
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPriceTierRelationshipsPricePointsData[] AppPriceTierRelationshipsPricePointsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppPriceTierRelationshipsPricePointsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppPriceTierRelationshipsPricePointsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPricePointType Type { get; set; }
	}
	
	public class AppPriceTierRelationshipsPricePointsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPriceTierResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPriceTier Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public AppPricePoint[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPriceTiersResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPriceTier[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public AppPricePoint[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppPricesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppPrice[] Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public App Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppScreenshot
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppScreenshotAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppScreenshotRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppScreenshotType Type { get; set; }
	}
	
	public class AppScreenshotAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="assetDeliveryState")]
		public AppMediaAssetState AssetDeliveryState { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="assetToken")]
		public string AssetToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="assetType")]
		public string AssetType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fileName")]
		public string FileName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fileSize")]
		public System.Nullable<System.Int32> FileSize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imageAsset")]
		public ImageAsset ImageAsset { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sourceFileChecksum")]
		public string SourceFileChecksum { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uploadOperations")]
		public UploadOperation[] UploadOperations { get; set; }
	}
	
	public class AppScreenshotRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="appScreenshotSet")]
		public AppScreenshotRelationshipsAppScreenshotSet AppScreenshotSet { get; set; }
	}
	
	public class AppScreenshotRelationshipsAppScreenshotSet
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppScreenshotRelationshipsAppScreenshotSetData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppScreenshotRelationshipsAppScreenshotSetLinks Links { get; set; }
	}
	
	public class AppScreenshotRelationshipsAppScreenshotSetData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppScreenshotRelationshipsAppScreenshotSetDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppScreenshotRelationshipsAppScreenshotSetDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appScreenshotSets = 0,
	}
	
	public class AppScreenshotRelationshipsAppScreenshotSetLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppScreenshotType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appScreenshots = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppScreenshotCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppScreenshotCreateRequestData Data { get; set; }
	}
	
	public class AppScreenshotCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppScreenshotCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppScreenshotCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppScreenshotType Type { get; set; }
	}
	
	public class AppScreenshotCreateRequestDataAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fileName")]
		public string FileName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fileSize")]
		public int FileSize { get; set; }
	}
	
	public class AppScreenshotCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="appScreenshotSet")]
		public AppScreenshotCreateRequestDataRelationshipsAppScreenshotSet AppScreenshotSet { get; set; }
	}
	
	public class AppScreenshotCreateRequestDataRelationshipsAppScreenshotSet
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppScreenshotCreateRequestDataRelationshipsAppScreenshotSetData Data { get; set; }
	}
	
	public class AppScreenshotCreateRequestDataRelationshipsAppScreenshotSetData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppScreenshotRelationshipsAppScreenshotSetDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppScreenshotResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppScreenshot Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppScreenshotSet
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppScreenshotSetAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppScreenshotSetRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppScreenshotRelationshipsAppScreenshotSetDataType Type { get; set; }
	}
	
	public class AppScreenshotSetAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="screenshotDisplayType")]
		public System.Nullable<AppScreenshotSetAttributesScreenshotDisplayType> ScreenshotDisplayType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppScreenshotSetAttributesScreenshotDisplayType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPHONE_65 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPHONE_58 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPHONE_55 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPHONE_47 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPHONE_40 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPHONE_35 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPAD_PRO_3GEN_129 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPAD_PRO_3GEN_11 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPAD_PRO_129 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPAD_105 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPAD_97 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_DESKTOP = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_WATCH_SERIES_4 = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_WATCH_SERIES_3 = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_APPLE_TV = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPHONE_65 = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPHONE_58 = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPHONE_55 = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPHONE_47 = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPHONE_40 = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPAD_PRO_3GEN_129 = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPAD_PRO_3GEN_11 = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPAD_PRO_129 = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPAD_105 = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPAD_97 = 24,
	}
	
	public class AppScreenshotSetRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="appScreenshots")]
		public AppScreenshotSetRelationshipsAppScreenshots AppScreenshots { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="appStoreVersionLocalization")]
		public AppScreenshotSetRelationshipsAppStoreVersionLocalization AppStoreVersionLocalization { get; set; }
	}
	
	public class AppScreenshotSetRelationshipsAppScreenshots
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppScreenshotSetRelationshipsAppScreenshotsData[] AppScreenshotSetRelationshipsAppScreenshotsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppScreenshotSetRelationshipsAppScreenshotsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppScreenshotSetRelationshipsAppScreenshotsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppScreenshotType Type { get; set; }
	}
	
	public class AppScreenshotSetRelationshipsAppScreenshotsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppScreenshotSetRelationshipsAppStoreVersionLocalization
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppScreenshotSetRelationshipsAppStoreVersionLocalizationData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppScreenshotSetRelationshipsAppStoreVersionLocalizationLinks Links { get; set; }
	}
	
	public class AppScreenshotSetRelationshipsAppStoreVersionLocalizationData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewSetRelationshipsAppStoreVersionLocalizationDataType Type { get; set; }
	}
	
	public class AppScreenshotSetRelationshipsAppStoreVersionLocalizationLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppScreenshotSetAppScreenshotsLinkagesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppScreenshotSetAppScreenshotsLinkagesRequestData[] AppScreenshotSetAppScreenshotsLinkagesRequestData { get; set; }
	}
	
	public class AppScreenshotSetAppScreenshotsLinkagesRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppScreenshotType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppScreenshotSetAppScreenshotsLinkagesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppScreenshotSetAppScreenshotsLinkagesResponseData[] AppScreenshotSetAppScreenshotsLinkagesResponseData { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppScreenshotSetAppScreenshotsLinkagesResponseData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppScreenshotType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppScreenshotSetCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppScreenshotSetCreateRequestData Data { get; set; }
	}
	
	public class AppScreenshotSetCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppScreenshotSetCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppScreenshotSetCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppScreenshotRelationshipsAppScreenshotSetDataType Type { get; set; }
	}
	
	public class AppScreenshotSetCreateRequestDataAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="screenshotDisplayType")]
		public AppScreenshotSetAttributesScreenshotDisplayType ScreenshotDisplayType { get; set; }
	}
	
	public class AppScreenshotSetCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="appStoreVersionLocalization")]
		public AppScreenshotSetCreateRequestDataRelationshipsAppStoreVersionLocalization AppStoreVersionLocalization { get; set; }
	}
	
	public class AppScreenshotSetCreateRequestDataRelationshipsAppStoreVersionLocalization
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppScreenshotSetCreateRequestDataRelationshipsAppStoreVersionLocalizationData Data { get; set; }
	}
	
	public class AppScreenshotSetCreateRequestDataRelationshipsAppStoreVersionLocalizationData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewSetRelationshipsAppStoreVersionLocalizationDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppScreenshotSetResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppScreenshotSet Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public AppScreenshot[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppScreenshotSetsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppScreenshotSet[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public AppScreenshot[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppScreenshotUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppScreenshotUpdateRequestData Data { get; set; }
	}
	
	public class AppScreenshotUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppScreenshotUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppScreenshotType Type { get; set; }
	}
	
	public class AppScreenshotUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="sourceFileChecksum")]
		public string SourceFileChecksum { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uploaded")]
		public System.Nullable<System.Boolean> Uploaded { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppScreenshotsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppScreenshot[] Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppStoreAgeRating
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FOUR_PLUS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NINE_PLUS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TWELVE_PLUS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEVENTEEN_PLUS = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreReviewAttachment
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppStoreReviewAttachmentAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppStoreReviewAttachmentRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreReviewAttachmentType Type { get; set; }
	}
	
	public class AppStoreReviewAttachmentAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="assetDeliveryState")]
		public AppMediaAssetState AssetDeliveryState { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fileName")]
		public string FileName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fileSize")]
		public System.Nullable<System.Int32> FileSize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sourceFileChecksum")]
		public string SourceFileChecksum { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uploadOperations")]
		public UploadOperation[] UploadOperations { get; set; }
	}
	
	public class AppStoreReviewAttachmentRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="appStoreReviewDetail")]
		public AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail AppStoreReviewDetail { get; set; }
	}
	
	public class AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreReviewAttachmentRelationshipsAppStoreReviewDetailData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppStoreReviewAttachmentRelationshipsAppStoreReviewDetailLinks Links { get; set; }
	}
	
	public class AppStoreReviewAttachmentRelationshipsAppStoreReviewDetailData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreReviewAttachmentRelationshipsAppStoreReviewDetailDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppStoreReviewAttachmentRelationshipsAppStoreReviewDetailDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appStoreReviewDetails = 0,
	}
	
	public class AppStoreReviewAttachmentRelationshipsAppStoreReviewDetailLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppStoreReviewAttachmentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appStoreReviewAttachments = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreReviewAttachmentCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreReviewAttachmentCreateRequestData Data { get; set; }
	}
	
	public class AppStoreReviewAttachmentCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppStoreReviewAttachmentCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppStoreReviewAttachmentCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreReviewAttachmentType Type { get; set; }
	}
	
	public class AppStoreReviewAttachmentCreateRequestDataAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fileName")]
		public string FileName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fileSize")]
		public int FileSize { get; set; }
	}
	
	public class AppStoreReviewAttachmentCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="appStoreReviewDetail")]
		public AppStoreReviewAttachmentCreateRequestDataRelationshipsAppStoreReviewDetail AppStoreReviewDetail { get; set; }
	}
	
	public class AppStoreReviewAttachmentCreateRequestDataRelationshipsAppStoreReviewDetail
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreReviewAttachmentCreateRequestDataRelationshipsAppStoreReviewDetailData Data { get; set; }
	}
	
	public class AppStoreReviewAttachmentCreateRequestDataRelationshipsAppStoreReviewDetailData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreReviewAttachmentRelationshipsAppStoreReviewDetailDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreReviewAttachmentResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreReviewAttachment Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreReviewAttachmentUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreReviewAttachmentUpdateRequestData Data { get; set; }
	}
	
	public class AppStoreReviewAttachmentUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppStoreReviewAttachmentUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreReviewAttachmentType Type { get; set; }
	}
	
	public class AppStoreReviewAttachmentUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="sourceFileChecksum")]
		public string SourceFileChecksum { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uploaded")]
		public System.Nullable<System.Boolean> Uploaded { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreReviewAttachmentsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreReviewAttachment[] Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreReviewDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppStoreReviewDetailAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppStoreReviewDetailRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreReviewAttachmentRelationshipsAppStoreReviewDetailDataType Type { get; set; }
	}
	
	public class AppStoreReviewDetailAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="contactEmail")]
		public string ContactEmail { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contactFirstName")]
		public string ContactFirstName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contactLastName")]
		public string ContactLastName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contactPhone")]
		public string ContactPhone { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="demoAccountName")]
		public string DemoAccountName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="demoAccountPassword")]
		public string DemoAccountPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="demoAccountRequired")]
		public System.Nullable<System.Boolean> DemoAccountRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
	}
	
	public class AppStoreReviewDetailRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="appStoreReviewAttachments")]
		public AppStoreReviewDetailRelationshipsAppStoreReviewAttachments AppStoreReviewAttachments { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="appStoreVersion")]
		public AppStoreReviewDetailRelationshipsAppStoreVersion AppStoreVersion { get; set; }
	}
	
	public class AppStoreReviewDetailRelationshipsAppStoreReviewAttachments
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreReviewDetailRelationshipsAppStoreReviewAttachmentsData[] AppStoreReviewDetailRelationshipsAppStoreReviewAttachmentsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppStoreReviewDetailRelationshipsAppStoreReviewAttachmentsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppStoreReviewDetailRelationshipsAppStoreReviewAttachmentsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreReviewAttachmentType Type { get; set; }
	}
	
	public class AppStoreReviewDetailRelationshipsAppStoreReviewAttachmentsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppStoreReviewDetailRelationshipsAppStoreVersion
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreReviewDetailRelationshipsAppStoreVersionData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppStoreReviewDetailRelationshipsAppStoreVersionLinks Links { get; set; }
	}
	
	public class AppStoreReviewDetailRelationshipsAppStoreVersionData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppStoreVersionsDataType Type { get; set; }
	}
	
	public class AppStoreReviewDetailRelationshipsAppStoreVersionLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreReviewDetailCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreReviewDetailCreateRequestData Data { get; set; }
	}
	
	public class AppStoreReviewDetailCreateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppStoreReviewDetailCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppStoreReviewDetailCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreReviewAttachmentRelationshipsAppStoreReviewDetailDataType Type { get; set; }
	}
	
	public class AppStoreReviewDetailCreateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="contactEmail")]
		public string ContactEmail { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contactFirstName")]
		public string ContactFirstName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contactLastName")]
		public string ContactLastName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contactPhone")]
		public string ContactPhone { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="demoAccountName")]
		public string DemoAccountName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="demoAccountPassword")]
		public string DemoAccountPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="demoAccountRequired")]
		public System.Nullable<System.Boolean> DemoAccountRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
	}
	
	public class AppStoreReviewDetailCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="appStoreVersion")]
		public AppStoreReviewDetailCreateRequestDataRelationshipsAppStoreVersion AppStoreVersion { get; set; }
	}
	
	public class AppStoreReviewDetailCreateRequestDataRelationshipsAppStoreVersion
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreReviewDetailCreateRequestDataRelationshipsAppStoreVersionData Data { get; set; }
	}
	
	public class AppStoreReviewDetailCreateRequestDataRelationshipsAppStoreVersionData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppStoreVersionsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreReviewDetailResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreReviewDetail Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public AppStoreReviewAttachment[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreReviewDetailUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreReviewDetailUpdateRequestData Data { get; set; }
	}
	
	public class AppStoreReviewDetailUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppStoreReviewDetailUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreReviewAttachmentRelationshipsAppStoreReviewDetailDataType Type { get; set; }
	}
	
	public class AppStoreReviewDetailUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="contactEmail")]
		public string ContactEmail { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contactFirstName")]
		public string ContactFirstName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contactLastName")]
		public string ContactLastName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contactPhone")]
		public string ContactPhone { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="demoAccountName")]
		public string DemoAccountName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="demoAccountPassword")]
		public string DemoAccountPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="demoAccountRequired")]
		public System.Nullable<System.Boolean> DemoAccountRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersion
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppStoreVersionAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppStoreVersionRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppStoreVersionsDataType Type { get; set; }
	}
	
	public class AppStoreVersionAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="appStoreState")]
		public AppInfoAttributesAppStoreState AppStoreState { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="copyright")]
		public string Copyright { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="createdDate")]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="downloadable")]
		public System.Nullable<System.Boolean> Downloadable { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="earliestReleaseDate")]
		public System.Nullable<System.DateTimeOffset> EarliestReleaseDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public Platform Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="releaseType")]
		public System.Nullable<AppStoreVersionAttributesReleaseType> ReleaseType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usesIdfa")]
		public System.Nullable<System.Boolean> UsesIdfa { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="versionString")]
		public string VersionString { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppStoreVersionAttributesReleaseType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANUAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AFTER_APPROVAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCHEDULED = 2,
	}
	
	public class AppStoreVersionRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="ageRatingDeclaration")]
		public AppStoreVersionRelationshipsAgeRatingDeclaration AgeRatingDeclaration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="app")]
		public AppStoreVersionRelationshipsApp App { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="appStoreReviewDetail")]
		public AppStoreVersionRelationshipsAppStoreReviewDetail AppStoreReviewDetail { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="appStoreVersionLocalizations")]
		public AppStoreVersionRelationshipsAppStoreVersionLocalizations AppStoreVersionLocalizations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="appStoreVersionPhasedRelease")]
		public AppStoreVersionRelationshipsAppStoreVersionPhasedRelease AppStoreVersionPhasedRelease { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="appStoreVersionSubmission")]
		public AppStoreVersionRelationshipsAppStoreVersionSubmission AppStoreVersionSubmission { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="build")]
		public AppStoreVersionRelationshipsBuild Build { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="idfaDeclaration")]
		public AppStoreVersionRelationshipsIdfaDeclaration IdfaDeclaration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="routingAppCoverage")]
		public AppStoreVersionRelationshipsRoutingAppCoverage RoutingAppCoverage { get; set; }
	}
	
	public class AppStoreVersionRelationshipsAgeRatingDeclaration
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionRelationshipsAgeRatingDeclarationData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppStoreVersionRelationshipsAgeRatingDeclarationLinks Links { get; set; }
	}
	
	public class AppStoreVersionRelationshipsAgeRatingDeclarationData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AgeRatingDeclarationType Type { get; set; }
	}
	
	public class AppStoreVersionRelationshipsAgeRatingDeclarationLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppStoreVersionRelationshipsApp
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionRelationshipsAppData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppStoreVersionRelationshipsAppLinks Links { get; set; }
	}
	
	public class AppStoreVersionRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class AppStoreVersionRelationshipsAppLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppStoreVersionRelationshipsAppStoreReviewDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionRelationshipsAppStoreReviewDetailData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppStoreVersionRelationshipsAppStoreReviewDetailLinks Links { get; set; }
	}
	
	public class AppStoreVersionRelationshipsAppStoreReviewDetailData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreReviewAttachmentRelationshipsAppStoreReviewDetailDataType Type { get; set; }
	}
	
	public class AppStoreVersionRelationshipsAppStoreReviewDetailLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppStoreVersionRelationshipsAppStoreVersionLocalizations
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionRelationshipsAppStoreVersionLocalizationsData[] AppStoreVersionRelationshipsAppStoreVersionLocalizationsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppStoreVersionRelationshipsAppStoreVersionLocalizationsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppStoreVersionRelationshipsAppStoreVersionLocalizationsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewSetRelationshipsAppStoreVersionLocalizationDataType Type { get; set; }
	}
	
	public class AppStoreVersionRelationshipsAppStoreVersionLocalizationsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppStoreVersionRelationshipsAppStoreVersionPhasedRelease
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionRelationshipsAppStoreVersionPhasedReleaseData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppStoreVersionRelationshipsAppStoreVersionPhasedReleaseLinks Links { get; set; }
	}
	
	public class AppStoreVersionRelationshipsAppStoreVersionPhasedReleaseData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreVersionRelationshipsAppStoreVersionPhasedReleaseDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppStoreVersionRelationshipsAppStoreVersionPhasedReleaseDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appStoreVersionPhasedReleases = 0,
	}
	
	public class AppStoreVersionRelationshipsAppStoreVersionPhasedReleaseLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppStoreVersionRelationshipsAppStoreVersionSubmission
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionRelationshipsAppStoreVersionSubmissionData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppStoreVersionRelationshipsAppStoreVersionSubmissionLinks Links { get; set; }
	}
	
	public class AppStoreVersionRelationshipsAppStoreVersionSubmissionData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreVersionRelationshipsAppStoreVersionSubmissionDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppStoreVersionRelationshipsAppStoreVersionSubmissionDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		appStoreVersionSubmissions = 0,
	}
	
	public class AppStoreVersionRelationshipsAppStoreVersionSubmissionLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppStoreVersionRelationshipsBuild
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionRelationshipsBuildData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppStoreVersionRelationshipsBuildLinks Links { get; set; }
	}
	
	public class AppStoreVersionRelationshipsBuildData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	public class AppStoreVersionRelationshipsBuildLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppStoreVersionRelationshipsIdfaDeclaration
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionRelationshipsIdfaDeclarationData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppStoreVersionRelationshipsIdfaDeclarationLinks Links { get; set; }
	}
	
	public class AppStoreVersionRelationshipsIdfaDeclarationData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreVersionRelationshipsIdfaDeclarationDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppStoreVersionRelationshipsIdfaDeclarationDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		idfaDeclarations = 0,
	}
	
	public class AppStoreVersionRelationshipsIdfaDeclarationLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppStoreVersionRelationshipsRoutingAppCoverage
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionRelationshipsRoutingAppCoverageData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppStoreVersionRelationshipsRoutingAppCoverageLinks Links { get; set; }
	}
	
	public class AppStoreVersionRelationshipsRoutingAppCoverageData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreVersionRelationshipsRoutingAppCoverageDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppStoreVersionRelationshipsRoutingAppCoverageDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		routingAppCoverages = 0,
	}
	
	public class AppStoreVersionRelationshipsRoutingAppCoverageLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersionBuildLinkageRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionBuildLinkageRequestData Data { get; set; }
	}
	
	public class AppStoreVersionBuildLinkageRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersionBuildLinkageResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionBuildLinkageResponseData Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	public class AppStoreVersionBuildLinkageResponseData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersionCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionCreateRequestData Data { get; set; }
	}
	
	public class AppStoreVersionCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppStoreVersionCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppStoreVersionCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppStoreVersionsDataType Type { get; set; }
	}
	
	public class AppStoreVersionCreateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="copyright")]
		public string Copyright { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="earliestReleaseDate")]
		public System.Nullable<System.DateTimeOffset> EarliestReleaseDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public Platform Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="releaseType")]
		public AppStoreVersionAttributesReleaseType ReleaseType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usesIdfa")]
		public System.Nullable<System.Boolean> UsesIdfa { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="versionString")]
		public string VersionString { get; set; }
	}
	
	public class AppStoreVersionCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="app")]
		public AppStoreVersionCreateRequestDataRelationshipsApp App { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="build")]
		public AppStoreVersionCreateRequestDataRelationshipsBuild Build { get; set; }
	}
	
	public class AppStoreVersionCreateRequestDataRelationshipsApp
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionCreateRequestDataRelationshipsAppData Data { get; set; }
	}
	
	public class AppStoreVersionCreateRequestDataRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class AppStoreVersionCreateRequestDataRelationshipsBuild
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionCreateRequestDataRelationshipsBuildData Data { get; set; }
	}
	
	public class AppStoreVersionCreateRequestDataRelationshipsBuildData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersionLocalization
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppStoreVersionLocalizationAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppStoreVersionLocalizationRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewSetRelationshipsAppStoreVersionLocalizationDataType Type { get; set; }
	}
	
	public class AppStoreVersionLocalizationAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="keywords")]
		public string Keywords { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="locale")]
		public string Locale { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="marketingUrl")]
		public string MarketingUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="promotionalText")]
		public string PromotionalText { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="supportUrl")]
		public string SupportUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="whatsNew")]
		public string WhatsNew { get; set; }
	}
	
	public class AppStoreVersionLocalizationRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="appPreviewSets")]
		public AppStoreVersionLocalizationRelationshipsAppPreviewSets AppPreviewSets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="appScreenshotSets")]
		public AppStoreVersionLocalizationRelationshipsAppScreenshotSets AppScreenshotSets { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="appStoreVersion")]
		public AppStoreVersionLocalizationRelationshipsAppStoreVersion AppStoreVersion { get; set; }
	}
	
	public class AppStoreVersionLocalizationRelationshipsAppPreviewSets
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionLocalizationRelationshipsAppPreviewSetsData[] AppStoreVersionLocalizationRelationshipsAppPreviewSetsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppStoreVersionLocalizationRelationshipsAppPreviewSetsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppStoreVersionLocalizationRelationshipsAppPreviewSetsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewRelationshipsAppPreviewSetDataType Type { get; set; }
	}
	
	public class AppStoreVersionLocalizationRelationshipsAppPreviewSetsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppStoreVersionLocalizationRelationshipsAppScreenshotSets
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionLocalizationRelationshipsAppScreenshotSetsData[] AppStoreVersionLocalizationRelationshipsAppScreenshotSetsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppStoreVersionLocalizationRelationshipsAppScreenshotSetsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class AppStoreVersionLocalizationRelationshipsAppScreenshotSetsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppScreenshotRelationshipsAppScreenshotSetDataType Type { get; set; }
	}
	
	public class AppStoreVersionLocalizationRelationshipsAppScreenshotSetsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class AppStoreVersionLocalizationRelationshipsAppStoreVersion
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionLocalizationRelationshipsAppStoreVersionData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppStoreVersionLocalizationRelationshipsAppStoreVersionLinks Links { get; set; }
	}
	
	public class AppStoreVersionLocalizationRelationshipsAppStoreVersionData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppStoreVersionsDataType Type { get; set; }
	}
	
	public class AppStoreVersionLocalizationRelationshipsAppStoreVersionLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersionLocalizationCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionLocalizationCreateRequestData Data { get; set; }
	}
	
	public class AppStoreVersionLocalizationCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppStoreVersionLocalizationCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppStoreVersionLocalizationCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewSetRelationshipsAppStoreVersionLocalizationDataType Type { get; set; }
	}
	
	public class AppStoreVersionLocalizationCreateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="keywords")]
		public string Keywords { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="locale")]
		public string Locale { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="marketingUrl")]
		public string MarketingUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="promotionalText")]
		public string PromotionalText { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="supportUrl")]
		public string SupportUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="whatsNew")]
		public string WhatsNew { get; set; }
	}
	
	public class AppStoreVersionLocalizationCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="appStoreVersion")]
		public AppStoreVersionLocalizationCreateRequestDataRelationshipsAppStoreVersion AppStoreVersion { get; set; }
	}
	
	public class AppStoreVersionLocalizationCreateRequestDataRelationshipsAppStoreVersion
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionLocalizationCreateRequestDataRelationshipsAppStoreVersionData Data { get; set; }
	}
	
	public class AppStoreVersionLocalizationCreateRequestDataRelationshipsAppStoreVersionData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppStoreVersionsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersionLocalizationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionLocalization Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersionLocalizationUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionLocalizationUpdateRequestData Data { get; set; }
	}
	
	public class AppStoreVersionLocalizationUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppStoreVersionLocalizationUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppPreviewSetRelationshipsAppStoreVersionLocalizationDataType Type { get; set; }
	}
	
	public class AppStoreVersionLocalizationUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="keywords")]
		public string Keywords { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="marketingUrl")]
		public string MarketingUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="promotionalText")]
		public string PromotionalText { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="supportUrl")]
		public string SupportUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="whatsNew")]
		public string WhatsNew { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersionLocalizationsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionLocalization[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersionPhasedRelease
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppStoreVersionPhasedReleaseAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreVersionRelationshipsAppStoreVersionPhasedReleaseDataType Type { get; set; }
	}
	
	public class AppStoreVersionPhasedReleaseAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="currentDayNumber")]
		public System.Nullable<System.Int32> CurrentDayNumber { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="phasedReleaseState")]
		public System.Nullable<AppStoreVersionPhasedReleaseAttributesPhasedReleaseState> PhasedReleaseState { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="startDate")]
		public System.Nullable<System.DateTimeOffset> StartDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="totalPauseDuration")]
		public System.Nullable<System.Int32> TotalPauseDuration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppStoreVersionPhasedReleaseAttributesPhasedReleaseState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAUSED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETE = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersionPhasedReleaseCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionPhasedReleaseCreateRequestData Data { get; set; }
	}
	
	public class AppStoreVersionPhasedReleaseCreateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppStoreVersionPhasedReleaseCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppStoreVersionPhasedReleaseCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreVersionRelationshipsAppStoreVersionPhasedReleaseDataType Type { get; set; }
	}
	
	public class AppStoreVersionPhasedReleaseCreateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="phasedReleaseState")]
		public AppStoreVersionPhasedReleaseAttributesPhasedReleaseState PhasedReleaseState { get; set; }
	}
	
	public class AppStoreVersionPhasedReleaseCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="appStoreVersion")]
		public AppStoreVersionPhasedReleaseCreateRequestDataRelationshipsAppStoreVersion AppStoreVersion { get; set; }
	}
	
	public class AppStoreVersionPhasedReleaseCreateRequestDataRelationshipsAppStoreVersion
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionPhasedReleaseCreateRequestDataRelationshipsAppStoreVersionData Data { get; set; }
	}
	
	public class AppStoreVersionPhasedReleaseCreateRequestDataRelationshipsAppStoreVersionData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppStoreVersionsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersionPhasedReleaseResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionPhasedRelease Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersionPhasedReleaseUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionPhasedReleaseUpdateRequestData Data { get; set; }
	}
	
	public class AppStoreVersionPhasedReleaseUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppStoreVersionPhasedReleaseUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreVersionRelationshipsAppStoreVersionPhasedReleaseDataType Type { get; set; }
	}
	
	public class AppStoreVersionPhasedReleaseUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="phasedReleaseState")]
		public AppStoreVersionPhasedReleaseAttributesPhasedReleaseState PhasedReleaseState { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersionResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersion Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AppStoreVersionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEVELOPER_REMOVED_FROM_SALE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEVELOPER_REJECTED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_REVIEW = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_BINARY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		METADATA_REJECTED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_APPLE_RELEASE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_CONTRACT = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_DEVELOPER_RELEASE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREPARE_FOR_SUBMISSION = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREORDER_READY_FOR_SALE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING_FOR_APP_STORE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY_FOR_SALE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVED_FROM_SALE = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WAITING_FOR_EXPORT_COMPLIANCE = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WAITING_FOR_REVIEW = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPLACED_WITH_NEW_VERSION = 16,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersionSubmission
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppStoreVersionSubmissionRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreVersionRelationshipsAppStoreVersionSubmissionDataType Type { get; set; }
	}
	
	public class AppStoreVersionSubmissionRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="appStoreVersion")]
		public AppStoreVersionSubmissionRelationshipsAppStoreVersion AppStoreVersion { get; set; }
	}
	
	public class AppStoreVersionSubmissionRelationshipsAppStoreVersion
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionSubmissionRelationshipsAppStoreVersionData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public AppStoreVersionSubmissionRelationshipsAppStoreVersionLinks Links { get; set; }
	}
	
	public class AppStoreVersionSubmissionRelationshipsAppStoreVersionData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppStoreVersionsDataType Type { get; set; }
	}
	
	public class AppStoreVersionSubmissionRelationshipsAppStoreVersionLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersionSubmissionCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionSubmissionCreateRequestData Data { get; set; }
	}
	
	public class AppStoreVersionSubmissionCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppStoreVersionSubmissionCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreVersionRelationshipsAppStoreVersionSubmissionDataType Type { get; set; }
	}
	
	public class AppStoreVersionSubmissionCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="appStoreVersion")]
		public AppStoreVersionSubmissionCreateRequestDataRelationshipsAppStoreVersion AppStoreVersion { get; set; }
	}
	
	public class AppStoreVersionSubmissionCreateRequestDataRelationshipsAppStoreVersion
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionSubmissionCreateRequestDataRelationshipsAppStoreVersionData Data { get; set; }
	}
	
	public class AppStoreVersionSubmissionCreateRequestDataRelationshipsAppStoreVersionData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppStoreVersionsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersionSubmissionResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionSubmission Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersionUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionUpdateRequestData Data { get; set; }
	}
	
	public class AppStoreVersionUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppStoreVersionUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppStoreVersionUpdateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppStoreVersionsDataType Type { get; set; }
	}
	
	public class AppStoreVersionUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="copyright")]
		public string Copyright { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="downloadable")]
		public System.Nullable<System.Boolean> Downloadable { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="earliestReleaseDate")]
		public System.Nullable<System.DateTimeOffset> EarliestReleaseDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="releaseType")]
		public AppStoreVersionAttributesReleaseType ReleaseType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usesIdfa")]
		public System.Nullable<System.Boolean> UsesIdfa { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="versionString")]
		public string VersionString { get; set; }
	}
	
	public class AppStoreVersionUpdateRequestDataRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="build")]
		public AppStoreVersionUpdateRequestDataRelationshipsBuild Build { get; set; }
	}
	
	public class AppStoreVersionUpdateRequestDataRelationshipsBuild
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersionUpdateRequestDataRelationshipsBuildData Data { get; set; }
	}
	
	public class AppStoreVersionUpdateRequestDataRelationshipsBuildData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppStoreVersionsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppStoreVersion[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppUpdateRequestData Data { get; set; }
	}
	
	public class AppUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public AppUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public AppUpdateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class AppUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="availableInNewTerritories")]
		public System.Nullable<System.Boolean> AvailableInNewTerritories { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bundleId")]
		public string BundleId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contentRightsDeclaration")]
		public AppAttributesContentRightsDeclaration ContentRightsDeclaration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="primaryLocale")]
		public string PrimaryLocale { get; set; }
	}
	
	public class AppUpdateRequestDataRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="availableTerritories")]
		public AppUpdateRequestDataRelationshipsAvailableTerritories AvailableTerritories { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="prices")]
		public AppUpdateRequestDataRelationshipsPrices Prices { get; set; }
	}
	
	public class AppUpdateRequestDataRelationshipsAvailableTerritories
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppUpdateRequestDataRelationshipsAvailableTerritoriesData[] AppUpdateRequestDataRelationshipsAvailableTerritoriesData { get; set; }
	}
	
	public class AppUpdateRequestDataRelationshipsAvailableTerritoriesData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAvailableTerritoriesDataType Type { get; set; }
	}
	
	public class AppUpdateRequestDataRelationshipsPrices
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public AppUpdateRequestDataRelationshipsPricesData[] AppUpdateRequestDataRelationshipsPricesData { get; set; }
	}
	
	public class AppUpdateRequestDataRelationshipsPricesData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsPricesDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AppsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public App[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaAppLocalization
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BetaAppLocalizationAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BetaAppLocalizationRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaAppLocalizationsDataType Type { get; set; }
	}
	
	public class BetaAppLocalizationAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="feedbackEmail")]
		public string FeedbackEmail { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="locale")]
		public string Locale { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="marketingUrl")]
		public string MarketingUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="privacyPolicyUrl")]
		public string PrivacyPolicyUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tvOsPrivacyPolicy")]
		public string TvOsPrivacyPolicy { get; set; }
	}
	
	public class BetaAppLocalizationRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="app")]
		public BetaAppLocalizationRelationshipsApp App { get; set; }
	}
	
	public class BetaAppLocalizationRelationshipsApp
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaAppLocalizationRelationshipsAppData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BetaAppLocalizationRelationshipsAppLinks Links { get; set; }
	}
	
	public class BetaAppLocalizationRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class BetaAppLocalizationRelationshipsAppLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaAppLocalizationCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaAppLocalizationCreateRequestData Data { get; set; }
	}
	
	public class BetaAppLocalizationCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BetaAppLocalizationCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BetaAppLocalizationCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaAppLocalizationsDataType Type { get; set; }
	}
	
	public class BetaAppLocalizationCreateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="feedbackEmail")]
		public string FeedbackEmail { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="locale")]
		public string Locale { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="marketingUrl")]
		public string MarketingUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="privacyPolicyUrl")]
		public string PrivacyPolicyUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tvOsPrivacyPolicy")]
		public string TvOsPrivacyPolicy { get; set; }
	}
	
	public class BetaAppLocalizationCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="app")]
		public BetaAppLocalizationCreateRequestDataRelationshipsApp App { get; set; }
	}
	
	public class BetaAppLocalizationCreateRequestDataRelationshipsApp
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaAppLocalizationCreateRequestDataRelationshipsAppData Data { get; set; }
	}
	
	public class BetaAppLocalizationCreateRequestDataRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaAppLocalizationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaAppLocalization Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public App[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaAppLocalizationUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaAppLocalizationUpdateRequestData Data { get; set; }
	}
	
	public class BetaAppLocalizationUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BetaAppLocalizationUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaAppLocalizationsDataType Type { get; set; }
	}
	
	public class BetaAppLocalizationUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="feedbackEmail")]
		public string FeedbackEmail { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="marketingUrl")]
		public string MarketingUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="privacyPolicyUrl")]
		public string PrivacyPolicyUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tvOsPrivacyPolicy")]
		public string TvOsPrivacyPolicy { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaAppLocalizationsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaAppLocalization[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public App[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaAppReviewDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BetaAppReviewDetailAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BetaAppReviewDetailRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaAppReviewDetailDataType Type { get; set; }
	}
	
	public class BetaAppReviewDetailAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="contactEmail")]
		public string ContactEmail { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contactFirstName")]
		public string ContactFirstName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contactLastName")]
		public string ContactLastName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contactPhone")]
		public string ContactPhone { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="demoAccountName")]
		public string DemoAccountName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="demoAccountPassword")]
		public string DemoAccountPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="demoAccountRequired")]
		public System.Nullable<System.Boolean> DemoAccountRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
	}
	
	public class BetaAppReviewDetailRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="app")]
		public BetaAppReviewDetailRelationshipsApp App { get; set; }
	}
	
	public class BetaAppReviewDetailRelationshipsApp
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaAppReviewDetailRelationshipsAppData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BetaAppReviewDetailRelationshipsAppLinks Links { get; set; }
	}
	
	public class BetaAppReviewDetailRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class BetaAppReviewDetailRelationshipsAppLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaAppReviewDetailResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaAppReviewDetail Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public App[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaAppReviewDetailUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaAppReviewDetailUpdateRequestData Data { get; set; }
	}
	
	public class BetaAppReviewDetailUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BetaAppReviewDetailUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaAppReviewDetailDataType Type { get; set; }
	}
	
	public class BetaAppReviewDetailUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="contactEmail")]
		public string ContactEmail { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contactFirstName")]
		public string ContactFirstName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contactLastName")]
		public string ContactLastName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="contactPhone")]
		public string ContactPhone { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="demoAccountName")]
		public string DemoAccountName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="demoAccountPassword")]
		public string DemoAccountPassword { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="demoAccountRequired")]
		public System.Nullable<System.Boolean> DemoAccountRequired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="notes")]
		public string Notes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaAppReviewDetailsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaAppReviewDetail[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public App[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaAppReviewSubmission
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BetaAppReviewSubmissionAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BetaAppReviewSubmissionRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BetaAppReviewSubmissionType Type { get; set; }
	}
	
	public class BetaAppReviewSubmissionAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="betaReviewState")]
		public System.Nullable<BetaAppReviewSubmissionAttributesBetaReviewState> BetaReviewState { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BetaAppReviewSubmissionAttributesBetaReviewState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WAITING_FOR_REVIEW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_REVIEW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 3,
	}
	
	public class BetaAppReviewSubmissionRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="build")]
		public BetaAppReviewSubmissionRelationshipsBuild Build { get; set; }
	}
	
	public class BetaAppReviewSubmissionRelationshipsBuild
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaAppReviewSubmissionRelationshipsBuildData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BetaAppReviewSubmissionRelationshipsBuildLinks Links { get; set; }
	}
	
	public class BetaAppReviewSubmissionRelationshipsBuildData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	public class BetaAppReviewSubmissionRelationshipsBuildLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BetaAppReviewSubmissionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		betaAppReviewSubmissions = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaAppReviewSubmissionCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaAppReviewSubmissionCreateRequestData Data { get; set; }
	}
	
	public class BetaAppReviewSubmissionCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BetaAppReviewSubmissionCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BetaAppReviewSubmissionType Type { get; set; }
	}
	
	public class BetaAppReviewSubmissionCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="build")]
		public BetaAppReviewSubmissionCreateRequestDataRelationshipsBuild Build { get; set; }
	}
	
	public class BetaAppReviewSubmissionCreateRequestDataRelationshipsBuild
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaAppReviewSubmissionCreateRequestDataRelationshipsBuildData Data { get; set; }
	}
	
	public class BetaAppReviewSubmissionCreateRequestDataRelationshipsBuildData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaAppReviewSubmissionResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaAppReviewSubmission Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public Build[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Build
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BuildAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BuildRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	public class BuildAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="expirationDate")]
		public System.Nullable<System.DateTimeOffset> ExpirationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expired")]
		public System.Nullable<System.Boolean> Expired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iconAssetToken")]
		public ImageAsset IconAssetToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minOsVersion")]
		public string MinOsVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="processingState")]
		public System.Nullable<BuildAttributesProcessingState> ProcessingState { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uploadedDate")]
		public System.Nullable<System.DateTimeOffset> UploadedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usesNonExemptEncryption")]
		public System.Nullable<System.Boolean> UsesNonExemptEncryption { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BuildAttributesProcessingState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALID = 3,
	}
	
	public class BuildRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="app")]
		public BuildRelationshipsApp App { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="appEncryptionDeclaration")]
		public BuildRelationshipsAppEncryptionDeclaration AppEncryptionDeclaration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="appStoreVersion")]
		public BuildRelationshipsAppStoreVersion AppStoreVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="betaAppReviewSubmission")]
		public BuildRelationshipsBetaAppReviewSubmission BetaAppReviewSubmission { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="betaBuildLocalizations")]
		public BuildRelationshipsBetaBuildLocalizations BetaBuildLocalizations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="buildBetaDetail")]
		public BuildRelationshipsBuildBetaDetail BuildBetaDetail { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="icons")]
		public BuildRelationshipsIcons Icons { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="individualTesters")]
		public BuildRelationshipsIndividualTesters IndividualTesters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="preReleaseVersion")]
		public BuildRelationshipsPreReleaseVersion PreReleaseVersion { get; set; }
	}
	
	public class BuildRelationshipsApp
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildRelationshipsAppData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BuildRelationshipsAppLinks Links { get; set; }
	}
	
	public class BuildRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class BuildRelationshipsAppLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class BuildRelationshipsAppEncryptionDeclaration
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildRelationshipsAppEncryptionDeclarationData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BuildRelationshipsAppEncryptionDeclarationLinks Links { get; set; }
	}
	
	public class BuildRelationshipsAppEncryptionDeclarationData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppEncryptionDeclarationType Type { get; set; }
	}
	
	public class BuildRelationshipsAppEncryptionDeclarationLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class BuildRelationshipsAppStoreVersion
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildRelationshipsAppStoreVersionData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BuildRelationshipsAppStoreVersionLinks Links { get; set; }
	}
	
	public class BuildRelationshipsAppStoreVersionData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppStoreVersionsDataType Type { get; set; }
	}
	
	public class BuildRelationshipsAppStoreVersionLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class BuildRelationshipsBetaAppReviewSubmission
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildRelationshipsBetaAppReviewSubmissionData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BuildRelationshipsBetaAppReviewSubmissionLinks Links { get; set; }
	}
	
	public class BuildRelationshipsBetaAppReviewSubmissionData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BetaAppReviewSubmissionType Type { get; set; }
	}
	
	public class BuildRelationshipsBetaAppReviewSubmissionLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class BuildRelationshipsBetaBuildLocalizations
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildRelationshipsBetaBuildLocalizationsData[] BuildRelationshipsBetaBuildLocalizationsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BuildRelationshipsBetaBuildLocalizationsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class BuildRelationshipsBetaBuildLocalizationsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BuildRelationshipsBetaBuildLocalizationsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BuildRelationshipsBetaBuildLocalizationsDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		betaBuildLocalizations = 0,
	}
	
	public class BuildRelationshipsBetaBuildLocalizationsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class BuildRelationshipsBuildBetaDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildRelationshipsBuildBetaDetailData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BuildRelationshipsBuildBetaDetailLinks Links { get; set; }
	}
	
	public class BuildRelationshipsBuildBetaDetailData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BuildRelationshipsBuildBetaDetailDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BuildRelationshipsBuildBetaDetailDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		buildBetaDetails = 0,
	}
	
	public class BuildRelationshipsBuildBetaDetailLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class BuildRelationshipsIcons
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildRelationshipsIconsData[] BuildRelationshipsIconsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BuildRelationshipsIconsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class BuildRelationshipsIconsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BuildRelationshipsIconsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BuildRelationshipsIconsDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		buildIcons = 0,
	}
	
	public class BuildRelationshipsIconsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class BuildRelationshipsIndividualTesters
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildRelationshipsIndividualTestersData[] BuildRelationshipsIndividualTestersData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BuildRelationshipsIndividualTestersLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class BuildRelationshipsIndividualTestersData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppBetaTestersLinkagesRequestDataType Type { get; set; }
	}
	
	public class BuildRelationshipsIndividualTestersLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class BuildRelationshipsPreReleaseVersion
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildRelationshipsPreReleaseVersionData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BuildRelationshipsPreReleaseVersionLinks Links { get; set; }
	}
	
	public class BuildRelationshipsPreReleaseVersionData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsPreReleaseVersionsDataType Type { get; set; }
	}
	
	public class BuildRelationshipsPreReleaseVersionLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaAppReviewSubmissionsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaAppReviewSubmission[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public Build[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaBuildLocalization
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BetaBuildLocalizationAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BetaBuildLocalizationRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BuildRelationshipsBetaBuildLocalizationsDataType Type { get; set; }
	}
	
	public class BetaBuildLocalizationAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="locale")]
		public string Locale { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="whatsNew")]
		public string WhatsNew { get; set; }
	}
	
	public class BetaBuildLocalizationRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="build")]
		public BetaBuildLocalizationRelationshipsBuild Build { get; set; }
	}
	
	public class BetaBuildLocalizationRelationshipsBuild
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaBuildLocalizationRelationshipsBuildData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BetaBuildLocalizationRelationshipsBuildLinks Links { get; set; }
	}
	
	public class BetaBuildLocalizationRelationshipsBuildData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	public class BetaBuildLocalizationRelationshipsBuildLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaBuildLocalizationCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaBuildLocalizationCreateRequestData Data { get; set; }
	}
	
	public class BetaBuildLocalizationCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BetaBuildLocalizationCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BetaBuildLocalizationCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BuildRelationshipsBetaBuildLocalizationsDataType Type { get; set; }
	}
	
	public class BetaBuildLocalizationCreateRequestDataAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="locale")]
		public string Locale { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="whatsNew")]
		public string WhatsNew { get; set; }
	}
	
	public class BetaBuildLocalizationCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="build")]
		public BetaBuildLocalizationCreateRequestDataRelationshipsBuild Build { get; set; }
	}
	
	public class BetaBuildLocalizationCreateRequestDataRelationshipsBuild
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaBuildLocalizationCreateRequestDataRelationshipsBuildData Data { get; set; }
	}
	
	public class BetaBuildLocalizationCreateRequestDataRelationshipsBuildData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaBuildLocalizationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaBuildLocalization Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public Build[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaBuildLocalizationUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaBuildLocalizationUpdateRequestData Data { get; set; }
	}
	
	public class BetaBuildLocalizationUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BetaBuildLocalizationUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BuildRelationshipsBetaBuildLocalizationsDataType Type { get; set; }
	}
	
	public class BetaBuildLocalizationUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="whatsNew")]
		public string WhatsNew { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaBuildLocalizationsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaBuildLocalization[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public Build[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaGroup
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BetaGroupAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BetaGroupRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaGroupsDataType Type { get; set; }
	}
	
	public class BetaGroupAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="createdDate")]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="feedbackEnabled")]
		public System.Nullable<System.Boolean> FeedbackEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="isInternalGroup")]
		public System.Nullable<System.Boolean> IsInternalGroup { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publicLink")]
		public string PublicLink { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publicLinkEnabled")]
		public System.Nullable<System.Boolean> PublicLinkEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publicLinkId")]
		public string PublicLinkId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publicLinkLimit")]
		public System.Nullable<System.Int32> PublicLinkLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publicLinkLimitEnabled")]
		public System.Nullable<System.Boolean> PublicLinkLimitEnabled { get; set; }
	}
	
	public class BetaGroupRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="app")]
		public BetaGroupRelationshipsApp App { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="betaTesters")]
		public BetaGroupRelationshipsBetaTesters BetaTesters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="builds")]
		public BetaGroupRelationshipsBuilds Builds { get; set; }
	}
	
	public class BetaGroupRelationshipsApp
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaGroupRelationshipsAppData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BetaGroupRelationshipsAppLinks Links { get; set; }
	}
	
	public class BetaGroupRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class BetaGroupRelationshipsAppLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class BetaGroupRelationshipsBetaTesters
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaGroupRelationshipsBetaTestersData[] BetaGroupRelationshipsBetaTestersData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BetaGroupRelationshipsBetaTestersLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class BetaGroupRelationshipsBetaTestersData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppBetaTestersLinkagesRequestDataType Type { get; set; }
	}
	
	public class BetaGroupRelationshipsBetaTestersLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class BetaGroupRelationshipsBuilds
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaGroupRelationshipsBuildsData[] BetaGroupRelationshipsBuildsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BetaGroupRelationshipsBuildsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class BetaGroupRelationshipsBuildsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	public class BetaGroupRelationshipsBuildsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaGroupBetaTestersLinkagesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaGroupBetaTestersLinkagesRequestData[] BetaGroupBetaTestersLinkagesRequestData { get; set; }
	}
	
	public class BetaGroupBetaTestersLinkagesRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppBetaTestersLinkagesRequestDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaGroupBetaTestersLinkagesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaGroupBetaTestersLinkagesResponseData[] BetaGroupBetaTestersLinkagesResponseData { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class BetaGroupBetaTestersLinkagesResponseData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppBetaTestersLinkagesRequestDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaGroupBuildsLinkagesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaGroupBuildsLinkagesRequestData[] BetaGroupBuildsLinkagesRequestData { get; set; }
	}
	
	public class BetaGroupBuildsLinkagesRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaGroupBuildsLinkagesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaGroupBuildsLinkagesResponseData[] BetaGroupBuildsLinkagesResponseData { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class BetaGroupBuildsLinkagesResponseData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaGroupCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaGroupCreateRequestData Data { get; set; }
	}
	
	public class BetaGroupCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BetaGroupCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BetaGroupCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaGroupsDataType Type { get; set; }
	}
	
	public class BetaGroupCreateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="feedbackEnabled")]
		public System.Nullable<System.Boolean> FeedbackEnabled { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publicLinkEnabled")]
		public System.Nullable<System.Boolean> PublicLinkEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publicLinkLimit")]
		public System.Nullable<System.Int32> PublicLinkLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publicLinkLimitEnabled")]
		public System.Nullable<System.Boolean> PublicLinkLimitEnabled { get; set; }
	}
	
	public class BetaGroupCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="app")]
		public BetaGroupCreateRequestDataRelationshipsApp App { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="betaTesters")]
		public BetaGroupCreateRequestDataRelationshipsBetaTesters BetaTesters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="builds")]
		public BetaGroupCreateRequestDataRelationshipsBuilds Builds { get; set; }
	}
	
	public class BetaGroupCreateRequestDataRelationshipsApp
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaGroupCreateRequestDataRelationshipsAppData Data { get; set; }
	}
	
	public class BetaGroupCreateRequestDataRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class BetaGroupCreateRequestDataRelationshipsBetaTesters
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaGroupCreateRequestDataRelationshipsBetaTestersData[] BetaGroupCreateRequestDataRelationshipsBetaTestersData { get; set; }
	}
	
	public class BetaGroupCreateRequestDataRelationshipsBetaTestersData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppBetaTestersLinkagesRequestDataType Type { get; set; }
	}
	
	public class BetaGroupCreateRequestDataRelationshipsBuilds
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaGroupCreateRequestDataRelationshipsBuildsData[] BetaGroupCreateRequestDataRelationshipsBuildsData { get; set; }
	}
	
	public class BetaGroupCreateRequestDataRelationshipsBuildsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaGroupResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaGroup Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaGroupUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaGroupUpdateRequestData Data { get; set; }
	}
	
	public class BetaGroupUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BetaGroupUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaGroupsDataType Type { get; set; }
	}
	
	public class BetaGroupUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="feedbackEnabled")]
		public System.Nullable<System.Boolean> FeedbackEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publicLinkEnabled")]
		public System.Nullable<System.Boolean> PublicLinkEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publicLinkLimit")]
		public System.Nullable<System.Int32> PublicLinkLimit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="publicLinkLimitEnabled")]
		public System.Nullable<System.Boolean> PublicLinkLimitEnabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaGroupsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaGroup[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BetaInviteType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAIL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUBLIC_LINK = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaLicenseAgreement
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BetaLicenseAgreementAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BetaLicenseAgreementRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaLicenseAgreementDataType Type { get; set; }
	}
	
	public class BetaLicenseAgreementAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="agreementText")]
		public string AgreementText { get; set; }
	}
	
	public class BetaLicenseAgreementRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="app")]
		public BetaLicenseAgreementRelationshipsApp App { get; set; }
	}
	
	public class BetaLicenseAgreementRelationshipsApp
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaLicenseAgreementRelationshipsAppData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BetaLicenseAgreementRelationshipsAppLinks Links { get; set; }
	}
	
	public class BetaLicenseAgreementRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class BetaLicenseAgreementRelationshipsAppLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaLicenseAgreementResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaLicenseAgreement Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public App[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaLicenseAgreementUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaLicenseAgreementUpdateRequestData Data { get; set; }
	}
	
	public class BetaLicenseAgreementUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BetaLicenseAgreementUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaLicenseAgreementDataType Type { get; set; }
	}
	
	public class BetaLicenseAgreementUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="agreementText")]
		public string AgreementText { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaLicenseAgreementsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaLicenseAgreement[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public App[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BetaReviewState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WAITING_FOR_REVIEW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_REVIEW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaTester
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BetaTesterAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BetaTesterRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppBetaTestersLinkagesRequestDataType Type { get; set; }
	}
	
	public class BetaTesterAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="firstName")]
		public string FirstName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inviteType")]
		public BetaInviteType InviteType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastName")]
		public string LastName { get; set; }
	}
	
	public class BetaTesterRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="apps")]
		public BetaTesterRelationshipsApps Apps { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="betaGroups")]
		public BetaTesterRelationshipsBetaGroups BetaGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="builds")]
		public BetaTesterRelationshipsBuilds Builds { get; set; }
	}
	
	public class BetaTesterRelationshipsApps
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaTesterRelationshipsAppsData[] BetaTesterRelationshipsAppsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BetaTesterRelationshipsAppsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class BetaTesterRelationshipsAppsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class BetaTesterRelationshipsAppsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class BetaTesterRelationshipsBetaGroups
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaTesterRelationshipsBetaGroupsData[] BetaTesterRelationshipsBetaGroupsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BetaTesterRelationshipsBetaGroupsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class BetaTesterRelationshipsBetaGroupsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaGroupsDataType Type { get; set; }
	}
	
	public class BetaTesterRelationshipsBetaGroupsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class BetaTesterRelationshipsBuilds
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaTesterRelationshipsBuildsData[] BetaTesterRelationshipsBuildsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BetaTesterRelationshipsBuildsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class BetaTesterRelationshipsBuildsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	public class BetaTesterRelationshipsBuildsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaTesterAppsLinkagesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaTesterAppsLinkagesRequestData[] BetaTesterAppsLinkagesRequestData { get; set; }
	}
	
	public class BetaTesterAppsLinkagesRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaTesterAppsLinkagesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaTesterAppsLinkagesResponseData[] BetaTesterAppsLinkagesResponseData { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class BetaTesterAppsLinkagesResponseData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaTesterBetaGroupsLinkagesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaTesterBetaGroupsLinkagesRequestData[] BetaTesterBetaGroupsLinkagesRequestData { get; set; }
	}
	
	public class BetaTesterBetaGroupsLinkagesRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaGroupsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaTesterBetaGroupsLinkagesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaTesterBetaGroupsLinkagesResponseData[] BetaTesterBetaGroupsLinkagesResponseData { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class BetaTesterBetaGroupsLinkagesResponseData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaGroupsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaTesterBuildsLinkagesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaTesterBuildsLinkagesRequestData[] BetaTesterBuildsLinkagesRequestData { get; set; }
	}
	
	public class BetaTesterBuildsLinkagesRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaTesterBuildsLinkagesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaTesterBuildsLinkagesResponseData[] BetaTesterBuildsLinkagesResponseData { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class BetaTesterBuildsLinkagesResponseData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaTesterCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaTesterCreateRequestData Data { get; set; }
	}
	
	public class BetaTesterCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BetaTesterCreateRequestDataAttributes Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BetaTesterCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppBetaTestersLinkagesRequestDataType Type { get; set; }
	}
	
	public class BetaTesterCreateRequestDataAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="firstName")]
		public string FirstName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastName")]
		public string LastName { get; set; }
	}
	
	public class BetaTesterCreateRequestDataRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="betaGroups")]
		public BetaTesterCreateRequestDataRelationshipsBetaGroups BetaGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="builds")]
		public BetaTesterCreateRequestDataRelationshipsBuilds Builds { get; set; }
	}
	
	public class BetaTesterCreateRequestDataRelationshipsBetaGroups
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaTesterCreateRequestDataRelationshipsBetaGroupsData[] BetaTesterCreateRequestDataRelationshipsBetaGroupsData { get; set; }
	}
	
	public class BetaTesterCreateRequestDataRelationshipsBetaGroupsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaGroupsDataType Type { get; set; }
	}
	
	public class BetaTesterCreateRequestDataRelationshipsBuilds
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaTesterCreateRequestDataRelationshipsBuildsData[] BetaTesterCreateRequestDataRelationshipsBuildsData { get; set; }
	}
	
	public class BetaTesterCreateRequestDataRelationshipsBuildsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaTesterInvitation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BetaTesterInvitationType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BetaTesterInvitationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		betaTesterInvitations = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaTesterInvitationCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaTesterInvitationCreateRequestData Data { get; set; }
	}
	
	public class BetaTesterInvitationCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BetaTesterInvitationCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BetaTesterInvitationType Type { get; set; }
	}
	
	public class BetaTesterInvitationCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="app")]
		public BetaTesterInvitationCreateRequestDataRelationshipsApp App { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="betaTester")]
		public BetaTesterInvitationCreateRequestDataRelationshipsBetaTester BetaTester { get; set; }
	}
	
	public class BetaTesterInvitationCreateRequestDataRelationshipsApp
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaTesterInvitationCreateRequestDataRelationshipsAppData Data { get; set; }
	}
	
	public class BetaTesterInvitationCreateRequestDataRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class BetaTesterInvitationCreateRequestDataRelationshipsBetaTester
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaTesterInvitationCreateRequestDataRelationshipsBetaTesterData Data { get; set; }
	}
	
	public class BetaTesterInvitationCreateRequestDataRelationshipsBetaTesterData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppBetaTestersLinkagesRequestDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaTesterInvitationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaTesterInvitation Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaTesterResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaTester Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BetaTestersResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BetaTester[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BrazilAgeRating
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		L = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TWELVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FOURTEEN = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIXTEEN = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EIGHTEEN = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildAppEncryptionDeclarationLinkageRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildAppEncryptionDeclarationLinkageRequestData Data { get; set; }
	}
	
	public class BuildAppEncryptionDeclarationLinkageRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppEncryptionDeclarationType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildAppEncryptionDeclarationLinkageResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildAppEncryptionDeclarationLinkageResponseData Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	public class BuildAppEncryptionDeclarationLinkageResponseData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppEncryptionDeclarationType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildBetaDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BuildBetaDetailAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BuildBetaDetailRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BuildRelationshipsBuildBetaDetailDataType Type { get; set; }
	}
	
	public class BuildBetaDetailAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="autoNotifyEnabled")]
		public System.Nullable<System.Boolean> AutoNotifyEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="externalBuildState")]
		public System.Nullable<BuildBetaDetailAttributesExternalBuildState> ExternalBuildState { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="internalBuildState")]
		public System.Nullable<BuildBetaDetailAttributesInternalBuildState> InternalBuildState { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BuildBetaDetailAttributesExternalBuildState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING_EXCEPTION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MISSING_EXPORT_COMPLIANCE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY_FOR_BETA_TESTING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_BETA_TESTING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPIRED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY_FOR_BETA_SUBMISSION = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_EXPORT_COMPLIANCE_REVIEW = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WAITING_FOR_BETA_REVIEW = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_BETA_REVIEW = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BETA_REJECTED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BETA_APPROVED = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BuildBetaDetailAttributesInternalBuildState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING_EXCEPTION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MISSING_EXPORT_COMPLIANCE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY_FOR_BETA_TESTING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_BETA_TESTING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPIRED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_EXPORT_COMPLIANCE_REVIEW = 6,
	}
	
	public class BuildBetaDetailRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="build")]
		public BuildBetaDetailRelationshipsBuild Build { get; set; }
	}
	
	public class BuildBetaDetailRelationshipsBuild
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildBetaDetailRelationshipsBuildData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BuildBetaDetailRelationshipsBuildLinks Links { get; set; }
	}
	
	public class BuildBetaDetailRelationshipsBuildData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	public class BuildBetaDetailRelationshipsBuildLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildBetaDetailResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildBetaDetail Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public Build[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildBetaDetailUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildBetaDetailUpdateRequestData Data { get; set; }
	}
	
	public class BuildBetaDetailUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BuildBetaDetailUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BuildRelationshipsBuildBetaDetailDataType Type { get; set; }
	}
	
	public class BuildBetaDetailUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="autoNotifyEnabled")]
		public System.Nullable<System.Boolean> AutoNotifyEnabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildBetaDetailsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildBetaDetail[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public Build[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildBetaGroupsLinkagesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildBetaGroupsLinkagesRequestData[] BuildBetaGroupsLinkagesRequestData { get; set; }
	}
	
	public class BuildBetaGroupsLinkagesRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBetaGroupsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildBetaNotification
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BuildBetaNotificationType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BuildBetaNotificationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		buildBetaNotifications = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildBetaNotificationCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildBetaNotificationCreateRequestData Data { get; set; }
	}
	
	public class BuildBetaNotificationCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BuildBetaNotificationCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BuildBetaNotificationType Type { get; set; }
	}
	
	public class BuildBetaNotificationCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="build")]
		public BuildBetaNotificationCreateRequestDataRelationshipsBuild Build { get; set; }
	}
	
	public class BuildBetaNotificationCreateRequestDataRelationshipsBuild
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildBetaNotificationCreateRequestDataRelationshipsBuildData Data { get; set; }
	}
	
	public class BuildBetaNotificationCreateRequestDataRelationshipsBuildData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildBetaNotificationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildBetaNotification Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildIcon
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BuildIconAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BuildRelationshipsIconsDataType Type { get; set; }
	}
	
	public class BuildIconAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="iconAsset")]
		public ImageAsset IconAsset { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iconType")]
		public System.Nullable<BuildIconAttributesIconType> IconType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BuildIconAttributesIconType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_STORE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MESSAGES_APP_STORE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WATCH_APP_STORE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TV_OS_HOME_SCREEN = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TV_OS_TOP_SHELF = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildIconsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildIcon[] Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildIndividualTestersLinkagesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildIndividualTestersLinkagesRequestData[] BuildIndividualTestersLinkagesRequestData { get; set; }
	}
	
	public class BuildIndividualTestersLinkagesRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppBetaTestersLinkagesRequestDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildIndividualTestersLinkagesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildIndividualTestersLinkagesResponseData[] BuildIndividualTestersLinkagesResponseData { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class BuildIndividualTestersLinkagesResponseData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppBetaTestersLinkagesRequestDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Build Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildUpdateRequestData Data { get; set; }
	}
	
	public class BuildUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BuildUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BuildUpdateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	public class BuildUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="expired")]
		public System.Nullable<System.Boolean> Expired { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="usesNonExemptEncryption")]
		public System.Nullable<System.Boolean> UsesNonExemptEncryption { get; set; }
	}
	
	public class BuildUpdateRequestDataRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="appEncryptionDeclaration")]
		public BuildUpdateRequestDataRelationshipsAppEncryptionDeclaration AppEncryptionDeclaration { get; set; }
	}
	
	public class BuildUpdateRequestDataRelationshipsAppEncryptionDeclaration
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BuildUpdateRequestDataRelationshipsAppEncryptionDeclarationData Data { get; set; }
	}
	
	public class BuildUpdateRequestDataRelationshipsAppEncryptionDeclarationData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppEncryptionDeclarationType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BuildsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Build[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BundleId
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BundleIdAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BundleIdRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BundleIdType Type { get; set; }
	}
	
	public class BundleIdAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="identifier")]
		public string Identifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public System.Nullable<BundleIdAttributesPlatform> Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="seedId")]
		public string SeedId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BundleIdAttributesPlatform
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IOS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAC_OS = 1,
	}
	
	public class BundleIdRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="app")]
		public BundleIdRelationshipsApp App { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="bundleIdCapabilities")]
		public BundleIdRelationshipsBundleIdCapabilities BundleIdCapabilities { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="profiles")]
		public BundleIdRelationshipsProfiles Profiles { get; set; }
	}
	
	public class BundleIdRelationshipsApp
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BundleIdRelationshipsAppData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BundleIdRelationshipsAppLinks Links { get; set; }
	}
	
	public class BundleIdRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class BundleIdRelationshipsAppLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class BundleIdRelationshipsBundleIdCapabilities
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BundleIdRelationshipsBundleIdCapabilitiesData[] BundleIdRelationshipsBundleIdCapabilitiesData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BundleIdRelationshipsBundleIdCapabilitiesLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class BundleIdRelationshipsBundleIdCapabilitiesData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BundleIdRelationshipsBundleIdCapabilitiesDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BundleIdRelationshipsBundleIdCapabilitiesDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bundleIdCapabilities = 0,
	}
	
	public class BundleIdRelationshipsBundleIdCapabilitiesLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class BundleIdRelationshipsProfiles
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BundleIdRelationshipsProfilesData[] BundleIdRelationshipsProfilesData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public BundleIdRelationshipsProfilesLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class BundleIdRelationshipsProfilesData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BundleIdRelationshipsProfilesDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BundleIdRelationshipsProfilesDataType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		profiles = 0,
	}
	
	public class BundleIdRelationshipsProfilesLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BundleIdType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		bundleIds = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BundleIdCapabilitiesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BundleIdCapability[] Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BundleIdCapability
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BundleIdCapabilityAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BundleIdRelationshipsBundleIdCapabilitiesDataType Type { get; set; }
	}
	
	public class BundleIdCapabilityAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="capabilityType")]
		public System.Nullable<BundleIdCapabilityAttributesCapabilityType> CapabilityType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public CapabilitySetting[] Settings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BundleIdCapabilityAttributesCapabilityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ICLOUD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_APP_PURCHASE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GAME_CENTER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUSH_NOTIFICATIONS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WALLET = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTER_APP_AUDIO = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAPS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASSOCIATED_DOMAINS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERSONAL_VPN = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_GROUPS = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HEALTHKIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOMEKIT = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WIRELESS_ACCESSORY_CONFIGURATION = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLE_PAY = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_PROTECTION = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIRIKIT = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK_EXTENSIONS = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTIPATH = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOT_SPOT = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NFC_TAG_READING = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLASSKIT = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTOFILL_CREDENTIAL_PROVIDER = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCESS_WIFI_INFORMATION = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK_CUSTOM_PROTOCOL = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COREMEDIA_HLS_LOW_LATENCY = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYSTEM_EXTENSION_INSTALL = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER_MANAGEMENT = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLE_ID_AUTH = 27,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CapabilitySetting
	{
		
		[System.Runtime.Serialization.DataMember(Name="allowedInstances")]
		public System.Nullable<CapabilitySettingAllowedInstances> AllowedInstances { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enabledByDefault")]
		public System.Nullable<System.Boolean> EnabledByDefault { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public System.Nullable<CapabilitySettingKey> Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minInstances")]
		public System.Nullable<System.Int32> MinInstances { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="options")]
		public CapabilityOption[] Options { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="visible")]
		public System.Nullable<System.Boolean> Visible { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CapabilitySettingAllowedInstances
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENTRY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SINGLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTIPLE = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CapabilitySettingKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ICLOUD_VERSION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_PROTECTION_PERMISSION_LEVEL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLE_ID_AUTH_APP_CONSENT = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CapabilityOption
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enabledByDefault")]
		public System.Nullable<System.Boolean> EnabledByDefault { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public System.Nullable<CapabilityOptionKey> Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="supportsWildcard")]
		public System.Nullable<System.Boolean> SupportsWildcard { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CapabilityOptionKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XCODE_5 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XCODE_6 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETE_PROTECTION = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROTECTED_UNLESS_OPEN = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROTECTED_UNTIL_FIRST_USER_AUTH = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIMARY_APP_CONSENT = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BundleIdCapabilityCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BundleIdCapabilityCreateRequestData Data { get; set; }
	}
	
	public class BundleIdCapabilityCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BundleIdCapabilityCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public BundleIdCapabilityCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BundleIdRelationshipsBundleIdCapabilitiesDataType Type { get; set; }
	}
	
	public class BundleIdCapabilityCreateRequestDataAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="capabilityType")]
		public BundleIdCapabilityAttributesCapabilityType CapabilityType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public CapabilitySetting[] Settings { get; set; }
	}
	
	public class BundleIdCapabilityCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bundleId")]
		public BundleIdCapabilityCreateRequestDataRelationshipsBundleId BundleId { get; set; }
	}
	
	public class BundleIdCapabilityCreateRequestDataRelationshipsBundleId
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BundleIdCapabilityCreateRequestDataRelationshipsBundleIdData Data { get; set; }
	}
	
	public class BundleIdCapabilityCreateRequestDataRelationshipsBundleIdData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BundleIdType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BundleIdCapabilityResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BundleIdCapability Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BundleIdCapabilityUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BundleIdCapabilityUpdateRequestData Data { get; set; }
	}
	
	public class BundleIdCapabilityUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BundleIdCapabilityUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BundleIdRelationshipsBundleIdCapabilitiesDataType Type { get; set; }
	}
	
	public class BundleIdCapabilityUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="capabilityType")]
		public BundleIdCapabilityAttributesCapabilityType CapabilityType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="settings")]
		public CapabilitySetting[] Settings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BundleIdCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BundleIdCreateRequestData Data { get; set; }
	}
	
	public class BundleIdCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BundleIdCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BundleIdType Type { get; set; }
	}
	
	public class BundleIdCreateRequestDataAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identifier")]
		public string Identifier { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public BundleIdAttributesPlatform Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="seedId")]
		public string SeedId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BundleIdPlatform
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IOS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAC_OS = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BundleIdResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BundleId Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BundleIdUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BundleIdUpdateRequestData Data { get; set; }
	}
	
	public class BundleIdUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public BundleIdUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BundleIdType Type { get; set; }
	}
	
	public class BundleIdUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BundleIdsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public BundleId[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CapabilityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ICLOUD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_APP_PURCHASE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GAME_CENTER = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUSH_NOTIFICATIONS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WALLET = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTER_APP_AUDIO = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAPS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ASSOCIATED_DOMAINS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERSONAL_VPN = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_GROUPS = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HEALTHKIT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOMEKIT = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WIRELESS_ACCESSORY_CONFIGURATION = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLE_PAY = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_PROTECTION = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIRIKIT = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK_EXTENSIONS = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MULTIPATH = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HOT_SPOT = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NFC_TAG_READING = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLASSKIT = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTOFILL_CREDENTIAL_PROVIDER = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCESS_WIFI_INFORMATION = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK_CUSTOM_PROTOCOL = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COREMEDIA_HLS_LOW_LATENCY = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SYSTEM_EXTENSION_INSTALL = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USER_MANAGEMENT = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLE_ID_AUTH = 27,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Certificate
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public CertificateAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public CertificateType Type { get; set; }
	}
	
	public class CertificateAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="certificateContent")]
		public string CertificateContent { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="certificateType")]
		public System.Nullable<CertificateAttributesCertificateType> CertificateType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expirationDate")]
		public System.Nullable<System.DateTimeOffset> ExpirationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public BundleIdAttributesPlatform Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="serialNumber")]
		public string SerialNumber { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CertificateAttributesCertificateType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IOS_DEVELOPMENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IOS_DISTRIBUTION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAC_APP_DISTRIBUTION = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAC_INSTALLER_DISTRIBUTION = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAC_APP_DEVELOPMENT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEVELOPER_ID_KEXT = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEVELOPER_ID_APPLICATION = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEVELOPMENT = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISTRIBUTION = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CertificateType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		certificates = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CertificateCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public CertificateCreateRequestData Data { get; set; }
	}
	
	public class CertificateCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public CertificateCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public CertificateType Type { get; set; }
	}
	
	public class CertificateCreateRequestDataAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="certificateType")]
		public CertificateAttributesCertificateType CertificateType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="csrContent")]
		public string CsrContent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CertificateResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Certificate Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CertificatesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Certificate[] Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Device
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public DeviceAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public DeviceType Type { get; set; }
	}
	
	public class DeviceAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="addedDate")]
		public System.Nullable<System.DateTimeOffset> AddedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="deviceClass")]
		public System.Nullable<DeviceAttributesDeviceClass> DeviceClass { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="model")]
		public string Model { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public BundleIdAttributesPlatform Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public System.Nullable<DeviceAttributesStatus> Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="udid")]
		public string Udid { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeviceAttributesDeviceClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLE_WATCH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPAD = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPHONE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPOD = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLE_TV = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAC = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeviceAttributesStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeviceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		devices = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeviceCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public DeviceCreateRequestData Data { get; set; }
	}
	
	public class DeviceCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public DeviceCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public DeviceType Type { get; set; }
	}
	
	public class DeviceCreateRequestDataAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public BundleIdAttributesPlatform Platform { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="udid")]
		public string Udid { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeviceResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Device Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeviceUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public DeviceUpdateRequestData Data { get; set; }
	}
	
	public class DeviceUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public DeviceUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public DeviceType Type { get; set; }
	}
	
	public class DeviceUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DeviceAttributesStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DevicesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Device[] Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DiagnosticLog
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public DiagnosticLogType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DiagnosticLogType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		diagnosticLogs = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DiagnosticLogsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public DiagnosticLog[] Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DiagnosticSignature
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public DiagnosticSignatureAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public DiagnosticSignatureType Type { get; set; }
	}
	
	public class DiagnosticSignatureAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="diagnosticType")]
		public System.Nullable<DiagnosticSignatureAttributesDiagnosticType> DiagnosticType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="signature")]
		public string Signature { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="weight")]
		public System.Nullable<System.Double> Weight { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DiagnosticSignatureAttributesDiagnosticType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISK_WRITES = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DiagnosticSignatureType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		diagnosticSignatures = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DiagnosticSignaturesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public DiagnosticSignature[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public DiagnosticLog[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndUserLicenseAgreement
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public EndUserLicenseAgreementAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public EndUserLicenseAgreementRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsEndUserLicenseAgreementDataType Type { get; set; }
	}
	
	public class EndUserLicenseAgreementAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="agreementText")]
		public string AgreementText { get; set; }
	}
	
	public class EndUserLicenseAgreementRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="app")]
		public EndUserLicenseAgreementRelationshipsApp App { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="territories")]
		public EndUserLicenseAgreementRelationshipsTerritories Territories { get; set; }
	}
	
	public class EndUserLicenseAgreementRelationshipsApp
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public EndUserLicenseAgreementRelationshipsAppData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public EndUserLicenseAgreementRelationshipsAppLinks Links { get; set; }
	}
	
	public class EndUserLicenseAgreementRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class EndUserLicenseAgreementRelationshipsAppLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class EndUserLicenseAgreementRelationshipsTerritories
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public EndUserLicenseAgreementRelationshipsTerritoriesData[] EndUserLicenseAgreementRelationshipsTerritoriesData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public EndUserLicenseAgreementRelationshipsTerritoriesLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class EndUserLicenseAgreementRelationshipsTerritoriesData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAvailableTerritoriesDataType Type { get; set; }
	}
	
	public class EndUserLicenseAgreementRelationshipsTerritoriesLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndUserLicenseAgreementCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public EndUserLicenseAgreementCreateRequestData Data { get; set; }
	}
	
	public class EndUserLicenseAgreementCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public EndUserLicenseAgreementCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public EndUserLicenseAgreementCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsEndUserLicenseAgreementDataType Type { get; set; }
	}
	
	public class EndUserLicenseAgreementCreateRequestDataAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="agreementText")]
		public string AgreementText { get; set; }
	}
	
	public class EndUserLicenseAgreementCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="app")]
		public EndUserLicenseAgreementCreateRequestDataRelationshipsApp App { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="territories")]
		public EndUserLicenseAgreementCreateRequestDataRelationshipsTerritories Territories { get; set; }
	}
	
	public class EndUserLicenseAgreementCreateRequestDataRelationshipsApp
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public EndUserLicenseAgreementCreateRequestDataRelationshipsAppData Data { get; set; }
	}
	
	public class EndUserLicenseAgreementCreateRequestDataRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class EndUserLicenseAgreementCreateRequestDataRelationshipsTerritories
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public EndUserLicenseAgreementCreateRequestDataRelationshipsTerritoriesData[] EndUserLicenseAgreementCreateRequestDataRelationshipsTerritoriesData { get; set; }
	}
	
	public class EndUserLicenseAgreementCreateRequestDataRelationshipsTerritoriesData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAvailableTerritoriesDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndUserLicenseAgreementResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public EndUserLicenseAgreement Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public Territory[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EndUserLicenseAgreementUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public EndUserLicenseAgreementUpdateRequestData Data { get; set; }
	}
	
	public class EndUserLicenseAgreementUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public EndUserLicenseAgreementUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public EndUserLicenseAgreementUpdateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsEndUserLicenseAgreementDataType Type { get; set; }
	}
	
	public class EndUserLicenseAgreementUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="agreementText")]
		public string AgreementText { get; set; }
	}
	
	public class EndUserLicenseAgreementUpdateRequestDataRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="territories")]
		public EndUserLicenseAgreementUpdateRequestDataRelationshipsTerritories Territories { get; set; }
	}
	
	public class EndUserLicenseAgreementUpdateRequestDataRelationshipsTerritories
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public EndUserLicenseAgreementUpdateRequestDataRelationshipsTerritoriesData[] EndUserLicenseAgreementUpdateRequestDataRelationshipsTerritoriesData { get; set; }
	}
	
	public class EndUserLicenseAgreementUpdateRequestDataRelationshipsTerritoriesData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAvailableTerritoriesDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ErrorResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public ErrorResponseErrors[] ErrorResponseErrors { get; set; }
	}
	
	public class ErrorResponseErrors
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detail")]
		public string Detail { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="source")]
		public ErrorResponseErrorsSource Source { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public string Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class ErrorResponseErrorsSource
	{
		
		[System.Runtime.Serialization.DataMember(Name="pointer")]
		public string Pointer { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ExternalBetaState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING_EXCEPTION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MISSING_EXPORT_COMPLIANCE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY_FOR_BETA_TESTING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_BETA_TESTING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPIRED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY_FOR_BETA_SUBMISSION = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_EXPORT_COMPLIANCE_REVIEW = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WAITING_FOR_BETA_REVIEW = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_BETA_REVIEW = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BETA_REJECTED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BETA_APPROVED = 11,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GameCenterEnabledVersion
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public GameCenterEnabledVersionAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public GameCenterEnabledVersionRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsGameCenterEnabledVersionsDataType Type { get; set; }
	}
	
	public class GameCenterEnabledVersionAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="iconAsset")]
		public ImageAsset IconAsset { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public Platform Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="versionString")]
		public string VersionString { get; set; }
	}
	
	public class GameCenterEnabledVersionRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="app")]
		public GameCenterEnabledVersionRelationshipsApp App { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="compatibleVersions")]
		public GameCenterEnabledVersionRelationshipsCompatibleVersions CompatibleVersions { get; set; }
	}
	
	public class GameCenterEnabledVersionRelationshipsApp
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GameCenterEnabledVersionRelationshipsAppData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public GameCenterEnabledVersionRelationshipsAppLinks Links { get; set; }
	}
	
	public class GameCenterEnabledVersionRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class GameCenterEnabledVersionRelationshipsAppLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class GameCenterEnabledVersionRelationshipsCompatibleVersions
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GameCenterEnabledVersionRelationshipsCompatibleVersionsData[] GameCenterEnabledVersionRelationshipsCompatibleVersionsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public GameCenterEnabledVersionRelationshipsCompatibleVersionsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class GameCenterEnabledVersionRelationshipsCompatibleVersionsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsGameCenterEnabledVersionsDataType Type { get; set; }
	}
	
	public class GameCenterEnabledVersionRelationshipsCompatibleVersionsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GameCenterEnabledVersionCompatibleVersionsLinkagesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GameCenterEnabledVersionCompatibleVersionsLinkagesRequestData[] GameCenterEnabledVersionCompatibleVersionsLinkagesRequestData { get; set; }
	}
	
	public class GameCenterEnabledVersionCompatibleVersionsLinkagesRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsGameCenterEnabledVersionsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GameCenterEnabledVersionCompatibleVersionsLinkagesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GameCenterEnabledVersionCompatibleVersionsLinkagesResponseData[] GameCenterEnabledVersionCompatibleVersionsLinkagesResponseData { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class GameCenterEnabledVersionCompatibleVersionsLinkagesResponseData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsGameCenterEnabledVersionsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GameCenterEnabledVersionsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public GameCenterEnabledVersion[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public GameCenterEnabledVersion[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IconAssetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_STORE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MESSAGES_APP_STORE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WATCH_APP_STORE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TV_OS_HOME_SCREEN = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TV_OS_TOP_SHELF = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdfaDeclaration
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public IdfaDeclarationAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public IdfaDeclarationRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreVersionRelationshipsIdfaDeclarationDataType Type { get; set; }
	}
	
	public class IdfaDeclarationAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributesActionWithPreviousAd")]
		public System.Nullable<System.Boolean> AttributesActionWithPreviousAd { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="attributesAppInstallationToPreviousAd")]
		public System.Nullable<System.Boolean> AttributesAppInstallationToPreviousAd { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="honorsLimitedAdTracking")]
		public System.Nullable<System.Boolean> HonorsLimitedAdTracking { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="servesAds")]
		public System.Nullable<System.Boolean> ServesAds { get; set; }
	}
	
	public class IdfaDeclarationRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="appStoreVersion")]
		public IdfaDeclarationRelationshipsAppStoreVersion AppStoreVersion { get; set; }
	}
	
	public class IdfaDeclarationRelationshipsAppStoreVersion
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public IdfaDeclarationRelationshipsAppStoreVersionData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public IdfaDeclarationRelationshipsAppStoreVersionLinks Links { get; set; }
	}
	
	public class IdfaDeclarationRelationshipsAppStoreVersionData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppStoreVersionsDataType Type { get; set; }
	}
	
	public class IdfaDeclarationRelationshipsAppStoreVersionLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdfaDeclarationCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public IdfaDeclarationCreateRequestData Data { get; set; }
	}
	
	public class IdfaDeclarationCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public IdfaDeclarationCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public IdfaDeclarationCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreVersionRelationshipsIdfaDeclarationDataType Type { get; set; }
	}
	
	public class IdfaDeclarationCreateRequestDataAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributesActionWithPreviousAd")]
		public bool AttributesActionWithPreviousAd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributesAppInstallationToPreviousAd")]
		public bool AttributesAppInstallationToPreviousAd { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="honorsLimitedAdTracking")]
		public bool HonorsLimitedAdTracking { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="servesAds")]
		public bool ServesAds { get; set; }
	}
	
	public class IdfaDeclarationCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="appStoreVersion")]
		public IdfaDeclarationCreateRequestDataRelationshipsAppStoreVersion AppStoreVersion { get; set; }
	}
	
	public class IdfaDeclarationCreateRequestDataRelationshipsAppStoreVersion
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public IdfaDeclarationCreateRequestDataRelationshipsAppStoreVersionData Data { get; set; }
	}
	
	public class IdfaDeclarationCreateRequestDataRelationshipsAppStoreVersionData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppStoreVersionsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdfaDeclarationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public IdfaDeclaration Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdfaDeclarationUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public IdfaDeclarationUpdateRequestData Data { get; set; }
	}
	
	public class IdfaDeclarationUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public IdfaDeclarationUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreVersionRelationshipsIdfaDeclarationDataType Type { get; set; }
	}
	
	public class IdfaDeclarationUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributesActionWithPreviousAd")]
		public System.Nullable<System.Boolean> AttributesActionWithPreviousAd { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="attributesAppInstallationToPreviousAd")]
		public System.Nullable<System.Boolean> AttributesAppInstallationToPreviousAd { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="honorsLimitedAdTracking")]
		public System.Nullable<System.Boolean> HonorsLimitedAdTracking { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="servesAds")]
		public System.Nullable<System.Boolean> ServesAds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InAppPurchase
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public InAppPurchaseAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public InAppPurchaseRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsInAppPurchasesDataType Type { get; set; }
	}
	
	public class InAppPurchaseAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="inAppPurchaseType")]
		public System.Nullable<InAppPurchaseAttributesInAppPurchaseType> InAppPurchaseType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="productId")]
		public string ProductId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="referenceName")]
		public string ReferenceName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<InAppPurchaseAttributesState> State { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InAppPurchaseAttributesInAppPurchaseType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTOMATICALLY_RENEWABLE_SUBSCRIPTION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NON_CONSUMABLE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONSUMABLE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NON_RENEWING_SUBSCRIPTION = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FREE_SUBSCRIPTION = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InAppPurchaseAttributesState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEVELOPER_SIGNED_OFF = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEVELOPER_ACTION_NEEDED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETION_IN_PROGRESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPROVED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REMOVED_FROM_SALE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEVELOPER_REMOVED_FROM_SALE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WAITING_FOR_UPLOAD = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING_CONTENT = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPLACED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECTED = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WAITING_FOR_SCREENSHOT = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREPARE_FOR_SUBMISSION = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MISSING_METADATA = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY_TO_SUBMIT = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WAITING_FOR_REVIEW = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_REVIEW = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_DEVELOPER_RELEASE = 18,
	}
	
	public class InAppPurchaseRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="apps")]
		public InAppPurchaseRelationshipsApps Apps { get; set; }
	}
	
	public class InAppPurchaseRelationshipsApps
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public InAppPurchaseRelationshipsAppsData[] InAppPurchaseRelationshipsAppsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public InAppPurchaseRelationshipsAppsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class InAppPurchaseRelationshipsAppsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class InAppPurchaseRelationshipsAppsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InAppPurchaseResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public InAppPurchase Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InAppPurchasesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public InAppPurchase[] Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InternalBetaState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING_EXCEPTION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MISSING_EXPORT_COMPLIANCE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY_FOR_BETA_TESTING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_BETA_TESTING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXPIRED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_EXPORT_COMPLIANCE_REVIEW = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum KidsAgeBand
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIVE_AND_UNDER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SIX_TO_EIGHT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NINE_TO_ELEVEN = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PerfPowerMetric
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public PerfPowerMetricAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public PerfPowerMetricType Type { get; set; }
	}
	
	public class PerfPowerMetricAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="deviceType")]
		public string DeviceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metricType")]
		public System.Nullable<PerfPowerMetricAttributesMetricType> MetricType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public System.Nullable<PerfPowerMetricAttributesPlatform> Platform { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PerfPowerMetricAttributesMetricType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISK = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HANG = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BATTERY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAUNCH = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEMORY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANIMATION = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TERMINATION = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PerfPowerMetricAttributesPlatform
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IOS = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PerfPowerMetricType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		perfPowerMetrics = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PerfPowerMetricsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public PerfPowerMetric[] Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PhasedReleaseState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAUSED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETE = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PreReleaseVersionsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public PrereleaseVersion[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PrereleaseVersion
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public PrereleaseVersionAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public PrereleaseVersionRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsPreReleaseVersionsDataType Type { get; set; }
	}
	
	public class PrereleaseVersionAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public Platform Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	public class PrereleaseVersionRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="app")]
		public PrereleaseVersionRelationshipsApp App { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="builds")]
		public PrereleaseVersionRelationshipsBuilds Builds { get; set; }
	}
	
	public class PrereleaseVersionRelationshipsApp
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public PrereleaseVersionRelationshipsAppData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PrereleaseVersionRelationshipsAppLinks Links { get; set; }
	}
	
	public class PrereleaseVersionRelationshipsAppData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class PrereleaseVersionRelationshipsAppLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class PrereleaseVersionRelationshipsBuilds
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public PrereleaseVersionRelationshipsBuildsData[] PrereleaseVersionRelationshipsBuildsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PrereleaseVersionRelationshipsBuildsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class PrereleaseVersionRelationshipsBuildsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsBuildsDataType Type { get; set; }
	}
	
	public class PrereleaseVersionRelationshipsBuildsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PrereleaseVersionResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public PrereleaseVersion Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PreviewType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPHONE_65 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPHONE_58 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPHONE_55 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPHONE_47 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPHONE_40 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPHONE_35 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPAD_PRO_3GEN_129 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPAD_PRO_3GEN_11 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPAD_PRO_129 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPAD_105 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IPAD_97 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DESKTOP = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WATCH_SERIES_4 = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WATCH_SERIES_3 = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLE_TV = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Profile
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public ProfileAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public ProfileRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BundleIdRelationshipsProfilesDataType Type { get; set; }
	}
	
	public class ProfileAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="createdDate")]
		public System.Nullable<System.DateTimeOffset> CreatedDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expirationDate")]
		public System.Nullable<System.DateTimeOffset> ExpirationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="platform")]
		public BundleIdAttributesPlatform Platform { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="profileContent")]
		public string ProfileContent { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="profileState")]
		public System.Nullable<ProfileAttributesProfileState> ProfileState { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="profileType")]
		public System.Nullable<ProfileAttributesProfileType> ProfileType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uuid")]
		public string Uuid { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProfileAttributesProfileState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ProfileAttributesProfileType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IOS_APP_DEVELOPMENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IOS_APP_STORE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IOS_APP_ADHOC = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IOS_APP_INHOUSE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAC_APP_DEVELOPMENT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAC_APP_STORE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAC_APP_DIRECT = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TVOS_APP_DEVELOPMENT = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TVOS_APP_STORE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TVOS_APP_ADHOC = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TVOS_APP_INHOUSE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAC_CATALYST_APP_DEVELOPMENT = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAC_CATALYST_APP_STORE = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAC_CATALYST_APP_DIRECT = 13,
	}
	
	public class ProfileRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="bundleId")]
		public ProfileRelationshipsBundleId BundleId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="certificates")]
		public ProfileRelationshipsCertificates Certificates { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="devices")]
		public ProfileRelationshipsDevices Devices { get; set; }
	}
	
	public class ProfileRelationshipsBundleId
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ProfileRelationshipsBundleIdData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ProfileRelationshipsBundleIdLinks Links { get; set; }
	}
	
	public class ProfileRelationshipsBundleIdData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BundleIdType Type { get; set; }
	}
	
	public class ProfileRelationshipsBundleIdLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class ProfileRelationshipsCertificates
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ProfileRelationshipsCertificatesData[] ProfileRelationshipsCertificatesData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ProfileRelationshipsCertificatesLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class ProfileRelationshipsCertificatesData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public CertificateType Type { get; set; }
	}
	
	public class ProfileRelationshipsCertificatesLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	public class ProfileRelationshipsDevices
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ProfileRelationshipsDevicesData[] ProfileRelationshipsDevicesData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ProfileRelationshipsDevicesLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class ProfileRelationshipsDevicesData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public DeviceType Type { get; set; }
	}
	
	public class ProfileRelationshipsDevicesLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProfileCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ProfileCreateRequestData Data { get; set; }
	}
	
	public class ProfileCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public ProfileCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public ProfileCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BundleIdRelationshipsProfilesDataType Type { get; set; }
	}
	
	public class ProfileCreateRequestDataAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="profileType")]
		public ProfileAttributesProfileType ProfileType { get; set; }
	}
	
	public class ProfileCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bundleId")]
		public ProfileCreateRequestDataRelationshipsBundleId BundleId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="certificates")]
		public ProfileCreateRequestDataRelationshipsCertificates Certificates { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="devices")]
		public ProfileCreateRequestDataRelationshipsDevices Devices { get; set; }
	}
	
	public class ProfileCreateRequestDataRelationshipsBundleId
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ProfileCreateRequestDataRelationshipsBundleIdData Data { get; set; }
	}
	
	public class ProfileCreateRequestDataRelationshipsBundleIdData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public BundleIdType Type { get; set; }
	}
	
	public class ProfileCreateRequestDataRelationshipsCertificates
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ProfileCreateRequestDataRelationshipsCertificatesData[] ProfileCreateRequestDataRelationshipsCertificatesData { get; set; }
	}
	
	public class ProfileCreateRequestDataRelationshipsCertificatesData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public CertificateType Type { get; set; }
	}
	
	public class ProfileCreateRequestDataRelationshipsDevices
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public ProfileCreateRequestDataRelationshipsDevicesData[] ProfileCreateRequestDataRelationshipsDevicesData { get; set; }
	}
	
	public class ProfileCreateRequestDataRelationshipsDevicesData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public DeviceType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProfileResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Profile Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ProfilesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Profile[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public string[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RoutingAppCoverage
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public RoutingAppCoverageAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public RoutingAppCoverageRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreVersionRelationshipsRoutingAppCoverageDataType Type { get; set; }
	}
	
	public class RoutingAppCoverageAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="assetDeliveryState")]
		public AppMediaAssetState AssetDeliveryState { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fileName")]
		public string FileName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fileSize")]
		public System.Nullable<System.Int32> FileSize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sourceFileChecksum")]
		public string SourceFileChecksum { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uploadOperations")]
		public UploadOperation[] UploadOperations { get; set; }
	}
	
	public class RoutingAppCoverageRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="appStoreVersion")]
		public RoutingAppCoverageRelationshipsAppStoreVersion AppStoreVersion { get; set; }
	}
	
	public class RoutingAppCoverageRelationshipsAppStoreVersion
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public RoutingAppCoverageRelationshipsAppStoreVersionData Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public RoutingAppCoverageRelationshipsAppStoreVersionLinks Links { get; set; }
	}
	
	public class RoutingAppCoverageRelationshipsAppStoreVersionData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppStoreVersionsDataType Type { get; set; }
	}
	
	public class RoutingAppCoverageRelationshipsAppStoreVersionLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RoutingAppCoverageCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public RoutingAppCoverageCreateRequestData Data { get; set; }
	}
	
	public class RoutingAppCoverageCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public RoutingAppCoverageCreateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public RoutingAppCoverageCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreVersionRelationshipsRoutingAppCoverageDataType Type { get; set; }
	}
	
	public class RoutingAppCoverageCreateRequestDataAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fileName")]
		public string FileName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fileSize")]
		public int FileSize { get; set; }
	}
	
	public class RoutingAppCoverageCreateRequestDataRelationships
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="appStoreVersion")]
		public RoutingAppCoverageCreateRequestDataRelationshipsAppStoreVersion AppStoreVersion { get; set; }
	}
	
	public class RoutingAppCoverageCreateRequestDataRelationshipsAppStoreVersion
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public RoutingAppCoverageCreateRequestDataRelationshipsAppStoreVersionData Data { get; set; }
	}
	
	public class RoutingAppCoverageCreateRequestDataRelationshipsAppStoreVersionData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppRelationshipsAppStoreVersionsDataType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RoutingAppCoverageResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public RoutingAppCoverage Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RoutingAppCoverageUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public RoutingAppCoverageUpdateRequestData Data { get; set; }
	}
	
	public class RoutingAppCoverageUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public RoutingAppCoverageUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppStoreVersionRelationshipsRoutingAppCoverageDataType Type { get; set; }
	}
	
	public class RoutingAppCoverageUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="sourceFileChecksum")]
		public string SourceFileChecksum { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="uploaded")]
		public System.Nullable<System.Boolean> Uploaded { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ScreenshotDisplayType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPHONE_65 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPHONE_58 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPHONE_55 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPHONE_47 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPHONE_40 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPHONE_35 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPAD_PRO_3GEN_129 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPAD_PRO_3GEN_11 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPAD_PRO_129 = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPAD_105 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_IPAD_97 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_DESKTOP = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_WATCH_SERIES_4 = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_WATCH_SERIES_3 = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_APPLE_TV = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPHONE_65 = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPHONE_58 = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPHONE_55 = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPHONE_47 = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPHONE_40 = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPAD_PRO_3GEN_129 = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPAD_PRO_3GEN_11 = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPAD_PRO_129 = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPAD_105 = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMESSAGE_APP_IPAD_97 = 24,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TerritoriesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Territory[] Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TerritoryResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public Territory Data { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class User
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public UserAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public UserRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public UserType Type { get; set; }
	}
	
	public class UserAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="allAppsVisible")]
		public System.Nullable<System.Boolean> AllAppsVisible { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="firstName")]
		public string FirstName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastName")]
		public string LastName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="provisioningAllowed")]
		public System.Nullable<System.Boolean> ProvisioningAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="roles")]
		public UserRole[] Roles { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="username")]
		public string Username { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UserRole
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADMIN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FINANCE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TECHNICAL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCOUNT_HOLDER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READ_ONLY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SALES = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MARKETING = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APP_MANAGER = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEVELOPER = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCESS_TO_REPORTS = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOMER_SUPPORT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_APPS = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_MANAGED_DEVELOPER_ID = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLOUD_MANAGED_APP_DISTRIBUTION = 13,
	}
	
	public class UserRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="visibleApps")]
		public UserRelationshipsVisibleApps VisibleApps { get; set; }
	}
	
	public class UserRelationshipsVisibleApps
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UserRelationshipsVisibleAppsData[] UserRelationshipsVisibleAppsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public UserRelationshipsVisibleAppsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class UserRelationshipsVisibleAppsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class UserRelationshipsVisibleAppsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UserType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		users = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserInvitation
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public UserInvitationAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public ResourceLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public UserInvitationRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public UserInvitationType Type { get; set; }
	}
	
	public class UserInvitationAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="allAppsVisible")]
		public System.Nullable<System.Boolean> AllAppsVisible { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="expirationDate")]
		public System.Nullable<System.DateTimeOffset> ExpirationDate { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="firstName")]
		public string FirstName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastName")]
		public string LastName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="provisioningAllowed")]
		public System.Nullable<System.Boolean> ProvisioningAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="roles")]
		public UserRole[] Roles { get; set; }
	}
	
	public class UserInvitationRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="visibleApps")]
		public UserInvitationRelationshipsVisibleApps VisibleApps { get; set; }
	}
	
	public class UserInvitationRelationshipsVisibleApps
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UserInvitationRelationshipsVisibleAppsData[] UserInvitationRelationshipsVisibleAppsData { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="links")]
		public UserInvitationRelationshipsVisibleAppsLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class UserInvitationRelationshipsVisibleAppsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	public class UserInvitationRelationshipsVisibleAppsLinks
	{
		
		[System.Runtime.Serialization.DataMember(Name="related")]
		public string Related { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="self")]
		public string Self { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UserInvitationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		userInvitations = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserInvitationCreateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UserInvitationCreateRequestData Data { get; set; }
	}
	
	public class UserInvitationCreateRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public UserInvitationCreateRequestDataAttributes Attributes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public UserInvitationCreateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public UserInvitationType Type { get; set; }
	}
	
	public class UserInvitationCreateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="allAppsVisible")]
		public System.Nullable<System.Boolean> AllAppsVisible { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="email")]
		public string Email { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="firstName")]
		public string FirstName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lastName")]
		public string LastName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="provisioningAllowed")]
		public System.Nullable<System.Boolean> ProvisioningAllowed { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roles")]
		public UserRole[] Roles { get; set; }
	}
	
	public class UserInvitationCreateRequestDataRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="visibleApps")]
		public UserInvitationCreateRequestDataRelationshipsVisibleApps VisibleApps { get; set; }
	}
	
	public class UserInvitationCreateRequestDataRelationshipsVisibleApps
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UserInvitationCreateRequestDataRelationshipsVisibleAppsData[] UserInvitationCreateRequestDataRelationshipsVisibleAppsData { get; set; }
	}
	
	public class UserInvitationCreateRequestDataRelationshipsVisibleAppsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserInvitationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UserInvitation Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public App[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserInvitationsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UserInvitation[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public App[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public User Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public App[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public DocumentLinks Links { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserUpdateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UserUpdateRequestData Data { get; set; }
	}
	
	public class UserUpdateRequestData
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public UserUpdateRequestDataAttributes Attributes { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="relationships")]
		public UserUpdateRequestDataRelationships Relationships { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public UserType Type { get; set; }
	}
	
	public class UserUpdateRequestDataAttributes
	{
		
		[System.Runtime.Serialization.DataMember(Name="allAppsVisible")]
		public System.Nullable<System.Boolean> AllAppsVisible { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="provisioningAllowed")]
		public System.Nullable<System.Boolean> ProvisioningAllowed { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="roles")]
		public UserRole[] Roles { get; set; }
	}
	
	public class UserUpdateRequestDataRelationships
	{
		
		[System.Runtime.Serialization.DataMember(Name="visibleApps")]
		public UserUpdateRequestDataRelationshipsVisibleApps VisibleApps { get; set; }
	}
	
	public class UserUpdateRequestDataRelationshipsVisibleApps
	{
		
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UserUpdateRequestDataRelationshipsVisibleAppsData[] UserUpdateRequestDataRelationshipsVisibleAppsData { get; set; }
	}
	
	public class UserUpdateRequestDataRelationshipsVisibleAppsData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserVisibleAppsLinkagesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UserVisibleAppsLinkagesRequestData[] UserVisibleAppsLinkagesRequestData { get; set; }
	}
	
	public class UserVisibleAppsLinkagesRequestData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UserVisibleAppsLinkagesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public UserVisibleAppsLinkagesResponseData[] UserVisibleAppsLinkagesResponseData { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public class UserVisibleAppsLinkagesResponseData
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public AppType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UsersResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="data")]
		public User[] Data { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="included")]
		public App[] Included { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="links")]
		public PagedDocumentLinks Links { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="meta")]
		public PagingInformation Meta { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// AgeRatingDeclarations_update_instance v1/ageRatingDeclarations/{id}
		/// </summary>
		/// <param name="requestBody">AgeRatingDeclaration representation</param>
		/// <returns>Single AgeRatingDeclaration</returns>
		public async Task<AgeRatingDeclarationResponse> AgeRatingDeclarations_update_instanceAsync(AgeRatingDeclarationUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/ageRatingDeclarations/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AgeRatingDeclarationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppCategories_get_collection v1/appCategories
		/// </summary>
		/// <param name="filter_platforms">filter by attribute 'platforms'</param>
		/// <param name="exists_parent">filter by existence or non-existence of related 'parent'</param>
		/// <param name="fields_appCategories">the fields to include for returned resources of type appCategories</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="limit_subcategories">maximum number of related subcategories returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>List of AppCategories</returns>
		public async Task<AppCategoriesResponse> AppCategories_get_collectionAsync(Platform[] filter_platforms, string[] exists_parent, string[] fields_appCategories, int limit, string[] include, int limit_subcategories, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appCategories?"+string.Join("&", filter_platforms.Select(z => $"filter[platforms]={z}"))+"&"+string.Join("&", exists_parent.Select(z => $"exists[parent]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appCategories.Select(z => $"fields[appCategories]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[subcategories]="+limit_subcategories;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppCategoriesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppCategories_get_instance v1/appCategories/{id}
		/// </summary>
		/// <param name="fields_appCategories">the fields to include for returned resources of type appCategories</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="limit_subcategories">maximum number of related subcategories returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>Single AppCategory</returns>
		public async Task<AppCategoryResponse> AppCategories_get_instanceAsync(string[] fields_appCategories, string[] include, int limit_subcategories, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appCategories/{id}?"+string.Join("&", fields_appCategories.Select(z => $"fields[appCategories]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[subcategories]="+limit_subcategories;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppCategoryResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppCategories_parent_get_to_one_related v1/appCategories/{id}/parent
		/// </summary>
		/// <param name="fields_appCategories">the fields to include for returned resources of type appCategories</param>
		/// <returns>Related resource</returns>
		public async Task<AppCategoryResponse> AppCategories_parent_get_to_one_relatedAsync(string[] fields_appCategories, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appCategories/{id}/parent?"+string.Join("&", fields_appCategories.Select(z => $"fields[appCategories]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppCategoryResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppCategories_subcategories_get_to_many_related v1/appCategories/{id}/subcategories
		/// </summary>
		/// <param name="fields_appCategories">the fields to include for returned resources of type appCategories</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<AppCategoriesResponse> AppCategories_subcategories_get_to_many_relatedAsync(string[] fields_appCategories, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appCategories/{id}/subcategories?"+string.Join("&", fields_appCategories.Select(z => $"fields[appCategories]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppCategoriesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppEncryptionDeclarations_get_collection v1/appEncryptionDeclarations
		/// </summary>
		/// <param name="filter_platform">filter by attribute 'platform'</param>
		/// <param name="filter_app">filter by id(s) of related 'app'</param>
		/// <param name="filter_builds">filter by id(s) of related 'builds'</param>
		/// <param name="fields_appEncryptionDeclarations">the fields to include for returned resources of type appEncryptionDeclarations</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <returns>List of AppEncryptionDeclarations</returns>
		public async Task<AppEncryptionDeclarationsResponse> AppEncryptionDeclarations_get_collectionAsync(Platform[] filter_platform, string[] filter_app, string[] filter_builds, string[] fields_appEncryptionDeclarations, int limit, string[] include, string[] fields_apps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appEncryptionDeclarations?"+string.Join("&", filter_platform.Select(z => $"filter[platform]={z}"))+"&"+string.Join("&", filter_app.Select(z => $"filter[app]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_builds.Select(z => $"filter[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appEncryptionDeclarations.Select(z => $"fields[appEncryptionDeclarations]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppEncryptionDeclarationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppEncryptionDeclarations_get_instance v1/appEncryptionDeclarations/{id}
		/// </summary>
		/// <param name="fields_appEncryptionDeclarations">the fields to include for returned resources of type appEncryptionDeclarations</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <returns>Single AppEncryptionDeclaration</returns>
		public async Task<AppEncryptionDeclarationResponse> AppEncryptionDeclarations_get_instanceAsync(string[] fields_appEncryptionDeclarations, string[] include, string[] fields_apps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appEncryptionDeclarations/{id}?"+string.Join("&", fields_appEncryptionDeclarations.Select(z => $"fields[appEncryptionDeclarations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppEncryptionDeclarationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppEncryptionDeclarations_app_get_to_one_related v1/appEncryptionDeclarations/{id}/app
		/// </summary>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <returns>Related resource</returns>
		public async Task<AppResponse> AppEncryptionDeclarations_app_get_to_one_relatedAsync(string[] fields_apps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appEncryptionDeclarations/{id}/app?"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppEncryptionDeclarations_builds_create_to_many_relationship v1/appEncryptionDeclarations/{id}/relationships/builds
		/// </summary>
		/// <param name="requestBody">List of related linkages</param>
		public async Task AppEncryptionDeclarations_builds_create_to_many_relationshipAsync(AppEncryptionDeclarationBuildsLinkagesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appEncryptionDeclarations/{id}/relationships/builds";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppInfoLocalizations_create_instance v1/appInfoLocalizations
		/// </summary>
		/// <param name="requestBody">AppInfoLocalization representation</param>
		public async Task AppInfoLocalizations_create_instanceAsync(AppInfoLocalizationCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appInfoLocalizations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppInfoLocalizations_delete_instance v1/appInfoLocalizations/{id}
		/// </summary>
		public async Task AppInfoLocalizations_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appInfoLocalizations/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppInfoLocalizations_get_instance v1/appInfoLocalizations/{id}
		/// </summary>
		/// <param name="fields_appInfoLocalizations">the fields to include for returned resources of type appInfoLocalizations</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>Single AppInfoLocalization</returns>
		public async Task<AppInfoLocalizationResponse> AppInfoLocalizations_get_instanceAsync(string[] fields_appInfoLocalizations, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appInfoLocalizations/{id}?"+string.Join("&", fields_appInfoLocalizations.Select(z => $"fields[appInfoLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppInfoLocalizationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppInfoLocalizations_update_instance v1/appInfoLocalizations/{id}
		/// </summary>
		/// <param name="requestBody">AppInfoLocalization representation</param>
		/// <returns>Single AppInfoLocalization</returns>
		public async Task<AppInfoLocalizationResponse> AppInfoLocalizations_update_instanceAsync(AppInfoLocalizationUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appInfoLocalizations/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppInfoLocalizationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppInfos_get_instance v1/appInfos/{id}
		/// </summary>
		/// <param name="fields_appInfos">the fields to include for returned resources of type appInfos</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_ageRatingDeclarations">the fields to include for returned resources of type ageRatingDeclarations</param>
		/// <param name="fields_appCategories">the fields to include for returned resources of type appCategories</param>
		/// <param name="fields_appInfoLocalizations">the fields to include for returned resources of type appInfoLocalizations</param>
		/// <param name="limit_appInfoLocalizations">maximum number of related appInfoLocalizations returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>Single AppInfo</returns>
		public async Task<AppInfoResponse> AppInfos_get_instanceAsync(string[] fields_appInfos, string[] include, string[] fields_ageRatingDeclarations, string[] fields_appCategories, string[] fields_appInfoLocalizations, int limit_appInfoLocalizations, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appInfos/{id}?"+string.Join("&", fields_appInfos.Select(z => $"fields[appInfos]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_ageRatingDeclarations.Select(z => $"fields[ageRatingDeclarations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appCategories.Select(z => $"fields[appCategories]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appInfoLocalizations.Select(z => $"fields[appInfoLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[appInfoLocalizations]="+limit_appInfoLocalizations;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppInfoResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppInfos_update_instance v1/appInfos/{id}
		/// </summary>
		/// <param name="requestBody">AppInfo representation</param>
		/// <returns>Single AppInfo</returns>
		public async Task<AppInfoResponse> AppInfos_update_instanceAsync(AppInfoUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appInfos/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppInfoResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppInfos_ageRatingDeclaration_get_to_one_related v1/appInfos/{id}/ageRatingDeclaration
		/// </summary>
		/// <param name="fields_ageRatingDeclarations">the fields to include for returned resources of type ageRatingDeclarations</param>
		/// <returns>Related resource</returns>
		public async Task<AgeRatingDeclarationResponse> AppInfos_ageRatingDeclaration_get_to_one_relatedAsync(string[] fields_ageRatingDeclarations, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appInfos/{id}/ageRatingDeclaration?"+string.Join("&", fields_ageRatingDeclarations.Select(z => $"fields[ageRatingDeclarations]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AgeRatingDeclarationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppInfos_appInfoLocalizations_get_to_many_related v1/appInfos/{id}/appInfoLocalizations
		/// </summary>
		/// <param name="filter_locale">filter by attribute 'locale'</param>
		/// <param name="fields_appInfos">the fields to include for returned resources of type appInfos</param>
		/// <param name="fields_appInfoLocalizations">the fields to include for returned resources of type appInfoLocalizations</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>List of related resources</returns>
		public async Task<AppInfoLocalizationsResponse> AppInfos_appInfoLocalizations_get_to_many_relatedAsync(string[] filter_locale, string[] fields_appInfos, string[] fields_appInfoLocalizations, int limit, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appInfos/{id}/appInfoLocalizations?"+string.Join("&", filter_locale.Select(z => $"filter[locale]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appInfos.Select(z => $"fields[appInfos]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appInfoLocalizations.Select(z => $"fields[appInfoLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppInfoLocalizationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppInfos_primaryCategory_get_to_one_related v1/appInfos/{id}/primaryCategory
		/// </summary>
		/// <param name="fields_appCategories">the fields to include for returned resources of type appCategories</param>
		/// <returns>Related resource</returns>
		public async Task<AppCategoryResponse> AppInfos_primaryCategory_get_to_one_relatedAsync(string[] fields_appCategories, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appInfos/{id}/primaryCategory?"+string.Join("&", fields_appCategories.Select(z => $"fields[appCategories]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppCategoryResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppInfos_primarySubcategoryOne_get_to_one_related v1/appInfos/{id}/primarySubcategoryOne
		/// </summary>
		/// <param name="fields_appCategories">the fields to include for returned resources of type appCategories</param>
		/// <returns>Related resource</returns>
		public async Task<AppCategoryResponse> AppInfos_primarySubcategoryOne_get_to_one_relatedAsync(string[] fields_appCategories, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appInfos/{id}/primarySubcategoryOne?"+string.Join("&", fields_appCategories.Select(z => $"fields[appCategories]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppCategoryResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppInfos_primarySubcategoryTwo_get_to_one_related v1/appInfos/{id}/primarySubcategoryTwo
		/// </summary>
		/// <param name="fields_appCategories">the fields to include for returned resources of type appCategories</param>
		/// <returns>Related resource</returns>
		public async Task<AppCategoryResponse> AppInfos_primarySubcategoryTwo_get_to_one_relatedAsync(string[] fields_appCategories, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appInfos/{id}/primarySubcategoryTwo?"+string.Join("&", fields_appCategories.Select(z => $"fields[appCategories]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppCategoryResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppInfos_secondaryCategory_get_to_one_related v1/appInfos/{id}/secondaryCategory
		/// </summary>
		/// <param name="fields_appCategories">the fields to include for returned resources of type appCategories</param>
		/// <returns>Related resource</returns>
		public async Task<AppCategoryResponse> AppInfos_secondaryCategory_get_to_one_relatedAsync(string[] fields_appCategories, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appInfos/{id}/secondaryCategory?"+string.Join("&", fields_appCategories.Select(z => $"fields[appCategories]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppCategoryResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppInfos_secondarySubcategoryOne_get_to_one_related v1/appInfos/{id}/secondarySubcategoryOne
		/// </summary>
		/// <param name="fields_appCategories">the fields to include for returned resources of type appCategories</param>
		/// <returns>Related resource</returns>
		public async Task<AppCategoryResponse> AppInfos_secondarySubcategoryOne_get_to_one_relatedAsync(string[] fields_appCategories, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appInfos/{id}/secondarySubcategoryOne?"+string.Join("&", fields_appCategories.Select(z => $"fields[appCategories]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppCategoryResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppInfos_secondarySubcategoryTwo_get_to_one_related v1/appInfos/{id}/secondarySubcategoryTwo
		/// </summary>
		/// <param name="fields_appCategories">the fields to include for returned resources of type appCategories</param>
		/// <returns>Related resource</returns>
		public async Task<AppCategoryResponse> AppInfos_secondarySubcategoryTwo_get_to_one_relatedAsync(string[] fields_appCategories, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appInfos/{id}/secondarySubcategoryTwo?"+string.Join("&", fields_appCategories.Select(z => $"fields[appCategories]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppCategoryResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPreOrders_create_instance v1/appPreOrders
		/// </summary>
		/// <param name="requestBody">AppPreOrder representation</param>
		public async Task AppPreOrders_create_instanceAsync(AppPreOrderCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPreOrders";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPreOrders_delete_instance v1/appPreOrders/{id}
		/// </summary>
		public async Task AppPreOrders_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPreOrders/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPreOrders_get_instance v1/appPreOrders/{id}
		/// </summary>
		/// <param name="fields_appPreOrders">the fields to include for returned resources of type appPreOrders</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>Single AppPreOrder</returns>
		public async Task<AppPreOrderResponse> AppPreOrders_get_instanceAsync(string[] fields_appPreOrders, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPreOrders/{id}?"+string.Join("&", fields_appPreOrders.Select(z => $"fields[appPreOrders]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppPreOrderResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPreOrders_update_instance v1/appPreOrders/{id}
		/// </summary>
		/// <param name="requestBody">AppPreOrder representation</param>
		/// <returns>Single AppPreOrder</returns>
		public async Task<AppPreOrderResponse> AppPreOrders_update_instanceAsync(AppPreOrderUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPreOrders/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppPreOrderResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPreviewSets_create_instance v1/appPreviewSets
		/// </summary>
		/// <param name="requestBody">AppPreviewSet representation</param>
		public async Task AppPreviewSets_create_instanceAsync(AppPreviewSetCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPreviewSets";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPreviewSets_delete_instance v1/appPreviewSets/{id}
		/// </summary>
		public async Task AppPreviewSets_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPreviewSets/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPreviewSets_get_instance v1/appPreviewSets/{id}
		/// </summary>
		/// <param name="fields_appPreviewSets">the fields to include for returned resources of type appPreviewSets</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_appPreviews">the fields to include for returned resources of type appPreviews</param>
		/// <param name="limit_appPreviews">maximum number of related appPreviews returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>Single AppPreviewSet</returns>
		public async Task<AppPreviewSetResponse> AppPreviewSets_get_instanceAsync(string[] fields_appPreviewSets, string[] include, string[] fields_appPreviews, int limit_appPreviews, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPreviewSets/{id}?"+string.Join("&", fields_appPreviewSets.Select(z => $"fields[appPreviewSets]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appPreviews.Select(z => $"fields[appPreviews]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[appPreviews]="+limit_appPreviews;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppPreviewSetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPreviewSets_appPreviews_get_to_many_related v1/appPreviewSets/{id}/appPreviews
		/// </summary>
		/// <param name="fields_appPreviews">the fields to include for returned resources of type appPreviews</param>
		/// <param name="fields_appPreviewSets">the fields to include for returned resources of type appPreviewSets</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>List of related resources</returns>
		public async Task<AppPreviewsResponse> AppPreviewSets_appPreviews_get_to_many_relatedAsync(string[] fields_appPreviews, string[] fields_appPreviewSets, int limit, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPreviewSets/{id}/appPreviews?"+string.Join("&", fields_appPreviews.Select(z => $"fields[appPreviews]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appPreviewSets.Select(z => $"fields[appPreviewSets]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppPreviewsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPreviewSets_appPreviews_get_to_many_relationship v1/appPreviewSets/{id}/relationships/appPreviews
		/// </summary>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related linkages</returns>
		public async Task<AppPreviewSetAppPreviewsLinkagesResponse> AppPreviewSets_appPreviews_get_to_many_relationshipAsync(int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPreviewSets/{id}/relationships/appPreviews?limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppPreviewSetAppPreviewsLinkagesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPreviewSets_appPreviews_replace_to_many_relationship v1/appPreviewSets/{id}/relationships/appPreviews
		/// </summary>
		/// <param name="requestBody">List of related linkages</param>
		public async Task AppPreviewSets_appPreviews_replace_to_many_relationshipAsync(AppPreviewSetAppPreviewsLinkagesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPreviewSets/{id}/relationships/appPreviews";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPreviews_create_instance v1/appPreviews
		/// </summary>
		/// <param name="requestBody">AppPreview representation</param>
		public async Task AppPreviews_create_instanceAsync(AppPreviewCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPreviews";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPreviews_delete_instance v1/appPreviews/{id}
		/// </summary>
		public async Task AppPreviews_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPreviews/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPreviews_get_instance v1/appPreviews/{id}
		/// </summary>
		/// <param name="fields_appPreviews">the fields to include for returned resources of type appPreviews</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>Single AppPreview</returns>
		public async Task<AppPreviewResponse> AppPreviews_get_instanceAsync(string[] fields_appPreviews, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPreviews/{id}?"+string.Join("&", fields_appPreviews.Select(z => $"fields[appPreviews]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppPreviewResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPreviews_update_instance v1/appPreviews/{id}
		/// </summary>
		/// <param name="requestBody">AppPreview representation</param>
		/// <returns>Single AppPreview</returns>
		public async Task<AppPreviewResponse> AppPreviews_update_instanceAsync(AppPreviewUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPreviews/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppPreviewResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPricePoints_get_collection v1/appPricePoints
		/// </summary>
		/// <param name="filter_priceTier">filter by id(s) of related 'priceTier'</param>
		/// <param name="filter_territory">filter by id(s) of related 'territory'</param>
		/// <param name="fields_appPricePoints">the fields to include for returned resources of type appPricePoints</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_territories">the fields to include for returned resources of type territories</param>
		/// <returns>List of AppPricePoints</returns>
		public async Task<AppPricePointsResponse> AppPricePoints_get_collectionAsync(string[] filter_priceTier, string[] filter_territory, string[] fields_appPricePoints, int limit, string[] include, string[] fields_territories, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPricePoints?"+string.Join("&", filter_priceTier.Select(z => $"filter[priceTier]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_territory.Select(z => $"filter[territory]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appPricePoints.Select(z => $"fields[appPricePoints]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_territories.Select(z => $"fields[territories]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppPricePointsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPricePoints_get_instance v1/appPricePoints/{id}
		/// </summary>
		/// <param name="fields_appPricePoints">the fields to include for returned resources of type appPricePoints</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_territories">the fields to include for returned resources of type territories</param>
		/// <returns>Single AppPricePoint</returns>
		public async Task<AppPricePointResponse> AppPricePoints_get_instanceAsync(string[] fields_appPricePoints, string[] include, string[] fields_territories, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPricePoints/{id}?"+string.Join("&", fields_appPricePoints.Select(z => $"fields[appPricePoints]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_territories.Select(z => $"fields[territories]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppPricePointResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPricePoints_territory_get_to_one_related v1/appPricePoints/{id}/territory
		/// </summary>
		/// <param name="fields_territories">the fields to include for returned resources of type territories</param>
		/// <returns>Related resource</returns>
		public async Task<TerritoryResponse> AppPricePoints_territory_get_to_one_relatedAsync(string[] fields_territories, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPricePoints/{id}/territory?"+string.Join("&", fields_territories.Select(z => $"fields[territories]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TerritoryResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPriceTiers_get_collection v1/appPriceTiers
		/// </summary>
		/// <param name="filter_id">filter by id(s)</param>
		/// <param name="fields_appPriceTiers">the fields to include for returned resources of type appPriceTiers</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_appPricePoints">the fields to include for returned resources of type appPricePoints</param>
		/// <param name="limit_pricePoints">maximum number of related pricePoints returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>List of AppPriceTiers</returns>
		public async Task<AppPriceTiersResponse> AppPriceTiers_get_collectionAsync(string[] filter_id, string[] fields_appPriceTiers, int limit, string[] include, string[] fields_appPricePoints, int limit_pricePoints, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPriceTiers?"+string.Join("&", filter_id.Select(z => $"filter[id]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appPriceTiers.Select(z => $"fields[appPriceTiers]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appPricePoints.Select(z => $"fields[appPricePoints]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[pricePoints]="+limit_pricePoints;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppPriceTiersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPriceTiers_get_instance v1/appPriceTiers/{id}
		/// </summary>
		/// <param name="fields_appPriceTiers">the fields to include for returned resources of type appPriceTiers</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_appPricePoints">the fields to include for returned resources of type appPricePoints</param>
		/// <param name="limit_pricePoints">maximum number of related pricePoints returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>Single AppPriceTier</returns>
		public async Task<AppPriceTierResponse> AppPriceTiers_get_instanceAsync(string[] fields_appPriceTiers, string[] include, string[] fields_appPricePoints, int limit_pricePoints, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPriceTiers/{id}?"+string.Join("&", fields_appPriceTiers.Select(z => $"fields[appPriceTiers]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appPricePoints.Select(z => $"fields[appPricePoints]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[pricePoints]="+limit_pricePoints;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppPriceTierResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPriceTiers_pricePoints_get_to_many_related v1/appPriceTiers/{id}/pricePoints
		/// </summary>
		/// <param name="fields_appPricePoints">the fields to include for returned resources of type appPricePoints</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<AppPricePointsResponse> AppPriceTiers_pricePoints_get_to_many_relatedAsync(string[] fields_appPricePoints, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPriceTiers/{id}/pricePoints?"+string.Join("&", fields_appPricePoints.Select(z => $"fields[appPricePoints]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppPricePointsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppPrices_get_instance v1/appPrices/{id}
		/// </summary>
		/// <param name="fields_appPrices">the fields to include for returned resources of type appPrices</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>Single AppPrice</returns>
		public async Task<AppPriceResponse> AppPrices_get_instanceAsync(string[] fields_appPrices, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appPrices/{id}?"+string.Join("&", fields_appPrices.Select(z => $"fields[appPrices]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppPriceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppScreenshotSets_create_instance v1/appScreenshotSets
		/// </summary>
		/// <param name="requestBody">AppScreenshotSet representation</param>
		public async Task AppScreenshotSets_create_instanceAsync(AppScreenshotSetCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appScreenshotSets";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppScreenshotSets_delete_instance v1/appScreenshotSets/{id}
		/// </summary>
		public async Task AppScreenshotSets_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appScreenshotSets/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppScreenshotSets_get_instance v1/appScreenshotSets/{id}
		/// </summary>
		/// <param name="fields_appScreenshotSets">the fields to include for returned resources of type appScreenshotSets</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_appScreenshots">the fields to include for returned resources of type appScreenshots</param>
		/// <param name="limit_appScreenshots">maximum number of related appScreenshots returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>Single AppScreenshotSet</returns>
		public async Task<AppScreenshotSetResponse> AppScreenshotSets_get_instanceAsync(string[] fields_appScreenshotSets, string[] include, string[] fields_appScreenshots, int limit_appScreenshots, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appScreenshotSets/{id}?"+string.Join("&", fields_appScreenshotSets.Select(z => $"fields[appScreenshotSets]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appScreenshots.Select(z => $"fields[appScreenshots]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[appScreenshots]="+limit_appScreenshots;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppScreenshotSetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppScreenshotSets_appScreenshots_get_to_many_related v1/appScreenshotSets/{id}/appScreenshots
		/// </summary>
		/// <param name="fields_appScreenshotSets">the fields to include for returned resources of type appScreenshotSets</param>
		/// <param name="fields_appScreenshots">the fields to include for returned resources of type appScreenshots</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>List of related resources</returns>
		public async Task<AppScreenshotsResponse> AppScreenshotSets_appScreenshots_get_to_many_relatedAsync(string[] fields_appScreenshotSets, string[] fields_appScreenshots, int limit, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appScreenshotSets/{id}/appScreenshots?"+string.Join("&", fields_appScreenshotSets.Select(z => $"fields[appScreenshotSets]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appScreenshots.Select(z => $"fields[appScreenshots]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppScreenshotsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppScreenshotSets_appScreenshots_get_to_many_relationship v1/appScreenshotSets/{id}/relationships/appScreenshots
		/// </summary>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related linkages</returns>
		public async Task<AppScreenshotSetAppScreenshotsLinkagesResponse> AppScreenshotSets_appScreenshots_get_to_many_relationshipAsync(int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appScreenshotSets/{id}/relationships/appScreenshots?limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppScreenshotSetAppScreenshotsLinkagesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppScreenshotSets_appScreenshots_replace_to_many_relationship v1/appScreenshotSets/{id}/relationships/appScreenshots
		/// </summary>
		/// <param name="requestBody">List of related linkages</param>
		public async Task AppScreenshotSets_appScreenshots_replace_to_many_relationshipAsync(AppScreenshotSetAppScreenshotsLinkagesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appScreenshotSets/{id}/relationships/appScreenshots";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppScreenshots_create_instance v1/appScreenshots
		/// </summary>
		/// <param name="requestBody">AppScreenshot representation</param>
		public async Task AppScreenshots_create_instanceAsync(AppScreenshotCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appScreenshots";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppScreenshots_delete_instance v1/appScreenshots/{id}
		/// </summary>
		public async Task AppScreenshots_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appScreenshots/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppScreenshots_get_instance v1/appScreenshots/{id}
		/// </summary>
		/// <param name="fields_appScreenshots">the fields to include for returned resources of type appScreenshots</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>Single AppScreenshot</returns>
		public async Task<AppScreenshotResponse> AppScreenshots_get_instanceAsync(string[] fields_appScreenshots, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appScreenshots/{id}?"+string.Join("&", fields_appScreenshots.Select(z => $"fields[appScreenshots]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppScreenshotResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppScreenshots_update_instance v1/appScreenshots/{id}
		/// </summary>
		/// <param name="requestBody">AppScreenshot representation</param>
		/// <returns>Single AppScreenshot</returns>
		public async Task<AppScreenshotResponse> AppScreenshots_update_instanceAsync(AppScreenshotUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appScreenshots/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppScreenshotResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreReviewAttachments_create_instance v1/appStoreReviewAttachments
		/// </summary>
		/// <param name="requestBody">AppStoreReviewAttachment representation</param>
		public async Task AppStoreReviewAttachments_create_instanceAsync(AppStoreReviewAttachmentCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreReviewAttachments";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreReviewAttachments_delete_instance v1/appStoreReviewAttachments/{id}
		/// </summary>
		public async Task AppStoreReviewAttachments_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreReviewAttachments/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreReviewAttachments_get_instance v1/appStoreReviewAttachments/{id}
		/// </summary>
		/// <param name="fields_appStoreReviewAttachments">the fields to include for returned resources of type appStoreReviewAttachments</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>Single AppStoreReviewAttachment</returns>
		public async Task<AppStoreReviewAttachmentResponse> AppStoreReviewAttachments_get_instanceAsync(string[] fields_appStoreReviewAttachments, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreReviewAttachments/{id}?"+string.Join("&", fields_appStoreReviewAttachments.Select(z => $"fields[appStoreReviewAttachments]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppStoreReviewAttachmentResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreReviewAttachments_update_instance v1/appStoreReviewAttachments/{id}
		/// </summary>
		/// <param name="requestBody">AppStoreReviewAttachment representation</param>
		/// <returns>Single AppStoreReviewAttachment</returns>
		public async Task<AppStoreReviewAttachmentResponse> AppStoreReviewAttachments_update_instanceAsync(AppStoreReviewAttachmentUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreReviewAttachments/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppStoreReviewAttachmentResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreReviewDetails_create_instance v1/appStoreReviewDetails
		/// </summary>
		/// <param name="requestBody">AppStoreReviewDetail representation</param>
		public async Task AppStoreReviewDetails_create_instanceAsync(AppStoreReviewDetailCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreReviewDetails";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreReviewDetails_get_instance v1/appStoreReviewDetails/{id}
		/// </summary>
		/// <param name="fields_appStoreReviewDetails">the fields to include for returned resources of type appStoreReviewDetails</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_appStoreReviewAttachments">the fields to include for returned resources of type appStoreReviewAttachments</param>
		/// <param name="limit_appStoreReviewAttachments">maximum number of related appStoreReviewAttachments returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>Single AppStoreReviewDetail</returns>
		public async Task<AppStoreReviewDetailResponse> AppStoreReviewDetails_get_instanceAsync(string[] fields_appStoreReviewDetails, string[] include, string[] fields_appStoreReviewAttachments, int limit_appStoreReviewAttachments, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreReviewDetails/{id}?"+string.Join("&", fields_appStoreReviewDetails.Select(z => $"fields[appStoreReviewDetails]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appStoreReviewAttachments.Select(z => $"fields[appStoreReviewAttachments]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[appStoreReviewAttachments]="+limit_appStoreReviewAttachments;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppStoreReviewDetailResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreReviewDetails_update_instance v1/appStoreReviewDetails/{id}
		/// </summary>
		/// <param name="requestBody">AppStoreReviewDetail representation</param>
		/// <returns>Single AppStoreReviewDetail</returns>
		public async Task<AppStoreReviewDetailResponse> AppStoreReviewDetails_update_instanceAsync(AppStoreReviewDetailUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreReviewDetails/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppStoreReviewDetailResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreReviewDetails_appStoreReviewAttachments_get_to_many_related v1/appStoreReviewDetails/{id}/appStoreReviewAttachments
		/// </summary>
		/// <param name="fields_appStoreReviewDetails">the fields to include for returned resources of type appStoreReviewDetails</param>
		/// <param name="fields_appStoreReviewAttachments">the fields to include for returned resources of type appStoreReviewAttachments</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>List of related resources</returns>
		public async Task<AppStoreReviewAttachmentsResponse> AppStoreReviewDetails_appStoreReviewAttachments_get_to_many_relatedAsync(string[] fields_appStoreReviewDetails, string[] fields_appStoreReviewAttachments, int limit, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreReviewDetails/{id}/appStoreReviewAttachments?"+string.Join("&", fields_appStoreReviewDetails.Select(z => $"fields[appStoreReviewDetails]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appStoreReviewAttachments.Select(z => $"fields[appStoreReviewAttachments]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppStoreReviewAttachmentsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersionLocalizations_create_instance v1/appStoreVersionLocalizations
		/// </summary>
		/// <param name="requestBody">AppStoreVersionLocalization representation</param>
		public async Task AppStoreVersionLocalizations_create_instanceAsync(AppStoreVersionLocalizationCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersionLocalizations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersionLocalizations_delete_instance v1/appStoreVersionLocalizations/{id}
		/// </summary>
		public async Task AppStoreVersionLocalizations_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersionLocalizations/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersionLocalizations_get_instance v1/appStoreVersionLocalizations/{id}
		/// </summary>
		/// <param name="fields_appStoreVersionLocalizations">the fields to include for returned resources of type appStoreVersionLocalizations</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_appScreenshotSets">the fields to include for returned resources of type appScreenshotSets</param>
		/// <param name="fields_appPreviewSets">the fields to include for returned resources of type appPreviewSets</param>
		/// <param name="limit_appPreviewSets">maximum number of related appPreviewSets returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_appScreenshotSets">maximum number of related appScreenshotSets returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>Single AppStoreVersionLocalization</returns>
		public async Task<AppStoreVersionLocalizationResponse> AppStoreVersionLocalizations_get_instanceAsync(string[] fields_appStoreVersionLocalizations, string[] include, string[] fields_appScreenshotSets, string[] fields_appPreviewSets, int limit_appPreviewSets, int limit_appScreenshotSets, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersionLocalizations/{id}?"+string.Join("&", fields_appStoreVersionLocalizations.Select(z => $"fields[appStoreVersionLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appScreenshotSets.Select(z => $"fields[appScreenshotSets]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appPreviewSets.Select(z => $"fields[appPreviewSets]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[appPreviewSets]="+limit_appPreviewSets+"&limit[appScreenshotSets]="+limit_appScreenshotSets;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppStoreVersionLocalizationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersionLocalizations_update_instance v1/appStoreVersionLocalizations/{id}
		/// </summary>
		/// <param name="requestBody">AppStoreVersionLocalization representation</param>
		/// <returns>Single AppStoreVersionLocalization</returns>
		public async Task<AppStoreVersionLocalizationResponse> AppStoreVersionLocalizations_update_instanceAsync(AppStoreVersionLocalizationUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersionLocalizations/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppStoreVersionLocalizationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersionLocalizations_appPreviewSets_get_to_many_related v1/appStoreVersionLocalizations/{id}/appPreviewSets
		/// </summary>
		/// <param name="filter_previewType">filter by attribute 'previewType'</param>
		/// <param name="fields_appStoreVersionLocalizations">the fields to include for returned resources of type appStoreVersionLocalizations</param>
		/// <param name="fields_appPreviews">the fields to include for returned resources of type appPreviews</param>
		/// <param name="fields_appPreviewSets">the fields to include for returned resources of type appPreviewSets</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>List of related resources</returns>
		public async Task<AppPreviewSetsResponse> AppStoreVersionLocalizations_appPreviewSets_get_to_many_relatedAsync(AppPreviewSetAttributesPreviewType[] filter_previewType, string[] fields_appStoreVersionLocalizations, string[] fields_appPreviews, string[] fields_appPreviewSets, int limit, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersionLocalizations/{id}/appPreviewSets?"+string.Join("&", filter_previewType.Select(z => $"filter[previewType]={z}"))+"&"+string.Join("&", fields_appStoreVersionLocalizations.Select(z => $"fields[appStoreVersionLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appPreviews.Select(z => $"fields[appPreviews]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appPreviewSets.Select(z => $"fields[appPreviewSets]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppPreviewSetsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersionLocalizations_appScreenshotSets_get_to_many_related v1/appStoreVersionLocalizations/{id}/appScreenshotSets
		/// </summary>
		/// <param name="filter_screenshotDisplayType">filter by attribute 'screenshotDisplayType'</param>
		/// <param name="fields_appStoreVersionLocalizations">the fields to include for returned resources of type appStoreVersionLocalizations</param>
		/// <param name="fields_appScreenshotSets">the fields to include for returned resources of type appScreenshotSets</param>
		/// <param name="fields_appScreenshots">the fields to include for returned resources of type appScreenshots</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>List of related resources</returns>
		public async Task<AppScreenshotSetsResponse> AppStoreVersionLocalizations_appScreenshotSets_get_to_many_relatedAsync(AppScreenshotSetAttributesScreenshotDisplayType[] filter_screenshotDisplayType, string[] fields_appStoreVersionLocalizations, string[] fields_appScreenshotSets, string[] fields_appScreenshots, int limit, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersionLocalizations/{id}/appScreenshotSets?"+string.Join("&", filter_screenshotDisplayType.Select(z => $"filter[screenshotDisplayType]={z}"))+"&"+string.Join("&", fields_appStoreVersionLocalizations.Select(z => $"fields[appStoreVersionLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appScreenshotSets.Select(z => $"fields[appScreenshotSets]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appScreenshots.Select(z => $"fields[appScreenshots]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppScreenshotSetsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersionPhasedReleases_create_instance v1/appStoreVersionPhasedReleases
		/// </summary>
		/// <param name="requestBody">AppStoreVersionPhasedRelease representation</param>
		public async Task AppStoreVersionPhasedReleases_create_instanceAsync(AppStoreVersionPhasedReleaseCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersionPhasedReleases";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersionPhasedReleases_delete_instance v1/appStoreVersionPhasedReleases/{id}
		/// </summary>
		public async Task AppStoreVersionPhasedReleases_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersionPhasedReleases/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersionPhasedReleases_update_instance v1/appStoreVersionPhasedReleases/{id}
		/// </summary>
		/// <param name="requestBody">AppStoreVersionPhasedRelease representation</param>
		/// <returns>Single AppStoreVersionPhasedRelease</returns>
		public async Task<AppStoreVersionPhasedReleaseResponse> AppStoreVersionPhasedReleases_update_instanceAsync(AppStoreVersionPhasedReleaseUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersionPhasedReleases/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppStoreVersionPhasedReleaseResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersionSubmissions_create_instance v1/appStoreVersionSubmissions
		/// </summary>
		/// <param name="requestBody">AppStoreVersionSubmission representation</param>
		public async Task AppStoreVersionSubmissions_create_instanceAsync(AppStoreVersionSubmissionCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersionSubmissions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersionSubmissions_delete_instance v1/appStoreVersionSubmissions/{id}
		/// </summary>
		public async Task AppStoreVersionSubmissions_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersionSubmissions/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersions_create_instance v1/appStoreVersions
		/// </summary>
		/// <param name="requestBody">AppStoreVersion representation</param>
		public async Task AppStoreVersions_create_instanceAsync(AppStoreVersionCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersions_delete_instance v1/appStoreVersions/{id}
		/// </summary>
		public async Task AppStoreVersions_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersions/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersions_get_instance v1/appStoreVersions/{id}
		/// </summary>
		/// <param name="fields_appStoreVersions">the fields to include for returned resources of type appStoreVersions</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_appStoreVersionLocalizations">the fields to include for returned resources of type appStoreVersionLocalizations</param>
		/// <param name="fields_idfaDeclarations">the fields to include for returned resources of type idfaDeclarations</param>
		/// <param name="fields_routingAppCoverages">the fields to include for returned resources of type routingAppCoverages</param>
		/// <param name="fields_appStoreVersionPhasedReleases">the fields to include for returned resources of type appStoreVersionPhasedReleases</param>
		/// <param name="fields_ageRatingDeclarations">the fields to include for returned resources of type ageRatingDeclarations</param>
		/// <param name="fields_appStoreReviewDetails">the fields to include for returned resources of type appStoreReviewDetails</param>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <param name="fields_appStoreVersionSubmissions">the fields to include for returned resources of type appStoreVersionSubmissions</param>
		/// <param name="limit_appStoreVersionLocalizations">maximum number of related appStoreVersionLocalizations returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>Single AppStoreVersion</returns>
		public async Task<AppStoreVersionResponse> AppStoreVersions_get_instanceAsync(string[] fields_appStoreVersions, string[] include, string[] fields_appStoreVersionLocalizations, string[] fields_idfaDeclarations, string[] fields_routingAppCoverages, string[] fields_appStoreVersionPhasedReleases, string[] fields_ageRatingDeclarations, string[] fields_appStoreReviewDetails, string[] fields_builds, string[] fields_appStoreVersionSubmissions, int limit_appStoreVersionLocalizations, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersions/{id}?"+string.Join("&", fields_appStoreVersions.Select(z => $"fields[appStoreVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appStoreVersionLocalizations.Select(z => $"fields[appStoreVersionLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_idfaDeclarations.Select(z => $"fields[idfaDeclarations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_routingAppCoverages.Select(z => $"fields[routingAppCoverages]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appStoreVersionPhasedReleases.Select(z => $"fields[appStoreVersionPhasedReleases]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_ageRatingDeclarations.Select(z => $"fields[ageRatingDeclarations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appStoreReviewDetails.Select(z => $"fields[appStoreReviewDetails]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appStoreVersionSubmissions.Select(z => $"fields[appStoreVersionSubmissions]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[appStoreVersionLocalizations]="+limit_appStoreVersionLocalizations;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppStoreVersionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersions_update_instance v1/appStoreVersions/{id}
		/// </summary>
		/// <param name="requestBody">AppStoreVersion representation</param>
		/// <returns>Single AppStoreVersion</returns>
		public async Task<AppStoreVersionResponse> AppStoreVersions_update_instanceAsync(AppStoreVersionUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersions/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppStoreVersionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersions_ageRatingDeclaration_get_to_one_related v1/appStoreVersions/{id}/ageRatingDeclaration
		/// </summary>
		/// <param name="fields_ageRatingDeclarations">the fields to include for returned resources of type ageRatingDeclarations</param>
		/// <returns>Related resource</returns>
		public async Task<AgeRatingDeclarationResponse> AppStoreVersions_ageRatingDeclaration_get_to_one_relatedAsync(string[] fields_ageRatingDeclarations, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersions/{id}/ageRatingDeclaration?"+string.Join("&", fields_ageRatingDeclarations.Select(z => $"fields[ageRatingDeclarations]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AgeRatingDeclarationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersions_appStoreReviewDetail_get_to_one_related v1/appStoreVersions/{id}/appStoreReviewDetail
		/// </summary>
		/// <param name="fields_appStoreReviewDetails">the fields to include for returned resources of type appStoreReviewDetails</param>
		/// <param name="fields_appStoreVersions">the fields to include for returned resources of type appStoreVersions</param>
		/// <param name="fields_appStoreReviewAttachments">the fields to include for returned resources of type appStoreReviewAttachments</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>Related resource</returns>
		public async Task<AppStoreReviewDetailResponse> AppStoreVersions_appStoreReviewDetail_get_to_one_relatedAsync(string[] fields_appStoreReviewDetails, string[] fields_appStoreVersions, string[] fields_appStoreReviewAttachments, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersions/{id}/appStoreReviewDetail?"+string.Join("&", fields_appStoreReviewDetails.Select(z => $"fields[appStoreReviewDetails]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appStoreVersions.Select(z => $"fields[appStoreVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appStoreReviewAttachments.Select(z => $"fields[appStoreReviewAttachments]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppStoreReviewDetailResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersions_appStoreVersionLocalizations_get_to_many_related v1/appStoreVersions/{id}/appStoreVersionLocalizations
		/// </summary>
		/// <param name="fields_appStoreVersionLocalizations">the fields to include for returned resources of type appStoreVersionLocalizations</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<AppStoreVersionLocalizationsResponse> AppStoreVersions_appStoreVersionLocalizations_get_to_many_relatedAsync(string[] fields_appStoreVersionLocalizations, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersions/{id}/appStoreVersionLocalizations?"+string.Join("&", fields_appStoreVersionLocalizations.Select(z => $"fields[appStoreVersionLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppStoreVersionLocalizationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersions_appStoreVersionPhasedRelease_get_to_one_related v1/appStoreVersions/{id}/appStoreVersionPhasedRelease
		/// </summary>
		/// <param name="fields_appStoreVersionPhasedReleases">the fields to include for returned resources of type appStoreVersionPhasedReleases</param>
		/// <returns>Related resource</returns>
		public async Task<AppStoreVersionPhasedReleaseResponse> AppStoreVersions_appStoreVersionPhasedRelease_get_to_one_relatedAsync(string[] fields_appStoreVersionPhasedReleases, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersions/{id}/appStoreVersionPhasedRelease?"+string.Join("&", fields_appStoreVersionPhasedReleases.Select(z => $"fields[appStoreVersionPhasedReleases]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppStoreVersionPhasedReleaseResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersions_appStoreVersionSubmission_get_to_one_related v1/appStoreVersions/{id}/appStoreVersionSubmission
		/// </summary>
		/// <param name="fields_appStoreVersions">the fields to include for returned resources of type appStoreVersions</param>
		/// <param name="fields_appStoreVersionSubmissions">the fields to include for returned resources of type appStoreVersionSubmissions</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>Related resource</returns>
		public async Task<AppStoreVersionSubmissionResponse> AppStoreVersions_appStoreVersionSubmission_get_to_one_relatedAsync(string[] fields_appStoreVersions, string[] fields_appStoreVersionSubmissions, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersions/{id}/appStoreVersionSubmission?"+string.Join("&", fields_appStoreVersions.Select(z => $"fields[appStoreVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appStoreVersionSubmissions.Select(z => $"fields[appStoreVersionSubmissions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppStoreVersionSubmissionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersions_build_get_to_one_related v1/appStoreVersions/{id}/build
		/// </summary>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <returns>Related resource</returns>
		public async Task<BuildResponse> AppStoreVersions_build_get_to_one_relatedAsync(string[] fields_builds, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersions/{id}/build?"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BuildResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersions_idfaDeclaration_get_to_one_related v1/appStoreVersions/{id}/idfaDeclaration
		/// </summary>
		/// <param name="fields_idfaDeclarations">the fields to include for returned resources of type idfaDeclarations</param>
		/// <returns>Related resource</returns>
		public async Task<IdfaDeclarationResponse> AppStoreVersions_idfaDeclaration_get_to_one_relatedAsync(string[] fields_idfaDeclarations, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersions/{id}/idfaDeclaration?"+string.Join("&", fields_idfaDeclarations.Select(z => $"fields[idfaDeclarations]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<IdfaDeclarationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersions_build_get_to_one_relationship v1/appStoreVersions/{id}/relationships/build
		/// </summary>
		/// <returns>Related linkage</returns>
		public async Task<AppStoreVersionBuildLinkageResponse> AppStoreVersions_build_get_to_one_relationshipAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersions/{id}/relationships/build";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppStoreVersionBuildLinkageResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersions_build_update_to_one_relationship v1/appStoreVersions/{id}/relationships/build
		/// </summary>
		/// <param name="requestBody">Related linkage</param>
		public async Task AppStoreVersions_build_update_to_one_relationshipAsync(AppStoreVersionBuildLinkageRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersions/{id}/relationships/build";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// AppStoreVersions_routingAppCoverage_get_to_one_related v1/appStoreVersions/{id}/routingAppCoverage
		/// </summary>
		/// <param name="fields_routingAppCoverages">the fields to include for returned resources of type routingAppCoverages</param>
		/// <returns>Related resource</returns>
		public async Task<RoutingAppCoverageResponse> AppStoreVersions_routingAppCoverage_get_to_one_relatedAsync(string[] fields_routingAppCoverages, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/appStoreVersions/{id}/routingAppCoverage?"+string.Join("&", fields_routingAppCoverages.Select(z => $"fields[routingAppCoverages]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RoutingAppCoverageResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_get_collection v1/apps
		/// </summary>
		/// <param name="filter_appStoreVersions_appStoreState">filter by attribute 'appStoreVersions.appStoreState'</param>
		/// <param name="filter_appStoreVersions_platform">filter by attribute 'appStoreVersions.platform'</param>
		/// <param name="filter_bundleId">filter by attribute 'bundleId'</param>
		/// <param name="filter_name">filter by attribute 'name'</param>
		/// <param name="filter_sku">filter by attribute 'sku'</param>
		/// <param name="filter_appStoreVersions">filter by id(s) of related 'appStoreVersions'</param>
		/// <param name="filter_id">filter by id(s)</param>
		/// <param name="exists_gameCenterEnabledVersions">filter by existence or non-existence of related 'gameCenterEnabledVersions'</param>
		/// <param name="sort">comma-separated list of sort expressions; resources will be sorted as specified</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_betaGroups">the fields to include for returned resources of type betaGroups</param>
		/// <param name="fields_perfPowerMetrics">the fields to include for returned resources of type perfPowerMetrics</param>
		/// <param name="fields_appInfos">the fields to include for returned resources of type appInfos</param>
		/// <param name="fields_appPreOrders">the fields to include for returned resources of type appPreOrders</param>
		/// <param name="fields_preReleaseVersions">the fields to include for returned resources of type preReleaseVersions</param>
		/// <param name="fields_appPrices">the fields to include for returned resources of type appPrices</param>
		/// <param name="fields_inAppPurchases">the fields to include for returned resources of type inAppPurchases</param>
		/// <param name="fields_betaAppReviewDetails">the fields to include for returned resources of type betaAppReviewDetails</param>
		/// <param name="fields_territories">the fields to include for returned resources of type territories</param>
		/// <param name="fields_gameCenterEnabledVersions">the fields to include for returned resources of type gameCenterEnabledVersions</param>
		/// <param name="fields_appStoreVersions">the fields to include for returned resources of type appStoreVersions</param>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <param name="fields_betaAppLocalizations">the fields to include for returned resources of type betaAppLocalizations</param>
		/// <param name="fields_betaLicenseAgreements">the fields to include for returned resources of type betaLicenseAgreements</param>
		/// <param name="fields_endUserLicenseAgreements">the fields to include for returned resources of type endUserLicenseAgreements</param>
		/// <param name="limit_appInfos">maximum number of related appInfos returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_appStoreVersions">maximum number of related appStoreVersions returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_availableTerritories">maximum number of related availableTerritories returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_betaAppLocalizations">maximum number of related betaAppLocalizations returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_betaGroups">maximum number of related betaGroups returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_builds">maximum number of related builds returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_gameCenterEnabledVersions">maximum number of related gameCenterEnabledVersions returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_inAppPurchases">maximum number of related inAppPurchases returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_preReleaseVersions">maximum number of related preReleaseVersions returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_prices">maximum number of related prices returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>List of Apps</returns>
		public async Task<AppsResponse> Apps_get_collectionAsync(
					AppInfoAttributesAppStoreState[] filter_appStoreVersions_appStoreState, 
					Platform[] filter_appStoreVersions_platform, 
					string[] filter_bundleId, 
					string[] filter_name, 
					string[] filter_sku, 
					string[] filter_appStoreVersions, 
					string[] filter_id, 
					string[] exists_gameCenterEnabledVersions, 
					string[] sort, 
					string[] fields_apps, 
					int limit, 
					string[] include, 
					string[] fields_betaGroups, 
					string[] fields_perfPowerMetrics, 
					string[] fields_appInfos, 
					string[] fields_appPreOrders, 
					string[] fields_preReleaseVersions, 
					string[] fields_appPrices, 
					string[] fields_inAppPurchases, 
					string[] fields_betaAppReviewDetails, 
					string[] fields_territories, 
					string[] fields_gameCenterEnabledVersions, 
					string[] fields_appStoreVersions, 
					string[] fields_builds, 
					string[] fields_betaAppLocalizations, 
					string[] fields_betaLicenseAgreements, 
					string[] fields_endUserLicenseAgreements, 
					int limit_appInfos, 
					int limit_appStoreVersions, 
					int limit_availableTerritories, 
					int limit_betaAppLocalizations, 
					int limit_betaGroups, 
					int limit_builds, 
					int limit_gameCenterEnabledVersions, 
					int limit_inAppPurchases, 
					int limit_preReleaseVersions, 
					int limit_prices, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps?"+string.Join("&", filter_appStoreVersions_appStoreState.Select(z => $"filter[appStoreVersions.appStoreState]={z}"))+"&"+string.Join("&", filter_appStoreVersions_platform.Select(z => $"filter[appStoreVersions.platform]={z}"))+"&"+string.Join("&", filter_bundleId.Select(z => $"filter[bundleId]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_name.Select(z => $"filter[name]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_sku.Select(z => $"filter[sku]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_appStoreVersions.Select(z => $"filter[appStoreVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_id.Select(z => $"filter[id]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", exists_gameCenterEnabledVersions.Select(z => $"exists[gameCenterEnabledVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sort.Select(z => $"sort={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaGroups.Select(z => $"fields[betaGroups]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_perfPowerMetrics.Select(z => $"fields[perfPowerMetrics]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appInfos.Select(z => $"fields[appInfos]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appPreOrders.Select(z => $"fields[appPreOrders]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_preReleaseVersions.Select(z => $"fields[preReleaseVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appPrices.Select(z => $"fields[appPrices]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_inAppPurchases.Select(z => $"fields[inAppPurchases]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaAppReviewDetails.Select(z => $"fields[betaAppReviewDetails]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_territories.Select(z => $"fields[territories]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_gameCenterEnabledVersions.Select(z => $"fields[gameCenterEnabledVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appStoreVersions.Select(z => $"fields[appStoreVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaAppLocalizations.Select(z => $"fields[betaAppLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaLicenseAgreements.Select(z => $"fields[betaLicenseAgreements]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_endUserLicenseAgreements.Select(z => $"fields[endUserLicenseAgreements]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[appInfos]="+limit_appInfos+"&limit[appStoreVersions]="+limit_appStoreVersions+"&limit[availableTerritories]="+limit_availableTerritories+"&limit[betaAppLocalizations]="+limit_betaAppLocalizations+"&limit[betaGroups]="+limit_betaGroups+"&limit[builds]="+limit_builds+"&limit[gameCenterEnabledVersions]="+limit_gameCenterEnabledVersions+"&limit[inAppPurchases]="+limit_inAppPurchases+"&limit[preReleaseVersions]="+limit_preReleaseVersions+"&limit[prices]="+limit_prices;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_get_instance v1/apps/{id}
		/// </summary>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_betaGroups">the fields to include for returned resources of type betaGroups</param>
		/// <param name="fields_perfPowerMetrics">the fields to include for returned resources of type perfPowerMetrics</param>
		/// <param name="fields_appInfos">the fields to include for returned resources of type appInfos</param>
		/// <param name="fields_appPreOrders">the fields to include for returned resources of type appPreOrders</param>
		/// <param name="fields_preReleaseVersions">the fields to include for returned resources of type preReleaseVersions</param>
		/// <param name="fields_appPrices">the fields to include for returned resources of type appPrices</param>
		/// <param name="fields_inAppPurchases">the fields to include for returned resources of type inAppPurchases</param>
		/// <param name="fields_betaAppReviewDetails">the fields to include for returned resources of type betaAppReviewDetails</param>
		/// <param name="fields_territories">the fields to include for returned resources of type territories</param>
		/// <param name="fields_gameCenterEnabledVersions">the fields to include for returned resources of type gameCenterEnabledVersions</param>
		/// <param name="fields_appStoreVersions">the fields to include for returned resources of type appStoreVersions</param>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <param name="fields_betaAppLocalizations">the fields to include for returned resources of type betaAppLocalizations</param>
		/// <param name="fields_betaLicenseAgreements">the fields to include for returned resources of type betaLicenseAgreements</param>
		/// <param name="fields_endUserLicenseAgreements">the fields to include for returned resources of type endUserLicenseAgreements</param>
		/// <param name="limit_appInfos">maximum number of related appInfos returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_appStoreVersions">maximum number of related appStoreVersions returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_availableTerritories">maximum number of related availableTerritories returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_betaAppLocalizations">maximum number of related betaAppLocalizations returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_betaGroups">maximum number of related betaGroups returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_builds">maximum number of related builds returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_gameCenterEnabledVersions">maximum number of related gameCenterEnabledVersions returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_inAppPurchases">maximum number of related inAppPurchases returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_preReleaseVersions">maximum number of related preReleaseVersions returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_prices">maximum number of related prices returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>Single App</returns>
		public async Task<AppResponse> Apps_get_instanceAsync(
					string[] fields_apps, 
					string[] include, 
					string[] fields_betaGroups, 
					string[] fields_perfPowerMetrics, 
					string[] fields_appInfos, 
					string[] fields_appPreOrders, 
					string[] fields_preReleaseVersions, 
					string[] fields_appPrices, 
					string[] fields_inAppPurchases, 
					string[] fields_betaAppReviewDetails, 
					string[] fields_territories, 
					string[] fields_gameCenterEnabledVersions, 
					string[] fields_appStoreVersions, 
					string[] fields_builds, 
					string[] fields_betaAppLocalizations, 
					string[] fields_betaLicenseAgreements, 
					string[] fields_endUserLicenseAgreements, 
					int limit_appInfos, 
					int limit_appStoreVersions, 
					int limit_availableTerritories, 
					int limit_betaAppLocalizations, 
					int limit_betaGroups, 
					int limit_builds, 
					int limit_gameCenterEnabledVersions, 
					int limit_inAppPurchases, 
					int limit_preReleaseVersions, 
					int limit_prices, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{id}?"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaGroups.Select(z => $"fields[betaGroups]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_perfPowerMetrics.Select(z => $"fields[perfPowerMetrics]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appInfos.Select(z => $"fields[appInfos]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appPreOrders.Select(z => $"fields[appPreOrders]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_preReleaseVersions.Select(z => $"fields[preReleaseVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appPrices.Select(z => $"fields[appPrices]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_inAppPurchases.Select(z => $"fields[inAppPurchases]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaAppReviewDetails.Select(z => $"fields[betaAppReviewDetails]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_territories.Select(z => $"fields[territories]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_gameCenterEnabledVersions.Select(z => $"fields[gameCenterEnabledVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appStoreVersions.Select(z => $"fields[appStoreVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaAppLocalizations.Select(z => $"fields[betaAppLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaLicenseAgreements.Select(z => $"fields[betaLicenseAgreements]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_endUserLicenseAgreements.Select(z => $"fields[endUserLicenseAgreements]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[appInfos]="+limit_appInfos+"&limit[appStoreVersions]="+limit_appStoreVersions+"&limit[availableTerritories]="+limit_availableTerritories+"&limit[betaAppLocalizations]="+limit_betaAppLocalizations+"&limit[betaGroups]="+limit_betaGroups+"&limit[builds]="+limit_builds+"&limit[gameCenterEnabledVersions]="+limit_gameCenterEnabledVersions+"&limit[inAppPurchases]="+limit_inAppPurchases+"&limit[preReleaseVersions]="+limit_preReleaseVersions+"&limit[prices]="+limit_prices;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_update_instance v1/apps/{id}
		/// </summary>
		/// <param name="requestBody">App representation</param>
		/// <returns>Single App</returns>
		public async Task<AppResponse> Apps_update_instanceAsync(AppUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_appInfos_get_to_many_related v1/apps/{id}/appInfos
		/// </summary>
		/// <param name="fields_ageRatingDeclarations">the fields to include for returned resources of type ageRatingDeclarations</param>
		/// <param name="fields_appInfos">the fields to include for returned resources of type appInfos</param>
		/// <param name="fields_appCategories">the fields to include for returned resources of type appCategories</param>
		/// <param name="fields_appInfoLocalizations">the fields to include for returned resources of type appInfoLocalizations</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>List of related resources</returns>
		public async Task<AppInfosResponse> Apps_appInfos_get_to_many_relatedAsync(string[] fields_ageRatingDeclarations, string[] fields_appInfos, string[] fields_appCategories, string[] fields_appInfoLocalizations, string[] fields_apps, int limit, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{id}/appInfos?"+string.Join("&", fields_ageRatingDeclarations.Select(z => $"fields[ageRatingDeclarations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appInfos.Select(z => $"fields[appInfos]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appCategories.Select(z => $"fields[appCategories]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appInfoLocalizations.Select(z => $"fields[appInfoLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppInfosResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_appStoreVersions_get_to_many_related v1/apps/{id}/appStoreVersions
		/// </summary>
		/// <param name="filter_appStoreState">filter by attribute 'appStoreState'</param>
		/// <param name="filter_platform">filter by attribute 'platform'</param>
		/// <param name="filter_versionString">filter by attribute 'versionString'</param>
		/// <param name="filter_id">filter by id(s)</param>
		/// <param name="fields_idfaDeclarations">the fields to include for returned resources of type idfaDeclarations</param>
		/// <param name="fields_appStoreVersionLocalizations">the fields to include for returned resources of type appStoreVersionLocalizations</param>
		/// <param name="fields_routingAppCoverages">the fields to include for returned resources of type routingAppCoverages</param>
		/// <param name="fields_appStoreVersionPhasedReleases">the fields to include for returned resources of type appStoreVersionPhasedReleases</param>
		/// <param name="fields_ageRatingDeclarations">the fields to include for returned resources of type ageRatingDeclarations</param>
		/// <param name="fields_appStoreReviewDetails">the fields to include for returned resources of type appStoreReviewDetails</param>
		/// <param name="fields_appStoreVersions">the fields to include for returned resources of type appStoreVersions</param>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <param name="fields_appStoreVersionSubmissions">the fields to include for returned resources of type appStoreVersionSubmissions</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>List of related resources</returns>
		public async Task<AppStoreVersionsResponse> Apps_appStoreVersions_get_to_many_relatedAsync(
					AppInfoAttributesAppStoreState[] filter_appStoreState, 
					Platform[] filter_platform, 
					string[] filter_versionString, 
					string[] filter_id, 
					string[] fields_idfaDeclarations, 
					string[] fields_appStoreVersionLocalizations, 
					string[] fields_routingAppCoverages, 
					string[] fields_appStoreVersionPhasedReleases, 
					string[] fields_ageRatingDeclarations, 
					string[] fields_appStoreReviewDetails, 
					string[] fields_appStoreVersions, 
					string[] fields_builds, 
					string[] fields_appStoreVersionSubmissions, 
					string[] fields_apps, 
					int limit, 
					string[] include, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{id}/appStoreVersions?"+string.Join("&", filter_appStoreState.Select(z => $"filter[appStoreState]={z}"))+"&"+string.Join("&", filter_platform.Select(z => $"filter[platform]={z}"))+"&"+string.Join("&", filter_versionString.Select(z => $"filter[versionString]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_id.Select(z => $"filter[id]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_idfaDeclarations.Select(z => $"fields[idfaDeclarations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appStoreVersionLocalizations.Select(z => $"fields[appStoreVersionLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_routingAppCoverages.Select(z => $"fields[routingAppCoverages]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appStoreVersionPhasedReleases.Select(z => $"fields[appStoreVersionPhasedReleases]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_ageRatingDeclarations.Select(z => $"fields[ageRatingDeclarations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appStoreReviewDetails.Select(z => $"fields[appStoreReviewDetails]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appStoreVersions.Select(z => $"fields[appStoreVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appStoreVersionSubmissions.Select(z => $"fields[appStoreVersionSubmissions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppStoreVersionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_availableTerritories_get_to_many_related v1/apps/{id}/availableTerritories
		/// </summary>
		/// <param name="fields_territories">the fields to include for returned resources of type territories</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<TerritoriesResponse> Apps_availableTerritories_get_to_many_relatedAsync(string[] fields_territories, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{id}/availableTerritories?"+string.Join("&", fields_territories.Select(z => $"fields[territories]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TerritoriesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_betaAppLocalizations_get_to_many_related v1/apps/{id}/betaAppLocalizations
		/// </summary>
		/// <param name="fields_betaAppLocalizations">the fields to include for returned resources of type betaAppLocalizations</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<BetaAppLocalizationsResponse> Apps_betaAppLocalizations_get_to_many_relatedAsync(string[] fields_betaAppLocalizations, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{id}/betaAppLocalizations?"+string.Join("&", fields_betaAppLocalizations.Select(z => $"fields[betaAppLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaAppLocalizationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_betaAppReviewDetail_get_to_one_related v1/apps/{id}/betaAppReviewDetail
		/// </summary>
		/// <param name="fields_betaAppReviewDetails">the fields to include for returned resources of type betaAppReviewDetails</param>
		/// <returns>Related resource</returns>
		public async Task<BetaAppReviewDetailResponse> Apps_betaAppReviewDetail_get_to_one_relatedAsync(string[] fields_betaAppReviewDetails, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{id}/betaAppReviewDetail?"+string.Join("&", fields_betaAppReviewDetails.Select(z => $"fields[betaAppReviewDetails]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaAppReviewDetailResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_betaGroups_get_to_many_related v1/apps/{id}/betaGroups
		/// </summary>
		/// <param name="fields_betaGroups">the fields to include for returned resources of type betaGroups</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<BetaGroupsResponse> Apps_betaGroups_get_to_many_relatedAsync(string[] fields_betaGroups, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{id}/betaGroups?"+string.Join("&", fields_betaGroups.Select(z => $"fields[betaGroups]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaGroupsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_betaLicenseAgreement_get_to_one_related v1/apps/{id}/betaLicenseAgreement
		/// </summary>
		/// <param name="fields_betaLicenseAgreements">the fields to include for returned resources of type betaLicenseAgreements</param>
		/// <returns>Related resource</returns>
		public async Task<BetaLicenseAgreementResponse> Apps_betaLicenseAgreement_get_to_one_relatedAsync(string[] fields_betaLicenseAgreements, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{id}/betaLicenseAgreement?"+string.Join("&", fields_betaLicenseAgreements.Select(z => $"fields[betaLicenseAgreements]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaLicenseAgreementResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_builds_get_to_many_related v1/apps/{id}/builds
		/// </summary>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<BuildsResponse> Apps_builds_get_to_many_relatedAsync(string[] fields_builds, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{id}/builds?"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BuildsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_endUserLicenseAgreement_get_to_one_related v1/apps/{id}/endUserLicenseAgreement
		/// </summary>
		/// <param name="fields_endUserLicenseAgreements">the fields to include for returned resources of type endUserLicenseAgreements</param>
		/// <returns>Related resource</returns>
		public async Task<EndUserLicenseAgreementResponse> Apps_endUserLicenseAgreement_get_to_one_relatedAsync(string[] fields_endUserLicenseAgreements, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{id}/endUserLicenseAgreement?"+string.Join("&", fields_endUserLicenseAgreements.Select(z => $"fields[endUserLicenseAgreements]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<EndUserLicenseAgreementResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_gameCenterEnabledVersions_get_to_many_related v1/apps/{id}/gameCenterEnabledVersions
		/// </summary>
		/// <param name="filter_platform">filter by attribute 'platform'</param>
		/// <param name="filter_versionString">filter by attribute 'versionString'</param>
		/// <param name="filter_id">filter by id(s)</param>
		/// <param name="sort">comma-separated list of sort expressions; resources will be sorted as specified</param>
		/// <param name="fields_gameCenterEnabledVersions">the fields to include for returned resources of type gameCenterEnabledVersions</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>List of related resources</returns>
		public async Task<GameCenterEnabledVersionsResponse> Apps_gameCenterEnabledVersions_get_to_many_relatedAsync(Platform[] filter_platform, string[] filter_versionString, string[] filter_id, string[] sort, string[] fields_gameCenterEnabledVersions, string[] fields_apps, int limit, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{id}/gameCenterEnabledVersions?"+string.Join("&", filter_platform.Select(z => $"filter[platform]={z}"))+"&"+string.Join("&", filter_versionString.Select(z => $"filter[versionString]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_id.Select(z => $"filter[id]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sort.Select(z => $"sort={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_gameCenterEnabledVersions.Select(z => $"fields[gameCenterEnabledVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GameCenterEnabledVersionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_inAppPurchases_get_to_many_related v1/apps/{id}/inAppPurchases
		/// </summary>
		/// <param name="filter_inAppPurchaseType">filter by attribute 'inAppPurchaseType'</param>
		/// <param name="filter_canBeSubmitted">filter by canBeSubmitted</param>
		/// <param name="sort">comma-separated list of sort expressions; resources will be sorted as specified</param>
		/// <param name="fields_inAppPurchases">the fields to include for returned resources of type inAppPurchases</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>List of related resources</returns>
		public async Task<InAppPurchasesResponse> Apps_inAppPurchases_get_to_many_relatedAsync(InAppPurchaseAttributesInAppPurchaseType[] filter_inAppPurchaseType, string[] filter_canBeSubmitted, string[] sort, string[] fields_inAppPurchases, string[] fields_apps, int limit, AppType[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{id}/inAppPurchases?"+string.Join("&", filter_inAppPurchaseType.Select(z => $"filter[inAppPurchaseType]={z}"))+"&"+string.Join("&", filter_canBeSubmitted.Select(z => $"filter[canBeSubmitted]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sort.Select(z => $"sort={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_inAppPurchases.Select(z => $"fields[inAppPurchases]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={z}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<InAppPurchasesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_perfPowerMetrics_get_to_many_related v1/apps/{id}/perfPowerMetrics
		/// </summary>
		/// <param name="filter_deviceType">filter by attribute 'deviceType'</param>
		/// <param name="filter_metricType">filter by attribute 'metricType'</param>
		/// <param name="filter_platform">filter by attribute 'platform'</param>
		/// <returns>List of related resources</returns>
		public async Task<PerfPowerMetricsResponse> Apps_perfPowerMetrics_get_to_many_relatedAsync(string[] filter_deviceType, PerfPowerMetricAttributesMetricType[] filter_metricType, PerfPowerMetricAttributesPlatform[] filter_platform, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{id}/perfPowerMetrics?"+string.Join("&", filter_deviceType.Select(z => $"filter[deviceType]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_metricType.Select(z => $"filter[metricType]={z}"))+"&"+string.Join("&", filter_platform.Select(z => $"filter[platform]={z}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PerfPowerMetricsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_preOrder_get_to_one_related v1/apps/{id}/preOrder
		/// </summary>
		/// <param name="fields_appPreOrders">the fields to include for returned resources of type appPreOrders</param>
		/// <returns>Related resource</returns>
		public async Task<AppPreOrderResponse> Apps_preOrder_get_to_one_relatedAsync(string[] fields_appPreOrders, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{id}/preOrder?"+string.Join("&", fields_appPreOrders.Select(z => $"fields[appPreOrders]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppPreOrderResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_preReleaseVersions_get_to_many_related v1/apps/{id}/preReleaseVersions
		/// </summary>
		/// <param name="fields_preReleaseVersions">the fields to include for returned resources of type preReleaseVersions</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<PreReleaseVersionsResponse> Apps_preReleaseVersions_get_to_many_relatedAsync(string[] fields_preReleaseVersions, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{id}/preReleaseVersions?"+string.Join("&", fields_preReleaseVersions.Select(z => $"fields[preReleaseVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PreReleaseVersionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_prices_get_to_many_related v1/apps/{id}/prices
		/// </summary>
		/// <param name="fields_appPrices">the fields to include for returned resources of type appPrices</param>
		/// <param name="fields_appPriceTiers">the fields to include for returned resources of type appPriceTiers</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>List of related resources</returns>
		public async Task<AppPricesResponse> Apps_prices_get_to_many_relatedAsync(string[] fields_appPrices, string[] fields_appPriceTiers, string[] fields_apps, int limit, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{id}/prices?"+string.Join("&", fields_appPrices.Select(z => $"fields[appPrices]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appPriceTiers.Select(z => $"fields[appPriceTiers]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppPricesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Apps_betaTesters_delete_to_many_relationship v1/apps/{id}/relationships/betaTesters
		/// </summary>
		public async Task Apps_betaTesters_delete_to_many_relationshipAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/apps/{id}/relationships/betaTesters";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaAppLocalizations_get_collection v1/betaAppLocalizations
		/// </summary>
		/// <param name="filter_locale">filter by attribute 'locale'</param>
		/// <param name="filter_app">filter by id(s) of related 'app'</param>
		/// <param name="fields_betaAppLocalizations">the fields to include for returned resources of type betaAppLocalizations</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <returns>List of BetaAppLocalizations</returns>
		public async Task<BetaAppLocalizationsResponse> BetaAppLocalizations_get_collectionAsync(string[] filter_locale, string[] filter_app, string[] fields_betaAppLocalizations, int limit, string[] include, string[] fields_apps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaAppLocalizations?"+string.Join("&", filter_locale.Select(z => $"filter[locale]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_app.Select(z => $"filter[app]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaAppLocalizations.Select(z => $"fields[betaAppLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaAppLocalizationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaAppLocalizations_create_instance v1/betaAppLocalizations
		/// </summary>
		/// <param name="requestBody">BetaAppLocalization representation</param>
		public async Task BetaAppLocalizations_create_instanceAsync(BetaAppLocalizationCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaAppLocalizations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaAppLocalizations_delete_instance v1/betaAppLocalizations/{id}
		/// </summary>
		public async Task BetaAppLocalizations_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaAppLocalizations/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaAppLocalizations_get_instance v1/betaAppLocalizations/{id}
		/// </summary>
		/// <param name="fields_betaAppLocalizations">the fields to include for returned resources of type betaAppLocalizations</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <returns>Single BetaAppLocalization</returns>
		public async Task<BetaAppLocalizationResponse> BetaAppLocalizations_get_instanceAsync(string[] fields_betaAppLocalizations, string[] include, string[] fields_apps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaAppLocalizations/{id}?"+string.Join("&", fields_betaAppLocalizations.Select(z => $"fields[betaAppLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaAppLocalizationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaAppLocalizations_update_instance v1/betaAppLocalizations/{id}
		/// </summary>
		/// <param name="requestBody">BetaAppLocalization representation</param>
		/// <returns>Single BetaAppLocalization</returns>
		public async Task<BetaAppLocalizationResponse> BetaAppLocalizations_update_instanceAsync(BetaAppLocalizationUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaAppLocalizations/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaAppLocalizationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaAppLocalizations_app_get_to_one_related v1/betaAppLocalizations/{id}/app
		/// </summary>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <returns>Related resource</returns>
		public async Task<AppResponse> BetaAppLocalizations_app_get_to_one_relatedAsync(string[] fields_apps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaAppLocalizations/{id}/app?"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaAppReviewDetails_get_collection v1/betaAppReviewDetails
		/// </summary>
		/// <param name="filter_app">filter by id(s) of related 'app'</param>
		/// <param name="fields_betaAppReviewDetails">the fields to include for returned resources of type betaAppReviewDetails</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <returns>List of BetaAppReviewDetails</returns>
		public async Task<BetaAppReviewDetailsResponse> BetaAppReviewDetails_get_collectionAsync(string[] filter_app, string[] fields_betaAppReviewDetails, int limit, string[] include, string[] fields_apps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaAppReviewDetails?"+string.Join("&", filter_app.Select(z => $"filter[app]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaAppReviewDetails.Select(z => $"fields[betaAppReviewDetails]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaAppReviewDetailsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaAppReviewDetails_get_instance v1/betaAppReviewDetails/{id}
		/// </summary>
		/// <param name="fields_betaAppReviewDetails">the fields to include for returned resources of type betaAppReviewDetails</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <returns>Single BetaAppReviewDetail</returns>
		public async Task<BetaAppReviewDetailResponse> BetaAppReviewDetails_get_instanceAsync(string[] fields_betaAppReviewDetails, string[] include, string[] fields_apps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaAppReviewDetails/{id}?"+string.Join("&", fields_betaAppReviewDetails.Select(z => $"fields[betaAppReviewDetails]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaAppReviewDetailResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaAppReviewDetails_update_instance v1/betaAppReviewDetails/{id}
		/// </summary>
		/// <param name="requestBody">BetaAppReviewDetail representation</param>
		/// <returns>Single BetaAppReviewDetail</returns>
		public async Task<BetaAppReviewDetailResponse> BetaAppReviewDetails_update_instanceAsync(BetaAppReviewDetailUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaAppReviewDetails/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaAppReviewDetailResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaAppReviewDetails_app_get_to_one_related v1/betaAppReviewDetails/{id}/app
		/// </summary>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <returns>Related resource</returns>
		public async Task<AppResponse> BetaAppReviewDetails_app_get_to_one_relatedAsync(string[] fields_apps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaAppReviewDetails/{id}/app?"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaAppReviewSubmissions_get_collection v1/betaAppReviewSubmissions
		/// </summary>
		/// <param name="filter_betaReviewState">filter by attribute 'betaReviewState'</param>
		/// <param name="filter_build">filter by id(s) of related 'build'</param>
		/// <param name="fields_betaAppReviewSubmissions">the fields to include for returned resources of type betaAppReviewSubmissions</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <returns>List of BetaAppReviewSubmissions</returns>
		public async Task<BetaAppReviewSubmissionsResponse> BetaAppReviewSubmissions_get_collectionAsync(BetaAppReviewSubmissionAttributesBetaReviewState[] filter_betaReviewState, string[] filter_build, string[] fields_betaAppReviewSubmissions, int limit, string[] include, string[] fields_builds, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaAppReviewSubmissions?"+string.Join("&", filter_betaReviewState.Select(z => $"filter[betaReviewState]={z}"))+"&"+string.Join("&", filter_build.Select(z => $"filter[build]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaAppReviewSubmissions.Select(z => $"fields[betaAppReviewSubmissions]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaAppReviewSubmissionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaAppReviewSubmissions_create_instance v1/betaAppReviewSubmissions
		/// </summary>
		/// <param name="requestBody">BetaAppReviewSubmission representation</param>
		public async Task BetaAppReviewSubmissions_create_instanceAsync(BetaAppReviewSubmissionCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaAppReviewSubmissions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaAppReviewSubmissions_get_instance v1/betaAppReviewSubmissions/{id}
		/// </summary>
		/// <param name="fields_betaAppReviewSubmissions">the fields to include for returned resources of type betaAppReviewSubmissions</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <returns>Single BetaAppReviewSubmission</returns>
		public async Task<BetaAppReviewSubmissionResponse> BetaAppReviewSubmissions_get_instanceAsync(string[] fields_betaAppReviewSubmissions, string[] include, string[] fields_builds, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaAppReviewSubmissions/{id}?"+string.Join("&", fields_betaAppReviewSubmissions.Select(z => $"fields[betaAppReviewSubmissions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaAppReviewSubmissionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaAppReviewSubmissions_build_get_to_one_related v1/betaAppReviewSubmissions/{id}/build
		/// </summary>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <returns>Related resource</returns>
		public async Task<BuildResponse> BetaAppReviewSubmissions_build_get_to_one_relatedAsync(string[] fields_builds, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaAppReviewSubmissions/{id}/build?"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BuildResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaBuildLocalizations_get_collection v1/betaBuildLocalizations
		/// </summary>
		/// <param name="filter_locale">filter by attribute 'locale'</param>
		/// <param name="filter_build">filter by id(s) of related 'build'</param>
		/// <param name="fields_betaBuildLocalizations">the fields to include for returned resources of type betaBuildLocalizations</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <returns>List of BetaBuildLocalizations</returns>
		public async Task<BetaBuildLocalizationsResponse> BetaBuildLocalizations_get_collectionAsync(string[] filter_locale, string[] filter_build, string[] fields_betaBuildLocalizations, int limit, string[] include, string[] fields_builds, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaBuildLocalizations?"+string.Join("&", filter_locale.Select(z => $"filter[locale]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_build.Select(z => $"filter[build]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaBuildLocalizations.Select(z => $"fields[betaBuildLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaBuildLocalizationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaBuildLocalizations_create_instance v1/betaBuildLocalizations
		/// </summary>
		/// <param name="requestBody">BetaBuildLocalization representation</param>
		public async Task BetaBuildLocalizations_create_instanceAsync(BetaBuildLocalizationCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaBuildLocalizations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaBuildLocalizations_delete_instance v1/betaBuildLocalizations/{id}
		/// </summary>
		public async Task BetaBuildLocalizations_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaBuildLocalizations/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaBuildLocalizations_get_instance v1/betaBuildLocalizations/{id}
		/// </summary>
		/// <param name="fields_betaBuildLocalizations">the fields to include for returned resources of type betaBuildLocalizations</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <returns>Single BetaBuildLocalization</returns>
		public async Task<BetaBuildLocalizationResponse> BetaBuildLocalizations_get_instanceAsync(string[] fields_betaBuildLocalizations, string[] include, string[] fields_builds, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaBuildLocalizations/{id}?"+string.Join("&", fields_betaBuildLocalizations.Select(z => $"fields[betaBuildLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaBuildLocalizationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaBuildLocalizations_update_instance v1/betaBuildLocalizations/{id}
		/// </summary>
		/// <param name="requestBody">BetaBuildLocalization representation</param>
		/// <returns>Single BetaBuildLocalization</returns>
		public async Task<BetaBuildLocalizationResponse> BetaBuildLocalizations_update_instanceAsync(BetaBuildLocalizationUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaBuildLocalizations/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaBuildLocalizationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaBuildLocalizations_build_get_to_one_related v1/betaBuildLocalizations/{id}/build
		/// </summary>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <returns>Related resource</returns>
		public async Task<BuildResponse> BetaBuildLocalizations_build_get_to_one_relatedAsync(string[] fields_builds, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaBuildLocalizations/{id}/build?"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BuildResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaGroups_get_collection v1/betaGroups
		/// </summary>
		/// <param name="filter_isInternalGroup">filter by attribute 'isInternalGroup'</param>
		/// <param name="filter_name">filter by attribute 'name'</param>
		/// <param name="filter_publicLink">filter by attribute 'publicLink'</param>
		/// <param name="filter_publicLinkEnabled">filter by attribute 'publicLinkEnabled'</param>
		/// <param name="filter_publicLinkLimitEnabled">filter by attribute 'publicLinkLimitEnabled'</param>
		/// <param name="filter_app">filter by id(s) of related 'app'</param>
		/// <param name="filter_builds">filter by id(s) of related 'builds'</param>
		/// <param name="filter_id">filter by id(s)</param>
		/// <param name="sort">comma-separated list of sort expressions; resources will be sorted as specified</param>
		/// <param name="fields_betaGroups">the fields to include for returned resources of type betaGroups</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <param name="fields_betaTesters">the fields to include for returned resources of type betaTesters</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit_betaTesters">maximum number of related betaTesters returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_builds">maximum number of related builds returned (when they are included)
		/// Maximum: 1000
		// </param>
		/// <returns>List of BetaGroups</returns>
		public async Task<BetaGroupsResponse> BetaGroups_get_collectionAsync(
					string[] filter_isInternalGroup, 
					string[] filter_name, 
					string[] filter_publicLink, 
					string[] filter_publicLinkEnabled, 
					string[] filter_publicLinkLimitEnabled, 
					string[] filter_app, 
					string[] filter_builds, 
					string[] filter_id, 
					string[] sort, 
					string[] fields_betaGroups, 
					int limit, 
					string[] include, 
					string[] fields_builds, 
					string[] fields_betaTesters, 
					string[] fields_apps, 
					int limit_betaTesters, 
					int limit_builds, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaGroups?"+string.Join("&", filter_isInternalGroup.Select(z => $"filter[isInternalGroup]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_name.Select(z => $"filter[name]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_publicLink.Select(z => $"filter[publicLink]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_publicLinkEnabled.Select(z => $"filter[publicLinkEnabled]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_publicLinkLimitEnabled.Select(z => $"filter[publicLinkLimitEnabled]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_app.Select(z => $"filter[app]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_builds.Select(z => $"filter[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_id.Select(z => $"filter[id]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sort.Select(z => $"sort={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaGroups.Select(z => $"fields[betaGroups]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaTesters.Select(z => $"fields[betaTesters]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[betaTesters]="+limit_betaTesters+"&limit[builds]="+limit_builds;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaGroupsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaGroups_create_instance v1/betaGroups
		/// </summary>
		/// <param name="requestBody">BetaGroup representation</param>
		public async Task BetaGroups_create_instanceAsync(BetaGroupCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaGroups";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaGroups_delete_instance v1/betaGroups/{id}
		/// </summary>
		public async Task BetaGroups_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaGroups/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaGroups_get_instance v1/betaGroups/{id}
		/// </summary>
		/// <param name="fields_betaGroups">the fields to include for returned resources of type betaGroups</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <param name="fields_betaTesters">the fields to include for returned resources of type betaTesters</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit_betaTesters">maximum number of related betaTesters returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_builds">maximum number of related builds returned (when they are included)
		/// Maximum: 1000
		// </param>
		/// <returns>Single BetaGroup</returns>
		public async Task<BetaGroupResponse> BetaGroups_get_instanceAsync(string[] fields_betaGroups, string[] include, string[] fields_builds, string[] fields_betaTesters, string[] fields_apps, int limit_betaTesters, int limit_builds, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaGroups/{id}?"+string.Join("&", fields_betaGroups.Select(z => $"fields[betaGroups]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaTesters.Select(z => $"fields[betaTesters]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[betaTesters]="+limit_betaTesters+"&limit[builds]="+limit_builds;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaGroupResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaGroups_update_instance v1/betaGroups/{id}
		/// </summary>
		/// <param name="requestBody">BetaGroup representation</param>
		/// <returns>Single BetaGroup</returns>
		public async Task<BetaGroupResponse> BetaGroups_update_instanceAsync(BetaGroupUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaGroups/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaGroupResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaGroups_app_get_to_one_related v1/betaGroups/{id}/app
		/// </summary>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <returns>Related resource</returns>
		public async Task<AppResponse> BetaGroups_app_get_to_one_relatedAsync(string[] fields_apps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaGroups/{id}/app?"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaGroups_betaTesters_get_to_many_related v1/betaGroups/{id}/betaTesters
		/// </summary>
		/// <param name="fields_betaTesters">the fields to include for returned resources of type betaTesters</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<BetaTestersResponse> BetaGroups_betaTesters_get_to_many_relatedAsync(string[] fields_betaTesters, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaGroups/{id}/betaTesters?"+string.Join("&", fields_betaTesters.Select(z => $"fields[betaTesters]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaTestersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaGroups_builds_get_to_many_related v1/betaGroups/{id}/builds
		/// </summary>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<BuildsResponse> BetaGroups_builds_get_to_many_relatedAsync(string[] fields_builds, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaGroups/{id}/builds?"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BuildsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaGroups_betaTesters_delete_to_many_relationship v1/betaGroups/{id}/relationships/betaTesters
		/// </summary>
		public async Task BetaGroups_betaTesters_delete_to_many_relationshipAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaGroups/{id}/relationships/betaTesters";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaGroups_betaTesters_get_to_many_relationship v1/betaGroups/{id}/relationships/betaTesters
		/// </summary>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related linkages</returns>
		public async Task<BetaGroupBetaTestersLinkagesResponse> BetaGroups_betaTesters_get_to_many_relationshipAsync(int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaGroups/{id}/relationships/betaTesters?limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaGroupBetaTestersLinkagesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaGroups_betaTesters_create_to_many_relationship v1/betaGroups/{id}/relationships/betaTesters
		/// </summary>
		/// <param name="requestBody">List of related linkages</param>
		public async Task BetaGroups_betaTesters_create_to_many_relationshipAsync(BetaGroupBetaTestersLinkagesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaGroups/{id}/relationships/betaTesters";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaGroups_builds_delete_to_many_relationship v1/betaGroups/{id}/relationships/builds
		/// </summary>
		public async Task BetaGroups_builds_delete_to_many_relationshipAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaGroups/{id}/relationships/builds";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaGroups_builds_get_to_many_relationship v1/betaGroups/{id}/relationships/builds
		/// </summary>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related linkages</returns>
		public async Task<BetaGroupBuildsLinkagesResponse> BetaGroups_builds_get_to_many_relationshipAsync(int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaGroups/{id}/relationships/builds?limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaGroupBuildsLinkagesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaGroups_builds_create_to_many_relationship v1/betaGroups/{id}/relationships/builds
		/// </summary>
		/// <param name="requestBody">List of related linkages</param>
		public async Task BetaGroups_builds_create_to_many_relationshipAsync(BetaGroupBuildsLinkagesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaGroups/{id}/relationships/builds";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaLicenseAgreements_get_collection v1/betaLicenseAgreements
		/// </summary>
		/// <param name="filter_app">filter by id(s) of related 'app'</param>
		/// <param name="fields_betaLicenseAgreements">the fields to include for returned resources of type betaLicenseAgreements</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <returns>List of BetaLicenseAgreements</returns>
		public async Task<BetaLicenseAgreementsResponse> BetaLicenseAgreements_get_collectionAsync(string[] filter_app, string[] fields_betaLicenseAgreements, int limit, string[] include, string[] fields_apps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaLicenseAgreements?"+string.Join("&", filter_app.Select(z => $"filter[app]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaLicenseAgreements.Select(z => $"fields[betaLicenseAgreements]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaLicenseAgreementsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaLicenseAgreements_get_instance v1/betaLicenseAgreements/{id}
		/// </summary>
		/// <param name="fields_betaLicenseAgreements">the fields to include for returned resources of type betaLicenseAgreements</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <returns>Single BetaLicenseAgreement</returns>
		public async Task<BetaLicenseAgreementResponse> BetaLicenseAgreements_get_instanceAsync(string[] fields_betaLicenseAgreements, string[] include, string[] fields_apps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaLicenseAgreements/{id}?"+string.Join("&", fields_betaLicenseAgreements.Select(z => $"fields[betaLicenseAgreements]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaLicenseAgreementResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaLicenseAgreements_update_instance v1/betaLicenseAgreements/{id}
		/// </summary>
		/// <param name="requestBody">BetaLicenseAgreement representation</param>
		/// <returns>Single BetaLicenseAgreement</returns>
		public async Task<BetaLicenseAgreementResponse> BetaLicenseAgreements_update_instanceAsync(BetaLicenseAgreementUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaLicenseAgreements/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaLicenseAgreementResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaLicenseAgreements_app_get_to_one_related v1/betaLicenseAgreements/{id}/app
		/// </summary>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <returns>Related resource</returns>
		public async Task<AppResponse> BetaLicenseAgreements_app_get_to_one_relatedAsync(string[] fields_apps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaLicenseAgreements/{id}/app?"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaTesterInvitations_create_instance v1/betaTesterInvitations
		/// </summary>
		/// <param name="requestBody">BetaTesterInvitation representation</param>
		public async Task BetaTesterInvitations_create_instanceAsync(BetaTesterInvitationCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaTesterInvitations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaTesters_get_collection v1/betaTesters
		/// </summary>
		/// <param name="filter_email">filter by attribute 'email'</param>
		/// <param name="filter_firstName">filter by attribute 'firstName'</param>
		/// <param name="filter_inviteType">filter by attribute 'inviteType'</param>
		/// <param name="filter_lastName">filter by attribute 'lastName'</param>
		/// <param name="filter_apps">filter by id(s) of related 'apps'</param>
		/// <param name="filter_betaGroups">filter by id(s) of related 'betaGroups'</param>
		/// <param name="filter_builds">filter by id(s) of related 'builds'</param>
		/// <param name="sort">comma-separated list of sort expressions; resources will be sorted as specified</param>
		/// <param name="fields_betaTesters">the fields to include for returned resources of type betaTesters</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_betaGroups">the fields to include for returned resources of type betaGroups</param>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit_apps">maximum number of related apps returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_betaGroups">maximum number of related betaGroups returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_builds">maximum number of related builds returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>List of BetaTesters</returns>
		public async Task<BetaTestersResponse> BetaTesters_get_collectionAsync(
					string[] filter_email, 
					string[] filter_firstName, 
					BetaInviteType[] filter_inviteType, 
					string[] filter_lastName, 
					string[] filter_apps, 
					string[] filter_betaGroups, 
					string[] filter_builds, 
					string[] sort, 
					string[] fields_betaTesters, 
					int limit, 
					string[] include, 
					string[] fields_betaGroups, 
					string[] fields_builds, 
					string[] fields_apps, 
					int limit_apps, 
					int limit_betaGroups, 
					int limit_builds, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaTesters?"+string.Join("&", filter_email.Select(z => $"filter[email]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_firstName.Select(z => $"filter[firstName]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_inviteType.Select(z => $"filter[inviteType]={z}"))+"&"+string.Join("&", filter_lastName.Select(z => $"filter[lastName]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_apps.Select(z => $"filter[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_betaGroups.Select(z => $"filter[betaGroups]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_builds.Select(z => $"filter[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sort.Select(z => $"sort={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaTesters.Select(z => $"fields[betaTesters]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaGroups.Select(z => $"fields[betaGroups]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[apps]="+limit_apps+"&limit[betaGroups]="+limit_betaGroups+"&limit[builds]="+limit_builds;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaTestersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaTesters_create_instance v1/betaTesters
		/// </summary>
		/// <param name="requestBody">BetaTester representation</param>
		public async Task BetaTesters_create_instanceAsync(BetaTesterCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaTesters";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaTesters_delete_instance v1/betaTesters/{id}
		/// </summary>
		public async Task BetaTesters_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaTesters/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaTesters_get_instance v1/betaTesters/{id}
		/// </summary>
		/// <param name="fields_betaTesters">the fields to include for returned resources of type betaTesters</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_betaGroups">the fields to include for returned resources of type betaGroups</param>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit_apps">maximum number of related apps returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_betaGroups">maximum number of related betaGroups returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_builds">maximum number of related builds returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>Single BetaTester</returns>
		public async Task<BetaTesterResponse> BetaTesters_get_instanceAsync(string[] fields_betaTesters, string[] include, string[] fields_betaGroups, string[] fields_builds, string[] fields_apps, int limit_apps, int limit_betaGroups, int limit_builds, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaTesters/{id}?"+string.Join("&", fields_betaTesters.Select(z => $"fields[betaTesters]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaGroups.Select(z => $"fields[betaGroups]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[apps]="+limit_apps+"&limit[betaGroups]="+limit_betaGroups+"&limit[builds]="+limit_builds;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaTesterResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaTesters_apps_get_to_many_related v1/betaTesters/{id}/apps
		/// </summary>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<AppsResponse> BetaTesters_apps_get_to_many_relatedAsync(string[] fields_apps, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaTesters/{id}/apps?"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaTesters_betaGroups_get_to_many_related v1/betaTesters/{id}/betaGroups
		/// </summary>
		/// <param name="fields_betaGroups">the fields to include for returned resources of type betaGroups</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<BetaGroupsResponse> BetaTesters_betaGroups_get_to_many_relatedAsync(string[] fields_betaGroups, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaTesters/{id}/betaGroups?"+string.Join("&", fields_betaGroups.Select(z => $"fields[betaGroups]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaGroupsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaTesters_builds_get_to_many_related v1/betaTesters/{id}/builds
		/// </summary>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<BuildsResponse> BetaTesters_builds_get_to_many_relatedAsync(string[] fields_builds, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaTesters/{id}/builds?"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BuildsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaTesters_apps_delete_to_many_relationship v1/betaTesters/{id}/relationships/apps
		/// </summary>
		public async Task BetaTesters_apps_delete_to_many_relationshipAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaTesters/{id}/relationships/apps";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaTesters_apps_get_to_many_relationship v1/betaTesters/{id}/relationships/apps
		/// </summary>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related linkages</returns>
		public async Task<BetaTesterAppsLinkagesResponse> BetaTesters_apps_get_to_many_relationshipAsync(int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaTesters/{id}/relationships/apps?limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaTesterAppsLinkagesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaTesters_betaGroups_delete_to_many_relationship v1/betaTesters/{id}/relationships/betaGroups
		/// </summary>
		public async Task BetaTesters_betaGroups_delete_to_many_relationshipAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaTesters/{id}/relationships/betaGroups";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaTesters_betaGroups_get_to_many_relationship v1/betaTesters/{id}/relationships/betaGroups
		/// </summary>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related linkages</returns>
		public async Task<BetaTesterBetaGroupsLinkagesResponse> BetaTesters_betaGroups_get_to_many_relationshipAsync(int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaTesters/{id}/relationships/betaGroups?limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaTesterBetaGroupsLinkagesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaTesters_betaGroups_create_to_many_relationship v1/betaTesters/{id}/relationships/betaGroups
		/// </summary>
		/// <param name="requestBody">List of related linkages</param>
		public async Task BetaTesters_betaGroups_create_to_many_relationshipAsync(BetaTesterBetaGroupsLinkagesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaTesters/{id}/relationships/betaGroups";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaTesters_builds_delete_to_many_relationship v1/betaTesters/{id}/relationships/builds
		/// </summary>
		public async Task BetaTesters_builds_delete_to_many_relationshipAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaTesters/{id}/relationships/builds";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaTesters_builds_get_to_many_relationship v1/betaTesters/{id}/relationships/builds
		/// </summary>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related linkages</returns>
		public async Task<BetaTesterBuildsLinkagesResponse> BetaTesters_builds_get_to_many_relationshipAsync(int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaTesters/{id}/relationships/builds?limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaTesterBuildsLinkagesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BetaTesters_builds_create_to_many_relationship v1/betaTesters/{id}/relationships/builds
		/// </summary>
		/// <param name="requestBody">List of related linkages</param>
		public async Task BetaTesters_builds_create_to_many_relationshipAsync(BetaTesterBuildsLinkagesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/betaTesters/{id}/relationships/builds";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BuildBetaDetails_get_collection v1/buildBetaDetails
		/// </summary>
		/// <param name="filter_build">filter by id(s) of related 'build'</param>
		/// <param name="filter_id">filter by id(s)</param>
		/// <param name="fields_buildBetaDetails">the fields to include for returned resources of type buildBetaDetails</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <returns>List of BuildBetaDetails</returns>
		public async Task<BuildBetaDetailsResponse> BuildBetaDetails_get_collectionAsync(string[] filter_build, string[] filter_id, string[] fields_buildBetaDetails, int limit, string[] include, string[] fields_builds, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/buildBetaDetails?"+string.Join("&", filter_build.Select(z => $"filter[build]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_id.Select(z => $"filter[id]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_buildBetaDetails.Select(z => $"fields[buildBetaDetails]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BuildBetaDetailsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BuildBetaDetails_get_instance v1/buildBetaDetails/{id}
		/// </summary>
		/// <param name="fields_buildBetaDetails">the fields to include for returned resources of type buildBetaDetails</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <returns>Single BuildBetaDetail</returns>
		public async Task<BuildBetaDetailResponse> BuildBetaDetails_get_instanceAsync(string[] fields_buildBetaDetails, string[] include, string[] fields_builds, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/buildBetaDetails/{id}?"+string.Join("&", fields_buildBetaDetails.Select(z => $"fields[buildBetaDetails]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BuildBetaDetailResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BuildBetaDetails_update_instance v1/buildBetaDetails/{id}
		/// </summary>
		/// <param name="requestBody">BuildBetaDetail representation</param>
		/// <returns>Single BuildBetaDetail</returns>
		public async Task<BuildBetaDetailResponse> BuildBetaDetails_update_instanceAsync(BuildBetaDetailUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/buildBetaDetails/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BuildBetaDetailResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BuildBetaDetails_build_get_to_one_related v1/buildBetaDetails/{id}/build
		/// </summary>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <returns>Related resource</returns>
		public async Task<BuildResponse> BuildBetaDetails_build_get_to_one_relatedAsync(string[] fields_builds, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/buildBetaDetails/{id}/build?"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BuildResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BuildBetaNotifications_create_instance v1/buildBetaNotifications
		/// </summary>
		/// <param name="requestBody">BuildBetaNotification representation</param>
		public async Task BuildBetaNotifications_create_instanceAsync(BuildBetaNotificationCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/buildBetaNotifications";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_get_collection v1/builds
		/// </summary>
		/// <param name="filter_betaAppReviewSubmission_betaReviewState">filter by attribute 'betaAppReviewSubmission.betaReviewState'</param>
		/// <param name="filter_expired">filter by attribute 'expired'</param>
		/// <param name="filter_preReleaseVersion_platform">filter by attribute 'preReleaseVersion.platform'</param>
		/// <param name="filter_preReleaseVersion_version">filter by attribute 'preReleaseVersion.version'</param>
		/// <param name="filter_processingState">filter by attribute 'processingState'</param>
		/// <param name="filter_usesNonExemptEncryption">filter by attribute 'usesNonExemptEncryption'</param>
		/// <param name="filter_version">filter by attribute 'version'</param>
		/// <param name="filter_app">filter by id(s) of related 'app'</param>
		/// <param name="filter_appStoreVersion">filter by id(s) of related 'appStoreVersion'</param>
		/// <param name="filter_betaGroups">filter by id(s) of related 'betaGroups'</param>
		/// <param name="filter_preReleaseVersion">filter by id(s) of related 'preReleaseVersion'</param>
		/// <param name="filter_id">filter by id(s)</param>
		/// <param name="sort">comma-separated list of sort expressions; resources will be sorted as specified</param>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_appEncryptionDeclarations">the fields to include for returned resources of type appEncryptionDeclarations</param>
		/// <param name="fields_betaAppReviewSubmissions">the fields to include for returned resources of type betaAppReviewSubmissions</param>
		/// <param name="fields_buildBetaDetails">the fields to include for returned resources of type buildBetaDetails</param>
		/// <param name="fields_buildIcons">the fields to include for returned resources of type buildIcons</param>
		/// <param name="fields_perfPowerMetrics">the fields to include for returned resources of type perfPowerMetrics</param>
		/// <param name="fields_preReleaseVersions">the fields to include for returned resources of type preReleaseVersions</param>
		/// <param name="fields_appStoreVersions">the fields to include for returned resources of type appStoreVersions</param>
		/// <param name="fields_diagnosticSignatures">the fields to include for returned resources of type diagnosticSignatures</param>
		/// <param name="fields_betaTesters">the fields to include for returned resources of type betaTesters</param>
		/// <param name="fields_betaBuildLocalizations">the fields to include for returned resources of type betaBuildLocalizations</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit_betaBuildLocalizations">maximum number of related betaBuildLocalizations returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_icons">maximum number of related icons returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_individualTesters">maximum number of related individualTesters returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>List of Builds</returns>
		public async Task<BuildsResponse> Builds_get_collectionAsync(
					BetaAppReviewSubmissionAttributesBetaReviewState[] filter_betaAppReviewSubmission_betaReviewState, 
					string[] filter_expired, 
					Platform[] filter_preReleaseVersion_platform, 
					string[] filter_preReleaseVersion_version, 
					BuildAttributesProcessingState[] filter_processingState, 
					string[] filter_usesNonExemptEncryption, 
					string[] filter_version, 
					string[] filter_app, 
					string[] filter_appStoreVersion, 
					string[] filter_betaGroups, 
					string[] filter_preReleaseVersion, 
					string[] filter_id, 
					string[] sort, 
					string[] fields_builds, 
					int limit, 
					string[] include, 
					string[] fields_appEncryptionDeclarations, 
					string[] fields_betaAppReviewSubmissions, 
					string[] fields_buildBetaDetails, 
					string[] fields_buildIcons, 
					string[] fields_perfPowerMetrics, 
					string[] fields_preReleaseVersions, 
					string[] fields_appStoreVersions, 
					string[] fields_diagnosticSignatures, 
					string[] fields_betaTesters, 
					string[] fields_betaBuildLocalizations, 
					string[] fields_apps, 
					int limit_betaBuildLocalizations, 
					int limit_icons, 
					int limit_individualTesters, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds?"+string.Join("&", filter_betaAppReviewSubmission_betaReviewState.Select(z => $"filter[betaAppReviewSubmission.betaReviewState]={z}"))+"&"+string.Join("&", filter_expired.Select(z => $"filter[expired]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_preReleaseVersion_platform.Select(z => $"filter[preReleaseVersion.platform]={z}"))+"&"+string.Join("&", filter_preReleaseVersion_version.Select(z => $"filter[preReleaseVersion.version]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_processingState.Select(z => $"filter[processingState]={z}"))+"&"+string.Join("&", filter_usesNonExemptEncryption.Select(z => $"filter[usesNonExemptEncryption]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_version.Select(z => $"filter[version]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_app.Select(z => $"filter[app]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_appStoreVersion.Select(z => $"filter[appStoreVersion]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_betaGroups.Select(z => $"filter[betaGroups]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_preReleaseVersion.Select(z => $"filter[preReleaseVersion]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_id.Select(z => $"filter[id]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sort.Select(z => $"sort={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appEncryptionDeclarations.Select(z => $"fields[appEncryptionDeclarations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaAppReviewSubmissions.Select(z => $"fields[betaAppReviewSubmissions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_buildBetaDetails.Select(z => $"fields[buildBetaDetails]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_buildIcons.Select(z => $"fields[buildIcons]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_perfPowerMetrics.Select(z => $"fields[perfPowerMetrics]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_preReleaseVersions.Select(z => $"fields[preReleaseVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appStoreVersions.Select(z => $"fields[appStoreVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_diagnosticSignatures.Select(z => $"fields[diagnosticSignatures]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaTesters.Select(z => $"fields[betaTesters]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaBuildLocalizations.Select(z => $"fields[betaBuildLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[betaBuildLocalizations]="+limit_betaBuildLocalizations+"&limit[icons]="+limit_icons+"&limit[individualTesters]="+limit_individualTesters;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BuildsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_get_instance v1/builds/{id}
		/// </summary>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_appEncryptionDeclarations">the fields to include for returned resources of type appEncryptionDeclarations</param>
		/// <param name="fields_betaAppReviewSubmissions">the fields to include for returned resources of type betaAppReviewSubmissions</param>
		/// <param name="fields_buildBetaDetails">the fields to include for returned resources of type buildBetaDetails</param>
		/// <param name="fields_buildIcons">the fields to include for returned resources of type buildIcons</param>
		/// <param name="fields_perfPowerMetrics">the fields to include for returned resources of type perfPowerMetrics</param>
		/// <param name="fields_preReleaseVersions">the fields to include for returned resources of type preReleaseVersions</param>
		/// <param name="fields_appStoreVersions">the fields to include for returned resources of type appStoreVersions</param>
		/// <param name="fields_diagnosticSignatures">the fields to include for returned resources of type diagnosticSignatures</param>
		/// <param name="fields_betaTesters">the fields to include for returned resources of type betaTesters</param>
		/// <param name="fields_betaBuildLocalizations">the fields to include for returned resources of type betaBuildLocalizations</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit_betaBuildLocalizations">maximum number of related betaBuildLocalizations returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_icons">maximum number of related icons returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_individualTesters">maximum number of related individualTesters returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>Single Build</returns>
		public async Task<BuildResponse> Builds_get_instanceAsync(
					string[] fields_builds, 
					string[] include, 
					string[] fields_appEncryptionDeclarations, 
					string[] fields_betaAppReviewSubmissions, 
					string[] fields_buildBetaDetails, 
					string[] fields_buildIcons, 
					string[] fields_perfPowerMetrics, 
					string[] fields_preReleaseVersions, 
					string[] fields_appStoreVersions, 
					string[] fields_diagnosticSignatures, 
					string[] fields_betaTesters, 
					string[] fields_betaBuildLocalizations, 
					string[] fields_apps, 
					int limit_betaBuildLocalizations, 
					int limit_icons, 
					int limit_individualTesters, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}?"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appEncryptionDeclarations.Select(z => $"fields[appEncryptionDeclarations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaAppReviewSubmissions.Select(z => $"fields[betaAppReviewSubmissions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_buildBetaDetails.Select(z => $"fields[buildBetaDetails]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_buildIcons.Select(z => $"fields[buildIcons]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_perfPowerMetrics.Select(z => $"fields[perfPowerMetrics]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_preReleaseVersions.Select(z => $"fields[preReleaseVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_appStoreVersions.Select(z => $"fields[appStoreVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_diagnosticSignatures.Select(z => $"fields[diagnosticSignatures]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaTesters.Select(z => $"fields[betaTesters]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_betaBuildLocalizations.Select(z => $"fields[betaBuildLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[betaBuildLocalizations]="+limit_betaBuildLocalizations+"&limit[icons]="+limit_icons+"&limit[individualTesters]="+limit_individualTesters;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BuildResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_update_instance v1/builds/{id}
		/// </summary>
		/// <param name="requestBody">Build representation</param>
		/// <returns>Single Build</returns>
		public async Task<BuildResponse> Builds_update_instanceAsync(BuildUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BuildResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_app_get_to_one_related v1/builds/{id}/app
		/// </summary>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <returns>Related resource</returns>
		public async Task<AppResponse> Builds_app_get_to_one_relatedAsync(string[] fields_apps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}/app?"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_appEncryptionDeclaration_get_to_one_related v1/builds/{id}/appEncryptionDeclaration
		/// </summary>
		/// <param name="fields_appEncryptionDeclarations">the fields to include for returned resources of type appEncryptionDeclarations</param>
		/// <returns>Related resource</returns>
		public async Task<AppEncryptionDeclarationResponse> Builds_appEncryptionDeclaration_get_to_one_relatedAsync(string[] fields_appEncryptionDeclarations, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}/appEncryptionDeclaration?"+string.Join("&", fields_appEncryptionDeclarations.Select(z => $"fields[appEncryptionDeclarations]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppEncryptionDeclarationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_appStoreVersion_get_to_one_related v1/builds/{id}/appStoreVersion
		/// </summary>
		/// <param name="fields_appStoreVersions">the fields to include for returned resources of type appStoreVersions</param>
		/// <returns>Related resource</returns>
		public async Task<AppStoreVersionResponse> Builds_appStoreVersion_get_to_one_relatedAsync(string[] fields_appStoreVersions, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}/appStoreVersion?"+string.Join("&", fields_appStoreVersions.Select(z => $"fields[appStoreVersions]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppStoreVersionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_betaAppReviewSubmission_get_to_one_related v1/builds/{id}/betaAppReviewSubmission
		/// </summary>
		/// <param name="fields_betaAppReviewSubmissions">the fields to include for returned resources of type betaAppReviewSubmissions</param>
		/// <returns>Related resource</returns>
		public async Task<BetaAppReviewSubmissionResponse> Builds_betaAppReviewSubmission_get_to_one_relatedAsync(string[] fields_betaAppReviewSubmissions, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}/betaAppReviewSubmission?"+string.Join("&", fields_betaAppReviewSubmissions.Select(z => $"fields[betaAppReviewSubmissions]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaAppReviewSubmissionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_betaBuildLocalizations_get_to_many_related v1/builds/{id}/betaBuildLocalizations
		/// </summary>
		/// <param name="fields_betaBuildLocalizations">the fields to include for returned resources of type betaBuildLocalizations</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<BetaBuildLocalizationsResponse> Builds_betaBuildLocalizations_get_to_many_relatedAsync(string[] fields_betaBuildLocalizations, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}/betaBuildLocalizations?"+string.Join("&", fields_betaBuildLocalizations.Select(z => $"fields[betaBuildLocalizations]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaBuildLocalizationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_buildBetaDetail_get_to_one_related v1/builds/{id}/buildBetaDetail
		/// </summary>
		/// <param name="fields_buildBetaDetails">the fields to include for returned resources of type buildBetaDetails</param>
		/// <returns>Related resource</returns>
		public async Task<BuildBetaDetailResponse> Builds_buildBetaDetail_get_to_one_relatedAsync(string[] fields_buildBetaDetails, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}/buildBetaDetail?"+string.Join("&", fields_buildBetaDetails.Select(z => $"fields[buildBetaDetails]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BuildBetaDetailResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_diagnosticSignatures_get_to_many_related v1/builds/{id}/diagnosticSignatures
		/// </summary>
		/// <param name="filter_diagnosticType">filter by attribute 'diagnosticType'</param>
		/// <param name="fields_diagnosticSignatures">the fields to include for returned resources of type diagnosticSignatures</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<DiagnosticSignaturesResponse> Builds_diagnosticSignatures_get_to_many_relatedAsync(DiagnosticSignatureAttributesDiagnosticType[] filter_diagnosticType, string[] fields_diagnosticSignatures, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}/diagnosticSignatures?"+string.Join("&", filter_diagnosticType.Select(z => $"filter[diagnosticType]={z}"))+"&"+string.Join("&", fields_diagnosticSignatures.Select(z => $"fields[diagnosticSignatures]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DiagnosticSignaturesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_icons_get_to_many_related v1/builds/{id}/icons
		/// </summary>
		/// <param name="fields_buildIcons">the fields to include for returned resources of type buildIcons</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<BuildIconsResponse> Builds_icons_get_to_many_relatedAsync(string[] fields_buildIcons, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}/icons?"+string.Join("&", fields_buildIcons.Select(z => $"fields[buildIcons]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BuildIconsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_individualTesters_get_to_many_related v1/builds/{id}/individualTesters
		/// </summary>
		/// <param name="fields_betaTesters">the fields to include for returned resources of type betaTesters</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<BetaTestersResponse> Builds_individualTesters_get_to_many_relatedAsync(string[] fields_betaTesters, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}/individualTesters?"+string.Join("&", fields_betaTesters.Select(z => $"fields[betaTesters]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BetaTestersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_perfPowerMetrics_get_to_many_related v1/builds/{id}/perfPowerMetrics
		/// </summary>
		/// <param name="filter_deviceType">filter by attribute 'deviceType'</param>
		/// <param name="filter_metricType">filter by attribute 'metricType'</param>
		/// <param name="filter_platform">filter by attribute 'platform'</param>
		/// <returns>List of related resources</returns>
		public async Task<PerfPowerMetricsResponse> Builds_perfPowerMetrics_get_to_many_relatedAsync(string[] filter_deviceType, PerfPowerMetricAttributesMetricType[] filter_metricType, PerfPowerMetricAttributesPlatform[] filter_platform, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}/perfPowerMetrics?"+string.Join("&", filter_deviceType.Select(z => $"filter[deviceType]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_metricType.Select(z => $"filter[metricType]={z}"))+"&"+string.Join("&", filter_platform.Select(z => $"filter[platform]={z}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PerfPowerMetricsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_preReleaseVersion_get_to_one_related v1/builds/{id}/preReleaseVersion
		/// </summary>
		/// <param name="fields_preReleaseVersions">the fields to include for returned resources of type preReleaseVersions</param>
		/// <returns>Related resource</returns>
		public async Task<PrereleaseVersionResponse> Builds_preReleaseVersion_get_to_one_relatedAsync(string[] fields_preReleaseVersions, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}/preReleaseVersion?"+string.Join("&", fields_preReleaseVersions.Select(z => $"fields[preReleaseVersions]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PrereleaseVersionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_appEncryptionDeclaration_get_to_one_relationship v1/builds/{id}/relationships/appEncryptionDeclaration
		/// </summary>
		/// <returns>Related linkage</returns>
		public async Task<BuildAppEncryptionDeclarationLinkageResponse> Builds_appEncryptionDeclaration_get_to_one_relationshipAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}/relationships/appEncryptionDeclaration";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BuildAppEncryptionDeclarationLinkageResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_appEncryptionDeclaration_update_to_one_relationship v1/builds/{id}/relationships/appEncryptionDeclaration
		/// </summary>
		/// <param name="requestBody">Related linkage</param>
		public async Task Builds_appEncryptionDeclaration_update_to_one_relationshipAsync(BuildAppEncryptionDeclarationLinkageRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}/relationships/appEncryptionDeclaration";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_betaGroups_delete_to_many_relationship v1/builds/{id}/relationships/betaGroups
		/// </summary>
		public async Task Builds_betaGroups_delete_to_many_relationshipAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}/relationships/betaGroups";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_betaGroups_create_to_many_relationship v1/builds/{id}/relationships/betaGroups
		/// </summary>
		/// <param name="requestBody">List of related linkages</param>
		public async Task Builds_betaGroups_create_to_many_relationshipAsync(BuildBetaGroupsLinkagesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}/relationships/betaGroups";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_individualTesters_delete_to_many_relationship v1/builds/{id}/relationships/individualTesters
		/// </summary>
		public async Task Builds_individualTesters_delete_to_many_relationshipAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}/relationships/individualTesters";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_individualTesters_get_to_many_relationship v1/builds/{id}/relationships/individualTesters
		/// </summary>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related linkages</returns>
		public async Task<BuildIndividualTestersLinkagesResponse> Builds_individualTesters_get_to_many_relationshipAsync(int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}/relationships/individualTesters?limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BuildIndividualTestersLinkagesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Builds_individualTesters_create_to_many_relationship v1/builds/{id}/relationships/individualTesters
		/// </summary>
		/// <param name="requestBody">List of related linkages</param>
		public async Task Builds_individualTesters_create_to_many_relationshipAsync(BuildIndividualTestersLinkagesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/builds/{id}/relationships/individualTesters";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BundleIdCapabilities_create_instance v1/bundleIdCapabilities
		/// </summary>
		/// <param name="requestBody">BundleIdCapability representation</param>
		public async Task BundleIdCapabilities_create_instanceAsync(BundleIdCapabilityCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/bundleIdCapabilities";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BundleIdCapabilities_delete_instance v1/bundleIdCapabilities/{id}
		/// </summary>
		public async Task BundleIdCapabilities_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/bundleIdCapabilities/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BundleIdCapabilities_update_instance v1/bundleIdCapabilities/{id}
		/// </summary>
		/// <param name="requestBody">BundleIdCapability representation</param>
		/// <returns>Single BundleIdCapability</returns>
		public async Task<BundleIdCapabilityResponse> BundleIdCapabilities_update_instanceAsync(BundleIdCapabilityUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/bundleIdCapabilities/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BundleIdCapabilityResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BundleIds_get_collection v1/bundleIds
		/// </summary>
		/// <param name="filter_identifier">filter by attribute 'identifier'</param>
		/// <param name="filter_name">filter by attribute 'name'</param>
		/// <param name="filter_platform">filter by attribute 'platform'</param>
		/// <param name="filter_seedId">filter by attribute 'seedId'</param>
		/// <param name="filter_id">filter by id(s)</param>
		/// <param name="sort">comma-separated list of sort expressions; resources will be sorted as specified</param>
		/// <param name="fields_bundleIds">the fields to include for returned resources of type bundleIds</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_bundleIdCapabilities">the fields to include for returned resources of type bundleIdCapabilities</param>
		/// <param name="fields_profiles">the fields to include for returned resources of type profiles</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit_bundleIdCapabilities">maximum number of related bundleIdCapabilities returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_profiles">maximum number of related profiles returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>List of BundleIds</returns>
		public async Task<BundleIdsResponse> BundleIds_get_collectionAsync(string[] filter_identifier, string[] filter_name, BundleIdAttributesPlatform[] filter_platform, string[] filter_seedId, string[] filter_id, string[] sort, string[] fields_bundleIds, int limit, string[] include, string[] fields_bundleIdCapabilities, string[] fields_profiles, string[] fields_apps, int limit_bundleIdCapabilities, int limit_profiles, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/bundleIds?"+string.Join("&", filter_identifier.Select(z => $"filter[identifier]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_name.Select(z => $"filter[name]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_platform.Select(z => $"filter[platform]={z}"))+"&"+string.Join("&", filter_seedId.Select(z => $"filter[seedId]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_id.Select(z => $"filter[id]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sort.Select(z => $"sort={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_bundleIds.Select(z => $"fields[bundleIds]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_bundleIdCapabilities.Select(z => $"fields[bundleIdCapabilities]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_profiles.Select(z => $"fields[profiles]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[bundleIdCapabilities]="+limit_bundleIdCapabilities+"&limit[profiles]="+limit_profiles;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BundleIdsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BundleIds_create_instance v1/bundleIds
		/// </summary>
		/// <param name="requestBody">BundleId representation</param>
		public async Task BundleIds_create_instanceAsync(BundleIdCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/bundleIds";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BundleIds_delete_instance v1/bundleIds/{id}
		/// </summary>
		public async Task BundleIds_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/bundleIds/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BundleIds_get_instance v1/bundleIds/{id}
		/// </summary>
		/// <param name="fields_bundleIds">the fields to include for returned resources of type bundleIds</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_bundleIdCapabilities">the fields to include for returned resources of type bundleIdCapabilities</param>
		/// <param name="fields_profiles">the fields to include for returned resources of type profiles</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit_bundleIdCapabilities">maximum number of related bundleIdCapabilities returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_profiles">maximum number of related profiles returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>Single BundleId</returns>
		public async Task<BundleIdResponse> BundleIds_get_instanceAsync(string[] fields_bundleIds, string[] include, string[] fields_bundleIdCapabilities, string[] fields_profiles, string[] fields_apps, int limit_bundleIdCapabilities, int limit_profiles, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/bundleIds/{id}?"+string.Join("&", fields_bundleIds.Select(z => $"fields[bundleIds]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_bundleIdCapabilities.Select(z => $"fields[bundleIdCapabilities]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_profiles.Select(z => $"fields[profiles]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[bundleIdCapabilities]="+limit_bundleIdCapabilities+"&limit[profiles]="+limit_profiles;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BundleIdResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BundleIds_update_instance v1/bundleIds/{id}
		/// </summary>
		/// <param name="requestBody">BundleId representation</param>
		/// <returns>Single BundleId</returns>
		public async Task<BundleIdResponse> BundleIds_update_instanceAsync(BundleIdUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/bundleIds/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BundleIdResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BundleIds_app_get_to_one_related v1/bundleIds/{id}/app
		/// </summary>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <returns>Related resource</returns>
		public async Task<AppResponse> BundleIds_app_get_to_one_relatedAsync(string[] fields_apps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/bundleIds/{id}/app?"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BundleIds_bundleIdCapabilities_get_to_many_related v1/bundleIds/{id}/bundleIdCapabilities
		/// </summary>
		/// <param name="fields_bundleIdCapabilities">the fields to include for returned resources of type bundleIdCapabilities</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<BundleIdCapabilitiesResponse> BundleIds_bundleIdCapabilities_get_to_many_relatedAsync(string[] fields_bundleIdCapabilities, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/bundleIds/{id}/bundleIdCapabilities?"+string.Join("&", fields_bundleIdCapabilities.Select(z => $"fields[bundleIdCapabilities]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BundleIdCapabilitiesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// BundleIds_profiles_get_to_many_related v1/bundleIds/{id}/profiles
		/// </summary>
		/// <param name="fields_profiles">the fields to include for returned resources of type profiles</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<ProfilesResponse> BundleIds_profiles_get_to_many_relatedAsync(string[] fields_profiles, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/bundleIds/{id}/profiles?"+string.Join("&", fields_profiles.Select(z => $"fields[profiles]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ProfilesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Certificates_get_collection v1/certificates
		/// </summary>
		/// <param name="filter_certificateType">filter by attribute 'certificateType'</param>
		/// <param name="filter_displayName">filter by attribute 'displayName'</param>
		/// <param name="filter_serialNumber">filter by attribute 'serialNumber'</param>
		/// <param name="filter_id">filter by id(s)</param>
		/// <param name="sort">comma-separated list of sort expressions; resources will be sorted as specified</param>
		/// <param name="fields_certificates">the fields to include for returned resources of type certificates</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of Certificates</returns>
		public async Task<CertificatesResponse> Certificates_get_collectionAsync(CertificateAttributesCertificateType[] filter_certificateType, string[] filter_displayName, string[] filter_serialNumber, string[] filter_id, string[] sort, string[] fields_certificates, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/certificates?"+string.Join("&", filter_certificateType.Select(z => $"filter[certificateType]={z}"))+"&"+string.Join("&", filter_displayName.Select(z => $"filter[displayName]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_serialNumber.Select(z => $"filter[serialNumber]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_id.Select(z => $"filter[id]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sort.Select(z => $"sort={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_certificates.Select(z => $"fields[certificates]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CertificatesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Certificates_create_instance v1/certificates
		/// </summary>
		/// <param name="requestBody">Certificate representation</param>
		public async Task Certificates_create_instanceAsync(CertificateCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/certificates";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Certificates_delete_instance v1/certificates/{id}
		/// </summary>
		public async Task Certificates_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/certificates/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Certificates_get_instance v1/certificates/{id}
		/// </summary>
		/// <param name="fields_certificates">the fields to include for returned resources of type certificates</param>
		/// <returns>Single Certificate</returns>
		public async Task<CertificateResponse> Certificates_get_instanceAsync(string[] fields_certificates, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/certificates/{id}?"+string.Join("&", fields_certificates.Select(z => $"fields[certificates]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CertificateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Devices_get_collection v1/devices
		/// </summary>
		/// <param name="filter_name">filter by attribute 'name'</param>
		/// <param name="filter_platform">filter by attribute 'platform'</param>
		/// <param name="filter_status">filter by attribute 'status'</param>
		/// <param name="filter_udid">filter by attribute 'udid'</param>
		/// <param name="filter_id">filter by id(s)</param>
		/// <param name="sort">comma-separated list of sort expressions; resources will be sorted as specified</param>
		/// <param name="fields_devices">the fields to include for returned resources of type devices</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of Devices</returns>
		public async Task<DevicesResponse> Devices_get_collectionAsync(string[] filter_name, BundleIdAttributesPlatform[] filter_platform, DeviceAttributesStatus[] filter_status, string[] filter_udid, string[] filter_id, string[] sort, string[] fields_devices, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/devices?"+string.Join("&", filter_name.Select(z => $"filter[name]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_platform.Select(z => $"filter[platform]={z}"))+"&"+string.Join("&", filter_status.Select(z => $"filter[status]={z}"))+"&"+string.Join("&", filter_udid.Select(z => $"filter[udid]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_id.Select(z => $"filter[id]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sort.Select(z => $"sort={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_devices.Select(z => $"fields[devices]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DevicesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Devices_create_instance v1/devices
		/// </summary>
		/// <param name="requestBody">Device representation</param>
		public async Task Devices_create_instanceAsync(DeviceCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/devices";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Devices_get_instance v1/devices/{id}
		/// </summary>
		/// <param name="fields_devices">the fields to include for returned resources of type devices</param>
		/// <returns>Single Device</returns>
		public async Task<DeviceResponse> Devices_get_instanceAsync(string[] fields_devices, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/devices/{id}?"+string.Join("&", fields_devices.Select(z => $"fields[devices]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeviceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Devices_update_instance v1/devices/{id}
		/// </summary>
		/// <param name="requestBody">Device representation</param>
		/// <returns>Single Device</returns>
		public async Task<DeviceResponse> Devices_update_instanceAsync(DeviceUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/devices/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeviceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// DiagnosticSignatures_logs_get_to_many_related v1/diagnosticSignatures/{id}/logs
		/// </summary>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<DiagnosticLogsResponse> DiagnosticSignatures_logs_get_to_many_relatedAsync(int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/diagnosticSignatures/{id}/logs?limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DiagnosticLogsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// EndUserLicenseAgreements_create_instance v1/endUserLicenseAgreements
		/// </summary>
		/// <param name="requestBody">EndUserLicenseAgreement representation</param>
		public async Task EndUserLicenseAgreements_create_instanceAsync(EndUserLicenseAgreementCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/endUserLicenseAgreements";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// EndUserLicenseAgreements_delete_instance v1/endUserLicenseAgreements/{id}
		/// </summary>
		public async Task EndUserLicenseAgreements_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/endUserLicenseAgreements/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// EndUserLicenseAgreements_get_instance v1/endUserLicenseAgreements/{id}
		/// </summary>
		/// <param name="fields_endUserLicenseAgreements">the fields to include for returned resources of type endUserLicenseAgreements</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_territories">the fields to include for returned resources of type territories</param>
		/// <param name="limit_territories">maximum number of related territories returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>Single EndUserLicenseAgreement</returns>
		public async Task<EndUserLicenseAgreementResponse> EndUserLicenseAgreements_get_instanceAsync(string[] fields_endUserLicenseAgreements, string[] include, string[] fields_territories, int limit_territories, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/endUserLicenseAgreements/{id}?"+string.Join("&", fields_endUserLicenseAgreements.Select(z => $"fields[endUserLicenseAgreements]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_territories.Select(z => $"fields[territories]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[territories]="+limit_territories;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<EndUserLicenseAgreementResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// EndUserLicenseAgreements_update_instance v1/endUserLicenseAgreements/{id}
		/// </summary>
		/// <param name="requestBody">EndUserLicenseAgreement representation</param>
		/// <returns>Single EndUserLicenseAgreement</returns>
		public async Task<EndUserLicenseAgreementResponse> EndUserLicenseAgreements_update_instanceAsync(EndUserLicenseAgreementUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/endUserLicenseAgreements/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<EndUserLicenseAgreementResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// EndUserLicenseAgreements_territories_get_to_many_related v1/endUserLicenseAgreements/{id}/territories
		/// </summary>
		/// <param name="fields_territories">the fields to include for returned resources of type territories</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<TerritoriesResponse> EndUserLicenseAgreements_territories_get_to_many_relatedAsync(string[] fields_territories, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/endUserLicenseAgreements/{id}/territories?"+string.Join("&", fields_territories.Select(z => $"fields[territories]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TerritoriesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// FinanceReports_get_collection v1/financeReports
		/// </summary>
		/// <param name="filter_regionCode">filter by attribute 'regionCode'</param>
		/// <param name="filter_reportDate">filter by attribute 'reportDate'</param>
		/// <param name="filter_reportType">filter by attribute 'reportType'</param>
		/// <param name="filter_vendorNumber">filter by attribute 'vendorNumber'</param>
		/// <returns>List of FinanceReports</returns>
		public async Task FinanceReports_get_collectionAsync(string[] filter_regionCode, string[] filter_reportDate, string[] filter_reportType, string[] filter_vendorNumber, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/financeReports?"+string.Join("&", filter_regionCode.Select(z => $"filter[regionCode]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_reportDate.Select(z => $"filter[reportDate]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_reportType.Select(z => $"filter[reportType]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_vendorNumber.Select(z => $"filter[vendorNumber]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// GameCenterEnabledVersions_compatibleVersions_get_to_many_related v1/gameCenterEnabledVersions/{id}/compatibleVersions
		/// </summary>
		/// <param name="filter_platform">filter by attribute 'platform'</param>
		/// <param name="filter_versionString">filter by attribute 'versionString'</param>
		/// <param name="filter_app">filter by id(s) of related 'app'</param>
		/// <param name="filter_id">filter by id(s)</param>
		/// <param name="sort">comma-separated list of sort expressions; resources will be sorted as specified</param>
		/// <param name="fields_gameCenterEnabledVersions">the fields to include for returned resources of type gameCenterEnabledVersions</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>List of related resources</returns>
		public async Task<GameCenterEnabledVersionsResponse> GameCenterEnabledVersions_compatibleVersions_get_to_many_relatedAsync(Platform[] filter_platform, string[] filter_versionString, string[] filter_app, string[] filter_id, string[] sort, string[] fields_gameCenterEnabledVersions, string[] fields_apps, int limit, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/gameCenterEnabledVersions/{id}/compatibleVersions?"+string.Join("&", filter_platform.Select(z => $"filter[platform]={z}"))+"&"+string.Join("&", filter_versionString.Select(z => $"filter[versionString]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_app.Select(z => $"filter[app]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_id.Select(z => $"filter[id]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sort.Select(z => $"sort={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_gameCenterEnabledVersions.Select(z => $"fields[gameCenterEnabledVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GameCenterEnabledVersionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// GameCenterEnabledVersions_compatibleVersions_delete_to_many_relationship v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions
		/// </summary>
		public async Task GameCenterEnabledVersions_compatibleVersions_delete_to_many_relationshipAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// GameCenterEnabledVersions_compatibleVersions_get_to_many_relationship v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions
		/// </summary>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related linkages</returns>
		public async Task<GameCenterEnabledVersionCompatibleVersionsLinkagesResponse> GameCenterEnabledVersions_compatibleVersions_get_to_many_relationshipAsync(int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions?limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GameCenterEnabledVersionCompatibleVersionsLinkagesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// GameCenterEnabledVersions_compatibleVersions_replace_to_many_relationship v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions
		/// </summary>
		/// <param name="requestBody">List of related linkages</param>
		public async Task GameCenterEnabledVersions_compatibleVersions_replace_to_many_relationshipAsync(GameCenterEnabledVersionCompatibleVersionsLinkagesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// GameCenterEnabledVersions_compatibleVersions_create_to_many_relationship v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions
		/// </summary>
		/// <param name="requestBody">List of related linkages</param>
		public async Task GameCenterEnabledVersions_compatibleVersions_create_to_many_relationshipAsync(GameCenterEnabledVersionCompatibleVersionsLinkagesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/gameCenterEnabledVersions/{id}/relationships/compatibleVersions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// IdfaDeclarations_create_instance v1/idfaDeclarations
		/// </summary>
		/// <param name="requestBody">IdfaDeclaration representation</param>
		public async Task IdfaDeclarations_create_instanceAsync(IdfaDeclarationCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/idfaDeclarations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// IdfaDeclarations_delete_instance v1/idfaDeclarations/{id}
		/// </summary>
		public async Task IdfaDeclarations_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/idfaDeclarations/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// IdfaDeclarations_update_instance v1/idfaDeclarations/{id}
		/// </summary>
		/// <param name="requestBody">IdfaDeclaration representation</param>
		/// <returns>Single IdfaDeclaration</returns>
		public async Task<IdfaDeclarationResponse> IdfaDeclarations_update_instanceAsync(IdfaDeclarationUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/idfaDeclarations/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<IdfaDeclarationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// InAppPurchases_get_instance v1/inAppPurchases/{id}
		/// </summary>
		/// <param name="fields_inAppPurchases">the fields to include for returned resources of type inAppPurchases</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="limit_apps">maximum number of related apps returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>Single InAppPurchase</returns>
		public async Task<InAppPurchaseResponse> InAppPurchases_get_instanceAsync(string[] fields_inAppPurchases, AppType[] include, int limit_apps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/inAppPurchases/{id}?"+string.Join("&", fields_inAppPurchases.Select(z => $"fields[inAppPurchases]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={z}"))+"&limit[apps]="+limit_apps;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<InAppPurchaseResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// PreReleaseVersions_get_collection v1/preReleaseVersions
		/// </summary>
		/// <param name="filter_builds_expired">filter by attribute 'builds.expired'</param>
		/// <param name="filter_builds_processingState">filter by attribute 'builds.processingState'</param>
		/// <param name="filter_platform">filter by attribute 'platform'</param>
		/// <param name="filter_version">filter by attribute 'version'</param>
		/// <param name="filter_app">filter by id(s) of related 'app'</param>
		/// <param name="filter_builds">filter by id(s) of related 'builds'</param>
		/// <param name="sort">comma-separated list of sort expressions; resources will be sorted as specified</param>
		/// <param name="fields_preReleaseVersions">the fields to include for returned resources of type preReleaseVersions</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit_builds">maximum number of related builds returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>List of PreReleaseVersions</returns>
		public async Task<PreReleaseVersionsResponse> PreReleaseVersions_get_collectionAsync(string[] filter_builds_expired, BuildAttributesProcessingState[] filter_builds_processingState, Platform[] filter_platform, string[] filter_version, string[] filter_app, string[] filter_builds, string[] sort, string[] fields_preReleaseVersions, int limit, string[] include, string[] fields_builds, string[] fields_apps, int limit_builds, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/preReleaseVersions?"+string.Join("&", filter_builds_expired.Select(z => $"filter[builds.expired]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_builds_processingState.Select(z => $"filter[builds.processingState]={z}"))+"&"+string.Join("&", filter_platform.Select(z => $"filter[platform]={z}"))+"&"+string.Join("&", filter_version.Select(z => $"filter[version]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_app.Select(z => $"filter[app]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_builds.Select(z => $"filter[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sort.Select(z => $"sort={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_preReleaseVersions.Select(z => $"fields[preReleaseVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[builds]="+limit_builds;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PreReleaseVersionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// PreReleaseVersions_get_instance v1/preReleaseVersions/{id}
		/// </summary>
		/// <param name="fields_preReleaseVersions">the fields to include for returned resources of type preReleaseVersions</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit_builds">maximum number of related builds returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>Single PrereleaseVersion</returns>
		public async Task<PrereleaseVersionResponse> PreReleaseVersions_get_instanceAsync(string[] fields_preReleaseVersions, string[] include, string[] fields_builds, string[] fields_apps, int limit_builds, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/preReleaseVersions/{id}?"+string.Join("&", fields_preReleaseVersions.Select(z => $"fields[preReleaseVersions]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[builds]="+limit_builds;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PrereleaseVersionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// PreReleaseVersions_app_get_to_one_related v1/preReleaseVersions/{id}/app
		/// </summary>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <returns>Related resource</returns>
		public async Task<AppResponse> PreReleaseVersions_app_get_to_one_relatedAsync(string[] fields_apps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/preReleaseVersions/{id}/app?"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// PreReleaseVersions_builds_get_to_many_related v1/preReleaseVersions/{id}/builds
		/// </summary>
		/// <param name="fields_builds">the fields to include for returned resources of type builds</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<BuildsResponse> PreReleaseVersions_builds_get_to_many_relatedAsync(string[] fields_builds, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/preReleaseVersions/{id}/builds?"+string.Join("&", fields_builds.Select(z => $"fields[builds]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BuildsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Profiles_get_collection v1/profiles
		/// </summary>
		/// <param name="filter_name">filter by attribute 'name'</param>
		/// <param name="filter_profileState">filter by attribute 'profileState'</param>
		/// <param name="filter_profileType">filter by attribute 'profileType'</param>
		/// <param name="filter_id">filter by id(s)</param>
		/// <param name="sort">comma-separated list of sort expressions; resources will be sorted as specified</param>
		/// <param name="fields_profiles">the fields to include for returned resources of type profiles</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_certificates">the fields to include for returned resources of type certificates</param>
		/// <param name="fields_devices">the fields to include for returned resources of type devices</param>
		/// <param name="fields_bundleIds">the fields to include for returned resources of type bundleIds</param>
		/// <param name="limit_certificates">maximum number of related certificates returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_devices">maximum number of related devices returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>List of Profiles</returns>
		public async Task<ProfilesResponse> Profiles_get_collectionAsync(string[] filter_name, ProfileAttributesProfileState[] filter_profileState, ProfileAttributesProfileType[] filter_profileType, string[] filter_id, string[] sort, string[] fields_profiles, int limit, string[] include, string[] fields_certificates, string[] fields_devices, string[] fields_bundleIds, int limit_certificates, int limit_devices, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/profiles?"+string.Join("&", filter_name.Select(z => $"filter[name]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_profileState.Select(z => $"filter[profileState]={z}"))+"&"+string.Join("&", filter_profileType.Select(z => $"filter[profileType]={z}"))+"&"+string.Join("&", filter_id.Select(z => $"filter[id]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sort.Select(z => $"sort={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_profiles.Select(z => $"fields[profiles]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_certificates.Select(z => $"fields[certificates]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_devices.Select(z => $"fields[devices]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_bundleIds.Select(z => $"fields[bundleIds]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[certificates]="+limit_certificates+"&limit[devices]="+limit_devices;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ProfilesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Profiles_create_instance v1/profiles
		/// </summary>
		/// <param name="requestBody">Profile representation</param>
		public async Task Profiles_create_instanceAsync(ProfileCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/profiles";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Profiles_delete_instance v1/profiles/{id}
		/// </summary>
		public async Task Profiles_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/profiles/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Profiles_get_instance v1/profiles/{id}
		/// </summary>
		/// <param name="fields_profiles">the fields to include for returned resources of type profiles</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_certificates">the fields to include for returned resources of type certificates</param>
		/// <param name="fields_devices">the fields to include for returned resources of type devices</param>
		/// <param name="fields_bundleIds">the fields to include for returned resources of type bundleIds</param>
		/// <param name="limit_certificates">maximum number of related certificates returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <param name="limit_devices">maximum number of related devices returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>Single Profile</returns>
		public async Task<ProfileResponse> Profiles_get_instanceAsync(string[] fields_profiles, string[] include, string[] fields_certificates, string[] fields_devices, string[] fields_bundleIds, int limit_certificates, int limit_devices, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/profiles/{id}?"+string.Join("&", fields_profiles.Select(z => $"fields[profiles]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_certificates.Select(z => $"fields[certificates]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_devices.Select(z => $"fields[devices]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_bundleIds.Select(z => $"fields[bundleIds]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[certificates]="+limit_certificates+"&limit[devices]="+limit_devices;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ProfileResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Profiles_bundleId_get_to_one_related v1/profiles/{id}/bundleId
		/// </summary>
		/// <param name="fields_bundleIds">the fields to include for returned resources of type bundleIds</param>
		/// <returns>Related resource</returns>
		public async Task<BundleIdResponse> Profiles_bundleId_get_to_one_relatedAsync(string[] fields_bundleIds, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/profiles/{id}/bundleId?"+string.Join("&", fields_bundleIds.Select(z => $"fields[bundleIds]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BundleIdResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Profiles_certificates_get_to_many_related v1/profiles/{id}/certificates
		/// </summary>
		/// <param name="fields_certificates">the fields to include for returned resources of type certificates</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<CertificatesResponse> Profiles_certificates_get_to_many_relatedAsync(string[] fields_certificates, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/profiles/{id}/certificates?"+string.Join("&", fields_certificates.Select(z => $"fields[certificates]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CertificatesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Profiles_devices_get_to_many_related v1/profiles/{id}/devices
		/// </summary>
		/// <param name="fields_devices">the fields to include for returned resources of type devices</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<DevicesResponse> Profiles_devices_get_to_many_relatedAsync(string[] fields_devices, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/profiles/{id}/devices?"+string.Join("&", fields_devices.Select(z => $"fields[devices]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DevicesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// RoutingAppCoverages_create_instance v1/routingAppCoverages
		/// </summary>
		/// <param name="requestBody">RoutingAppCoverage representation</param>
		public async Task RoutingAppCoverages_create_instanceAsync(RoutingAppCoverageCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/routingAppCoverages";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// RoutingAppCoverages_delete_instance v1/routingAppCoverages/{id}
		/// </summary>
		public async Task RoutingAppCoverages_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/routingAppCoverages/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// RoutingAppCoverages_get_instance v1/routingAppCoverages/{id}
		/// </summary>
		/// <param name="fields_routingAppCoverages">the fields to include for returned resources of type routingAppCoverages</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <returns>Single RoutingAppCoverage</returns>
		public async Task<RoutingAppCoverageResponse> RoutingAppCoverages_get_instanceAsync(string[] fields_routingAppCoverages, string[] include, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/routingAppCoverages/{id}?"+string.Join("&", fields_routingAppCoverages.Select(z => $"fields[routingAppCoverages]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RoutingAppCoverageResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// RoutingAppCoverages_update_instance v1/routingAppCoverages/{id}
		/// </summary>
		/// <param name="requestBody">RoutingAppCoverage representation</param>
		/// <returns>Single RoutingAppCoverage</returns>
		public async Task<RoutingAppCoverageResponse> RoutingAppCoverages_update_instanceAsync(RoutingAppCoverageUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/routingAppCoverages/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RoutingAppCoverageResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// SalesReports_get_collection v1/salesReports
		/// </summary>
		/// <param name="filter_frequency">filter by attribute 'frequency'</param>
		/// <param name="filter_reportDate">filter by attribute 'reportDate'</param>
		/// <param name="filter_reportSubType">filter by attribute 'reportSubType'</param>
		/// <param name="filter_reportType">filter by attribute 'reportType'</param>
		/// <param name="filter_vendorNumber">filter by attribute 'vendorNumber'</param>
		/// <param name="filter_version">filter by attribute 'version'</param>
		/// <returns>List of SalesReports</returns>
		public async Task SalesReports_get_collectionAsync(string[] filter_frequency, string[] filter_reportDate, string[] filter_reportSubType, string[] filter_reportType, string[] filter_vendorNumber, string[] filter_version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/salesReports?"+string.Join("&", filter_frequency.Select(z => $"filter[frequency]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_reportDate.Select(z => $"filter[reportDate]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_reportSubType.Select(z => $"filter[reportSubType]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_reportType.Select(z => $"filter[reportType]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_vendorNumber.Select(z => $"filter[vendorNumber]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_version.Select(z => $"filter[version]={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Territories_get_collection v1/territories
		/// </summary>
		/// <param name="fields_territories">the fields to include for returned resources of type territories</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of Territories</returns>
		public async Task<TerritoriesResponse> Territories_get_collectionAsync(string[] fields_territories, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/territories?"+string.Join("&", fields_territories.Select(z => $"fields[territories]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TerritoriesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// UserInvitations_get_collection v1/userInvitations
		/// </summary>
		/// <param name="filter_email">filter by attribute 'email'</param>
		/// <param name="filter_roles">filter by attribute 'roles'</param>
		/// <param name="filter_visibleApps">filter by id(s) of related 'visibleApps'</param>
		/// <param name="sort">comma-separated list of sort expressions; resources will be sorted as specified</param>
		/// <param name="fields_userInvitations">the fields to include for returned resources of type userInvitations</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit_visibleApps">maximum number of related visibleApps returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>List of UserInvitations</returns>
		public async Task<UserInvitationsResponse> UserInvitations_get_collectionAsync(string[] filter_email, UserRole[] filter_roles, string[] filter_visibleApps, string[] sort, string[] fields_userInvitations, int limit, string[] include, string[] fields_apps, int limit_visibleApps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/userInvitations?"+string.Join("&", filter_email.Select(z => $"filter[email]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_roles.Select(z => $"filter[roles]={z}"))+"&"+string.Join("&", filter_visibleApps.Select(z => $"filter[visibleApps]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sort.Select(z => $"sort={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_userInvitations.Select(z => $"fields[userInvitations]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[visibleApps]="+limit_visibleApps;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UserInvitationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// UserInvitations_create_instance v1/userInvitations
		/// </summary>
		/// <param name="requestBody">UserInvitation representation</param>
		public async Task UserInvitations_create_instanceAsync(UserInvitationCreateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/userInvitations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// UserInvitations_delete_instance v1/userInvitations/{id}
		/// </summary>
		public async Task UserInvitations_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/userInvitations/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// UserInvitations_get_instance v1/userInvitations/{id}
		/// </summary>
		/// <param name="fields_userInvitations">the fields to include for returned resources of type userInvitations</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit_visibleApps">maximum number of related visibleApps returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>Single UserInvitation</returns>
		public async Task<UserInvitationResponse> UserInvitations_get_instanceAsync(string[] fields_userInvitations, string[] include, string[] fields_apps, int limit_visibleApps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/userInvitations/{id}?"+string.Join("&", fields_userInvitations.Select(z => $"fields[userInvitations]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[visibleApps]="+limit_visibleApps;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UserInvitationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// UserInvitations_visibleApps_get_to_many_related v1/userInvitations/{id}/visibleApps
		/// </summary>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<AppsResponse> UserInvitations_visibleApps_get_to_many_relatedAsync(string[] fields_apps, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/userInvitations/{id}/visibleApps?"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Users_get_collection v1/users
		/// </summary>
		/// <param name="filter_roles">filter by attribute 'roles'</param>
		/// <param name="filter_username">filter by attribute 'username'</param>
		/// <param name="filter_visibleApps">filter by id(s) of related 'visibleApps'</param>
		/// <param name="sort">comma-separated list of sort expressions; resources will be sorted as specified</param>
		/// <param name="fields_users">the fields to include for returned resources of type users</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit_visibleApps">maximum number of related visibleApps returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>List of Users</returns>
		public async Task<UsersResponse> Users_get_collectionAsync(UserRole[] filter_roles, string[] filter_username, string[] filter_visibleApps, string[] sort, string[] fields_users, int limit, string[] include, string[] fields_apps, int limit_visibleApps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/users?"+string.Join("&", filter_roles.Select(z => $"filter[roles]={z}"))+"&"+string.Join("&", filter_username.Select(z => $"filter[username]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", filter_visibleApps.Select(z => $"filter[visibleApps]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", sort.Select(z => $"sort={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_users.Select(z => $"fields[users]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[visibleApps]="+limit_visibleApps;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UsersResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Users_delete_instance v1/users/{id}
		/// </summary>
		public async Task Users_delete_instanceAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/users/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Users_get_instance v1/users/{id}
		/// </summary>
		/// <param name="fields_users">the fields to include for returned resources of type users</param>
		/// <param name="include">comma-separated list of relationships to include</param>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit_visibleApps">maximum number of related visibleApps returned (when they are included)
		/// Maximum: 50
		// </param>
		/// <returns>Single User</returns>
		public async Task<UserResponse> Users_get_instanceAsync(string[] fields_users, string[] include, string[] fields_apps, int limit_visibleApps, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/users/{id}?"+string.Join("&", fields_users.Select(z => $"fields[users]={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", include.Select(z => $"include={System.Uri.EscapeDataString(z.ToString())}"))+"&"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit[visibleApps]="+limit_visibleApps;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UserResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Users_update_instance v1/users/{id}
		/// </summary>
		/// <param name="requestBody">User representation</param>
		/// <returns>Single User</returns>
		public async Task<UserResponse> Users_update_instanceAsync(UserUpdateRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/users/{id}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UserResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Users_visibleApps_delete_to_many_relationship v1/users/{id}/relationships/visibleApps
		/// </summary>
		public async Task Users_visibleApps_delete_to_many_relationshipAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/users/{id}/relationships/visibleApps";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Users_visibleApps_get_to_many_relationship v1/users/{id}/relationships/visibleApps
		/// </summary>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related linkages</returns>
		public async Task<UserVisibleAppsLinkagesResponse> Users_visibleApps_get_to_many_relationshipAsync(int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/users/{id}/relationships/visibleApps?limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UserVisibleAppsLinkagesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Users_visibleApps_replace_to_many_relationship v1/users/{id}/relationships/visibleApps
		/// </summary>
		/// <param name="requestBody">List of related linkages</param>
		public async Task Users_visibleApps_replace_to_many_relationshipAsync(UserVisibleAppsLinkagesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/users/{id}/relationships/visibleApps";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Users_visibleApps_create_to_many_relationship v1/users/{id}/relationships/visibleApps
		/// </summary>
		/// <param name="requestBody">List of related linkages</param>
		public async Task Users_visibleApps_create_to_many_relationshipAsync(UserVisibleAppsLinkagesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/users/{id}/relationships/visibleApps";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Users_visibleApps_get_to_many_related v1/users/{id}/visibleApps
		/// </summary>
		/// <param name="fields_apps">the fields to include for returned resources of type apps</param>
		/// <param name="limit">maximum resources per page
		/// Maximum: 200
		// </param>
		/// <returns>List of related resources</returns>
		public async Task<AppsResponse> Users_visibleApps_get_to_many_relatedAsync(string[] fields_apps, int limit, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/users/{id}/visibleApps?"+string.Join("&", fields_apps.Select(z => $"fields[apps]={System.Uri.EscapeDataString(z.ToString())}"))+"&limit="+limit;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AppsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Geocode an address
		/// Represents the set of geocoded and standardized sites and intersections whose address best matches a given query address.
		/// Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPoint addresses.{outputFormat}
		/// </summary>
		/// <param name="outputFormat">Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		///
		///Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)</param>
		/// <param name="addressString">Civic or intersection address as a single string. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#addressString target="_blank">addressString</a></param>
		/// <param name="locationDescriptor">Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a></param>
		/// <param name="maxResults">The maximum number of search results to return.</param>
		/// <param name="interpolation">accessPoint interpolation method. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#interpolation target="_blank">interpolation</a></param>
		/// <param name="echo">If true, include unmatched address details such as site name in results.</param>
		/// <param name="brief">If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.</param>
		/// <param name="autoComplete">If true, addressString is expected to contain a partial address that requires completion. Not supported for shp, csv, gml formats.</param>
		/// <param name="setBack">The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.</param>
		/// <param name="outputSRS">The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a></param>
		/// <param name="minScore">The minimum score required for a match to be returned. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#minScore target="_blank">minScore</a></param>
		/// <param name="matchPrecision">Example: street,locality.  A comma separated list of individual match precision levels to include in results. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecision target="_blank">matchPrecision</a></param>
		/// <param name="matchPrecisionNot">Example: street,locality.  A comma separated list of individual match precision levels to exclude from results. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecisionNot target="_blank">matchPrecisionNot</a></param>
		/// <param name="siteName">A string containing the name of the building, facility, or institution (e.g., Duck Building, Casa Del Mar, Crystal Garden, Bluebird House).See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#siteName target="_blank">siteName</a></param>
		/// <param name="unitDesignator">The type of unit within a house or building. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#unitDesignator target="_blank">unitDesignator</a></param>
		/// <param name="unitNumber">The number of the unit, suite, or apartment within a house or building.</param>
		/// <param name="unitNumberSuffix">A letter that follows the unit number as in Unit 1A or Suite 302B.</param>
		/// <param name="civicNumber">The official number assigned to a site by an address authority. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumber target="_blank">civicNumber</a></param>
		/// <param name="civicNumberSuffix">A letter or fraction that follows the civic number (e.g., the A in 1039A Bledsoe St). See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumberSuffix target="_blank">civicNumberSuffix</a></param>
		/// <param name="streetName">The official name of the street as assigned by an address authority (e.g., the Douglas in 1175 Douglas Street). See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetName target="_blank">streetName</a></param>
		/// <param name="streetType">The type of street as assigned by a municipality (e.g., the ST in 1175 DOUGLAS St). See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetType target="_blank">streetType</a></param>
		/// <param name="streetDirection">The abbreviated compass direction as defined by Canada Post and B.C. civic addressing authorities. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetDirection target="_blank">streetDirection</a></param>
		/// <param name="streetQualifier">Example: the Bridge in Johnson St Bridge. The qualifier of a street name. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetQualifier target="_blank">streetQualifier</a></param>
		/// <param name="localityName">The name of the locality assigned to a given site by an address authority. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#localityName target="_blank">localityName</a></param>
		/// <param name="provinceCode">The ISO 3166-2 Sub-Country Code. The code for British Columbia is BC.</param>
		/// <param name="localities">A comma separated list of locality names that matched addresses must belong to. For example, setting localities to Nanaimo only returns addresses in Nanaimo</param>
		/// <param name="notLocalities">A comma-separated list of localities to exclude from the search.</param>
		/// <param name="bbox">Example: -126.07929,49.7628,-126.0163,49.7907.  A bounding box (xmin,ymin,xmax,ymax) that limits the search area. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target="_blank">bbox</a></param>
		/// <param name="centre">Example: -124.0165926,49.2296251 .  The coordinates of a centre point (x,y) used to define a bounding circle that will limit the search area. This parameter must be specified together with 'maxDistance'. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#centre target='_blank'>centre</a></param>
		/// <param name="maxDistance">The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.</param>
		/// <param name="extrapolate">If true, uses supplied parcelPoint to derive an appropriate accessPoint.           See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#extrapolate target="_blank">extrapolate</a></param>
		/// <param name="parcelPoint">The coordinates of a point (x,y) known to be inside the parcel containing a given address. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#parcelPoint target="_blank">parcelPoint</a></param>
		/// <returns>A list of matching sites or intersections and their physical locations. See <a href='https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#resource-representations-in-http-responses' target="_blank">addresses response</a></returns>
		public async Task Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointAsync(
					Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat outputFormat, 
					string addressString, 
					Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor locationDescriptor, 
					int maxResults, 
					Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointInterpolation interpolation, 
					bool echo, 
					bool brief, 
					bool autoComplete, 
					int setBack, 
					Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputSRS outputSRS, 
					int minScore, 
					string matchPrecision, 
					string matchPrecisionNot, 
					string siteName, 
					Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointUnitDesignator unitDesignator, 
					string unitNumber, 
					string unitNumberSuffix, 
					string civicNumber, 
					string civicNumberSuffix, 
					string streetName, 
					string streetType, 
					Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointStreetDirection streetDirection, 
					string streetQualifier, 
					string localityName, 
					string provinceCode, 
					string localities, 
					string notLocalities, 
					string bbox, 
					string centre, 
					double maxDistance, 
					bool extrapolate, 
					string parcelPoint, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "addresses."+outputFormat+"?addressString=" + (addressString==null? "" : System.Uri.EscapeDataString(addressString))+"&locationDescriptor=" + locationDescriptor+"&maxResults="+maxResults+"&interpolation=" + interpolation+"&echo="+echo+"&brief="+brief+"&autoComplete="+autoComplete+"&setBack="+setBack+"&outputSRS="+outputSRS+"&minScore="+minScore+"&matchPrecision=" + (matchPrecision==null? "" : System.Uri.EscapeDataString(matchPrecision))+"&matchPrecisionNot=" + (matchPrecisionNot==null? "" : System.Uri.EscapeDataString(matchPrecisionNot))+"&siteName=" + (siteName==null? "" : System.Uri.EscapeDataString(siteName))+"&unitDesignator=" + unitDesignator+"&unitNumber=" + (unitNumber==null? "" : System.Uri.EscapeDataString(unitNumber))+"&unitNumberSuffix=" + (unitNumberSuffix==null? "" : System.Uri.EscapeDataString(unitNumberSuffix))+"&civicNumber=" + (civicNumber==null? "" : System.Uri.EscapeDataString(civicNumber))+"&civicNumberSuffix=" + (civicNumberSuffix==null? "" : System.Uri.EscapeDataString(civicNumberSuffix))+"&streetName=" + (streetName==null? "" : System.Uri.EscapeDataString(streetName))+"&streetType=" + (streetType==null? "" : System.Uri.EscapeDataString(streetType))+"&streetDirection=" + streetDirection+"&streetQualifier=" + (streetQualifier==null? "" : System.Uri.EscapeDataString(streetQualifier))+"&localityName=" + (localityName==null? "" : System.Uri.EscapeDataString(localityName))+"&provinceCode=" + (provinceCode==null? "" : System.Uri.EscapeDataString(provinceCode))+"&localities=" + (localities==null? "" : System.Uri.EscapeDataString(localities))+"&notLocalities=" + (notLocalities==null? "" : System.Uri.EscapeDataString(notLocalities))+"&bbox=" + (bbox==null? "" : System.Uri.EscapeDataString(bbox))+"&centre=" + (centre==null? "" : System.Uri.EscapeDataString(centre))+"&maxDistance="+maxDistance+"&extrapolate="+extrapolate+"&parcelPoint=" + (parcelPoint==null? "" : System.Uri.EscapeDataString(parcelPoint));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Find intersections near to a geographic point
		/// Represents intersections near a given point
		/// IntersectionsNear__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMaxResultsAndMinDegreeAndMaxDegree intersections/near.{outputFormat}
		/// </summary>
		/// <param name="outputFormat">Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		///
		///Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)</param>
		/// <param name="point">The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter.</param>
		/// <param name="maxDistance">The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.</param>
		/// <param name="outputSRS">The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a></param>
		/// <param name="maxResults">The maximum number of search results to return.</param>
		/// <param name="minDegree">The minimum degree an intersection can have to be included in results. A dead-end has a degree of 1.</param>
		/// <param name="maxDegree">The maximum degree an interesection can have to be included in results. A four-way stop has a degree of 4.</param>
		/// <returns>A list of selected intersections near a given point. Each intersection is in <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#intersection-address-representation" target="_blank">Intersection Address Representation</a></returns>
		public async Task IntersectionsNear__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMaxResultsAndMinDegreeAndMaxDegreeAsync(Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat outputFormat, string point, int maxDistance, IntersectionsNear__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMaxResultsAndMinDegreeAndMaxDegreeOutputSRS outputSRS, int maxResults, int minDegree, int maxDegree, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "intersections/near."+outputFormat+"?point=" + (point==null? "" : System.Uri.EscapeDataString(point))+"&maxDistance="+maxDistance+"&outputSRS="+outputSRS+"&maxResults="+maxResults+"&minDegree="+minDegree+"&maxDegree="+maxDegree;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Find nearest intersection to a geographic point
		/// Represents the closest intersection to a given point
		/// IntersectionsNearest__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMinDegreeAndMaxDegree intersections/nearest.{outputFormat}
		/// </summary>
		/// <param name="outputFormat">Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		///
		///Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)</param>
		/// <param name="point">Example: -122.377,50.121  The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter.</param>
		/// <param name="maxDistance">The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.</param>
		/// <param name="outputSRS">The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a></param>
		/// <param name="minDegree">The minimum degree an intersection can have to be included in results. A dead-end has a degree of 1.</param>
		/// <param name="maxDegree">The maximum degree an interesection can have to be included in results. A four-way stop has a degree of 4.</param>
		/// <returns>The nearest intersection in <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#intersection-address-representation" target="_blank">Intersection Address Representation</a></returns>
		public async Task IntersectionsNearest__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMinDegreeAndMaxDegreeAsync(Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat outputFormat, string point, int maxDistance, IntersectionsNearest__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMinDegreeAndMaxDegreeOutputSRS outputSRS, int minDegree, int maxDegree, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "intersections/nearest."+outputFormat+"?point=" + (point==null? "" : System.Uri.EscapeDataString(point))+"&maxDistance="+maxDistance+"&outputSRS="+outputSRS+"&minDegree="+minDegree+"&maxDegree="+maxDegree;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Find intersections in a geographic area
		/// Represents all intersections within a given area
		/// IntersectionsWithin__outputFormatGetByBboxAndOutputSRSAndMaxResultsAndMinDegreeAndMaxDegree intersections/within.{outputFormat}
		/// </summary>
		/// <param name="outputFormat">Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		///
		///Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)</param>
		/// <param name="bbox">A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target="_blank">bbox</a></param>
		/// <param name="outputSRS">The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a></param>
		/// <param name="maxResults">The maximum number of search results</param>
		/// <param name="minDegree">The minimum degree an intersection can have to be included in results. A dead-end has a degree of 1.</param>
		/// <param name="maxDegree">The maximum degree an interesection can have to be included in results. A four-way stop has a degree of 4.</param>
		/// <returns>A list of selected intersections within the given area. Each intersection is in Each intersection is in <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#intersection-address-representation" target="_blank">Intersection Address Representation</a></returns>
		public async Task IntersectionsWithin__outputFormatGetByBboxAndOutputSRSAndMaxResultsAndMinDegreeAndMaxDegreeAsync(Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat outputFormat, string bbox, IntersectionsWithin__outputFormatGetByBboxAndOutputSRSAndMaxResultsAndMinDegreeAndMaxDegreeOutputSRS outputSRS, int maxResults, int minDegree, int maxDegree, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "intersections/within."+outputFormat+"?bbox=" + (bbox==null? "" : System.Uri.EscapeDataString(bbox))+"&outputSRS="+outputSRS+"&maxResults="+maxResults+"&minDegree="+minDegree+"&maxDegree="+maxDegree;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get an intersection by its unique ID
		/// Represents a individual intersection
		/// Intersections_intersectionID__outputFormatGetByOutputSRS intersections/{intersectionID}.{outputFormat}
		/// </summary>
		/// <param name="intersectionID">A unique intersection identifier</param>
		/// <param name="outputFormat">Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		///
		///Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)</param>
		/// <param name="outputSRS">The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a></param>
		/// <returns>The Intersection with the requested intersectionID in <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#intersection-address-representation" target="_blank">Intersection Address Representation</a></returns>
		public async Task Intersections_intersectionID__outputFormatGetByOutputSRSAsync(string intersectionID, Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat outputFormat, Intersections_intersectionID__outputFormatGetByOutputSRSOutputSRS outputSRS, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "intersections/"+ (intersectionID==null? "" : System.Uri.EscapeDataString(intersectionID))+"."+outputFormat+"&outputSRS="+outputSRS;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Geocode an address and identify site occupants
		/// Represents the set of occupants whose addresses best match a given query address. Every occupant has an associated site which has a standardized address and a coordinate location on the Earth.
		/// OccupantsAddresses__outputFormatGetByAddressStringAndTagsAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPoint occupants/addresses.{outputFormat}
		/// </summary>
		/// <param name="outputFormat">Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		///
		///Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)</param>
		/// <param name="addressString">Occupant name OR Occupant name ** address</param>
		/// <param name="tags">Example: schools;courts;employment<br>A list of tags separated by semicolons.</param>
		/// <param name="locationDescriptor">Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a></param>
		/// <param name="maxResults">The maximum number of search results to return.</param>
		/// <param name="interpolation">accessPoint interpolation method. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#interpolation target="_blank">interpolation</a></param>
		/// <param name="echo">If true, include unmatched address details such as site name in results.</param>
		/// <param name="brief">If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.</param>
		/// <param name="autoComplete">If true, addressString is expected to contain a partial address that requires completion. Not supported for shp, csv, gml formats.</param>
		/// <param name="setBack">The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.</param>
		/// <param name="outputSRS">The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a></param>
		/// <param name="minScore">The minimum score required for a match to be returned. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#minScore target="_blank">minScore</a></param>
		/// <param name="matchPrecision">Example: street,locality.  A comma separated list of individual match precision levels to include in results. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecision target="_blank">matchPrecision</a></param>
		/// <param name="matchPrecisionNot">Example: street,locality.  A comma separated list of individual match precision levels to exclude from results. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#matchPrecisionNot target="_blank">matchPrecisionNot</a></param>
		/// <param name="siteName">A string containing the name of the building, facility, or institution (e.g., Duck Building, Casa Del Mar, Crystal Garden, Bluebird House).See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#siteName target="_blank">siteName</a></param>
		/// <param name="unitDesignator">The type of unit within a house or building. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#unitDesignator target="_blank">unitDesignator</a></param>
		/// <param name="unitNumber">The number of the unit, suite, or apartment within a house or building.</param>
		/// <param name="unitNumberSuffix">A letter that follows the unit number as in Unit 1A or Suite 302B.</param>
		/// <param name="civicNumber">The official number assigned to a site by an address authority. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumber target="_blank">civicNumber</a></param>
		/// <param name="civicNumberSuffix">A letter or fraction that follows the civic number (e.g., the A in 1039A Bledsoe St). See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#civicNumberSuffix target="_blank">civicNumberSuffix</a></param>
		/// <param name="streetName">The official name of the street as assigned by an address authority (e.g., the Douglas in 1175 Douglas Street). See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetName target="_blank">streetName</a></param>
		/// <param name="streetType">The type of street as assigned by a municipality (e.g., the ST in 1175 DOUGLAS St). See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetType target="_blank">streetType</a></param>
		/// <param name="streetDirection">The abbreviated compass direction as defined by Canada Post and B.C. civic addressing authorities. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetDirection target="_blank">streetDirection</a></param>
		/// <param name="streetQualifier">The qualifier of a street name (e.g., the Bridge in Johnson St Bridge)</param>
		/// <param name="localityName">The name of the locality assigned to a given site by an address authority. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#streetDirection target="_blank">streetDirection</a></param>
		/// <param name="provinceCode">The ISO 3166-2 Sub-Country Code. The code for British Columbia is BC.</param>
		/// <param name="localities">A comma separated list of locality names that matched addresses must belong to. For example, setting localities to Nanaimo only returns addresses in Nanaimo</param>
		/// <param name="notLocalities">A comma-separated list of localities to exclude from the search.</param>
		/// <param name="bbox">Example: -126.07929,49.7628,-126.0163,49.7907.  A bounding box (xmin,ymin,xmax,ymax) that limits the search area. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target="_blank">bbox</a></param>
		/// <param name="centre">Example: -124.0165926,49.2296251 .  The coordinates of a centre point (x,y) used to define a bounding circle that will limit the search area. This parameter must be specified together with 'maxDistance'. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#centre target='_blank'>centre</a></param>
		/// <param name="maxDistance">The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.</param>
		/// <param name="extrapolate">If true, uses supplied parcelPoint to derive an appropriate accessPoint.           See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#extrapolate target="_blank">extrapolate</a></param>
		/// <param name="parcelPoint">The coordinates of a point (x,y) known to be inside the parcel containing a given address. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#parcelPoint target="_blank">parcelPoint</a></param>
		/// <returns>A list of matching occupants, sites, and their physical locations. Response document will contain one <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#about-query-representation" target="_blank">About Query Representation</a> and one <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a> plus <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation" target="_blank">Occupant Representation</a> for each matching occupant.</returns>
		public async Task OccupantsAddresses__outputFormatGetByAddressStringAndTagsAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointAsync(
					Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat outputFormat, 
					string addressString, 
					string tags, 
					Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor locationDescriptor, 
					int maxResults, 
					Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointInterpolation interpolation, 
					bool echo, 
					bool brief, 
					bool autoComplete, 
					int setBack, 
					OccupantsAddresses__outputFormatGetByAddressStringAndTagsAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputSRS outputSRS, 
					int minScore, 
					string matchPrecision, 
					string matchPrecisionNot, 
					string siteName, 
					Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointUnitDesignator unitDesignator, 
					string unitNumber, 
					string unitNumberSuffix, 
					string civicNumber, 
					string civicNumberSuffix, 
					string streetName, 
					string streetType, 
					Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointStreetDirection streetDirection, 
					string streetQualifier, 
					string localityName, 
					string provinceCode, 
					string localities, 
					string notLocalities, 
					string bbox, 
					string centre, 
					double maxDistance, 
					bool extrapolate, 
					string parcelPoint, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "occupants/addresses."+outputFormat+"?addressString=" + (addressString==null? "" : System.Uri.EscapeDataString(addressString))+"&tags=" + (tags==null? "" : System.Uri.EscapeDataString(tags))+"&locationDescriptor=" + locationDescriptor+"&maxResults="+maxResults+"&interpolation=" + interpolation+"&echo="+echo+"&brief="+brief+"&autoComplete="+autoComplete+"&setBack="+setBack+"&outputSRS="+outputSRS+"&minScore="+minScore+"&matchPrecision=" + (matchPrecision==null? "" : System.Uri.EscapeDataString(matchPrecision))+"&matchPrecisionNot=" + (matchPrecisionNot==null? "" : System.Uri.EscapeDataString(matchPrecisionNot))+"&siteName=" + (siteName==null? "" : System.Uri.EscapeDataString(siteName))+"&unitDesignator=" + unitDesignator+"&unitNumber=" + (unitNumber==null? "" : System.Uri.EscapeDataString(unitNumber))+"&unitNumberSuffix=" + (unitNumberSuffix==null? "" : System.Uri.EscapeDataString(unitNumberSuffix))+"&civicNumber=" + (civicNumber==null? "" : System.Uri.EscapeDataString(civicNumber))+"&civicNumberSuffix=" + (civicNumberSuffix==null? "" : System.Uri.EscapeDataString(civicNumberSuffix))+"&streetName=" + (streetName==null? "" : System.Uri.EscapeDataString(streetName))+"&streetType=" + (streetType==null? "" : System.Uri.EscapeDataString(streetType))+"&streetDirection=" + streetDirection+"&streetQualifier=" + (streetQualifier==null? "" : System.Uri.EscapeDataString(streetQualifier))+"&localityName=" + (localityName==null? "" : System.Uri.EscapeDataString(localityName))+"&provinceCode=" + (provinceCode==null? "" : System.Uri.EscapeDataString(provinceCode))+"&localities=" + (localities==null? "" : System.Uri.EscapeDataString(localities))+"&notLocalities=" + (notLocalities==null? "" : System.Uri.EscapeDataString(notLocalities))+"&bbox=" + (bbox==null? "" : System.Uri.EscapeDataString(bbox))+"&centre=" + (centre==null? "" : System.Uri.EscapeDataString(centre))+"&maxDistance="+maxDistance+"&extrapolate="+extrapolate+"&parcelPoint=" + (parcelPoint==null? "" : System.Uri.EscapeDataString(parcelPoint));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Find occupants of sites near to a geographic point
		/// Represents occupants near a given point in order of closest to farthest
		/// OccupantsNear__outputFormatGetByPointAndTagsAndMaxDistanceAndOutputSRSAndMaxResultsAndLocationDescriptorAndBriefAndSetBack occupants/near.{outputFormat}
		/// </summary>
		/// <param name="outputFormat">Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		///
		///Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)</param>
		/// <param name="point">The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter.</param>
		/// <param name="tags">Example: schools;courts;employment<br>A list of tags separated by semicolons.</param>
		/// <param name="maxDistance">The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.</param>
		/// <param name="outputSRS">The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a></param>
		/// <param name="maxResults">The maximum number of search results to return.</param>
		/// <param name="locationDescriptor">Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a></param>
		/// <param name="brief">If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.</param>
		/// <param name="setBack">The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.</param>
		/// <returns>A list of selected occupants that are near a given point in order of closest to farther. Each occupant is returned as a <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a> plus a <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation" target="_blank">Occupant Representation</a></returns>
		public async Task OccupantsNear__outputFormatGetByPointAndTagsAndMaxDistanceAndOutputSRSAndMaxResultsAndLocationDescriptorAndBriefAndSetBackAsync(Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat outputFormat, string point, string tags, int maxDistance, OccupantsNear__outputFormatGetByPointAndTagsAndMaxDistanceAndOutputSRSAndMaxResultsAndLocationDescriptorAndBriefAndSetBackOutputSRS outputSRS, int maxResults, Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor locationDescriptor, bool brief, int setBack, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "occupants/near."+outputFormat+"?point=" + (point==null? "" : System.Uri.EscapeDataString(point))+"&tags=" + (tags==null? "" : System.Uri.EscapeDataString(tags))+"&maxDistance="+maxDistance+"&outputSRS="+outputSRS+"&maxResults="+maxResults+"&locationDescriptor=" + locationDescriptor+"&brief="+brief+"&setBack="+setBack;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Find occupants of the site nearest to a geographic point
		/// Represents the closest occupant to a given point
		/// OccupantsNearest__outputFormatGetByPointAndMaxDistanceAndTagsAndOutputSRSAndLocationDescriptorAndBriefAndSetBack occupants/nearest.{outputFormat}
		/// </summary>
		/// <param name="outputFormat">Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		///
		///Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)</param>
		/// <param name="point">The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter.</param>
		/// <param name="maxDistance">The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.</param>
		/// <param name="tags">Example: schools;courts;employment<br>A list of tags separated by semicolons.</param>
		/// <param name="outputSRS">The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a></param>
		/// <param name="locationDescriptor">Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a></param>
		/// <param name="brief">If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.</param>
		/// <param name="setBack">The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.</param>
		/// <returns>The nearest occupant in <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a> plus <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation" target="_blank">Occupant Representation</a></returns>
		public async Task OccupantsNearest__outputFormatGetByPointAndMaxDistanceAndTagsAndOutputSRSAndLocationDescriptorAndBriefAndSetBackAsync(Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat outputFormat, string point, int maxDistance, string tags, OccupantsNearest__outputFormatGetByPointAndMaxDistanceAndTagsAndOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS outputSRS, Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor locationDescriptor, bool brief, int setBack, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "occupants/nearest."+outputFormat+"?point=" + (point==null? "" : System.Uri.EscapeDataString(point))+"&maxDistance="+maxDistance+"&tags=" + (tags==null? "" : System.Uri.EscapeDataString(tags))+"&outputSRS="+outputSRS+"&locationDescriptor=" + locationDescriptor+"&brief="+brief+"&setBack="+setBack;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Find occupants of sites in a geographic area
		/// Represents all occupants within a given area
		/// OccupantsWithin__outputFormatGetByBboxAndTagsAndOutputSRSAndMaxResultsAndLocationDescriptorAndBriefAndSetBack occupants/within.{outputFormat}
		/// </summary>
		/// <param name="outputFormat">Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		///
		///Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)</param>
		/// <param name="bbox">A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target="_blank">bbox</a></param>
		/// <param name="tags">Example: schools;courts;employment<br>A list of tags separated by semicolons.</param>
		/// <param name="outputSRS">The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a></param>
		/// <param name="maxResults">The maximum number of search results to return.</param>
		/// <param name="locationDescriptor">Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a></param>
		/// <param name="brief">If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.</param>
		/// <param name="setBack">The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.</param>
		/// <returns>A list of selected occupants within the given area. Each occupant is returned in a <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a> plus <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation" target="_blank">Occupant Representation</a></returns>
		public async Task OccupantsWithin__outputFormatGetByBboxAndTagsAndOutputSRSAndMaxResultsAndLocationDescriptorAndBriefAndSetBackAsync(Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat outputFormat, string bbox, string tags, OccupantsWithin__outputFormatGetByBboxAndTagsAndOutputSRSAndMaxResultsAndLocationDescriptorAndBriefAndSetBackOutputSRS outputSRS, int maxResults, Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor locationDescriptor, bool brief, int setBack, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "occupants/within."+outputFormat+"?bbox=" + (bbox==null? "" : System.Uri.EscapeDataString(bbox))+"&tags=" + (tags==null? "" : System.Uri.EscapeDataString(tags))+"&outputSRS="+outputSRS+"&maxResults="+maxResults+"&locationDescriptor=" + locationDescriptor+"&brief="+brief+"&setBack="+setBack;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get an occupant (of a site) by its unique ID
		/// Represents an individual occupant
		/// Occupants_occupantID__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBack occupants/{occupantID}.{outputFormat}
		/// </summary>
		/// <param name="occupantID">Occupant identifier</param>
		/// <param name="outputFormat">Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		///
		///Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)</param>
		/// <param name="outputSRS">The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a></param>
		/// <param name="locationDescriptor">Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a></param>
		/// <param name="brief">If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.</param>
		/// <param name="setBack">The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.</param>
		/// <returns>The occupant with the requested occupantID in <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a> plus <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#occupant-representation" target="_blank">Occupant Representation</a></returns>
		public async Task Occupants_occupantID__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBackAsync(string occupantID, Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat outputFormat, Occupants_occupantID__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS outputSRS, Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor locationDescriptor, bool brief, int setBack, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "occupants/"+ (occupantID==null? "" : System.Uri.EscapeDataString(occupantID))+"."+outputFormat+"&outputSRS="+outputSRS+"&locationDescriptor=" + locationDescriptor+"&brief="+brief+"&setBack="+setBack;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a comma-separated string of all pids for a given site
		/// Represents all parcel identifiers associated with an individual site
		/// ParcelsPids_siteID__outputFormatGet parcels/pids/{siteID}.{outputFormat}
		/// </summary>
		/// <param name="siteID">A unique, but not immutable, site identifier.</param>
		/// <param name="outputFormat">Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		///
		///Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)</param>
		/// <returns>A comma-separated string containing all the parcel identifiers associated with the requested siteID</returns>
		public async Task ParcelsPids_siteID__outputFormatGetAsync(string siteID, Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat outputFormat, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "parcels/pids/"+ (siteID==null? "" : System.Uri.EscapeDataString(siteID))+"."+outputFormat;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Find sites near to a geographic point
		/// Represents sites near a given point in the order of closest to farthest
		/// SitesNear__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMaxResultsAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivic sites/near.{outputFormat}
		/// </summary>
		/// <param name="outputFormat">Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		///
		///Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)</param>
		/// <param name="point">The point (x,y) from which the nearby sites will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter.</param>
		/// <param name="maxDistance">The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.</param>
		/// <param name="outputSRS">The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a></param>
		/// <param name="maxResults">The maximum number of search results to return.</param>
		/// <param name="locationDescriptor">Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a></param>
		/// <param name="setBack">The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.</param>
		/// <param name="brief">If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.</param>
		/// <param name="excludeUnits">If true, excludes sites that are units of a parent site</param>
		/// <param name="onlyCivic">If true, excludes sites without a civic address</param>
		/// <returns>A list of selected sites that are near a given point in order of closest to farther. Each site in the response document is structured as a <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a></returns>
		public async Task SitesNear__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMaxResultsAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivicAsync(Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat outputFormat, string point, int maxDistance, SitesNear__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMaxResultsAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivicOutputSRS outputSRS, int maxResults, Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor locationDescriptor, int setBack, bool brief, bool excludeUnits, bool onlyCivic, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sites/near."+outputFormat+"?point=" + (point==null? "" : System.Uri.EscapeDataString(point))+"&maxDistance="+maxDistance+"&outputSRS="+outputSRS+"&maxResults="+maxResults+"&locationDescriptor=" + locationDescriptor+"&setBack="+setBack+"&brief="+brief+"&excludeUnits="+excludeUnits+"&onlyCivic="+onlyCivic;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Find the site nearest to a geographic point
		/// Represents the site nearest a given point
		/// SitesNearest__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivic sites/nearest.{outputFormat}
		/// </summary>
		/// <param name="outputFormat">Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		///
		///Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)</param>
		/// <param name="point">Centre point of search. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#point target="_blank">point</a></param>
		/// <param name="maxDistance">The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.</param>
		/// <param name="outputSRS">The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a></param>
		/// <param name="locationDescriptor">Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a></param>
		/// <param name="setBack">The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.</param>
		/// <param name="brief">If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.</param>
		/// <param name="excludeUnits">If true, excludes sites that are units of a parent site</param>
		/// <param name="onlyCivic">If true, excludes sites without a civic address</param>
		/// <returns>The nearest site in <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a></returns>
		public async Task SitesNearest__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivicAsync(Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat outputFormat, string point, int maxDistance, SitesNearest__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivicOutputSRS outputSRS, Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor locationDescriptor, int setBack, bool brief, bool excludeUnits, bool onlyCivic, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sites/nearest."+outputFormat+"?point=" + (point==null? "" : System.Uri.EscapeDataString(point))+"&maxDistance="+maxDistance+"&outputSRS="+outputSRS+"&locationDescriptor=" + locationDescriptor+"&setBack="+setBack+"&brief="+brief+"&excludeUnits="+excludeUnits+"&onlyCivic="+onlyCivic;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Find sites in a geographic area
		/// Represents sites within a given area
		/// SitesWithin__outputFormatGetByBboxAndOutputSRSAndMaxResultsAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivic sites/within.{outputFormat}
		/// </summary>
		/// <param name="outputFormat">Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		///
		///Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)</param>
		/// <param name="bbox">A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target="_blank">bbox</a></param>
		/// <param name="outputSRS">The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a></param>
		/// <param name="maxResults">The maximum number of search results to return.</param>
		/// <param name="locationDescriptor">Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a></param>
		/// <param name="setBack">The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.</param>
		/// <param name="brief">If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.</param>
		/// <param name="excludeUnits">If true, excludes sites that are units of a parent site</param>
		/// <param name="onlyCivic">If true, excludes sites without a civic address</param>
		/// <returns>A list of selected sites within a given area. Each site in the response document is structured as a <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a></returns>
		public async Task SitesWithin__outputFormatGetByBboxAndOutputSRSAndMaxResultsAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivicAsync(Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat outputFormat, string bbox, SitesWithin__outputFormatGetByBboxAndOutputSRSAndMaxResultsAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivicOutputSRS outputSRS, int maxResults, Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor locationDescriptor, int setBack, bool brief, bool excludeUnits, bool onlyCivic, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sites/within."+outputFormat+"?bbox=" + (bbox==null? "" : System.Uri.EscapeDataString(bbox))+"&outputSRS="+outputSRS+"&maxResults="+maxResults+"&locationDescriptor=" + locationDescriptor+"&setBack="+setBack+"&brief="+brief+"&excludeUnits="+excludeUnits+"&onlyCivic="+onlyCivic;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get a site by its unique ID
		/// Represents an individual site
		/// Sites_siteID__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBack sites/{siteID}.{outputFormat}
		/// </summary>
		/// <param name="siteID">A unique, but not immutable, site identifier.</param>
		/// <param name="outputFormat">Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		///
		///Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)</param>
		/// <param name="outputSRS">The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a></param>
		/// <param name="locationDescriptor">Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a></param>
		/// <param name="brief">If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.</param>
		/// <param name="setBack">The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.</param>
		/// <returns>The site with the requested siteID in <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a></returns>
		public async Task Sites_siteID__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBackAsync(string siteID, Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat outputFormat, Sites_siteID__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS outputSRS, Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor locationDescriptor, bool brief, int setBack, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sites/"+ (siteID==null? "" : System.Uri.EscapeDataString(siteID))+"."+outputFormat+"&outputSRS="+outputSRS+"&locationDescriptor=" + locationDescriptor+"&brief="+brief+"&setBack="+setBack;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Represents all subsites of a given site
		/// Represents all subsites of a given site
		/// Sites_siteIDSubsites__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBack sites/{siteID}/subsites.{outputFormat}
		/// </summary>
		/// <param name="siteID">A unique, but not immutable, site identifier.</param>
		/// <param name="outputFormat">Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
		///
		///Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)</param>
		/// <param name="outputSRS">The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a></param>
		/// <param name="locationDescriptor">Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a></param>
		/// <param name="brief">If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.</param>
		/// <param name="setBack">The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.</param>
		/// <returns>Returns all subsites of a given site in <a href="https://github.com/bcgov/ols-geocoder/blob/gh-pages/geocoder-developer-guide.md#site-address-representation" target="_blank">Site Address Representation</a></returns>
		public async Task Sites_siteIDSubsites__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBackAsync(string siteID, Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat outputFormat, Sites_siteIDSubsites__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS outputSRS, Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor locationDescriptor, bool brief, int setBack, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "sites/"+ (siteID==null? "" : System.Uri.EscapeDataString(siteID))+"/subsites."+outputFormat+"&outputSRS="+outputSRS+"&locationDescriptor=" + locationDescriptor+"&brief="+brief+"&setBack="+setBack;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="json")]
		json = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="geojson")]
		geojson = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="xhtml")]
		xhtml = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="kml")]
		kml = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="gml")]
		gml = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="csv")]
		csv = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="shpz")]
		shpz = 6,
	}
	
	public enum Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointLocationDescriptor
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="any")]
		any = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="accessPoint")]
		accessPoint = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="frontDoorPoint")]
		frontDoorPoint = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="parcelPoint")]
		parcelPoint = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="rooftopPoint")]
		rooftopPoint = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="routingPoint")]
		routingPoint = 5,
	}
	
	public enum Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointInterpolation
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="adaptive")]
		adaptive = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="linear")]
		linear = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="none")]
		none = 2,
	}
	
	public enum Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputSRS
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4326 = 4326,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4269 = 4269,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_3005 = 3005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26907 = 26907,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26908 = 26908,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26909 = 26909,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26910 = 26910,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26911 = 26911,
	}
	
	public enum Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointUnitDesignator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="APT")]
		APT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BLDG")]
		BLDG = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BSMT")]
		BSMT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FLR")]
		FLR = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LOBBY")]
		LOBBY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LWR")]
		LWR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PAD")]
		PAD = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PH")]
		PH = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REAR")]
		REAR = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RM")]
		RM = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SIDE")]
		SIDE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SITE")]
		SITE = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SUITE")]
		SUITE = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TH")]
		TH = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UNIT")]
		UNIT = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UPPR")]
		UPPR = 15,
	}
	
	public enum Addresses__outputFormatGetByAddressStringAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointStreetDirection
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="N")]
		N = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="S")]
		S = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="E")]
		E = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="W")]
		W = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="O")]
		O = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NE")]
		NE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NO")]
		NO = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NW")]
		NW = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SE")]
		SE = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SO")]
		SO = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SW")]
		SW = 10,
	}
	
	public enum IntersectionsNear__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMaxResultsAndMinDegreeAndMaxDegreeOutputSRS
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4326 = 4326,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4269 = 4269,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_3005 = 3005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26907 = 26907,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26908 = 26908,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26909 = 26909,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26910 = 26910,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26911 = 26911,
	}
	
	public enum IntersectionsNearest__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMinDegreeAndMaxDegreeOutputSRS
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4326 = 4326,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4269 = 4269,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_3005 = 3005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26907 = 26907,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26908 = 26908,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26909 = 26909,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26910 = 26910,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26911 = 26911,
	}
	
	public enum IntersectionsWithin__outputFormatGetByBboxAndOutputSRSAndMaxResultsAndMinDegreeAndMaxDegreeOutputSRS
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4326 = 4326,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4269 = 4269,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_3005 = 3005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26907 = 26907,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26908 = 26908,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26909 = 26909,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26910 = 26910,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26911 = 26911,
	}
	
	public enum Intersections_intersectionID__outputFormatGetByOutputSRSOutputSRS
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4326 = 4326,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4269 = 4269,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_3005 = 3005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26907 = 26907,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26908 = 26908,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26909 = 26909,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26910 = 26910,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26911 = 26911,
	}
	
	public enum OccupantsAddresses__outputFormatGetByAddressStringAndTagsAndLocationDescriptorAndMaxResultsAndInterpolationAndEchoAndBriefAndAutoCompleteAndSetBackAndOutputSRSAndMinScoreAndMatchPrecisionAndMatchPrecisionNotAndSiteNameAndUnitDesignatorAndUnitNumberAndUnitNumberSuffixAndCivicNumberAndCivicNumberSuffixAndStreetNameAndStreetTypeAndStreetDirectionAndStreetQualifierAndLocalityNameAndProvinceCodeAndLocalitiesAndNotLocalitiesAndBboxAndCentreAndMaxDistanceAndExtrapolateAndParcelPointOutputSRS
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4326 = 4326,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4269 = 4269,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_3005 = 3005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26907 = 26907,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26908 = 26908,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26909 = 26909,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26910 = 26910,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26911 = 26911,
	}
	
	public enum OccupantsNear__outputFormatGetByPointAndTagsAndMaxDistanceAndOutputSRSAndMaxResultsAndLocationDescriptorAndBriefAndSetBackOutputSRS
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4326 = 4326,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4269 = 4269,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_3005 = 3005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26907 = 26907,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26908 = 26908,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26909 = 26909,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26910 = 26910,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26911 = 26911,
	}
	
	public enum OccupantsNearest__outputFormatGetByPointAndMaxDistanceAndTagsAndOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4326 = 4326,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4269 = 4269,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_3005 = 3005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26907 = 26907,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26908 = 26908,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26909 = 26909,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26910 = 26910,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26911 = 26911,
	}
	
	public enum OccupantsWithin__outputFormatGetByBboxAndTagsAndOutputSRSAndMaxResultsAndLocationDescriptorAndBriefAndSetBackOutputSRS
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4326 = 4326,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4269 = 4269,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_3005 = 3005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26907 = 26907,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26908 = 26908,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26909 = 26909,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26910 = 26910,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26911 = 26911,
	}
	
	public enum Occupants_occupantID__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4326 = 4326,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4269 = 4269,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_3005 = 3005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26907 = 26907,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26908 = 26908,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26909 = 26909,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26910 = 26910,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26911 = 26911,
	}
	
	public enum SitesNear__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndMaxResultsAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivicOutputSRS
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4326 = 4326,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4269 = 4269,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_3005 = 3005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26907 = 26907,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26908 = 26908,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26909 = 26909,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26910 = 26910,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26911 = 26911,
	}
	
	public enum SitesNearest__outputFormatGetByPointAndMaxDistanceAndOutputSRSAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivicOutputSRS
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4326 = 4326,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4269 = 4269,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_3005 = 3005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26907 = 26907,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26908 = 26908,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26909 = 26909,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26910 = 26910,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26911 = 26911,
	}
	
	public enum SitesWithin__outputFormatGetByBboxAndOutputSRSAndMaxResultsAndLocationDescriptorAndSetBackAndBriefAndExcludeUnitsAndOnlyCivicOutputSRS
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4326 = 4326,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4269 = 4269,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_3005 = 3005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26907 = 26907,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26908 = 26908,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26909 = 26909,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26910 = 26910,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26911 = 26911,
	}
	
	public enum Sites_siteID__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4326 = 4326,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4269 = 4269,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_3005 = 3005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26907 = 26907,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26908 = 26908,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26909 = 26909,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26910 = 26910,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26911 = 26911,
	}
	
	public enum Sites_siteIDSubsites__outputFormatGetByOutputSRSAndLocationDescriptorAndBriefAndSetBackOutputSRS
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4326 = 4326,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_4269 = 4269,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_3005 = 3005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26907 = 26907,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26908 = 26908,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26909 = 26909,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26910 = 26910,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_26911 = 26911,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

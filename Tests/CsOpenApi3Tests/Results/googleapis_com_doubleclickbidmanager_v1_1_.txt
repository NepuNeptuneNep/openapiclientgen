//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// A channel grouping defines a set of rules that can be used to categorize events in a path report.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ChannelGrouping
	{
		
		/// <summary>
		/// The name to apply to an event that does not match any of the rules in the channel grouping.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fallbackName")]
		public string FallbackName { get; set; }
		
		/// <summary>
		/// Channel Grouping name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Rules within Channel Grouping. There is a limit of 100 rules that can be set per channel grouping.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rules")]
		public Rule[] Rules { get; set; }
	}
	
	/// <summary>
	/// A Rule defines a name, and a boolean expression in [conjunctive normal form](http: //mathworld.wolfram.com/ConjunctiveNormalForm.html){.external} that can be // applied to a path event to determine if that name should be applied.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Rule
	{
		
		[System.Runtime.Serialization.DataMember(Name="disjunctiveMatchStatements")]
		public DisjunctiveMatchStatement[] DisjunctiveMatchStatements { get; set; }
		
		/// <summary>
		/// Rule name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// DisjunctiveMatchStatement that OR's all contained filters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DisjunctiveMatchStatement
	{
		
		/// <summary>
		/// Filters. There is a limit of 100 filters that can be set per disjunctive match statement.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventFilters")]
		public EventFilter[] EventFilters { get; set; }
	}
	
	/// <summary>
	/// Defines the type of filter to be applied to the path, a DV360 event dimension filter.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EventFilter
	{
		
		/// <summary>
		/// Dimension Filter on path events.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dimensionFilter")]
		public PathQueryOptionsFilter DimensionFilter { get; set; }
	}
	
	/// <summary>
	/// Dimension Filter on path events.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PathQueryOptionsFilter
	{
		
		/// <summary>
		/// Dimension the filter is applied to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public System.Nullable<PathQueryOptionsFilterFilter> Filter { get; set; }
		
		/// <summary>
		/// Indicates how the filter should be matched to the value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="match")]
		public System.Nullable<PathQueryOptionsFilterMatch> Match { get; set; }
		
		/// <summary>
		/// Value to filter on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum PathQueryOptionsFilterFilter
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_DATE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_DAY_OF_WEEK = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_WEEK = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_MONTH = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_YEAR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TIME_OF_DAY = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CONVERSION_DELAY = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CREATIVE_ID = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CREATIVE_SIZE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CREATIVE_TYPE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_EXCHANGE_ID = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_AD_POSITION = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PUBLIC_INVENTORY = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_INVENTORY_SOURCE = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CITY = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_REGION = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_DMA = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_COUNTRY = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_SITE_ID = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CHANNEL_ID = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PARTNER = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ADVERTISER = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_INSERTION_ORDER = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_LINE_ITEM = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PARTNER_CURRENCY = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ADVERTISER_CURRENCY = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ADVERTISER_TIMEZONE = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_LINE_ITEM_TYPE = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_USER_LIST = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_USER_LIST_FIRST_PARTY = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_USER_LIST_THIRD_PARTY = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TARGETED_USER_LIST = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_DATA_PROVIDER = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ORDER_ID = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VIDEO_PLAYER_SIZE = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VIDEO_DURATION_SECONDS = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_KEYWORD = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PAGE_CATEGORY = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CAMPAIGN_DAILY_FREQUENCY = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_LINE_ITEM_DAILY_FREQUENCY = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_LINE_ITEM_LIFETIME_FREQUENCY = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_OS = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_BROWSER = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CARRIER = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_SITE_LANGUAGE = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_INVENTORY_FORMAT = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ZIP_CODE = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VIDEO_RATING_TIER = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VIDEO_FORMAT_SUPPORT = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VIDEO_SKIPPABLE_SUPPORT = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VIDEO_CREATIVE_DURATION = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PAGE_LAYOUT = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VIDEO_AD_POSITION_IN_STREAM = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_AGE = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_GENDER = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_QUARTER = 56,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_CONVERSION_TYPE = 57,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_MOBILE_GEO = 58,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_MRAID_SUPPORT = 59,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ACTIVE_VIEW_EXPECTED_VIEWABILITY = 60,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VIDEO_CREATIVE_DURATION_SKIPPABLE = 61,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_NIELSEN_COUNTRY_CODE = 62,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_NIELSEN_DEVICE_ID = 63,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_NIELSEN_GENDER = 64,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_NIELSEN_AGE = 65,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_INVENTORY_SOURCE_TYPE = 66,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CREATIVE_WIDTH = 67,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CREATIVE_HEIGHT = 68,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_DFP_ORDER_ID = 69,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_AGE = 70,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_GENDER = 71,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_PARENTAL_STATUS = 72,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_REMARKETING_LIST = 73,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_INTEREST = 74,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_AD_GROUP_ID = 75,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_AD_GROUP_AD_ID = 76,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_IAR_LANGUAGE = 77,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_IAR_GENDER = 78,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_IAR_AGE = 79,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_IAR_CATEGORY = 80,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_IAR_COUNTRY = 81,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_IAR_CITY = 82,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_IAR_REGION = 83,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_IAR_ZIPCODE = 84,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_IAR_REMARKETING_LIST = 85,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_IAR_INTEREST = 86,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_IAR_PARENTAL_STATUS = 87,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_IAR_TIME_OF_DAY = 88,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_CUSTOM_AFFINITY = 89,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_CATEGORY = 90,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_KEYWORD = 91,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_PLACEMENT = 92,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_URL = 93,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_COUNTRY = 94,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_REGION = 95,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_CITY = 96,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_DMA = 97,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_ZIPCODE = 98,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_NOT_SUPPORTED = 99,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_MEDIA_PLAN = 100,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_IAR_YOUTUBE_CHANNEL = 101,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_IAR_YOUTUBE_VIDEO = 102,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_SKIPPABLE_SUPPORT = 103,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_COMPANION_CREATIVE_ID = 104,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_BUDGET_SEGMENT_DESCRIPTION = 105,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_FLOODLIGHT_ACTIVITY_ID = 106,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_DEVICE_MODEL = 107,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_DEVICE_MAKE = 108,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_DEVICE_TYPE = 109,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CREATIVE_ATTRIBUTE = 110,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_INVENTORY_COMMITMENT_TYPE = 111,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_INVENTORY_RATE_TYPE = 112,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_INVENTORY_DELIVERY_METHOD = 113,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_INVENTORY_SOURCE_EXTERNAL_ID = 114,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_AUTHORIZED_SELLER_STATE = 115,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VIDEO_DURATION_SECONDS_RANGE = 116,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PARTNER_NAME = 117,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PARTNER_STATUS = 118,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ADVERTISER_NAME = 119,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ADVERTISER_INTEGRATION_CODE = 120,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ADVERTISER_INTEGRATION_STATUS = 121,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CARRIER_NAME = 122,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CHANNEL_NAME = 123,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CITY_NAME = 124,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_COMPANION_CREATIVE_NAME = 125,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_USER_LIST_FIRST_PARTY_NAME = 126,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_USER_LIST_THIRD_PARTY_NAME = 127,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_NIELSEN_RESTATEMENT_DATE = 128,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_NIELSEN_DATE_RANGE = 129,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_INSERTION_ORDER_NAME = 130,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_REGION_NAME = 131,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_DMA_NAME = 132,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_IAR_REGION_NAME = 133,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_DMA_NAME = 134,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_REGION_NAME = 135,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ACTIVE_VIEW_CUSTOM_METRIC_ID = 136,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ACTIVE_VIEW_CUSTOM_METRIC_NAME = 137,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_AD_TYPE = 138,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ALGORITHM = 139,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ALGORITHM_ID = 140,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_AMP_PAGE_REQUEST = 141,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ANONYMOUS_INVENTORY_MODELING = 142,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_APP_URL = 143,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_APP_URL_EXCLUDED = 144,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ATTRIBUTED_USERLIST = 145,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ATTRIBUTED_USERLIST_COST = 146,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ATTRIBUTED_USERLIST_TYPE = 147,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ATTRIBUTION_MODEL = 148,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_AUDIENCE_LIST = 149,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_AUDIENCE_LIST_COST = 150,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_AUDIENCE_LIST_TYPE = 151,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_AUDIENCE_NAME = 152,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_AUDIENCE_TYPE = 153,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_BILLABLE_OUTCOME = 154,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_BRAND_LIFT_TYPE = 155,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CHANNEL_TYPE = 156,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CM_PLACEMENT_ID = 157,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CONVERSION_SOURCE = 158,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CONVERSION_SOURCE_ID = 159,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_COUNTRY_ID = 160,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CREATIVE = 161,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CREATIVE_ASSET = 162,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CREATIVE_INTEGRATION_CODE = 163,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CREATIVE_RENDERED_IN_AMP = 164,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CREATIVE_SOURCE = 165,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CREATIVE_STATUS = 166,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_DATA_PROVIDER_NAME = 167,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_DETAILED_DEMOGRAPHICS = 168,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_DETAILED_DEMOGRAPHICS_ID = 169,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_DEVICE = 170,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_GAM_INSERTION_ORDER = 171,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_GAM_LINE_ITEM = 172,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_GAM_LINE_ITEM_ID = 173,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_DIGITAL_CONTENT_LABEL = 174,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_DOMAIN = 175,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ELIGIBLE_COOKIES_ON_FIRST_PARTY_AUDIENCE_LIST = 176,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ELIGIBLE_COOKIES_ON_THIRD_PARTY_AUDIENCE_LIST_AND_INTEREST = 177,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_EXCHANGE = 178,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_EXCHANGE_CODE = 179,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_EXTENSION = 180,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_EXTENSION_STATUS = 181,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_EXTENSION_TYPE = 182,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_FIRST_PARTY_AUDIENCE_LIST_COST = 183,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_FIRST_PARTY_AUDIENCE_LIST_TYPE = 184,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_FLOODLIGHT_ACTIVITY = 185,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_FORMAT = 186,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_GMAIL_AGE = 187,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_GMAIL_CITY = 188,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_GMAIL_COUNTRY = 189,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_GMAIL_COUNTRY_NAME = 190,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_GMAIL_DEVICE_TYPE = 191,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_GMAIL_DEVICE_TYPE_NAME = 192,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_GMAIL_GENDER = 193,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_GMAIL_REGION = 194,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_GMAIL_REMARKETING_LIST = 195,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_HOUSEHOLD_INCOME = 196,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_IMPRESSION_COUNTING_METHOD = 197,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_YOUTUBE_PROGRAMMATIC_GUARANTEED_INSERTION_ORDER = 198,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_INSERTION_ORDER_INTEGRATION_CODE = 199,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_INSERTION_ORDER_STATUS = 200,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_INTEREST = 201,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_INVENTORY_SOURCE_GROUP = 202,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_INVENTORY_SOURCE_GROUP_ID = 203,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_INVENTORY_SOURCE_ID = 204,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_INVENTORY_SOURCE_NAME = 205,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_LIFE_EVENT = 206,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_LIFE_EVENTS = 207,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_LINE_ITEM_INTEGRATION_CODE = 208,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_LINE_ITEM_NAME = 209,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_LINE_ITEM_STATUS = 210,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_MATCH_RATIO = 211,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_MEASUREMENT_SOURCE = 212,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_MEDIA_PLAN_NAME = 213,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PARENTAL_STATUS = 214,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PLACEMENT_ALL_YOUTUBE_CHANNELS = 215,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PLATFORM = 216,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PLAYBACK_METHOD = 217,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_POSITION_IN_CONTENT = 218,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PUBLISHER_PROPERTY = 219,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PUBLISHER_PROPERTY_ID = 220,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PUBLISHER_PROPERTY_SECTION = 221,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PUBLISHER_PROPERTY_SECTION_ID = 222,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_REFUND_REASON = 223,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_REMARKETING_LIST = 224,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_REWARDED = 225,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_SENSITIVE_CATEGORY = 226,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_SERVED_PIXEL_DENSITY = 227,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TARGETED_DATA_PROVIDERS = 228,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_THIRD_PARTY_AUDIENCE_LIST_COST = 229,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_THIRD_PARTY_AUDIENCE_LIST_TYPE = 230,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_AD = 231,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_AD_GROUP = 232,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_DETAILED_DEMOGRAPHICS = 233,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_DETAILED_DEMOGRAPHICS_ID = 234,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_HOUSEHOLD_INCOME = 235,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_IAR_COUNTRY_NAME = 236,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_REMARKETING_LIST_NAME = 237,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VARIANT_ID = 238,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VARIANT_NAME = 239,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VARIANT_VERSION = 240,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VERIFICATION_VIDEO_PLAYER_SIZE = 241,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VERIFICATION_VIDEO_POSITION = 242,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VIDEO_COMPANION_CREATIVE_SIZE = 243,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VIDEO_CONTINUOUS_PLAY = 244,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VIDEO_DURATION = 245,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_YOUTUBE_ADAPTED_AUDIENCE_LIST = 246,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_YOUTUBE_AD_VIDEO = 247,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_YOUTUBE_AD_VIDEO_ID = 248,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_YOUTUBE_CHANNEL = 249,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_YOUTUBE_PROGRAMMATIC_GUARANTEED_ADVERTISER = 250,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_YOUTUBE_PROGRAMMATIC_GUARANTEED_PARTNER = 251,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_YOUTUBE_VIDEO = 252,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_ZIP_POSTAL_CODE = 253,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PLACEMENT_NAME_ALL_YOUTUBE_CHANNELS = 254,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_PLACEMENT_ID = 255,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PATH_PATTERN_ID = 256,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PATH_EVENT_INDEX = 257,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_EVENT_TYPE = 258,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CHANNEL_GROUPING = 259,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_OM_SDK_AVAILABLE = 260,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_DATA_SOURCE = 261,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_CM360_PLACEMENT_ID = 262,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_CLICK_TYPE_NAME = 263,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_AD_TYPE_NAME = 264,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VIDEO_CONTENT_DURATION = 265,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_MATCHED_GENRE_TARGET = 266,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VIDEO_CONTENT_LIVE_STREAM = 267,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_BUDGET_SEGMENT_TYPE = 268,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_BUDGET_SEGMENT_BUDGET = 269,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_BUDGET_SEGMENT_START_DATE = 270,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_BUDGET_SEGMENT_END_DATE = 271,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_BUDGET_SEGMENT_PACING_PERCENTAGE = 272,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_LINE_ITEM_BUDGET = 273,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_LINE_ITEM_START_DATE = 274,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_LINE_ITEM_END_DATE = 275,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_INSERTION_ORDER_GOAL_TYPE = 276,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_LINE_ITEM_PACING_PERCENTAGE = 277,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_INSERTION_ORDER_GOAL_VALUE = 278,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_OMID_CAPABLE = 279,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VENDOR_MEASUREMENT_MODE = 280,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_IMPRESSION_LOSS_REJECTION_REASON = 281,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_START = 282,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_FIRST_QUARTILE = 283,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_MID_POINT = 284,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_THIRD_QUARTILE = 285,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VERIFICATION_VIDEO_PLAYER_SIZE_COMPLETE = 286,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VERIFICATION_VIDEO_RESIZED = 287,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VERIFICATION_AUDIBILITY_START = 288,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_VERIFICATION_AUDIBILITY_COMPLETE = 289,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_MEDIA_TYPE = 290,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_AUDIO_FEED_TYPE_NAME = 291,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_TRUEVIEW_TARGETING_EXPANSION = 292,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FILTER_PUBLISHER_TRAFFIC_SOURCE = 293,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum PathQueryOptionsFilterMatch
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXACT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARTIAL = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BEGINS_WITH = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WILDCARD_EXPRESSION = 4,
	}
	
	/// <summary>
	/// Filter used to match traffic data in your report.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class FilterPair
	{
		
		/// <summary>
		/// Filter type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public PathQueryOptionsFilterFilter Type { get; set; }
		
		/// <summary>
		/// Filter value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// List queries response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListQueriesResponse
	{
		
		/// <summary>
		/// Identifies what kind of resource this is. Value: the fixed string "doubleclickbidmanager#listQueriesResponse".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kind")]
		public string Kind { get; set; }
		
		/// <summary>
		/// Next page's pagination token if one exists.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Retrieved queries.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queries")]
		public Query[] Queries { get; set; }
	}
	
	/// <summary>
	/// Represents a query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Query
	{
		
		/// <summary>
		/// Identifies what kind of resource this is. Value: the fixed string "doubleclickbidmanager#query".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kind")]
		public string Kind { get; set; }
		
		/// <summary>
		/// Query metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public QueryMetadata Metadata { get; set; }
		
		/// <summary>
		/// Parameters of a query or report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="params")]
		public Parameters Params { get; set; }
		
		/// <summary>
		/// Query ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryId")]
		public string QueryId { get; set; }
		
		/// <summary>
		/// The ending time for the data that is shown in the report. Note, reportDataEndTimeMs is required if metadata.dataRange is CUSTOM_DATES and ignored otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportDataEndTimeMs")]
		public string ReportDataEndTimeMs { get; set; }
		
		/// <summary>
		/// The starting time for the data that is shown in the report. Note, reportDataStartTimeMs is required if metadata.dataRange is CUSTOM_DATES and ignored otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportDataStartTimeMs")]
		public string ReportDataStartTimeMs { get; set; }
		
		/// <summary>
		/// Information on how frequently and when to run a query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="schedule")]
		public QuerySchedule Schedule { get; set; }
		
		/// <summary>
		/// Canonical timezone code for report data time. Defaults to America/New_York.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezoneCode")]
		public string TimezoneCode { get; set; }
	}
	
	/// <summary>
	/// Query metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class QueryMetadata
	{
		
		/// <summary>
		/// Range of report data.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataRange")]
		public System.Nullable<QueryMetadataDataRange> DataRange { get; set; }
		
		/// <summary>
		/// Format of the generated report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="format")]
		public System.Nullable<QueryMetadataFormat> Format { get; set; }
		
		/// <summary>
		/// The path to the location in Google Cloud Storage where the latest report is stored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="googleCloudStoragePathForLatestReport")]
		public string GoogleCloudStoragePathForLatestReport { get; set; }
		
		/// <summary>
		/// The path in Google Drive for the latest report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="googleDrivePathForLatestReport")]
		public string GoogleDrivePathForLatestReport { get; set; }
		
		/// <summary>
		/// The time when the latest report started to run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latestReportRunTimeMs")]
		public string LatestReportRunTimeMs { get; set; }
		
		/// <summary>
		/// Locale of the generated reports. Valid values are cs CZECH de GERMAN en ENGLISH es SPANISH fr FRENCH it ITALIAN ja JAPANESE ko KOREAN pl POLISH pt-BR BRAZILIAN_PORTUGUESE ru RUSSIAN tr TURKISH uk UKRAINIAN zh-CN CHINA_CHINESE zh-TW TAIWAN_CHINESE An locale string not in the list above will generate reports in English.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="locale")]
		public string Locale { get; set; }
		
		/// <summary>
		/// Number of reports that have been generated for the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportCount")]
		public System.Nullable<System.Int32> ReportCount { get; set; }
		
		/// <summary>
		/// Whether the latest report is currently running.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="running")]
		public System.Nullable<System.Boolean> Running { get; set; }
		
		/// <summary>
		/// Whether to send an email notification when a report is ready. Default to false.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sendNotification")]
		public System.Nullable<System.Boolean> SendNotification { get; set; }
		
		/// <summary>
		/// List of email addresses which are sent email notifications when the report is finished. Separate from sendNotification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="shareEmailAddress")]
		public string[] ShareEmailAddress { get; set; }
		
		/// <summary>
		/// Query title. It is used to name the reports generated from this query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum QueryMetadataDataRange
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM_DATES = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CURRENT_DAY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREVIOUS_DAY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEK_TO_DATE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTH_TO_DATE = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUARTER_TO_DATE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YEAR_TO_DATE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREVIOUS_WEEK = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREVIOUS_HALF_MONTH = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREVIOUS_MONTH = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREVIOUS_QUARTER = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREVIOUS_YEAR = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAST_7_DAYS = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAST_30_DAYS = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAST_90_DAYS = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAST_365_DAYS = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_TIME = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAST_14_DAYS = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_NOT_SUPPORTED = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAST_60_DAYS = 19,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum QueryMetadataFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CSV = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXCEL_CSV = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XLSX = 2,
	}
	
	/// <summary>
	/// Parameters of a query or report.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Parameters
	{
		
		/// <summary>
		/// Filters used to match traffic data in your report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public FilterPair[] Filters { get; set; }
		
		/// <summary>
		/// Data is grouped by the filters listed in this field.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="groupBys")]
		public PathQueryOptionsFilterFilter[] GroupBys { get; set; }
		
		/// <summary>
		/// Deprecated. This field is no longer in use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="includeInviteData")]
		public System.Nullable<System.Boolean> IncludeInviteData { get; set; }
		
		/// <summary>
		/// Metrics to include as columns in your report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metrics")]
		public string[] Metrics { get; set; }
		
		/// <summary>
		/// Additional query options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="options")]
		public Options Options { get; set; }
		
		/// <summary>
		/// Report type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<ParametersType> Type { get; set; }
	}
	
	/// <summary>
	/// Additional query options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Options
	{
		
		/// <summary>
		/// Set to true and filter your report by `FILTER_INSERTION_ORDER` or `FILTER_LINE_ITEM` to include data for audience lists specifically targeted by those items.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="includeOnlyTargetedUserLists")]
		public System.Nullable<System.Boolean> IncludeOnlyTargetedUserLists { get; set; }
		
		/// <summary>
		/// Path Query Options for Report Options.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pathQueryOptions")]
		public PathQueryOptions PathQueryOptions { get; set; }
	}
	
	/// <summary>
	/// Path Query Options for Report Options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PathQueryOptions
	{
		
		/// <summary>
		/// A channel grouping defines a set of rules that can be used to categorize events in a path report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="channelGrouping")]
		public ChannelGrouping ChannelGrouping { get; set; }
		
		/// <summary>
		/// Path Filters. There is a limit of 100 path filters that can be set per report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pathFilters")]
		public PathFilter[] PathFilters { get; set; }
	}
	
	/// <summary>
	/// Path filters specify which paths to include in a report. A path is the result of combining DV360 events based on User ID to create a workflow of users' actions. When a path filter is set, the resulting report will only include paths that match the specified event at the specified position. All other paths will be excluded.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PathFilter
	{
		
		/// <summary>
		/// Filter on an event to be applied to some part of the path.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="eventFilters")]
		public EventFilter[] EventFilters { get; set; }
		
		/// <summary>
		/// Indicates the position of the path the filter should match to (first, last, or any event in path).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pathMatchPosition")]
		public System.Nullable<PathFilterPathMatchPosition> PathMatchPosition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum PathFilterPathMatchPosition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ANY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIRST = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAST = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ParametersType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_GENERAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_AUDIENCE_PERFORMANCE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_INVENTORY_AVAILABILITY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_KEYWORD = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_PIXEL_LOAD = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_AUDIENCE_COMPOSITION = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_CROSS_PARTNER = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_PAGE_CATEGORY = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_THIRD_PARTY_DATA_PROVIDER = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_CROSS_PARTNER_THIRD_PARTY_DATA_PROVIDER = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_CLIENT_SAFE = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_ORDER_ID = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_FEE = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_CROSS_FEE = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_ACTIVE_GRP = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_YOUTUBE_VERTICAL = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_COMSCORE_VCE = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_TRUEVIEW = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_NIELSEN_AUDIENCE_PROFILE = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_NIELSEN_DAILY_REACH_BUILD = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_NIELSEN_SITE = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_REACH_AND_FREQUENCY = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_ESTIMATED_CONVERSION = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_VERIFICATION = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_TRUEVIEW_IAR = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_NIELSEN_ONLINE_GLOBAL_MARKET = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_PETRA_NIELSEN_AUDIENCE_PROFILE = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_PETRA_NIELSEN_DAILY_REACH_BUILD = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_PETRA_NIELSEN_ONLINE_GLOBAL_MARKET = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_NOT_SUPPORTED = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_REACH_AUDIENCE = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_LINEAR_TV_SEARCH_LIFT = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_PATH = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE_PATH_ATTRIBUTION = 33,
	}
	
	/// <summary>
	/// Information on how frequently and when to run a query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class QuerySchedule
	{
		
		/// <summary>
		/// Datetime to periodically run the query until.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="endTimeMs")]
		public string EndTimeMs { get; set; }
		
		/// <summary>
		/// How often the query is run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="frequency")]
		public System.Nullable<QueryScheduleFrequency> Frequency { get; set; }
		
		/// <summary>
		/// Time of day at which a new report will be generated, represented as minutes past midnight. Range is 0 to 1439. Only applies to scheduled reports.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextRunMinuteOfDay")]
		public System.Nullable<System.Int32> NextRunMinuteOfDay { get; set; }
		
		/// <summary>
		/// Canonical timezone code for report generation time. Defaults to America/New_York.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextRunTimezoneCode")]
		public string NextRunTimezoneCode { get; set; }
		
		/// <summary>
		/// When to start running the query. Not applicable to `ONE_TIME` frequency.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTimeMs")]
		public string StartTimeMs { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum QueryScheduleFrequency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ONE_TIME = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DAILY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WEEKLY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEMI_MONTHLY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MONTHLY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		QUARTERLY = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		YEARLY = 6,
	}
	
	/// <summary>
	/// List reports response.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListReportsResponse
	{
		
		/// <summary>
		/// Identifies what kind of resource this is. Value: the fixed string "doubleclickbidmanager#listReportsResponse".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kind")]
		public string Kind { get; set; }
		
		/// <summary>
		/// Next page's pagination token if one exists.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// Retrieved reports.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reports")]
		public Report[] Reports { get; set; }
	}
	
	/// <summary>
	/// Represents a report.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Report
	{
		
		/// <summary>
		/// Key used to identify a report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		public ReportKey Key { get; set; }
		
		/// <summary>
		/// Report metadata.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public ReportMetadata Metadata { get; set; }
		
		/// <summary>
		/// Parameters of a query or report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="params")]
		public Parameters Params { get; set; }
	}
	
	/// <summary>
	/// Key used to identify a report.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ReportKey
	{
		
		/// <summary>
		/// Query ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queryId")]
		public string QueryId { get; set; }
		
		/// <summary>
		/// Report ID.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportId")]
		public string ReportId { get; set; }
	}
	
	/// <summary>
	/// Report metadata.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ReportMetadata
	{
		
		/// <summary>
		/// The path to the location in Google Cloud Storage where the report is stored.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="googleCloudStoragePath")]
		public string GoogleCloudStoragePath { get; set; }
		
		/// <summary>
		/// The ending time for the data that is shown in the report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportDataEndTimeMs")]
		public string ReportDataEndTimeMs { get; set; }
		
		/// <summary>
		/// The starting time for the data that is shown in the report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportDataStartTimeMs")]
		public string ReportDataStartTimeMs { get; set; }
		
		/// <summary>
		/// Report status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public ReportStatus Status { get; set; }
	}
	
	/// <summary>
	/// Report status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ReportStatus
	{
		
		/// <summary>
		/// An explanation of a report failure.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failure")]
		public ReportFailure Failure { get; set; }
		
		/// <summary>
		/// The time when this report either completed successfully or failed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="finishTimeMs")]
		public string FinishTimeMs { get; set; }
		
		/// <summary>
		/// The file type of the report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="format")]
		public QueryMetadataFormat Format { get; set; }
		
		/// <summary>
		/// The state of the report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<ReportStatusState> State { get; set; }
	}
	
	/// <summary>
	/// An explanation of a report failure.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ReportFailure
	{
		
		/// <summary>
		/// Error code that shows why the report was not created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="errorCode")]
		public System.Nullable<ReportFailureErrorCode> ErrorCode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ReportFailureErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTHENTICATION_ERROR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNAUTHORIZED_API_ACCESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERVER_ERROR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VALIDATION_ERROR = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPORTING_FATAL_ERROR = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPORTING_TRANSIENT_ERROR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPORTING_IMCOMPATIBLE_METRICS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPORTING_ILLEGAL_FILENAME = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPORTING_QUERY_NOT_FOUND = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPORTING_BUCKET_NOT_FOUND = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPORTING_CREATE_BUCKET_FAILED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPORTING_DELETE_BUCKET_FAILED = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPORTING_UPDATE_BUCKET_PERMISSION_FAILED = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPORTING_WRITE_BUCKET_OBJECT_FAILED = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPRECATED_REPORTING_INVALID_QUERY = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPORTING_INVALID_QUERY_TOO_MANY_UNFILTERED_LARGE_GROUP_BYS = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPORTING_INVALID_QUERY_TITLE_MISSING = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REPORTING_INVALID_QUERY_MISSING_PARTNER_AND_ADVERTISER_FILTERS = 17,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ReportStatusState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DONE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
	}
	
	/// <summary>
	/// Request to run a stored query to generate a report.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RunQueryRequest
	{
		
		/// <summary>
		/// Report data range used to generate the report.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dataRange")]
		public QueryMetadataDataRange DataRange { get; set; }
		
		/// <summary>
		/// The ending time for the data that is shown in the report. Note, reportDataEndTimeMs is required if dataRange is CUSTOM_DATES and ignored otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportDataEndTimeMs")]
		public string ReportDataEndTimeMs { get; set; }
		
		/// <summary>
		/// The starting time for the data that is shown in the report. Note, reportDataStartTimeMs is required if dataRange is CUSTOM_DATES and ignored otherwise.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reportDataStartTimeMs")]
		public string ReportDataStartTimeMs { get; set; }
		
		/// <summary>
		/// Canonical timezone code for report data time. Defaults to America/New_York.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timezoneCode")]
		public string TimezoneCode { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Retrieves stored queries.
		/// Doubleclickbidmanager_queries_listqueries queries
		/// </summary>
		/// <param name="pageSize">Maximum number of results per page. Must be between 1 and 100. Defaults to 100 if unspecified.</param>
		/// <param name="pageToken">Optional pagination token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListQueriesResponse> Doubleclickbidmanager_queries_listqueriesAsync(int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "queries?pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListQueriesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves stored reports.
		/// Doubleclickbidmanager_reports_listreports queries/{queryId}/reports
		/// </summary>
		/// <param name="queryId">Query ID with which the reports are associated.</param>
		/// <param name="pageSize">Maximum number of results per page. Must be between 1 and 100. Defaults to 100 if unspecified.</param>
		/// <param name="pageToken">Optional pagination token.</param>
		/// <returns>Successful response</returns>
		public async Task<ListReportsResponse> Doubleclickbidmanager_reports_listreportsAsync(string queryId, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "queries/"+ (queryId==null? "" : System.Uri.EscapeDataString(queryId))+"/reports&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListReportsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a query.
		/// Doubleclickbidmanager_queries_createquery query
		/// </summary>
		/// <param name="asynchronous">If true, tries to run the query asynchronously. Only applicable when the frequency is ONE_TIME.</param>
		/// <returns>Successful response</returns>
		public async Task<Query> Doubleclickbidmanager_queries_createqueryAsync(bool asynchronous, Query requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "query?asynchronous="+asynchronous;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Query>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes a stored query as well as the associated stored reports.
		/// Doubleclickbidmanager_queries_deletequery query/{queryId}
		/// </summary>
		/// <param name="queryId">Query ID to delete.</param>
		/// <returns>Successful response</returns>
		public async Task Doubleclickbidmanager_queries_deletequeryAsync(string queryId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "query/"+ (queryId==null? "" : System.Uri.EscapeDataString(queryId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves a stored query.
		/// Doubleclickbidmanager_queries_getquery query/{queryId}
		/// </summary>
		/// <param name="queryId">Query ID to retrieve.</param>
		/// <returns>Successful response</returns>
		public async Task<Query> Doubleclickbidmanager_queries_getqueryAsync(string queryId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "query/"+ (queryId==null? "" : System.Uri.EscapeDataString(queryId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Query>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Runs a stored query to generate a report.
		/// Doubleclickbidmanager_queries_runquery query/{queryId}
		/// </summary>
		/// <param name="queryId">Query ID to run.</param>
		/// <param name="asynchronous">If true, tries to run the query asynchronously.</param>
		/// <returns>Successful response</returns>
		public async Task Doubleclickbidmanager_queries_runqueryAsync(string queryId, bool asynchronous, RunQueryRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "query/"+ (queryId==null? "" : System.Uri.EscapeDataString(queryId))+"&asynchronous="+asynchronous;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// An association tuple that pairs a `Catalog` to a resource
	///that can use the `Catalog`. After association, a
	///google.cloud.privatecatalog.v1beta1.Catalog becomes available to
	///consumers under specified Association.resource and all of its child
	///nodes.
	///Users who have the `cloudprivatecatalog.targets.get` permission on any of
	///the resource nodes can access the catalog and child products under the node.
	///
	///For example, suppose the cloud resource hierarchy is as follows:
	///
	///* organizations/example.com
	///  * folders/team
	///    * projects/test
	///
	///After creating an association with `organizations/example.com`, the catalog
	///`catalogs/1`  is accessible from the following paths:
	///
	///* organizations/example.com
	///* folders/team
	///* projects/test
	///
	///Users can access them by
	///google.cloud.v1beta1.PrivateCatalog.SearchCatalogs action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudPrivatecatalogproducerV1beta1Association
	{
		
		/// <summary>
		/// The creation time of the association.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the catalog association, in the format
		///`catalogs/{catalog_id}/associations/{association_id}'.
		///
		///A unique identifier for the catalog association, which is
		///generated by catalog service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. The user-supplied fully qualified name of the `Resource`
		///associated to the `Catalog`. It supports `Organization`, `Folder`,
		///and `Project`. Values are of the form
		///
		///* `//cloudresourcemanager.googleapis.com/projects/{product_number}`
		///* `//cloudresourcemanager.googleapis.com/folders/{folder_id}`
		///* `//cloudresourcemanager.googleapis.com/organizations/{organization_id}`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resource")]
		public string Resource { get; set; }
	}
	
	/// <summary>
	/// The producer representation of a catalog which is a curated collection of
	///solutions that can be managed, controlled, and shared by cloud admins.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudPrivatecatalogproducerV1beta1Catalog
	{
		
		/// <summary>
		/// Output only. The time when the catalog was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Required. The user-supplied description of the catalog. Maximum of 512
		///characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. The user-supplied descriptive name of the catalog as it appears
		///in UIs. Maximum 256 characters in length.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Output only. The resource name of the catalog, in the format
		///`catalogs/{catalog_id}'.
		///
		///A unique identifier for the catalog, which is generated
		///by catalog service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required. The parent resource name of the catalog, which can't be changed
		///after a catalog is created. It can only be an organization. Values are of
		///the form `//cloudresourcemanager.googleapis.com/organizations/<id>`.
		///Maximum 256 characters in length.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parent")]
		public string Parent { get; set; }
		
		/// <summary>
		/// Output only. The time when the catalog was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudPrivatecatalogproducerV1beta1CopyProductRequest
	{
		
		/// <summary>
		/// The resource name of the destination product that is copied to.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="destinationProductName")]
		public string DestinationProductName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest
	{
		
		/// <summary>
		/// An association tuple that pairs a `Catalog` to a resource
		///that can use the `Catalog`. After association, a
		///google.cloud.privatecatalog.v1beta1.Catalog becomes available to
		///consumers under specified Association.resource and all of its child
		///nodes.
		///Users who have the `cloudprivatecatalog.targets.get` permission on any of
		///the resource nodes can access the catalog and child products under the node.
		///
		///For example, suppose the cloud resource hierarchy is as follows:
		///
		///* organizations/example.com
		///  * folders/team
		///    * projects/test
		///
		///After creating an association with `organizations/example.com`, the catalog
		///`catalogs/1`  is accessible from the following paths:
		///
		///* organizations/example.com
		///* folders/team
		///* projects/test
		///
		///Users can access them by
		///google.cloud.v1beta1.PrivateCatalog.SearchCatalogs action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="association")]
		public GoogleCloudPrivatecatalogproducerV1beta1Association Association { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudPrivatecatalogproducerV1beta1ListAssociationsResponse
	{
		
		/// <summary>
		/// The returned `Association` resources from the list call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="associations")]
		public GoogleCloudPrivatecatalogproducerV1beta1Association[] Associations { get; set; }
		
		/// <summary>
		/// A pagination token returned from a previous call to
		///`ListAssociations` that indicates where the listing should continue from.
		///This field is optional.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudPrivatecatalogproducerV1beta1ListCatalogsResponse
	{
		
		/// <summary>
		/// The `Catalogs` returned from the list call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="catalogs")]
		public GoogleCloudPrivatecatalogproducerV1beta1Catalog[] Catalogs { get; set; }
		
		/// <summary>
		/// A pagination token returned from a previous call to ListCatalogs
		///that indicates where the listing should continue from.
		///This field is optional.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudPrivatecatalogproducerV1beta1ListProductsResponse
	{
		
		/// <summary>
		/// A pagination token returned from a previous call to ListProducts
		///that indicates where the listing should continue from.
		///This field is optional.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The `Product` returned from the list call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="products")]
		public GoogleCloudPrivatecatalogproducerV1beta1Product[] Products { get; set; }
	}
	
	/// <summary>
	/// The producer representation of a product which is a child resource of
	///`Catalog` with display metadata and a list of `Version` resources.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudPrivatecatalogproducerV1beta1Product
	{
		
		/// <summary>
		/// Required. The type of the product asset, which cannot be changed after the
		///product is created. It supports the values
		///`google.deploymentmanager.Template` and
		///`google.cloudprivatecatalog.ListingOnly`. Other values will be
		///rejected by the server. Read only after creation.
		///
		///The following fields or resource types have different validation rules
		///under each `asset_type` values:
		///
		///* Product.display_metadata has different validation schema for each
		///asset type value. See its comment for details.
		///* Version resource isn't allowed to be added under the
		///`google.cloudprivatecatalog.ListingOnly` type.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="assetType")]
		public string AssetType { get; set; }
		
		/// <summary>
		/// Output only. The time when the product was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The user-supplied display metadata to describe the product.
		///The JSON schema of the metadata differs by Product.asset_type.
		///When the type is `google.deploymentmanager.Template`, the schema is as
		///follows:
		///
		///```
		///"$schema": http://json-schema.org/draft-04/schema#
		///type: object
		///properties:
		///  name:
		///    type: string
		///    minLength: 1
		///    maxLength: 64
		///  description:
		///    type: string
		///    minLength: 1
		///    maxLength: 2048
		///  tagline:
		///    type: string
		///    minLength: 1
		///    maxLength: 100
		///  support_info:
		///    type: string
		///    minLength: 1
		///    maxLength: 2048
		///  creator:
		///    type: string
		///    minLength: 1
		///    maxLength: 100
		///  documentation:
		///    type: array
		///    items:
		///      type: object
		///      properties:
		///        url:
		///          type: string
		///          pattern:
		///          "^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]"
		///        title:
		///          type: string
		///          minLength: 1
		///          maxLength: 64
		///        description:
		///          type: string
		///          minLength: 1
		///          maxLength: 2048
		///required:
		///- name
		///- description
		///additionalProperties: false
		///
		///```
		///
		///When the asset type is `google.cloudprivatecatalog.ListingOnly`, the schema
		///is as follows:
		///
		///```
		///"$schema": http://json-schema.org/draft-04/schema#
		///type: object
		///properties:
		///  name:
		///    type: string
		///    minLength: 1
		///    maxLength: 64
		///  description:
		///    type: string
		///    minLength: 1
		///    maxLength: 2048
		///  tagline:
		///    type: string
		///    minLength: 1
		///    maxLength: 100
		///  support_info:
		///    type: string
		///    minLength: 1
		///    maxLength: 2048
		///  creator:
		///    type: string
		///    minLength: 1
		///    maxLength: 100
		///  documentation:
		///    type: array
		///    items:
		///      type: object
		///      properties:
		///        url:
		///          type: string
		///          pattern:
		///          "^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]"
		///        title:
		///          type: string
		///          minLength: 1
		///          maxLength: 64
		///        description:
		///          type: string
		///          minLength: 1
		///          maxLength: 2048
		///  signup_url:
		///    type: string
		///    pattern:
		///    "^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]"
		///required:
		///- name
		///- description
		///- signup_url
		///additionalProperties: false
		///```
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayMetadata")]
		public System.Collections.Generic.Dictionary<string, object> DisplayMetadata { get; set; }
		
		/// <summary>
		/// Output only. The public accessible URI of the icon uploaded by
		///PrivateCatalogProducer.UploadIcon.
		///
		///If no icon is uploaded, it will be the default icon's URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iconUri")]
		public string IconUri { get; set; }
		
		/// <summary>
		/// Required. The resource name of the product in the format
		///`catalogs/{catalog_id}/products/a-z*[a-z0-9]'.
		///
		///A unique identifier for the product under a catalog, which cannot
		///be changed after the product is created. The final
		///segment of the name must between 1 and 256 characters in length.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The time when the product was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudPrivatecatalogproducerV1beta1ListVersionsResponse
	{
		
		/// <summary>
		/// A pagination token returned from a previous call to ListProducts
		///that indicates where the listing should continue from.
		///This field is optional.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The `VersiVersionon` returned from the list call.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="versions")]
		public GoogleCloudPrivatecatalogproducerV1beta1Version[] Versions { get; set; }
	}
	
	/// <summary>
	/// The producer representation of a version, which is a child resource under a
	///`Product` with asset data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudPrivatecatalogproducerV1beta1Version
	{
		
		/// <summary>
		/// Output only. The asset which has been validated and is ready to be
		///provisioned. See Version.original_asset for the schema.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="asset")]
		public System.Collections.Generic.Dictionary<string, object> Asset { get; set; }
		
		/// <summary>
		/// Output only. The time when the version was created.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// The user-supplied description of the version. Maximum of 256 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required. The resource name of the version, in the format
		///`catalogs/{catalog_id}/products/{product_id}/versions/a-z*[a-z0-9]'.
		///
		///A unique identifier for the version under a product, which can't
		///be changed after the version is created. The final segment of the name must
		///between 1 and 63 characters in length.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The user-supplied asset payload. The maximum size of the payload is 2MB.
		///The JSON schema of the payload is defined as:
		///
		///```
		///type: object
		///properties:
		///  mainTemplate:
		///    type: string
		///    description: The file name of the main template and name prefix of
		///    schema file. The content of the main template should be set in the
		///    imports list. The schema file name is expected to be
		///    <mainTemplate>.schema in the imports list. required: true
		///  imports:
		///    type: array
		///    description: Import template and schema file contents. Required to have
		///    both <mainTemplate> and <mainTemplate>.schema files. required: true
		///    minItems: 2
		///    items:
		///      type: object
		///      properties:
		///        name:
		///          type: string
		///        content:
		///          type: string
		///```
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="originalAsset")]
		public System.Collections.Generic.Dictionary<string, object> OriginalAsset { get; set; }
		
		/// <summary>
		/// Output only. The time when the version was last updated.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudPrivatecatalogproducerV1beta1UndeleteCatalogRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleCloudPrivatecatalogproducerV1beta1UploadIconRequest
	{
		
		/// <summary>
		/// The raw icon bytes user-supplied to be uploaded to the product. The format
		///of the icon can only be PNG or JPEG. The minimum allowed dimensions are
		///130x130 pixels and the maximum dimensions are 10000x10000 pixels.
		///Required.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="icon")]
		public string Icon { get; set; }
	}
	
	/// <summary>
	/// Specifies the audit configuration for a service.
	///The configuration determines which permission types are logged, and what
	///identities, if any, are exempted from logging.
	///An AuditConfig must have one or more AuditLogConfigs.
	///
	///If there are AuditConfigs for both `allServices` and a specific service,
	///the union of the two AuditConfigs is used for that service: the log_types
	///specified in each AuditConfig are enabled, and the exempted_members in each
	///AuditLogConfig are exempted.
	///
	///Example Policy with multiple AuditConfigs:
	///
	///    {
	///      "audit_configs": [
	///        {
	///          "service": "allServices"
	///          "audit_log_configs": [
	///            {
	///              "log_type": "DATA_READ",
	///              "exempted_members": [
	///                "user:jose@example.com"
	///              ]
	///            },
	///            {
	///              "log_type": "DATA_WRITE",
	///            },
	///            {
	///              "log_type": "ADMIN_READ",
	///            }
	///          ]
	///        },
	///        {
	///          "service": "sampleservice.googleapis.com"
	///          "audit_log_configs": [
	///            {
	///              "log_type": "DATA_READ",
	///            },
	///            {
	///              "log_type": "DATA_WRITE",
	///              "exempted_members": [
	///                "user:aliya@example.com"
	///              ]
	///            }
	///          ]
	///        }
	///      ]
	///    }
	///
	///For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
	///logging. It also exempts jose@example.com from DATA_READ logging, and
	///aliya@example.com from DATA_WRITE logging.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1AuditConfig
	{
		
		/// <summary>
		/// The configuration for logging of each type of permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditLogConfigs")]
		public GoogleIamV1AuditLogConfig[] AuditLogConfigs { get; set; }
		
		/// <summary>
		/// Specifies a service that will be enabled for audit logging.
		///For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
		///`allServices` is a special value that covers all services.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration for logging a type of permissions.
	///Example:
	///
	///    {
	///      "audit_log_configs": [
	///        {
	///          "log_type": "DATA_READ",
	///          "exempted_members": [
	///            "user:jose@example.com"
	///          ]
	///        },
	///        {
	///          "log_type": "DATA_WRITE",
	///        }
	///      ]
	///    }
	///
	///This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
	///jose@example.com from DATA_READ logging.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1AuditLogConfig
	{
		
		/// <summary>
		/// Specifies the identities that do not cause logging for this type of
		///permission.
		///Follows the same format of Binding.members.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exemptedMembers")]
		public string[] ExemptedMembers { get; set; }
		
		/// <summary>
		/// The log type that this config enables.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logType")]
		public System.Nullable<GoogleIamV1AuditLogConfigLogType> LogType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum GoogleIamV1AuditLogConfigLogType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOG_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADMIN_READ = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_WRITE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_READ = 3,
	}
	
	/// <summary>
	/// Associates `members` with a `role`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1Binding
	{
		
		/// <summary>
		/// Represents an expression text. Example:
		///
		///    title: "User account presence"
		///    description: "Determines whether the request has a user account"
		///    expression: "size(request.user) > 0"
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public GoogleTypeExpr Condition { get; set; }
		
		/// <summary>
		/// Specifies the identities requesting access for a Cloud Platform resource.
		///`members` can have the following values:
		///
		///* `allUsers`: A special identifier that represents anyone who is
		///   on the internet; with or without a Google account.
		///
		///* `allAuthenticatedUsers`: A special identifier that represents anyone
		///   who is authenticated with a Google account or a service account.
		///
		///* `user:{emailid}`: An email address that represents a specific Google
		///   account. For example, `alice@example.com` .
		///
		///
		///* `serviceAccount:{emailid}`: An email address that represents a service
		///   account. For example, `my-other-app@appspot.gserviceaccount.com`.
		///
		///* `group:{emailid}`: An email address that represents a Google group.
		///   For example, `admins@example.com`.
		///
		///* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
		///   identifier) representing a user that has been recently deleted. For
		///   example, `alice@example.com?uid=123456789012345678901`. If the user is
		///   recovered, this value reverts to `user:{emailid}` and the recovered user
		///   retains the role in the binding.
		///
		///* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
		///   unique identifier) representing a service account that has been recently
		///   deleted. For example,
		///   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
		///   If the service account is undeleted, this value reverts to
		///   `serviceAccount:{emailid}` and the undeleted service account retains the
		///   role in the binding.
		///
		///* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
		///   identifier) representing a Google group that has been recently
		///   deleted. For example, `admins@example.com?uid=123456789012345678901`. If
		///   the group is recovered, this value reverts to `group:{emailid}` and the
		///   recovered group retains the role in the binding.
		///
		///
		///* `domain:{domain}`: The G Suite domain (primary) that represents all the    users of that domain. For example, `google.com` or `example.com`.
		///
		///
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public string[] Members { get; set; }
		
		/// <summary>
		/// Role that is assigned to `members`.
		///For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
	}
	
	/// <summary>
	/// Represents an expression text. Example:
	///
	///    title: "User account presence"
	///    description: "Determines whether the request has a user account"
	///    expression: "size(request.user) > 0"
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleTypeExpr
	{
		
		/// <summary>
		/// An optional description of the expression. This is a longer text which
		///describes the expression, e.g. when hovered over it in a UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Textual representation of an expression in
		///Common Expression Language syntax.
		///
		///The application context of the containing message determines which
		///well-known feature set of CEL is supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expression")]
		public string Expression { get; set; }
		
		/// <summary>
		/// An optional string indicating the location of the expression for error
		///reporting, e.g. a file name and a position in the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// An optional title for the expression, i.e. a short string describing
		///its purpose. This can be used e.g. in UIs which allow to enter the
		///expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// An Identity and Access Management (IAM) policy, which specifies access
	///controls for Google Cloud resources.
	///
	///
	///A `Policy` is a collection of `bindings`. A `binding` binds one or more
	///`members` to a single `role`. Members can be user accounts, service accounts,
	///Google groups, and domains (such as G Suite). A `role` is a named list of
	///permissions; each `role` can be an IAM predefined role or a user-created
	///custom role.
	///
	///Optionally, a `binding` can specify a `condition`, which is a logical
	///expression that allows access to a resource only if the expression evaluates
	///to `true`. A condition can add constraints based on attributes of the
	///request, the resource, or both.
	///
	///**JSON example:**
	///
	///    {
	///      "bindings": [
	///        {
	///          "role": "roles/resourcemanager.organizationAdmin",
	///          "members": [
	///            "user:mike@example.com",
	///            "group:admins@example.com",
	///            "domain:google.com",
	///            "serviceAccount:my-project-id@appspot.gserviceaccount.com"
	///          ]
	///        },
	///        {
	///          "role": "roles/resourcemanager.organizationViewer",
	///          "members": ["user:eve@example.com"],
	///          "condition": {
	///            "title": "expirable access",
	///            "description": "Does not grant access after Sep 2020",
	///            "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')",
	///          }
	///        }
	///      ],
	///      "etag": "BwWWja0YfJA=",
	///      "version": 3
	///    }
	///
	///**YAML example:**
	///
	///    bindings:
	///    - members:
	///      - user:mike@example.com
	///      - group:admins@example.com
	///      - domain:google.com
	///      - serviceAccount:my-project-id@appspot.gserviceaccount.com
	///      role: roles/resourcemanager.organizationAdmin
	///    - members:
	///      - user:eve@example.com
	///      role: roles/resourcemanager.organizationViewer
	///      condition:
	///        title: expirable access
	///        description: Does not grant access after Sep 2020
	///        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')
	///    - etag: BwWWja0YfJA=
	///    - version: 3
	///
	///For a description of IAM and its features, see the
	///[IAM documentation](https://cloud.google.com/iam/docs/).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1Policy
	{
		
		/// <summary>
		/// Specifies cloud audit logging configuration for this policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditConfigs")]
		public GoogleIamV1AuditConfig[] AuditConfigs { get; set; }
		
		/// <summary>
		/// Associates a list of `members` to a `role`. Optionally, may specify a
		///`condition` that determines how and when the `bindings` are applied. Each
		///of the `bindings` must contain at least one member.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindings")]
		public GoogleIamV1Binding[] Bindings { get; set; }
		
		/// <summary>
		/// `etag` is used for optimistic concurrency control as a way to help
		///prevent simultaneous updates of a policy from overwriting each other.
		///It is strongly suggested that systems make use of the `etag` in the
		///read-modify-write cycle to perform policy updates in order to avoid race
		///conditions: An `etag` is returned in the response to `getIamPolicy`, and
		///systems are expected to put that etag in the request to `setIamPolicy` to
		///ensure that their change will be applied to the same version of the policy.
		///
		///**Important:** If you use IAM Conditions, you must include the `etag` field
		///whenever you call `setIamPolicy`. If you omit this field, then IAM allows
		///you to overwrite a version `3` policy with a version `1` policy, and all of
		///the conditions in the version `3` policy are lost.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Specifies the format of the policy.
		///
		///Valid values are `0`, `1`, and `3`. Requests that specify an invalid value
		///are rejected.
		///
		///Any operation that affects conditional role bindings must specify version
		///`3`. This requirement applies to the following operations:
		///
		///* Getting a policy that includes a conditional role binding
		///* Adding a conditional role binding to a policy
		///* Changing a conditional role binding in a policy
		///* Removing any role binding, with or without a condition, from a policy
		///  that includes conditions
		///
		///**Important:** If you use IAM Conditions, you must include the `etag` field
		///whenever you call `setIamPolicy`. If you omit this field, then IAM allows
		///you to overwrite a version `3` policy with a version `1` policy, and all of
		///the conditions in the version `3` policy are lost.
		///
		///If a policy does not include any conditions, operations on that policy may
		///specify any valid version or leave the field unset.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	/// <summary>
	/// Request message for `SetIamPolicy` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1SetIamPolicyRequest
	{
		
		/// <summary>
		/// An Identity and Access Management (IAM) policy, which specifies access
		///controls for Google Cloud resources.
		///
		///
		///A `Policy` is a collection of `bindings`. A `binding` binds one or more
		///`members` to a single `role`. Members can be user accounts, service accounts,
		///Google groups, and domains (such as G Suite). A `role` is a named list of
		///permissions; each `role` can be an IAM predefined role or a user-created
		///custom role.
		///
		///Optionally, a `binding` can specify a `condition`, which is a logical
		///expression that allows access to a resource only if the expression evaluates
		///to `true`. A condition can add constraints based on attributes of the
		///request, the resource, or both.
		///
		///**JSON example:**
		///
		///    {
		///      "bindings": [
		///        {
		///          "role": "roles/resourcemanager.organizationAdmin",
		///          "members": [
		///            "user:mike@example.com",
		///            "group:admins@example.com",
		///            "domain:google.com",
		///            "serviceAccount:my-project-id@appspot.gserviceaccount.com"
		///          ]
		///        },
		///        {
		///          "role": "roles/resourcemanager.organizationViewer",
		///          "members": ["user:eve@example.com"],
		///          "condition": {
		///            "title": "expirable access",
		///            "description": "Does not grant access after Sep 2020",
		///            "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')",
		///          }
		///        }
		///      ],
		///      "etag": "BwWWja0YfJA=",
		///      "version": 3
		///    }
		///
		///**YAML example:**
		///
		///    bindings:
		///    - members:
		///      - user:mike@example.com
		///      - group:admins@example.com
		///      - domain:google.com
		///      - serviceAccount:my-project-id@appspot.gserviceaccount.com
		///      role: roles/resourcemanager.organizationAdmin
		///    - members:
		///      - user:eve@example.com
		///      role: roles/resourcemanager.organizationViewer
		///      condition:
		///        title: expirable access
		///        description: Does not grant access after Sep 2020
		///        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')
		///    - etag: BwWWja0YfJA=
		///    - version: 3
		///
		///For a description of IAM and its features, see the
		///[IAM documentation](https://cloud.google.com/iam/docs/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policy")]
		public GoogleIamV1Policy Policy { get; set; }
		
		/// <summary>
		/// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
		///the fields in the mask will be modified. If no mask is provided, the
		///following default mask is used:
		///paths: "bindings, etag"
		///This field is only used by Cloud IAM.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Request message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1TestIamPermissionsRequest
	{
		
		/// <summary>
		/// The set of permissions to check for the `resource`. Permissions with
		///wildcards (such as '*' or 'storage.*') are not allowed. For more
		///information see
		///[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	/// <summary>
	/// Response message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleIamV1TestIamPermissionsResponse
	{
		
		/// <summary>
		/// A subset of `TestPermissionsRequest.permissions` that the caller is
		///allowed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	/// <summary>
	/// The request message for Operations.CancelOperation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleLongrunningCancelOperationRequest
	{
	}
	
	/// <summary>
	/// The response message for Operations.ListOperations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleLongrunningListOperationsResponse
	{
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A list of operations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operations")]
		public GoogleLongrunningOperation[] Operations { get; set; }
	}
	
	/// <summary>
	/// This resource represents a long-running operation that is the result of a
	///network API call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleLongrunningOperation
	{
		
		/// <summary>
		/// If the value is `false`, it means the operation is still in progress.
		///If `true`, the operation is completed, and either `error` or `response` is
		///available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="done")]
		public System.Nullable<System.Boolean> Done { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for
		///different programming environments, including REST APIs and RPC APIs. It is
		///used by [gRPC](https://github.com/grpc). Each `Status` message contains
		///three pieces of data: error code, error message, and error details.
		///
		///You can find out more about this error model and how to work with it in the
		///[API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Service-specific metadata associated with the operation.  It typically
		///contains progress information and common metadata such as create time.
		///Some services might not provide such metadata.  Any method that returns a
		///long-running operation should document the metadata type, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// The server-assigned name, which is only unique within the same service that
		///originally returns it. If you use the default HTTP mapping, the
		///`name` should be a resource name ending with `operations/{unique_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The normal response of the operation in case of success.  If the original
		///method returns no data on success, such as `Delete`, the response is
		///`google.protobuf.Empty`.  If the original method is standard
		///`Get`/`Create`/`Update`, the response should be the resource.  For other
		///methods, the response should have the type `XxxResponse`, where `Xxx`
		///is the original method name.  For example, if the original method name
		///is `TakeSnapshot()`, the inferred response type is
		///`TakeSnapshotResponse`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public System.Collections.Generic.Dictionary<string, object> Response { get; set; }
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for
	///different programming environments, including REST APIs and RPC APIs. It is
	///used by [gRPC](https://github.com/grpc). Each `Status` message contains
	///three pieces of data: error code, error message, and error details.
	///
	///You can find out more about this error model and how to work with it in the
	///[API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleRpcStatus
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details.  There is a common set of
		///message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any
		///user-facing error message should be localized and sent in the
		///google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated
	///empty messages in your APIs. A typical example is to use it as the request
	///or the response type of an API method. For instance:
	///
	///    service Foo {
	///      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
	///    }
	///
	///The JSON representation for `Empty` is empty JSON object `{}`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GoogleProtobufEmpty
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Lists Catalog resources that the producer has access to, within the
		/// scope of the parent resource.
		/// Cloudprivatecatalogproducer_catalogs_list v1beta1/catalogs
		/// </summary>
		/// <param name="pageSize">The maximum number of catalogs to return.</param>
		/// <param name="pageToken">A pagination token returned from a previous call to ListCatalogs
		///that indicates where this listing should continue from.
		///This field is optional.</param>
		/// <param name="parent">The resource name of the parent resource.</param>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_catalogs_listAsync(int pageSize, string pageToken, string parent, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/catalogs?pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&parent=" + (parent==null? "" : System.Uri.EscapeDataString(parent));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new Catalog resource.
		/// Cloudprivatecatalogproducer_catalogs_create v1beta1/catalogs
		/// </summary>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_catalogs_createAsync(GoogleCloudPrivatecatalogproducerV1beta1Catalog requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/catalogs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists operations that match the specified filter in the request. If the
		/// server doesn't support this method, it returns `UNIMPLEMENTED`.
		/// 
		/// NOTE: the `name` binding allows API services to override the binding
		/// to use different resource name schemes, such as `users/*/operations`. To
		/// override the binding, API services can add a binding such as
		/// `"/v1/{name=users/*}/operations"` to their service configuration.
		/// For backwards compatibility, the default name includes the operations
		/// collection id, however overriding users must ensure the name binding
		/// is the parent resource, without the operations collection id.
		/// Cloudprivatecatalogproducer_operations_list v1beta1/operations
		/// </summary>
		/// <param name="filter">The standard list filter.</param>
		/// <param name="name">The name of the operation's parent resource.</param>
		/// <param name="pageSize">The standard list page size.</param>
		/// <param name="pageToken">The standard list page token.</param>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_operations_listAsync(string filter, string name, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/operations?filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&name=" + (name==null? "" : System.Uri.EscapeDataString(name))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Hard deletes a Version.
		/// Cloudprivatecatalogproducer_catalogs_products_versions_delete v1beta1/{name}
		/// </summary>
		/// <param name="name">The resource name of the version.</param>
		/// <param name="force">Forces deletion of the `Catalog` and its `Association` resources.
		///If the `Catalog` is still associated with other resources and
		///force is not set to true, then the operation fails.</param>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_catalogs_products_versions_deleteAsync(string name, bool force, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&force="+force;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the requested Version resource.
		/// Cloudprivatecatalogproducer_catalogs_products_versions_get v1beta1/{name}
		/// </summary>
		/// <param name="name">The resource name of the version.</param>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_catalogs_products_versions_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a specific Version resource.
		/// Cloudprivatecatalogproducer_catalogs_products_versions_patch v1beta1/{name}
		/// </summary>
		/// <param name="name">Required. The resource name of the version, in the format
		///`catalogs/{catalog_id}/products/{product_id}/versions/a-z*[a-z0-9]'.
		///
		///A unique identifier for the version under a product, which can't
		///be changed after the version is created. The final segment of the name must
		///between 1 and 63 characters in length.</param>
		/// <param name="updateMask">Field mask that controls which fields of the version should be updated.</param>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_catalogs_products_versions_patchAsync(string name, string updateMask, GoogleCloudPrivatecatalogproducerV1beta1Version requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&updateMask=" + (updateMask==null? "" : System.Uri.EscapeDataString(updateMask));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Starts asynchronous cancellation on a long-running operation.  The server
		/// makes a best effort to cancel the operation, but success is not
		/// guaranteed.  If the server doesn't support this method, it returns
		/// `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
		/// Operations.GetOperation or
		/// other methods to check whether the cancellation succeeded or whether the
		/// operation completed despite cancellation. On successful cancellation,
		/// the operation is not deleted; instead, it becomes an operation with
		/// an Operation.error value with a google.rpc.Status.code of 1,
		/// corresponding to `Code.CANCELLED`.
		/// Cloudprivatecatalogproducer_operations_cancel v1beta1/{name}:cancel
		/// </summary>
		/// <param name="name">The name of the operation resource to be cancelled.</param>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_operations_cancelAsync(string name, GoogleLongrunningCancelOperationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":cancel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Copies a Product under another Catalog.
		/// Cloudprivatecatalogproducer_catalogs_products_copy v1beta1/{name}:copy
		/// </summary>
		/// <param name="name">The resource name of the current product that is copied from.</param>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_catalogs_products_copyAsync(string name, GoogleCloudPrivatecatalogproducerV1beta1CopyProductRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":copy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Undeletes a deleted Catalog and all resources under it.
		/// Cloudprivatecatalogproducer_catalogs_undelete v1beta1/{name}:undelete
		/// </summary>
		/// <param name="name">The resource name of the catalog.</param>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_catalogs_undeleteAsync(string name, GoogleCloudPrivatecatalogproducerV1beta1UndeleteCatalogRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":undelete";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists all Association resources under a catalog.
		/// Cloudprivatecatalogproducer_catalogs_associations_list v1beta1/{parent}/associations
		/// </summary>
		/// <param name="parent">The resource name of the `Catalog` whose `Associations` are
		///being retrieved. In the format `catalogs/<catalog>`.</param>
		/// <param name="pageSize">The maximum number of catalog associations to return.</param>
		/// <param name="pageToken">A pagination token returned from the previous call to
		///`ListAssociations`.</param>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_catalogs_associations_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/associations&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an Association instance under a given Catalog.
		/// Cloudprivatecatalogproducer_catalogs_associations_create v1beta1/{parent}/associations
		/// </summary>
		/// <param name="parent">The `Catalog` resource's name.</param>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_catalogs_associations_createAsync(string parent, GoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/associations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists Product resources that the producer has access to, within the
		/// scope of the parent catalog.
		/// Cloudprivatecatalogproducer_catalogs_products_list v1beta1/{parent}/products
		/// </summary>
		/// <param name="parent">The resource name of the parent resource.</param>
		/// <param name="filter">A filter expression used to restrict the returned results based
		///upon properties of the product.</param>
		/// <param name="pageSize">The maximum number of products to return.</param>
		/// <param name="pageToken">A pagination token returned from a previous call to ListProducts
		///that indicates where this listing should continue from.
		///This field is optional.</param>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_catalogs_products_listAsync(string parent, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/products&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Product instance under a given Catalog.
		/// Cloudprivatecatalogproducer_catalogs_products_create v1beta1/{parent}/products
		/// </summary>
		/// <param name="parent">The catalog name of the new product's parent.</param>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_catalogs_products_createAsync(string parent, GoogleCloudPrivatecatalogproducerV1beta1Product requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/products";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists Version resources that the producer has access to, within the
		/// scope of the parent Product.
		/// Cloudprivatecatalogproducer_catalogs_products_versions_list v1beta1/{parent}/versions
		/// </summary>
		/// <param name="parent">The resource name of the parent resource.</param>
		/// <param name="pageSize">The maximum number of versions to return.</param>
		/// <param name="pageToken">A pagination token returned from a previous call to ListVersions
		///that indicates where this listing should continue from.
		///This field is optional.</param>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_catalogs_products_versions_listAsync(string parent, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/versions&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Version instance under a given Product.
		/// Cloudprivatecatalogproducer_catalogs_products_versions_create v1beta1/{parent}/versions
		/// </summary>
		/// <param name="parent">The product name of the new version's parent.</param>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_catalogs_products_versions_createAsync(string parent, GoogleCloudPrivatecatalogproducerV1beta1Version requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/versions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates an Icon instance under a given Product.
		/// If Product only has a default icon, a new Icon
		/// instance is created and associated with the given Product.
		/// If Product already has a non-default icon, the action creates
		/// a new Icon instance, associates the newly created
		/// Icon with the given Product and deletes the old icon.
		/// Cloudprivatecatalogproducer_catalogs_products_icons_upload v1beta1/{product}/icons:upload
		/// </summary>
		/// <param name="product">The resource name of the product.</param>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_catalogs_products_icons_uploadAsync(string product, GoogleCloudPrivatecatalogproducerV1beta1UploadIconRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (product==null? "" : System.Uri.EscapeDataString(product))+"/icons:upload";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Gets IAM policy for the specified Catalog.
		/// Cloudprivatecatalogproducer_catalogs_getIamPolicy v1beta1/{resource}:getIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being requested.
		///See the operation documentation for the appropriate value for this field.</param>
		/// <param name="options_requestedPolicyVersion">Optional. The policy format version to be returned.
		///
		///Valid values are 0, 1, and 3. Requests specifying an invalid value will be
		///rejected.
		///
		///Requests for policies with any conditional bindings must specify version 3.
		///Policies without any conditional bindings may specify any valid value or
		///leave the field unset.</param>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_catalogs_getIamPolicyAsync(string resource, int options_requestedPolicyVersion, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":getIamPolicy&options.requestedPolicyVersion="+options_requestedPolicyVersion;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Sets the IAM policy for the specified Catalog.
		/// Cloudprivatecatalogproducer_catalogs_setIamPolicy v1beta1/{resource}:setIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being specified.
		///See the operation documentation for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_catalogs_setIamPolicyAsync(string resource, GoogleIamV1SetIamPolicyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":setIamPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Tests the IAM permissions for the specified Catalog.
		/// Cloudprivatecatalogproducer_catalogs_testIamPermissions v1beta1/{resource}:testIamPermissions
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy detail is being requested.
		///See the operation documentation for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task Cloudprivatecatalogproducer_catalogs_testIamPermissionsAsync(string resource, GoogleIamV1TestIamPermissionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1beta1/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":testIamPermissions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

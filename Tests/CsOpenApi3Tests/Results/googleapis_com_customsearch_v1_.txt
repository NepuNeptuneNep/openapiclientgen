//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Promotion result.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Promotion
	{
		
		/// <summary>
		/// An array of block objects for this promotion.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bodyLines")]
		public PromotionBodyLines[] PromotionBodyLines { get; set; }
		
		/// <summary>
		/// An abridged version of this search's result URL, e.g. www.example.com.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayLink")]
		public string DisplayLink { get; set; }
		
		/// <summary>
		/// The title of the promotion, in HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="htmlTitle")]
		public string HtmlTitle { get; set; }
		
		/// <summary>
		/// Image belonging to a promotion.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image")]
		public PromotionImage Image { get; set; }
		
		/// <summary>
		/// The URL of the promotion.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link { get; set; }
		
		/// <summary>
		/// The title of the promotion.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class PromotionBodyLines
	{
		
		/// <summary>
		/// The block object's text in HTML, if it has text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="htmlTitle")]
		public string HtmlTitle { get; set; }
		
		/// <summary>
		/// The anchor text of the block object's link, if it has a link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link { get; set; }
		
		/// <summary>
		/// The block object's text, if it has text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// The URL of the block object's link, if it has one.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public string Url { get; set; }
	}
	
	public class PromotionImage
	{
		
		/// <summary>
		/// Image height in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Int32> Height { get; set; }
		
		/// <summary>
		/// URL of the image for this promotion link.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="source")]
		public string Source { get; set; }
		
		/// <summary>
		/// Image width in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Int32> Width { get; set; }
	}
	
	/// <summary>
	/// A custom search result.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Result
	{
		
		/// <summary>
		/// Indicates the ID of Google's cached version of the search result.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cacheId")]
		public string CacheId { get; set; }
		
		/// <summary>
		/// An abridged version of this search resultâ€™s URL, e.g. www.example.com.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayLink")]
		public string DisplayLink { get; set; }
		
		/// <summary>
		/// The file format of the search result.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileFormat")]
		public string FileFormat { get; set; }
		
		/// <summary>
		/// The URL displayed after the snippet for each search result.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="formattedUrl")]
		public string FormattedUrl { get; set; }
		
		/// <summary>
		/// The HTML-formatted URL displayed after the snippet for each search result.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="htmlFormattedUrl")]
		public string HtmlFormattedUrl { get; set; }
		
		/// <summary>
		/// The snippet of the search result, in HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="htmlSnippet")]
		public string HtmlSnippet { get; set; }
		
		/// <summary>
		/// The title of the search result, in HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="htmlTitle")]
		public string HtmlTitle { get; set; }
		
		/// <summary>
		/// Image belonging to a custom search result.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image")]
		public ResultImage Image { get; set; }
		
		/// <summary>
		/// A unique identifier for the type of current object. For this API, it is `customsearch#result.`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kind")]
		public string Kind { get; set; }
		
		/// <summary>
		/// Encapsulates all information about refinement labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public ResultLabels[] ResultLabels { get; set; }
		
		/// <summary>
		/// The full URL to which the search result is pointing, e.g. http://www.example.com/foo/bar.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="link")]
		public string Link { get; set; }
		
		/// <summary>
		/// The MIME type of the search result.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mime")]
		public string Mime { get; set; }
		
		/// <summary>
		/// Contains [PageMap](https://developers.google.com/custom-search/docs/structured_data#pagemaps) information for this search result.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="pagemap")]
		public System.Collections.Generic.Dictionary<string, object> Pagemap { get; set; }
		
		/// <summary>
		/// The snippet of the search result, in plain text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="snippet")]
		public string Snippet { get; set; }
		
		/// <summary>
		/// The title of the search result, in plain text.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	public class ResultImage
	{
		
		/// <summary>
		/// The size of the image, in bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="byteSize")]
		public System.Nullable<System.Int32> ByteSize { get; set; }
		
		/// <summary>
		/// A URL pointing to the webpage hosting the image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="contextLink")]
		public string ContextLink { get; set; }
		
		/// <summary>
		/// The height of the image, in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="height")]
		public System.Nullable<System.Int32> Height { get; set; }
		
		/// <summary>
		/// The height of the thumbnail image, in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnailHeight")]
		public System.Nullable<System.Int32> ThumbnailHeight { get; set; }
		
		/// <summary>
		/// A URL to the thumbnail image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnailLink")]
		public string ThumbnailLink { get; set; }
		
		/// <summary>
		/// The width of the thumbnail image, in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="thumbnailWidth")]
		public System.Nullable<System.Int32> ThumbnailWidth { get; set; }
		
		/// <summary>
		/// The width of the image, in pixels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="width")]
		public System.Nullable<System.Int32> Width { get; set; }
	}
	
	public class ResultLabels
	{
		
		/// <summary>
		/// The display name of a refinement label. This is the name you should display in your user interface.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="displayName")]
		public string DisplayName { get; set; }
		
		/// <summary>
		/// Refinement label and the associated refinement operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="label_with_op")]
		public string Label_with_op { get; set; }
		
		/// <summary>
		/// The name of a refinement label, which you can use to refine searches. Don't display this in your user interface; instead, use displayName.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Response to a custom search request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Search
	{
		
		/// <summary>
		/// Metadata and refinements associated with the given search engine, including: * The name of the search engine that was used for the query. * A set of [facet objects](https://developers.google.com/custom-search/docs/refinements#create) (refinements) you can use for refining a search.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="context")]
		public System.Collections.Generic.Dictionary<string, object> Context { get; set; }
		
		/// <summary>
		/// The current set of custom search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="items")]
		public Result[] Items { get; set; }
		
		/// <summary>
		/// Unique identifier for the type of current object. For this API, it is customsearch#search.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="kind")]
		public string Kind { get; set; }
		
		/// <summary>
		/// The set of [promotions](https://developers.google.com/custom-search/docs/promotions). Present only if the custom search engine's configuration files define any promotions for the given query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="promotions")]
		public Promotion[] Promotions { get; set; }
		
		/// <summary>
		/// Query metadata for the previous, current, and next pages of results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="queries")]
		public SearchQueries Queries { get; set; }
		
		/// <summary>
		/// Metadata about a search operation.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchInformation")]
		public SearchSearchInformation SearchInformation { get; set; }
		
		/// <summary>
		/// Spell correction information for a query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="spelling")]
		public SearchSpelling Spelling { get; set; }
		
		/// <summary>
		/// OpenSearch template and URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="url")]
		public SearchUrl Url { get; set; }
	}
	
	public class SearchQueries
	{
		
		/// <summary>
		/// Metadata representing the next page of results, if applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPage")]
		public SearchQueriesNextPage[] SearchQueriesNextPage { get; set; }
		
		/// <summary>
		/// Metadata representing the previous page of results, if applicable.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="previousPage")]
		public SearchQueriesPreviousPage[] SearchQueriesPreviousPage { get; set; }
		
		/// <summary>
		/// Metadata representing the current request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="request")]
		public SearchQueriesRequest[] SearchQueriesRequest { get; set; }
	}
	
	public class SearchQueriesNextPage
	{
		
		/// <summary>
		/// Number of search results returned in this set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// Restricts search results to documents originating in a particular country. You may use [Boolean operators](https://developers.google.com/custom-search/docs/json_api_reference#BooleanOrSearch) in the `cr` parameter's value. Google WebSearch determines the country of a document by analyzing the following: * The top-level domain (TLD) of the document's URL. * The geographic location of the web server's IP address. See [Country (cr) Parameter Values](https://developers.google.com/custom-search/docs/json_api_reference#countryCollections) for a list of valid values for this parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cr")]
		public string Cr { get; set; }
		
		/// <summary>
		/// The identifier of an engine created using the Programmable Search Engine [Control Panel](https://programmablesearchengine.google.com/). This is a custom property not defined in the OpenSearch spec. This parameter is **required**.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cx")]
		public string Cx { get; set; }
		
		/// <summary>
		/// Restricts results to URLs based on date. Supported values include: * `d[number]`: requests results from the specified number of past days. * `w[number]`: requests results from the specified number of past weeks. * `m[number]`: requests results from the specified number of past months. * `y[number]`: requests results from the specified number of past years.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateRestrict")]
		public string DateRestrict { get; set; }
		
		/// <summary>
		/// Enables or disables the [Simplified and Traditional Chinese Search](https://developers.google.com/custom-search/docs/json_api_reference#chineseSearch) feature. Supported values are: * `0`: enabled (default) * `1`: disabled
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableCnTwTranslation")]
		public string DisableCnTwTranslation { get; set; }
		
		/// <summary>
		/// Identifies a phrase that all documents in the search results must contain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exactTerms")]
		public string ExactTerms { get; set; }
		
		/// <summary>
		/// Identifies a word or phrase that should not appear in any documents in the search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="excludeTerms")]
		public string ExcludeTerms { get; set; }
		
		/// <summary>
		/// Restricts results to files of a specified extension. Filetypes supported by Google include: * Adobe Portable Document Format (`pdf`) * Adobe PostScript (`ps`) * Lotus 1-2-3 (`wk1`, `wk2`, `wk3`, `wk4`, `wk5`, `wki`, `wks`, `wku`) * Lotus WordPro (`lwp`) * Macwrite (`mw`) * Microsoft Excel (`xls`) * Microsoft PowerPoint (`ppt`) * Microsoft Word (`doc`) * Microsoft Works (`wks`, `wps`, `wdb`) * Microsoft Write (`wri`) * Rich Text Format (`rtf`) * Shockwave Flash (`swf`) * Text (`ans`, `txt`). Additional filetypes may be added in the future. An up-to-date list can always be found in Google's [file type FAQ](https://support.google.com/webmasters/answer/35287).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileType")]
		public string FileType { get; set; }
		
		/// <summary>
		/// Activates or deactivates the automatic filtering of Google search results. See [Automatic Filtering](https://developers.google.com/custom-search/docs/json_api_reference#automaticFiltering) for more information about Google's search results filters. Valid values for this parameter are: * `0`: Disabled * `1`: Enabled (default) **Note**: By default, Google applies filtering to all search results to improve the quality of those results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Boosts search results whose country of origin matches the parameter value. See [Country Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes) for a list of valid values. Specifying a `gl` parameter value in WebSearch requests should improve the relevance of results. This is particularly true for international customers and, even more specifically, for customers in English-speaking countries other than the United States.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gl")]
		public string Gl { get; set; }
		
		/// <summary>
		/// Specifies the Google domain (for example, google.com, google.de, or google.fr) to which the search should be limited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="googleHost")]
		public string GoogleHost { get; set; }
		
		/// <summary>
		/// Specifies the ending value for a search range. Use `cse:lowRange` and `cse:highrange` to append an inclusive search range of `lowRange...highRange` to the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="highRange")]
		public string HighRange { get; set; }
		
		/// <summary>
		/// Specifies the interface language (host language) of your user interface. Explicitly setting this parameter improves the performance and the quality of your search results. See the [Interface Languages](https://developers.google.com/custom-search/docs/json_api_reference#wsInterfaceLanguages) section of [Internationalizing Queries and Results Presentation](https://developers.google.com/custom-search/docs/json_api_reference#wsInternationalizing) for more information, and [Supported Interface Languages](https://developers.google.com/custom-search/docs/json_api_reference#interfaceLanguages) for a list of supported languages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hl")]
		public string Hl { get; set; }
		
		/// <summary>
		/// Appends the specified query terms to the query, as if they were combined with a logical `AND` operator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hq")]
		public string Hq { get; set; }
		
		/// <summary>
		/// Restricts results to images of a specified color type. Supported values are: * `mono` (black and white) * `gray` (grayscale) * `color` (color)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imgColorType")]
		public string ImgColorType { get; set; }
		
		/// <summary>
		/// Restricts results to images with a specific dominant color. Supported values are: * `red` * `orange` * `yellow` * `green` * `teal` * `blue` * `purple` * `pink` * `white` * `gray` * `black` * `brown`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imgDominantColor")]
		public string ImgDominantColor { get; set; }
		
		/// <summary>
		/// Restricts results to images of a specified size. Supported values are: * `icon` (small) * `small | medium | large | xlarge` (medium) * `xxlarge` (large) * `huge` (extra-large)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imgSize")]
		public string ImgSize { get; set; }
		
		/// <summary>
		/// Restricts results to images of a specified type. Supported values are: * `clipart` (Clip art) * `face` (Face) * `lineart` (Line drawing) * `photo` (Photo) * `animated` (Animated) * `stock` (Stock)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imgType")]
		public string ImgType { get; set; }
		
		/// <summary>
		/// The character encoding supported for search requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputEncoding")]
		public string InputEncoding { get; set; }
		
		/// <summary>
		/// The language of the search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// Specifies that all results should contain a link to a specific URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="linkSite")]
		public string LinkSite { get; set; }
		
		/// <summary>
		/// Specifies the starting value for a search range. Use `cse:lowRange` and `cse:highrange` to append an inclusive search range of `lowRange...highRange` to the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lowRange")]
		public string LowRange { get; set; }
		
		/// <summary>
		/// Provides additional search terms to check for in a document, where each document in the search results must contain at least one of the additional search terms. You can also use the [Boolean OR](https://developers.google.com/custom-search/docs/json_api_reference#BooleanOrSearch) query term for this type of query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orTerms")]
		public string OrTerms { get; set; }
		
		/// <summary>
		/// The character encoding supported for search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputEncoding")]
		public string OutputEncoding { get; set; }
		
		/// <summary>
		/// Specifies that all search results should be pages that are related to the specified URL. The parameter value should be a URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relatedSite")]
		public string RelatedSite { get; set; }
		
		/// <summary>
		/// Filters based on licensing. Supported values include: * `cc_publicdomain` * `cc_attribute` * `cc_sharealike` * `cc_noncommercial` * `cc_nonderived`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rights")]
		public string Rights { get; set; }
		
		/// <summary>
		/// Specifies the [SafeSearch level](https://developers.google.com/custom-search/docs/json_api_reference#safeSearchLevels) used for filtering out adult results. This is a custom property not defined in the OpenSearch spec. Valid parameter values are: * `"off"`: Disable SafeSearch * `"active"`: Enable SafeSearch
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="safe")]
		public string Safe { get; set; }
		
		/// <summary>
		/// The search terms entered by the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchTerms")]
		public string SearchTerms { get; set; }
		
		/// <summary>
		/// Allowed values are `web` or `image`. If unspecified, results are limited to webpages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchType")]
		public string SearchType { get; set; }
		
		/// <summary>
		/// Restricts results to URLs from a specified site.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="siteSearch")]
		public string SiteSearch { get; set; }
		
		/// <summary>
		/// Specifies whether to include or exclude results from the site named in the `sitesearch` parameter. Supported values are: * `i`: include content from site * `e`: exclude content from site
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="siteSearchFilter")]
		public string SiteSearchFilter { get; set; }
		
		/// <summary>
		/// Specifies that results should be sorted according to the specified expression. For example, sort by date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sort")]
		public string Sort { get; set; }
		
		/// <summary>
		/// The index of the current set of search results into the total set of results, where the index of the first result is 1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startIndex")]
		public System.Nullable<System.Int32> StartIndex { get; set; }
		
		/// <summary>
		/// The page number of this set of results, where the page length is set by the `count` property.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startPage")]
		public System.Nullable<System.Int32> StartPage { get; set; }
		
		/// <summary>
		/// A description of the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Estimated number of total search results. May not be accurate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalResults")]
		public string TotalResults { get; set; }
	}
	
	public class SearchQueriesPreviousPage
	{
		
		/// <summary>
		/// Number of search results returned in this set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// Restricts search results to documents originating in a particular country. You may use [Boolean operators](https://developers.google.com/custom-search/docs/json_api_reference#BooleanOrSearch) in the `cr` parameter's value. Google WebSearch determines the country of a document by analyzing the following: * The top-level domain (TLD) of the document's URL. * The geographic location of the web server's IP address. See [Country (cr) Parameter Values](https://developers.google.com/custom-search/docs/json_api_reference#countryCollections) for a list of valid values for this parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cr")]
		public string Cr { get; set; }
		
		/// <summary>
		/// The identifier of an engine created using the Programmable Search Engine [Control Panel](https://programmablesearchengine.google.com/). This is a custom property not defined in the OpenSearch spec. This parameter is **required**.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cx")]
		public string Cx { get; set; }
		
		/// <summary>
		/// Restricts results to URLs based on date. Supported values include: * `d[number]`: requests results from the specified number of past days. * `w[number]`: requests results from the specified number of past weeks. * `m[number]`: requests results from the specified number of past months. * `y[number]`: requests results from the specified number of past years.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateRestrict")]
		public string DateRestrict { get; set; }
		
		/// <summary>
		/// Enables or disables the [Simplified and Traditional Chinese Search](https://developers.google.com/custom-search/docs/json_api_reference#chineseSearch) feature. Supported values are: * `0`: enabled (default) * `1`: disabled
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableCnTwTranslation")]
		public string DisableCnTwTranslation { get; set; }
		
		/// <summary>
		/// Identifies a phrase that all documents in the search results must contain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exactTerms")]
		public string ExactTerms { get; set; }
		
		/// <summary>
		/// Identifies a word or phrase that should not appear in any documents in the search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="excludeTerms")]
		public string ExcludeTerms { get; set; }
		
		/// <summary>
		/// Restricts results to files of a specified extension. Filetypes supported by Google include: * Adobe Portable Document Format (`pdf`) * Adobe PostScript (`ps`) * Lotus 1-2-3 (`wk1`, `wk2`, `wk3`, `wk4`, `wk5`, `wki`, `wks`, `wku`) * Lotus WordPro (`lwp`) * Macwrite (`mw`) * Microsoft Excel (`xls`) * Microsoft PowerPoint (`ppt`) * Microsoft Word (`doc`) * Microsoft Works (`wks`, `wps`, `wdb`) * Microsoft Write (`wri`) * Rich Text Format (`rtf`) * Shockwave Flash (`swf`) * Text (`ans`, `txt`). Additional filetypes may be added in the future. An up-to-date list can always be found in Google's [file type FAQ](https://support.google.com/webmasters/answer/35287).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileType")]
		public string FileType { get; set; }
		
		/// <summary>
		/// Activates or deactivates the automatic filtering of Google search results. See [Automatic Filtering](https://developers.google.com/custom-search/docs/json_api_reference#automaticFiltering) for more information about Google's search results filters. Valid values for this parameter are: * `0`: Disabled * `1`: Enabled (default) **Note**: By default, Google applies filtering to all search results to improve the quality of those results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Boosts search results whose country of origin matches the parameter value. See [Country Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes) for a list of valid values. Specifying a `gl` parameter value in WebSearch requests should improve the relevance of results. This is particularly true for international customers and, even more specifically, for customers in English-speaking countries other than the United States.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gl")]
		public string Gl { get; set; }
		
		/// <summary>
		/// Specifies the Google domain (for example, google.com, google.de, or google.fr) to which the search should be limited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="googleHost")]
		public string GoogleHost { get; set; }
		
		/// <summary>
		/// Specifies the ending value for a search range. Use `cse:lowRange` and `cse:highrange` to append an inclusive search range of `lowRange...highRange` to the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="highRange")]
		public string HighRange { get; set; }
		
		/// <summary>
		/// Specifies the interface language (host language) of your user interface. Explicitly setting this parameter improves the performance and the quality of your search results. See the [Interface Languages](https://developers.google.com/custom-search/docs/json_api_reference#wsInterfaceLanguages) section of [Internationalizing Queries and Results Presentation](https://developers.google.com/custom-search/docs/json_api_reference#wsInternationalizing) for more information, and [Supported Interface Languages](https://developers.google.com/custom-search/docs/json_api_reference#interfaceLanguages) for a list of supported languages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hl")]
		public string Hl { get; set; }
		
		/// <summary>
		/// Appends the specified query terms to the query, as if they were combined with a logical `AND` operator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hq")]
		public string Hq { get; set; }
		
		/// <summary>
		/// Restricts results to images of a specified color type. Supported values are: * `mono` (black and white) * `gray` (grayscale) * `color` (color)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imgColorType")]
		public string ImgColorType { get; set; }
		
		/// <summary>
		/// Restricts results to images with a specific dominant color. Supported values are: * `red` * `orange` * `yellow` * `green` * `teal` * `blue` * `purple` * `pink` * `white` * `gray` * `black` * `brown`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imgDominantColor")]
		public string ImgDominantColor { get; set; }
		
		/// <summary>
		/// Restricts results to images of a specified size. Supported values are: * `icon` (small) * `small | medium | large | xlarge` (medium) * `xxlarge` (large) * `huge` (extra-large)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imgSize")]
		public string ImgSize { get; set; }
		
		/// <summary>
		/// Restricts results to images of a specified type. Supported values are: * `clipart` (Clip art) * `face` (Face) * `lineart` (Line drawing) * `photo` (Photo) * `animated` (Animated) * `stock` (Stock)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imgType")]
		public string ImgType { get; set; }
		
		/// <summary>
		/// The character encoding supported for search requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputEncoding")]
		public string InputEncoding { get; set; }
		
		/// <summary>
		/// The language of the search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// Specifies that all results should contain a link to a specific URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="linkSite")]
		public string LinkSite { get; set; }
		
		/// <summary>
		/// Specifies the starting value for a search range. Use `cse:lowRange` and `cse:highrange` to append an inclusive search range of `lowRange...highRange` to the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lowRange")]
		public string LowRange { get; set; }
		
		/// <summary>
		/// Provides additional search terms to check for in a document, where each document in the search results must contain at least one of the additional search terms. You can also use the [Boolean OR](https://developers.google.com/custom-search/docs/json_api_reference#BooleanOrSearch) query term for this type of query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orTerms")]
		public string OrTerms { get; set; }
		
		/// <summary>
		/// The character encoding supported for search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputEncoding")]
		public string OutputEncoding { get; set; }
		
		/// <summary>
		/// Specifies that all search results should be pages that are related to the specified URL. The parameter value should be a URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relatedSite")]
		public string RelatedSite { get; set; }
		
		/// <summary>
		/// Filters based on licensing. Supported values include: * `cc_publicdomain` * `cc_attribute` * `cc_sharealike` * `cc_noncommercial` * `cc_nonderived`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rights")]
		public string Rights { get; set; }
		
		/// <summary>
		/// Specifies the [SafeSearch level](https://developers.google.com/custom-search/docs/json_api_reference#safeSearchLevels) used for filtering out adult results. This is a custom property not defined in the OpenSearch spec. Valid parameter values are: * `"off"`: Disable SafeSearch * `"active"`: Enable SafeSearch
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="safe")]
		public string Safe { get; set; }
		
		/// <summary>
		/// The search terms entered by the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchTerms")]
		public string SearchTerms { get; set; }
		
		/// <summary>
		/// Allowed values are `web` or `image`. If unspecified, results are limited to webpages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchType")]
		public string SearchType { get; set; }
		
		/// <summary>
		/// Restricts results to URLs from a specified site.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="siteSearch")]
		public string SiteSearch { get; set; }
		
		/// <summary>
		/// Specifies whether to include or exclude results from the site named in the `sitesearch` parameter. Supported values are: * `i`: include content from site * `e`: exclude content from site
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="siteSearchFilter")]
		public string SiteSearchFilter { get; set; }
		
		/// <summary>
		/// Specifies that results should be sorted according to the specified expression. For example, sort by date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sort")]
		public string Sort { get; set; }
		
		/// <summary>
		/// The index of the current set of search results into the total set of results, where the index of the first result is 1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startIndex")]
		public System.Nullable<System.Int32> StartIndex { get; set; }
		
		/// <summary>
		/// The page number of this set of results, where the page length is set by the `count` property.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startPage")]
		public System.Nullable<System.Int32> StartPage { get; set; }
		
		/// <summary>
		/// A description of the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Estimated number of total search results. May not be accurate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalResults")]
		public string TotalResults { get; set; }
	}
	
	public class SearchQueriesRequest
	{
		
		/// <summary>
		/// Number of search results returned in this set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="count")]
		public System.Nullable<System.Int32> Count { get; set; }
		
		/// <summary>
		/// Restricts search results to documents originating in a particular country. You may use [Boolean operators](https://developers.google.com/custom-search/docs/json_api_reference#BooleanOrSearch) in the `cr` parameter's value. Google WebSearch determines the country of a document by analyzing the following: * The top-level domain (TLD) of the document's URL. * The geographic location of the web server's IP address. See [Country (cr) Parameter Values](https://developers.google.com/custom-search/docs/json_api_reference#countryCollections) for a list of valid values for this parameter.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cr")]
		public string Cr { get; set; }
		
		/// <summary>
		/// The identifier of an engine created using the Programmable Search Engine [Control Panel](https://programmablesearchengine.google.com/). This is a custom property not defined in the OpenSearch spec. This parameter is **required**.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cx")]
		public string Cx { get; set; }
		
		/// <summary>
		/// Restricts results to URLs based on date. Supported values include: * `d[number]`: requests results from the specified number of past days. * `w[number]`: requests results from the specified number of past weeks. * `m[number]`: requests results from the specified number of past months. * `y[number]`: requests results from the specified number of past years.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dateRestrict")]
		public string DateRestrict { get; set; }
		
		/// <summary>
		/// Enables or disables the [Simplified and Traditional Chinese Search](https://developers.google.com/custom-search/docs/json_api_reference#chineseSearch) feature. Supported values are: * `0`: enabled (default) * `1`: disabled
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="disableCnTwTranslation")]
		public string DisableCnTwTranslation { get; set; }
		
		/// <summary>
		/// Identifies a phrase that all documents in the search results must contain.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exactTerms")]
		public string ExactTerms { get; set; }
		
		/// <summary>
		/// Identifies a word or phrase that should not appear in any documents in the search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="excludeTerms")]
		public string ExcludeTerms { get; set; }
		
		/// <summary>
		/// Restricts results to files of a specified extension. Filetypes supported by Google include: * Adobe Portable Document Format (`pdf`) * Adobe PostScript (`ps`) * Lotus 1-2-3 (`wk1`, `wk2`, `wk3`, `wk4`, `wk5`, `wki`, `wks`, `wku`) * Lotus WordPro (`lwp`) * Macwrite (`mw`) * Microsoft Excel (`xls`) * Microsoft PowerPoint (`ppt`) * Microsoft Word (`doc`) * Microsoft Works (`wks`, `wps`, `wdb`) * Microsoft Write (`wri`) * Rich Text Format (`rtf`) * Shockwave Flash (`swf`) * Text (`ans`, `txt`). Additional filetypes may be added in the future. An up-to-date list can always be found in Google's [file type FAQ](https://support.google.com/webmasters/answer/35287).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="fileType")]
		public string FileType { get; set; }
		
		/// <summary>
		/// Activates or deactivates the automatic filtering of Google search results. See [Automatic Filtering](https://developers.google.com/custom-search/docs/json_api_reference#automaticFiltering) for more information about Google's search results filters. Valid values for this parameter are: * `0`: Disabled * `1`: Enabled (default) **Note**: By default, Google applies filtering to all search results to improve the quality of those results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="filter")]
		public string Filter { get; set; }
		
		/// <summary>
		/// Boosts search results whose country of origin matches the parameter value. See [Country Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes) for a list of valid values. Specifying a `gl` parameter value in WebSearch requests should improve the relevance of results. This is particularly true for international customers and, even more specifically, for customers in English-speaking countries other than the United States.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gl")]
		public string Gl { get; set; }
		
		/// <summary>
		/// Specifies the Google domain (for example, google.com, google.de, or google.fr) to which the search should be limited.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="googleHost")]
		public string GoogleHost { get; set; }
		
		/// <summary>
		/// Specifies the ending value for a search range. Use `cse:lowRange` and `cse:highrange` to append an inclusive search range of `lowRange...highRange` to the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="highRange")]
		public string HighRange { get; set; }
		
		/// <summary>
		/// Specifies the interface language (host language) of your user interface. Explicitly setting this parameter improves the performance and the quality of your search results. See the [Interface Languages](https://developers.google.com/custom-search/docs/json_api_reference#wsInterfaceLanguages) section of [Internationalizing Queries and Results Presentation](https://developers.google.com/custom-search/docs/json_api_reference#wsInternationalizing) for more information, and [Supported Interface Languages](https://developers.google.com/custom-search/docs/json_api_reference#interfaceLanguages) for a list of supported languages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hl")]
		public string Hl { get; set; }
		
		/// <summary>
		/// Appends the specified query terms to the query, as if they were combined with a logical `AND` operator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hq")]
		public string Hq { get; set; }
		
		/// <summary>
		/// Restricts results to images of a specified color type. Supported values are: * `mono` (black and white) * `gray` (grayscale) * `color` (color)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imgColorType")]
		public string ImgColorType { get; set; }
		
		/// <summary>
		/// Restricts results to images with a specific dominant color. Supported values are: * `red` * `orange` * `yellow` * `green` * `teal` * `blue` * `purple` * `pink` * `white` * `gray` * `black` * `brown`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imgDominantColor")]
		public string ImgDominantColor { get; set; }
		
		/// <summary>
		/// Restricts results to images of a specified size. Supported values are: * `icon` (small) * `small | medium | large | xlarge` (medium) * `xxlarge` (large) * `huge` (extra-large)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imgSize")]
		public string ImgSize { get; set; }
		
		/// <summary>
		/// Restricts results to images of a specified type. Supported values are: * `clipart` (Clip art) * `face` (Face) * `lineart` (Line drawing) * `photo` (Photo) * `animated` (Animated) * `stock` (Stock)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="imgType")]
		public string ImgType { get; set; }
		
		/// <summary>
		/// The character encoding supported for search requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputEncoding")]
		public string InputEncoding { get; set; }
		
		/// <summary>
		/// The language of the search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="language")]
		public string Language { get; set; }
		
		/// <summary>
		/// Specifies that all results should contain a link to a specific URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="linkSite")]
		public string LinkSite { get; set; }
		
		/// <summary>
		/// Specifies the starting value for a search range. Use `cse:lowRange` and `cse:highrange` to append an inclusive search range of `lowRange...highRange` to the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lowRange")]
		public string LowRange { get; set; }
		
		/// <summary>
		/// Provides additional search terms to check for in a document, where each document in the search results must contain at least one of the additional search terms. You can also use the [Boolean OR](https://developers.google.com/custom-search/docs/json_api_reference#BooleanOrSearch) query term for this type of query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="orTerms")]
		public string OrTerms { get; set; }
		
		/// <summary>
		/// The character encoding supported for search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="outputEncoding")]
		public string OutputEncoding { get; set; }
		
		/// <summary>
		/// Specifies that all search results should be pages that are related to the specified URL. The parameter value should be a URL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="relatedSite")]
		public string RelatedSite { get; set; }
		
		/// <summary>
		/// Filters based on licensing. Supported values include: * `cc_publicdomain` * `cc_attribute` * `cc_sharealike` * `cc_noncommercial` * `cc_nonderived`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="rights")]
		public string Rights { get; set; }
		
		/// <summary>
		/// Specifies the [SafeSearch level](https://developers.google.com/custom-search/docs/json_api_reference#safeSearchLevels) used for filtering out adult results. This is a custom property not defined in the OpenSearch spec. Valid parameter values are: * `"off"`: Disable SafeSearch * `"active"`: Enable SafeSearch
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="safe")]
		public string Safe { get; set; }
		
		/// <summary>
		/// The search terms entered by the user.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchTerms")]
		public string SearchTerms { get; set; }
		
		/// <summary>
		/// Allowed values are `web` or `image`. If unspecified, results are limited to webpages.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchType")]
		public string SearchType { get; set; }
		
		/// <summary>
		/// Restricts results to URLs from a specified site.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="siteSearch")]
		public string SiteSearch { get; set; }
		
		/// <summary>
		/// Specifies whether to include or exclude results from the site named in the `sitesearch` parameter. Supported values are: * `i`: include content from site * `e`: exclude content from site
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="siteSearchFilter")]
		public string SiteSearchFilter { get; set; }
		
		/// <summary>
		/// Specifies that results should be sorted according to the specified expression. For example, sort by date.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sort")]
		public string Sort { get; set; }
		
		/// <summary>
		/// The index of the current set of search results into the total set of results, where the index of the first result is 1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startIndex")]
		public System.Nullable<System.Int32> StartIndex { get; set; }
		
		/// <summary>
		/// The page number of this set of results, where the page length is set by the `count` property.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startPage")]
		public System.Nullable<System.Int32> StartPage { get; set; }
		
		/// <summary>
		/// A description of the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
		
		/// <summary>
		/// Estimated number of total search results. May not be accurate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalResults")]
		public string TotalResults { get; set; }
	}
	
	public class SearchSearchInformation
	{
		
		/// <summary>
		/// The time taken for the server to return search results, formatted according to locale style.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="formattedSearchTime")]
		public string FormattedSearchTime { get; set; }
		
		/// <summary>
		/// The total number of search results, formatted according to locale style.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="formattedTotalResults")]
		public string FormattedTotalResults { get; set; }
		
		/// <summary>
		/// The time taken for the server to return search results.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="searchTime")]
		public System.Nullable<System.Double> SearchTime { get; set; }
		
		/// <summary>
		/// The total number of search results returned by the query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="totalResults")]
		public string TotalResults { get; set; }
	}
	
	public class SearchSpelling
	{
		
		/// <summary>
		/// The corrected query.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="correctedQuery")]
		public string CorrectedQuery { get; set; }
		
		/// <summary>
		/// The corrected query, formatted in HTML.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="htmlCorrectedQuery")]
		public string HtmlCorrectedQuery { get; set; }
	}
	
	public class SearchUrl
	{
		
		/// <summary>
		/// The actual [OpenSearch template](http://www.opensearch.org/specifications/opensearch/1.1#opensearch_url_template_syntax) for this API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template")]
		public string Template { get; set; }
		
		/// <summary>
		/// The MIME type of the OpenSearch URL template for the Custom Search JSON API.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Returns metadata about the search performed, metadata about the engine used for the search, and the search results.
		/// Search_cse_list customsearch/v1
		/// </summary>
		/// <param name="c2coff">Enables or disables [Simplified and Traditional Chinese Search](https://developers.google.com/custom-search/docs/json_api_reference#chineseSearch). The default value for this parameter is 0 (zero), meaning that the feature is enabled. Supported values are: * `1`: Disabled * `0`: Enabled (default)</param>
		/// <param name="cr">Restricts search results to documents originating in a particular country. You may use [Boolean operators](https://developers.google.com/custom-search/docs/json_api_reference#booleanOperators) in the cr parameter's value. Google Search determines the country of a document by analyzing: * the top-level domain (TLD) of the document's URL * the geographic location of the Web server's IP address See the [Country Parameter Values](https://developers.google.com/custom-search/docs/json_api_reference#countryCollections) page for a list of valid values for this parameter.</param>
		/// <param name="cx">The Programmable Search Engine ID to use for this request.</param>
		/// <param name="dateRestrict">Restricts results to URLs based on date. Supported values include: * `d[number]`: requests results from the specified number of past days. * `w[number]`: requests results from the specified number of past weeks. * `m[number]`: requests results from the specified number of past months. * `y[number]`: requests results from the specified number of past years.</param>
		/// <param name="exactTerms">Identifies a phrase that all documents in the search results must contain.</param>
		/// <param name="excludeTerms">Identifies a word or phrase that should not appear in any documents in the search results.</param>
		/// <param name="fileType">Restricts results to files of a specified extension. A list of file types indexable by Google can be found in Search Console [Help Center](https://support.google.com/webmasters/answer/35287).</param>
		/// <param name="filter">Controls turning on or off the duplicate content filter. * See [Automatic Filtering](https://developers.google.com/custom-search/docs/json_api_reference#automaticFiltering) for more information about Google's search results filters. Note that host crowding filtering applies only to multi-site searches. * By default, Google applies filtering to all search results to improve the quality of those results. Acceptable values are: * `0`: Turns off duplicate content filter. * `1`: Turns on duplicate content filter.</param>
		/// <param name="gl">Geolocation of end user. * The `gl` parameter value is a two-letter country code. The `gl` parameter boosts search results whose country of origin matches the parameter value. See the [Country Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes) page for a list of valid values. * Specifying a `gl` parameter value should lead to more relevant results. This is particularly true for international customers and, even more specifically, for customers in English- speaking countries other than the United States.</param>
		/// <param name="googlehost">**Deprecated**. Use the `gl` parameter for a similar effect. The local Google domain (for example, google.com, google.de, or google.fr) to use to perform the search.</param>
		/// <param name="highRange">Specifies the ending value for a search range. * Use `lowRange` and `highRange` to append an inclusive search range of `lowRange...highRange` to the query.</param>
		/// <param name="hl">Sets the user interface language. * Explicitly setting this parameter improves the performance and the quality of your search results. * See the [Interface Languages](https://developers.google.com/custom-search/docs/json_api_reference#wsInterfaceLanguages) section of [Internationalizing Queries and Results Presentation](https://developers.google.com/custom-search/docs/json_api_reference#wsInternationalizing) for more information, and [Supported Interface Languages](https://developers.google.com/custom-search/docs/json_api_reference#interfaceLanguages) for a list of supported languages.</param>
		/// <param name="hq">Appends the specified query terms to the query, as if they were combined with a logical AND operator.</param>
		/// <param name="imgColorType">Returns black and white, grayscale, transparent, or color images. Acceptable values are: * `"color"` * `"gray"` * `"mono"`: black and white * `"trans"`: transparent background</param>
		/// <param name="imgDominantColor">Returns images of a specific dominant color. Acceptable values are: * `"black"` * `"blue"` * `"brown"` * `"gray"` * `"green"` * `"orange"` * `"pink"` * `"purple"` * `"red"` * `"teal"` * `"white"` * `"yellow"`</param>
		/// <param name="imgSize">Returns images of a specified size. Acceptable values are: * `"huge"` * `"icon"` * `"large"` * `"medium"` * `"small"` * `"xlarge"` * `"xxlarge"`</param>
		/// <param name="imgType">Returns images of a type. Acceptable values are: * `"clipart"` * `"face"` * `"lineart"` * `"stock"` * `"photo"` * `"animated"`</param>
		/// <param name="linkSite">Specifies that all search results should contain a link to a particular URL.</param>
		/// <param name="lowRange">Specifies the starting value for a search range. Use `lowRange` and `highRange` to append an inclusive search range of `lowRange...highRange` to the query.</param>
		/// <param name="lr">Restricts the search to documents written in a particular language (e.g., `lr=lang_ja`). Acceptable values are: * `"lang_ar"`: Arabic * `"lang_bg"`: Bulgarian * `"lang_ca"`: Catalan * `"lang_cs"`: Czech * `"lang_da"`: Danish * `"lang_de"`: German * `"lang_el"`: Greek * `"lang_en"`: English * `"lang_es"`: Spanish * `"lang_et"`: Estonian * `"lang_fi"`: Finnish * `"lang_fr"`: French * `"lang_hr"`: Croatian * `"lang_hu"`: Hungarian * `"lang_id"`: Indonesian * `"lang_is"`: Icelandic * `"lang_it"`: Italian * `"lang_iw"`: Hebrew * `"lang_ja"`: Japanese * `"lang_ko"`: Korean * `"lang_lt"`: Lithuanian * `"lang_lv"`: Latvian * `"lang_nl"`: Dutch * `"lang_no"`: Norwegian * `"lang_pl"`: Polish * `"lang_pt"`: Portuguese * `"lang_ro"`: Romanian * `"lang_ru"`: Russian * `"lang_sk"`: Slovak * `"lang_sl"`: Slovenian * `"lang_sr"`: Serbian * `"lang_sv"`: Swedish * `"lang_tr"`: Turkish * `"lang_zh-CN"`: Chinese (Simplified) * `"lang_zh-TW"`: Chinese (Traditional)</param>
		/// <param name="num">Number of search results to return. * Valid values are integers between 1 and 10, inclusive.</param>
		/// <param name="orTerms">Provides additional search terms to check for in a document, where each document in the search results must contain at least one of the additional search terms.</param>
		/// <param name="q">Query</param>
		/// <param name="relatedSite">Deprecated.</param>
		/// <param name="rights">Filters based on licensing. Supported values include: `cc_publicdomain`, `cc_attribute`, `cc_sharealike`, `cc_noncommercial`, `cc_nonderived` and combinations of these. See [typical combinations](https://wiki.creativecommons.org/wiki/CC_Search_integration).</param>
		/// <param name="safe">Search safety level. Acceptable values are: * `"active"`: Enables SafeSearch filtering. * `"off"`: Disables SafeSearch filtering. (default)</param>
		/// <param name="searchType">Specifies the search type: `image`. If unspecified, results are limited to webpages. Acceptable values are: * `"image"`: custom image search.</param>
		/// <param name="siteSearch">Specifies a given site which should always be included or excluded from results (see `siteSearchFilter` parameter, below).</param>
		/// <param name="siteSearchFilter">Controls whether to include or exclude results from the site named in the `siteSearch` parameter. Acceptable values are: * `"e"`: exclude * `"i"`: include</param>
		/// <param name="sort">The sort expression to apply to the results. The sort parameter specifies that the results be sorted according to the specified expression i.e. sort by date. [Example: sort=date](https://developers.google.com/custom-search/docs/structured_search#sort-by-attribute).</param>
		/// <param name="start">The index of the first result to return. The default number of results per page is 10, so `&start=11` would start at the top of the second page of results. **Note**: The JSON API will never return more than 100 results, even if more than 100 documents match the query, so setting the sum of `start + num` to a number greater than 100 will produce an error. Also note that the maximum value for `num` is 10.</param>
		/// <returns>Successful response</returns>
		public async Task<Search> Search_cse_listAsync(
					string c2coff, 
					string cr, 
					string cx, 
					string dateRestrict, 
					string exactTerms, 
					string excludeTerms, 
					string fileType, 
					string filter, 
					string gl, 
					string googlehost, 
					string highRange, 
					string hl, 
					string hq, 
					Search_cse_listImgColorType imgColorType, 
					Search_cse_listImgDominantColor imgDominantColor, 
					Search_cse_listImgSize imgSize, 
					Search_cse_listImgType imgType, 
					string linkSite, 
					string lowRange, 
					string lr, 
					int num, 
					string orTerms, 
					string q, 
					string relatedSite, 
					string rights, 
					Search_cse_listSafe safe, 
					Search_cse_listSearchType searchType, 
					string siteSearch, 
					Search_cse_listSiteSearchFilter siteSearchFilter, 
					string sort, 
					int start, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "customsearch/v1?c2coff=" + (c2coff==null? "" : System.Uri.EscapeDataString(c2coff))+"&cr=" + (cr==null? "" : System.Uri.EscapeDataString(cr))+"&cx=" + (cx==null? "" : System.Uri.EscapeDataString(cx))+"&dateRestrict=" + (dateRestrict==null? "" : System.Uri.EscapeDataString(dateRestrict))+"&exactTerms=" + (exactTerms==null? "" : System.Uri.EscapeDataString(exactTerms))+"&excludeTerms=" + (excludeTerms==null? "" : System.Uri.EscapeDataString(excludeTerms))+"&fileType=" + (fileType==null? "" : System.Uri.EscapeDataString(fileType))+"&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&gl=" + (gl==null? "" : System.Uri.EscapeDataString(gl))+"&googlehost=" + (googlehost==null? "" : System.Uri.EscapeDataString(googlehost))+"&highRange=" + (highRange==null? "" : System.Uri.EscapeDataString(highRange))+"&hl=" + (hl==null? "" : System.Uri.EscapeDataString(hl))+"&hq=" + (hq==null? "" : System.Uri.EscapeDataString(hq))+"&imgColorType=" + imgColorType+"&imgDominantColor=" + imgDominantColor+"&imgSize=" + imgSize+"&imgType=" + imgType+"&linkSite=" + (linkSite==null? "" : System.Uri.EscapeDataString(linkSite))+"&lowRange=" + (lowRange==null? "" : System.Uri.EscapeDataString(lowRange))+"&lr=" + (lr==null? "" : System.Uri.EscapeDataString(lr))+"&num="+num+"&orTerms=" + (orTerms==null? "" : System.Uri.EscapeDataString(orTerms))+"&q=" + (q==null? "" : System.Uri.EscapeDataString(q))+"&relatedSite=" + (relatedSite==null? "" : System.Uri.EscapeDataString(relatedSite))+"&rights=" + (rights==null? "" : System.Uri.EscapeDataString(rights))+"&safe=" + safe+"&searchType=" + searchType+"&siteSearch=" + (siteSearch==null? "" : System.Uri.EscapeDataString(siteSearch))+"&siteSearchFilter=" + siteSearchFilter+"&sort=" + (sort==null? "" : System.Uri.EscapeDataString(sort))+"&start="+start;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Search>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns metadata about the search performed, metadata about the engine used for the search, and the search results. Uses a small set of url patterns.
		/// Search_cse_siterestrict_list customsearch/v1/siterestrict
		/// </summary>
		/// <param name="c2coff">Enables or disables [Simplified and Traditional Chinese Search](https://developers.google.com/custom-search/docs/json_api_reference#chineseSearch). The default value for this parameter is 0 (zero), meaning that the feature is enabled. Supported values are: * `1`: Disabled * `0`: Enabled (default)</param>
		/// <param name="cr">Restricts search results to documents originating in a particular country. You may use [Boolean operators](https://developers.google.com/custom-search/docs/json_api_reference#booleanOperators) in the cr parameter's value. Google Search determines the country of a document by analyzing: * the top-level domain (TLD) of the document's URL * the geographic location of the Web server's IP address See the [Country Parameter Values](https://developers.google.com/custom-search/docs/json_api_reference#countryCollections) page for a list of valid values for this parameter.</param>
		/// <param name="cx">The Programmable Search Engine ID to use for this request.</param>
		/// <param name="dateRestrict">Restricts results to URLs based on date. Supported values include: * `d[number]`: requests results from the specified number of past days. * `w[number]`: requests results from the specified number of past weeks. * `m[number]`: requests results from the specified number of past months. * `y[number]`: requests results from the specified number of past years.</param>
		/// <param name="exactTerms">Identifies a phrase that all documents in the search results must contain.</param>
		/// <param name="excludeTerms">Identifies a word or phrase that should not appear in any documents in the search results.</param>
		/// <param name="fileType">Restricts results to files of a specified extension. A list of file types indexable by Google can be found in Search Console [Help Center](https://support.google.com/webmasters/answer/35287).</param>
		/// <param name="filter">Controls turning on or off the duplicate content filter. * See [Automatic Filtering](https://developers.google.com/custom-search/docs/json_api_reference#automaticFiltering) for more information about Google's search results filters. Note that host crowding filtering applies only to multi-site searches. * By default, Google applies filtering to all search results to improve the quality of those results. Acceptable values are: * `0`: Turns off duplicate content filter. * `1`: Turns on duplicate content filter.</param>
		/// <param name="gl">Geolocation of end user. * The `gl` parameter value is a two-letter country code. The `gl` parameter boosts search results whose country of origin matches the parameter value. See the [Country Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes) page for a list of valid values. * Specifying a `gl` parameter value should lead to more relevant results. This is particularly true for international customers and, even more specifically, for customers in English- speaking countries other than the United States.</param>
		/// <param name="googlehost">**Deprecated**. Use the `gl` parameter for a similar effect. The local Google domain (for example, google.com, google.de, or google.fr) to use to perform the search.</param>
		/// <param name="highRange">Specifies the ending value for a search range. * Use `lowRange` and `highRange` to append an inclusive search range of `lowRange...highRange` to the query.</param>
		/// <param name="hl">Sets the user interface language. * Explicitly setting this parameter improves the performance and the quality of your search results. * See the [Interface Languages](https://developers.google.com/custom-search/docs/json_api_reference#wsInterfaceLanguages) section of [Internationalizing Queries and Results Presentation](https://developers.google.com/custom-search/docs/json_api_reference#wsInternationalizing) for more information, and [Supported Interface Languages](https://developers.google.com/custom-search/docs/json_api_reference#interfaceLanguages) for a list of supported languages.</param>
		/// <param name="hq">Appends the specified query terms to the query, as if they were combined with a logical AND operator.</param>
		/// <param name="imgColorType">Returns black and white, grayscale, transparent, or color images. Acceptable values are: * `"color"` * `"gray"` * `"mono"`: black and white * `"trans"`: transparent background</param>
		/// <param name="imgDominantColor">Returns images of a specific dominant color. Acceptable values are: * `"black"` * `"blue"` * `"brown"` * `"gray"` * `"green"` * `"orange"` * `"pink"` * `"purple"` * `"red"` * `"teal"` * `"white"` * `"yellow"`</param>
		/// <param name="imgSize">Returns images of a specified size. Acceptable values are: * `"huge"` * `"icon"` * `"large"` * `"medium"` * `"small"` * `"xlarge"` * `"xxlarge"`</param>
		/// <param name="imgType">Returns images of a type. Acceptable values are: * `"clipart"` * `"face"` * `"lineart"` * `"stock"` * `"photo"` * `"animated"`</param>
		/// <param name="linkSite">Specifies that all search results should contain a link to a particular URL.</param>
		/// <param name="lowRange">Specifies the starting value for a search range. Use `lowRange` and `highRange` to append an inclusive search range of `lowRange...highRange` to the query.</param>
		/// <param name="lr">Restricts the search to documents written in a particular language (e.g., `lr=lang_ja`). Acceptable values are: * `"lang_ar"`: Arabic * `"lang_bg"`: Bulgarian * `"lang_ca"`: Catalan * `"lang_cs"`: Czech * `"lang_da"`: Danish * `"lang_de"`: German * `"lang_el"`: Greek * `"lang_en"`: English * `"lang_es"`: Spanish * `"lang_et"`: Estonian * `"lang_fi"`: Finnish * `"lang_fr"`: French * `"lang_hr"`: Croatian * `"lang_hu"`: Hungarian * `"lang_id"`: Indonesian * `"lang_is"`: Icelandic * `"lang_it"`: Italian * `"lang_iw"`: Hebrew * `"lang_ja"`: Japanese * `"lang_ko"`: Korean * `"lang_lt"`: Lithuanian * `"lang_lv"`: Latvian * `"lang_nl"`: Dutch * `"lang_no"`: Norwegian * `"lang_pl"`: Polish * `"lang_pt"`: Portuguese * `"lang_ro"`: Romanian * `"lang_ru"`: Russian * `"lang_sk"`: Slovak * `"lang_sl"`: Slovenian * `"lang_sr"`: Serbian * `"lang_sv"`: Swedish * `"lang_tr"`: Turkish * `"lang_zh-CN"`: Chinese (Simplified) * `"lang_zh-TW"`: Chinese (Traditional)</param>
		/// <param name="num">Number of search results to return. * Valid values are integers between 1 and 10, inclusive.</param>
		/// <param name="orTerms">Provides additional search terms to check for in a document, where each document in the search results must contain at least one of the additional search terms.</param>
		/// <param name="q">Query</param>
		/// <param name="relatedSite">Deprecated.</param>
		/// <param name="rights">Filters based on licensing. Supported values include: `cc_publicdomain`, `cc_attribute`, `cc_sharealike`, `cc_noncommercial`, `cc_nonderived` and combinations of these. See [typical combinations](https://wiki.creativecommons.org/wiki/CC_Search_integration).</param>
		/// <param name="safe">Search safety level. Acceptable values are: * `"active"`: Enables SafeSearch filtering. * `"off"`: Disables SafeSearch filtering. (default)</param>
		/// <param name="searchType">Specifies the search type: `image`. If unspecified, results are limited to webpages. Acceptable values are: * `"image"`: custom image search.</param>
		/// <param name="siteSearch">Specifies a given site which should always be included or excluded from results (see `siteSearchFilter` parameter, below).</param>
		/// <param name="siteSearchFilter">Controls whether to include or exclude results from the site named in the `siteSearch` parameter. Acceptable values are: * `"e"`: exclude * `"i"`: include</param>
		/// <param name="sort">The sort expression to apply to the results. The sort parameter specifies that the results be sorted according to the specified expression i.e. sort by date. [Example: sort=date](https://developers.google.com/custom-search/docs/structured_search#sort-by-attribute).</param>
		/// <param name="start">The index of the first result to return. The default number of results per page is 10, so `&start=11` would start at the top of the second page of results. **Note**: The JSON API will never return more than 100 results, even if more than 100 documents match the query, so setting the sum of `start + num` to a number greater than 100 will produce an error. Also note that the maximum value for `num` is 10.</param>
		/// <returns>Successful response</returns>
		public async Task<Search> Search_cse_siterestrict_listAsync(
					string c2coff, 
					string cr, 
					string cx, 
					string dateRestrict, 
					string exactTerms, 
					string excludeTerms, 
					string fileType, 
					string filter, 
					string gl, 
					string googlehost, 
					string highRange, 
					string hl, 
					string hq, 
					Search_cse_listImgColorType imgColorType, 
					Search_cse_listImgDominantColor imgDominantColor, 
					Search_cse_listImgSize imgSize, 
					Search_cse_listImgType imgType, 
					string linkSite, 
					string lowRange, 
					string lr, 
					int num, 
					string orTerms, 
					string q, 
					string relatedSite, 
					string rights, 
					Search_cse_listSafe safe, 
					Search_cse_listSearchType searchType, 
					string siteSearch, 
					Search_cse_listSiteSearchFilter siteSearchFilter, 
					string sort, 
					int start, 
					Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "customsearch/v1/siterestrict?c2coff=" + (c2coff==null? "" : System.Uri.EscapeDataString(c2coff))+"&cr=" + (cr==null? "" : System.Uri.EscapeDataString(cr))+"&cx=" + (cx==null? "" : System.Uri.EscapeDataString(cx))+"&dateRestrict=" + (dateRestrict==null? "" : System.Uri.EscapeDataString(dateRestrict))+"&exactTerms=" + (exactTerms==null? "" : System.Uri.EscapeDataString(exactTerms))+"&excludeTerms=" + (excludeTerms==null? "" : System.Uri.EscapeDataString(excludeTerms))+"&fileType=" + (fileType==null? "" : System.Uri.EscapeDataString(fileType))+"&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&gl=" + (gl==null? "" : System.Uri.EscapeDataString(gl))+"&googlehost=" + (googlehost==null? "" : System.Uri.EscapeDataString(googlehost))+"&highRange=" + (highRange==null? "" : System.Uri.EscapeDataString(highRange))+"&hl=" + (hl==null? "" : System.Uri.EscapeDataString(hl))+"&hq=" + (hq==null? "" : System.Uri.EscapeDataString(hq))+"&imgColorType=" + imgColorType+"&imgDominantColor=" + imgDominantColor+"&imgSize=" + imgSize+"&imgType=" + imgType+"&linkSite=" + (linkSite==null? "" : System.Uri.EscapeDataString(linkSite))+"&lowRange=" + (lowRange==null? "" : System.Uri.EscapeDataString(lowRange))+"&lr=" + (lr==null? "" : System.Uri.EscapeDataString(lr))+"&num="+num+"&orTerms=" + (orTerms==null? "" : System.Uri.EscapeDataString(orTerms))+"&q=" + (q==null? "" : System.Uri.EscapeDataString(q))+"&relatedSite=" + (relatedSite==null? "" : System.Uri.EscapeDataString(relatedSite))+"&rights=" + (rights==null? "" : System.Uri.EscapeDataString(rights))+"&safe=" + safe+"&searchType=" + searchType+"&siteSearch=" + (siteSearch==null? "" : System.Uri.EscapeDataString(siteSearch))+"&siteSearchFilter=" + siteSearchFilter+"&sort=" + (sort==null? "" : System.Uri.EscapeDataString(sort))+"&start="+start;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<Search>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum Search_cse_listImgColorType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="imgColorTypeUndefined")]
		imgColorTypeUndefined = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="mono")]
		mono = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="gray")]
		gray = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="color")]
		color = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="trans")]
		trans = 4,
	}
	
	public enum Search_cse_listImgDominantColor
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="imgDominantColorUndefined")]
		imgDominantColorUndefined = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="black")]
		black = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="blue")]
		blue = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="brown")]
		brown = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="gray")]
		gray = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="green")]
		green = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="orange")]
		orange = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="pink")]
		pink = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="purple")]
		purple = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="red")]
		red = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="teal")]
		teal = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="white")]
		white = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="yellow")]
		yellow = 12,
	}
	
	public enum Search_cse_listImgSize
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="imgSizeUndefined")]
		imgSizeUndefined = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HUGE")]
		HUGE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ICON")]
		ICON = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LARGE")]
		LARGE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MEDIUM")]
		MEDIUM = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SMALL")]
		SMALL = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XLARGE")]
		XLARGE = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="XXLARGE")]
		XXLARGE = 7,
	}
	
	public enum Search_cse_listImgType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="imgTypeUndefined")]
		imgTypeUndefined = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="clipart")]
		clipart = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="face")]
		face = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="lineart")]
		lineart = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="stock")]
		stock = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="photo")]
		photo = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="animated")]
		animated = 6,
	}
	
	public enum Search_cse_listSafe
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="safeUndefined")]
		safeUndefined = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="active")]
		active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="high")]
		high = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="medium")]
		medium = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="off")]
		off = 4,
	}
	
	public enum Search_cse_listSearchType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="searchTypeUndefined")]
		searchTypeUndefined = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="image")]
		image = 1,
	}
	
	public enum Search_cse_listSiteSearchFilter
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="siteSearchFilterUndefined")]
		siteSearchFilterUndefined = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="e")]
		e = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="i")]
		i = 2,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

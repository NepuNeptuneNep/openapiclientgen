//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAlarmModelResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelArn")]
		public string AlarmModelArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelVersion")]
		public string AlarmModelVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdateTime")]
		public System.DateTimeOffset LastUpdateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public AlarmModelVersionStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AlarmModelVersionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	/// <summary>
	/// Metadata that can be used to manage the resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tag
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// A rule that compares an input property value to a threshold value with a comparison operator.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SimpleRule
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inputProperty")]
		public string InputProperty { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="comparisonOperator")]
		public ComparisonOperator ComparisonOperator { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="threshold")]
		public string Threshold { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ComparisonOperator
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GREATER = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GREATER_OR_EQUAL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LESS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LESS_OR_EQUAL = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EQUAL = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_EQUAL = 5,
	}
	
	/// <summary>
	/// Contains the notification settings of an alarm model. The settings apply to all alarms that were created based on this alarm model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotificationAction
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="action")]
		public NotificationTargetActions Action { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="smsConfigurations")]
		public SMSConfiguration[] SmsConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="emailConfigurations")]
		public EmailConfiguration[] EmailConfigurations { get; set; }
	}
	
	/// <summary>
	/// Specifies an AWS Lambda function to manage alarm notifications. You can create one or use the <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/lambda-support.html">AWS Lambda function provided by AWS IoT Events</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotificationTargetActions
	{
		
		/// <summary>
		/// Calls a Lambda function, passing in information about the detector model instance and the event that triggered the action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lambdaAction")]
		public LambdaAction LambdaAction { get; set; }
	}
	
	/// <summary>
	/// Calls a Lambda function, passing in information about the detector model instance and the event that triggered the action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LambdaAction
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="functionArn")]
		public string FunctionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="payload")]
		public Payload Payload { get; set; }
	}
	
	/// <summary>
	/// <p>Information needed to configure the payload.</p> <p>By default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use <code>contentExpression</code>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Payload
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contentExpression")]
		public string ContentExpression { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public PayloadType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PayloadType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STRING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JSON = 1,
	}
	
	/// <summary>
	/// Contains the configuration information of SMS notifications.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SMSConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="senderId")]
		public string SenderId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="additionalMessage")]
		public string AdditionalMessage { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public RecipientDetail[] Recipients { get; set; }
	}
	
	/// <summary>
	/// The information that identifies the recipient.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecipientDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="ssoIdentity")]
		public SSOIdentity SsoIdentity { get; set; }
	}
	
	/// <summary>
	/// Contains information about your identity source in AWS Single Sign-On. For more information, see the <a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html">AWS Single Sign-On User Guide</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SSOIdentity
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="identityStoreId")]
		public string IdentityStoreId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="userId")]
		public string UserId { get; set; }
	}
	
	/// <summary>
	/// Contains the configuration information of email notifications.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmailConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="from")]
		public string From { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="content")]
		public EmailContent Content { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recipients")]
		public EmailRecipients Recipients { get; set; }
	}
	
	/// <summary>
	/// Contains the subject and message of an email.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmailContent
	{
		
		[System.Runtime.Serialization.DataMember(Name="subject")]
		public string Subject { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="additionalMessage")]
		public string AdditionalMessage { get; set; }
	}
	
	/// <summary>
	/// <p>Contains the information of one or more recipients who receive the emails.</p> <important> <p>You must <a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/addusers.html">add the users that receive emails to your AWS SSO store</a>.</p> </important>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmailRecipients
	{
		
		[System.Runtime.Serialization.DataMember(Name="to")]
		public RecipientDetail[] To { get; set; }
	}
	
	/// <summary>
	/// Specifies one of the following actions to receive notifications when the alarm state changes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AlarmAction
	{
		
		/// <summary>
		/// Information required to publish the Amazon SNS message.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sns")]
		public SNSTopicPublishAction Sns { get; set; }
		
		/// <summary>
		/// Information required to publish the MQTT message through the AWS IoT message broker.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iotTopicPublish")]
		public IotTopicPublishAction IotTopicPublish { get; set; }
		
		/// <summary>
		/// Calls a Lambda function, passing in information about the detector model instance and the event that triggered the action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lambda")]
		public LambdaAction Lambda { get; set; }
		
		/// <summary>
		/// Sends an AWS IoT Events input, passing in information about the detector model instance and the event that triggered the action.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iotEvents")]
		public IotEventsAction IotEvents { get; set; }
		
		/// <summary>
		/// Sends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sqs")]
		public SqsAction Sqs { get; set; }
		
		/// <summary>
		/// Sends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="firehose")]
		public FirehoseAction Firehose { get; set; }
		
		/// <summary>
		/// <p>Defines an action to write to the Amazon DynamoDB table that you created. The standard action payload contains all the information about the detector model instance and the event that triggered the action. You can customize the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html">payload</a>. One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify.</p> <p>You must use expressions for all parameters in <code>DynamoDBAction</code>. The expressions accept literals, operators, functions, references, and substitution templates.</p> <p class="title"> <b>Examples</b> </p> <ul> <li> <p>For literal values, the expressions must contain single quotes. For example, the value for the <code>hashKeyType</code> parameter can be <code>'STRING'</code>.</p> </li> <li> <p>For references, you must specify either variables or input values. For example, the value for the <code>hashKeyField</code> parameter can be <code>$input.GreenhouseInput.name</code>.</p> </li> <li> <p>For a substitution template, you must use <code>${}</code>, and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates.</p> <p>In the following example, the value for the <code>hashKeyValue</code> parameter uses a substitution template. </p> <p> <code>'${$input.GreenhouseInput.temperature * 6 / 5 + 32} in Fahrenheit'</code> </p> </li> <li> <p>For a string concatenation, you must use <code>+</code>. A string concatenation can also contain a combination of literals, operators, functions, references, and substitution templates.</p> <p>In the following example, the value for the <code>tableName</code> parameter uses a string concatenation. </p> <p> <code>'GreenhouseTemperatureTable ' + $input.GreenhouseInput.date</code> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html">Expressions</a> in the <i>AWS IoT Events Developer Guide</i>.</p> <p>If the defined payload type is a string, <code>DynamoDBAction</code> writes non-JSON data to the DynamoDB table as binary data. The DynamoDB console displays the data as Base64-encoded text. The value for the <code>payloadField</code> parameter is <code>&lt;payload-field&gt;_raw</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dynamoDB")]
		public DynamoDBAction DynamoDB { get; set; }
		
		/// <summary>
		/// <p>Defines an action to write to the Amazon DynamoDB table that you created. The default action payload contains all the information about the detector model instance and the event that triggered the action. You can customize the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html">payload</a>. A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify.</p> <p>You must use expressions for all parameters in <code>DynamoDBv2Action</code>. The expressions accept literals, operators, functions, references, and substitution templates.</p> <p class="title"> <b>Examples</b> </p> <ul> <li> <p>For literal values, the expressions must contain single quotes. For example, the value for the <code>tableName</code> parameter can be <code>'GreenhouseTemperatureTable'</code>.</p> </li> <li> <p>For references, you must specify either variables or input values. For example, the value for the <code>tableName</code> parameter can be <code>$variable.ddbtableName</code>.</p> </li> <li> <p>For a substitution template, you must use <code>${}</code>, and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates.</p> <p>In the following example, the value for the <code>contentExpression</code> parameter in <code>Payload</code> uses a substitution template. </p> <p> <code>'{\"sensorID\": \"${$input.GreenhouseInput.sensor_id}\", \"temperature\": \"${$input.GreenhouseInput.temperature * 9 / 5 + 32}\"}'</code> </p> </li> <li> <p>For a string concatenation, you must use <code>+</code>. A string concatenation can also contain a combination of literals, operators, functions, references, and substitution templates.</p> <p>In the following example, the value for the <code>tableName</code> parameter uses a string concatenation. </p> <p> <code>'GreenhouseTemperatureTable ' + $input.GreenhouseInput.date</code> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html">Expressions</a> in the <i>AWS IoT Events Developer Guide</i>.</p> <p>The value for the <code>type</code> parameter in <code>Payload</code> must be <code>JSON</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dynamoDBv2")]
		public DynamoDBv2Action DynamoDBv2 { get; set; }
		
		/// <summary>
		/// <p>Sends information about the detector model instance and the event that triggered the action to a specified asset property in AWS IoT SiteWise.</p> <p>You must use expressions for all parameters in <code>IotSiteWiseAction</code>. The expressions accept literals, operators, functions, references, and substitutions templates.</p> <p class="title"> <b>Examples</b> </p> <ul> <li> <p>For literal values, the expressions must contain single quotes. For example, the value for the <code>propertyAlias</code> parameter can be <code>'/company/windfarm/3/turbine/7/temperature'</code>.</p> </li> <li> <p>For references, you must specify either variables or input values. For example, the value for the <code>assetId</code> parameter can be <code>$input.TurbineInput.assetId1</code>.</p> </li> <li> <p>For a substitution template, you must use <code>${}</code>, and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates.</p> <p>In the following example, the value for the <code>propertyAlias</code> parameter uses a substitution template. </p> <p> <code>'company/windfarm/${$input.TemperatureInput.sensorData.windfarmID}/turbine/ ${$input.TemperatureInput.sensorData.turbineID}/temperature'</code> </p> </li> </ul> <p>You must specify either <code>propertyAlias</code> or both <code>assetId</code> and <code>propertyId</code> to identify the target asset property in AWS IoT SiteWise.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html">Expressions</a> in the <i>AWS IoT Events Developer Guide</i>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="iotSiteWise")]
		public IotSiteWiseAction IotSiteWise { get; set; }
	}
	
	/// <summary>
	/// Information required to publish the Amazon SNS message.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SNSTopicPublishAction
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="targetArn")]
		public string TargetArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="payload")]
		public Payload Payload { get; set; }
	}
	
	/// <summary>
	/// Information required to publish the MQTT message through the AWS IoT message broker.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IotTopicPublishAction
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mqttTopic")]
		public string MqttTopic { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="payload")]
		public Payload Payload { get; set; }
	}
	
	/// <summary>
	/// Sends an AWS IoT Events input, passing in information about the detector model instance and the event that triggered the action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IotEventsAction
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inputName")]
		public string InputName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="payload")]
		public Payload Payload { get; set; }
	}
	
	/// <summary>
	/// Sends information about the detector model instance and the event that triggered the action to an Amazon SQS queue.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SqsAction
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="queueUrl")]
		public string QueueUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="useBase64")]
		public System.Nullable<System.Boolean> UseBase64 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="payload")]
		public Payload Payload { get; set; }
	}
	
	/// <summary>
	/// Sends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FirehoseAction
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="deliveryStreamName")]
		public string DeliveryStreamName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="separator")]
		public string Separator { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="payload")]
		public Payload Payload { get; set; }
	}
	
	/// <summary>
	/// <p>Defines an action to write to the Amazon DynamoDB table that you created. The standard action payload contains all the information about the detector model instance and the event that triggered the action. You can customize the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html">payload</a>. One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify.</p> <p>You must use expressions for all parameters in <code>DynamoDBAction</code>. The expressions accept literals, operators, functions, references, and substitution templates.</p> <p class="title"> <b>Examples</b> </p> <ul> <li> <p>For literal values, the expressions must contain single quotes. For example, the value for the <code>hashKeyType</code> parameter can be <code>'STRING'</code>.</p> </li> <li> <p>For references, you must specify either variables or input values. For example, the value for the <code>hashKeyField</code> parameter can be <code>$input.GreenhouseInput.name</code>.</p> </li> <li> <p>For a substitution template, you must use <code>${}</code>, and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates.</p> <p>In the following example, the value for the <code>hashKeyValue</code> parameter uses a substitution template. </p> <p> <code>'${$input.GreenhouseInput.temperature * 6 / 5 + 32} in Fahrenheit'</code> </p> </li> <li> <p>For a string concatenation, you must use <code>+</code>. A string concatenation can also contain a combination of literals, operators, functions, references, and substitution templates.</p> <p>In the following example, the value for the <code>tableName</code> parameter uses a string concatenation. </p> <p> <code>'GreenhouseTemperatureTable ' + $input.GreenhouseInput.date</code> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html">Expressions</a> in the <i>AWS IoT Events Developer Guide</i>.</p> <p>If the defined payload type is a string, <code>DynamoDBAction</code> writes non-JSON data to the DynamoDB table as binary data. The DynamoDB console displays the data as Base64-encoded text. The value for the <code>payloadField</code> parameter is <code>&lt;payload-field&gt;_raw</code>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DynamoDBAction
	{
		
		[System.Runtime.Serialization.DataMember(Name="hashKeyType")]
		public string HashKeyType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="hashKeyField")]
		public string HashKeyField { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="hashKeyValue")]
		public string HashKeyValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rangeKeyType")]
		public string RangeKeyType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rangeKeyField")]
		public string RangeKeyField { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rangeKeyValue")]
		public string RangeKeyValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="operation")]
		public string Operation { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="payloadField")]
		public string PayloadField { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tableName")]
		public string TableName { get; set; }
		
		/// <summary>
		/// <p>Information needed to configure the payload.</p> <p>By default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use <code>contentExpression</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payload")]
		public Payload Payload { get; set; }
	}
	
	/// <summary>
	/// <p>Defines an action to write to the Amazon DynamoDB table that you created. The default action payload contains all the information about the detector model instance and the event that triggered the action. You can customize the <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html">payload</a>. A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify.</p> <p>You must use expressions for all parameters in <code>DynamoDBv2Action</code>. The expressions accept literals, operators, functions, references, and substitution templates.</p> <p class="title"> <b>Examples</b> </p> <ul> <li> <p>For literal values, the expressions must contain single quotes. For example, the value for the <code>tableName</code> parameter can be <code>'GreenhouseTemperatureTable'</code>.</p> </li> <li> <p>For references, you must specify either variables or input values. For example, the value for the <code>tableName</code> parameter can be <code>$variable.ddbtableName</code>.</p> </li> <li> <p>For a substitution template, you must use <code>${}</code>, and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates.</p> <p>In the following example, the value for the <code>contentExpression</code> parameter in <code>Payload</code> uses a substitution template. </p> <p> <code>'{\"sensorID\": \"${$input.GreenhouseInput.sensor_id}\", \"temperature\": \"${$input.GreenhouseInput.temperature * 9 / 5 + 32}\"}'</code> </p> </li> <li> <p>For a string concatenation, you must use <code>+</code>. A string concatenation can also contain a combination of literals, operators, functions, references, and substitution templates.</p> <p>In the following example, the value for the <code>tableName</code> parameter uses a string concatenation. </p> <p> <code>'GreenhouseTemperatureTable ' + $input.GreenhouseInput.date</code> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html">Expressions</a> in the <i>AWS IoT Events Developer Guide</i>.</p> <p>The value for the <code>type</code> parameter in <code>Payload</code> must be <code>JSON</code>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DynamoDBv2Action
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tableName")]
		public string TableName { get; set; }
		
		/// <summary>
		/// <p>Information needed to configure the payload.</p> <p>By default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use <code>contentExpression</code>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="payload")]
		public Payload Payload { get; set; }
	}
	
	/// <summary>
	/// <p>Sends information about the detector model instance and the event that triggered the action to a specified asset property in AWS IoT SiteWise.</p> <p>You must use expressions for all parameters in <code>IotSiteWiseAction</code>. The expressions accept literals, operators, functions, references, and substitutions templates.</p> <p class="title"> <b>Examples</b> </p> <ul> <li> <p>For literal values, the expressions must contain single quotes. For example, the value for the <code>propertyAlias</code> parameter can be <code>'/company/windfarm/3/turbine/7/temperature'</code>.</p> </li> <li> <p>For references, you must specify either variables or input values. For example, the value for the <code>assetId</code> parameter can be <code>$input.TurbineInput.assetId1</code>.</p> </li> <li> <p>For a substitution template, you must use <code>${}</code>, and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates.</p> <p>In the following example, the value for the <code>propertyAlias</code> parameter uses a substitution template. </p> <p> <code>'company/windfarm/${$input.TemperatureInput.sensorData.windfarmID}/turbine/ ${$input.TemperatureInput.sensorData.turbineID}/temperature'</code> </p> </li> </ul> <p>You must specify either <code>propertyAlias</code> or both <code>assetId</code> and <code>propertyId</code> to identify the target asset property in AWS IoT SiteWise.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html">Expressions</a> in the <i>AWS IoT Events Developer Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IotSiteWiseAction
	{
		
		[System.Runtime.Serialization.DataMember(Name="entryId")]
		public string EntryId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="assetId")]
		public string AssetId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="propertyId")]
		public string PropertyId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="propertyAlias")]
		public string PropertyAlias { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="propertyValue")]
		public AssetPropertyValue PropertyValue { get; set; }
	}
	
	/// <summary>
	/// <p>A structure that contains value information. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_AssetPropertyValue.html">AssetPropertyValue</a> in the <i>AWS IoT SiteWise API Reference</i>.</p> <p>You must use expressions for all parameters in <code>AssetPropertyValue</code>. The expressions accept literals, operators, functions, references, and substitution templates.</p> <p class="title"> <b>Examples</b> </p> <ul> <li> <p>For literal values, the expressions must contain single quotes. For example, the value for the <code>quality</code> parameter can be <code>'GOOD'</code>.</p> </li> <li> <p>For references, you must specify either variables or input values. For example, the value for the <code>quality</code> parameter can be <code>$input.TemperatureInput.sensorData.quality</code>.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html">Expressions</a> in the <i>AWS IoT Events Developer Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetPropertyValue
	{
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public AssetPropertyVariant Value { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamp")]
		public AssetPropertyTimestamp Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="quality")]
		public string Quality { get; set; }
	}
	
	/// <summary>
	/// <p>A structure that contains an asset property value. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_Variant.html">Variant</a> in the <i>AWS IoT SiteWise API Reference</i>.</p> <p>You must use expressions for all parameters in <code>AssetPropertyVariant</code>. The expressions accept literals, operators, functions, references, and substitution templates.</p> <p class="title"> <b>Examples</b> </p> <ul> <li> <p>For literal values, the expressions must contain single quotes. For example, the value for the <code>integerValue</code> parameter can be <code>'100'</code>.</p> </li> <li> <p>For references, you must specify either variables or parameters. For example, the value for the <code>booleanValue</code> parameter can be <code>$variable.offline</code>.</p> </li> <li> <p>For a substitution template, you must use <code>${}</code>, and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates. </p> <p>In the following example, the value for the <code>doubleValue</code> parameter uses a substitution template. </p> <p> <code>'${$input.TemperatureInput.sensorData.temperature * 6 / 5 + 32}'</code> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html">Expressions</a> in the <i>AWS IoT Events Developer Guide</i>.</p> <p>You must specify one of the following value types, depending on the <code>dataType</code> of the specified asset property. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_AssetProperty.html">AssetProperty</a> in the <i>AWS IoT SiteWise API Reference</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetPropertyVariant
	{
		
		[System.Runtime.Serialization.DataMember(Name="stringValue")]
		public string StringValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="integerValue")]
		public string IntegerValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="doubleValue")]
		public string DoubleValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="booleanValue")]
		public string BooleanValue { get; set; }
	}
	
	/// <summary>
	/// <p>A structure that contains timestamp information. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_TimeInNanos.html">TimeInNanos</a> in the <i>AWS IoT SiteWise API Reference</i>.</p> <p>You must use expressions for all parameters in <code>AssetPropertyTimestamp</code>. The expressions accept literals, operators, functions, references, and substitution templates.</p> <p class="title"> <b>Examples</b> </p> <ul> <li> <p>For literal values, the expressions must contain single quotes. For example, the value for the <code>timeInSeconds</code> parameter can be <code>'1586400675'</code>.</p> </li> <li> <p>For references, you must specify either variables or input values. For example, the value for the <code>offsetInNanos</code> parameter can be <code>$variable.time</code>.</p> </li> <li> <p>For a substitution template, you must use <code>${}</code>, and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates.</p> <p>In the following example, the value for the <code>timeInSeconds</code> parameter uses a substitution template.</p> <p> <code>'${$input.TemperatureInput.sensorData.timestamp / 1000}'</code> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html">Expressions</a> in the <i>AWS IoT Events Developer Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetPropertyTimestamp
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timeInSeconds")]
		public string TimeInSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="offsetInNanos")]
		public string OffsetInNanos { get; set; }
	}
	
	/// <summary>
	/// Specifies the default alarm state. The configuration applies to all alarms that were created based on this alarm model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InitializationConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="disabledOnInitialization")]
		public bool DisabledOnInitialization { get; set; }
	}
	
	/// <summary>
	/// Specifies whether to get notified for alarm state changes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AcknowledgeFlow
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public bool Enabled { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidRequestException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceInUseException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceAlreadyExistsException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LimitExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ThrottlingException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalFailureException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceUnavailableException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDetectorModelResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelConfiguration")]
		public DetectorModelConfiguration DetectorModelConfiguration { get; set; }
	}
	
	/// <summary>
	/// Information about how the detector model is configured.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectorModelConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelName")]
		public string DetectorModelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelVersion")]
		public string DetectorModelVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelDescription")]
		public string DetectorModelDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelArn")]
		public string DetectorModelArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdateTime")]
		public System.DateTimeOffset LastUpdateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DetectorModelVersionStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="evaluationMethod")]
		public EvaluationMethod EvaluationMethod { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DetectorModelVersionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPRECATED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DRAFT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PAUSED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EvaluationMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BATCH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SERIAL = 1,
	}
	
	/// <summary>
	/// Information that defines a state of a detector.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class State
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="stateName")]
		public string StateName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="onInput")]
		public OnInputLifecycle OnInput { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="onEnter")]
		public OnEnterLifecycle OnEnter { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="onExit")]
		public OnExitLifecycle OnExit { get; set; }
	}
	
	/// <summary>
	/// Specifies the actions performed when the <code>condition</code> evaluates to TRUE.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OnInputLifecycle
	{
		
		[System.Runtime.Serialization.DataMember(Name="events")]
		public Event[] Events { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="transitionEvents")]
		public TransitionEvent[] TransitionEvents { get; set; }
	}
	
	/// <summary>
	/// Specifies the <code>actions</code> to be performed when the <code>condition</code> evaluates to TRUE.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Event
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="eventName")]
		public string EventName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public string Condition { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="actions")]
		public Action[] Actions { get; set; }
	}
	
	/// <summary>
	/// An action to be performed when the <code>condition</code> is TRUE.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Action
	{
		
		[System.Runtime.Serialization.DataMember(Name="setVariable")]
		public SetVariableAction SetVariable { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sns")]
		public SNSTopicPublishAction Sns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iotTopicPublish")]
		public IotTopicPublishAction IotTopicPublish { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="setTimer")]
		public SetTimerAction SetTimer { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clearTimer")]
		public ClearTimerAction ClearTimer { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resetTimer")]
		public ResetTimerAction ResetTimer { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lambda")]
		public LambdaAction Lambda { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iotEvents")]
		public IotEventsAction IotEvents { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="sqs")]
		public SqsAction Sqs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="firehose")]
		public FirehoseAction Firehose { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dynamoDB")]
		public DynamoDBAction DynamoDB { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dynamoDBv2")]
		public DynamoDBv2Action DynamoDBv2 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iotSiteWise")]
		public IotSiteWiseAction IotSiteWise { get; set; }
	}
	
	/// <summary>
	/// Information about the variable and its new value.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetVariableAction
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="variableName")]
		public string VariableName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// Information needed to set the timer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SetTimerAction
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timerName")]
		public string TimerName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="seconds")]
		public System.Nullable<System.Int32> Seconds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="durationExpression")]
		public string DurationExpression { get; set; }
	}
	
	/// <summary>
	/// Information needed to clear the timer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ClearTimerAction
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timerName")]
		public string TimerName { get; set; }
	}
	
	/// <summary>
	/// Information required to reset the timer. The timer is reset to the previously evaluated result of the duration. The duration expression isn't reevaluated when you reset the timer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResetTimerAction
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="timerName")]
		public string TimerName { get; set; }
	}
	
	/// <summary>
	/// Specifies the actions performed and the next state entered when a <code>condition</code> evaluates to TRUE.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TransitionEvent
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="eventName")]
		public string EventName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public string Condition { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="actions")]
		public Action[] Actions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="nextState")]
		public string NextState { get; set; }
	}
	
	/// <summary>
	/// When entering this state, perform these <code>actions</code> if the <code>condition</code> is TRUE.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OnEnterLifecycle
	{
		
		[System.Runtime.Serialization.DataMember(Name="events")]
		public Event[] Events { get; set; }
	}
	
	/// <summary>
	/// When exiting this state, perform these <code>actions</code> if the specified <code>condition</code> is <code>TRUE</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OnExitLifecycle
	{
		
		[System.Runtime.Serialization.DataMember(Name="events")]
		public Event[] Events { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateInputResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputConfiguration")]
		public InputConfiguration InputConfiguration { get; set; }
	}
	
	/// <summary>
	/// Information about the configuration of an input.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inputName")]
		public string InputName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inputDescription")]
		public string InputDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inputArn")]
		public string InputArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="lastUpdateTime")]
		public System.DateTimeOffset LastUpdateTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public InputStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InputStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 3,
	}
	
	/// <summary>
	/// The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using <code>BatchPutMessage</code>. Each such message contains a JSON payload. Those attributes (and their paired values) specified here are available for use in the <code>condition</code> expressions used by detectors. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Attribute
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="jsonPath")]
		public string JsonPath { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAlarmModelResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDetectorModelResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteInputResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAlarmModelResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelArn")]
		public string AlarmModelArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelVersion")]
		public string AlarmModelVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdateTime")]
		public System.DateTimeOffset LastUpdateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public AlarmModelVersionStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusMessage")]
		public string StatusMessage { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelName")]
		public string AlarmModelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelDescription")]
		public string AlarmModelDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public System.Nullable<System.Int32> Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmRule")]
		public AlarmRule AlarmRule { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmNotification")]
		public AlarmNotification AlarmNotification { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmEventActions")]
		public AlarmEventActions AlarmEventActions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmCapabilities")]
		public AlarmCapabilities AlarmCapabilities { get; set; }
	}
	
	/// <summary>
	/// Defines when your alarm is invoked.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AlarmRule
	{
		
		[System.Runtime.Serialization.DataMember(Name="simpleRule")]
		public SimpleRule SimpleRule { get; set; }
	}
	
	/// <summary>
	/// Contains information about one or more notification actions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AlarmNotification
	{
		
		[System.Runtime.Serialization.DataMember(Name="notificationActions")]
		public NotificationAction[] NotificationActions { get; set; }
	}
	
	/// <summary>
	/// Contains information about one or more alarm actions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AlarmEventActions
	{
		
		[System.Runtime.Serialization.DataMember(Name="alarmActions")]
		public AlarmAction[] AlarmActions { get; set; }
	}
	
	/// <summary>
	/// Contains the configuration information of alarm state changes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AlarmCapabilities
	{
		
		[System.Runtime.Serialization.DataMember(Name="initializationConfiguration")]
		public InitializationConfiguration InitializationConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="acknowledgeFlow")]
		public AcknowledgeFlow AcknowledgeFlow { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDetectorModelResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="detectorModel")]
		public DetectorModel DetectorModel { get; set; }
	}
	
	/// <summary>
	/// Information about the detector model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectorModel
	{
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelDefinition")]
		public DetectorModelDefinition DetectorModelDefinition { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelConfiguration")]
		public DetectorModelConfiguration DetectorModelConfiguration { get; set; }
	}
	
	/// <summary>
	/// Information that defines how a detector operates.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectorModelDefinition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="states")]
		public State[] States { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="initialStateName")]
		public string InitialStateName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDetectorModelAnalysisResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public AnalysisStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AnalysisStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeInputResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="input")]
		public Input Input { get; set; }
	}
	
	/// <summary>
	/// Information about the input.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Input
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputConfiguration")]
		public InputConfiguration InputConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inputDefinition")]
		public InputDefinition InputDefinition { get; set; }
	}
	
	/// <summary>
	/// The definition of the input.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputDefinition
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public Attribute[] Attributes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLoggingOptionsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="loggingOptions")]
		public LoggingOptions LoggingOptions { get; set; }
	}
	
	/// <summary>
	/// The values of the AWS IoT Events logging options.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LoggingOptions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="level")]
		public LoggingLevel Level { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public bool Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="detectorDebugOptions")]
		public DetectorDebugOption[] DetectorDebugOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LoggingLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFO = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEBUG = 2,
	}
	
	/// <summary>
	/// The detector model and the specific detectors (instances) for which the logging level is given.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectorDebugOption
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detectorModelName")]
		public string DetectorModelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="keyValue")]
		public string KeyValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnsupportedOperationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDetectorModelAnalysisResultsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="analysisResults")]
		public AnalysisResult[] AnalysisResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains the result of the analysis.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="level")]
		public AnalysisResultLevel Level { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="locations")]
		public AnalysisResultLocation[] Locations { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AnalysisResultLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFO = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WARNING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 2,
	}
	
	/// <summary>
	/// Contains information that you can use to locate the field in your detector model that the analysis result references.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AnalysisResultLocation
	{
		
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAlarmModelVersionsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelVersionSummaries")]
		public AlarmModelVersionSummary[] AlarmModelVersionSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains a summary of an alarm model version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AlarmModelVersionSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelName")]
		public string AlarmModelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelArn")]
		public string AlarmModelArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelVersion")]
		public string AlarmModelVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdateTime")]
		public System.DateTimeOffset LastUpdateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public AlarmModelVersionStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusMessage")]
		public string StatusMessage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAlarmModelsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelSummaries")]
		public AlarmModelSummary[] AlarmModelSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains a summary of an alarm model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AlarmModelSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelDescription")]
		public string AlarmModelDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelName")]
		public string AlarmModelName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDetectorModelVersionsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelVersionSummaries")]
		public DetectorModelVersionSummary[] DetectorModelVersionSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information about the detector model version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectorModelVersionSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelName")]
		public string DetectorModelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelVersion")]
		public string DetectorModelVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelArn")]
		public string DetectorModelArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdateTime")]
		public System.DateTimeOffset LastUpdateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public DetectorModelVersionStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="evaluationMethod")]
		public EvaluationMethod EvaluationMethod { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDetectorModelsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelSummaries")]
		public DetectorModelSummary[] DetectorModelSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information about the detector model.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DetectorModelSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelName")]
		public string DetectorModelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelDescription")]
		public string DetectorModelDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInputRoutingsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="routedResources")]
		public RoutedResource[] RoutedResources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Contains information about the routed resource. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RoutedResource
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
	}
	
	/// <summary>
	///  The identifier of the input routed to AWS IoT Events. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IotEventsInputIdentifier
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inputName")]
		public string InputName { get; set; }
	}
	
	/// <summary>
	///  The identifer of the input routed from AWS IoT SiteWise. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IotSiteWiseInputIdentifier
	{
		
		[System.Runtime.Serialization.DataMember(Name="iotSiteWiseAssetModelPropertyIdentifier")]
		public IotSiteWiseAssetModelPropertyIdentifier IotSiteWiseAssetModelPropertyIdentifier { get; set; }
	}
	
	/// <summary>
	///  The asset model property identifer of the input routed from AWS IoT SiteWise. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IotSiteWiseAssetModelPropertyIdentifier
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="assetModelId")]
		public string AssetModelId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="propertyId")]
		public string PropertyId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInputsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputSummaries")]
		public InputSummary[] InputSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information about the input.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputName")]
		public string InputName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inputDescription")]
		public string InputDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inputArn")]
		public string InputArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdateTime")]
		public System.DateTimeOffset LastUpdateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public InputStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartDetectorModelAnalysisResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="analysisId")]
		public string AnalysisId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAlarmModelResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelArn")]
		public string AlarmModelArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelVersion")]
		public string AlarmModelVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdateTime")]
		public System.DateTimeOffset LastUpdateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public AlarmModelVersionStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDetectorModelResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelConfiguration")]
		public DetectorModelConfiguration DetectorModelConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateInputResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputConfiguration")]
		public InputConfiguration InputConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAlarmModelRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="alarmModelName")]
		public string AlarmModelName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelDescription")]
		public string AlarmModelDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public System.Nullable<System.Int32> Severity { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="alarmRule")]
		public AlarmRule AlarmRule { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmNotification")]
		public AlarmNotification AlarmNotification { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmEventActions")]
		public AlarmEventActions AlarmEventActions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmCapabilities")]
		public AlarmCapabilities AlarmCapabilities { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDetectorModelRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detectorModelName")]
		public string DetectorModelName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detectorModelDefinition")]
		public DetectorModelDefinition DetectorModelDefinition { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelDescription")]
		public string DetectorModelDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="evaluationMethod")]
		public EvaluationMethod EvaluationMethod { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateInputRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inputName")]
		public string InputName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inputDescription")]
		public string InputDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inputDefinition")]
		public InputDefinition InputDefinition { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAlarmModelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDetectorModelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteInputRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAlarmModelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDetectorModelAnalysisRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeDetectorModelRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeInputRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeLoggingOptionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDetectorModelAnalysisResultsRequest
	{
	}
	
	/// <summary>
	///  The identifer of the input. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputIdentifier
	{
		
		[System.Runtime.Serialization.DataMember(Name="iotEventsInputIdentifier")]
		public IotEventsInputIdentifier IotEventsInputIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iotSiteWiseInputIdentifier")]
		public IotSiteWiseInputIdentifier IotSiteWiseInputIdentifier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAlarmModelVersionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAlarmModelsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDetectorModelVersionsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDetectorModelsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInputRoutingsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inputIdentifier")]
		public InputIdentifier InputIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListInputsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutLoggingOptionsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="loggingOptions")]
		public LoggingOptions LoggingOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartDetectorModelAnalysisRequest
	{
		
		/// <summary>
		/// Information that defines how a detector operates.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detectorModelDefinition")]
		public DetectorModelDefinition DetectorModelDefinition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateAlarmModelRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="alarmModelDescription")]
		public string AlarmModelDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public System.Nullable<System.Int32> Severity { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="alarmRule")]
		public AlarmRule AlarmRule { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmNotification")]
		public AlarmNotification AlarmNotification { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmEventActions")]
		public AlarmEventActions AlarmEventActions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="alarmCapabilities")]
		public AlarmCapabilities AlarmCapabilities { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateDetectorModelRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detectorModelDefinition")]
		public DetectorModelDefinition DetectorModelDefinition { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="detectorModelDescription")]
		public string DetectorModelDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="evaluationMethod")]
		public EvaluationMethod EvaluationMethod { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateInputRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="inputDescription")]
		public string InputDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inputDefinition")]
		public InputDefinition InputDefinition { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Creates an alarm model to monitor an AWS IoT Events input attribute. You can use the alarm to get notified when the value is outside a specified range. For more information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/create-alarms.html">Create an alarm model</a> in the <i>AWS IoT Events Developer Guide</i>.
		/// CreateAlarmModel alarm-models
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateAlarmModelResponse> CreateAlarmModelAsync(CreateAlarmModelPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "alarm-models";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateAlarmModelResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the alarm models that you created. The operation returns only the metadata associated with each alarm model.
		/// ListAlarmModels alarm-models
		/// </summary>
		/// <param name="nextToken">The token that you can use to return the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 250
		// </param>
		/// <returns>Success</returns>
		public async Task<ListAlarmModelsResponse> ListAlarmModelsAsync(string nextToken, int maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "alarm-models?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListAlarmModelsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a detector model.
		/// CreateDetectorModel detector-models
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateDetectorModelResponse> CreateDetectorModelAsync(CreateDetectorModelPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "detector-models";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateDetectorModelResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the detector models you have created. Only the metadata associated with each detector model is returned.
		/// ListDetectorModels detector-models
		/// </summary>
		/// <param name="nextToken">The token that you can use to return the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 250
		// </param>
		/// <returns>Success</returns>
		public async Task<ListDetectorModelsResponse> ListDetectorModelsAsync(string nextToken, int maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "detector-models?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListDetectorModelsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an input.
		/// CreateInput inputs
		/// </summary>
		public async Task CreateInputAsync(CreateInputPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "inputs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the inputs you have created.
		/// ListInputs inputs
		/// </summary>
		/// <param name="nextToken">The token that you can use to return the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 250
		// </param>
		/// <returns>Success</returns>
		public async Task<ListInputsResponse> ListInputsAsync(string nextToken, int maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "inputs?nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListInputsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an alarm model. Any alarm instances that were created based on this alarm model are also deleted. This action can't be undone.
		/// DeleteAlarmModel alarm-models/{alarmModelName}
		/// </summary>
		/// <param name="alarmModelName">The name of the alarm model.
		/// Min length: 1
		/// Max length: 128
		// </param>
		public async Task DeleteAlarmModelAsync(string alarmModelName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "alarm-models/"+ (alarmModelName==null? "" : System.Uri.EscapeDataString(alarmModelName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves information about an alarm model. If you don't specify a value for the <code>alarmModelVersion</code> parameter, the latest version is returned.
		/// DescribeAlarmModel alarm-models/{alarmModelName}
		/// </summary>
		/// <param name="alarmModelName">The name of the alarm model.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="version">The version of the alarm model.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeAlarmModelResponse> DescribeAlarmModelAsync(string alarmModelName, string version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "alarm-models/"+ (alarmModelName==null? "" : System.Uri.EscapeDataString(alarmModelName))+"&version=" + (version==null? "" : System.Uri.EscapeDataString(version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeAlarmModelResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates an alarm model. Any alarms that were created based on the previous version are deleted and then created again as new data arrives.
		/// UpdateAlarmModel alarm-models/{alarmModelName}
		/// </summary>
		/// <param name="alarmModelName">The name of the alarm model.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateAlarmModelResponse> UpdateAlarmModelAsync(string alarmModelName, UpdateAlarmModelPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "alarm-models/"+ (alarmModelName==null? "" : System.Uri.EscapeDataString(alarmModelName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateAlarmModelResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a detector model. Any active instances of the detector model are also deleted.
		/// DeleteDetectorModel detector-models/{detectorModelName}
		/// </summary>
		/// <param name="detectorModelName">The name of the detector model to be deleted.
		/// Min length: 1
		/// Max length: 128
		// </param>
		public async Task DeleteDetectorModelAsync(string detectorModelName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "detector-models/"+ (detectorModelName==null? "" : System.Uri.EscapeDataString(detectorModelName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes a detector model. If the <code>version</code> parameter is not specified, information about the latest version is returned.
		/// DescribeDetectorModel detector-models/{detectorModelName}
		/// </summary>
		/// <param name="detectorModelName">The name of the detector model.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="version">The version of the detector model.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeDetectorModelResponse> DescribeDetectorModelAsync(string detectorModelName, string version, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "detector-models/"+ (detectorModelName==null? "" : System.Uri.EscapeDataString(detectorModelName))+"&version=" + (version==null? "" : System.Uri.EscapeDataString(version));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeDetectorModelResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a detector model. Detectors (instances) spawned by the previous version are deleted and then re-created as new inputs arrive.
		/// UpdateDetectorModel detector-models/{detectorModelName}
		/// </summary>
		/// <param name="detectorModelName">The name of the detector model that is updated.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateDetectorModelResponse> UpdateDetectorModelAsync(string detectorModelName, UpdateDetectorModelPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "detector-models/"+ (detectorModelName==null? "" : System.Uri.EscapeDataString(detectorModelName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateDetectorModelResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an input.
		/// DeleteInput inputs/{inputName}
		/// </summary>
		/// <param name="inputName">The name of the input to delete.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteInputResponse> DeleteInputAsync(string inputName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "inputs/"+ (inputName==null? "" : System.Uri.EscapeDataString(inputName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteInputResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Describes an input.
		/// DescribeInput inputs/{inputName}
		/// </summary>
		/// <param name="inputName">The name of the input.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<DescribeInputResponse> DescribeInputAsync(string inputName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "inputs/"+ (inputName==null? "" : System.Uri.EscapeDataString(inputName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeInputResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates an input.
		/// UpdateInput inputs/{inputName}
		/// </summary>
		/// <param name="inputName">The name of the input you want to update.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateInputResponse> UpdateInputAsync(string inputName, UpdateInputPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "inputs/"+ (inputName==null? "" : System.Uri.EscapeDataString(inputName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateInputResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Retrieves runtime information about a detector model analysis.</p> <note> <p>After AWS IoT Events starts analyzing your detector model, you have up to 24 hours to retrieve the analysis results.</p> </note>
		/// DescribeDetectorModelAnalysis analysis/detector-models/{analysisId}
		/// </summary>
		/// <param name="analysisId">The ID of the analysis result that you want to retrieve.</param>
		/// <returns>Success</returns>
		public async Task<DescribeDetectorModelAnalysisResponse> DescribeDetectorModelAnalysisAsync(string analysisId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analysis/detector-models/"+ (analysisId==null? "" : System.Uri.EscapeDataString(analysisId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeDetectorModelAnalysisResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves the current settings of the AWS IoT Events logging options.
		/// DescribeLoggingOptions logging
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeLoggingOptionsResponse> DescribeLoggingOptionsAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "logging";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeLoggingOptionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Sets or updates the AWS IoT Events logging options.</p> <p>If you update the value of any <code>loggingOptions</code> field, it takes up to one minute for the change to take effect. If you change the policy attached to the role you specified in the <code>roleArn</code> field (for example, to correct an invalid policy), it takes up to five minutes for that change to take effect.</p>
		/// PutLoggingOptions logging
		/// </summary>
		/// <returns>Success</returns>
		public async Task PutLoggingOptionsAsync(PutLoggingOptionsPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "logging";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Retrieves one or more analysis results of the detector model.</p> <note> <p>After AWS IoT Events starts analyzing your detector model, you have up to 24 hours to retrieve the analysis results.</p> </note>
		/// GetDetectorModelAnalysisResults analysis/detector-models/{analysisId}/results
		/// </summary>
		/// <param name="analysisId">The ID of the analysis result that you want to retrieve.</param>
		/// <param name="nextToken">The token that you can use to return the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to be returned per request.</param>
		/// <returns>Success</returns>
		public async Task<GetDetectorModelAnalysisResultsResponse> GetDetectorModelAnalysisResultsAsync(string analysisId, string nextToken, int maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analysis/detector-models/"+ (analysisId==null? "" : System.Uri.EscapeDataString(analysisId))+"/results&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetDetectorModelAnalysisResultsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all the versions of an alarm model. The operation returns only the metadata associated with each alarm model version.
		/// ListAlarmModelVersions alarm-models/{alarmModelName}/versions
		/// </summary>
		/// <param name="alarmModelName">The name of the alarm model.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="nextToken">The token that you can use to return the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 250
		// </param>
		/// <returns>Success</returns>
		public async Task<ListAlarmModelVersionsResponse> ListAlarmModelVersionsAsync(string alarmModelName, string nextToken, int maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "alarm-models/"+ (alarmModelName==null? "" : System.Uri.EscapeDataString(alarmModelName))+"/versions&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListAlarmModelVersionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all the versions of a detector model. Only the metadata associated with each detector model version is returned.
		/// ListDetectorModelVersions detector-models/{detectorModelName}/versions
		/// </summary>
		/// <param name="detectorModelName">The name of the detector model whose versions are returned.
		/// Min length: 1
		/// Max length: 128
		// </param>
		/// <param name="nextToken">The token that you can use to return the next set of results.</param>
		/// <param name="maxResults">The maximum number of results to be returned per request.
		/// Minimum: 1
		/// Maximum: 250
		// </param>
		/// <returns>Success</returns>
		public async Task<ListDetectorModelVersionsResponse> ListDetectorModelVersionsAsync(string detectorModelName, string nextToken, int maxResults, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "detector-models/"+ (detectorModelName==null? "" : System.Uri.EscapeDataString(detectorModelName))+"/versions&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&maxResults="+maxResults;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListDetectorModelVersionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists one or more input routings.
		/// ListInputRoutings input-routings
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListInputRoutingsResponse> ListInputRoutingsAsync(ListInputRoutingsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "input-routings";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListInputRoutingsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the tags (metadata) you have assigned to the resource.
		/// ListTagsForResource tags#resourceArn
		/// </summary>
		/// <param name="resourceArn">The ARN of the resource.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string resourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags#resourceArn?resourceArn=" + (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds to or modifies the tags of the given resource. Tags are metadata that can be used to manage a resource.
		/// TagResource tags#resourceArn
		/// </summary>
		/// <param name="resourceArn">The ARN of the resource.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(string resourceArn, TagResourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags#resourceArn?resourceArn=" + (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Performs an analysis of your detector model. For more information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-analyze-api.html">Troubleshooting a detector model</a> in the <i>AWS IoT Events Developer Guide</i>.
		/// StartDetectorModelAnalysis analysis/detector-models/
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartDetectorModelAnalysisResponse> StartDetectorModelAnalysisAsync(StartDetectorModelAnalysisPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "analysis/detector-models/";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StartDetectorModelAnalysisResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes the given tags (metadata) from the resource.
		/// UntagResource tags#resourceArn&tagKeys
		/// </summary>
		/// <param name="resourceArn">The ARN of the resource.
		/// Min length: 1
		/// Max length: 2048
		// </param>
		/// <param name="tagKeys">A list of the keys of the tags to be removed from the resource.</param>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(string resourceArn, string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags#resourceArn&tagKeys?resourceArn=" + (resourceArn==null? "" : System.Uri.EscapeDataString(resourceArn))+"&"+string.Join("&", tagKeys.Select(z => $"tagKeys={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UntagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class CreateAlarmModelPostBody
	{
		
		/// <summary>
		/// A unique name that helps you identify the alarm model. You can't change this name after you create the alarm model.
		/// Required
		/// Min length: 1
		/// Max length: 128
		/// Pattern: ^[a-zA-Z0-9_-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="alarmModelName")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-zA-Z0-9_-]+$")]
		public string AlarmModelName { get; set; }
		
		/// <summary>
		/// A description that tells you what the alarm model detects.
		/// Max length: 128
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alarmModelDescription")]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		public string AlarmModelDescription { get; set; }
		
		/// <summary>
		/// The ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
		/// Required
		/// Min length: 1
		/// Max length: 2048
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// <p>A list of key-value pairs that contain metadata for the alarm model. The tags help you manage the alarm model. For more information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/tagging-iotevents.html">Tagging your AWS IoT Events resources</a> in the <i>AWS IoT Events Developer Guide</i>.</p> <p>You can create up to 50 tags for one alarm model.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// An input attribute used as a key to create an alarm. AWS IoT Events routes <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_Input.html">inputs</a> associated with this key to the alarm.
		/// Min length: 1
		/// Max length: 128
		/// Pattern: ^((`[\w\- ]+`)|([\w\-]+))(\.((`[\w- ]+`)|([\w\-]+)))*$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^((`[\w\- ]+`)|([\w\-]+))(\.((`[\w- ]+`)|([\w\-]+)))*$")]
		public string Key { get; set; }
		
		/// <summary>
		/// A non-negative integer that reflects the severity level of the alarm.
		/// Minimum: 0
		/// Maximum: 2147483647
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="severity")]
		[System.ComponentModel.DataAnnotations.Range(0, 2147483647)]
		public System.Nullable<System.Int32> Severity { get; set; }
		
		/// <summary>
		/// Defines when your alarm is invoked.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="alarmRule")]
		public CreateAlarmModelPostBodyAlarmRule AlarmRule { get; set; }
		
		/// <summary>
		/// Contains information about one or more notification actions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alarmNotification")]
		public CreateAlarmModelPostBodyAlarmNotification AlarmNotification { get; set; }
		
		/// <summary>
		/// Contains information about one or more alarm actions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alarmEventActions")]
		public CreateAlarmModelPostBodyAlarmEventActions AlarmEventActions { get; set; }
		
		/// <summary>
		/// Contains the configuration information of alarm state changes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alarmCapabilities")]
		public CreateAlarmModelPostBodyAlarmCapabilities AlarmCapabilities { get; set; }
	}
	
	public class CreateAlarmModelPostBodyAlarmRule
	{
		
		[System.Runtime.Serialization.DataMember(Name="simpleRule")]
		public SimpleRule SimpleRule { get; set; }
	}
	
	public class CreateAlarmModelPostBodyAlarmNotification
	{
		
		[System.Runtime.Serialization.DataMember(Name="notificationActions")]
		public NotificationAction[] NotificationActions { get; set; }
	}
	
	public class CreateAlarmModelPostBodyAlarmEventActions
	{
		
		[System.Runtime.Serialization.DataMember(Name="alarmActions")]
		public AlarmAction[] AlarmActions { get; set; }
	}
	
	public class CreateAlarmModelPostBodyAlarmCapabilities
	{
		
		[System.Runtime.Serialization.DataMember(Name="initializationConfiguration")]
		public InitializationConfiguration InitializationConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="acknowledgeFlow")]
		public AcknowledgeFlow AcknowledgeFlow { get; set; }
	}
	
	public class CreateDetectorModelPostBody
	{
		
		/// <summary>
		/// The name of the detector model.
		/// Required
		/// Min length: 1
		/// Max length: 128
		/// Pattern: ^[a-zA-Z0-9_-]+$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detectorModelName")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-zA-Z0-9_-]+$")]
		public string DetectorModelName { get; set; }
		
		/// <summary>
		/// Information that defines how a detector operates.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detectorModelDefinition")]
		public CreateDetectorModelPostBodyDetectorModelDefinition DetectorModelDefinition { get; set; }
		
		/// <summary>
		/// A brief description of the detector model.
		/// Max length: 128
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectorModelDescription")]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		public string DetectorModelDescription { get; set; }
		
		/// <summary>
		/// The input attribute key used to identify a device or system to create a detector (an instance of the detector model) and then to route each input received to the appropriate detector (instance). This parameter uses a JSON-path expression in the message payload of each input to specify the attribute-value pair that is used to identify the device associated with the input.
		/// Min length: 1
		/// Max length: 128
		/// Pattern: ^((`[\w\- ]+`)|([\w\-]+))(\.((`[\w- ]+`)|([\w\-]+)))*$
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="key")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^((`[\w\- ]+`)|([\w\-]+))(\.((`[\w- ]+`)|([\w\-]+)))*$")]
		public string Key { get; set; }
		
		/// <summary>
		/// The ARN of the role that grants permission to AWS IoT Events to perform its operations.
		/// Required
		/// Min length: 1
		/// Max length: 2048
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Metadata that can be used to manage the detector model.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// Information about the order in which events are evaluated and how actions are executed. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluationMethod")]
		public EvaluationMethod EvaluationMethod { get; set; }
	}
	
	public class CreateDetectorModelPostBodyDetectorModelDefinition
	{
		
		[System.Runtime.Serialization.DataMember(Name="states")]
		public State[] States { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="initialStateName")]
		public string InitialStateName { get; set; }
	}
	
	public class CreateInputPostBody
	{
		
		/// <summary>
		/// The name you want to give to the input.
		/// Required
		/// Min length: 1
		/// Max length: 128
		/// Pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inputName")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-zA-Z][a-zA-Z0-9_]*$")]
		public string InputName { get; set; }
		
		/// <summary>
		/// A brief description of the input.
		/// Max length: 128
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputDescription")]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		public string InputDescription { get; set; }
		
		/// <summary>
		/// The definition of the input.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inputDefinition")]
		public CreateInputPostBodyInputDefinition InputDefinition { get; set; }
		
		/// <summary>
		/// Metadata that can be used to manage the input.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public Tag[] Tags { get; set; }
	}
	
	public class CreateInputPostBodyInputDefinition
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public Attribute[] Attributes { get; set; }
	}
	
	public class UpdateAlarmModelPostBody
	{
		
		/// <summary>
		/// The description of the alarm model.
		/// Max length: 128
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alarmModelDescription")]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		public string AlarmModelDescription { get; set; }
		
		/// <summary>
		/// The ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
		/// Required
		/// Min length: 1
		/// Max length: 2048
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// A non-negative integer that reflects the severity level of the alarm.
		/// Minimum: 0
		/// Maximum: 2147483647
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="severity")]
		[System.ComponentModel.DataAnnotations.Range(0, 2147483647)]
		public System.Nullable<System.Int32> Severity { get; set; }
		
		/// <summary>
		/// Defines when your alarm is invoked.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="alarmRule")]
		public UpdateAlarmModelPostBodyAlarmRule AlarmRule { get; set; }
		
		/// <summary>
		/// Contains information about one or more notification actions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alarmNotification")]
		public UpdateAlarmModelPostBodyAlarmNotification AlarmNotification { get; set; }
		
		/// <summary>
		/// Contains information about one or more alarm actions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alarmEventActions")]
		public UpdateAlarmModelPostBodyAlarmEventActions AlarmEventActions { get; set; }
		
		/// <summary>
		/// Contains the configuration information of alarm state changes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="alarmCapabilities")]
		public UpdateAlarmModelPostBodyAlarmCapabilities AlarmCapabilities { get; set; }
	}
	
	public class UpdateAlarmModelPostBodyAlarmRule
	{
		
		[System.Runtime.Serialization.DataMember(Name="simpleRule")]
		public SimpleRule SimpleRule { get; set; }
	}
	
	public class UpdateAlarmModelPostBodyAlarmNotification
	{
		
		[System.Runtime.Serialization.DataMember(Name="notificationActions")]
		public NotificationAction[] NotificationActions { get; set; }
	}
	
	public class UpdateAlarmModelPostBodyAlarmEventActions
	{
		
		[System.Runtime.Serialization.DataMember(Name="alarmActions")]
		public AlarmAction[] AlarmActions { get; set; }
	}
	
	public class UpdateAlarmModelPostBodyAlarmCapabilities
	{
		
		[System.Runtime.Serialization.DataMember(Name="initializationConfiguration")]
		public InitializationConfiguration InitializationConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="acknowledgeFlow")]
		public AcknowledgeFlow AcknowledgeFlow { get; set; }
	}
	
	public class UpdateDetectorModelPostBody
	{
		
		/// <summary>
		/// Information that defines how a detector operates.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detectorModelDefinition")]
		public UpdateDetectorModelPostBodyDetectorModelDefinition DetectorModelDefinition { get; set; }
		
		/// <summary>
		/// A brief description of the detector model.
		/// Max length: 128
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="detectorModelDescription")]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		public string DetectorModelDescription { get; set; }
		
		/// <summary>
		/// The ARN of the role that grants permission to AWS IoT Events to perform its operations.
		/// Required
		/// Min length: 1
		/// Max length: 2048
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(2048)]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Information about the order in which events are evaluated and how actions are executed. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="evaluationMethod")]
		public EvaluationMethod EvaluationMethod { get; set; }
	}
	
	public class UpdateDetectorModelPostBodyDetectorModelDefinition
	{
		
		[System.Runtime.Serialization.DataMember(Name="states")]
		public State[] States { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="initialStateName")]
		public string InitialStateName { get; set; }
	}
	
	public class UpdateInputPutBody
	{
		
		/// <summary>
		/// A brief description of the input.
		/// Max length: 128
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="inputDescription")]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		public string InputDescription { get; set; }
		
		/// <summary>
		/// The definition of the input.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inputDefinition")]
		public UpdateInputPutBodyInputDefinition InputDefinition { get; set; }
	}
	
	public class UpdateInputPutBodyInputDefinition
	{
		
		[System.Runtime.Serialization.DataMember(Name="attributes")]
		public Attribute[] Attributes { get; set; }
	}
	
	public class PutLoggingOptionsPutBody
	{
		
		/// <summary>
		/// The values of the AWS IoT Events logging options.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="loggingOptions")]
		public PutLoggingOptionsPutBodyLoggingOptions LoggingOptions { get; set; }
	}
	
	public class PutLoggingOptionsPutBodyLoggingOptions
	{
		
		[System.Runtime.Serialization.DataMember(Name="roleArn")]
		public string RoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="level")]
		public LoggingLevel Level { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="detectorDebugOptions")]
		public DetectorDebugOption[] DetectorDebugOptions { get; set; }
	}
	
	public class ListInputRoutingsPostBody
	{
		
		/// <summary>
		///  The identifer of the input. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="inputIdentifier")]
		public ListInputRoutingsPostBodyInputIdentifier InputIdentifier { get; set; }
		
		/// <summary>
		///  The maximum number of results to be returned per request. 
		/// Minimum: 1
		/// Maximum: 250
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		[System.ComponentModel.DataAnnotations.Range(1, 250)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  The token that you can use to return the next set of results. 
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	public class ListInputRoutingsPostBodyInputIdentifier
	{
		
		[System.Runtime.Serialization.DataMember(Name="iotEventsInputIdentifier")]
		public IotEventsInputIdentifier IotEventsInputIdentifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="iotSiteWiseInputIdentifier")]
		public IotSiteWiseInputIdentifier IotSiteWiseInputIdentifier { get; set; }
	}
	
	public class TagResourcePostBody
	{
		
		/// <summary>
		/// The new or modified tags for the resource.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public Tag[] Tags { get; set; }
	}
	
	public class StartDetectorModelAnalysisPostBody
	{
		
		/// <summary>
		/// Information that defines how a detector operates.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="detectorModelDefinition")]
		public StartDetectorModelAnalysisPostBodyDetectorModelDefinition DetectorModelDefinition { get; set; }
	}
	
	public class StartDetectorModelAnalysisPostBodyDetectorModelDefinition
	{
		
		[System.Runtime.Serialization.DataMember(Name="states")]
		public State[] States { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="initialStateName")]
		public string InitialStateName { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

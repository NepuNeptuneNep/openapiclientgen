//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateConnectorResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="connectorArn")]
		public string ConnectorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connectorName")]
		public string ConnectorName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connectorState")]
		public ConnectorState ConnectorState { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum ConnectorState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RUNNING")]
		RUNNING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CREATING")]
		CREATING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UPDATING")]
		UPDATING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DELETING")]
		DELETING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FAILED")]
		FAILED = 4,
	}
	
	/// <summary>
	/// Specifies how the connector scales.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AutoScaling
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="maxWorkerCount")]
		public int MaxWorkerCount { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mcuCount")]
		public int McuCount { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="minWorkerCount")]
		public int MinWorkerCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scaleInPolicy")]
		public ScaleInPolicy ScaleInPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scaleOutPolicy")]
		public ScaleOutPolicy ScaleOutPolicy { get; set; }
	}
	
	/// <summary>
	/// The scale-in policy for the connector.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ScaleInPolicy
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cpuUtilizationPercentage")]
		public int CpuUtilizationPercentage { get; set; }
	}
	
	/// <summary>
	/// The scale-out policy for the connector.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ScaleOutPolicy
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cpuUtilizationPercentage")]
		public int CpuUtilizationPercentage { get; set; }
	}
	
	/// <summary>
	/// Details about a connector's provisioned capacity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProvisionedCapacity
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mcuCount")]
		public int McuCount { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workerCount")]
		public int WorkerCount { get; set; }
	}
	
	/// <summary>
	/// The details of the Apache Kafka cluster to which the connector is connected.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ApacheKafkaCluster
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bootstrapServers")]
		public string BootstrapServers { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="vpc")]
		public Vpc Vpc { get; set; }
	}
	
	/// <summary>
	/// Information about the VPC in which the connector resides.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Vpc
	{
		
		[System.Runtime.Serialization.DataMember(Name="securityGroups")]
		public string[] SecurityGroups { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="subnets")]
		public string[] Subnets { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum KafkaClusterClientAuthenticationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NONE")]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IAM")]
		IAM = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum KafkaClusterEncryptionInTransitType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PLAINTEXT")]
		PLAINTEXT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TLS")]
		TLS = 1,
	}
	
	/// <summary>
	/// Workers can send worker logs to different destination types. This configuration specifies the details of these destinations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class WorkerLogDelivery
	{
		
		[System.Runtime.Serialization.DataMember(Name="cloudWatchLogs")]
		public CloudWatchLogsLogDelivery CloudWatchLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="firehose")]
		public FirehoseLogDelivery Firehose { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3")]
		public S3LogDelivery S3 { get; set; }
	}
	
	/// <summary>
	/// The settings for delivering connector logs to Amazon CloudWatch Logs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudWatchLogsLogDelivery
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public bool Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logGroup")]
		public string LogGroup { get; set; }
	}
	
	/// <summary>
	/// The settings for delivering logs to Amazon Kinesis Data Firehose.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class FirehoseLogDelivery
	{
		
		[System.Runtime.Serialization.DataMember(Name="deliveryStream")]
		public string DeliveryStream { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public bool Enabled { get; set; }
	}
	
	/// <summary>
	/// Details about delivering logs to Amazon S3.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class S3LogDelivery
	{
		
		[System.Runtime.Serialization.DataMember(Name="bucket")]
		public string Bucket { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public bool Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="prefix")]
		public string Prefix { get; set; }
	}
	
	/// <summary>
	/// A plugin is an AWS resource that contains the code that defines your connector logic. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Plugin
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="customPlugin")]
		public CustomPlugin CustomPlugin { get; set; }
	}
	
	/// <summary>
	/// A plugin is an AWS resource that contains the code that defines a connector's logic.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CustomPlugin
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="customPluginArn")]
		public string CustomPluginArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public int Revision { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ConflictException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class BadRequestException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ForbiddenException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServiceUnavailableException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TooManyRequestsException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UnauthorizedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InternalServerErrorException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateCustomPluginResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="customPluginArn")]
		public string CustomPluginArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="customPluginState")]
		public CustomPluginState CustomPluginState { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public System.Nullable<System.Int32> Revision { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CustomPluginState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CREATING")]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CREATE_FAILED")]
		CREATE_FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ACTIVE")]
		ACTIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UPDATING")]
		UPDATING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="UPDATE_FAILED")]
		UPDATE_FAILED = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DELETING")]
		DELETING = 5,
	}
	
	/// <summary>
	/// The location of an object in Amazon S3.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class S3Location
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="bucketArn")]
		public string BucketArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="fileKey")]
		public string FileKey { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="objectVersion")]
		public string ObjectVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateWorkerConfigurationResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="latestRevision")]
		public WorkerConfigurationRevisionSummary LatestRevision { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="workerConfigurationArn")]
		public string WorkerConfigurationArn { get; set; }
	}
	
	/// <summary>
	/// The summary of a worker configuration revision.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class WorkerConfigurationRevisionSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public System.Nullable<System.Int32> Revision { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteConnectorResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="connectorArn")]
		public string ConnectorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connectorState")]
		public ConnectorState ConnectorState { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteCustomPluginResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="customPluginArn")]
		public string CustomPluginArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="customPluginState")]
		public CustomPluginState CustomPluginState { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeConnectorResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="capacity")]
		public CapacityDescription Capacity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connectorArn")]
		public string ConnectorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connectorConfiguration")]
		public SyntheticDescribeConnectorResponse__mapOf__string ConnectorConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connectorDescription")]
		public string ConnectorDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connectorName")]
		public string ConnectorName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connectorState")]
		public ConnectorState ConnectorState { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentVersion")]
		public string CurrentVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kafkaCluster")]
		public KafkaClusterDescription KafkaCluster { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kafkaClusterClientAuthentication")]
		public KafkaClusterClientAuthenticationDescription KafkaClusterClientAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kafkaClusterEncryptionInTransit")]
		public KafkaClusterEncryptionInTransitDescription KafkaClusterEncryptionInTransit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kafkaConnectVersion")]
		public string KafkaConnectVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logDelivery")]
		public LogDeliveryDescription LogDelivery { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="plugins")]
		public PluginDescription[] Plugins { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="serviceExecutionRoleArn")]
		public string ServiceExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="stateDescription")]
		public StateDescription StateDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="workerConfiguration")]
		public WorkerConfigurationDescription WorkerConfiguration { get; set; }
	}
	
	/// <summary>
	/// A description of the connector's capacity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CapacityDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="autoScaling")]
		public AutoScalingDescription AutoScaling { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="provisionedCapacity")]
		public ProvisionedCapacityDescription ProvisionedCapacity { get; set; }
	}
	
	/// <summary>
	/// Information about the auto scaling parameters for the connector.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AutoScalingDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="maxWorkerCount")]
		public System.Nullable<System.Int32> MaxWorkerCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="mcuCount")]
		public System.Nullable<System.Int32> McuCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minWorkerCount")]
		public System.Nullable<System.Int32> MinWorkerCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scaleInPolicy")]
		public ScaleInPolicyDescription ScaleInPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scaleOutPolicy")]
		public ScaleOutPolicyDescription ScaleOutPolicy { get; set; }
	}
	
	/// <summary>
	/// The description of the scale-in policy for the connector.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ScaleInPolicyDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="cpuUtilizationPercentage")]
		public System.Nullable<System.Int32> CpuUtilizationPercentage { get; set; }
	}
	
	/// <summary>
	/// The description of the scale-out policy for the connector.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ScaleOutPolicyDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="cpuUtilizationPercentage")]
		public System.Nullable<System.Int32> CpuUtilizationPercentage { get; set; }
	}
	
	/// <summary>
	/// The description of a connector's provisioned capacity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProvisionedCapacityDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="mcuCount")]
		public System.Nullable<System.Int32> McuCount { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="workerCount")]
		public System.Nullable<System.Int32> WorkerCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SyntheticDescribeConnectorResponse__mapOf__string
	{
	}
	
	/// <summary>
	/// Details of how to connect to the Apache Kafka cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class KafkaClusterDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="apacheKafkaCluster")]
		public ApacheKafkaClusterDescription ApacheKafkaCluster { get; set; }
	}
	
	/// <summary>
	/// The description of the Apache Kafka cluster to which the connector is connected.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ApacheKafkaClusterDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="bootstrapServers")]
		public string BootstrapServers { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="vpc")]
		public VpcDescription Vpc { get; set; }
	}
	
	/// <summary>
	/// The description of the VPC in which the connector resides.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VpcDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="securityGroups")]
		public string[] SecurityGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subnets")]
		public string[] Subnets { get; set; }
	}
	
	/// <summary>
	/// The client authentication information used in order to authenticate with the Apache Kafka cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class KafkaClusterClientAuthenticationDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public KafkaClusterClientAuthenticationType AuthenticationType { get; set; }
	}
	
	/// <summary>
	/// The description of the encryption in transit to the Apache Kafka cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class KafkaClusterEncryptionInTransitDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="encryptionType")]
		public KafkaClusterEncryptionInTransitType EncryptionType { get; set; }
	}
	
	/// <summary>
	/// The description of the log delivery settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LogDeliveryDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="workerLogDelivery")]
		public WorkerLogDeliveryDescription WorkerLogDelivery { get; set; }
	}
	
	/// <summary>
	/// Workers can send worker logs to different destination types. This configuration specifies the details of these destinations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class WorkerLogDeliveryDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="cloudWatchLogs")]
		public CloudWatchLogsLogDeliveryDescription CloudWatchLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="firehose")]
		public FirehoseLogDeliveryDescription Firehose { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3")]
		public S3LogDeliveryDescription S3 { get; set; }
	}
	
	/// <summary>
	/// A description of the log delivery settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudWatchLogsLogDeliveryDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logGroup")]
		public string LogGroup { get; set; }
	}
	
	/// <summary>
	/// A description of the settings for delivering logs to Amazon Kinesis Data Firehose.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class FirehoseLogDeliveryDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="deliveryStream")]
		public string DeliveryStream { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
	}
	
	/// <summary>
	/// The description of the details about delivering logs to Amazon S3.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class S3LogDeliveryDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="bucket")]
		public string Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enabled")]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="prefix")]
		public string Prefix { get; set; }
	}
	
	/// <summary>
	/// The description of the plugin.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PluginDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="customPlugin")]
		public CustomPluginDescription CustomPlugin { get; set; }
	}
	
	/// <summary>
	/// Details about a custom plugin.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CustomPluginDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="customPluginArn")]
		public string CustomPluginArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public System.Nullable<System.Int32> Revision { get; set; }
	}
	
	/// <summary>
	/// Details about the state of a resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class StateDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// The description of the worker configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class WorkerConfigurationDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public System.Nullable<System.Int32> Revision { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="workerConfigurationArn")]
		public string WorkerConfigurationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeCustomPluginResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="customPluginArn")]
		public string CustomPluginArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="customPluginState")]
		public CustomPluginState CustomPluginState { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="latestRevision")]
		public CustomPluginRevisionSummary LatestRevision { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="stateDescription")]
		public StateDescription StateDescription { get; set; }
	}
	
	/// <summary>
	/// Details about the revision of a custom plugin.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CustomPluginRevisionSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="contentType")]
		public CustomPluginContentType ContentType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fileDescription")]
		public CustomPluginFileDescription FileDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="location")]
		public CustomPluginLocationDescription Location { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public System.Nullable<System.Int32> Revision { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CustomPluginContentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JAR")]
		JAR = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ZIP")]
		ZIP = 1,
	}
	
	/// <summary>
	/// Details about a custom plugin file.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CustomPluginFileDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="fileMd5")]
		public string FileMd5 { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fileSize")]
		public System.Nullable<System.Int32> FileSize { get; set; }
	}
	
	/// <summary>
	/// Information about the location of a custom plugin.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CustomPluginLocationDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="s3Location")]
		public S3LocationDescription S3Location { get; set; }
	}
	
	/// <summary>
	/// The description of the location of an object in Amazon S3.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class S3LocationDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="bucketArn")]
		public string BucketArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fileKey")]
		public string FileKey { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="objectVersion")]
		public string ObjectVersion { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeWorkerConfigurationResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="latestRevision")]
		public WorkerConfigurationRevisionDescription LatestRevision { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="workerConfigurationArn")]
		public string WorkerConfigurationArn { get; set; }
	}
	
	/// <summary>
	/// The description of the worker configuration revision.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class WorkerConfigurationRevisionDescription
	{
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="propertiesFileContent")]
		public string PropertiesFileContent { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public System.Nullable<System.Int32> Revision { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListConnectorsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="connectors")]
		public ConnectorSummary[] Connectors { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Summary of a connector.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ConnectorSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="capacity")]
		public CapacityDescription Capacity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connectorArn")]
		public string ConnectorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connectorDescription")]
		public string ConnectorDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connectorName")]
		public string ConnectorName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connectorState")]
		public ConnectorState ConnectorState { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentVersion")]
		public string CurrentVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kafkaCluster")]
		public KafkaClusterDescription KafkaCluster { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kafkaClusterClientAuthentication")]
		public KafkaClusterClientAuthenticationDescription KafkaClusterClientAuthentication { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kafkaClusterEncryptionInTransit")]
		public KafkaClusterEncryptionInTransitDescription KafkaClusterEncryptionInTransit { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="kafkaConnectVersion")]
		public string KafkaConnectVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logDelivery")]
		public LogDeliveryDescription LogDelivery { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="plugins")]
		public PluginDescription[] Plugins { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="serviceExecutionRoleArn")]
		public string ServiceExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="workerConfiguration")]
		public WorkerConfigurationDescription WorkerConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListCustomPluginsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="customPlugins")]
		public CustomPluginSummary[] CustomPlugins { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A summary of the custom plugin.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CustomPluginSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="customPluginArn")]
		public string CustomPluginArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="customPluginState")]
		public CustomPluginState CustomPluginState { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="latestRevision")]
		public CustomPluginRevisionSummary LatestRevision { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListWorkerConfigurationsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="workerConfigurations")]
		public WorkerConfigurationSummary[] WorkerConfigurations { get; set; }
	}
	
	/// <summary>
	/// The summary of a worker configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class WorkerConfigurationSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="creationTime")]
		public System.DateTimeOffset CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="latestRevision")]
		public WorkerConfigurationRevisionSummary LatestRevision { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="workerConfigurationArn")]
		public string WorkerConfigurationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateConnectorResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="connectorArn")]
		public string ConnectorArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connectorState")]
		public ConnectorState ConnectorState { get; set; }
	}
	
	/// <summary>
	/// The updates to the auto scaling parameters for the connector.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AutoScalingUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="maxWorkerCount")]
		public int MaxWorkerCount { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mcuCount")]
		public int McuCount { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="minWorkerCount")]
		public int MinWorkerCount { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="scaleInPolicy")]
		public ScaleInPolicyUpdate ScaleInPolicy { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="scaleOutPolicy")]
		public ScaleOutPolicyUpdate ScaleOutPolicy { get; set; }
	}
	
	/// <summary>
	/// An update to the connector's scale-in policy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ScaleInPolicyUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cpuUtilizationPercentage")]
		public int CpuUtilizationPercentage { get; set; }
	}
	
	/// <summary>
	/// An update to the connector's scale-out policy.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ScaleOutPolicyUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="cpuUtilizationPercentage")]
		public int CpuUtilizationPercentage { get; set; }
	}
	
	/// <summary>
	/// An update to a connector's fixed capacity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProvisionedCapacityUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="mcuCount")]
		public int McuCount { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workerCount")]
		public int WorkerCount { get; set; }
	}
	
	/// <summary>
	/// Information about the capacity of the connector, whether it is auto scaled or provisioned.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Capacity
	{
		
		[System.Runtime.Serialization.DataMember(Name="autoScaling")]
		public AutoScaling AutoScaling { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="provisionedCapacity")]
		public ProvisionedCapacity ProvisionedCapacity { get; set; }
	}
	
	/// <summary>
	/// The target capacity for the connector. The capacity can be auto scaled or provisioned.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CapacityUpdate
	{
		
		[System.Runtime.Serialization.DataMember(Name="autoScaling")]
		public AutoScalingUpdate AutoScaling { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="provisionedCapacity")]
		public ProvisionedCapacityUpdate ProvisionedCapacity { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SyntheticCreateConnectorRequest__mapOf__string
	{
	}
	
	/// <summary>
	/// The details of the Apache Kafka cluster to which the connector is connected.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class KafkaCluster
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="apacheKafkaCluster")]
		public ApacheKafkaCluster ApacheKafkaCluster { get; set; }
	}
	
	/// <summary>
	/// The client authentication information used in order to authenticate with the Apache Kafka cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class KafkaClusterClientAuthentication
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public KafkaClusterClientAuthenticationType AuthenticationType { get; set; }
	}
	
	/// <summary>
	/// Details of encryption in transit to the Apache Kafka cluster.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class KafkaClusterEncryptionInTransit
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="encryptionType")]
		public KafkaClusterEncryptionInTransitType EncryptionType { get; set; }
	}
	
	/// <summary>
	/// Details about log delivery.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LogDelivery
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workerLogDelivery")]
		public WorkerLogDelivery WorkerLogDelivery { get; set; }
	}
	
	/// <summary>
	/// The configuration of the workers, which are the processes that run the connector logic.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class WorkerConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public int Revision { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="workerConfigurationArn")]
		public string WorkerConfigurationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateConnectorRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="capacity")]
		public Capacity Capacity { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectorConfiguration")]
		public SyntheticCreateConnectorRequest__mapOf__string ConnectorConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connectorDescription")]
		public string ConnectorDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectorName")]
		public string ConnectorName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="kafkaCluster")]
		public KafkaCluster KafkaCluster { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="kafkaClusterClientAuthentication")]
		public KafkaClusterClientAuthentication KafkaClusterClientAuthentication { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="kafkaClusterEncryptionInTransit")]
		public KafkaClusterEncryptionInTransit KafkaClusterEncryptionInTransit { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="kafkaConnectVersion")]
		public string KafkaConnectVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="logDelivery")]
		public LogDelivery LogDelivery { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="plugins")]
		public Plugin[] Plugins { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="serviceExecutionRoleArn")]
		public string ServiceExecutionRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="workerConfiguration")]
		public WorkerConfiguration WorkerConfiguration { get; set; }
	}
	
	/// <summary>
	/// Information about the location of a custom plugin.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CustomPluginLocation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="s3Location")]
		public S3Location S3Location { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateCustomPluginRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contentType")]
		public CustomPluginContentType ContentType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="location")]
		public CustomPluginLocation Location { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateWorkerConfigurationRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="propertiesFileContent")]
		public string PropertiesFileContent { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteConnectorRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteCustomPluginRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeConnectorRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeCustomPluginRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeWorkerConfigurationRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListConnectorsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListCustomPluginsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListWorkerConfigurationsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateConnectorRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="capacity")]
		public CapacityUpdate Capacity { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Creates a connector using the specified properties.
		/// CreateConnector v1/connectors
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateConnectorResponse> CreateConnectorAsync(CreateConnectorPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/connectors";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CreateConnectorResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of all the connectors in this account and Region. The list is limited to connectors whose name starts with the specified prefix. The response also includes a description of each of the listed connectors.
		/// ListConnectors v1/connectors
		/// </summary>
		/// <param name="connectorNamePrefix">The name prefix that you want to use to search for and list connectors.</param>
		/// <param name="maxResults">The maximum number of connectors to list in one response.</param>
		/// <param name="nextToken">If the response of a ListConnectors operation is truncated, it will include a NextToken. Send this NextToken in a subsequent request to continue listing from where the previous operation left off.</param>
		/// <returns>Success</returns>
		public async Task<ListConnectorsResponse> ListConnectorsAsync(string connectorNamePrefix, int maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/connectors?connectorNamePrefix=" + (connectorNamePrefix==null? "" : System.Uri.EscapeDataString(connectorNamePrefix))+"&maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListConnectorsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a custom plugin using the specified properties.
		/// CreateCustomPlugin v1/custom-plugins
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateCustomPluginResponse> CreateCustomPluginAsync(CreateCustomPluginPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/custom-plugins";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CreateCustomPluginResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of all of the custom plugins in this account and Region.
		/// ListCustomPlugins v1/custom-plugins
		/// </summary>
		/// <param name="maxResults">The maximum number of custom plugins to list in one response.</param>
		/// <param name="nextToken">If the response of a ListCustomPlugins operation is truncated, it will include a NextToken. Send this NextToken in a subsequent request to continue listing from where the previous operation left off.</param>
		/// <returns>Success</returns>
		public async Task<ListCustomPluginsResponse> ListCustomPluginsAsync(int maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/custom-plugins?maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListCustomPluginsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a worker configuration using the specified properties.
		/// CreateWorkerConfiguration v1/worker-configurations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateWorkerConfigurationResponse> CreateWorkerConfigurationAsync(CreateWorkerConfigurationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/worker-configurations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CreateWorkerConfigurationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of all of the worker configurations in this account and Region.
		/// ListWorkerConfigurations v1/worker-configurations
		/// </summary>
		/// <param name="maxResults">The maximum number of worker configurations to list in one response.</param>
		/// <param name="nextToken">If the response of a ListWorkerConfigurations operation is truncated, it will include a NextToken. Send this NextToken in a subsequent request to continue listing from where the previous operation left off.</param>
		/// <returns>Success</returns>
		public async Task<ListWorkerConfigurationsResponse> ListWorkerConfigurationsAsync(int maxResults, string nextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/worker-configurations?maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListWorkerConfigurationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the specified connector.
		/// DeleteConnector v1/connectors/{connectorArn}
		/// </summary>
		/// <param name="connectorArn">The Amazon Resource Name (ARN) of the connector that you want to delete.</param>
		/// <param name="currentVersion">The current version of the connector that you want to delete.</param>
		/// <returns>Success</returns>
		public async Task<DeleteConnectorResponse> DeleteConnectorAsync(string connectorArn, string currentVersion, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/connectors/"+ (connectorArn==null? "" : System.Uri.EscapeDataString(connectorArn))+"&currentVersion=" + (currentVersion==null? "" : System.Uri.EscapeDataString(currentVersion));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteConnectorResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns summary information about the connector.
		/// DescribeConnector v1/connectors/{connectorArn}
		/// </summary>
		/// <param name="connectorArn">The Amazon Resource Name (ARN) of the connector that you want to describe.</param>
		/// <returns>Success</returns>
		public async Task<DescribeConnectorResponse> DescribeConnectorAsync(string connectorArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/connectors/"+ (connectorArn==null? "" : System.Uri.EscapeDataString(connectorArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeConnectorResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a custom plugin.
		/// DeleteCustomPlugin v1/custom-plugins/{customPluginArn}
		/// </summary>
		/// <param name="customPluginArn">The Amazon Resource Name (ARN) of the custom plugin that you want to delete.</param>
		/// <returns>Success</returns>
		public async Task<DeleteCustomPluginResponse> DeleteCustomPluginAsync(string customPluginArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/custom-plugins/"+ (customPluginArn==null? "" : System.Uri.EscapeDataString(customPluginArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteCustomPluginResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// A summary description of the custom plugin.
		/// DescribeCustomPlugin v1/custom-plugins/{customPluginArn}
		/// </summary>
		/// <param name="customPluginArn">Returns information about a custom plugin.</param>
		/// <returns>Success</returns>
		public async Task<DescribeCustomPluginResponse> DescribeCustomPluginAsync(string customPluginArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/custom-plugins/"+ (customPluginArn==null? "" : System.Uri.EscapeDataString(customPluginArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeCustomPluginResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about a worker configuration.
		/// DescribeWorkerConfiguration v1/worker-configurations/{workerConfigurationArn}
		/// </summary>
		/// <param name="workerConfigurationArn">The Amazon Resource Name (ARN) of the worker configuration that you want to get information about.</param>
		/// <returns>Success</returns>
		public async Task<DescribeWorkerConfigurationResponse> DescribeWorkerConfigurationAsync(string workerConfigurationArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/worker-configurations/"+ (workerConfigurationArn==null? "" : System.Uri.EscapeDataString(workerConfigurationArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeWorkerConfigurationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates the specified connector.
		/// UpdateConnector v1/connectors/{connectorArn}#currentVersion
		/// </summary>
		/// <param name="connectorArn">The Amazon Resource Name (ARN) of the connector that you want to update.</param>
		/// <param name="currentVersion">The current version of the connector that you want to update.</param>
		/// <returns>Success</returns>
		public async Task<UpdateConnectorResponse> UpdateConnectorAsync(string connectorArn, string currentVersion, UpdateConnectorPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/connectors/"+ (connectorArn==null? "" : System.Uri.EscapeDataString(connectorArn))+"#currentVersion&currentVersion=" + (currentVersion==null? "" : System.Uri.EscapeDataString(currentVersion));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateConnectorResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
	
	public class CreateConnectorPostBody
	{
		
		/// <summary>
		/// Information about the capacity of the connector, whether it is auto scaled or provisioned.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="capacity")]
		public CreateConnectorPostBodyCapacity Capacity { get; set; }
		
		/// <summary>
		/// A map of keys to values that represent the configuration for the connector.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectorConfiguration")]
		public System.Collections.Generic.Dictionary<string, string> ConnectorConfiguration { get; set; }
		
		/// <summary>
		/// A summary description of the connector.
		/// Max length: 1024
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connectorDescription")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string ConnectorDescription { get; set; }
		
		/// <summary>
		/// The name of the connector.
		/// Required
		/// Max length: 128
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="connectorName")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		public string ConnectorName { get; set; }
		
		/// <summary>
		/// The details of the Apache Kafka cluster to which the connector is connected.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="kafkaCluster")]
		public CreateConnectorPostBodyKafkaCluster KafkaCluster { get; set; }
		
		/// <summary>
		/// The client authentication information used in order to authenticate with the Apache Kafka cluster.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="kafkaClusterClientAuthentication")]
		public CreateConnectorPostBodyKafkaClusterClientAuthentication KafkaClusterClientAuthentication { get; set; }
		
		/// <summary>
		/// Details of encryption in transit to the Apache Kafka cluster.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="kafkaClusterEncryptionInTransit")]
		public CreateConnectorPostBodyKafkaClusterEncryptionInTransit KafkaClusterEncryptionInTransit { get; set; }
		
		/// <summary>
		/// The version of Kafka Connect. It has to be compatible with both the Apache Kafka cluster's version and the plugins.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="kafkaConnectVersion")]
		public string KafkaConnectVersion { get; set; }
		
		/// <summary>
		/// Details about log delivery.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logDelivery")]
		public CreateConnectorPostBodyLogDelivery LogDelivery { get; set; }
		
		/// <summary>
		/// Specifies which plugins to use for the connector.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="plugins")]
		public Plugin[] Plugins { get; set; }
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the IAM role used by the connector to access the Amazon Web Services resources that it needs. The types of resources depends on the logic of the connector. For example, a connector that has Amazon S3 as a destination must have permissions that allow it to write to the S3 destination bucket.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="serviceExecutionRoleArn")]
		public string ServiceExecutionRoleArn { get; set; }
		
		/// <summary>
		/// The configuration of the workers, which are the processes that run the connector logic.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workerConfiguration")]
		public CreateConnectorPostBodyWorkerConfiguration WorkerConfiguration { get; set; }
	}
	
	public class CreateConnectorPostBodyCapacity
	{
		
		[System.Runtime.Serialization.DataMember(Name="autoScaling")]
		public AutoScaling AutoScaling { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="provisionedCapacity")]
		public ProvisionedCapacity ProvisionedCapacity { get; set; }
	}
	
	public class CreateConnectorPostBodyKafkaCluster
	{
		
		[System.Runtime.Serialization.DataMember(Name="apacheKafkaCluster")]
		public ApacheKafkaCluster ApacheKafkaCluster { get; set; }
	}
	
	public class CreateConnectorPostBodyKafkaClusterClientAuthentication
	{
		
		[System.Runtime.Serialization.DataMember(Name="authenticationType")]
		public KafkaClusterClientAuthenticationType AuthenticationType { get; set; }
	}
	
	public class CreateConnectorPostBodyKafkaClusterEncryptionInTransit
	{
		
		[System.Runtime.Serialization.DataMember(Name="encryptionType")]
		public KafkaClusterEncryptionInTransitType EncryptionType { get; set; }
	}
	
	public class CreateConnectorPostBodyLogDelivery
	{
		
		[System.Runtime.Serialization.DataMember(Name="workerLogDelivery")]
		public WorkerLogDelivery WorkerLogDelivery { get; set; }
	}
	
	public class CreateConnectorPostBodyWorkerConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public System.Nullable<System.Int32> Revision { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="workerConfigurationArn")]
		public string WorkerConfigurationArn { get; set; }
	}
	
	public class CreateCustomPluginPostBody
	{
		
		/// <summary>
		/// The type of the plugin file.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="contentType")]
		public CustomPluginContentType ContentType { get; set; }
		
		/// <summary>
		/// A summary description of the custom plugin.
		/// Max length: 1024
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string Description { get; set; }
		
		/// <summary>
		/// Information about the location of a custom plugin.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="location")]
		public CreateCustomPluginPostBodyLocation Location { get; set; }
		
		/// <summary>
		/// The name of the custom plugin.
		/// Required
		/// Max length: 128
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		public string Name { get; set; }
	}
	
	public class CreateCustomPluginPostBodyLocation
	{
		
		[System.Runtime.Serialization.DataMember(Name="s3Location")]
		public S3Location S3Location { get; set; }
	}
	
	public class CreateWorkerConfigurationPostBody
	{
		
		/// <summary>
		/// A summary description of the worker configuration.
		/// Max length: 1024
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string Description { get; set; }
		
		/// <summary>
		/// The name of the worker configuration.
		/// Required
		/// Max length: 128
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		public string Name { get; set; }
		
		/// <summary>
		/// Base64 encoded contents of connect-distributed.properties file.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="propertiesFileContent")]
		public string PropertiesFileContent { get; set; }
	}
	
	public class UpdateConnectorPutBody
	{
		
		/// <summary>
		/// The target capacity for the connector. The capacity can be auto scaled or provisioned.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="capacity")]
		public UpdateConnectorPutBodyCapacity Capacity { get; set; }
	}
	
	public class UpdateConnectorPutBodyCapacity
	{
		
		[System.Runtime.Serialization.DataMember(Name="autoScaling")]
		public AutoScalingUpdate AutoScaling { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="provisionedCapacity")]
		public ProvisionedCapacityUpdate ProvisionedCapacity { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Settings for Binary Authorization feature.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2BinaryAuthorization
	{
		
		/// <summary>
		/// If present, indicates to use Breakglass using this justification. If use_default is False, then it must be empty. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="breakglassJustification")]
		public string BreakglassJustification { get; set; }
		
		/// <summary>
		/// If True, indicates to use the default project's binary authorization policy. If False, binary authorization will be disabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="useDefault")]
		public System.Nullable<System.Boolean> UseDefault { get; set; }
	}
	
	/// <summary>
	/// Request message for deleting an Execution.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2CancelExecutionRequest
	{
		
		/// <summary>
		/// A system-generated fingerprint for this version of the resource. This may be used to detect modification conflict during updates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Indicates that the request should be validated without actually cancelling any resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validateOnly")]
		public System.Nullable<System.Boolean> ValidateOnly { get; set; }
	}
	
	/// <summary>
	/// Represents a set of Cloud SQL instances. Each one will be available under /cloudsql/[instance]. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2CloudSqlInstance
	{
		
		/// <summary>
		/// The Cloud SQL instance connection names, as can be found in https://console.cloud.google.com/sql/instances. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run. Format: {project}:{location}:{instance}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="instances")]
		public string[] Instances { get; set; }
	}
	
	/// <summary>
	/// Defines a status condition for a resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2Condition
	{
		
		/// <summary>
		/// A reason for the execution condition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executionReason")]
		public System.Nullable<GoogleCloudRunV2ConditionExecutionReason> ExecutionReason { get; set; }
		
		/// <summary>
		/// Last time the condition transitioned from one status to another.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastTransitionTime")]
		public string LastTransitionTime { get; set; }
		
		/// <summary>
		/// Human readable message indicating details about the current status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
		
		/// <summary>
		/// A common (service-level) reason for this condition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public System.Nullable<GoogleCloudRunV2ConditionReason> Reason { get; set; }
		
		/// <summary>
		/// A reason for the revision condition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisionReason")]
		public System.Nullable<GoogleCloudRunV2ConditionRevisionReason> RevisionReason { get; set; }
		
		/// <summary>
		/// How to interpret failures of this condition, one of Error, Warning, Info
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="severity")]
		public System.Nullable<GoogleCloudRunV2ConditionSeverity> Severity { get; set; }
		
		/// <summary>
		/// State of the condition.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="state")]
		public System.Nullable<GoogleCloudRunV2ConditionState> State { get; set; }
		
		/// <summary>
		/// type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * "Ready": True when the Resource is ready.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public string Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudRunV2ConditionExecutionReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTION_REASON_UNDEFINED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JOB_STATUS_SERVICE_POLLING_ERROR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NON_ZERO_EXIT_CODE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CANCELLING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETED = 5,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudRunV2ConditionReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMMON_REASON_UNDEFINED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNKNOWN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REVISION_FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROGRESS_DEADLINE_EXCEEDED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTAINER_MISSING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTAINER_PERMISSION_DENIED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTAINER_IMAGE_UNAUTHORIZED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTAINER_IMAGE_AUTHORIZATION_CHECK_FAILED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENCRYPTION_KEY_PERMISSION_DENIED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENCRYPTION_KEY_CHECK_FAILED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SECRETS_ACCESS_CHECK_FAILED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WAITING_FOR_OPERATION = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMMEDIATE_RETRY = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		POSTPONED_RETRY = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL = 14,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudRunV2ConditionRevisionReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REVISION_REASON_UNDEFINED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESERVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RETIRED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RETIRING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RECREATING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HEALTH_CHECK_CONTAINER_ERROR = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOMIZED_PATH_RESPONSE_PENDING = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIN_INSTANCES_NOT_PROVISIONED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE_REVISION_LIMIT_REACHED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_DEPLOYMENT = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HEALTH_CHECK_SKIPPED = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MIN_INSTANCES_WARMING = 12,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudRunV2ConditionSeverity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEVERITY_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WARNING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFO = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudRunV2ConditionState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONDITION_PENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONDITION_RECONCILING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONDITION_FAILED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONDITION_SUCCEEDED = 4,
	}
	
	/// <summary>
	/// A single application container. This specifies both the container to run, the command to run in the container and the arguments to supply to it. Note that additional arguments can be supplied by the system to the container at runtime.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2Container
	{
		
		/// <summary>
		/// Arguments to the entrypoint. The docker image's CMD is used if this is not provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="args")]
		public string[] Args { get; set; }
		
		/// <summary>
		/// Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="command")]
		public string[] Command { get; set; }
		
		/// <summary>
		/// Names of the containers that must start before this container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dependsOn")]
		public string[] DependsOn { get; set; }
		
		/// <summary>
		/// List of environment variables to set in the container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="env")]
		public GoogleCloudRunV2EnvVar[] Env { get; set; }
		
		/// <summary>
		/// Required. Name of the container image in Dockerhub, Google Artifact Registry, or Google Container Registry. If the host is not provided, Dockerhub is assumed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="image")]
		public string Image { get; set; }
		
		/// <summary>
		/// Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="livenessProbe")]
		public GoogleCloudRunV2Probe LivenessProbe { get; set; }
		
		/// <summary>
		/// Name of the container specified as a DNS_LABEL (RFC 1123).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// List of ports to expose from the container. Only a single port can be specified. The specified ports must be listening on all interfaces (0.0.0.0) within the container to be accessible. If omitted, a port number will be chosen and passed to the container through the PORT environment variable for the container to listen on.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ports")]
		public GoogleCloudRunV2ContainerPort[] Ports { get; set; }
		
		/// <summary>
		/// ResourceRequirements describes the compute resource requirements.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resources")]
		public GoogleCloudRunV2ResourceRequirements Resources { get; set; }
		
		/// <summary>
		/// Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startupProbe")]
		public GoogleCloudRunV2Probe StartupProbe { get; set; }
		
		/// <summary>
		/// Volume to mount into the container's filesystem.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="volumeMounts")]
		public GoogleCloudRunV2VolumeMount[] VolumeMounts { get; set; }
		
		/// <summary>
		/// Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="workingDir")]
		public string WorkingDir { get; set; }
	}
	
	/// <summary>
	/// EnvVar represents an environment variable present in a Container.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2EnvVar
	{
		
		/// <summary>
		/// Required. Name of the environment variable. Must not exceed 32768 characters.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any route environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "", and the maximum length is 32768 bytes.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
		
		/// <summary>
		/// EnvVarSource represents a source for the value of an EnvVar.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="valueSource")]
		public GoogleCloudRunV2EnvVarSource ValueSource { get; set; }
	}
	
	/// <summary>
	/// EnvVarSource represents a source for the value of an EnvVar.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2EnvVarSource
	{
		
		/// <summary>
		/// SecretEnvVarSource represents a source for the value of an EnvVar.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secretKeyRef")]
		public GoogleCloudRunV2SecretKeySelector SecretKeyRef { get; set; }
	}
	
	/// <summary>
	/// SecretEnvVarSource represents a source for the value of an EnvVar.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2SecretKeySelector
	{
		
		/// <summary>
		/// Required. The name of the secret in Cloud Secret Manager. Format: {secret_name} if the secret is in the same project. projects/{project}/secrets/{secret_name} if the secret is in a different project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
		
		/// <summary>
		/// The Cloud Secret Manager secret version. Can be 'latest' for the latest version, an integer for a specific version, or a version alias.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2Probe
	{
		
		/// <summary>
		/// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failureThreshold")]
		public System.Nullable<System.Int32> FailureThreshold { get; set; }
		
		/// <summary>
		/// GRPCAction describes an action involving a GRPC port.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="grpc")]
		public GoogleCloudRunV2GRPCAction Grpc { get; set; }
		
		/// <summary>
		/// HTTPGetAction describes an action based on HTTP Get requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="httpGet")]
		public GoogleCloudRunV2HTTPGetAction HttpGet { get; set; }
		
		/// <summary>
		/// Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="initialDelaySeconds")]
		public System.Nullable<System.Int32> InitialDelaySeconds { get; set; }
		
		/// <summary>
		/// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeout_seconds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="periodSeconds")]
		public System.Nullable<System.Int32> PeriodSeconds { get; set; }
		
		/// <summary>
		/// TCPSocketAction describes an action based on opening a socket
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tcpSocket")]
		public GoogleCloudRunV2TCPSocketAction TcpSocket { get; set; }
		
		/// <summary>
		/// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than period_seconds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeoutSeconds")]
		public System.Nullable<System.Int32> TimeoutSeconds { get; set; }
	}
	
	/// <summary>
	/// GRPCAction describes an action involving a GRPC port.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2GRPCAction
	{
		
		/// <summary>
		/// Port number of the gRPC service. Number must be in the range 1 to 65535. If not specified, defaults to the exposed port of the container, which is the value of container.ports[0].containerPort.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public System.Nullable<System.Int32> Port { get; set; }
		
		/// <summary>
		/// Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md ). If this is not specified, the default behavior is defined by gRPC.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
	}
	
	/// <summary>
	/// HTTPGetAction describes an action based on HTTP Get requests.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2HTTPGetAction
	{
		
		/// <summary>
		/// Custom headers to set in the request. HTTP allows repeated headers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="httpHeaders")]
		public GoogleCloudRunV2HTTPHeader[] HttpHeaders { get; set; }
		
		/// <summary>
		/// Path to access on the HTTP server. Defaults to '/'.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to the exposed port of the container, which is the value of container.ports[0].containerPort.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public System.Nullable<System.Int32> Port { get; set; }
	}
	
	/// <summary>
	/// HTTPHeader describes a custom header to be used in HTTP probes
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2HTTPHeader
	{
		
		/// <summary>
		/// Required. The header field name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The header field value
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// TCPSocketAction describes an action based on opening a socket
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2TCPSocketAction
	{
		
		/// <summary>
		/// Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to the exposed port of the container, which is the value of container.ports[0].containerPort.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="port")]
		public System.Nullable<System.Int32> Port { get; set; }
	}
	
	/// <summary>
	/// ContainerPort represents a network port in a single container.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2ContainerPort
	{
		
		/// <summary>
		/// Port number the container listens on. This must be a valid TCP port number, 0 < container_port < 65536.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerPort")]
		public System.Nullable<System.Int32> ContainerPort { get; set; }
		
		/// <summary>
		/// If specified, used to specify which protocol to use. Allowed values are "http1" and "h2c".
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// ResourceRequirements describes the compute resource requirements.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2ResourceRequirements
	{
		
		/// <summary>
		/// Determines whether CPU is only allocated during requests (true by default). However, if ResourceRequirements is set, the caller must explicitly set this field to true to preserve the default behavior.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cpuIdle")]
		public System.Nullable<System.Boolean> CpuIdle { get; set; }
		
		/// <summary>
		/// Only `memory` and `cpu` keys in the map are supported. Notes: * The only supported values for CPU are '1', '2', '4', and '8'. Setting 4 CPU requires at least 2Gi of memory. For more information, go to https://cloud.google.com/run/docs/configuring/cpu. * For supported 'memory' values and syntax, go to https://cloud.google.com/run/docs/configuring/memory-limits
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="limits")]
		public System.Collections.Generic.Dictionary<string, string> Limits { get; set; }
		
		/// <summary>
		/// Determines whether CPU should be boosted on startup of a new container instance above the requested CPU threshold, this can help reduce cold-start latency.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startupCpuBoost")]
		public System.Nullable<System.Boolean> StartupCpuBoost { get; set; }
	}
	
	/// <summary>
	/// VolumeMount describes a mounting of a Volume within a container.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2VolumeMount
	{
		
		/// <summary>
		/// Required. Path within the container at which the volume should be mounted. Must not contain ':'. For Cloud SQL volumes, it can be left empty, or must otherwise be `/cloudsql`. All instances defined in the Volume will be available as `/cloudsql/[instance]`. For more information on Cloud SQL volumes, visit https://cloud.google.com/sql/docs/mysql/connect-run
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mountPath")]
		public string MountPath { get; set; }
		
		/// <summary>
		/// Required. This must match the Name of a Volume.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// Per-container override specification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2ContainerOverride
	{
		
		/// <summary>
		/// Optional. Arguments to the entrypoint. Will replace existing args for override.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="args")]
		public string[] Args { get; set; }
		
		/// <summary>
		/// Optional. True if the intention is to clear out existing args list.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clearArgs")]
		public System.Nullable<System.Boolean> ClearArgs { get; set; }
		
		/// <summary>
		/// List of environment variables to set in the container. Will be merged with existing env for override.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="env")]
		public GoogleCloudRunV2EnvVar[] Env { get; set; }
		
		/// <summary>
		/// The name of the container specified as a DNS_LABEL.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// In memory (tmpfs) ephemeral storage. It is ephemeral in the sense that when the sandbox is taken down, the data is destroyed with it (it does not persist across sandbox runs).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2EmptyDirVolumeSource
	{
		
		/// <summary>
		/// The medium on which the data is stored. Acceptable values today is only MEMORY or none. When none, the default will currently be backed by memory but could change over time. +optional
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="medium")]
		public System.Nullable<GoogleCloudRunV2EmptyDirVolumeSourceMedium> Medium { get; set; }
		
		/// <summary>
		/// Limit on the storage usable by this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers. The default is nil which means that the limit is undefined. More info: https://cloud.google.com/run/docs/configuring/in-memory-volumes#configure-volume. Info in Kubernetes: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sizeLimit")]
		public string SizeLimit { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudRunV2EmptyDirVolumeSourceMedium
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEDIUM_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MEMORY = 1,
	}
	
	/// <summary>
	/// Execution represents the configuration of a single execution. A execution an immutable resource that references a container image which is run to completion.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2Execution
	{
		
		/// <summary>
		/// Output only. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotations")]
		public System.Collections.Generic.Dictionary<string, string> Annotations { get; set; }
		
		/// <summary>
		/// Output only. The number of tasks which reached phase Cancelled.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cancelledCount")]
		public System.Nullable<System.Int32> CancelledCount { get; set; }
		
		/// <summary>
		/// Output only. Represents time when the execution was completed. It is not guaranteed to be set in happens-before order across separate operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="completionTime")]
		public string CompletionTime { get; set; }
		
		/// <summary>
		/// Output only. The Condition of this Execution, containing its readiness status, and detailed error information in case it did not reach the desired state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public GoogleCloudRunV2Condition[] Conditions { get; set; }
		
		/// <summary>
		/// Output only. Represents time when the execution was acknowledged by the execution controller. It is not guaranteed to be set in happens-before order across separate operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleteTime")]
		public string DeleteTime { get; set; }
		
		/// <summary>
		/// Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Output only. For a deleted resource, the time after which it will be permamently deleted. It is only populated as a response to a Delete request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expireTime")]
		public string ExpireTime { get; set; }
		
		/// <summary>
		/// Output only. The number of tasks which reached phase Failed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="failedCount")]
		public System.Nullable<System.Int32> FailedCount { get; set; }
		
		/// <summary>
		/// Output only. A number that monotonically increases every time the user modifies the desired state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="generation")]
		public string Generation { get; set; }
		
		/// <summary>
		/// Output only. The name of the parent Job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="job")]
		public string Job { get; set; }
		
		/// <summary>
		/// Output only. Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// The least stable launch stage needed to create this resource, as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. Note that this value might not be what was used as input. For example, if ALPHA was provided as input in the parent resource, but only BETA and GA-level features are were, this field will be BETA.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="launchStage")]
		public System.Nullable<GoogleCloudRunV2ExecutionLaunchStage> LaunchStage { get; set; }
		
		/// <summary>
		/// Output only. URI where logs for this execution can be found in Cloud Console.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logUri")]
		public string LogUri { get; set; }
		
		/// <summary>
		/// Output only. The unique name of this Execution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The generation of this Execution. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="observedGeneration")]
		public string ObservedGeneration { get; set; }
		
		/// <summary>
		/// Output only. Specifies the maximum desired number of tasks the execution should run at any given time. Must be <= task_count. The actual number of tasks running in steady state will be less than this number when ((.spec.task_count - .status.successful) < .spec.parallelism), i.e. when the work left to do is less than max parallelism.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parallelism")]
		public System.Nullable<System.Int32> Parallelism { get; set; }
		
		/// <summary>
		/// Output only. Indicates whether the resource's reconciliation is still in progress. See comments in `Job.reconciling` for additional information on reconciliation process in Cloud Run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reconciling")]
		public System.Nullable<System.Boolean> Reconciling { get; set; }
		
		/// <summary>
		/// Output only. The number of tasks which have retried at least once.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retriedCount")]
		public System.Nullable<System.Int32> RetriedCount { get; set; }
		
		/// <summary>
		/// Output only. The number of actively running tasks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="runningCount")]
		public System.Nullable<System.Int32> RunningCount { get; set; }
		
		/// <summary>
		/// Output only. Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="satisfiesPzs")]
		public System.Nullable<System.Boolean> SatisfiesPzs { get; set; }
		
		/// <summary>
		/// Output only. Represents time when the execution started to run. It is not guaranteed to be set in happens-before order across separate operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Output only. The number of tasks which reached phase Succeeded.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="succeededCount")]
		public System.Nullable<System.Int32> SucceededCount { get; set; }
		
		/// <summary>
		/// Output only. Specifies the desired number of tasks the execution should run. Setting to 1 means that parallelism is limited to 1 and the success of that task signals the success of the execution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taskCount")]
		public System.Nullable<System.Int32> TaskCount { get; set; }
		
		/// <summary>
		/// TaskTemplate describes the data a task should have when created from a template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template")]
		public GoogleCloudRunV2TaskTemplate Template { get; set; }
		
		/// <summary>
		/// Output only. Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
		
		/// <summary>
		/// Output only. The last-modified time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudRunV2ExecutionLaunchStage
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAUNCH_STAGE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNIMPLEMENTED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRELAUNCH = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EARLY_ACCESS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALPHA = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BETA = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GA = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPRECATED = 7,
	}
	
	/// <summary>
	/// TaskTemplate describes the data a task should have when created from a template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2TaskTemplate
	{
		
		/// <summary>
		/// Holds the single container that defines the unit of execution for this task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containers")]
		public GoogleCloudRunV2Container[] Containers { get; set; }
		
		/// <summary>
		/// A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionKey")]
		public string EncryptionKey { get; set; }
		
		/// <summary>
		/// The execution environment being used to host this Task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executionEnvironment")]
		public System.Nullable<GoogleCloudRunV2TaskTemplateExecutionEnvironment> ExecutionEnvironment { get; set; }
		
		/// <summary>
		/// Number of retries allowed per Task, before marking this Task failed. Defaults to 3.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxRetries")]
		public System.Nullable<System.Int32> MaxRetries { get; set; }
		
		/// <summary>
		/// Email address of the IAM service account associated with the Task of a Job. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project's default service account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
		
		/// <summary>
		/// Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout. Defaults to 600 seconds.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeout")]
		public string Timeout { get; set; }
		
		/// <summary>
		/// A list of Volumes to make available to containers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="volumes")]
		public GoogleCloudRunV2Volume[] Volumes { get; set; }
		
		/// <summary>
		/// VPC Access settings. For more information on sending traffic to a VPC network, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vpcAccess")]
		public GoogleCloudRunV2VpcAccess VpcAccess { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudRunV2TaskTemplateExecutionEnvironment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTION_ENVIRONMENT_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTION_ENVIRONMENT_GEN1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXECUTION_ENVIRONMENT_GEN2 = 2,
	}
	
	/// <summary>
	/// Volume represents a named volume in a container.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2Volume
	{
		
		/// <summary>
		/// Represents a set of Cloud SQL instances. Each one will be available under /cloudsql/[instance]. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cloudSqlInstance")]
		public GoogleCloudRunV2CloudSqlInstance CloudSqlInstance { get; set; }
		
		/// <summary>
		/// In memory (tmpfs) ephemeral storage. It is ephemeral in the sense that when the sandbox is taken down, the data is destroyed with it (it does not persist across sandbox runs).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="emptyDir")]
		public GoogleCloudRunV2EmptyDirVolumeSource EmptyDir { get; set; }
		
		/// <summary>
		/// Represents a GCS Bucket mounted as a volume.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="gcs")]
		public GoogleCloudRunV2GCSVolumeSource Gcs { get; set; }
		
		/// <summary>
		/// Required. Volume's name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Represents an NFS mount.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nfs")]
		public GoogleCloudRunV2NFSVolumeSource Nfs { get; set; }
		
		/// <summary>
		/// The secret's value will be presented as the content of a file whose name is defined in the item path. If no items are defined, the name of the file is the secret.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public GoogleCloudRunV2SecretVolumeSource Secret { get; set; }
	}
	
	/// <summary>
	/// Represents a GCS Bucket mounted as a volume.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2GCSVolumeSource
	{
		
		/// <summary>
		/// GCS Bucket name
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bucket")]
		public string Bucket { get; set; }
		
		/// <summary>
		/// If true, mount the GCS bucket as read-only
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="readOnly")]
		public System.Nullable<System.Boolean> ReadOnly { get; set; }
	}
	
	/// <summary>
	/// Represents an NFS mount.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2NFSVolumeSource
	{
		
		/// <summary>
		/// Path that is exported by the NFS server.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// If true, mount the NFS volume as read only
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="readOnly")]
		public System.Nullable<System.Boolean> ReadOnly { get; set; }
		
		/// <summary>
		/// Hostname or IP address of the NFS server
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="server")]
		public string Server { get; set; }
	}
	
	/// <summary>
	/// The secret's value will be presented as the content of a file whose name is defined in the item path. If no items are defined, the name of the file is the secret.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2SecretVolumeSource
	{
		
		/// <summary>
		/// Integer representation of mode bits to use on created files by default. Must be a value between 0000 and 0777 (octal), defaulting to 0444. Directories within the path are not affected by this setting. Notes * Internally, a umask of 0222 will be applied to any non-zero value. * This is an integer representation of the mode bits. So, the octal integer value should look exactly as the chmod numeric notation with a leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. This might be in conflict with other options that affect the file mode, like fsGroup, and as a result, other mode bits could be set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="defaultMode")]
		public System.Nullable<System.Int32> DefaultMode { get; set; }
		
		/// <summary>
		/// If unspecified, the volume will expose a file whose name is the secret, relative to VolumeMount.mount_path. If specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify a path and a version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="items")]
		public GoogleCloudRunV2VersionToPath[] Items { get; set; }
		
		/// <summary>
		/// Required. The name of the secret in Cloud Secret Manager. Format: {secret} if the secret is in the same project. projects/{project}/secrets/{secret} if the secret is in a different project.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="secret")]
		public string Secret { get; set; }
	}
	
	/// <summary>
	/// VersionToPath maps a specific version of a secret to a relative file to mount to, relative to VolumeMount's mount_path.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2VersionToPath
	{
		
		/// <summary>
		/// Integer octal mode bits to use on this file, must be a value between 01 and 0777 (octal). If 0 or not set, the Volume's default mode will be used. Notes * Internally, a umask of 0222 will be applied to any non-zero value. * This is an integer representation of the mode bits. So, the octal integer value should look exactly as the chmod numeric notation with a leading zero. Some examples: for chmod 777 (a=rwx), set to 0777 (octal) or 511 (base-10). For chmod 640 (u=rw,g=r), set to 0640 (octal) or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or 493 (base-10). * This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mode")]
		public System.Nullable<System.Int32> Mode { get; set; }
		
		/// <summary>
		/// Required. The relative path of the secret in the container.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="path")]
		public string Path { get; set; }
		
		/// <summary>
		/// The Cloud Secret Manager secret version. Can be 'latest' for the latest value, or an integer or a secret alias for a specific version.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// VPC Access settings. For more information on sending traffic to a VPC network, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2VpcAccess
	{
		
		/// <summary>
		/// VPC Access connector name. Format: projects/{project}/locations/{location}/connectors/{connector}, where {project} can be project id or number. For more information on sending traffic to a VPC network via a connector, visit https://cloud.google.com/run/docs/configuring/vpc-connectors.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="connector")]
		public string Connector { get; set; }
		
		/// <summary>
		/// Traffic VPC egress settings. If not provided, it defaults to PRIVATE_RANGES_ONLY.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="egress")]
		public System.Nullable<GoogleCloudRunV2VpcAccessEgress> Egress { get; set; }
		
		/// <summary>
		/// Direct VPC egress settings. Currently only single network interface is supported.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="networkInterfaces")]
		public GoogleCloudRunV2NetworkInterface[] NetworkInterfaces { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudRunV2VpcAccessEgress
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VPC_EGRESS_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ALL_TRAFFIC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PRIVATE_RANGES_ONLY = 2,
	}
	
	/// <summary>
	/// Direct VPC egress settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2NetworkInterface
	{
		
		/// <summary>
		/// The VPC network that the Cloud Run resource will be able to send traffic to. At least one of network or subnetwork must be specified. If both network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If network is not specified, it will be looked up from the subnetwork.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="network")]
		public string Network { get; set; }
		
		/// <summary>
		/// The VPC subnetwork that the Cloud Run resource will get IPs from. At least one of network or subnetwork must be specified. If both network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If subnetwork is not specified, the subnetwork with the same name with the network will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="subnetwork")]
		public string Subnetwork { get; set; }
		
		/// <summary>
		/// Network tags applied to this Cloud Run resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public string[] Tags { get; set; }
	}
	
	/// <summary>
	/// Reference to an Execution. Use /Executions.GetExecution with the given name to get full execution including the latest status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2ExecutionReference
	{
		
		/// <summary>
		/// Creation timestamp of the execution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="completionTime")]
		public string CompletionTime { get; set; }
		
		/// <summary>
		/// Creation timestamp of the execution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Name of the execution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
	}
	
	/// <summary>
	/// ExecutionTemplate describes the data an execution should have when created from a template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2ExecutionTemplate
	{
		
		/// <summary>
		/// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system annotations in v1 now have a corresponding field in v2 ExecutionTemplate. This field follows Kubernetes annotations' namespacing, limits, and rules.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotations")]
		public System.Collections.Generic.Dictionary<string, string> Annotations { get; set; }
		
		/// <summary>
		/// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 ExecutionTemplate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Specifies the maximum desired number of tasks the execution should run at given time. Must be <= task_count. When the job is run, if this field is 0 or unset, the maximum possible value will be used for that execution. The actual number of tasks running in steady state will be less than this number when there are fewer tasks waiting to be completed remaining, i.e. when the work left to do is less than max parallelism.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="parallelism")]
		public System.Nullable<System.Int32> Parallelism { get; set; }
		
		/// <summary>
		/// Specifies the desired number of tasks the execution should run. Setting to 1 means that parallelism is limited to 1 and the success of that task signals the success of the execution. Defaults to 1.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taskCount")]
		public System.Nullable<System.Int32> TaskCount { get; set; }
		
		/// <summary>
		/// TaskTemplate describes the data a task should have when created from a template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template")]
		public GoogleCloudRunV2TaskTemplate Template { get; set; }
	}
	
	/// <summary>
	/// Job represents the configuration of a single job, which references a container image that is run to completion.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2Job
	{
		
		/// <summary>
		/// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected on new resources. All system annotations in v1 now have a corresponding field in v2 Job. This field follows Kubernetes annotations' namespacing, limits, and rules.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotations")]
		public System.Collections.Generic.Dictionary<string, string> Annotations { get; set; }
		
		/// <summary>
		/// Settings for Binary Authorization feature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="binaryAuthorization")]
		public GoogleCloudRunV2BinaryAuthorization BinaryAuthorization { get; set; }
		
		/// <summary>
		/// Arbitrary identifier for the API client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client")]
		public string Client { get; set; }
		
		/// <summary>
		/// Arbitrary version identifier for the API client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientVersion")]
		public string ClientVersion { get; set; }
		
		/// <summary>
		/// Output only. The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Job does not reach its desired state. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public GoogleCloudRunV2Condition[] Conditions { get; set; }
		
		/// <summary>
		/// Output only. The creation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. Email address of the authenticated creator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creator")]
		public string Creator { get; set; }
		
		/// <summary>
		/// Output only. The deletion time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleteTime")]
		public string DeleteTime { get; set; }
		
		/// <summary>
		/// Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Output only. Number of executions created for this job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executionCount")]
		public System.Nullable<System.Int32> ExecutionCount { get; set; }
		
		/// <summary>
		/// Output only. For a deleted resource, the time after which it will be permamently deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expireTime")]
		public string ExpireTime { get; set; }
		
		/// <summary>
		/// Output only. A number that monotonically increases every time the user modifies the desired state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="generation")]
		public string Generation { get; set; }
		
		/// <summary>
		/// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 Job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. Email address of the last authenticated modifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifier")]
		public string LastModifier { get; set; }
		
		/// <summary>
		/// Reference to an Execution. Use /Executions.GetExecution with the given name to get full execution including the latest status.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latestCreatedExecution")]
		public GoogleCloudRunV2ExecutionReference LatestCreatedExecution { get; set; }
		
		/// <summary>
		/// The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="launchStage")]
		public GoogleCloudRunV2ExecutionLaunchStage LaunchStage { get; set; }
		
		/// <summary>
		/// The fully qualified name of this Job. Format: projects/{project}/locations/{location}/jobs/{job}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The generation of this Job. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="observedGeneration")]
		public string ObservedGeneration { get; set; }
		
		/// <summary>
		/// Output only. Returns true if the Job is currently being acted upon by the system to bring it into the desired state. When a new Job is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Job to the desired state. This process is called reconciliation. While reconciliation is in process, `observed_generation` and `latest_succeeded_execution`, will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the state matches the Job, or there was an error, and reconciliation failed. This state can be found in `terminal_condition.state`. If reconciliation succeeded, the following fields will match: `observed_generation` and `generation`, `latest_succeeded_execution` and `latest_created_execution`. If reconciliation failed, `observed_generation` and `latest_succeeded_execution` will have the state of the last succeeded execution or empty for newly created Job. Additional information on the failure can be found in `terminal_condition` and `conditions`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reconciling")]
		public System.Nullable<System.Boolean> Reconciling { get; set; }
		
		/// <summary>
		/// Output only. Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="satisfiesPzs")]
		public System.Nullable<System.Boolean> SatisfiesPzs { get; set; }
		
		/// <summary>
		/// ExecutionTemplate describes the data an execution should have when created from a template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template")]
		public GoogleCloudRunV2ExecutionTemplate Template { get; set; }
		
		/// <summary>
		/// Defines a status condition for a resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="terminalCondition")]
		public GoogleCloudRunV2Condition TerminalCondition { get; set; }
		
		/// <summary>
		/// Output only. Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
		
		/// <summary>
		/// Output only. The last-modified time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
	}
	
	/// <summary>
	/// Response message containing a list of Executions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2ListExecutionsResponse
	{
		
		/// <summary>
		/// The resulting list of Executions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executions")]
		public GoogleCloudRunV2Execution[] Executions { get; set; }
		
		/// <summary>
		/// A token indicating there are more items than page_size. Use it in the next ListExecutions request to continue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message containing a list of Jobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2ListJobsResponse
	{
		
		/// <summary>
		/// The resulting list of Jobs.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="jobs")]
		public GoogleCloudRunV2Job[] Jobs { get; set; }
		
		/// <summary>
		/// A token indicating there are more items than page_size. Use it in the next ListJobs request to continue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
	}
	
	/// <summary>
	/// Response message containing a list of Revisions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2ListRevisionsResponse
	{
		
		/// <summary>
		/// A token indicating there are more items than page_size. Use it in the next ListRevisions request to continue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The resulting list of Revisions.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revisions")]
		public GoogleCloudRunV2Revision[] Revisions { get; set; }
	}
	
	/// <summary>
	/// A Revision is an immutable snapshot of code and configuration. A Revision references a container image. Revisions are only created by updates to its parent Service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2Revision
	{
		
		/// <summary>
		/// Output only. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotations")]
		public System.Collections.Generic.Dictionary<string, string> Annotations { get; set; }
		
		/// <summary>
		/// Output only. The Condition of this Revision, containing its readiness status, and detailed error information in case it did not reach a serving state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public GoogleCloudRunV2Condition[] Conditions { get; set; }
		
		/// <summary>
		/// Holds the single container that defines the unit of execution for this Revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containers")]
		public GoogleCloudRunV2Container[] Containers { get; set; }
		
		/// <summary>
		/// Output only. The creation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleteTime")]
		public string DeleteTime { get; set; }
		
		/// <summary>
		/// A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionKey")]
		public string EncryptionKey { get; set; }
		
		/// <summary>
		/// The action to take if the encryption key is revoked.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionKeyRevocationAction")]
		public System.Nullable<GoogleCloudRunV2RevisionEncryptionKeyRevocationAction> EncryptionKeyRevocationAction { get; set; }
		
		/// <summary>
		/// If encryption_key_revocation_action is SHUTDOWN, the duration before shutting down all instances. The minimum increment is 1 hour.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionKeyShutdownDuration")]
		public string EncryptionKeyShutdownDuration { get; set; }
		
		/// <summary>
		/// Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// The execution environment being used to host this Revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executionEnvironment")]
		public GoogleCloudRunV2TaskTemplateExecutionEnvironment ExecutionEnvironment { get; set; }
		
		/// <summary>
		/// Output only. For a deleted resource, the time after which it will be permamently deleted. It is only populated as a response to a Delete request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expireTime")]
		public string ExpireTime { get; set; }
		
		/// <summary>
		/// Output only. A number that monotonically increases every time the user modifies the desired state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="generation")]
		public string Generation { get; set; }
		
		/// <summary>
		/// Output only. Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// The least stable launch stage needed to create this resource, as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. Note that this value might not be what was used as input. For example, if ALPHA was provided as input in the parent resource, but only BETA and GA-level features are were, this field will be BETA.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="launchStage")]
		public GoogleCloudRunV2ExecutionLaunchStage LaunchStage { get; set; }
		
		/// <summary>
		/// Output only. The Google Console URI to obtain logs for the Revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logUri")]
		public string LogUri { get; set; }
		
		/// <summary>
		/// Sets the maximum number of requests that each serving instance can receive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxInstanceRequestConcurrency")]
		public System.Nullable<System.Int32> MaxInstanceRequestConcurrency { get; set; }
		
		/// <summary>
		/// Output only. The unique name of this Revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The generation of this Revision currently serving traffic. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="observedGeneration")]
		public string ObservedGeneration { get; set; }
		
		/// <summary>
		/// Output only. Indicates whether the resource's reconciliation is still in progress. See comments in `Service.reconciling` for additional information on reconciliation process in Cloud Run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reconciling")]
		public System.Nullable<System.Boolean> Reconciling { get; set; }
		
		/// <summary>
		/// Output only. Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="satisfiesPzs")]
		public System.Nullable<System.Boolean> SatisfiesPzs { get; set; }
		
		/// <summary>
		/// Settings for revision-level scaling settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scaling")]
		public GoogleCloudRunV2RevisionScaling Scaling { get; set; }
		
		/// <summary>
		/// Effective settings for the current revision
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scalingStatus")]
		public GoogleCloudRunV2RevisionScalingStatus ScalingStatus { get; set; }
		
		/// <summary>
		/// Output only. The name of the parent service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
		
		/// <summary>
		/// Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
		
		/// <summary>
		/// Enable session affinity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sessionAffinity")]
		public System.Nullable<System.Boolean> SessionAffinity { get; set; }
		
		/// <summary>
		/// Max allowed time for an instance to respond to a request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeout")]
		public string Timeout { get; set; }
		
		/// <summary>
		/// Output only. Server assigned unique identifier for the Revision. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
		
		/// <summary>
		/// Output only. The last-modified time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// A list of Volumes to make available to containers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="volumes")]
		public GoogleCloudRunV2Volume[] Volumes { get; set; }
		
		/// <summary>
		/// VPC Access settings. For more information on sending traffic to a VPC network, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vpcAccess")]
		public GoogleCloudRunV2VpcAccess VpcAccess { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudRunV2RevisionEncryptionKeyRevocationAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENCRYPTION_KEY_REVOCATION_ACTION_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PREVENT_NEW = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHUTDOWN = 2,
	}
	
	/// <summary>
	/// Settings for revision-level scaling settings.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2RevisionScaling
	{
		
		/// <summary>
		/// Maximum number of serving instances that this resource should have.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxInstanceCount")]
		public System.Nullable<System.Int32> MaxInstanceCount { get; set; }
		
		/// <summary>
		/// Minimum number of serving instances that this resource should have.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minInstanceCount")]
		public System.Nullable<System.Int32> MinInstanceCount { get; set; }
	}
	
	/// <summary>
	/// Effective settings for the current revision
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2RevisionScalingStatus
	{
		
		/// <summary>
		/// The current number of min instances provisioned for this revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="desiredMinInstanceCount")]
		public System.Nullable<System.Int32> DesiredMinInstanceCount { get; set; }
	}
	
	/// <summary>
	/// Response message containing a list of Services.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2ListServicesResponse
	{
		
		/// <summary>
		/// A token indicating there are more items than page_size. Use it in the next ListServices request to continue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The resulting list of Services.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="services")]
		public GoogleCloudRunV2Service[] Services { get; set; }
	}
	
	/// <summary>
	/// Service acts as a top-level container that manages a set of configurations and revision templates which implement a network service. Service exists to provide a singular abstraction which can be access controlled, reasoned about, and which encapsulates software lifecycle decisions such as rollout policy and team resource ownership.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2Service
	{
		
		/// <summary>
		/// Optional. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected in new resources. All system annotations in v1 now have a corresponding field in v2 Service. This field follows Kubernetes annotations' namespacing, limits, and rules.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotations")]
		public System.Collections.Generic.Dictionary<string, string> Annotations { get; set; }
		
		/// <summary>
		/// Settings for Binary Authorization feature.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="binaryAuthorization")]
		public GoogleCloudRunV2BinaryAuthorization BinaryAuthorization { get; set; }
		
		/// <summary>
		/// Arbitrary identifier for the API client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="client")]
		public string Client { get; set; }
		
		/// <summary>
		/// Arbitrary version identifier for the API client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="clientVersion")]
		public string ClientVersion { get; set; }
		
		/// <summary>
		/// Output only. The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Service does not reach its Serving state. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public GoogleCloudRunV2Condition[] Conditions { get; set; }
		
		/// <summary>
		/// Output only. The creation time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. Email address of the authenticated creator.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="creator")]
		public string Creator { get; set; }
		
		/// <summary>
		/// One or more custom audiences that you want this service to support. Specify each custom audience as the full URL in a string. The custom audiences are encoded in the token and used to authenticate requests. For more information, see https://cloud.google.com/run/docs/configuring/custom-audiences.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="customAudiences")]
		public string[] CustomAudiences { get; set; }
		
		/// <summary>
		/// Output only. The deletion time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleteTime")]
		public string DeleteTime { get; set; }
		
		/// <summary>
		/// User-provided description of the Service. This field currently has a 512-character limit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Output only. For a deleted resource, the time after which it will be permamently deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expireTime")]
		public string ExpireTime { get; set; }
		
		/// <summary>
		/// Output only. A number that monotonically increases every time the user modifies the desired state. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a `string` instead of an `integer`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="generation")]
		public string Generation { get; set; }
		
		/// <summary>
		/// Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or INGRESS_TRAFFIC_UNSPECIFIED if no revision is active.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="ingress")]
		public System.Nullable<GoogleCloudRunV2ServiceIngress> Ingress { get; set; }
		
		/// <summary>
		/// Optional. Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 Service.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Output only. Email address of the last authenticated modifier.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastModifier")]
		public string LastModifier { get; set; }
		
		/// <summary>
		/// Output only. Name of the last created revision. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latestCreatedRevision")]
		public string LatestCreatedRevision { get; set; }
		
		/// <summary>
		/// Output only. Name of the latest revision that is serving traffic. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="latestReadyRevision")]
		public string LatestReadyRevision { get; set; }
		
		/// <summary>
		/// The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="launchStage")]
		public GoogleCloudRunV2ExecutionLaunchStage LaunchStage { get; set; }
		
		/// <summary>
		/// The fully qualified name of this Service. In CreateServiceRequest, this field is ignored, and instead composed from CreateServiceRequest.parent and CreateServiceRequest.service_id. Format: projects/{project}/locations/{location}/services/{service_id}
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The generation of this Service currently serving traffic. See comments in `reconciling` for additional information on reconciliation process in Cloud Run. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a `string` instead of an `integer`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="observedGeneration")]
		public string ObservedGeneration { get; set; }
		
		/// <summary>
		/// Output only. Returns true if the Service is currently being acted upon by the system to bring it into the desired state. When a new Service is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Service to the desired serving state. This process is called reconciliation. While reconciliation is in process, `observed_generation`, `latest_ready_revison`, `traffic_statuses`, and `uri` will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the serving state matches the Service, or there was an error, and reconciliation failed. This state can be found in `terminal_condition.state`. If reconciliation succeeded, the following fields will match: `traffic` and `traffic_statuses`, `observed_generation` and `generation`, `latest_ready_revision` and `latest_created_revision`. If reconciliation failed, `traffic_statuses`, `observed_generation`, and `latest_ready_revision` will have the state of the last serving revision, or empty for newly created Services. Additional information on the failure can be found in `terminal_condition` and `conditions`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reconciling")]
		public System.Nullable<System.Boolean> Reconciling { get; set; }
		
		/// <summary>
		/// Output only. Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="satisfiesPzs")]
		public System.Nullable<System.Boolean> SatisfiesPzs { get; set; }
		
		/// <summary>
		/// Scaling settings applied at the service level rather than at the revision level.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scaling")]
		public GoogleCloudRunV2ServiceScaling Scaling { get; set; }
		
		/// <summary>
		/// RevisionTemplate describes the data a revision should have when created from a template.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="template")]
		public GoogleCloudRunV2RevisionTemplate Template { get; set; }
		
		/// <summary>
		/// Defines a status condition for a resource.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="terminalCondition")]
		public GoogleCloudRunV2Condition TerminalCondition { get; set; }
		
		/// <summary>
		/// Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not provided, defaults to 100% traffic to the latest `Ready` Revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="traffic")]
		public GoogleCloudRunV2TrafficTarget[] Traffic { get; set; }
		
		/// <summary>
		/// Output only. Detailed status information for corresponding traffic targets. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="trafficStatuses")]
		public GoogleCloudRunV2TrafficTargetStatus[] TrafficStatuses { get; set; }
		
		/// <summary>
		/// Output only. Server assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
		
		/// <summary>
		/// Output only. The last-modified time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// Output only. The main URI in which this Service is serving traffic.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudRunV2ServiceIngress
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INGRESS_TRAFFIC_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INGRESS_TRAFFIC_ALL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INGRESS_TRAFFIC_INTERNAL_ONLY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER = 3,
	}
	
	/// <summary>
	/// Scaling settings applied at the service level rather than at the revision level.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2ServiceScaling
	{
		
		/// <summary>
		/// total min instances for the service. This number of instances is divided among all revisions with specified traffic based on the percent of traffic they are receiving. (ALPHA)
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="minInstanceCount")]
		public System.Nullable<System.Int32> MinInstanceCount { get; set; }
	}
	
	/// <summary>
	/// RevisionTemplate describes the data a revision should have when created from a template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2RevisionTemplate
	{
		
		/// <summary>
		/// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects. Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system annotations in v1 now have a corresponding field in v2 RevisionTemplate. This field follows Kubernetes annotations' namespacing, limits, and rules.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotations")]
		public System.Collections.Generic.Dictionary<string, string> Annotations { get; set; }
		
		/// <summary>
		/// Holds the single container that defines the unit of execution for this Revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containers")]
		public GoogleCloudRunV2Container[] Containers { get; set; }
		
		/// <summary>
		/// A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionKey")]
		public string EncryptionKey { get; set; }
		
		/// <summary>
		/// The sandbox environment to host this Revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executionEnvironment")]
		public GoogleCloudRunV2TaskTemplateExecutionEnvironment ExecutionEnvironment { get; set; }
		
		/// <summary>
		/// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected. All system labels in v1 now have a corresponding field in v2 RevisionTemplate.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Sets the maximum number of requests that each serving instance can receive.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxInstanceRequestConcurrency")]
		public System.Nullable<System.Int32> MaxInstanceRequestConcurrency { get; set; }
		
		/// <summary>
		/// The unique name for the revision. If this field is omitted, it will be automatically generated based on the Service name.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public string Revision { get; set; }
		
		/// <summary>
		/// Settings for revision-level scaling settings.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scaling")]
		public GoogleCloudRunV2RevisionScaling Scaling { get; set; }
		
		/// <summary>
		/// Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
		
		/// <summary>
		/// Enable session affinity.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="sessionAffinity")]
		public System.Nullable<System.Boolean> SessionAffinity { get; set; }
		
		/// <summary>
		/// Max allowed time for an instance to respond to a request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeout")]
		public string Timeout { get; set; }
		
		/// <summary>
		/// A list of Volumes to make available to containers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="volumes")]
		public GoogleCloudRunV2Volume[] Volumes { get; set; }
		
		/// <summary>
		/// VPC Access settings. For more information on sending traffic to a VPC network, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vpcAccess")]
		public GoogleCloudRunV2VpcAccess VpcAccess { get; set; }
	}
	
	/// <summary>
	/// Holds a single traffic routing entry for the Service. Allocations can be done to a specific Revision name, or pointing to the latest Ready Revision.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2TrafficTarget
	{
		
		/// <summary>
		/// Specifies percent of the traffic to this Revision. This defaults to zero if unspecified.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="percent")]
		public System.Nullable<System.Int32> Percent { get; set; }
		
		/// <summary>
		/// Revision to which to send this portion of traffic, if traffic allocation is by revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public string Revision { get; set; }
		
		/// <summary>
		/// Indicates a string to be part of the URI to exclusively reference this target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tag")]
		public string Tag { get; set; }
		
		/// <summary>
		/// The allocation type for this traffic target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public System.Nullable<GoogleCloudRunV2TrafficTargetType> Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleCloudRunV2TrafficTargetType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION = 2,
	}
	
	/// <summary>
	/// Represents the observed state of a single `TrafficTarget` entry.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2TrafficTargetStatus
	{
		
		/// <summary>
		/// Specifies percent of the traffic to this Revision.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="percent")]
		public System.Nullable<System.Int32> Percent { get; set; }
		
		/// <summary>
		/// Revision to which this traffic is sent.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="revision")]
		public string Revision { get; set; }
		
		/// <summary>
		/// Indicates the string used in the URI to exclusively reference this target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tag")]
		public string Tag { get; set; }
		
		/// <summary>
		/// The allocation type for this traffic target.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="type")]
		public GoogleCloudRunV2TrafficTargetType Type { get; set; }
		
		/// <summary>
		/// Displays the target URI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uri")]
		public string Uri { get; set; }
	}
	
	/// <summary>
	/// Response message containing a list of Tasks.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2ListTasksResponse
	{
		
		/// <summary>
		/// A token indicating there are more items than page_size. Use it in the next ListTasks request to continue.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// The resulting list of Tasks.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tasks")]
		public GoogleCloudRunV2Task[] Tasks { get; set; }
	}
	
	/// <summary>
	/// Task represents a single run of a container to completion.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2Task
	{
		
		/// <summary>
		/// Output only. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="annotations")]
		public System.Collections.Generic.Dictionary<string, string> Annotations { get; set; }
		
		/// <summary>
		/// Output only. Represents time when the Task was completed. It is not guaranteed to be set in happens-before order across separate operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="completionTime")]
		public string CompletionTime { get; set; }
		
		/// <summary>
		/// Output only. The Condition of this Task, containing its readiness status, and detailed error information in case it did not reach the desired state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="conditions")]
		public GoogleCloudRunV2Condition[] Conditions { get; set; }
		
		/// <summary>
		/// Holds the single container that defines the unit of execution for this task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containers")]
		public GoogleCloudRunV2Container[] Containers { get; set; }
		
		/// <summary>
		/// Output only. Represents time when the task was created by the system. It is not guaranteed to be set in happens-before order across separate operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="createTime")]
		public string CreateTime { get; set; }
		
		/// <summary>
		/// Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="deleteTime")]
		public string DeleteTime { get; set; }
		
		/// <summary>
		/// Output only. A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="encryptionKey")]
		public string EncryptionKey { get; set; }
		
		/// <summary>
		/// Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Output only. The name of the parent Execution.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="execution")]
		public string Execution { get; set; }
		
		/// <summary>
		/// The execution environment being used to host this Task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="executionEnvironment")]
		public GoogleCloudRunV2TaskTemplateExecutionEnvironment ExecutionEnvironment { get; set; }
		
		/// <summary>
		/// Output only. For a deleted resource, the time after which it will be permamently deleted. It is only populated as a response to a Delete request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expireTime")]
		public string ExpireTime { get; set; }
		
		/// <summary>
		/// Output only. A number that monotonically increases every time the user modifies the desired state.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="generation")]
		public string Generation { get; set; }
		
		/// <summary>
		/// Output only. Index of the Task, unique per execution, and beginning at 0.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="index")]
		public System.Nullable<System.Int32> Index { get; set; }
		
		/// <summary>
		/// Output only. The name of the parent Job.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="job")]
		public string Job { get; set; }
		
		/// <summary>
		/// Output only. Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="labels")]
		public System.Collections.Generic.Dictionary<string, string> Labels { get; set; }
		
		/// <summary>
		/// Result of a task attempt.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="lastAttemptResult")]
		public GoogleCloudRunV2TaskAttemptResult LastAttemptResult { get; set; }
		
		/// <summary>
		/// Output only. URI where logs for this execution can be found in Cloud Console.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logUri")]
		public string LogUri { get; set; }
		
		/// <summary>
		/// Number of retries allowed per Task, before marking this Task failed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="maxRetries")]
		public System.Nullable<System.Int32> MaxRetries { get; set; }
		
		/// <summary>
		/// Output only. The unique name of this Task.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// Output only. The generation of this Task. See comments in `Job.reconciling` for additional information on reconciliation process in Cloud Run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="observedGeneration")]
		public string ObservedGeneration { get; set; }
		
		/// <summary>
		/// Output only. Indicates whether the resource's reconciliation is still in progress. See comments in `Job.reconciling` for additional information on reconciliation process in Cloud Run.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="reconciling")]
		public System.Nullable<System.Boolean> Reconciling { get; set; }
		
		/// <summary>
		/// Output only. The number of times this Task was retried. Tasks are retried when they fail up to the maxRetries limit.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="retried")]
		public System.Nullable<System.Int32> Retried { get; set; }
		
		/// <summary>
		/// Output only. Reserved for future use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="satisfiesPzs")]
		public System.Nullable<System.Boolean> SatisfiesPzs { get; set; }
		
		/// <summary>
		/// Output only. Represents time when the task was scheduled to run by the system. It is not guaranteed to be set in happens-before order across separate operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="scheduledTime")]
		public string ScheduledTime { get; set; }
		
		/// <summary>
		/// Email address of the IAM service account associated with the Task of a Job. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project's default service account.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="serviceAccount")]
		public string ServiceAccount { get; set; }
		
		/// <summary>
		/// Output only. Represents time when the task started to run. It is not guaranteed to be set in happens-before order across separate operations.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeout")]
		public string Timeout { get; set; }
		
		/// <summary>
		/// Output only. Server assigned unique identifier for the Task. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="uid")]
		public string Uid { get; set; }
		
		/// <summary>
		/// Output only. The last-modified time.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateTime")]
		public string UpdateTime { get; set; }
		
		/// <summary>
		/// A list of Volumes to make available to containers.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="volumes")]
		public GoogleCloudRunV2Volume[] Volumes { get; set; }
		
		/// <summary>
		/// VPC Access settings. For more information on sending traffic to a VPC network, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="vpcAccess")]
		public GoogleCloudRunV2VpcAccess VpcAccess { get; set; }
	}
	
	/// <summary>
	/// Result of a task attempt.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2TaskAttemptResult
	{
		
		/// <summary>
		/// Output only. The exit code of this attempt. This may be unset if the container was unable to exit cleanly with a code due to some other failure. See status field for possible failure details.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exitCode")]
		public System.Nullable<System.Int32> ExitCode { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="status")]
		public GoogleRpcStatus Status { get; set; }
	}
	
	/// <summary>
	/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleRpcStatus
	{
		
		/// <summary>
		/// The status code, which should be an enum value of google.rpc.Code.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="code")]
		public System.Nullable<System.Int32> Code { get; set; }
		
		/// <summary>
		/// A list of messages that carry the error details. There is a common set of message types for APIs to use.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="details")]
		public string[] Details { get; set; }
		
		/// <summary>
		/// A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	/// <summary>
	/// RunJob Overrides that contains Execution fields to be overridden.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2Overrides
	{
		
		/// <summary>
		/// Per container override specification.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="containerOverrides")]
		public GoogleCloudRunV2ContainerOverride[] ContainerOverrides { get; set; }
		
		/// <summary>
		/// Optional. The desired number of tasks the execution should run. Will replace existing task_count value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="taskCount")]
		public System.Nullable<System.Int32> TaskCount { get; set; }
		
		/// <summary>
		/// Duration in seconds the task may be active before the system will actively try to mark it failed and kill associated containers. Will replace existing timeout_seconds value.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeout")]
		public string Timeout { get; set; }
	}
	
	/// <summary>
	/// Request message to create a new Execution of a Job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleCloudRunV2RunJobRequest
	{
		
		/// <summary>
		/// A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// RunJob Overrides that contains Execution fields to be overridden.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="overrides")]
		public GoogleCloudRunV2Overrides Overrides { get; set; }
		
		/// <summary>
		/// Indicates that the request should be validated without actually deleting any resources.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="validateOnly")]
		public System.Nullable<System.Boolean> ValidateOnly { get; set; }
	}
	
	/// <summary>
	/// Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleIamV1AuditConfig
	{
		
		/// <summary>
		/// The configuration for logging of each type of permission.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditLogConfigs")]
		public GoogleIamV1AuditLogConfig[] AuditLogConfigs { get; set; }
		
		/// <summary>
		/// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="service")]
		public string Service { get; set; }
	}
	
	/// <summary>
	/// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleIamV1AuditLogConfig
	{
		
		/// <summary>
		/// Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="exemptedMembers")]
		public string[] ExemptedMembers { get; set; }
		
		/// <summary>
		/// The log type that this config enables.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="logType")]
		public System.Nullable<GoogleIamV1AuditLogConfigLogType> LogType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum GoogleIamV1AuditLogConfigLogType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOG_TYPE_UNSPECIFIED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADMIN_READ = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_WRITE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATA_READ = 3,
	}
	
	/// <summary>
	/// Associates `members`, or principals, with a `role`.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleIamV1Binding
	{
		
		/// <summary>
		/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="condition")]
		public GoogleTypeExpr Condition { get; set; }
		
		/// <summary>
		/// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="members")]
		public string[] Members { get; set; }
		
		/// <summary>
		/// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="role")]
		public string Role { get; set; }
	}
	
	/// <summary>
	/// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleTypeExpr
	{
		
		/// <summary>
		/// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Textual representation of an expression in Common Expression Language syntax.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="expression")]
		public string Expression { get; set; }
		
		/// <summary>
		/// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="location")]
		public string Location { get; set; }
		
		/// <summary>
		/// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="title")]
		public string Title { get; set; }
	}
	
	/// <summary>
	/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleIamV1Policy
	{
		
		/// <summary>
		/// Specifies cloud audit logging configuration for this policy.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="auditConfigs")]
		public GoogleIamV1AuditConfig[] AuditConfigs { get; set; }
		
		/// <summary>
		/// Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="bindings")]
		public GoogleIamV1Binding[] Bindings { get; set; }
		
		/// <summary>
		/// `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="etag")]
		public string Etag { get; set; }
		
		/// <summary>
		/// Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="version")]
		public System.Nullable<System.Int32> Version { get; set; }
	}
	
	/// <summary>
	/// Request message for `SetIamPolicy` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleIamV1SetIamPolicyRequest
	{
		
		/// <summary>
		/// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="policy")]
		public GoogleIamV1Policy Policy { get; set; }
		
		/// <summary>
		/// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="updateMask")]
		public string UpdateMask { get; set; }
	}
	
	/// <summary>
	/// Request message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleIamV1TestIamPermissionsRequest
	{
		
		/// <summary>
		/// The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	/// <summary>
	/// Response message for `TestIamPermissions` method.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleIamV1TestIamPermissionsResponse
	{
		
		/// <summary>
		/// A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public string[] Permissions { get; set; }
	}
	
	/// <summary>
	/// The response message for Operations.ListOperations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleLongrunningListOperationsResponse
	{
		
		/// <summary>
		/// The standard List next-page token.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="nextPageToken")]
		public string NextPageToken { get; set; }
		
		/// <summary>
		/// A list of operations that matches the specified filter in the request.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="operations")]
		public GoogleLongrunningOperation[] Operations { get; set; }
	}
	
	/// <summary>
	/// This resource represents a long-running operation that is the result of a network API call.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleLongrunningOperation
	{
		
		/// <summary>
		/// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="done")]
		public System.Nullable<System.Boolean> Done { get; set; }
		
		/// <summary>
		/// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="error")]
		public GoogleRpcStatus Error { get; set; }
		
		/// <summary>
		/// Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="metadata")]
		public System.Collections.Generic.Dictionary<string, object> Metadata { get; set; }
		
		/// <summary>
		/// The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		/// <summary>
		/// The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="response")]
		public System.Collections.Generic.Dictionary<string, object> Response { get; set; }
	}
	
	/// <summary>
	/// The request message for Operations.WaitOperation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleLongrunningWaitOperationRequest
	{
		
		/// <summary>
		/// The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="timeout")]
		public string Timeout { get; set; }
	}
	
	/// <summary>
	/// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GoogleProtobufEmpty
	{
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Deletes a Revision.
		/// Run_projects_locations_services_revisions_delete v2/{name}
		/// </summary>
		/// <param name="name">Required. The name of the Revision to delete. Format: projects/{project}/locations/{location}/services/{service}/revisions/{revision}</param>
		/// <param name="etag">A system-generated fingerprint for this version of the resource. This may be used to detect modification conflict during updates.</param>
		/// <param name="validateOnly">Indicates that the request should be validated without actually deleting any resources.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Run_projects_locations_services_revisions_deleteAsync(string name, string etag, bool validateOnly, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&etag=" + (etag==null? "" : System.Uri.EscapeDataString(etag))+"&validateOnly="+validateOnly;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets information about a Revision.
		/// Run_projects_locations_services_revisions_get v2/{name}
		/// </summary>
		/// <param name="name">Required. The full name of the Revision. Format: projects/{project}/locations/{location}/services/{service}/revisions/{revision}</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudRunV2Revision> Run_projects_locations_services_revisions_getAsync(string name, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudRunV2Revision>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a Service.
		/// Run_projects_locations_services_patch v2/{name}
		/// </summary>
		/// <param name="name">The fully qualified name of this Service. In CreateServiceRequest, this field is ignored, and instead composed from CreateServiceRequest.parent and CreateServiceRequest.service_id. Format: projects/{project}/locations/{location}/services/{service_id}</param>
		/// <param name="allowMissing">If set to true, and if the Service does not exist, it will create a new one. The caller must have 'run.services.create' permissions if this is set to true and the Service does not exist.</param>
		/// <param name="validateOnly">Indicates that the request should be validated and default values populated, without persisting the request or updating any resources.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Run_projects_locations_services_patchAsync(string name, bool allowMissing, bool validateOnly, GoogleCloudRunV2Service requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"&allowMissing="+allowMissing+"&validateOnly="+validateOnly;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Patch, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
		/// Run_projects_locations_operations_list v2/{name}/operations
		/// </summary>
		/// <param name="name">Required. To query for all of the operations for a project.</param>
		/// <param name="filter">Optional. A filter for matching the completed or in-progress operations. The supported formats of *filter* are: To query for only completed operations: done:true To query for only ongoing operations: done:false Must be empty to query for all of the latest operations for the given parent project.</param>
		/// <param name="pageSize">The maximum number of records that should be returned. Requested page size cannot exceed 100. If not set or set to less than or equal to 0, the default page size is 100. .</param>
		/// <param name="pageToken">Token identifying which result to start with, which is returned by a previous list call.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningListOperationsResponse> Run_projects_locations_operations_listAsync(string name, string filter, int pageSize, string pageToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name))+"/operations&filter=" + (filter==null? "" : System.Uri.EscapeDataString(filter))+"&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningListOperationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Cancels an Execution.
		/// Run_projects_locations_jobs_executions_cancel v2/{name}:cancel
		/// </summary>
		/// <param name="name">Required. The name of the Execution to cancel. Format: `projects/{project}/locations/{location}/jobs/{job}/executions/{execution}`, where `{project}` can be project id or number.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Run_projects_locations_jobs_executions_cancelAsync(string name, GoogleCloudRunV2CancelExecutionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":cancel";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Triggers creation of a new Execution of this Job.
		/// Run_projects_locations_jobs_run v2/{name}:run
		/// </summary>
		/// <param name="name">Required. The full name of the Job. Format: projects/{project}/locations/{location}/jobs/{job}, where {project} can be project id or number.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Run_projects_locations_jobs_runAsync(string name, GoogleCloudRunV2RunJobRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":run";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.
		/// Run_projects_locations_operations_wait v2/{name}:wait
		/// </summary>
		/// <param name="name">The name of the operation resource to wait on.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Run_projects_locations_operations_waitAsync(string name, GoogleLongrunningWaitOperationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (name==null? "" : System.Uri.EscapeDataString(name))+":wait";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists Executions from a Job.
		/// Run_projects_locations_jobs_executions_list v2/{parent}/executions
		/// </summary>
		/// <param name="parent">Required. The Execution from which the Executions should be listed. To list all Executions across Jobs, use "-" instead of Job name. Format: `projects/{project}/locations/{location}/jobs/{job}`, where `{project}` can be project id or number.</param>
		/// <param name="pageSize">Maximum number of Executions to return in this call.</param>
		/// <param name="pageToken">A page token received from a previous call to ListExecutions. All other parameters must match.</param>
		/// <param name="showDeleted">If true, returns deleted (but unexpired) resources along with active ones.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudRunV2ListExecutionsResponse> Run_projects_locations_jobs_executions_listAsync(string parent, int pageSize, string pageToken, bool showDeleted, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/executions&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&showDeleted="+showDeleted;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudRunV2ListExecutionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists Jobs.
		/// Run_projects_locations_jobs_list v2/{parent}/jobs
		/// </summary>
		/// <param name="parent">Required. The location and project to list resources on. Format: projects/{project}/locations/{location}, where {project} can be project id or number.</param>
		/// <param name="pageSize">Maximum number of Jobs to return in this call.</param>
		/// <param name="pageToken">A page token received from a previous call to ListJobs. All other parameters must match.</param>
		/// <param name="showDeleted">If true, returns deleted (but unexpired) resources along with active ones.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudRunV2ListJobsResponse> Run_projects_locations_jobs_listAsync(string parent, int pageSize, string pageToken, bool showDeleted, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/jobs&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&showDeleted="+showDeleted;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudRunV2ListJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Job.
		/// Run_projects_locations_jobs_create v2/{parent}/jobs
		/// </summary>
		/// <param name="parent">Required. The location and project in which this Job should be created. Format: projects/{project}/locations/{location}, where {project} can be project id or number.</param>
		/// <param name="jobId">Required. The unique identifier for the Job. The name of the job becomes {parent}/jobs/{job_id}.</param>
		/// <param name="validateOnly">Indicates that the request should be validated and default values populated, without persisting the request or creating any resources.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Run_projects_locations_jobs_createAsync(string parent, string jobId, bool validateOnly, GoogleCloudRunV2Job requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/jobs&jobId=" + (jobId==null? "" : System.Uri.EscapeDataString(jobId))+"&validateOnly="+validateOnly;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists Revisions from a given Service, or from a given location.
		/// Run_projects_locations_services_revisions_list v2/{parent}/revisions
		/// </summary>
		/// <param name="parent">Required. The Service from which the Revisions should be listed. To list all Revisions across Services, use "-" instead of Service name. Format: projects/{project}/locations/{location}/services/{service}</param>
		/// <param name="pageSize">Maximum number of revisions to return in this call.</param>
		/// <param name="pageToken">A page token received from a previous call to ListRevisions. All other parameters must match.</param>
		/// <param name="showDeleted">If true, returns deleted (but unexpired) resources along with active ones.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudRunV2ListRevisionsResponse> Run_projects_locations_services_revisions_listAsync(string parent, int pageSize, string pageToken, bool showDeleted, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/revisions&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&showDeleted="+showDeleted;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudRunV2ListRevisionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists Services.
		/// Run_projects_locations_services_list v2/{parent}/services
		/// </summary>
		/// <param name="parent">Required. The location and project to list resources on. Location must be a valid Google Cloud region, and cannot be the "-" wildcard. Format: projects/{project}/locations/{location}, where {project} can be project id or number.</param>
		/// <param name="pageSize">Maximum number of Services to return in this call.</param>
		/// <param name="pageToken">A page token received from a previous call to ListServices. All other parameters must match.</param>
		/// <param name="showDeleted">If true, returns deleted (but unexpired) resources along with active ones.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudRunV2ListServicesResponse> Run_projects_locations_services_listAsync(string parent, int pageSize, string pageToken, bool showDeleted, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/services&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&showDeleted="+showDeleted;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudRunV2ListServicesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new Service in a given project and location.
		/// Run_projects_locations_services_create v2/{parent}/services
		/// </summary>
		/// <param name="parent">Required. The location and project in which this service should be created. Format: projects/{project}/locations/{location}, where {project} can be project id or number. Only lowercase characters, digits, and hyphens.</param>
		/// <param name="serviceId">Required. The unique identifier for the Service. It must begin with letter, and cannot end with hyphen; must contain fewer than 50 characters. The name of the service becomes {parent}/services/{service_id}.</param>
		/// <param name="validateOnly">Indicates that the request should be validated and default values populated, without persisting the request or creating any resources.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleLongrunningOperation> Run_projects_locations_services_createAsync(string parent, string serviceId, bool validateOnly, GoogleCloudRunV2Service requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/services&serviceId=" + (serviceId==null? "" : System.Uri.EscapeDataString(serviceId))+"&validateOnly="+validateOnly;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleLongrunningOperation>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists Tasks from an Execution of a Job.
		/// Run_projects_locations_jobs_executions_tasks_list v2/{parent}/tasks
		/// </summary>
		/// <param name="parent">Required. The Execution from which the Tasks should be listed. To list all Tasks across Executions of a Job, use "-" instead of Execution name. To list all Tasks across Jobs, use "-" instead of Job name. Format: projects/{project}/locations/{location}/jobs/{job}/executions/{execution}</param>
		/// <param name="pageSize">Maximum number of Tasks to return in this call.</param>
		/// <param name="pageToken">A page token received from a previous call to ListTasks. All other parameters must match.</param>
		/// <param name="showDeleted">If true, returns deleted (but unexpired) resources along with active ones.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleCloudRunV2ListTasksResponse> Run_projects_locations_jobs_executions_tasks_listAsync(string parent, int pageSize, string pageToken, bool showDeleted, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (parent==null? "" : System.Uri.EscapeDataString(parent))+"/tasks&pageSize="+pageSize+"&pageToken=" + (pageToken==null? "" : System.Uri.EscapeDataString(pageToken))+"&showDeleted="+showDeleted;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleCloudRunV2ListTasksResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets the IAM Access Control policy currently in effect for the given Cloud Run Service. This result does not include any inherited policies.
		/// Run_projects_locations_services_getIamPolicy v2/{resource}:getIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <param name="options_requestedPolicyVersion">Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleIamV1Policy> Run_projects_locations_services_getIamPolicyAsync(string resource, int options_requestedPolicyVersion, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":getIamPolicy&options.requestedPolicyVersion="+options_requestedPolicyVersion;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleIamV1Policy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Sets the IAM Access control policy for the specified Service. Overwrites any existing policy.
		/// Run_projects_locations_services_setIamPolicy v2/{resource}:setIamPolicy
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleIamV1Policy> Run_projects_locations_services_setIamPolicyAsync(string resource, GoogleIamV1SetIamPolicyRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":setIamPolicy";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleIamV1Policy>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns permissions that a caller has on the specified Project. There are no permissions required for making this API call.
		/// Run_projects_locations_services_testIamPermissions v2/{resource}:testIamPermissions
		/// </summary>
		/// <param name="resource">REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.</param>
		/// <returns>Successful response</returns>
		public async Task<GoogleIamV1TestIamPermissionsResponse> Run_projects_locations_services_testIamPermissionsAsync(string resource, GoogleIamV1TestIamPermissionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/"+ (resource==null? "" : System.Uri.EscapeDataString(resource))+":testIamPermissions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GoogleIamV1TestIamPermissionsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

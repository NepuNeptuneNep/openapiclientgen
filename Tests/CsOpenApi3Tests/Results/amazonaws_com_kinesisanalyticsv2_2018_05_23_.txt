//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddApplicationCloudWatchLoggingOptionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLoggingOptionDescription[] CloudWatchLoggingOptionDescriptions { get; set; }
	}
	
	/// <summary>
	/// Describes the Amazon CloudWatch logging option.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudWatchLoggingOptionDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CloudWatchLoggingOptionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogStreamARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleARN { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddApplicationCloudWatchLoggingOptionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLoggingOption CloudWatchLoggingOption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConditionalToken { get; set; }
	}
	
	/// <summary>
	/// Provides a description of Amazon CloudWatch logging options, including the log stream Amazon Resource Name (ARN). 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudWatchLoggingOption
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string LogStreamARN { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceInUseException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidArgumentException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConcurrentModificationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidRequestException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidApplicationConfigurationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddApplicationInputResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InputDescription[] InputDescriptions { get; set; }
	}
	
	/// <summary>
	/// Describes the application input configuration for a SQL-based Kinesis Data Analytics application. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InputId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NamePrefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] InAppStreamNames { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InputProcessingConfigurationDescription InputProcessingConfigurationDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisStreamsInputDescription KinesisStreamsInputDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseInputDescription KinesisFirehoseInputDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SourceSchema InputSchema { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InputParallelism InputParallelism { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InputStartingPositionConfiguration InputStartingPositionConfiguration { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, provides the configuration information about an input processor. Currently, the only input processor available is <a href="https://docs.aws.amazon.com/lambda/">Amazon Lambda</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputProcessingConfigurationDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InputLambdaProcessorDescription InputLambdaProcessorDescription { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, an object that contains the Amazon Resource Name (ARN) of the Amazon Lambda function that is used to preprocess records in the stream.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputLambdaProcessorDescription
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleARN { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, describes the Kinesis data stream that is configured as the streaming source in the application input configuration. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KinesisStreamsInputDescription
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleARN { get; set; }
	}
	
	/// <summary>
	/// Describes the Amazon Kinesis Data Firehose delivery stream that is configured as the streaming source in the application input configuration. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KinesisFirehoseInputDescription
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleARN { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SourceSchema
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RecordFormat RecordFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecordEncoding { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RecordColumn[] RecordColumns { get; set; }
	}
	
	/// <summary>
	///  For a SQL-based Kinesis Data Analytics application, describes the record format and relevant mapping information that should be applied to schematize the records on the stream. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecordFormat
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RecordFormatType RecordFormatType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MappingParameters MappingParameters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RecordFormatType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JSON = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CSV = 1,
	}
	
	/// <summary>
	/// When you configure a SQL-based Kinesis Data Analytics application's input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MappingParameters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public JSONMappingParameters JSONMappingParameters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CSVMappingParameters CSVMappingParameters { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, provides additional mapping information when JSON is the record format on the streaming source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class JSONMappingParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RecordRowPath { get; set; }
	}
	
	/// <summary>
	/// <p>For a SQL-based Kinesis Data Analytics application, provides additional mapping information when the record format uses delimiters, such as CSV. For example, the following sample records use CSV format, where the records use the <i>'\n'</i> as the row delimiter and a comma (",") as the column delimiter: </p> <p> <code>"name1", "address1"</code> </p> <p> <code>"name2", "address2"</code> </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CSVMappingParameters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RecordRowDelimiter { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RecordColumnDelimiter { get; set; }
	}
	
	/// <summary>
	/// <p>For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.</p> <p>Also used to describe the format of the reference data source.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RecordColumn
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Mapping { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SqlType { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, describes the number of in-application streams to create for a given streaming source. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputParallelism
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Count { get; set; }
	}
	
	/// <summary>
	/// Describes the point at which the application reads from the streaming source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputStartingPositionConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InputStartingPosition InputStartingPosition { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum InputStartingPosition
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRIM_HORIZON = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LAST_STOPPED_POINT = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddApplicationInputRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Input Input { get; set; }
	}
	
	/// <summary>
	/// When you configure the application input for a SQL-based Kinesis Data Analytics application, you specify the streaming source, the in-application stream name that is created, and the mapping between the two. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Input
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string NamePrefix { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InputProcessingConfiguration InputProcessingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisStreamsInput KinesisStreamsInput { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseInput KinesisFirehoseInput { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InputParallelism InputParallelism { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SourceSchema InputSchema { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, describes a processor that is used to preprocess the records in the stream before being processed by your application code. Currently, the only input processor available is <a href="https://docs.aws.amazon.com/lambda/">Amazon Lambda</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputProcessingConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputLambdaProcessor InputLambdaProcessor { get; set; }
	}
	
	/// <summary>
	/// An object that contains the Amazon Resource Name (ARN) of the Amazon Lambda function that is used to preprocess records in the stream in a SQL-based Kinesis Data Analytics application. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputLambdaProcessor
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
	}
	
	/// <summary>
	///  Identifies a Kinesis data stream as the streaming source. You provide the stream's Amazon Resource Name (ARN).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KinesisStreamsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, identifies a Kinesis Data Firehose delivery stream as the streaming source. You provide the delivery stream's Amazon Resource Name (ARN).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KinesisFirehoseInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CodeValidationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddApplicationInputProcessingConfigurationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string InputId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InputProcessingConfigurationDescription InputProcessingConfigurationDescription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddApplicationInputProcessingConfigurationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InputId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputProcessingConfiguration InputProcessingConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddApplicationOutputResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutputDescription[] OutputDescriptions { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, describes the application output configuration, which includes the in-application stream name and the destination where the stream data is written. The destination can be a Kinesis data stream or a Kinesis Data Firehose delivery stream. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OutputDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string OutputId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisStreamsOutputDescription KinesisStreamsOutputDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseOutputDescription KinesisFirehoseOutputDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LambdaOutputDescription LambdaOutputDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DestinationSchema DestinationSchema { get; set; }
	}
	
	/// <summary>
	/// For an SQL-based Kinesis Data Analytics application's output, describes the Kinesis data stream that is configured as its destination. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KinesisStreamsOutputDescription
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleARN { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application's output, describes the Kinesis Data Firehose delivery stream that is configured as its destination.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KinesisFirehoseOutputDescription
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleARN { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application's output, describes the Amazon Lambda function that is configured as its destination. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LambdaOutputDescription
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RoleARN { get; set; }
	}
	
	/// <summary>
	/// Describes the data format when records are written to the destination in a SQL-based Kinesis Data Analytics application. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DestinationSchema
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RecordFormatType RecordFormatType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddApplicationOutputRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Output Output { get; set; }
	}
	
	/// <summary>
	/// <p> Describes a SQL-based Kinesis Data Analytics application's output configuration, in which you identify an in-application stream and a destination where you want the in-application stream data to be written. The destination can be a Kinesis data stream or a Kinesis Data Firehose delivery stream. </p> <p/>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Output
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisStreamsOutput KinesisStreamsOutput { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseOutput KinesisFirehoseOutput { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LambdaOutput LambdaOutput { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DestinationSchema DestinationSchema { get; set; }
	}
	
	/// <summary>
	/// When you configure a SQL-based Kinesis Data Analytics application's output, identifies a Kinesis data stream as the destination. You provide the stream Amazon Resource Name (ARN). 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KinesisStreamsOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, when configuring application output, identifies a Kinesis Data Firehose delivery stream as the destination. You provide the stream Amazon Resource Name (ARN) of the delivery stream. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KinesisFirehoseOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
	}
	
	/// <summary>
	/// When you configure a SQL-based Kinesis Data Analytics application's output, identifies an Amazon Lambda function as the destination. You provide the function Amazon Resource Name (ARN) of the Lambda function. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LambdaOutput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddApplicationReferenceDataSourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceDataSourceDescription[] ReferenceDataSourceDescriptions { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, describes the reference data source configured for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReferenceDataSourceDescription
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReferenceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TableName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3ReferenceDataSourceDescription S3ReferenceDataSourceDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SourceSchema ReferenceSchema { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, provides the bucket name and object key name that stores the reference data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3ReferenceDataSourceDescription
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BucketARN { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FileKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReferenceRoleARN { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddApplicationReferenceDataSourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ReferenceDataSource ReferenceDataSource { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, describes the reference data source by providing the source information (Amazon S3 bucket name and object key name), the resulting in-application table name that is created, and the necessary schema to map the data elements in the Amazon S3 object to the in-application table.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReferenceDataSource
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TableName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3ReferenceDataSource S3ReferenceDataSource { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SourceSchema ReferenceSchema { get; set; }
	}
	
	/// <summary>
	/// <p>For a SQL-based Kinesis Data Analytics application, identifies the Amazon S3 bucket and object that contains the reference data.</p> <p>A Kinesis Data Analytics application loads reference data only once. If the data changes, you call the <a>UpdateApplication</a> operation to trigger reloading of data into your application. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3ReferenceDataSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BucketARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FileKey { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddApplicationVpcConfigurationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcConfigurationDescription VpcConfigurationDescription { get; set; }
	}
	
	/// <summary>
	/// Describes the parameters of a VPC used by the application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VpcConfigurationDescription
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VpcConfigurationId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VpcId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AddApplicationVpcConfigurationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VpcConfiguration VpcConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConditionalToken { get; set; }
	}
	
	/// <summary>
	/// Describes the parameters of a VPC used by the application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VpcConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateApplicationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationDetail ApplicationDetail { get; set; }
	}
	
	/// <summary>
	/// Describes the application, including the application Amazon Resource Name (ARN), status, latest version, and input and output configurations.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationDetail
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RuntimeEnvironment RuntimeEnvironment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServiceExecutionRole { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationStatus ApplicationStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ApplicationVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreateTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdateTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationConfigurationDescription ApplicationConfigurationDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLoggingOptionDescription[] CloudWatchLoggingOptionDescriptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationMaintenanceConfigurationDescription ApplicationMaintenanceConfigurationDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApplicationVersionUpdatedFrom { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApplicationVersionRolledBackFrom { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConditionalToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApplicationVersionRolledBackTo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationMode ApplicationMode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RuntimeEnvironment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SQL-1_0")]
		SQLMinus1_0 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FLINK-1_6")]
		FLINKMinus1_6 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FLINK-1_8")]
		FLINKMinus1_8 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ZEPPELIN-FLINK-1_0")]
		ZEPPELINMinusFLINKMinus1_0 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FLINK-1_11")]
		FLINKMinus1_11 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FLINK-1_13")]
		FLINKMinus1_13 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ZEPPELIN-FLINK-2_0")]
		ZEPPELINMinusFLINKMinus2_0 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FLINK-1_15")]
		FLINKMinus1_15 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ZEPPELIN-FLINK-3_0")]
		ZEPPELINMinusFLINKMinus3_0 = 8,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ApplicationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STARTING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STOPPING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RUNNING = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UPDATING = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AUTOSCALING = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FORCE_STOPPING = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLING_BACK = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAINTENANCE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ROLLED_BACK = 10,
	}
	
	/// <summary>
	/// Describes details about the application code and starting parameters for a Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationConfigurationDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SqlApplicationConfigurationDescription SqlApplicationConfigurationDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationCodeConfigurationDescription ApplicationCodeConfigurationDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RunConfigurationDescription RunConfigurationDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FlinkApplicationConfigurationDescription FlinkApplicationConfigurationDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentPropertyDescriptions EnvironmentPropertyDescriptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationSnapshotConfigurationDescription ApplicationSnapshotConfigurationDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcConfigurationDescription[] VpcConfigurationDescriptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ZeppelinApplicationConfigurationDescription ZeppelinApplicationConfigurationDescription { get; set; }
	}
	
	/// <summary>
	/// Describes the inputs, outputs, and reference data sources for a SQL-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SqlApplicationConfigurationDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InputDescription[] InputDescriptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutputDescription[] OutputDescriptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceDataSourceDescription[] ReferenceDataSourceDescriptions { get; set; }
	}
	
	/// <summary>
	/// Describes code configuration for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationCodeConfigurationDescription
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CodeContentType CodeContentType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CodeContentDescription CodeContentDescription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum CodeContentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PLAINTEXT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZIPFILE = 1,
	}
	
	/// <summary>
	/// Describes details about the code of a Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CodeContentDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TextContent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CodeMD5 { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CodeSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3ApplicationCodeLocationDescription S3ApplicationCodeLocationDescription { get; set; }
	}
	
	/// <summary>
	/// Describes the location of an application's code stored in an S3 bucket.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3ApplicationCodeLocationDescription
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BucketARN { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FileKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ObjectVersion { get; set; }
	}
	
	/// <summary>
	/// Describes the starting properties for a Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RunConfigurationDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationRestoreConfiguration ApplicationRestoreConfigurationDescription { get; set; }
		
		/// <summary>
		/// Describes the starting parameters for a Flink-based Kinesis Data Analytics application.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public FlinkRunConfiguration FlinkRunConfigurationDescription { get; set; }
	}
	
	/// <summary>
	/// Specifies the method and snapshot to use when restarting an application using previously saved application state.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationRestoreConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationRestoreType ApplicationRestoreType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ApplicationRestoreType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SKIP_RESTORE_FROM_SNAPSHOT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESTORE_FROM_LATEST_SNAPSHOT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESTORE_FROM_CUSTOM_SNAPSHOT = 2,
	}
	
	/// <summary>
	/// Describes the starting parameters for a Flink-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FlinkRunConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AllowNonRestoredState { get; set; }
	}
	
	/// <summary>
	/// Describes configuration parameters for a Flink-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FlinkApplicationConfigurationDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CheckpointConfigurationDescription CheckpointConfigurationDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MonitoringConfigurationDescription MonitoringConfigurationDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParallelismConfigurationDescription ParallelismConfigurationDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string JobPlanDescription { get; set; }
	}
	
	/// <summary>
	/// Describes checkpointing parameters for a Flink-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CheckpointConfigurationDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConfigurationType ConfigurationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CheckpointingEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CheckpointInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinPauseBetweenCheckpoints { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ConfigurationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEFAULT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CUSTOM = 1,
	}
	
	/// <summary>
	/// Describes configuration parameters for CloudWatch logging for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MonitoringConfigurationDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConfigurationType ConfigurationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MetricsLevel MetricsLevel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogLevel LogLevel { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MetricsLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		APPLICATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TASK = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPERATOR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PARALLELISM = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum LogLevel
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INFO = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WARN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ERROR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEBUG = 3,
	}
	
	/// <summary>
	/// Describes parameters for how a Flink-based Kinesis Data Analytics application executes multiple tasks simultaneously.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParallelismConfigurationDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConfigurationType ConfigurationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Parallelism { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ParallelismPerKPU { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrentParallelism { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoScalingEnabled { get; set; }
	}
	
	/// <summary>
	/// Describes the execution properties for an Apache Flink runtime.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EnvironmentPropertyDescriptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PropertyGroup[] PropertyGroupDescriptions { get; set; }
	}
	
	/// <summary>
	/// Property key-value pairs passed into an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PropertyGroup
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PropertyGroupId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PropertyMap PropertyMap { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PropertyMap
	{
	}
	
	/// <summary>
	/// Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationSnapshotConfigurationDescription
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool SnapshotsEnabled { get; set; }
	}
	
	/// <summary>
	/// The configuration of a Kinesis Data Analytics Studio notebook.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ZeppelinApplicationConfigurationDescription
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ZeppelinMonitoringConfigurationDescription MonitoringConfigurationDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CatalogConfigurationDescription CatalogConfigurationDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeployAsApplicationConfigurationDescription DeployAsApplicationConfigurationDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomArtifactConfigurationDescription[] CustomArtifactsConfigurationDescription { get; set; }
	}
	
	/// <summary>
	/// The monitoring configuration for Apache Zeppelin within a Kinesis Data Analytics Studio notebook.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ZeppelinMonitoringConfigurationDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LogLevel LogLevel { get; set; }
	}
	
	/// <summary>
	/// The configuration parameters for the default Amazon Glue database. You use this database for Apache Flink SQL queries and table API transforms that you write in a Kinesis Data Analytics Studio notebook.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CatalogConfigurationDescription
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GlueDataCatalogConfigurationDescription GlueDataCatalogConfigurationDescription { get; set; }
	}
	
	/// <summary>
	/// The configuration of the Glue Data Catalog that you use for Apache Flink SQL queries and table API transforms that you write in an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GlueDataCatalogConfigurationDescription
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseARN { get; set; }
	}
	
	/// <summary>
	/// The configuration information required to deploy an Amazon Data Analytics Studio notebook as an application with durable state.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeployAsApplicationConfigurationDescription
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3ContentBaseLocationDescription S3ContentLocationDescription { get; set; }
	}
	
	/// <summary>
	/// The description of the S3 base location that holds the application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3ContentBaseLocationDescription
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BucketARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BasePath { get; set; }
	}
	
	/// <summary>
	/// Specifies a dependency JAR or a JAR of user-defined functions.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomArtifactConfigurationDescription
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ArtifactType ArtifactType { get; set; }
		
		/// <summary>
		/// For a Kinesis Data Analytics application provides a description of an Amazon S3 object, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3ContentLocation S3ContentLocationDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MavenReference MavenReferenceDescription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ArtifactType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UDF = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DEPENDENCY_JAR = 1,
	}
	
	/// <summary>
	/// For a Kinesis Data Analytics application provides a description of an Amazon S3 object, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3ContentLocation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BucketARN { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FileKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ObjectVersion { get; set; }
	}
	
	/// <summary>
	/// The information required to specify a Maven reference. You can use Maven references to specify dependency JAR files.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MavenReference
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string GroupId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ArtifactId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Version { get; set; }
	}
	
	/// <summary>
	/// The details of the maintenance configuration for the application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationMaintenanceConfigurationDescription
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationMaintenanceWindowStartTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationMaintenanceWindowEndTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ApplicationMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STREAMING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERACTIVE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateApplicationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationDescription { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RuntimeEnvironment RuntimeEnvironment { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ServiceExecutionRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationConfiguration ApplicationConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLoggingOption[] CloudWatchLoggingOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationMode ApplicationMode { get; set; }
	}
	
	/// <summary>
	/// Specifies the creation parameters for a Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SqlApplicationConfiguration SqlApplicationConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FlinkApplicationConfiguration FlinkApplicationConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentProperties EnvironmentProperties { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationCodeConfiguration ApplicationCodeConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationSnapshotConfiguration ApplicationSnapshotConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcConfiguration[] VpcConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ZeppelinApplicationConfiguration ZeppelinApplicationConfiguration { get; set; }
	}
	
	/// <summary>
	/// Describes the inputs, outputs, and reference data sources for a SQL-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SqlApplicationConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Input[] Inputs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Output[] Outputs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceDataSource[] ReferenceDataSources { get; set; }
	}
	
	/// <summary>
	/// Describes configuration parameters for a Flink-based Kinesis Data Analytics application or a Studio notebook.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FlinkApplicationConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CheckpointConfiguration CheckpointConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MonitoringConfiguration MonitoringConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParallelismConfiguration ParallelismConfiguration { get; set; }
	}
	
	/// <summary>
	/// Describes an application's checkpointing configuration. Checkpointing is the process of persisting application state for fault tolerance. For more information, see <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.8/concepts/programming-model.html#checkpoints-for-fault-tolerance"> Checkpoints for Fault Tolerance</a> in the <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.8/">Apache Flink Documentation</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CheckpointConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ConfigurationType ConfigurationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CheckpointingEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CheckpointInterval { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinPauseBetweenCheckpoints { get; set; }
	}
	
	/// <summary>
	/// Describes configuration parameters for Amazon CloudWatch logging for an application. For more information about CloudWatch logging, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/monitoring-overview.html">Monitoring</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MonitoringConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ConfigurationType ConfigurationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MetricsLevel MetricsLevel { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogLevel LogLevel { get; set; }
	}
	
	/// <summary>
	/// Describes parameters for how a Flink-based Kinesis Data Analytics application executes multiple tasks simultaneously. For more information about parallelism, see <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.8/dev/parallel.html">Parallel Execution</a> in the <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.8/">Apache Flink Documentation</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParallelismConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ConfigurationType ConfigurationType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Parallelism { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ParallelismPerKPU { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoScalingEnabled { get; set; }
	}
	
	/// <summary>
	/// Describes execution properties for a Flink-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EnvironmentProperties
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PropertyGroup[] PropertyGroups { get; set; }
	}
	
	/// <summary>
	/// Describes code configuration for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationCodeConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CodeContent CodeContent { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CodeContentType CodeContentType { get; set; }
	}
	
	/// <summary>
	/// Specifies either the application code, or the location of the application code, for a Flink-based Kinesis Data Analytics application. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CodeContent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TextContent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ZipFileContent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3ContentLocation S3ContentLocation { get; set; }
	}
	
	/// <summary>
	/// Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationSnapshotConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool SnapshotsEnabled { get; set; }
	}
	
	/// <summary>
	/// The configuration of a Kinesis Data Analytics Studio notebook.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ZeppelinApplicationConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ZeppelinMonitoringConfiguration MonitoringConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CatalogConfiguration CatalogConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeployAsApplicationConfiguration DeployAsApplicationConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomArtifactConfiguration[] CustomArtifactsConfiguration { get; set; }
	}
	
	/// <summary>
	/// Describes configuration parameters for Amazon CloudWatch logging for a Kinesis Data Analytics Studio notebook. For more information about CloudWatch logging, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/monitoring-overview.html">Monitoring</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ZeppelinMonitoringConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LogLevel LogLevel { get; set; }
	}
	
	/// <summary>
	/// The configuration parameters for the default Amazon Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CatalogConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GlueDataCatalogConfiguration GlueDataCatalogConfiguration { get; set; }
	}
	
	/// <summary>
	/// The configuration of the Glue Data Catalog that you use for Apache Flink SQL queries and table API transforms that you write in an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GlueDataCatalogConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseARN { get; set; }
	}
	
	/// <summary>
	/// The information required to deploy a Kinesis Data Analytics Studio notebook as an application with durable state.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeployAsApplicationConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public S3ContentBaseLocation S3ContentLocation { get; set; }
	}
	
	/// <summary>
	/// The S3 bucket that holds the application information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3ContentBaseLocation
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BucketARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BasePath { get; set; }
	}
	
	/// <summary>
	/// Specifies dependency JARs, as well as JAR files that contain user-defined functions (UDF).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomArtifactConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ArtifactType ArtifactType { get; set; }
		
		/// <summary>
		/// For a Kinesis Data Analytics application provides a description of an Amazon S3 object, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public S3ContentLocation S3ContentLocation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MavenReference MavenReference { get; set; }
	}
	
	/// <summary>
	/// A key-value pair (the value is optional) that you can define and assign to Amazon resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html">Using Tagging</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tag
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LimitExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TooManyTagsException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnsupportedOperationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateApplicationPresignedUrlResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AuthorizedUrl { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateApplicationPresignedUrlRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UrlType UrlType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SessionExpirationDurationInSeconds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum UrlType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FLINK_DASHBOARD_URL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ZEPPELIN_UI_URL = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateApplicationSnapshotResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateApplicationSnapshotRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApplicationResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApplicationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreateTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApplicationCloudWatchLoggingOptionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLoggingOptionDescription[] CloudWatchLoggingOptionDescriptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApplicationCloudWatchLoggingOptionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CloudWatchLoggingOptionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConditionalToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApplicationInputProcessingConfigurationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApplicationInputProcessingConfigurationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InputId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApplicationOutputResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApplicationOutputRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OutputId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApplicationReferenceDataSourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApplicationReferenceDataSourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReferenceId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApplicationSnapshotResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApplicationSnapshotRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset SnapshotCreationTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApplicationVpcConfigurationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApplicationVersionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteApplicationVpcConfigurationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrentApplicationVersionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VpcConfigurationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConditionalToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeApplicationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationDetail ApplicationDetail { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeApplicationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeAdditionalDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeApplicationSnapshotResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SnapshotDetails SnapshotDetails { get; set; }
	}
	
	/// <summary>
	/// Provides details about a snapshot of application state.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnapshotDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SnapshotStatus SnapshotStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ApplicationVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset SnapshotCreationTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SnapshotStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		READY = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeApplicationSnapshotRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SnapshotName { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeApplicationVersionResponse
	{
		
		/// <summary>
		/// Describes the application, including the application Amazon Resource Name (ARN), status, latest version, and input and output configurations.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ApplicationDetail ApplicationVersionDetail { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeApplicationVersionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ApplicationVersionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DiscoverInputSchemaResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SourceSchema InputSchema { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[][] ParsedInputRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ProcessedInputRecords { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] RawInputRecords { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DiscoverInputSchemaRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ServiceExecutionRole { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InputStartingPositionConfiguration InputStartingPositionConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3Configuration S3Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InputProcessingConfiguration InputProcessingConfiguration { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, provides a description of an Amazon S3 data source, including the Amazon Resource Name (ARN) of the S3 bucket and the name of the Amazon S3 object that contains the data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3Configuration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BucketARN { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FileKey { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnableToDetectSchemaException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ResourceProvisionedThroughputExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceUnavailableException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListApplicationSnapshotsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SnapshotDetails[] SnapshotSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListApplicationSnapshotsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Limit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListApplicationVersionsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationVersionSummary[] ApplicationVersionSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The summary of the application version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationVersionSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ApplicationVersionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationStatus ApplicationStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListApplicationVersionsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Limit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListApplicationsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationSummary[] ApplicationSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Provides application summary information, including the application Amazon Resource Name (ARN), name, and status.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationARN { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationStatus ApplicationStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ApplicationVersionId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public RuntimeEnvironment RuntimeEnvironment { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationMode ApplicationMode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListApplicationsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Limit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RollbackApplicationResponse
	{
		
		/// <summary>
		/// Describes the application, including the application Amazon Resource Name (ARN), status, latest version, and input and output configurations.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationDetail ApplicationDetail { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RollbackApplicationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int CurrentApplicationVersionId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartApplicationResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StartApplicationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RunConfiguration RunConfiguration { get; set; }
	}
	
	/// <summary>
	/// Describes the starting parameters for an Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RunConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FlinkRunConfiguration FlinkRunConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SqlRunConfiguration[] SqlRunConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationRestoreConfiguration ApplicationRestoreConfiguration { get; set; }
	}
	
	/// <summary>
	/// Describes the starting parameters for a SQL-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SqlRunConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InputId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputStartingPositionConfiguration InputStartingPositionConfiguration { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopApplicationResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StopApplicationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Force { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] TagKeys { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateApplicationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationDetail ApplicationDetail { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateApplicationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CurrentApplicationVersionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationConfigurationUpdate ApplicationConfigurationUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ServiceExecutionRoleUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RunConfigurationUpdate RunConfigurationUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchLoggingOptionUpdate[] CloudWatchLoggingOptionUpdates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConditionalToken { get; set; }
	}
	
	/// <summary>
	/// Describes updates to an application's configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationConfigurationUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SqlApplicationConfigurationUpdate SqlApplicationConfigurationUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationCodeConfigurationUpdate ApplicationCodeConfigurationUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FlinkApplicationConfigurationUpdate FlinkApplicationConfigurationUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EnvironmentPropertyUpdates EnvironmentPropertyUpdates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationSnapshotConfigurationUpdate ApplicationSnapshotConfigurationUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VpcConfigurationUpdate[] VpcConfigurationUpdates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ZeppelinApplicationConfigurationUpdate ZeppelinApplicationConfigurationUpdate { get; set; }
	}
	
	/// <summary>
	/// Describes updates to the input streams, destination streams, and reference data sources for a SQL-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SqlApplicationConfigurationUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InputUpdate[] InputUpdates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public OutputUpdate[] OutputUpdates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReferenceDataSourceUpdate[] ReferenceDataSourceUpdates { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, describes updates to a specific input configuration (identified by the <code>InputId</code> of an application). 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InputId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NamePrefixUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InputProcessingConfigurationUpdate InputProcessingConfigurationUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisStreamsInputUpdate KinesisStreamsInputUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseInputUpdate KinesisFirehoseInputUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InputSchemaUpdate InputSchemaUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InputParallelismUpdate InputParallelismUpdate { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, describes updates to an <a>InputProcessingConfiguration</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputProcessingConfigurationUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InputLambdaProcessorUpdate InputLambdaProcessorUpdate { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, represents an update to the <a>InputLambdaProcessor</a> that is used to preprocess the records in the stream.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputLambdaProcessorUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARNUpdate { get; set; }
	}
	
	/// <summary>
	/// When you update the input configuration for a SQL-based Kinesis Data Analytics application, provides information about a Kinesis stream as the streaming source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KinesisStreamsInputUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARNUpdate { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, when updating application input configuration, provides information about a Kinesis Data Firehose delivery stream as the streaming source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KinesisFirehoseInputUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARNUpdate { get; set; }
	}
	
	/// <summary>
	/// Describes updates for an SQL-based Kinesis Data Analytics application's input schema.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputSchemaUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RecordFormat RecordFormatUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string RecordEncodingUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecordColumn[] RecordColumnUpdates { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, provides updates to the parallelism count.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InputParallelismUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int CountUpdate { get; set; }
	}
	
	/// <summary>
	///  For a SQL-based Kinesis Data Analytics application, describes updates to the output configuration identified by the <code>OutputId</code>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OutputUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string OutputId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NameUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisStreamsOutputUpdate KinesisStreamsOutputUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseOutputUpdate KinesisFirehoseOutputUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LambdaOutputUpdate LambdaOutputUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DestinationSchema DestinationSchemaUpdate { get; set; }
	}
	
	/// <summary>
	/// When you update a SQL-based Kinesis Data Analytics application's output configuration using the <a>UpdateApplication</a> operation, provides information about a Kinesis data stream that is configured as the destination.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KinesisStreamsOutputUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARNUpdate { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, when updating an output configuration using the <a>UpdateApplication</a> operation, provides information about a Kinesis Data Firehose delivery stream that is configured as the destination.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KinesisFirehoseOutputUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARNUpdate { get; set; }
	}
	
	/// <summary>
	/// When you update an SQL-based Kinesis Data Analytics application's output configuration using the <a>UpdateApplication</a> operation, provides information about an Amazon Lambda function that is configured as the destination.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LambdaOutputUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARNUpdate { get; set; }
	}
	
	/// <summary>
	/// When you update a reference data source configuration for a SQL-based Kinesis Data Analytics application, this object provides all the updated values (such as the source bucket name and object key name), the in-application table name that is created, and updated mapping information that maps the data in the Amazon S3 object to the in-application reference table that is created.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReferenceDataSourceUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReferenceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TableNameUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3ReferenceDataSourceUpdate S3ReferenceDataSourceUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SourceSchema ReferenceSchemaUpdate { get; set; }
	}
	
	/// <summary>
	/// For a SQL-based Kinesis Data Analytics application, describes the Amazon S3 bucket name and object key name for an in-application reference table. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3ReferenceDataSourceUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BucketARNUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FileKeyUpdate { get; set; }
	}
	
	/// <summary>
	/// Describes code configuration updates for an application. This is supported for a Flink-based Kinesis Data Analytics application or a SQL-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationCodeConfigurationUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CodeContentType CodeContentTypeUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CodeContentUpdate CodeContentUpdate { get; set; }
	}
	
	/// <summary>
	/// Describes an update to the code of an application. Not supported for Apache Zeppelin.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CodeContentUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TextContentUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ZipFileContentUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public S3ContentLocationUpdate S3ContentLocationUpdate { get; set; }
	}
	
	/// <summary>
	/// Describes an update for the Amazon S3 code content location for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3ContentLocationUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BucketARNUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FileKeyUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ObjectVersionUpdate { get; set; }
	}
	
	/// <summary>
	/// Describes updates to the configuration parameters for a Flink-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FlinkApplicationConfigurationUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CheckpointConfigurationUpdate CheckpointConfigurationUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MonitoringConfigurationUpdate MonitoringConfigurationUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ParallelismConfigurationUpdate ParallelismConfigurationUpdate { get; set; }
	}
	
	/// <summary>
	/// Describes updates to the checkpointing parameters for a Flink-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CheckpointConfigurationUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConfigurationType ConfigurationTypeUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> CheckpointingEnabledUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CheckpointIntervalUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinPauseBetweenCheckpointsUpdate { get; set; }
	}
	
	/// <summary>
	/// Describes updates to configuration parameters for Amazon CloudWatch logging for an application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MonitoringConfigurationUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConfigurationType ConfigurationTypeUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MetricsLevel MetricsLevelUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogLevel LogLevelUpdate { get; set; }
	}
	
	/// <summary>
	/// Describes updates to parameters for how an application executes multiple tasks simultaneously.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ParallelismConfigurationUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ConfigurationType ConfigurationTypeUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ParallelismUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ParallelismPerKPUUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoScalingEnabledUpdate { get; set; }
	}
	
	/// <summary>
	/// Describes updates to the execution property groups for a Flink-based Kinesis Data Analytics application or a Studio notebook.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EnvironmentPropertyUpdates
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PropertyGroup[] PropertyGroups { get; set; }
	}
	
	/// <summary>
	/// Describes updates to whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationSnapshotConfigurationUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool SnapshotsEnabledUpdate { get; set; }
	}
	
	/// <summary>
	/// Describes updates to the VPC configuration used by the application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VpcConfigurationUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string VpcConfigurationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SubnetIdUpdates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SecurityGroupIdUpdates { get; set; }
	}
	
	/// <summary>
	/// Updates to the configuration of Kinesis Data Analytics Studio notebook.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ZeppelinApplicationConfigurationUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ZeppelinMonitoringConfigurationUpdate MonitoringConfigurationUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CatalogConfigurationUpdate CatalogConfigurationUpdate { get; set; }
		
		/// <summary>
		/// Updates to the configuration information required to deploy an Amazon Data Analytics Studio notebook as an application with durable state.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DeployAsApplicationConfigurationUpdate DeployAsApplicationConfigurationUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomArtifactConfiguration[] CustomArtifactsConfigurationUpdate { get; set; }
	}
	
	/// <summary>
	/// Updates to the monitoring configuration for Apache Zeppelin within a Kinesis Data Analytics Studio notebook.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ZeppelinMonitoringConfigurationUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public LogLevel LogLevelUpdate { get; set; }
	}
	
	/// <summary>
	/// Updates to the configuration parameters for the default Amazon Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CatalogConfigurationUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public GlueDataCatalogConfigurationUpdate GlueDataCatalogConfigurationUpdate { get; set; }
	}
	
	/// <summary>
	/// Updates to the configuration of the Glue Data Catalog that you use for SQL queries that you write in a Kinesis Data Analytics Studio notebook.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GlueDataCatalogConfigurationUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DatabaseARNUpdate { get; set; }
	}
	
	/// <summary>
	/// Updates to the configuration information required to deploy an Amazon Data Analytics Studio notebook as an application with durable state.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeployAsApplicationConfigurationUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public S3ContentBaseLocationUpdate S3ContentLocationUpdate { get; set; }
	}
	
	/// <summary>
	/// The information required to update the S3 base location that holds the application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class S3ContentBaseLocationUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BucketARNUpdate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BasePathUpdate { get; set; }
	}
	
	/// <summary>
	/// Describes the updates to the starting parameters for a Kinesis Data Analytics application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RunConfigurationUpdate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FlinkRunConfiguration FlinkRunConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationRestoreConfiguration ApplicationRestoreConfiguration { get; set; }
	}
	
	/// <summary>
	/// Describes the Amazon CloudWatch logging option updates.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudWatchLoggingOptionUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CloudWatchLoggingOptionId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogStreamARNUpdate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateApplicationMaintenanceConfigurationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationARN { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ApplicationMaintenanceConfigurationDescription ApplicationMaintenanceConfigurationDescription { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateApplicationMaintenanceConfigurationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ApplicationMaintenanceConfigurationUpdate ApplicationMaintenanceConfigurationUpdate { get; set; }
	}
	
	/// <summary>
	/// Describes the updated maintenance configuration for the application.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ApplicationMaintenanceConfigurationUpdate
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationMaintenanceWindowStartTimeUpdate { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Adds an Amazon CloudWatch log stream to monitor application configuration errors.
		/// AddApplicationCloudWatchLoggingOption #X-Amz-Target=KinesisAnalytics_20180523.AddApplicationCloudWatchLoggingOption
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddApplicationCloudWatchLoggingOptionResponse> AddApplicationCloudWatchLoggingOptionAsync(AddApplicationCloudWatchLoggingOptionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationCloudWatchLoggingOption";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AddApplicationCloudWatchLoggingOptionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p> Adds a streaming source to your SQL-based Kinesis Data Analytics application. </p> <p>You can add a streaming source when you create an application, or you can use this operation to add a streaming source after you create an application. For more information, see <a>CreateApplication</a>.</p> <p>Any configuration update, including adding a streaming source using this operation, results in a new version of the application. You can use the <a>DescribeApplication</a> operation to find the current application version. </p>
		/// AddApplicationInput #X-Amz-Target=KinesisAnalytics_20180523.AddApplicationInput
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddApplicationInputResponse> AddApplicationInputAsync(AddApplicationInputRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationInput";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AddApplicationInputResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds an <a>InputProcessingConfiguration</a> to a SQL-based Kinesis Data Analytics application. An input processor pre-processes records on the input stream before the application's SQL code executes. Currently, the only input processor available is <a href="https://docs.aws.amazon.com/lambda/">Amazon Lambda</a>.
		/// AddApplicationInputProcessingConfiguration #X-Amz-Target=KinesisAnalytics_20180523.AddApplicationInputProcessingConfiguration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddApplicationInputProcessingConfigurationResponse> AddApplicationInputProcessingConfigurationAsync(AddApplicationInputProcessingConfigurationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationInputProcessingConfiguration";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AddApplicationInputProcessingConfigurationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Adds an external destination to your SQL-based Kinesis Data Analytics application.</p> <p>If you want Kinesis Data Analytics to deliver data from an in-application stream within your application to an external destination (such as an Kinesis data stream, a Kinesis Data Firehose delivery stream, or an Amazon Lambda function), you add the relevant configuration to your application using this operation. You can configure one or more outputs for your application. Each output configuration maps an in-application stream and an external destination.</p> <p> You can use one of the output configurations to deliver data from your in-application error stream to an external destination so that you can analyze the errors. </p> <p> Any configuration update, including adding a streaming source using this operation, results in a new version of the application. You can use the <a>DescribeApplication</a> operation to find the current application version.</p>
		/// AddApplicationOutput #X-Amz-Target=KinesisAnalytics_20180523.AddApplicationOutput
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddApplicationOutputResponse> AddApplicationOutputAsync(AddApplicationOutputRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationOutput";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AddApplicationOutputResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Adds a reference data source to an existing SQL-based Kinesis Data Analytics application.</p> <p>Kinesis Data Analytics reads reference data (that is, an Amazon S3 object) and creates an in-application table within your application. In the request, you provide the source (S3 bucket name and object key name), name of the in-application table to create, and the necessary mapping information that describes how data in an Amazon S3 object maps to columns in the resulting in-application table.</p>
		/// AddApplicationReferenceDataSource #X-Amz-Target=KinesisAnalytics_20180523.AddApplicationReferenceDataSource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddApplicationReferenceDataSourceResponse> AddApplicationReferenceDataSourceAsync(AddApplicationReferenceDataSourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationReferenceDataSource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AddApplicationReferenceDataSourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Adds a Virtual Private Cloud (VPC) configuration to the application. Applications can use VPCs to store and access resources securely.</p> <p>Note the following about VPC configurations for Kinesis Data Analytics applications:</p> <ul> <li> <p>VPC configurations are not supported for SQL applications.</p> </li> <li> <p>When a VPC is added to a Kinesis Data Analytics application, the application can no longer be accessed from the Internet directly. To enable Internet access to the application, add an Internet gateway to your VPC.</p> </li> </ul>
		/// AddApplicationVpcConfiguration #X-Amz-Target=KinesisAnalytics_20180523.AddApplicationVpcConfiguration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddApplicationVpcConfigurationResponse> AddApplicationVpcConfigurationAsync(AddApplicationVpcConfigurationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.AddApplicationVpcConfiguration";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<AddApplicationVpcConfigurationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a Kinesis Data Analytics application. For information about creating a Kinesis Data Analytics application, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/getting-started.html">Creating an Application</a>.
		/// CreateApplication #X-Amz-Target=KinesisAnalytics_20180523.CreateApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateApplicationResponse> CreateApplicationAsync(CreateApplicationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.CreateApplication";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateApplicationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates and returns a URL that you can use to connect to an application's extension.</p> <p>The IAM role or user used to call this API defines the permissions to access the extension. After the presigned URL is created, no additional permission is required to access this URL. IAM authorization policies for this API are also enforced for every HTTP request that attempts to connect to the extension. </p> <p>You control the amount of time that the URL will be valid using the <code>SessionExpirationDurationInSeconds</code> parameter. If you do not provide this parameter, the returned URL is valid for twelve hours.</p> <note> <p>The URL that you get from a call to CreateApplicationPresignedUrl must be used within 3 minutes to be valid. If you first try to use the URL after the 3-minute limit expires, the service returns an HTTP 403 Forbidden error.</p> </note>
		/// CreateApplicationPresignedUrl #X-Amz-Target=KinesisAnalytics_20180523.CreateApplicationPresignedUrl
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateApplicationPresignedUrlResponse> CreateApplicationPresignedUrlAsync(CreateApplicationPresignedUrlRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.CreateApplicationPresignedUrl";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateApplicationPresignedUrlResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a snapshot of the application's state data.
		/// CreateApplicationSnapshot #X-Amz-Target=KinesisAnalytics_20180523.CreateApplicationSnapshot
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateApplicationSnapshotResponse> CreateApplicationSnapshotAsync(CreateApplicationSnapshotRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.CreateApplicationSnapshot";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateApplicationSnapshotResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the specified application. Kinesis Data Analytics halts application execution and deletes the application.
		/// DeleteApplication #X-Amz-Target=KinesisAnalytics_20180523.DeleteApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteApplicationResponse> DeleteApplicationAsync(DeleteApplicationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplication";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteApplicationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an Amazon CloudWatch log stream from an Kinesis Data Analytics application.
		/// DeleteApplicationCloudWatchLoggingOption #X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationCloudWatchLoggingOption
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteApplicationCloudWatchLoggingOptionResponse> DeleteApplicationCloudWatchLoggingOptionAsync(DeleteApplicationCloudWatchLoggingOptionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationCloudWatchLoggingOption";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteApplicationCloudWatchLoggingOptionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an <a>InputProcessingConfiguration</a> from an input.
		/// DeleteApplicationInputProcessingConfiguration #X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationInputProcessingConfiguration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteApplicationInputProcessingConfigurationResponse> DeleteApplicationInputProcessingConfigurationAsync(DeleteApplicationInputProcessingConfigurationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationInputProcessingConfiguration";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteApplicationInputProcessingConfigurationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes the output destination configuration from your SQL-based Kinesis Data Analytics application's configuration. Kinesis Data Analytics will no longer write data from the corresponding in-application stream to the external output destination.
		/// DeleteApplicationOutput #X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationOutput
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteApplicationOutputResponse> DeleteApplicationOutputAsync(DeleteApplicationOutputRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationOutput";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteApplicationOutputResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes a reference data source configuration from the specified SQL-based Kinesis Data Analytics application's configuration.</p> <p>If the application is running, Kinesis Data Analytics immediately removes the in-application table that you created using the <a>AddApplicationReferenceDataSource</a> operation. </p>
		/// DeleteApplicationReferenceDataSource #X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationReferenceDataSource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteApplicationReferenceDataSourceResponse> DeleteApplicationReferenceDataSourceAsync(DeleteApplicationReferenceDataSourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationReferenceDataSource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteApplicationReferenceDataSourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a snapshot of application state.
		/// DeleteApplicationSnapshot #X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationSnapshot
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteApplicationSnapshotResponse> DeleteApplicationSnapshotAsync(DeleteApplicationSnapshotRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationSnapshot";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteApplicationSnapshotResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes a VPC configuration from a Kinesis Data Analytics application.
		/// DeleteApplicationVpcConfiguration #X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationVpcConfiguration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteApplicationVpcConfigurationResponse> DeleteApplicationVpcConfigurationAsync(DeleteApplicationVpcConfigurationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.DeleteApplicationVpcConfiguration";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteApplicationVpcConfigurationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns information about a specific Kinesis Data Analytics application.</p> <p>If you want to retrieve a list of all applications in your account, use the <a>ListApplications</a> operation.</p>
		/// DescribeApplication #X-Amz-Target=KinesisAnalytics_20180523.DescribeApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeApplicationResponse> DescribeApplicationAsync(DescribeApplicationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.DescribeApplication";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeApplicationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns information about a snapshot of application state data.
		/// DescribeApplicationSnapshot #X-Amz-Target=KinesisAnalytics_20180523.DescribeApplicationSnapshot
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeApplicationSnapshotResponse> DescribeApplicationSnapshotAsync(DescribeApplicationSnapshotRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.DescribeApplicationSnapshot";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeApplicationSnapshotResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Provides a detailed description of a specified version of the application. To see a list of all the versions of an application, invoke the <a>ListApplicationVersions</a> operation.</p> <note> <p>This operation is supported only for Amazon Kinesis Data Analytics for Apache Flink.</p> </note>
		/// DescribeApplicationVersion #X-Amz-Target=KinesisAnalytics_20180523.DescribeApplicationVersion
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeApplicationVersionResponse> DescribeApplicationVersionAsync(DescribeApplicationVersionRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.DescribeApplicationVersion";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeApplicationVersionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Infers a schema for a SQL-based Kinesis Data Analytics application by evaluating sample records on the specified streaming source (Kinesis data stream or Kinesis Data Firehose delivery stream) or Amazon S3 object. In the response, the operation returns the inferred schema and also the sample records that the operation used to infer the schema.</p> <p> You can use the inferred schema when configuring a streaming source for your application. When you create an application using the Kinesis Data Analytics console, the console uses this operation to infer a schema and show it in the console user interface. </p>
		/// DiscoverInputSchema #X-Amz-Target=KinesisAnalytics_20180523.DiscoverInputSchema
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DiscoverInputSchemaResponse> DiscoverInputSchemaAsync(DiscoverInputSchemaRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.DiscoverInputSchema";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DiscoverInputSchemaResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists information about the current application snapshots.
		/// ListApplicationSnapshots #X-Amz-Target=KinesisAnalytics_20180523.ListApplicationSnapshots
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListApplicationSnapshotsResponse> ListApplicationSnapshotsAsync(ListApplicationSnapshotsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.ListApplicationSnapshots";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListApplicationSnapshotsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists all the versions for the specified application, including versions that were rolled back. The response also includes a summary of the configuration associated with each version.</p> <p>To get the complete description of a specific application version, invoke the <a>DescribeApplicationVersion</a> operation.</p> <note> <p>This operation is supported only for Amazon Kinesis Data Analytics for Apache Flink.</p> </note>
		/// ListApplicationVersions #X-Amz-Target=KinesisAnalytics_20180523.ListApplicationVersions
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListApplicationVersionsResponse> ListApplicationVersionsAsync(ListApplicationVersionsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.ListApplicationVersions";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListApplicationVersionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns a list of Kinesis Data Analytics applications in your account. For each application, the response includes the application name, Amazon Resource Name (ARN), and status. </p> <p>If you want detailed information about a specific application, use <a>DescribeApplication</a>.</p>
		/// ListApplications #X-Amz-Target=KinesisAnalytics_20180523.ListApplications
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListApplicationsResponse> ListApplicationsAsync(ListApplicationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.ListApplications";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListApplicationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves the list of key-value tags assigned to the application. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html">Using Tagging</a>.
		/// ListTagsForResource #X-Amz-Target=KinesisAnalytics_20180523.ListTagsForResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.ListTagsForResource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Reverts the application to the previous running version. You can roll back an application if you suspect it is stuck in a transient status. </p> <p>You can roll back an application only if it is in the <code>UPDATING</code> or <code>AUTOSCALING</code> status.</p> <p>When you rollback an application, it loads state data from the last successful snapshot. If the application has no snapshots, Kinesis Data Analytics rejects the rollback request.</p> <p>This action is not supported for Kinesis Data Analytics for SQL applications.</p>
		/// RollbackApplication #X-Amz-Target=KinesisAnalytics_20180523.RollbackApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<RollbackApplicationResponse> RollbackApplicationAsync(RollbackApplicationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.RollbackApplication";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<RollbackApplicationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Starts the specified Kinesis Data Analytics application. After creating an application, you must exclusively call this operation to start your application.
		/// StartApplication #X-Amz-Target=KinesisAnalytics_20180523.StartApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartApplicationResponse> StartApplicationAsync(StartApplicationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.StartApplication";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StartApplicationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Stops the application from processing data. You can stop an application only if it is in the running status, unless you set the <code>Force</code> parameter to <code>true</code>.</p> <p>You can use the <a>DescribeApplication</a> operation to find the application status. </p> <p>Kinesis Data Analytics takes a snapshot when the application is stopped, unless <code>Force</code> is set to <code>true</code>.</p>
		/// StopApplication #X-Amz-Target=KinesisAnalytics_20180523.StopApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StopApplicationResponse> StopApplicationAsync(StopApplicationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.StopApplication";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<StopApplicationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds one or more key-value tags to a Kinesis Data Analytics application. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html">Using Tagging</a>.
		/// TagResource #X-Amz-Target=KinesisAnalytics_20180523.TagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(TagResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.TagResource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes one or more tags from a Kinesis Data Analytics application. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html">Using Tagging</a>.
		/// UntagResource #X-Amz-Target=KinesisAnalytics_20180523.UntagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.UntagResource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UntagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates an existing Kinesis Data Analytics application. Using this operation, you can update application code, input configuration, and output configuration. </p> <p>Kinesis Data Analytics updates the <code>ApplicationVersionId</code> each time you update your application. </p> <note> <p>You cannot update the <code>RuntimeEnvironment</code> of an existing application. If you need to update an application's <code>RuntimeEnvironment</code>, you must delete the application and create it again.</p> </note>
		/// UpdateApplication #X-Amz-Target=KinesisAnalytics_20180523.UpdateApplication
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateApplicationResponse> UpdateApplicationAsync(UpdateApplicationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.UpdateApplication";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateApplicationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates the maintenance configuration of the Kinesis Data Analytics application. </p> <p>You can invoke this operation on an application that is in one of the two following states: <code>READY</code> or <code>RUNNING</code>. If you invoke it when the application is in a state other than these two states, it throws a <code>ResourceInUseException</code>. The service makes use of the updated configuration the next time it schedules maintenance for the application. If you invoke this operation after the service schedules maintenance, the service will apply the configuration update the next time it schedules maintenance for the application. This means that you might not see the maintenance configuration update applied to the maintenance process that follows a successful invocation of this operation, but to the following maintenance process instead.</p> <p>To see the current maintenance configuration of your application, invoke the <a>DescribeApplication</a> operation.</p> <p>For information about application maintenance, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/maintenance.html">Kinesis Data Analytics for Apache Flink Maintenance</a>.</p> <note> <p>This operation is supported only for Amazon Kinesis Data Analytics for Apache Flink.</p> </note>
		/// UpdateApplicationMaintenanceConfiguration #X-Amz-Target=KinesisAnalytics_20180523.UpdateApplicationMaintenanceConfiguration
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateApplicationMaintenanceConfigurationResponse> UpdateApplicationMaintenanceConfigurationAsync(UpdateApplicationMaintenanceConfigurationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=KinesisAnalytics_20180523.UpdateApplicationMaintenanceConfiguration";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateApplicationMaintenanceConfigurationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum AddApplicationCloudWatchLoggingOptionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.AddApplicationCloudWatchLoggingOption")]
		KinesisAnalytics_20180523_AddApplicationCloudWatchLoggingOption = 0,
	}
	
	public enum AddApplicationInputX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.AddApplicationInput")]
		KinesisAnalytics_20180523_AddApplicationInput = 0,
	}
	
	public enum AddApplicationInputProcessingConfigurationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.AddApplicationInputProcessingConfiguration")]
		KinesisAnalytics_20180523_AddApplicationInputProcessingConfiguration = 0,
	}
	
	public enum AddApplicationOutputX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.AddApplicationOutput")]
		KinesisAnalytics_20180523_AddApplicationOutput = 0,
	}
	
	public enum AddApplicationReferenceDataSourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.AddApplicationReferenceDataSource")]
		KinesisAnalytics_20180523_AddApplicationReferenceDataSource = 0,
	}
	
	public enum AddApplicationVpcConfigurationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.AddApplicationVpcConfiguration")]
		KinesisAnalytics_20180523_AddApplicationVpcConfiguration = 0,
	}
	
	public enum CreateApplicationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.CreateApplication")]
		KinesisAnalytics_20180523_CreateApplication = 0,
	}
	
	public enum CreateApplicationPresignedUrlX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.CreateApplicationPresignedUrl")]
		KinesisAnalytics_20180523_CreateApplicationPresignedUrl = 0,
	}
	
	public enum CreateApplicationSnapshotX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.CreateApplicationSnapshot")]
		KinesisAnalytics_20180523_CreateApplicationSnapshot = 0,
	}
	
	public enum DeleteApplicationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.DeleteApplication")]
		KinesisAnalytics_20180523_DeleteApplication = 0,
	}
	
	public enum DeleteApplicationCloudWatchLoggingOptionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.DeleteApplicationCloudWatchLoggingOption")]
		KinesisAnalytics_20180523_DeleteApplicationCloudWatchLoggingOption = 0,
	}
	
	public enum DeleteApplicationInputProcessingConfigurationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.DeleteApplicationInputProcessingConfiguration")]
		KinesisAnalytics_20180523_DeleteApplicationInputProcessingConfiguration = 0,
	}
	
	public enum DeleteApplicationOutputX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.DeleteApplicationOutput")]
		KinesisAnalytics_20180523_DeleteApplicationOutput = 0,
	}
	
	public enum DeleteApplicationReferenceDataSourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.DeleteApplicationReferenceDataSource")]
		KinesisAnalytics_20180523_DeleteApplicationReferenceDataSource = 0,
	}
	
	public enum DeleteApplicationSnapshotX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.DeleteApplicationSnapshot")]
		KinesisAnalytics_20180523_DeleteApplicationSnapshot = 0,
	}
	
	public enum DeleteApplicationVpcConfigurationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.DeleteApplicationVpcConfiguration")]
		KinesisAnalytics_20180523_DeleteApplicationVpcConfiguration = 0,
	}
	
	public enum DescribeApplicationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.DescribeApplication")]
		KinesisAnalytics_20180523_DescribeApplication = 0,
	}
	
	public enum DescribeApplicationSnapshotX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.DescribeApplicationSnapshot")]
		KinesisAnalytics_20180523_DescribeApplicationSnapshot = 0,
	}
	
	public enum DescribeApplicationVersionX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.DescribeApplicationVersion")]
		KinesisAnalytics_20180523_DescribeApplicationVersion = 0,
	}
	
	public enum DiscoverInputSchemaX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.DiscoverInputSchema")]
		KinesisAnalytics_20180523_DiscoverInputSchema = 0,
	}
	
	public enum ListApplicationSnapshotsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.ListApplicationSnapshots")]
		KinesisAnalytics_20180523_ListApplicationSnapshots = 0,
	}
	
	public enum ListApplicationVersionsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.ListApplicationVersions")]
		KinesisAnalytics_20180523_ListApplicationVersions = 0,
	}
	
	public enum ListApplicationsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.ListApplications")]
		KinesisAnalytics_20180523_ListApplications = 0,
	}
	
	public enum ListTagsForResourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.ListTagsForResource")]
		KinesisAnalytics_20180523_ListTagsForResource = 0,
	}
	
	public enum RollbackApplicationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.RollbackApplication")]
		KinesisAnalytics_20180523_RollbackApplication = 0,
	}
	
	public enum StartApplicationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.StartApplication")]
		KinesisAnalytics_20180523_StartApplication = 0,
	}
	
	public enum StopApplicationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.StopApplication")]
		KinesisAnalytics_20180523_StopApplication = 0,
	}
	
	public enum TagResourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.TagResource")]
		KinesisAnalytics_20180523_TagResource = 0,
	}
	
	public enum UntagResourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.UntagResource")]
		KinesisAnalytics_20180523_UntagResource = 0,
	}
	
	public enum UpdateApplicationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.UpdateApplication")]
		KinesisAnalytics_20180523_UpdateApplication = 0,
	}
	
	public enum UpdateApplicationMaintenanceConfigurationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KinesisAnalytics_20180523.UpdateApplicationMaintenanceConfiguration")]
		KinesisAnalytics_20180523_UpdateApplicationMaintenanceConfiguration = 0,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

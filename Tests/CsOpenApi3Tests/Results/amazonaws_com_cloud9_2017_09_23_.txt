//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEnvironmentEC2Result
	{
		
		[System.Runtime.Serialization.DataMember(Name="environmentId")]
		public string EnvironmentId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEnvironmentEC2Request
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="clientRequestToken")]
		public string ClientRequestToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="instanceType")]
		public string InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="subnetId")]
		public string SubnetId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="imageId")]
		public string ImageId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="automaticStopTimeMinutes")]
		public System.Nullable<System.Int32> AutomaticStopTimeMinutes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ownerArn")]
		public string OwnerArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connectionType")]
		public ConnectionType ConnectionType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="dryRun")]
		public System.Nullable<System.Boolean> DryRun { get; set; }
	}
	
	/// <summary>
	/// Metadata that is associated with Amazon Web Services resources. In particular, a name-value pair that can be associated with an Cloud9 development environment. There are two types of tags: <i>user tags</i> and <i>system tags</i>. A user tag is created by the user. A system tag is automatically created by Amazon Web Services services. A system tag is prefixed with <code>"aws:"</code> and cannot be modified by the user.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tag
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ConnectionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONNECT_SSH = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONNECT_SSM = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BadRequestException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConflictException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ForbiddenException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TooManyRequestsException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LimitExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalServerErrorException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEnvironmentMembershipResult
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="membership")]
		public EnvironmentMember Membership { get; set; }
	}
	
	/// <summary>
	/// Information about an environment member for an Cloud9 development environment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EnvironmentMember
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public Permissions Permissions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="userId")]
		public string UserId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="userArn")]
		public string UserArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environmentId")]
		public string EnvironmentId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastAccess")]
		public System.DateTimeOffset LastAccess { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Permissions
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		owner = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="read-write")]
		readMinuswrite = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="read-only")]
		readMinusonly = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEnvironmentMembershipRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environmentId")]
		public string EnvironmentId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="userArn")]
		public string UserArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public MemberPermissions Permissions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MemberPermissions
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="read-write")]
		readMinuswrite = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="read-only")]
		readMinusonly = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEnvironmentResult
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEnvironmentRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environmentId")]
		public string EnvironmentId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEnvironmentMembershipResult
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEnvironmentMembershipRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environmentId")]
		public string EnvironmentId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="userArn")]
		public string UserArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeEnvironmentMembershipsResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="memberships")]
		public EnvironmentMember[] Memberships { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeEnvironmentMembershipsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="userArn")]
		public string UserArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environmentId")]
		public string EnvironmentId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public Permissions[] Permissions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeEnvironmentStatusResult
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public EnvironmentStatus Status { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EnvironmentStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		error = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		creating = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		connecting = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ready = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		stopping = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		stopped = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		deleting = 6,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeEnvironmentStatusRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environmentId")]
		public string EnvironmentId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeEnvironmentsResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="environments")]
		public Environment[] Environments { get; set; }
	}
	
	/// <summary>
	/// Information about an Cloud9 development environment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Environment
	{
		
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="type")]
		public EnvironmentType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="connectionType")]
		public ConnectionType ConnectionType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="arn")]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="ownerArn")]
		public string OwnerArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lifecycle")]
		public EnvironmentLifecycle Lifecycle { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="managedCredentialsStatus")]
		public ManagedCredentialsStatus ManagedCredentialsStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EnvironmentType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ssh = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ec2 = 1,
	}
	
	/// <summary>
	/// Information about the current creation or deletion lifecycle state of an Cloud9 development environment.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EnvironmentLifecycle
	{
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public EnvironmentLifecycleStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reason")]
		public string Reason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureResource")]
		public string FailureResource { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EnvironmentLifecycleStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATE_FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETING = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE_FAILED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ManagedCredentialsStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED_ON_CREATE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED_BY_OWNER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED_BY_DEFAULT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED_BY_OWNER = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED_BY_COLLABORATOR = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_REMOVAL_BY_COLLABORATOR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_START_REMOVAL_BY_COLLABORATOR = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_REMOVAL_BY_OWNER = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_START_REMOVAL_BY_OWNER = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED_REMOVAL_BY_COLLABORATOR = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED_REMOVAL_BY_OWNER = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeEnvironmentsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environmentIds")]
		public string[] EnvironmentIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEnvironmentsResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="environmentIds")]
		public string[] EnvironmentIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEnvironmentsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConcurrentAccessException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceARN { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] TagKeys { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEnvironmentResult
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEnvironmentRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environmentId")]
		public string EnvironmentId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="description")]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="managedCredentialsAction")]
		public ManagedCredentialsAction ManagedCredentialsAction { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ManagedCredentialsAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEnvironmentMembershipResult
	{
		
		[System.Runtime.Serialization.DataMember(Name="membership")]
		public EnvironmentMember Membership { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEnvironmentMembershipRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="environmentId")]
		public string EnvironmentId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="userArn")]
		public string UserArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="permissions")]
		public MemberPermissions Permissions { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Creates an Cloud9 development environment, launches an Amazon Elastic Compute Cloud (Amazon EC2) instance, and then connects from the instance to the environment.
		/// CreateEnvironmentEC2 #X-Amz-Target=AWSCloud9WorkspaceManagementService.CreateEnvironmentEC2
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateEnvironmentEC2Result> CreateEnvironmentEC2Async(CreateEnvironmentEC2Request requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSCloud9WorkspaceManagementService.CreateEnvironmentEC2";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateEnvironmentEC2Result>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds an environment member to an Cloud9 development environment.
		/// CreateEnvironmentMembership #X-Amz-Target=AWSCloud9WorkspaceManagementService.CreateEnvironmentMembership
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateEnvironmentMembershipResult> CreateEnvironmentMembershipAsync(CreateEnvironmentMembershipRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSCloud9WorkspaceManagementService.CreateEnvironmentMembership";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateEnvironmentMembershipResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an Cloud9 development environment. If an Amazon EC2 instance is connected to the environment, also terminates the instance.
		/// DeleteEnvironment #X-Amz-Target=AWSCloud9WorkspaceManagementService.DeleteEnvironment
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteEnvironmentResult> DeleteEnvironmentAsync(DeleteEnvironmentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSCloud9WorkspaceManagementService.DeleteEnvironment";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteEnvironmentResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an environment member from a development environment.
		/// DeleteEnvironmentMembership #X-Amz-Target=AWSCloud9WorkspaceManagementService.DeleteEnvironmentMembership
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteEnvironmentMembershipResult> DeleteEnvironmentMembershipAsync(DeleteEnvironmentMembershipRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSCloud9WorkspaceManagementService.DeleteEnvironmentMembership";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteEnvironmentMembershipResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets information about environment members for an Cloud9 development environment.
		/// DescribeEnvironmentMemberships #X-Amz-Target=AWSCloud9WorkspaceManagementService.DescribeEnvironmentMemberships
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeEnvironmentMembershipsResult> DescribeEnvironmentMembershipsAsync(string maxResults, string nextToken, DescribeEnvironmentMembershipsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSCloud9WorkspaceManagementService.DescribeEnvironmentMemberships?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeEnvironmentMembershipsResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets status information for an Cloud9 development environment.
		/// DescribeEnvironmentStatus #X-Amz-Target=AWSCloud9WorkspaceManagementService.DescribeEnvironmentStatus
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeEnvironmentStatusResult> DescribeEnvironmentStatusAsync(DescribeEnvironmentStatusRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSCloud9WorkspaceManagementService.DescribeEnvironmentStatus";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeEnvironmentStatusResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets information about Cloud9 development environments.
		/// DescribeEnvironments #X-Amz-Target=AWSCloud9WorkspaceManagementService.DescribeEnvironments
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeEnvironmentsResult> DescribeEnvironmentsAsync(DescribeEnvironmentsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSCloud9WorkspaceManagementService.DescribeEnvironments";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeEnvironmentsResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a list of Cloud9 development environment identifiers.
		/// ListEnvironments #X-Amz-Target=AWSCloud9WorkspaceManagementService.ListEnvironments
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListEnvironmentsResult> ListEnvironmentsAsync(string maxResults, string nextToken, ListEnvironmentsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSCloud9WorkspaceManagementService.ListEnvironments?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListEnvironmentsResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Gets a list of the tags associated with an Cloud9 development environment.
		/// ListTagsForResource #X-Amz-Target=AWSCloud9WorkspaceManagementService.ListTagsForResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(ListTagsForResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSCloud9WorkspaceManagementService.ListTagsForResource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Adds tags to an Cloud9 development environment.</p> <important> <p>Tags that you add to an Cloud9 environment by using this method will NOT be automatically propagated to underlying resources.</p> </important>
		/// TagResource #X-Amz-Target=AWSCloud9WorkspaceManagementService.TagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(TagResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSCloud9WorkspaceManagementService.TagResource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes tags from an Cloud9 development environment.
		/// UntagResource #X-Amz-Target=AWSCloud9WorkspaceManagementService.UntagResource
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(UntagResourceRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSCloud9WorkspaceManagementService.UntagResource";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UntagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Changes the settings of an existing Cloud9 development environment.
		/// UpdateEnvironment #X-Amz-Target=AWSCloud9WorkspaceManagementService.UpdateEnvironment
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateEnvironmentResult> UpdateEnvironmentAsync(UpdateEnvironmentRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSCloud9WorkspaceManagementService.UpdateEnvironment";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateEnvironmentResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Changes the settings of an existing environment member for an Cloud9 development environment.
		/// UpdateEnvironmentMembership #X-Amz-Target=AWSCloud9WorkspaceManagementService.UpdateEnvironmentMembership
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateEnvironmentMembershipResult> UpdateEnvironmentMembershipAsync(UpdateEnvironmentMembershipRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=AWSCloud9WorkspaceManagementService.UpdateEnvironmentMembership";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateEnvironmentMembershipResult>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public enum CreateEnvironmentEC2X_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSCloud9WorkspaceManagementService.CreateEnvironmentEC2")]
		AWSCloud9WorkspaceManagementService_CreateEnvironmentEC2 = 0,
	}
	
	public enum CreateEnvironmentMembershipX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSCloud9WorkspaceManagementService.CreateEnvironmentMembership")]
		AWSCloud9WorkspaceManagementService_CreateEnvironmentMembership = 0,
	}
	
	public enum DeleteEnvironmentX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSCloud9WorkspaceManagementService.DeleteEnvironment")]
		AWSCloud9WorkspaceManagementService_DeleteEnvironment = 0,
	}
	
	public enum DeleteEnvironmentMembershipX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSCloud9WorkspaceManagementService.DeleteEnvironmentMembership")]
		AWSCloud9WorkspaceManagementService_DeleteEnvironmentMembership = 0,
	}
	
	public enum DescribeEnvironmentMembershipsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSCloud9WorkspaceManagementService.DescribeEnvironmentMemberships")]
		AWSCloud9WorkspaceManagementService_DescribeEnvironmentMemberships = 0,
	}
	
	public enum DescribeEnvironmentStatusX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSCloud9WorkspaceManagementService.DescribeEnvironmentStatus")]
		AWSCloud9WorkspaceManagementService_DescribeEnvironmentStatus = 0,
	}
	
	public enum DescribeEnvironmentsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSCloud9WorkspaceManagementService.DescribeEnvironments")]
		AWSCloud9WorkspaceManagementService_DescribeEnvironments = 0,
	}
	
	public enum ListEnvironmentsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSCloud9WorkspaceManagementService.ListEnvironments")]
		AWSCloud9WorkspaceManagementService_ListEnvironments = 0,
	}
	
	public enum ListTagsForResourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSCloud9WorkspaceManagementService.ListTagsForResource")]
		AWSCloud9WorkspaceManagementService_ListTagsForResource = 0,
	}
	
	public enum TagResourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSCloud9WorkspaceManagementService.TagResource")]
		AWSCloud9WorkspaceManagementService_TagResource = 0,
	}
	
	public enum UntagResourceX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSCloud9WorkspaceManagementService.UntagResource")]
		AWSCloud9WorkspaceManagementService_UntagResource = 0,
	}
	
	public enum UpdateEnvironmentX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSCloud9WorkspaceManagementService.UpdateEnvironment")]
		AWSCloud9WorkspaceManagementService_UpdateEnvironment = 0,
	}
	
	public enum UpdateEnvironmentMembershipX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWSCloud9WorkspaceManagementService.UpdateEnvironmentMembership")]
		AWSCloud9WorkspaceManagementService_UpdateEnvironmentMembership = 0,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

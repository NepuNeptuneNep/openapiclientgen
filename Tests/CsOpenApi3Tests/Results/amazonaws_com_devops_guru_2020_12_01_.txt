//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AddNotificationChannelResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
	}
	
	/// <summary>
	/// <p> Contains the Amazon Resource Name (ARN) of an Amazon Simple Notification Service topic. </p> <p>If you use an Amazon SNS topic in another account, you must attach a policy to it that grants DevOps Guru permission to send it notifications. DevOps Guru adds the required policy on your behalf to send notifications using Amazon SNS in your account. DevOps Guru only supports standard SNS topics. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-required-permissions.html">Permissions for Amazon SNS topics</a>.</p> <p>If you use an Amazon SNS topic that is encrypted by an Amazon Web Services Key Management Service customer-managed key (CMK), then you must add permissions to the CMK. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-kms-permissions.html">Permissions for Amazon Web Services KMSâ€“encrypted Amazon SNS topics</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SnsChannelConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicArn { get; set; }
	}
	
	/// <summary>
	///  The filter configurations for the Amazon SNS notification topic you use with DevOps Guru. You can choose to specify which events or message types to receive notifications for. You can also choose to specify which severity levels to receive notifications for. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NotificationFilterConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InsightSeverity[] Severities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotificationMessageType[] MessageTypes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum InsightSeverity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LOW")]
		LOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MEDIUM")]
		MEDIUM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HIGH")]
		HIGH = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum NotificationMessageType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NEW_INSIGHT")]
		NEW_INSIGHT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOSED_INSIGHT")]
		CLOSED_INSIGHT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NEW_ASSOCIATION")]
		NEW_ASSOCIATION = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SEVERITY_UPGRADED")]
		SEVERITY_UPGRADED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NEW_RECOMMENDATION")]
		NEW_RECOMMENDATION = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ConflictException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InternalServerException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServiceQuotaExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ThrottlingException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ValidationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteInsightResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeAccountHealthResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int OpenReactiveInsights { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int OpenProactiveInsights { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MetricsAnalyzed { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ResourceHours { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AnalyzedResourceCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeAccountOverviewResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ReactiveInsights { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ProactiveInsights { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MeanTimeToRecoverInMilliseconds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeAnomalyResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ProactiveAnomaly ProactiveAnomaly { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReactiveAnomaly ReactiveAnomaly { get; set; }
	}
	
	/// <summary>
	/// Information about an anomaly. This object is returned by <code>ListAnomalies</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProactiveAnomaly
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightSeverity Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdateTime { get; set; }
		
		/// <summary>
		///  A time range that specifies when the observed unusual behavior in an anomaly started and ended. This is different from <code>AnomalyReportedTimeRange</code>, which specifies the time range when DevOps Guru opens and then closes an anomaly. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AnomalyTimeRange AnomalyTimeRange { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyReportedTimeRange AnomalyReportedTimeRange { get; set; }
		
		/// <summary>
		///  The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PredictionTimeRange PredictionTimeRange { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalySourceDetails SourceDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AssociatedInsightId { get; set; }
		
		/// <summary>
		///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollection ResourceCollection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Limit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalySourceMetadata SourceMetadata { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyResource[] AnomalyResources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AnomalyStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ONGOING")]
		ONGOING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOSED")]
		CLOSED = 1,
	}
	
	/// <summary>
	///  A time range that specifies when the observed unusual behavior in an anomaly started and ended. This is different from <code>AnomalyReportedTimeRange</code>, which specifies the time range when DevOps Guru opens and then closes an anomaly. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AnomalyTimeRange
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
	}
	
	/// <summary>
	///  A time range that specifies when DevOps Guru opens and then closes an anomaly. This is different from <code>AnomalyTimeRange</code>, which specifies the time range when DevOps Guru actually observes the anomalous behavior. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AnomalyReportedTimeRange
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset OpenTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CloseTime { get; set; }
	}
	
	/// <summary>
	///  The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PredictionTimeRange
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
	}
	
	/// <summary>
	///  Details about the source of the anomalous operational data that triggered the anomaly.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AnomalySourceDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchMetricsDetail[] CloudWatchMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PerformanceInsightsMetricsDetail[] PerformanceInsightsMetrics { get; set; }
	}
	
	/// <summary>
	///  Information about an Amazon CloudWatch metric. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudWatchMetricsDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Namespace { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchMetricsDimension[] Dimensions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchMetricsStat Stat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Unit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Period { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchMetricsDataSummary MetricDataSummary { get; set; }
	}
	
	/// <summary>
	///  The dimension of an Amazon CloudWatch metric that is used when DevOps Guru analyzes the resources in your account for operational problems and anomalous behavior. A dimension is a name/value pair that is part of the identity of a metric. A metric can have up to 10 dimensions. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Dimension">Dimensions</a> in the <i>Amazon CloudWatch User Guide</i>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudWatchMetricsDimension
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CloudWatchMetricsStat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Sum")]
		Sum = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Average")]
		Average = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SampleCount")]
		SampleCount = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Minimum")]
		Minimum = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Maximum")]
		Maximum = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="p99")]
		p99 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="p90")]
		p90 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="p50")]
		p50 = 7,
	}
	
	/// <summary>
	/// Contains information about the analyzed metrics that displayed anomalous behavior. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudWatchMetricsDataSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TimestampMetricValuePair[] TimestampMetricValuePairList { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchMetricDataStatusCode StatusCode { get; set; }
	}
	
	/// <summary>
	/// A pair that contains metric values at the respective timestamp.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TimestampMetricValuePair
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Timestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MetricValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CloudWatchMetricDataStatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="Complete")]
		Complete = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="InternalError")]
		InternalError = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PartialData")]
		PartialData = 2,
	}
	
	/// <summary>
	/// <p>Details about Performance Insights metrics.</p> <p>Amazon RDS Performance Insights enables you to monitor and explore different dimensions of database load based on data captured from a running DB instance. DB load is measured as average active sessions. Performance Insights provides the data to API consumers as a two-dimensional time-series dataset. The time dimension provides DB load data for each time point in the queried time range. Each time point decomposes overall load in relation to the requested dimensions, measured at that time point. Examples include SQL, Wait event, User, and Host. </p> <ul> <li> <p>To learn more about Performance Insights and Amazon Aurora DB instances, go to the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights.html"> Amazon Aurora User Guide</a>. </p> </li> <li> <p>To learn more about Performance Insights and Amazon RDS DB instances, go to the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html"> Amazon RDS User Guide</a>. </p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PerformanceInsightsMetricsDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricDisplayName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Unit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PerformanceInsightsMetricQuery MetricQuery { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PerformanceInsightsReferenceData[] ReferenceData { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PerformanceInsightsStat[] StatsAtAnomaly { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PerformanceInsightsStat[] StatsAtBaseline { get; set; }
	}
	
	/// <summary>
	/// <p>A single query to be processed. Use these parameters to query the Performance Insights <code>GetResourceMetrics</code> API to retrieve the metrics for an anomaly. For more information, see <code> <a href="https://docs.aws.amazon.com/performance-insights/latest/APIReference/API_GetResourceMetrics.html">GetResourceMetrics</a> </code> in the <i>Amazon RDS Performance Insights API Reference</i>.</p> <p>Amazon RDS Performance Insights enables you to monitor and explore different dimensions of database load based on data captured from a running DB instance. DB load is measured as average active sessions. Performance Insights provides the data to API consumers as a two-dimensional time-series dataset. The time dimension provides DB load data for each time point in the queried time range. Each time point decomposes overall load in relation to the requested dimensions, measured at that time point. Examples include SQL, Wait event, User, and Host. </p> <ul> <li> <p>To learn more about Performance Insights and Amazon Aurora DB instances, go to the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights.html"> Amazon Aurora User Guide</a>. </p> </li> <li> <p>To learn more about Performance Insights and Amazon RDS DB instances, go to the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html"> Amazon RDS User Guide</a>. </p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PerformanceInsightsMetricQuery
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Metric { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PerformanceInsightsMetricDimensionGroup GroupBy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PerformanceInsightsMetricFilterMap Filter { get; set; }
	}
	
	/// <summary>
	/// <p>A logical grouping of Performance Insights metrics for a related subject area. For example, the <code>db.sql</code> dimension group consists of the following dimensions: <code>db.sql.id</code>, <code>db.sql.db_id</code>, <code>db.sql.statement</code>, and <code>db.sql.tokenized_id</code>.</p> <note> <p>Each response element returns a maximum of 500 bytes. For larger elements, such as SQL statements, only the first 500 bytes are returned.</p> </note> <p>Amazon RDS Performance Insights enables you to monitor and explore different dimensions of database load based on data captured from a running DB instance. DB load is measured as average active sessions. Performance Insights provides the data to API consumers as a two-dimensional time-series dataset. The time dimension provides DB load data for each time point in the queried time range. Each time point decomposes overall load in relation to the requested dimensions, measured at that time point. Examples include SQL, Wait event, User, and Host. </p> <ul> <li> <p>To learn more about Performance Insights and Amazon Aurora DB instances, go to the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights.html"> Amazon Aurora User Guide</a>. </p> </li> <li> <p>To learn more about Performance Insights and Amazon RDS DB instances, go to the <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html"> Amazon RDS User Guide</a>. </p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PerformanceInsightsMetricDimensionGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Group { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Dimensions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Limit { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PerformanceInsightsMetricFilterMap
	{
	}
	
	/// <summary>
	/// Reference data used to evaluate Performance Insights to determine if its performance is anomalous or not.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PerformanceInsightsReferenceData
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PerformanceInsightsReferenceComparisonValues ComparisonValues { get; set; }
	}
	
	/// <summary>
	/// Reference scalar values and other metrics that DevOps Guru displays on a graph in its console along with the actual metrics it analyzed. Compare these reference values to your actual metrics to help you understand anomalous behavior that DevOps Guru detected.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PerformanceInsightsReferenceComparisonValues
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PerformanceInsightsReferenceScalar ReferenceScalar { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PerformanceInsightsReferenceMetric ReferenceMetric { get; set; }
	}
	
	/// <summary>
	/// A reference value to compare Performance Insights metrics against to determine if the metrics demonstrate anomalous behavior.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PerformanceInsightsReferenceScalar
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	/// <summary>
	/// Information about a reference metric used to evaluate Performance Insights.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PerformanceInsightsReferenceMetric
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PerformanceInsightsMetricQuery MetricQuery { get; set; }
	}
	
	/// <summary>
	/// A statistic in a Performance Insights collection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PerformanceInsightsStat
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	/// <summary>
	///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ResourceCollection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CloudFormationCollection CloudFormation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagCollection[] Tags { get; set; }
	}
	
	/// <summary>
	///  Information about Amazon Web Services CloudFormation stacks. You can use up to 500 stacks to specify which Amazon Web Services resources in your account to analyze. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacks.html">Stacks</a> in the <i>Amazon Web Services CloudFormation User Guide</i>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudFormationCollection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StackNames { get; set; }
	}
	
	/// <summary>
	/// <p>A collection of Amazon Web Services tags.</p> <p>Tags help you identify and organize your Amazon Web Services resources. Many Amazon Web Services services support tagging, so you can assign the same tag to resources from different services to indicate that the resources are related. For example, you can assign the same tag to an Amazon DynamoDB table resource that you assign to an Lambda function. For more information about using tags, see the <a href="https://docs.aws.amazon.com/whitepapers/latest/tagging-best-practices/tagging-best-practices.html">Tagging best practices</a> whitepaper. </p> <p>Each Amazon Web Services tag has two parts. </p> <ul> <li> <p>A tag <i>key</i> (for example, <code>CostCenter</code>, <code>Environment</code>, <code>Project</code>, or <code>Secret</code>). Tag <i>keys</i> are case-sensitive.</p> </li> <li> <p>An optional field known as a tag <i>value</i> (for example, <code>111122223333</code>, <code>Production</code>, or a team name). Omitting the tag <i>value</i> is the same as using an empty string. Like tag <i>keys</i>, tag <i>values</i> are case-sensitive.</p> </li> </ul> <p>Together these are known as <i>key</i>-<i>value</i> pairs.</p> <important> <p>The string used for a <i>key</i> in a tag that you use to define your resource coverage must begin with the prefix <code>Devops-guru-</code>. The tag <i>key</i> might be <code>DevOps-Guru-deployment-application</code> or <code>devops-guru-rds-application</code>. When you create a <i>key</i>, the case of characters in the <i>key</i> can be whatever you choose. After you create a <i>key</i>, it is case-sensitive. For example, DevOps Guru works with a <i>key</i> named <code>devops-guru-rds</code> and a <i>key</i> named <code>DevOps-Guru-RDS</code>, and these act as two different <i>keys</i>. Possible <i>key</i>/<i>value</i> pairs in your application might be <code>Devops-Guru-production-application/RDS</code> or <code>Devops-Guru-production-application/containers</code>.</p> </important>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TagCollection
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AppBoundaryKey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] TagValues { get; set; }
	}
	
	/// <summary>
	/// Metadata about the detection source that generates proactive anomalies. The anomaly is detected using analysis of the metric data&#x2028; over a period of time
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AnomalySourceMetadata
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Source { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceResourceName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceResourceType { get; set; }
	}
	
	/// <summary>
	/// The Amazon Web Services resources in which DevOps Guru detected unusual behavior that resulted in the generation of an anomaly. When DevOps Guru detects multiple related anomalies, it creates and insight with details about the anomalous behavior and suggestions about how to correct the problem.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AnomalyResource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
	}
	
	/// <summary>
	/// Details about a reactive anomaly. This object is returned by <code>ListAnomalies</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ReactiveAnomaly
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightSeverity Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyStatus Status { get; set; }
		
		/// <summary>
		///  A time range that specifies when the observed unusual behavior in an anomaly started and ended. This is different from <code>AnomalyReportedTimeRange</code>, which specifies the time range when DevOps Guru opens and then closes an anomaly. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AnomalyTimeRange AnomalyTimeRange { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyReportedTimeRange AnomalyReportedTimeRange { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalySourceDetails SourceDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AssociatedInsightId { get; set; }
		
		/// <summary>
		///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollection ResourceCollection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CausalAnomalyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyResource[] AnomalyResources { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AnomalyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CAUSAL")]
		CAUSAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CONTEXTUAL")]
		CONTEXTUAL = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeEventSourcesConfigResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EventSourcesConfig EventSources { get; set; }
	}
	
	/// <summary>
	/// Information about the integration of DevOps Guru as consumer with another AWS service, such as AWS CodeGuru Profiler via EventBridge.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EventSourcesConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AmazonCodeGuruProfilerIntegration AmazonCodeGuruProfiler { get; set; }
	}
	
	/// <summary>
	/// Information about your account's integration with Amazon CodeGuru Profiler. This returns whether DevOps Guru is configured to consume recommendations generated from Amazon CodeGuru Profiler.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AmazonCodeGuruProfilerIntegration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EventSourceOptInStatus Status { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum EventSourceOptInStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ENABLED")]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DISABLED")]
		DISABLED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeFeedbackResponse
	{
		
		/// <summary>
		///  Information about insight feedback received from a customer. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InsightFeedback InsightFeedback { get; set; }
	}
	
	/// <summary>
	///  Information about insight feedback received from a customer. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InsightFeedback
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightFeedbackOption Feedback { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum InsightFeedbackOption
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="VALID_COLLECTION")]
		VALID_COLLECTION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RECOMMENDATION_USEFUL")]
		RECOMMENDATION_USEFUL = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ALERT_TOO_SENSITIVE")]
		ALERT_TOO_SENSITIVE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DATA_NOISY_ANOMALY")]
		DATA_NOISY_ANOMALY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DATA_INCORRECT")]
		DATA_INCORRECT = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeInsightResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ProactiveInsight ProactiveInsight { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReactiveInsight ReactiveInsight { get; set; }
	}
	
	/// <summary>
	/// Details about a proactive insight. This object is returned by <code>ListInsights</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProactiveInsight
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightSeverity Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyStatus Status { get; set; }
		
		/// <summary>
		///  A time ranged that specifies when the observed behavior in an insight started and ended. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InsightTimeRange InsightTimeRange { get; set; }
		
		/// <summary>
		///  The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PredictionTimeRange PredictionTimeRange { get; set; }
		
		/// <summary>
		///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollection ResourceCollection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SsmOpsItemId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	/// <summary>
	///  A time ranged that specifies when the observed behavior in an insight started and ended. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InsightTimeRange
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
	}
	
	/// <summary>
	///  Information about a reactive insight. This object is returned by <code>ListInsights</code>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ReactiveInsight
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightSeverity Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyStatus Status { get; set; }
		
		/// <summary>
		///  A time ranged that specifies when the observed behavior in an insight started and ended. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InsightTimeRange InsightTimeRange { get; set; }
		
		/// <summary>
		///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollection ResourceCollection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SsmOpsItemId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeOrganizationHealthResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int OpenReactiveInsights { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int OpenProactiveInsights { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int MetricsAnalyzed { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ResourceHours { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeOrganizationOverviewResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ReactiveInsights { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int ProactiveInsights { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeOrganizationResourceCollectionHealthResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CloudFormationHealth[] CloudFormation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceHealth[] Service { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccountHealth[] Account { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagHealth[] Tags { get; set; }
	}
	
	/// <summary>
	///  Information about the health of Amazon Web Services resources in your account that are specified by an Amazon Web Services CloudFormation stack. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudFormationHealth
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StackName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightHealth Insight { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AnalyzedResourceCount { get; set; }
	}
	
	/// <summary>
	///  Information about the number of open reactive and proactive insights that can be used to gauge the health of your system. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InsightHealth
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OpenProactiveInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OpenReactiveInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MeanTimeToRecoverInMilliseconds { get; set; }
	}
	
	/// <summary>
	/// Represents the health of an Amazon Web Services service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServiceHealth
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceName ServiceName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceInsightHealth Insight { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AnalyzedResourceCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum ServiceName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="API_GATEWAY")]
		API_GATEWAY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="APPLICATION_ELB")]
		APPLICATION_ELB = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AUTO_SCALING_GROUP")]
		AUTO_SCALING_GROUP = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUD_FRONT")]
		CLOUD_FRONT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DYNAMO_DB")]
		DYNAMO_DB = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EC2")]
		EC2 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ECS")]
		ECS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EKS")]
		EKS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ELASTIC_BEANSTALK")]
		ELASTIC_BEANSTALK = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ELASTI_CACHE")]
		ELASTI_CACHE = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ELB")]
		ELB = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ES")]
		ES = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KINESIS")]
		KINESIS = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LAMBDA")]
		LAMBDA = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NAT_GATEWAY")]
		NAT_GATEWAY = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NETWORK_ELB")]
		NETWORK_ELB = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RDS")]
		RDS = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REDSHIFT")]
		REDSHIFT = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ROUTE_53")]
		ROUTE_53 = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="S3")]
		S3 = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SAGE_MAKER")]
		SAGE_MAKER = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SNS")]
		SNS = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SQS")]
		SQS = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STEP_FUNCTIONS")]
		STEP_FUNCTIONS = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SWF")]
		SWF = 24,
	}
	
	/// <summary>
	/// Contains the number of open proactive and reactive insights in an analyzed Amazon Web Services service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServiceInsightHealth
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OpenProactiveInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OpenReactiveInsights { get; set; }
	}
	
	/// <summary>
	///  Returns the number of open reactive insights, the number of open proactive insights, and the number of metrics analyzed in your Amazon Web Services account. Use these numbers to gauge the health of operations in your Amazon Web Services account. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AccountHealth
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccountInsightHealth Insight { get; set; }
	}
	
	/// <summary>
	///  Information about the number of open reactive and proactive insights that can be used to gauge the health of your system. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AccountInsightHealth
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OpenProactiveInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> OpenReactiveInsights { get; set; }
	}
	
	/// <summary>
	///  Information about the health of Amazon Web Services resources in your account that are specified by an Amazon Web Services tag <i>key</i>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TagHealth
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AppBoundaryKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TagValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightHealth Insight { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AnalyzedResourceCount { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeResourceCollectionHealthResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CloudFormationHealth[] CloudFormation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceHealth[] Service { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagHealth[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeServiceIntegrationResponse
	{
		
		/// <summary>
		///  Information about the integration of DevOps Guru with another Amazon Web Services service, such as Amazon Web Services Systems Manager. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServiceIntegrationConfig ServiceIntegration { get; set; }
	}
	
	/// <summary>
	///  Information about the integration of DevOps Guru with another Amazon Web Services service, such as Amazon Web Services Systems Manager. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServiceIntegrationConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public OpsCenterIntegration OpsCenter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogsAnomalyDetectionIntegration LogsAnomalyDetection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KMSServerSideEncryptionIntegration KMSServerSideEncryption { get; set; }
	}
	
	/// <summary>
	///  Information about whether DevOps Guru is configured to create an OpsItem in Amazon Web Services Systems Manager OpsCenter for each created insight. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class OpsCenterIntegration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EventSourceOptInStatus OptInStatus { get; set; }
	}
	
	/// <summary>
	///  Information about the integration of DevOps Guru with CloudWatch log groups for log anomaly detection. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LogsAnomalyDetectionIntegration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EventSourceOptInStatus OptInStatus { get; set; }
	}
	
	/// <summary>
	///  Information about the KMS encryption used with DevOps Guru. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class KMSServerSideEncryptionIntegration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string KMSKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventSourceOptInStatus OptInStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServerSideEncryptionType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum ServerSideEncryptionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CUSTOMER_MANAGED_KEY")]
		CUSTOMER_MANAGED_KEY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWS_OWNED_KMS_KEY")]
		AWS_OWNED_KMS_KEY = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetCostEstimationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CostEstimationResourceCollectionFilter ResourceCollection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CostEstimationStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceResourceCost[] Costs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CostEstimationTimeRange TimeRange { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> TotalCost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information about a filter used to specify which Amazon Web Services resources are analyzed to create a monthly DevOps Guru cost estimate. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/cost-estimate.html">Estimate your Amazon DevOps Guru costs</a> and <a href="http://aws.amazon.com/devops-guru/pricing/">Amazon DevOps Guru pricing</a>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CostEstimationResourceCollectionFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CloudFormationCostEstimationResourceCollectionFilter CloudFormation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagCostEstimationResourceCollectionFilter[] Tags { get; set; }
	}
	
	/// <summary>
	/// Information about an Amazon Web Services CloudFormation stack used to create a monthly cost estimate for DevOps Guru to analyze Amazon Web Services resources. The maximum number of stacks you can specify for a cost estimate is one. The estimate created is for the cost to analyze the Amazon Web Services resources defined by the stack. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacks.html">Stacks</a> in the <i>Amazon Web Services CloudFormation User Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudFormationCostEstimationResourceCollectionFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StackNames { get; set; }
	}
	
	/// <summary>
	/// Information about a collection of Amazon Web Services resources that are identified by an Amazon Web Services tag. This collection of resources is used to create a monthly cost estimate for DevOps Guru to analyze Amazon Web Services resources. The maximum number of tags you can specify for a cost estimate is one. The estimate created is for the cost to analyze the Amazon Web Services resources defined by the tag. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacks.html">Stacks</a> in the <i>Amazon Web Services CloudFormation User Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TagCostEstimationResourceCollectionFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AppBoundaryKey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] TagValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CostEstimationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ONGOING")]
		ONGOING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="COMPLETED")]
		COMPLETED = 1,
	}
	
	/// <summary>
	/// An object that contains information about the estimated monthly cost to analyze an Amazon Web Services resource. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/cost-estimate.html">Estimate your Amazon DevOps Guru costs</a> and <a href="http://aws.amazon.com/devops-guru/pricing/">Amazon DevOps Guru pricing</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServiceResourceCost
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CostEstimationServiceResourceState State { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Count { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> UnitCost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Cost { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CostEstimationServiceResourceState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ACTIVE")]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INACTIVE")]
		INACTIVE = 1,
	}
	
	/// <summary>
	/// The time range of a cost estimation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CostEstimationTimeRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetResourceCollectionResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollectionFilter ResourceCollection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Information about a filter used to specify which Amazon Web Services resources are analyzed for anomalous behavior by DevOps Guru. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ResourceCollectionFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CloudFormationCollectionFilter CloudFormation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagCollectionFilter[] Tags { get; set; }
	}
	
	/// <summary>
	///  Information about Amazon Web Services CloudFormation stacks. You can use up to 500 stacks to specify which Amazon Web Services resources in your account to analyze. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacks.html">Stacks</a> in the <i>Amazon Web Services CloudFormation User Guide</i>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CloudFormationCollectionFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StackNames { get; set; }
	}
	
	/// <summary>
	/// A collection of Amazon Web Services tags used to filter insights. This is used to return insights generated from only resources that contain the tags in the tag collection.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TagCollectionFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AppBoundaryKey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] TagValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListAnomaliesForInsightResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ProactiveAnomalySummary[] ProactiveAnomalies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReactiveAnomalySummary[] ReactiveAnomalies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Details about a proactive anomaly. This object is returned by <code>DescribeAnomaly.</code> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProactiveAnomalySummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightSeverity Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset UpdateTime { get; set; }
		
		/// <summary>
		///  A time range that specifies when the observed unusual behavior in an anomaly started and ended. This is different from <code>AnomalyReportedTimeRange</code>, which specifies the time range when DevOps Guru opens and then closes an anomaly. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AnomalyTimeRange AnomalyTimeRange { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyReportedTimeRange AnomalyReportedTimeRange { get; set; }
		
		/// <summary>
		///  The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PredictionTimeRange PredictionTimeRange { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalySourceDetails SourceDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AssociatedInsightId { get; set; }
		
		/// <summary>
		///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollection ResourceCollection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Limit { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalySourceMetadata SourceMetadata { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyResource[] AnomalyResources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	/// <summary>
	/// Details about a reactive anomaly. This object is returned by <code>DescribeAnomaly.</code> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ReactiveAnomalySummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightSeverity Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyStatus Status { get; set; }
		
		/// <summary>
		///  A time range that specifies when the observed unusual behavior in an anomaly started and ended. This is different from <code>AnomalyReportedTimeRange</code>, which specifies the time range when DevOps Guru opens and then closes an anomaly. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public AnomalyTimeRange AnomalyTimeRange { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyReportedTimeRange AnomalyReportedTimeRange { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalySourceDetails SourceDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AssociatedInsightId { get; set; }
		
		/// <summary>
		///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollection ResourceCollection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CausalAnomalyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyResource[] AnomalyResources { get; set; }
	}
	
	/// <summary>
	/// A collection of the names of Amazon Web Services services.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServiceCollection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceName[] ServiceNames { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListAnomalousLogGroupsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InsightId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AnomalousLogGroup[] AnomalousLogGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  An Amazon CloudWatch log group that contains log anomalies and is used to generate an insight. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AnomalousLogGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LogGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ImpactStartTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ImpactEndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumberOfLogLinesScanned { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogAnomalyShowcase[] LogAnomalyShowcases { get; set; }
	}
	
	/// <summary>
	///  A cluster of similar anomalous log events found within a log group. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LogAnomalyShowcase
	{
		
		[System.Runtime.Serialization.DataMember()]
		public LogAnomalyClass[] LogAnomalyClasses { get; set; }
	}
	
	/// <summary>
	///  Information about an anomalous log event found within a log group. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LogAnomalyClass
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LogStreamName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogAnomalyType LogAnomalyType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogAnomalyToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string LogEventId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Explanation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> NumberOfLogLinesOccurrences { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LogEventTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum LogAnomalyType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KEYWORD")]
		KEYWORD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KEYWORD_TOKEN")]
		KEYWORD_TOKEN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FORMAT")]
		FORMAT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HTTP_CODE")]
		HTTP_CODE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BLOCK_FORMAT")]
		BLOCK_FORMAT = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NUMERICAL_POINT")]
		NUMERICAL_POINT = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NUMERICAL_NAN")]
		NUMERICAL_NAN = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="NEW_FIELD_NAME")]
		NEW_FIELD_NAME = 7,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListEventsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Event[] Events { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  An Amazon Web Services resource event. Amazon Web Services resource events and metrics are analyzed by DevOps Guru to find anomalous behavior and provide recommendations to improve your operational solutions. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Event
	{
		
		/// <summary>
		///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollection ResourceCollection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset Time { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EventSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventDataSource DataSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventClass EventClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventResource[] Resources { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum EventDataSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWS_CLOUD_TRAIL")]
		AWS_CLOUD_TRAIL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWS_CODE_DEPLOY")]
		AWS_CODE_DEPLOY = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum EventClass
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INFRASTRUCTURE")]
		INFRASTRUCTURE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DEPLOYMENT")]
		DEPLOYMENT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SECURITY_CHANGE")]
		SECURITY_CHANGE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CONFIG_CHANGE")]
		CONFIG_CHANGE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SCHEMA_CHANGE")]
		SCHEMA_CHANGE = 4,
	}
	
	/// <summary>
	///  The Amazon Web Services resource that emitted an event. Amazon Web Services resource events and metrics are analyzed by DevOps Guru to find anomalous behavior and provide recommendations to improve your operational solutions. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EventResource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	///  The time range during which an Amazon Web Services event occurred. Amazon Web Services resource events and metrics are analyzed by DevOps Guru to find anomalous behavior and provide recommendations to improve your operational solutions. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EventTimeRange
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset FromTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ToTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListInsightsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ProactiveInsightSummary[] ProactiveInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReactiveInsightSummary[] ReactiveInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Details about a proactive insight. This object is returned by <code>DescribeInsight.</code> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProactiveInsightSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightSeverity Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyStatus Status { get; set; }
		
		/// <summary>
		///  A time ranged that specifies when the observed behavior in an insight started and ended. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InsightTimeRange InsightTimeRange { get; set; }
		
		/// <summary>
		///  The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PredictionTimeRange PredictionTimeRange { get; set; }
		
		/// <summary>
		///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollection ResourceCollection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceCollection ServiceCollection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AssociatedResourceArns { get; set; }
	}
	
	/// <summary>
	///  Information about a reactive insight. This object is returned by <code>DescribeInsight.</code> 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ReactiveInsightSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightSeverity Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyStatus Status { get; set; }
		
		/// <summary>
		///  A time ranged that specifies when the observed behavior in an insight started and ended. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InsightTimeRange InsightTimeRange { get; set; }
		
		/// <summary>
		///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollection ResourceCollection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceCollection ServiceCollection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AssociatedResourceArns { get; set; }
	}
	
	/// <summary>
	///  Used to filter for insights that have the status <code>ONGOING</code>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListInsightsOngoingStatusFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InsightType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum InsightType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REACTIVE")]
		REACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PROACTIVE")]
		PROACTIVE = 1,
	}
	
	/// <summary>
	///  Used to filter for insights that have the status <code>CLOSED</code>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListInsightsClosedStatusFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InsightType Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EndTimeRange EndTimeRange { get; set; }
	}
	
	/// <summary>
	///  A range of time that specifies when anomalous behavior in an anomaly or insight ended. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EndTimeRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset FromTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ToTime { get; set; }
	}
	
	/// <summary>
	///  Used to filter for insights that have any status. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListInsightsAnyStatusFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InsightType Type { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartTimeRange StartTimeRange { get; set; }
	}
	
	/// <summary>
	///  A time range used to specify when the behavior of an insight or anomaly started. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class StartTimeRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset FromTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ToTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListMonitoredResourcesResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MonitoredResourceIdentifier[] MonitoredResourceIdentifiers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Information about the resource that is being monitored, including the name of the resource, the type of resource, and whether or not permission is given to DevOps Guru to access that resource. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class MonitoredResourceIdentifier
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MonitoredResourceName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission ResourcePermission { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdated { get; set; }
		
		/// <summary>
		///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollection ResourceCollection { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum ResourcePermission
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FULL_PERMISSION")]
		FULL_PERMISSION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MISSING_PERMISSION")]
		MISSING_PERMISSION = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum ResourceTypeFilter
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LOG_GROUPS")]
		LOG_GROUPS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOUDFRONT_DISTRIBUTION")]
		CLOUDFRONT_DISTRIBUTION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DYNAMODB_TABLE")]
		DYNAMODB_TABLE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EC2_NAT_GATEWAY")]
		EC2_NAT_GATEWAY = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ECS_CLUSTER")]
		ECS_CLUSTER = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ECS_SERVICE")]
		ECS_SERVICE = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EKS_CLUSTER")]
		EKS_CLUSTER = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ELASTIC_BEANSTALK_ENVIRONMENT")]
		ELASTIC_BEANSTALK_ENVIRONMENT = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ELASTIC_LOAD_BALANCER_LOAD_BALANCER")]
		ELASTIC_LOAD_BALANCER_LOAD_BALANCER = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ELASTIC_LOAD_BALANCING_V2_LOAD_BALANCER")]
		ELASTIC_LOAD_BALANCING_V2_LOAD_BALANCER = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ELASTIC_LOAD_BALANCING_V2_TARGET_GROUP")]
		ELASTIC_LOAD_BALANCING_V2_TARGET_GROUP = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ELASTICACHE_CACHE_CLUSTER")]
		ELASTICACHE_CACHE_CLUSTER = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ELASTICSEARCH_DOMAIN")]
		ELASTICSEARCH_DOMAIN = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KINESIS_STREAM")]
		KINESIS_STREAM = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LAMBDA_FUNCTION")]
		LAMBDA_FUNCTION = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="OPEN_SEARCH_SERVICE_DOMAIN")]
		OPEN_SEARCH_SERVICE_DOMAIN = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RDS_DB_INSTANCE")]
		RDS_DB_INSTANCE = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="RDS_DB_CLUSTER")]
		RDS_DB_CLUSTER = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REDSHIFT_CLUSTER")]
		REDSHIFT_CLUSTER = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ROUTE53_HOSTED_ZONE")]
		ROUTE53_HOSTED_ZONE = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ROUTE53_HEALTH_CHECK")]
		ROUTE53_HEALTH_CHECK = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="S3_BUCKET")]
		S3_BUCKET = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SAGEMAKER_ENDPOINT")]
		SAGEMAKER_ENDPOINT = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SNS_TOPIC")]
		SNS_TOPIC = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SQS_QUEUE")]
		SQS_QUEUE = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STEP_FUNCTIONS_ACTIVITY")]
		STEP_FUNCTIONS_ACTIVITY = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="STEP_FUNCTIONS_STATE_MACHINE")]
		STEP_FUNCTIONS_STATE_MACHINE = 26,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListNotificationChannelsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public NotificationChannel[] Channels { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// <p> Information about a notification channel. A notification channel is used to notify you when DevOps Guru creates an insight. The one supported notification channel is Amazon Simple Notification Service (Amazon SNS). </p> <p>If you use an Amazon SNS topic in another account, you must attach a policy to it that grants DevOps Guru permission to send it notifications. DevOps Guru adds the required policy on your behalf to send notifications using Amazon SNS in your account. DevOps Guru only supports standard SNS topics. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-required-permissions.html">Permissions for Amazon SNS topics</a>.</p> <p>If you use an Amazon SNS topic that is encrypted by an Amazon Web Services Key Management Service customer-managed key (CMK), then you must add permissions to the CMK. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-kms-permissions.html">Permissions for Amazon Web Services KMSâ€“encrypted Amazon SNS topics</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NotificationChannel
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotificationChannelConfig Config { get; set; }
	}
	
	/// <summary>
	///  Information about notification channels you have configured with DevOps Guru. The one supported notification channel is Amazon Simple Notification Service (Amazon SNS).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class NotificationChannelConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SnsChannelConfig Sns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotificationFilterConfig Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListOrganizationInsightsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ProactiveOrganizationInsightSummary[] ProactiveInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReactiveOrganizationInsightSummary[] ReactiveInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Details about a proactive insight. This object is returned by <code>DescribeInsight</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProactiveOrganizationInsightSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OrganizationalUnitId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightSeverity Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyStatus Status { get; set; }
		
		/// <summary>
		///  A time ranged that specifies when the observed behavior in an insight started and ended. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InsightTimeRange InsightTimeRange { get; set; }
		
		/// <summary>
		///  The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PredictionTimeRange PredictionTimeRange { get; set; }
		
		/// <summary>
		///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollection ResourceCollection { get; set; }
		
		/// <summary>
		/// A collection of the names of Amazon Web Services services.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServiceCollection ServiceCollection { get; set; }
	}
	
	/// <summary>
	/// Information about a reactive insight. This object is returned by <code>DescribeInsight</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ReactiveOrganizationInsightSummary
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string OrganizationalUnitId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightSeverity Severity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AnomalyStatus Status { get; set; }
		
		/// <summary>
		///  A time ranged that specifies when the observed behavior in an insight started and ended. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public InsightTimeRange InsightTimeRange { get; set; }
		
		/// <summary>
		///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollection ResourceCollection { get; set; }
		
		/// <summary>
		/// A collection of the names of Amazon Web Services services.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServiceCollection ServiceCollection { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListRecommendationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Recommendation[] Recommendations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Recommendation information to help you remediate detected anomalous behavior that generated an insight. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Recommendation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Link { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Reason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationRelatedEvent[] RelatedEvents { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationRelatedAnomaly[] RelatedAnomalies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Category { get; set; }
	}
	
	/// <summary>
	///  Information about an event that is related to a recommendation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RecommendationRelatedEvent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationRelatedEventResource[] Resources { get; set; }
	}
	
	/// <summary>
	///  Information about an Amazon Web Services resource that emitted and event that is related to a recommendation in an insight. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RecommendationRelatedEventResource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
	}
	
	/// <summary>
	///  Information about an anomaly that is related to a recommendation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RecommendationRelatedAnomaly
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationRelatedAnomalyResource[] Resources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationRelatedAnomalySourceDetail[] SourceDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AnomalyId { get; set; }
	}
	
	/// <summary>
	///  Information about a resource in which DevOps Guru detected anomalous behavior. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RecommendationRelatedAnomalyResource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Type { get; set; }
	}
	
	/// <summary>
	///  Contains an array of <code>RecommendationRelatedCloudWatchMetricsSourceDetail</code> objects that contain the name and namespace of an Amazon CloudWatch metric. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RecommendationRelatedAnomalySourceDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationRelatedCloudWatchMetricsSourceDetail[] CloudWatchMetrics { get; set; }
	}
	
	/// <summary>
	///  Information about an Amazon CloudWatch metric that is analyzed by DevOps Guru. It is one of many analyzed metrics that are used to generate insights. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RecommendationRelatedCloudWatchMetricsSourceDetail
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MetricName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Namespace { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PutFeedbackResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RemoveNotificationChannelResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SearchInsightsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ProactiveInsightSummary[] ProactiveInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReactiveInsightSummary[] ReactiveInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum InsightStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ONGOING")]
		ONGOING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CLOSED")]
		CLOSED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SearchOrganizationInsightsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ProactiveInsightSummary[] ProactiveInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReactiveInsightSummary[] ReactiveInsights { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class StartCostEstimationResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateEventSourcesConfigResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateResourceCollectionResponse
	{
	}
	
	/// <summary>
	///  Contains the names of Amazon Web Services CloudFormation stacks used to update a collection of stacks. You can specify up to 500 Amazon Web Services CloudFormation stacks.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateCloudFormationCollectionFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] StackNames { get; set; }
	}
	
	/// <summary>
	/// A new collection of Amazon Web Services resources that are defined by an Amazon Web Services tag or tag <i>key</i>/<i>value</i> pair.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateTagCollectionFilter
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string AppBoundaryKey { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] TagValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateServiceIntegrationResponse
	{
	}
	
	/// <summary>
	///  Information about whether DevOps Guru is configured to create an OpsItem in Amazon Web Services Systems Manager OpsCenter for each created insight. You can use this to update the configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class OpsCenterIntegrationConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EventSourceOptInStatus OptInStatus { get; set; }
	}
	
	/// <summary>
	///  Information about the integration of DevOps Guru with CloudWatch log groups for log anomaly detection. You can use this to update the configuration. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LogsAnomalyDetectionIntegrationConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EventSourceOptInStatus OptInStatus { get; set; }
	}
	
	/// <summary>
	///  Information about whether DevOps Guru is configured to encrypt server-side data using KMS. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class KMSServerSideEncryptionIntegrationConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string KMSKeyId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventSourceOptInStatus OptInStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServerSideEncryptionType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AddNotificationChannelRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public NotificationChannelConfig Config { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AnomalySeverity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="LOW")]
		LOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MEDIUM")]
		MEDIUM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="HIGH")]
		HIGH = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteInsightRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeAccountHealthRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeAccountOverviewRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset FromTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ToTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeAnomalyRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeEventSourcesConfigRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeFeedbackRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InsightId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeInsightRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeOrganizationHealthRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AccountIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OrganizationalUnitIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeOrganizationOverviewRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset FromTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ToTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AccountIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OrganizationalUnitIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum OrganizationResourceCollectionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWS_CLOUD_FORMATION")]
		AWS_CLOUD_FORMATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWS_SERVICE")]
		AWS_SERVICE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWS_ACCOUNT")]
		AWS_ACCOUNT = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWS_TAGS")]
		AWS_TAGS = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeOrganizationResourceCollectionHealthRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OrganizationResourceCollectionType OrganizationResourceCollectionType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AccountIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OrganizationalUnitIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum ResourceCollectionType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWS_CLOUD_FORMATION")]
		AWS_CLOUD_FORMATION = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWS_SERVICE")]
		AWS_SERVICE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="AWS_TAGS")]
		AWS_TAGS = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeResourceCollectionHealthRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeServiceIntegrationRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetCostEstimationRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetResourceCollectionRequest
	{
	}
	
	/// <summary>
	///  Specifies if DevOps Guru is enabled to create an Amazon Web Services Systems Manager OpsItem for each created insight. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum OptInStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ENABLED")]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DISABLED")]
		DISABLED = 1,
	}
	
	/// <summary>
	///  Specifies one or more service names that are used to list anomalies. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListAnomaliesForInsightFilters
	{
		
		/// <summary>
		/// A collection of the names of Amazon Web Services services.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServiceCollection ServiceCollection { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListAnomaliesForInsightRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public StartTimeRange StartTimeRange { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListAnomaliesForInsightFilters Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListAnomalousLogGroupsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InsightId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Filters you can use to specify which events are returned when <code>ListEvents</code> is called. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListEventsFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InsightId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventTimeRange EventTimeRange { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventClass EventClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EventSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventDataSource DataSource { get; set; }
		
		/// <summary>
		///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollection ResourceCollection { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListEventsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ListEventsFilters Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
	}
	
	/// <summary>
	///  A filter used by <code>ListInsights</code> to specify which insights to return. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListInsightsStatusFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListInsightsOngoingStatusFilter Ongoing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListInsightsClosedStatusFilter Closed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListInsightsAnyStatusFilter Any { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListInsightsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ListInsightsStatusFilter StatusFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  Filters to determine which monitored resources you want to retrieve. You can filter by resource type or resource permission status. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListMonitoredResourcesFilters
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission ResourcePermission { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ResourceTypeFilter[] ResourceTypeFilters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListMonitoredResourcesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListMonitoredResourcesFilters Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListNotificationChannelsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListOrganizationInsightsRequest
	{
		
		/// <summary>
		///  A filter used by <code>ListInsights</code> to specify which insights to return. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ListInsightsStatusFilter StatusFilter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AccountIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] OrganizationalUnitIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum Locale
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DE_DE")]
		DE_DE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EN_US")]
		EN_US = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="EN_GB")]
		EN_GB = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ES_ES")]
		ES_ES = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FR_FR")]
		FR_FR = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="IT_IT")]
		IT_IT = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="JA_JP")]
		JA_JP = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="KO_KR")]
		KO_KR = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PT_BR")]
		PT_BR = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ZH_CN")]
		ZH_CN = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ZH_TW")]
		ZH_TW = 10,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListRecommendationsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InsightId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Locale Locale { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PutFeedbackRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InsightFeedback InsightFeedback { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RemoveNotificationChannelRequest
	{
	}
	
	/// <summary>
	/// Specifies values used to filter responses when searching for insights. You can use a <code>ResourceCollection</code>, <code>ServiceCollection</code>, array of severities, and an array of status values. Each filter type contains one or more values to search for. If you specify multiple filter types, the filter types are joined with an <code>AND</code>, and the request returns only results that match all of the specified filters.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SearchInsightsFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InsightSeverity[] Severities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightStatus[] Statuses { get; set; }
		
		/// <summary>
		///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollection ResourceCollection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceCollection ServiceCollection { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SearchInsightsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartTimeRange StartTimeRange { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SearchInsightsFilters Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InsightType Type { get; set; }
	}
	
	/// <summary>
	///  Filters you can use to specify which events are returned when <code>ListEvents</code> is called. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SearchOrganizationInsightsFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InsightSeverity[] Severities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightStatus[] Statuses { get; set; }
		
		/// <summary>
		///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollection ResourceCollection { get; set; }
		
		/// <summary>
		/// A collection of the names of Amazon Web Services services.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServiceCollection ServiceCollection { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SearchOrganizationInsightsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] AccountIds { get; set; }
		
		/// <summary>
		///  A time range used to specify when the behavior of an insight or anomaly started. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartTimeRange StartTimeRange { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SearchOrganizationInsightsFilters Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InsightType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class StartCostEstimationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CostEstimationResourceCollectionFilter ResourceCollection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ClientToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateEventSourcesConfigRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EventSourcesConfig EventSources { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum UpdateResourceCollectionAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ADD")]
		ADD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="REMOVE")]
		REMOVE = 1,
	}
	
	/// <summary>
	///  Contains information used to update a collection of Amazon Web Services resources. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateResourceCollectionFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateCloudFormationCollectionFilter CloudFormation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateTagCollectionFilter[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateResourceCollectionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateResourceCollectionAction Action { get; set; }
		
		/// <summary>
		///  Contains information used to update a collection of Amazon Web Services resources. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateResourceCollectionFilter ResourceCollection { get; set; }
	}
	
	/// <summary>
	///  Information about updating the integration status of an Amazon Web Services service, such as Amazon Web Services Systems Manager, with DevOps Guru. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateServiceIntegrationConfig
	{
		
		/// <summary>
		///  Information about whether DevOps Guru is configured to create an OpsItem in Amazon Web Services Systems Manager OpsCenter for each created insight. You can use this to update the configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OpsCenterIntegrationConfig OpsCenter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogsAnomalyDetectionIntegrationConfig LogsAnomalyDetection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KMSServerSideEncryptionIntegrationConfig KMSServerSideEncryption { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateServiceIntegrationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateServiceIntegrationConfig ServiceIntegration { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p> Adds a notification channel to DevOps Guru. A notification channel is used to notify you about important DevOps Guru events, such as when an insight is generated. </p> <p>If you use an Amazon SNS topic in another account, you must attach a policy to it that grants DevOps Guru permission to send it notifications. DevOps Guru adds the required policy on your behalf to send notifications using Amazon SNS in your account. DevOps Guru only supports standard SNS topics. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-required-permissions.html">Permissions for Amazon SNS topics</a>.</p> <p>If you use an Amazon SNS topic that is encrypted by an Amazon Web Services Key Management Service customer-managed key (CMK), then you must add permissions to the CMK. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-kms-permissions.html">Permissions for Amazon Web Services KMSâ€“encrypted Amazon SNS topics</a>.</p>
		/// AddNotificationChannel channels
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AddNotificationChannelResponse> AddNotificationChannelAsync(AddNotificationChannelPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "channels";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<AddNotificationChannelResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of notification channels configured for DevOps Guru. Each notification channel is used to notify you when DevOps Guru generates an insight that contains information about how to improve your operations. The one supported notification channel is Amazon Simple Notification Service (Amazon SNS).
		/// ListNotificationChannels channels
		/// </summary>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListNotificationChannelsResponse> ListNotificationChannelsAsync(string NextToken, ListNotificationChannelsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "channels?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListNotificationChannelsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes the insight along with the associated anomalies, events and recommendations.
		/// DeleteInsight insights/{Id}
		/// </summary>
		/// <param name="Id">The ID of the insight.</param>
		/// <returns>Success</returns>
		public async Task<DeleteInsightResponse> DeleteInsightAsync(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "insights/"+ (Id==null? "" : System.Uri.EscapeDataString(Id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteInsightResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns details about an insight that you specify using its ID.
		/// DescribeInsight insights/{Id}
		/// </summary>
		/// <param name="Id"> The ID of the insight. </param>
		/// <param name="AccountId">The ID of the member account in the organization.</param>
		/// <returns>Success</returns>
		public async Task<DescribeInsightResponse> DescribeInsightAsync(string Id, string AccountId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "insights/"+ (Id==null? "" : System.Uri.EscapeDataString(Id))+"&AccountId=" + (AccountId==null? "" : System.Uri.EscapeDataString(AccountId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeInsightResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the number of open reactive insights, the number of open proactive insights, and the number of metrics analyzed in your Amazon Web Services account. Use these numbers to gauge the health of operations in your Amazon Web Services account.
		/// DescribeAccountHealth accounts/health
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeAccountHealthResponse> DescribeAccountHealthAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/health";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeAccountHealthResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// For the time range passed in, returns the number of open reactive insight that were created, the number of open proactive insights that were created, and the Mean Time to Recover (MTTR) for all closed reactive insights.
		/// DescribeAccountOverview accounts/overview
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeAccountOverviewResponse> DescribeAccountOverviewAsync(DescribeAccountOverviewPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/overview";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeAccountOverviewResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns details about an anomaly that you specify using its ID.
		/// DescribeAnomaly anomalies/{Id}
		/// </summary>
		/// <param name="Id"> The ID of the anomaly. </param>
		/// <param name="AccountId">The ID of the member account.</param>
		/// <returns>Success</returns>
		public async Task<DescribeAnomalyResponse> DescribeAnomalyAsync(string Id, string AccountId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "anomalies/"+ (Id==null? "" : System.Uri.EscapeDataString(Id))+"&AccountId=" + (AccountId==null? "" : System.Uri.EscapeDataString(AccountId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeAnomalyResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the integration status of services that are integrated with DevOps Guru as Consumer via EventBridge. The one service that can be integrated with DevOps Guru is Amazon CodeGuru Profiler, which can produce proactive recommendations which can be stored and viewed in DevOps Guru.
		/// DescribeEventSourcesConfig event-sources
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeEventSourcesConfigResponse> DescribeEventSourcesConfigAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "event-sources";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeEventSourcesConfigResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Enables or disables integration with a service that can be integrated with DevOps Guru. The one service that can be integrated with DevOps Guru is Amazon CodeGuru Profiler, which can produce proactive recommendations which can be stored and viewed in DevOps Guru.
		/// UpdateEventSourcesConfig event-sources
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateEventSourcesConfigResponse> UpdateEventSourcesConfigAsync(UpdateEventSourcesConfigPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "event-sources";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateEventSourcesConfigResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns the most recent feedback submitted in the current Amazon Web Services account and Region.
		/// DescribeFeedback feedback
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeFeedbackResponse> DescribeFeedbackAsync(DescribeFeedbackPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "feedback";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeFeedbackResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Collects customer feedback about the specified insight.
		/// PutFeedback feedback
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutFeedbackResponse> PutFeedbackAsync(PutFeedbackPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "feedback";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<PutFeedbackResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns active insights, predictive insights, and resource hours analyzed in last hour.
		/// DescribeOrganizationHealth organization/health
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeOrganizationHealthResponse> DescribeOrganizationHealthAsync(DescribeOrganizationHealthPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "organization/health";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeOrganizationHealthResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns an overview of your organization's history based on the specified time range. The overview includes the total reactive and proactive insights.
		/// DescribeOrganizationOverview organization/overview
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeOrganizationOverviewResponse> DescribeOrganizationOverviewAsync(DescribeOrganizationOverviewPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "organization/overview";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeOrganizationOverviewResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Provides an overview of your system's health. If additional member accounts are part of your organization, you can filter those accounts using the <code>AccountIds</code> field.
		/// DescribeOrganizationResourceCollectionHealth organization/health/resource-collection
		/// </summary>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeOrganizationResourceCollectionHealthResponse> DescribeOrganizationResourceCollectionHealthAsync(string NextToken, DescribeOrganizationResourceCollectionHealthPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "organization/health/resource-collection?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeOrganizationResourceCollectionHealthResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns the number of open proactive insights, open reactive insights, and the Mean Time to Recover (MTTR) for all closed insights in resource collections in your account. You specify the type of Amazon Web Services resources collection. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks.
		/// DescribeResourceCollectionHealth accounts/health/resource-collection/{ResourceCollectionType}
		/// </summary>
		/// <param name="ResourceCollectionType"> An Amazon Web Services resource collection type. This type specifies how analyzed Amazon Web Services resources are defined. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. </param>
		/// <param name="NextToken">The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</param>
		/// <returns>Success</returns>
		public async Task<DescribeResourceCollectionHealthResponse> DescribeResourceCollectionHealthAsync(ResourceCollectionType ResourceCollectionType, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "accounts/health/resource-collection/"+ResourceCollectionType+"?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeResourceCollectionHealthResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns the integration status of services that are integrated with DevOps Guru. The one service that can be integrated with DevOps Guru is Amazon Web Services Systems Manager, which can be used to create an OpsItem for each generated insight.
		/// DescribeServiceIntegration service-integrations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DescribeServiceIntegrationResponse> DescribeServiceIntegrationAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "service-integrations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeServiceIntegrationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Enables or disables integration with a service that can be integrated with DevOps Guru. The one service that can be integrated with DevOps Guru is Amazon Web Services Systems Manager, which can be used to create an OpsItem for each generated insight.
		/// UpdateServiceIntegration service-integrations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateServiceIntegrationResponse> UpdateServiceIntegrationAsync(UpdateServiceIntegrationPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "service-integrations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateServiceIntegrationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns an estimate of the monthly cost for DevOps Guru to analyze your Amazon Web Services resources. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/cost-estimate.html">Estimate your Amazon DevOps Guru costs</a> and <a href="http://aws.amazon.com/devops-guru/pricing/">Amazon DevOps Guru pricing</a>.
		/// GetCostEstimation cost-estimation
		/// </summary>
		/// <param name="NextToken">The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</param>
		/// <returns>Success</returns>
		public async Task<GetCostEstimationResponse> GetCostEstimationAsync(string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "cost-estimation?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetCostEstimationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Starts the creation of an estimate of the monthly cost to analyze your Amazon Web Services resources.
		/// StartCostEstimation cost-estimation
		/// </summary>
		/// <returns>Success</returns>
		public async Task<StartCostEstimationResponse> StartCostEstimationAsync(StartCostEstimationPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "cost-estimation";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<StartCostEstimationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns lists Amazon Web Services resources that are of the specified resource collection type. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks.
		/// GetResourceCollection resource-collections/{ResourceCollectionType}
		/// </summary>
		/// <param name="ResourceCollectionType"> The type of Amazon Web Services resource collections to return. The one valid value is <code>CLOUD_FORMATION</code> for Amazon Web Services CloudFormation stacks. </param>
		/// <param name="NextToken">The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.</param>
		/// <returns>Success</returns>
		public async Task<GetResourceCollectionResponse> GetResourceCollectionAsync(ResourceCollectionType ResourceCollectionType, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "resource-collections/"+ResourceCollectionType+"?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetResourceCollectionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of the anomalies that belong to an insight that you specify using its ID.
		/// ListAnomaliesForInsight anomalies/insight/{InsightId}
		/// </summary>
		/// <param name="InsightId"> The ID of the insight. The returned anomalies belong to this insight. </param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListAnomaliesForInsightResponse> ListAnomaliesForInsightAsync(string InsightId, string MaxResults, string NextToken, ListAnomaliesForInsightPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "anomalies/insight/"+ (InsightId==null? "" : System.Uri.EscapeDataString(InsightId))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListAnomaliesForInsightResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns the list of log groups that contain log anomalies.
		/// ListAnomalousLogGroups list-log-anomalies
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListAnomalousLogGroupsResponse> ListAnomalousLogGroupsAsync(string MaxResults, string NextToken, ListAnomalousLogGroupsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "list-log-anomalies?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListAnomalousLogGroupsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of the events emitted by the resources that are evaluated by DevOps Guru. You can use filters to specify which events are returned.
		/// ListEvents events
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListEventsResponse> ListEventsAsync(string MaxResults, string NextToken, ListEventsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "events?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListEventsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of insights in your Amazon Web Services account. You can specify which insights are returned by their start time and status (<code>ONGOING</code>, <code>CLOSED</code>, or <code>ANY</code>).
		/// ListInsights insights
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListInsightsResponse> ListInsightsAsync(string MaxResults, string NextToken, ListInsightsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "insights?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListInsightsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns the list of all log groups that are being monitored and tagged by DevOps Guru.
		/// ListMonitoredResources monitoredResources
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListMonitoredResourcesResponse> ListMonitoredResourcesAsync(string MaxResults, string NextToken, ListMonitoredResourcesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "monitoredResources?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListMonitoredResourcesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of insights associated with the account or OU Id.
		/// ListOrganizationInsights organization/insights
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListOrganizationInsightsResponse> ListOrganizationInsightsAsync(string MaxResults, string NextToken, ListOrganizationInsightsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "organization/insights?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListOrganizationInsightsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns a list of a specified insight's recommendations. Each recommendation includes a list of related metrics and a list of related events.
		/// ListRecommendations recommendations
		/// </summary>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListRecommendationsResponse> ListRecommendationsAsync(string NextToken, ListRecommendationsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "recommendations?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListRecommendationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Removes a notification channel from DevOps Guru. A notification channel is used to notify you when DevOps Guru generates an insight that contains information about how to improve your operations.
		/// RemoveNotificationChannel channels/{Id}
		/// </summary>
		/// <param name="Id"> The ID of the notification channel to be removed. </param>
		/// <returns>Success</returns>
		public async Task<RemoveNotificationChannelResponse> RemoveNotificationChannelAsync(string Id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "channels/"+ (Id==null? "" : System.Uri.EscapeDataString(Id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<RemoveNotificationChannelResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p> Returns a list of insights in your Amazon Web Services account. You can specify which insights are returned by their start time, one or more statuses (<code>ONGOING</code> or <code>CLOSED</code>), one or more severities (<code>LOW</code>, <code>MEDIUM</code>, and <code>HIGH</code>), and type (<code>REACTIVE</code> or <code>PROACTIVE</code>). </p> <p> Use the <code>Filters</code> parameter to specify status and severity search parameters. Use the <code>Type</code> parameter to specify <code>REACTIVE</code> or <code>PROACTIVE</code> in your search. </p>
		/// SearchInsights insights/search
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchInsightsResponse> SearchInsightsAsync(string MaxResults, string NextToken, SearchInsightsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "insights/search?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<SearchInsightsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p> Returns a list of insights in your organization. You can specify which insights are returned by their start time, one or more statuses (<code>ONGOING</code>, <code>CLOSED</code>, and <code>CLOSED</code>), one or more severities (<code>LOW</code>, <code>MEDIUM</code>, and <code>HIGH</code>), and type (<code>REACTIVE</code> or <code>PROACTIVE</code>). </p> <p> Use the <code>Filters</code> parameter to specify status and severity search parameters. Use the <code>Type</code> parameter to specify <code>REACTIVE</code> or <code>PROACTIVE</code> in your search. </p>
		/// SearchOrganizationInsights organization/insights/search
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<SearchOrganizationInsightsResponse> SearchOrganizationInsightsAsync(string MaxResults, string NextToken, SearchOrganizationInsightsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "organization/insights/search?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<SearchOrganizationInsightsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates the collection of resources that DevOps Guru analyzes. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. This method also creates the IAM role required for you to use DevOps Guru.
		/// UpdateResourceCollection resource-collections
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateResourceCollectionResponse> UpdateResourceCollectionAsync(UpdateResourceCollectionPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "resource-collections";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateResourceCollectionResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
	
	public class AddNotificationChannelPutBody
	{
		
		/// <summary>
		///  Information about notification channels you have configured with DevOps Guru. The one supported notification channel is Amazon Simple Notification Service (Amazon SNS).
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AddNotificationChannelPutBodyConfig Config { get; set; }
	}
	
	public class AddNotificationChannelPutBodyConfig
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SnsChannelConfig Sns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public NotificationFilterConfig Filters { get; set; }
	}
	
	public class ListNotificationChannelsPostBody
	{
		
		/// <summary>
		/// The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.
		/// Max length: 36
		/// Min length: 36
		/// Pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(36)]
		[System.ComponentModel.DataAnnotations.MaxLength(36)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$")]
		public string NextToken { get; set; }
	}
	
	public class DescribeAccountOverviewPostBody
	{
		
		/// <summary>
		///  The start of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred after this day. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset FromTime { get; set; }
		
		/// <summary>
		///  The end of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred before this day. If this is not specified, then the current day is used. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ToTime { get; set; }
	}
	
	public class UpdateEventSourcesConfigPutBody
	{
		
		/// <summary>
		/// Information about the integration of DevOps Guru as consumer with another AWS service, such as AWS CodeGuru Profiler via EventBridge.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateEventSourcesConfigPutBodyEventSources EventSources { get; set; }
	}
	
	public class UpdateEventSourcesConfigPutBodyEventSources
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AmazonCodeGuruProfilerIntegration AmazonCodeGuruProfiler { get; set; }
	}
	
	public class DescribeFeedbackPostBody
	{
		
		/// <summary>
		///  The ID of the insight for which the feedback was provided. 
		/// Max length: 100
		/// Min length: 1
		/// Pattern: ^[\w-]*$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[\w-]*$")]
		public string InsightId { get; set; }
	}
	
	public class PutFeedbackPutBody
	{
		
		/// <summary>
		///  Information about insight feedback received from a customer. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PutFeedbackPutBodyInsightFeedback InsightFeedback { get; set; }
	}
	
	public class PutFeedbackPutBodyInsightFeedback
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightFeedbackOption Feedback { get; set; }
	}
	
	public class DescribeOrganizationHealthPostBody
	{
		
		/// <summary>
		/// The ID of the Amazon Web Services account.
		/// Minimum items: 0
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public string[] AccountIds { get; set; }
		
		/// <summary>
		/// The ID of the organizational unit.
		/// Minimum items: 0
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public string[] OrganizationalUnitIds { get; set; }
	}
	
	public class DescribeOrganizationOverviewPostBody
	{
		
		/// <summary>
		///  The start of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred after this day. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset FromTime { get; set; }
		
		/// <summary>
		///  The end of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred before this day. If this is not specified, then the current day is used. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.DateTimeOffset> ToTime { get; set; }
		
		/// <summary>
		/// The ID of the Amazon Web Services account.
		/// Minimum items: 0
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public string[] AccountIds { get; set; }
		
		/// <summary>
		/// The ID of the organizational unit.
		/// Minimum items: 0
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public string[] OrganizationalUnitIds { get; set; }
	}
	
	public class DescribeOrganizationResourceCollectionHealthPostBody
	{
		
		/// <summary>
		///  An Amazon Web Services resource collection type. This type specifies how analyzed Amazon Web Services resources are defined. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OrganizationResourceCollectionType OrganizationResourceCollectionType { get; set; }
		
		/// <summary>
		/// The ID of the Amazon Web Services account.
		/// Minimum items: 0
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public string[] AccountIds { get; set; }
		
		/// <summary>
		/// The ID of the organizational unit.
		/// Minimum items: 0
		/// Maximum items: 5
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(5)]
		public string[] OrganizationalUnitIds { get; set; }
		
		/// <summary>
		/// The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.
		/// Max length: 36
		/// Min length: 36
		/// Pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(36)]
		[System.ComponentModel.DataAnnotations.MaxLength(36)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
		/// Minimum: 1
		/// Maximum: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 500)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	public class UpdateServiceIntegrationPutBody
	{
		
		/// <summary>
		///  Information about updating the integration status of an Amazon Web Services service, such as Amazon Web Services Systems Manager, with DevOps Guru. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateServiceIntegrationPutBodyServiceIntegration ServiceIntegration { get; set; }
	}
	
	public class UpdateServiceIntegrationPutBodyServiceIntegration
	{
		
		/// <summary>
		///  Information about whether DevOps Guru is configured to create an OpsItem in Amazon Web Services Systems Manager OpsCenter for each created insight. You can use this to update the configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public OpsCenterIntegrationConfig OpsCenter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public LogsAnomalyDetectionIntegrationConfig LogsAnomalyDetection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KMSServerSideEncryptionIntegrationConfig KMSServerSideEncryption { get; set; }
	}
	
	public class StartCostEstimationPutBody
	{
		
		/// <summary>
		/// Information about a filter used to specify which Amazon Web Services resources are analyzed to create a monthly DevOps Guru cost estimate. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/cost-estimate.html">Estimate your Amazon DevOps Guru costs</a> and <a href="http://aws.amazon.com/devops-guru/pricing/">Amazon DevOps Guru pricing</a>. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public StartCostEstimationPutBodyResourceCollection ResourceCollection { get; set; }
		
		/// <summary>
		/// The idempotency token used to identify each cost estimate request.
		/// Max length: 100
		/// Min length: 1
		/// Pattern: ^[a-zA-Z0-9]+[a-zA-Z0-9-]*$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-zA-Z0-9]+[a-zA-Z0-9-]*$")]
		public string ClientToken { get; set; }
	}
	
	public class StartCostEstimationPutBodyResourceCollection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CloudFormationCostEstimationResourceCollectionFilter CloudFormation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagCostEstimationResourceCollectionFilter[] Tags { get; set; }
	}
	
	public class ListAnomaliesForInsightPostBody
	{
		
		/// <summary>
		///  A time range used to specify when the behavior of an insight or anomaly started. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ListAnomaliesForInsightPostBodyStartTimeRange StartTimeRange { get; set; }
		
		/// <summary>
		/// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
		/// Minimum: 1
		/// Maximum: 500
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 500)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.
		/// Max length: 36
		/// Min length: 36
		/// Pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(36)]
		[System.ComponentModel.DataAnnotations.MaxLength(36)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The ID of the Amazon Web Services account. 
		/// Max length: 12
		/// Min length: 12
		/// Pattern: ^\d{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(12)]
		[System.ComponentModel.DataAnnotations.MaxLength(12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{12}$")]
		public string AccountId { get; set; }
		
		/// <summary>
		///  Specifies one or more service names that are used to list anomalies. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ListAnomaliesForInsightPostBodyFilters Filters { get; set; }
	}
	
	public class ListAnomaliesForInsightPostBodyStartTimeRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset FromTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ToTime { get; set; }
	}
	
	public class ListAnomaliesForInsightPostBodyFilters
	{
		
		/// <summary>
		/// A collection of the names of Amazon Web Services services.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServiceCollection ServiceCollection { get; set; }
	}
	
	public class ListAnomalousLogGroupsPostBody
	{
		
		/// <summary>
		///  The ID of the insight containing the log groups. 
		/// Required
		/// Max length: 100
		/// Min length: 1
		/// Pattern: ^[\w-]*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[\w-]*$")]
		public string InsightId { get; set; }
		
		/// <summary>
		/// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
		/// Minimum: 1
		/// Maximum: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 200)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.
		/// Max length: 36
		/// Min length: 36
		/// Pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(36)]
		[System.ComponentModel.DataAnnotations.MaxLength(36)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$")]
		public string NextToken { get; set; }
	}
	
	public class ListEventsPostBody
	{
		
		/// <summary>
		///  Filters you can use to specify which events are returned when <code>ListEvents</code> is called. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ListEventsPostBodyFilters Filters { get; set; }
		
		/// <summary>
		/// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
		/// Minimum: 1
		/// Maximum: 200
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 200)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.
		/// Max length: 36
		/// Min length: 36
		/// Pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(36)]
		[System.ComponentModel.DataAnnotations.MaxLength(36)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The ID of the Amazon Web Services account. 
		/// Max length: 12
		/// Min length: 12
		/// Pattern: ^\d{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(12)]
		[System.ComponentModel.DataAnnotations.MaxLength(12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{12}$")]
		public string AccountId { get; set; }
	}
	
	public class ListEventsPostBodyFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InsightId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventTimeRange EventTimeRange { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventClass EventClass { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EventSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventDataSource DataSource { get; set; }
		
		/// <summary>
		///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollection ResourceCollection { get; set; }
	}
	
	public class ListInsightsPostBody
	{
		
		/// <summary>
		///  A filter used by <code>ListInsights</code> to specify which insights to return. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ListInsightsPostBodyStatusFilter StatusFilter { get; set; }
		
		/// <summary>
		/// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.
		/// Max length: 36
		/// Min length: 36
		/// Pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(36)]
		[System.ComponentModel.DataAnnotations.MaxLength(36)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$")]
		public string NextToken { get; set; }
	}
	
	public class ListInsightsPostBodyStatusFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListInsightsOngoingStatusFilter Ongoing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListInsightsClosedStatusFilter Closed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListInsightsAnyStatusFilter Any { get; set; }
	}
	
	public class ListMonitoredResourcesPostBody
	{
		
		/// <summary>
		///  Filters to determine which monitored resources you want to retrieve. You can filter by resource type or resource permission status. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ListMonitoredResourcesPostBodyFilters Filters { get; set; }
		
		/// <summary>
		/// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
		/// Minimum: 1
		/// Maximum: 50
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 50)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.
		/// Max length: 36
		/// Min length: 36
		/// Pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(36)]
		[System.ComponentModel.DataAnnotations.MaxLength(36)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$")]
		public string NextToken { get; set; }
	}
	
	public class ListMonitoredResourcesPostBodyFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ResourcePermission ResourcePermission { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ResourceTypeFilter[] ResourceTypeFilters { get; set; }
	}
	
	public class ListOrganizationInsightsPostBody
	{
		
		/// <summary>
		///  A filter used by <code>ListInsights</code> to specify which insights to return. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ListOrganizationInsightsPostBodyStatusFilter StatusFilter { get; set; }
		
		/// <summary>
		/// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The ID of the Amazon Web Services account. 
		/// Minimum items: 0
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public string[] AccountIds { get; set; }
		
		/// <summary>
		/// The ID of the organizational unit.
		/// Minimum items: 0
		/// Maximum items: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public string[] OrganizationalUnitIds { get; set; }
		
		/// <summary>
		/// The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.
		/// Max length: 36
		/// Min length: 36
		/// Pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(36)]
		[System.ComponentModel.DataAnnotations.MaxLength(36)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$")]
		public string NextToken { get; set; }
	}
	
	public class ListOrganizationInsightsPostBodyStatusFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListInsightsOngoingStatusFilter Ongoing { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListInsightsClosedStatusFilter Closed { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListInsightsAnyStatusFilter Any { get; set; }
	}
	
	public class ListRecommendationsPostBody
	{
		
		/// <summary>
		///  The ID of the requested insight. 
		/// Required
		/// Max length: 100
		/// Min length: 1
		/// Pattern: ^[\w-]*$
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(100)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[\w-]*$")]
		public string InsightId { get; set; }
		
		/// <summary>
		/// The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.
		/// Max length: 36
		/// Min length: 36
		/// Pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(36)]
		[System.ComponentModel.DataAnnotations.MaxLength(36)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$")]
		public string NextToken { get; set; }
		
		/// <summary>
		/// A locale that specifies the language to use for recommendations.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Locale Locale { get; set; }
		
		/// <summary>
		/// The ID of the Amazon Web Services account. 
		/// Max length: 12
		/// Min length: 12
		/// Pattern: ^\d{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(12)]
		[System.ComponentModel.DataAnnotations.MaxLength(12)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^\d{12}$")]
		public string AccountId { get; set; }
	}
	
	public class SearchInsightsPostBody
	{
		
		/// <summary>
		///  A time range used to specify when the behavior of an insight or anomaly started. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SearchInsightsPostBodyStartTimeRange StartTimeRange { get; set; }
		
		/// <summary>
		/// Specifies values used to filter responses when searching for insights. You can use a <code>ResourceCollection</code>, <code>ServiceCollection</code>, array of severities, and an array of status values. Each filter type contains one or more values to search for. If you specify multiple filter types, the filter types are joined with an <code>AND</code>, and the request returns only results that match all of the specified filters.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SearchInsightsPostBodyFilters Filters { get; set; }
		
		/// <summary>
		/// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.
		/// Max length: 36
		/// Min length: 36
		/// Pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(36)]
		[System.ComponentModel.DataAnnotations.MaxLength(36)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$")]
		public string NextToken { get; set; }
		
		/// <summary>
		///  The type of insights you are searching for (<code>REACTIVE</code> or <code>PROACTIVE</code>). 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InsightType Type { get; set; }
	}
	
	public class SearchInsightsPostBodyStartTimeRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset FromTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ToTime { get; set; }
	}
	
	public class SearchInsightsPostBodyFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InsightSeverity[] Severities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightStatus[] Statuses { get; set; }
		
		/// <summary>
		///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollection ResourceCollection { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ServiceCollection ServiceCollection { get; set; }
	}
	
	public class SearchOrganizationInsightsPostBody
	{
		
		/// <summary>
		/// The ID of the Amazon Web Services account. 
		/// Required
		/// Minimum items: 1
		/// Maximum items: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1)]
		public string[] AccountIds { get; set; }
		
		/// <summary>
		///  A time range used to specify when the behavior of an insight or anomaly started. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SearchOrganizationInsightsPostBodyStartTimeRange StartTimeRange { get; set; }
		
		/// <summary>
		///  Filters you can use to specify which events are returned when <code>ListEvents</code> is called. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SearchOrganizationInsightsPostBodyFilters Filters { get; set; }
		
		/// <summary>
		/// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.
		/// Max length: 36
		/// Min length: 36
		/// Pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(36)]
		[System.ComponentModel.DataAnnotations.MaxLength(36)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$")]
		public string NextToken { get; set; }
		
		/// <summary>
		///  The type of insights you are searching for (<code>REACTIVE</code> or <code>PROACTIVE</code>). 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public InsightType Type { get; set; }
	}
	
	public class SearchOrganizationInsightsPostBodyStartTimeRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset FromTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ToTime { get; set; }
	}
	
	public class SearchOrganizationInsightsPostBodyFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public InsightSeverity[] Severities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InsightStatus[] Statuses { get; set; }
		
		/// <summary>
		///  A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ResourceCollection ResourceCollection { get; set; }
		
		/// <summary>
		/// A collection of the names of Amazon Web Services services.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ServiceCollection ServiceCollection { get; set; }
	}
	
	public class UpdateResourceCollectionPutBody
	{
		
		/// <summary>
		///  Specifies if the resource collection in the request is added or deleted to the resource collection. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateResourceCollectionAction Action { get; set; }
		
		/// <summary>
		///  Contains information used to update a collection of Amazon Web Services resources. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateResourceCollectionPutBodyResourceCollection ResourceCollection { get; set; }
	}
	
	public class UpdateResourceCollectionPutBodyResourceCollection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateCloudFormationCollectionFilter CloudFormation { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateTagCollectionFilter[] Tags { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

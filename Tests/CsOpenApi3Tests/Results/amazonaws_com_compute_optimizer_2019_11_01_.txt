//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteRecommendationPreferencesResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteRecommendationPreferencesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resourceType")]
		public ResourceType ResourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scope")]
		public Scope Scope { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="recommendationPreferenceNames")]
		public RecommendationPreferenceName[] RecommendationPreferenceNames { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ResourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ec2Instance = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoScalingGroup = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EbsVolume = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LambdaFunction = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotApplicable = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EcsService = 5,
	}
	
	/// <summary>
	/// <p>Describes the scope of a recommendation preference.</p> <p>Recommendation preferences can be created at the organization level (for management accounts of an organization only), account level, and resource level. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/enhanced-infrastructure-metrics.html">Activating enhanced infrastructure metrics</a> in the <i>Compute Optimizer User Guide</i>.</p> <note> <p>You cannot create recommendation preferences for Auto Scaling groups at the organization and account levels. You can create recommendation preferences for Auto Scaling groups only at the resource level by specifying a scope name of <code>ResourceArn</code> and a scope value of the Auto Scaling group Amazon Resource Name (ARN). This will configure the preference for all instances that are part of the specified Auto Scaling group. You also cannot create recommendation preferences at the resource level for instances that are part of an Auto Scaling group. You can create recommendation preferences at the resource level only for standalone instances.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Scope
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public ScopeName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ScopeName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Organization = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AccountId = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceArn = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum RecommendationPreferenceName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EnhancedInfrastructureMetrics = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InferredWorkloadTypes = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExternalMetricsPreference = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class OptInRequiredException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InternalServerException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServiceUnavailableException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InvalidParameterValueException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class MissingAuthenticationToken
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ThrottlingException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeRecommendationExportJobsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="recommendationExportJobs")]
		public RecommendationExportJob[] RecommendationExportJobs { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// <p>Describes a recommendation export job.</p> <p>Use the <a>DescribeRecommendationExportJobs</a> action to view your recommendation export jobs.</p> <p>Use the <a>ExportAutoScalingGroupRecommendations</a> or <a>ExportEC2InstanceRecommendations</a> actions to request an export of your recommendations.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RecommendationExportJob
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="destination")]
		public ExportDestination Destination { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resourceType")]
		public ResourceType ResourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public JobStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="creationTimestamp")]
		public System.DateTimeOffset CreationTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedTimestamp")]
		public System.DateTimeOffset LastUpdatedTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="failureReason")]
		public string FailureReason { get; set; }
	}
	
	/// <summary>
	/// Describes the destination of the recommendations export and metadata files.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ExportDestination
	{
		
		[System.Runtime.Serialization.DataMember(Name="s3")]
		public S3Destination S3 { get; set; }
	}
	
	/// <summary>
	/// Describes the destination Amazon Simple Storage Service (Amazon S3) bucket name and object keys of a recommendations export file, and its associated metadata file.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class S3Destination
	{
		
		[System.Runtime.Serialization.DataMember(Name="bucket")]
		public string Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="metadataKey")]
		public string MetadataKey { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum JobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Queued = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Complete = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DescribeRecommendationExportJobsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobIds")]
		public string[] JobIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public JobFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	/// <summary>
	/// <p>Describes a filter that returns a more specific list of recommendation export jobs. Use this filter with the <a>DescribeRecommendationExportJobs</a> action.</p> <p>You can use <code>EBSFilter</code> with the <a>GetEBSVolumeRecommendations</a> action, <code>LambdaFunctionRecommendationFilter</code> with the <a>GetLambdaFunctionRecommendations</a> action, and <code>Filter</code> with the <a>GetAutoScalingGroupRecommendations</a> and <a>GetEC2InstanceRecommendations</a> actions.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class JobFilter
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public JobFilterName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum JobFilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ResourceType = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JobStatus = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ExportAutoScalingGroupRecommendationsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3Destination")]
		public S3Destination S3Destination { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ExportAutoScalingGroupRecommendationsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="accountIds")]
		public string[] AccountIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fieldsToExport")]
		public ExportableAutoScalingGroupField[] FieldsToExport { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="s3DestinationConfig")]
		public S3DestinationConfig S3DestinationConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fileFormat")]
		public FileFormat FileFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="includeMemberAccounts")]
		public System.Nullable<System.Boolean> IncludeMemberAccounts { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendationPreferences")]
		public RecommendationPreferences RecommendationPreferences { get; set; }
	}
	
	/// <summary>
	/// <p>Describes a filter that returns a more specific list of recommendations. Use this filter with the <a>GetAutoScalingGroupRecommendations</a> and <a>GetEC2InstanceRecommendations</a> actions.</p> <p>You can use <code>EBSFilter</code> with the <a>GetEBSVolumeRecommendations</a> action, <code>LambdaFunctionRecommendationFilter</code> with the <a>GetLambdaFunctionRecommendations</a> action, and <code>JobFilter</code> with the <a>DescribeRecommendationExportJobs</a> action.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Filter
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public FilterName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum FilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Finding = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FindingReasonCodes = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationSourceType = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InferredWorkloadTypes = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ExportableAutoScalingGroupField
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AccountId = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoScalingGroupArn = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoScalingGroupName = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Finding = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsCpuMaximum = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsMemoryMaximum = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsEbsReadOpsPerSecondMaximum = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsEbsWriteOpsPerSecondMaximum = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsEbsReadBytesPerSecondMaximum = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsEbsWriteBytesPerSecondMaximum = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsDiskReadOpsPerSecondMaximum = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsDiskWriteOpsPerSecondMaximum = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsDiskReadBytesPerSecondMaximum = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsDiskWriteBytesPerSecondMaximum = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsNetworkInBytesPerSecondMaximum = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsNetworkOutBytesPerSecondMaximum = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsNetworkPacketsInPerSecondMaximum = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsNetworkPacketsOutPerSecondMaximum = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LookbackPeriodInDays = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentConfigurationInstanceType = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentConfigurationDesiredCapacity = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentConfigurationMinSize = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentConfigurationMaxSize = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentOnDemandPrice = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentStandardOneYearNoUpfrontReservedPrice = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentStandardThreeYearNoUpfrontReservedPrice = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentVCpus = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentMemory = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentStorage = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentNetwork = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsConfigurationInstanceType = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsConfigurationDesiredCapacity = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsConfigurationMinSize = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsConfigurationMaxSize = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsProjectedUtilizationMetricsCpuMaximum = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsProjectedUtilizationMetricsMemoryMaximum = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsPerformanceRisk = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsOnDemandPrice = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsStandardOneYearNoUpfrontReservedPrice = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsStandardThreeYearNoUpfrontReservedPrice = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsVcpus = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsMemory = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsStorage = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsNetwork = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LastRefreshTimestamp = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentPerformanceRisk = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsSavingsOpportunityPercentage = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsEstimatedMonthlySavingsCurrency = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsEstimatedMonthlySavingsValue = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EffectiveRecommendationPreferencesCpuVendorArchitectures = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EffectiveRecommendationPreferencesEnhancedInfrastructureMetrics = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EffectiveRecommendationPreferencesInferredWorkloadTypes = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InferredWorkloadTypes = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsMigrationEffort = 53,
	}
	
	/// <summary>
	/// <p>Describes the destination Amazon Simple Storage Service (Amazon S3) bucket name and key prefix for a recommendations export job.</p> <p>You must create the destination Amazon S3 bucket for your recommendations export before you create the export job. Compute Optimizer does not create the S3 bucket for you. After you create the S3 bucket, ensure that it has the required permission policy to allow Compute Optimizer to write the export file to it. If you plan to specify an object prefix when you create the export job, you must include the object prefix in the policy that you add to the S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/create-s3-bucket-policy-for-compute-optimizer.html">Amazon S3 Bucket Policy for Compute Optimizer</a> in the <i>Compute Optimizer User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class S3DestinationConfig
	{
		
		[System.Runtime.Serialization.DataMember(Name="bucket")]
		public string Bucket { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="keyPrefix")]
		public string KeyPrefix { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum FileFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Csv = 0,
	}
	
	/// <summary>
	/// Describes the recommendation preferences to return in the response of a <a>GetAutoScalingGroupRecommendations</a>, <a>GetEC2InstanceRecommendations</a>, and <a>GetEC2RecommendationProjectedMetrics</a> request.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RecommendationPreferences
	{
		
		[System.Runtime.Serialization.DataMember(Name="cpuVendorArchitectures")]
		public CpuVendorArchitecture[] CpuVendorArchitectures { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum CpuVendorArchitecture
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_ARM64 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CURRENT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LimitExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ExportEBSVolumeRecommendationsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		/// <summary>
		/// Describes the destination Amazon Simple Storage Service (Amazon S3) bucket name and object keys of a recommendations export file, and its associated metadata file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="s3Destination")]
		public S3Destination S3Destination { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ExportEBSVolumeRecommendationsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="accountIds")]
		public string[] AccountIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public EBSFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fieldsToExport")]
		public ExportableVolumeField[] FieldsToExport { get; set; }
		
		/// <summary>
		/// <p>Describes the destination Amazon Simple Storage Service (Amazon S3) bucket name and key prefix for a recommendations export job.</p> <p>You must create the destination Amazon S3 bucket for your recommendations export before you create the export job. Compute Optimizer does not create the S3 bucket for you. After you create the S3 bucket, ensure that it has the required permission policy to allow Compute Optimizer to write the export file to it. If you plan to specify an object prefix when you create the export job, you must include the object prefix in the policy that you add to the S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/create-s3-bucket-policy-for-compute-optimizer.html">Amazon S3 Bucket Policy for Compute Optimizer</a> in the <i>Compute Optimizer User Guide</i>.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="s3DestinationConfig")]
		public S3DestinationConfig S3DestinationConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fileFormat")]
		public FileFormat FileFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="includeMemberAccounts")]
		public System.Nullable<System.Boolean> IncludeMemberAccounts { get; set; }
	}
	
	/// <summary>
	/// <p>Describes a filter that returns a more specific list of Amazon Elastic Block Store (Amazon EBS) volume recommendations. Use this filter with the <a>GetEBSVolumeRecommendations</a> action.</p> <p>You can use <code>LambdaFunctionRecommendationFilter</code> with the <a>GetLambdaFunctionRecommendations</a> action, <code>JobFilter</code> with the <a>DescribeRecommendationExportJobs</a> action, and <code>Filter</code> with the <a>GetAutoScalingGroupRecommendations</a> and <a>GetEC2InstanceRecommendations</a> actions.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EBSFilter
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public EBSFilterName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum EBSFilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Finding = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ExportableVolumeField
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AccountId = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VolumeArn = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Finding = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsVolumeReadOpsPerSecondMaximum = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsVolumeWriteOpsPerSecondMaximum = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsVolumeReadBytesPerSecondMaximum = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsVolumeWriteBytesPerSecondMaximum = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LookbackPeriodInDays = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentConfigurationVolumeType = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentConfigurationVolumeBaselineIOPS = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentConfigurationVolumeBaselineThroughput = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentConfigurationVolumeBurstIOPS = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentConfigurationVolumeBurstThroughput = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentConfigurationVolumeSize = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentMonthlyPrice = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsConfigurationVolumeType = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsConfigurationVolumeBaselineIOPS = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsConfigurationVolumeBaselineThroughput = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsConfigurationVolumeBurstIOPS = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsConfigurationVolumeBurstThroughput = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsConfigurationVolumeSize = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsMonthlyPrice = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsPerformanceRisk = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LastRefreshTimestamp = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentPerformanceRisk = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsSavingsOpportunityPercentage = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsEstimatedMonthlySavingsCurrency = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsEstimatedMonthlySavingsValue = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RootVolume = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tags = 29,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ExportEC2InstanceRecommendationsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="s3Destination")]
		public S3Destination S3Destination { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ExportEC2InstanceRecommendationsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="accountIds")]
		public string[] AccountIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fieldsToExport")]
		public ExportableInstanceField[] FieldsToExport { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="s3DestinationConfig")]
		public S3DestinationConfig S3DestinationConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fileFormat")]
		public FileFormat FileFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="includeMemberAccounts")]
		public System.Nullable<System.Boolean> IncludeMemberAccounts { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendationPreferences")]
		public RecommendationPreferences RecommendationPreferences { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ExportableInstanceField
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AccountId = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InstanceArn = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InstanceName = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Finding = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FindingReasonCodes = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LookbackPeriodInDays = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentInstanceType = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsCpuMaximum = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsMemoryMaximum = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsEbsReadOpsPerSecondMaximum = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsEbsWriteOpsPerSecondMaximum = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsEbsReadBytesPerSecondMaximum = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsEbsWriteBytesPerSecondMaximum = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsDiskReadOpsPerSecondMaximum = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsDiskWriteOpsPerSecondMaximum = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsDiskReadBytesPerSecondMaximum = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsDiskWriteBytesPerSecondMaximum = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsNetworkInBytesPerSecondMaximum = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsNetworkOutBytesPerSecondMaximum = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsNetworkPacketsInPerSecondMaximum = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsNetworkPacketsOutPerSecondMaximum = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentOnDemandPrice = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentStandardOneYearNoUpfrontReservedPrice = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentStandardThreeYearNoUpfrontReservedPrice = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentVCpus = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentMemory = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentStorage = 26,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentNetwork = 27,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsInstanceType = 28,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsProjectedUtilizationMetricsCpuMaximum = 29,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsProjectedUtilizationMetricsMemoryMaximum = 30,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsPlatformDifferences = 31,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsPerformanceRisk = 32,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsVcpus = 33,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsMemory = 34,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsStorage = 35,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsNetwork = 36,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsOnDemandPrice = 37,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsStandardOneYearNoUpfrontReservedPrice = 38,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsStandardThreeYearNoUpfrontReservedPrice = 39,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationsSourcesRecommendationSourceArn = 40,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationsSourcesRecommendationSourceType = 41,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LastRefreshTimestamp = 42,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentPerformanceRisk = 43,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsSavingsOpportunityPercentage = 44,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsEstimatedMonthlySavingsCurrency = 45,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsEstimatedMonthlySavingsValue = 46,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EffectiveRecommendationPreferencesCpuVendorArchitectures = 47,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EffectiveRecommendationPreferencesEnhancedInfrastructureMetrics = 48,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EffectiveRecommendationPreferencesInferredWorkloadTypes = 49,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InferredWorkloadTypes = 50,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsMigrationEffort = 51,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EffectiveRecommendationPreferencesExternalMetricsSource = 52,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InstanceState = 53,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tags = 54,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExternalMetricStatusCode = 55,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExternalMetricStatusReason = 56,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ExportECSServiceRecommendationsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		/// <summary>
		/// Describes the destination Amazon Simple Storage Service (Amazon S3) bucket name and object keys of a recommendations export file, and its associated metadata file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="s3Destination")]
		public S3Destination S3Destination { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ExportECSServiceRecommendationsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="accountIds")]
		public string[] AccountIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public ECSServiceRecommendationFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fieldsToExport")]
		public ExportableECSServiceField[] FieldsToExport { get; set; }
		
		/// <summary>
		/// <p>Describes the destination Amazon Simple Storage Service (Amazon S3) bucket name and key prefix for a recommendations export job.</p> <p>You must create the destination Amazon S3 bucket for your recommendations export before you create the export job. Compute Optimizer does not create the S3 bucket for you. After you create the S3 bucket, ensure that it has the required permission policy to allow Compute Optimizer to write the export file to it. If you plan to specify an object prefix when you create the export job, you must include the object prefix in the policy that you add to the S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/create-s3-bucket-policy-for-compute-optimizer.html">Amazon S3 Bucket Policy for Compute Optimizer</a> in the <i>Compute Optimizer User Guide</i>.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="s3DestinationConfig")]
		public S3DestinationConfig S3DestinationConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fileFormat")]
		public FileFormat FileFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="includeMemberAccounts")]
		public System.Nullable<System.Boolean> IncludeMemberAccounts { get; set; }
	}
	
	/// <summary>
	///  Describes a filter that returns a more specific list of Amazon ECS service recommendations. Use this filter with the <a>GetECSServiceRecommendations</a> action. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ECSServiceRecommendationFilter
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public ECSServiceRecommendationFilterName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ECSServiceRecommendationFilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Finding = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FindingReasonCode = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ExportableECSServiceField
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AccountId = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ServiceArn = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LookbackPeriodInDays = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LastRefreshTimestamp = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LaunchType = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentPerformanceRisk = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentServiceConfigurationMemory = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentServiceConfigurationCpu = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentServiceConfigurationTaskDefinitionArn = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentServiceConfigurationAutoScalingConfiguration = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentServiceContainerConfigurations = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsCpuMaximum = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsMemoryMaximum = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Finding = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FindingReasonCodes = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsMemory = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsCpu = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsSavingsOpportunityPercentage = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsEstimatedMonthlySavingsCurrency = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsEstimatedMonthlySavingsValue = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsContainerRecommendations = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsProjectedUtilizationMetricsCpuMaximum = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsProjectedUtilizationMetricsMemoryMaximum = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tags = 23,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ExportLambdaFunctionRecommendationsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="jobId")]
		public string JobId { get; set; }
		
		/// <summary>
		/// Describes the destination Amazon Simple Storage Service (Amazon S3) bucket name and object keys of a recommendations export file, and its associated metadata file.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="s3Destination")]
		public S3Destination S3Destination { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ExportLambdaFunctionRecommendationsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="accountIds")]
		public string[] AccountIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public LambdaFunctionRecommendationFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fieldsToExport")]
		public ExportableLambdaFunctionField[] FieldsToExport { get; set; }
		
		/// <summary>
		/// <p>Describes the destination Amazon Simple Storage Service (Amazon S3) bucket name and key prefix for a recommendations export job.</p> <p>You must create the destination Amazon S3 bucket for your recommendations export before you create the export job. Compute Optimizer does not create the S3 bucket for you. After you create the S3 bucket, ensure that it has the required permission policy to allow Compute Optimizer to write the export file to it. If you plan to specify an object prefix when you create the export job, you must include the object prefix in the policy that you add to the S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/create-s3-bucket-policy-for-compute-optimizer.html">Amazon S3 Bucket Policy for Compute Optimizer</a> in the <i>Compute Optimizer User Guide</i>.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="s3DestinationConfig")]
		public S3DestinationConfig S3DestinationConfig { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="fileFormat")]
		public FileFormat FileFormat { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="includeMemberAccounts")]
		public System.Nullable<System.Boolean> IncludeMemberAccounts { get; set; }
	}
	
	/// <summary>
	/// <p>Describes a filter that returns a more specific list of Lambda function recommendations. Use this filter with the <a>GetLambdaFunctionRecommendations</a> action.</p> <p>You can use <code>EBSFilter</code> with the <a>GetEBSVolumeRecommendations</a> action, <code>JobFilter</code> with the <a>DescribeRecommendationExportJobs</a> action, and <code>Filter</code> with the <a>GetAutoScalingGroupRecommendations</a> and <a>GetEC2InstanceRecommendations</a> actions.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LambdaFunctionRecommendationFilter
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public ECSServiceRecommendationFilterName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ExportableLambdaFunctionField
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AccountId = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FunctionArn = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FunctionVersion = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Finding = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FindingReasonCodes = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NumberOfInvocations = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsDurationMaximum = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsDurationAverage = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsMemoryMaximum = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UtilizationMetricsMemoryAverage = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LookbackPeriodInDays = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentConfigurationMemorySize = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentConfigurationTimeout = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentCostTotal = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentCostAverage = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsConfigurationMemorySize = 15,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsCostLow = 16,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsCostHigh = 17,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsProjectedUtilizationMetricsDurationLowerBound = 18,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsProjectedUtilizationMetricsDurationUpperBound = 19,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsProjectedUtilizationMetricsDurationExpected = 20,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LastRefreshTimestamp = 21,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CurrentPerformanceRisk = 22,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsSavingsOpportunityPercentage = 23,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsEstimatedMonthlySavingsCurrency = 24,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RecommendationOptionsEstimatedMonthlySavingsValue = 25,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tags = 26,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetAutoScalingGroupRecommendationsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="autoScalingGroupRecommendations")]
		public AutoScalingGroupRecommendation[] AutoScalingGroupRecommendations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public GetRecommendationError[] Errors { get; set; }
	}
	
	/// <summary>
	/// Describes an Auto Scaling group recommendation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AutoScalingGroupRecommendation
	{
		
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="autoScalingGroupArn")]
		public string AutoScalingGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="autoScalingGroupName")]
		public string AutoScalingGroupName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="finding")]
		public Finding Finding { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="utilizationMetrics")]
		public UtilizationMetric[] UtilizationMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lookBackPeriodInDays")]
		public System.Nullable<System.Double> LookBackPeriodInDays { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentConfiguration")]
		public AutoScalingGroupConfiguration CurrentConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendationOptions")]
		public AutoScalingGroupRecommendationOption[] RecommendationOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastRefreshTimestamp")]
		public System.DateTimeOffset LastRefreshTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentPerformanceRisk")]
		public MigrationEffort CurrentPerformanceRisk { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="effectiveRecommendationPreferences")]
		public EffectiveRecommendationPreferences EffectiveRecommendationPreferences { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inferredWorkloadTypes")]
		public InferredWorkloadType[] InferredWorkloadTypes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum Finding
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Underprovisioned = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Overprovisioned = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Optimized = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotOptimized = 3,
	}
	
	/// <summary>
	/// <p>Describes a utilization metric of a resource, such as an Amazon EC2 instance.</p> <p>Compare the utilization metric data of your resource against its projected utilization metric data to determine the performance difference between your current resource and the recommended option.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UtilizationMetric
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public MetricName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statistic")]
		public MetricStatistic Statistic { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum MetricName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cpu = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Memory = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EBS_READ_OPS_PER_SECOND = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EBS_WRITE_OPS_PER_SECOND = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EBS_READ_BYTES_PER_SECOND = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EBS_WRITE_BYTES_PER_SECOND = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISK_READ_OPS_PER_SECOND = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISK_WRITE_OPS_PER_SECOND = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISK_READ_BYTES_PER_SECOND = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISK_WRITE_BYTES_PER_SECOND = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK_IN_BYTES_PER_SECOND = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK_OUT_BYTES_PER_SECOND = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK_PACKETS_IN_PER_SECOND = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NETWORK_PACKETS_OUT_PER_SECOND = 13,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum MetricStatistic
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Maximum = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Average = 1,
	}
	
	/// <summary>
	/// Describes the configuration of an Auto Scaling group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AutoScalingGroupConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="desiredCapacity")]
		public System.Nullable<System.Int32> DesiredCapacity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="minSize")]
		public System.Nullable<System.Int32> MinSize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxSize")]
		public System.Nullable<System.Int32> MaxSize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceType")]
		public string InstanceType { get; set; }
	}
	
	/// <summary>
	/// Describes a recommendation option for an Auto Scaling group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AutoScalingGroupRecommendationOption
	{
		
		[System.Runtime.Serialization.DataMember(Name="configuration")]
		public AutoScalingGroupConfiguration Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="projectedUtilizationMetrics")]
		public UtilizationMetric[] ProjectedUtilizationMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="performanceRisk")]
		public System.Nullable<System.Double> PerformanceRisk { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rank")]
		public System.Nullable<System.Int32> Rank { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="savingsOpportunity")]
		public SavingsOpportunity SavingsOpportunity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="migrationEffort")]
		public MigrationEffort MigrationEffort { get; set; }
	}
	
	/// <summary>
	/// <p>Describes the savings opportunity for recommendations of a given resource type or for the recommendation option of an individual resource.</p> <p>Savings opportunity represents the estimated monthly savings you can achieve by implementing a given Compute Optimizer recommendation.</p> <important> <p>Savings opportunity data requires that you opt in to Cost Explorer, as well as activate <b>Receive Amazon EC2 resource recommendations</b> in the Cost Explorer preferences page. That creates a connection between Cost Explorer and Compute Optimizer. With this connection, Cost Explorer generates savings estimates considering the price of existing resources, the price of recommended resources, and historical usage data. Estimated monthly savings reflects the projected dollar savings associated with each of the recommendations generated. For more information, see <a href="https://docs.aws.amazon.com/cost-management/latest/userguide/ce-enable.html">Enabling Cost Explorer</a> and <a href="https://docs.aws.amazon.com/cost-management/latest/userguide/ce-rightsizing.html">Optimizing your cost with Rightsizing Recommendations</a> in the <i>Cost Management User Guide</i>.</p> </important>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class SavingsOpportunity
	{
		
		[System.Runtime.Serialization.DataMember(Name="savingsOpportunityPercentage")]
		public System.Nullable<System.Double> SavingsOpportunityPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="estimatedMonthlySavings")]
		public EstimatedMonthlySavings EstimatedMonthlySavings { get; set; }
	}
	
	/// <summary>
	/// <p>Describes the estimated monthly savings amount possible, based on On-Demand instance pricing, by adopting Compute Optimizer recommendations for a given resource.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/view-ec2-recommendations.html#ec2-savings-calculation">Estimated monthly savings and savings opportunities</a> in the <i>Compute Optimizer User Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EstimatedMonthlySavings
	{
		
		[System.Runtime.Serialization.DataMember(Name="currency")]
		public Currency Currency { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum Currency
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CNY = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum MigrationEffort
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VeryLow = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Low = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Medium = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		High = 3,
	}
	
	/// <summary>
	/// Describes the effective recommendation preferences for a resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EffectiveRecommendationPreferences
	{
		
		[System.Runtime.Serialization.DataMember(Name="cpuVendorArchitectures")]
		public CpuVendorArchitecture[] CpuVendorArchitectures { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enhancedInfrastructureMetrics")]
		public EnhancedInfrastructureMetrics EnhancedInfrastructureMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inferredWorkloadTypes")]
		public EnhancedInfrastructureMetrics InferredWorkloadTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="externalMetricsPreference")]
		public ExternalMetricsPreference ExternalMetricsPreference { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum EnhancedInfrastructureMetrics
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	///  Describes the external metrics preferences for EC2 rightsizing recommendations. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ExternalMetricsPreference
	{
		
		[System.Runtime.Serialization.DataMember(Name="source")]
		public ExternalMetricsSource Source { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ExternalMetricsSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Datadog = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dynatrace = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NewRelic = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Instana = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum InferredWorkloadType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AmazonEmr = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ApacheCassandra = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ApacheHadoop = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Memcached = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Nginx = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PostgreSql = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Redis = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Kafka = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SQLServer = 8,
	}
	
	/// <summary>
	/// <p>Describes an error experienced when getting recommendations.</p> <p>For example, an error is returned if you request recommendations for an unsupported Auto Scaling group, or if you request recommendations for an instance of an unsupported instance family.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetRecommendationError
	{
		
		[System.Runtime.Serialization.DataMember(Name="identifier")]
		public string Identifier { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="code")]
		public string Code { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="message")]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetAutoScalingGroupRecommendationsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="accountIds")]
		public string[] AccountIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="autoScalingGroupArns")]
		public string[] AutoScalingGroupArns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendationPreferences")]
		public RecommendationPreferences RecommendationPreferences { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetEBSVolumeRecommendationsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="volumeRecommendations")]
		public VolumeRecommendation[] VolumeRecommendations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public GetRecommendationError[] Errors { get; set; }
	}
	
	/// <summary>
	/// Describes an Amazon Elastic Block Store (Amazon EBS) volume recommendation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VolumeRecommendation
	{
		
		[System.Runtime.Serialization.DataMember(Name="volumeArn")]
		public string VolumeArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentConfiguration")]
		public VolumeConfiguration CurrentConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="finding")]
		public EBSFinding Finding { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="utilizationMetrics")]
		public EBSUtilizationMetric[] UtilizationMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lookBackPeriodInDays")]
		public System.Nullable<System.Double> LookBackPeriodInDays { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="volumeRecommendationOptions")]
		public VolumeRecommendationOption[] VolumeRecommendationOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastRefreshTimestamp")]
		public System.DateTimeOffset LastRefreshTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentPerformanceRisk")]
		public MigrationEffort CurrentPerformanceRisk { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// Describes the configuration of an Amazon Elastic Block Store (Amazon EBS) volume.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VolumeConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="volumeType")]
		public string VolumeType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="volumeSize")]
		public System.Nullable<System.Int32> VolumeSize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="volumeBaselineIOPS")]
		public System.Nullable<System.Int32> VolumeBaselineIOPS { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="volumeBurstIOPS")]
		public System.Nullable<System.Int32> VolumeBurstIOPS { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="volumeBaselineThroughput")]
		public System.Nullable<System.Int32> VolumeBaselineThroughput { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="volumeBurstThroughput")]
		public System.Nullable<System.Int32> VolumeBurstThroughput { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rootVolume")]
		public System.Nullable<System.Boolean> RootVolume { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum EBSFinding
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Optimized = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotOptimized = 1,
	}
	
	/// <summary>
	/// <p>Describes a utilization metric of an Amazon Elastic Block Store (Amazon EBS) volume.</p> <p>Compare the utilization metric data of your resource against its projected utilization metric data to determine the performance difference between your current resource and the recommended option.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EBSUtilizationMetric
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public EBSMetricName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statistic")]
		public MetricStatistic Statistic { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum EBSMetricName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VolumeReadOpsPerSecond = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VolumeWriteOpsPerSecond = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VolumeReadBytesPerSecond = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VolumeWriteBytesPerSecond = 3,
	}
	
	/// <summary>
	/// Describes a recommendation option for an Amazon Elastic Block Store (Amazon EBS) instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class VolumeRecommendationOption
	{
		
		[System.Runtime.Serialization.DataMember(Name="configuration")]
		public VolumeConfiguration Configuration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="performanceRisk")]
		public System.Nullable<System.Double> PerformanceRisk { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rank")]
		public System.Nullable<System.Int32> Rank { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="savingsOpportunity")]
		public SavingsOpportunity SavingsOpportunity { get; set; }
	}
	
	/// <summary>
	///  A list of tag key and value pairs that you define. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Tag
	{
		
		[System.Runtime.Serialization.DataMember(Name="key")]
		public string Key { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetEBSVolumeRecommendationsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="volumeArns")]
		public string[] VolumeArns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public EBSFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="accountIds")]
		public string[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetEC2InstanceRecommendationsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceRecommendations")]
		public InstanceRecommendation[] InstanceRecommendations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public GetRecommendationError[] Errors { get; set; }
	}
	
	/// <summary>
	/// Describes an Amazon EC2 instance recommendation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InstanceRecommendation
	{
		
		[System.Runtime.Serialization.DataMember(Name="instanceArn")]
		public string InstanceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceName")]
		public string InstanceName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentInstanceType")]
		public string CurrentInstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="finding")]
		public Finding Finding { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="findingReasonCodes")]
		public InstanceRecommendationFindingReasonCode[] FindingReasonCodes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="utilizationMetrics")]
		public UtilizationMetric[] UtilizationMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lookBackPeriodInDays")]
		public System.Nullable<System.Double> LookBackPeriodInDays { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendationOptions")]
		public InstanceRecommendationOption[] RecommendationOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendationSources")]
		public RecommendationSource[] RecommendationSources { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastRefreshTimestamp")]
		public System.DateTimeOffset LastRefreshTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentPerformanceRisk")]
		public MigrationEffort CurrentPerformanceRisk { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="effectiveRecommendationPreferences")]
		public EffectiveRecommendationPreferences EffectiveRecommendationPreferences { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inferredWorkloadTypes")]
		public InferredWorkloadType[] InferredWorkloadTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="instanceState")]
		public InstanceState InstanceState { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="externalMetricStatus")]
		public ExternalMetricStatus ExternalMetricStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum InstanceRecommendationFindingReasonCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CPUOverprovisioned = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CPUUnderprovisioned = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MemoryOverprovisioned = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MemoryUnderprovisioned = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EBSThroughputOverprovisioned = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EBSThroughputUnderprovisioned = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EBSIOPSOverprovisioned = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EBSIOPSUnderprovisioned = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NetworkBandwidthOverprovisioned = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NetworkBandwidthUnderprovisioned = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NetworkPPSOverprovisioned = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NetworkPPSUnderprovisioned = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DiskIOPSOverprovisioned = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DiskIOPSUnderprovisioned = 13,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DiskThroughputOverprovisioned = 14,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DiskThroughputUnderprovisioned = 15,
	}
	
	/// <summary>
	/// Describes a recommendation option for an Amazon EC2 instance.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InstanceRecommendationOption
	{
		
		[System.Runtime.Serialization.DataMember(Name="instanceType")]
		public string InstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="projectedUtilizationMetrics")]
		public UtilizationMetric[] ProjectedUtilizationMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="platformDifferences")]
		public PlatformDifference[] PlatformDifferences { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="performanceRisk")]
		public System.Nullable<System.Double> PerformanceRisk { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rank")]
		public System.Nullable<System.Int32> Rank { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="savingsOpportunity")]
		public SavingsOpportunity SavingsOpportunity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="migrationEffort")]
		public MigrationEffort MigrationEffort { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum PlatformDifference
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hypervisor = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NetworkInterface = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		StorageInterface = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InstanceStoreAvailability = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VirtualizationType = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Architecture = 5,
	}
	
	/// <summary>
	/// Describes the source of a recommendation, such as an Amazon EC2 instance or Auto Scaling group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RecommendationSource
	{
		
		[System.Runtime.Serialization.DataMember(Name="recommendationSourceArn")]
		public string RecommendationSourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendationSourceType")]
		public RecommendationSourceType RecommendationSourceType { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum RecommendationSourceType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ec2Instance = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AutoScalingGroup = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EbsVolume = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LambdaFunction = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EcsService = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum InstanceState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		pending = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		running = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="shutting-down")]
		shuttingMinusdown = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		terminated = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		stopping = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		stopped = 5,
	}
	
	/// <summary>
	///  Describes Compute Optimizer's integration status with your chosen external metric provider. For example, Datadog. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ExternalMetricStatus
	{
		
		[System.Runtime.Serialization.DataMember(Name="statusCode")]
		public ExternalMetricStatusCode StatusCode { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusReason")]
		public string StatusReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ExternalMetricStatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NO_EXTERNAL_METRIC_SET = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTEGRATION_SUCCESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DATADOG_INTEGRATION_ERROR = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DYNATRACE_INTEGRATION_ERROR = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NEWRELIC_INTEGRATION_ERROR = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSTANA_INTEGRATION_ERROR = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSUFFICIENT_DATADOG_METRICS = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSUFFICIENT_DYNATRACE_METRICS = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSUFFICIENT_NEWRELIC_METRICS = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INSUFFICIENT_INSTANA_METRICS = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetEC2InstanceRecommendationsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="instanceArns")]
		public string[] InstanceArns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public Filter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="accountIds")]
		public string[] AccountIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendationPreferences")]
		public RecommendationPreferences RecommendationPreferences { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetEC2RecommendationProjectedMetricsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="recommendedOptionProjectedMetrics")]
		public RecommendedOptionProjectedMetric[] RecommendedOptionProjectedMetrics { get; set; }
	}
	
	/// <summary>
	/// <p>Describes a projected utilization metric of a recommendation option.</p> <note> <p>The <code>Cpu</code> and <code>Memory</code> metrics are the only projected utilization metrics returned when you run the <a>GetEC2RecommendationProjectedMetrics</a> action. Additionally, the <code>Memory</code> metric is returned only for resources that have the unified CloudWatch agent installed on them. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/metrics.html#cw-agent">Enabling Memory Utilization with the CloudWatch Agent</a>.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RecommendedOptionProjectedMetric
	{
		
		[System.Runtime.Serialization.DataMember(Name="recommendedInstanceType")]
		public string RecommendedInstanceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="rank")]
		public System.Nullable<System.Int32> Rank { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="projectedMetrics")]
		public ProjectedMetric[] ProjectedMetrics { get; set; }
	}
	
	/// <summary>
	/// <p>Describes a projected utilization metric of a recommendation option, such as an Amazon EC2 instance. This represents the projected utilization of a recommendation option had you used that resource during the analyzed period.</p> <p>Compare the utilization metric data of your resource against its projected utilization metric data to determine the performance difference between your current resource and the recommended option.</p> <note> <p>The <code>Cpu</code> and <code>Memory</code> metrics are the only projected utilization metrics returned when you run the <a>GetEC2RecommendationProjectedMetrics</a> action. Additionally, the <code>Memory</code> metric is returned only for resources that have the unified CloudWatch agent installed on them. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/metrics.html#cw-agent">Enabling Memory Utilization with the CloudWatch Agent</a>.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ProjectedMetric
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public MetricName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamps")]
		public string[] Timestamps { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="values")]
		public System.Nullable<System.Double> Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetEC2RecommendationProjectedMetricsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="instanceArn")]
		public string InstanceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="stat")]
		public MetricStatistic Stat { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="period")]
		public int Period { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.DateTimeOffset StartTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.DateTimeOffset EndTime { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendationPreferences")]
		public RecommendationPreferences RecommendationPreferences { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetECSServiceRecommendationProjectedMetricsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="recommendedOptionProjectedMetrics")]
		public ECSServiceRecommendedOptionProjectedMetric[] RecommendedOptionProjectedMetrics { get; set; }
	}
	
	/// <summary>
	/// <p> Describes the projected metrics of an Amazon ECS service recommendation option. </p> <p>To determine the performance difference between your current Amazon ECS service and the recommended option, compare the metric data of your service against its projected metric data.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ECSServiceRecommendedOptionProjectedMetric
	{
		
		[System.Runtime.Serialization.DataMember(Name="recommendedCpuUnits")]
		public System.Nullable<System.Int32> RecommendedCpuUnits { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendedMemorySize")]
		public System.Nullable<System.Int32> RecommendedMemorySize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="projectedMetrics")]
		public ECSServiceProjectedMetric[] ProjectedMetrics { get; set; }
	}
	
	/// <summary>
	/// <p> Describes the projected metrics of an Amazon ECS service recommendation option. </p> <p>To determine the performance difference between your current Amazon ECS service and the recommended option, compare the metric data of your service against its projected metric data.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ECSServiceProjectedMetric
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public ECSServiceMetricName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="timestamps")]
		public string[] Timestamps { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="upperBoundValues")]
		public System.Nullable<System.Double> UpperBoundValues { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lowerBoundValues")]
		public System.Nullable<System.Double> LowerBoundValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ECSServiceMetricName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cpu = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Memory = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetECSServiceRecommendationProjectedMetricsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="serviceArn")]
		public string ServiceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="stat")]
		public MetricStatistic Stat { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="period")]
		public int Period { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="startTime")]
		public System.DateTimeOffset StartTime { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="endTime")]
		public System.DateTimeOffset EndTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetECSServiceRecommendationsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="ecsServiceRecommendations")]
		public ECSServiceRecommendation[] EcsServiceRecommendations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="errors")]
		public GetRecommendationError[] Errors { get; set; }
	}
	
	/// <summary>
	///  Describes an Amazon ECS service recommendation. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ECSServiceRecommendation
	{
		
		[System.Runtime.Serialization.DataMember(Name="serviceArn")]
		public string ServiceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentServiceConfiguration")]
		public ServiceConfiguration CurrentServiceConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="utilizationMetrics")]
		public ECSServiceUtilizationMetric[] UtilizationMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lookbackPeriodInDays")]
		public System.Nullable<System.Double> LookbackPeriodInDays { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="launchType")]
		public ECSServiceLaunchType LaunchType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastRefreshTimestamp")]
		public System.DateTimeOffset LastRefreshTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="finding")]
		public ECSServiceRecommendationFinding Finding { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="findingReasonCodes")]
		public ECSServiceRecommendationFindingReasonCode[] FindingReasonCodes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="serviceRecommendationOptions")]
		public ECSServiceRecommendationOption[] ServiceRecommendationOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentPerformanceRisk")]
		public MigrationEffort CurrentPerformanceRisk { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	///  The Amazon ECS service configurations used for recommendations. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServiceConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="memory")]
		public System.Nullable<System.Int32> Memory { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cpu")]
		public System.Nullable<System.Int32> Cpu { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="containerConfigurations")]
		public ContainerConfiguration[] ContainerConfigurations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="autoScalingConfiguration")]
		public AutoScalingConfiguration AutoScalingConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="taskDefinitionArn")]
		public string TaskDefinitionArn { get; set; }
	}
	
	/// <summary>
	///  Describes the container configurations within the tasks of your Amazon ECS service. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ContainerConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="containerName")]
		public string ContainerName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="memorySizeConfiguration")]
		public MemorySizeConfiguration MemorySizeConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cpu")]
		public System.Nullable<System.Int32> Cpu { get; set; }
	}
	
	/// <summary>
	///  The memory size configurations of a container. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class MemorySizeConfiguration
	{
		
		[System.Runtime.Serialization.DataMember(Name="memory")]
		public System.Nullable<System.Int32> Memory { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="memoryReservation")]
		public System.Nullable<System.Int32> MemoryReservation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum AutoScalingConfiguration
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TargetTrackingScalingCpu = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TargetTrackingScalingMemory = 1,
	}
	
	/// <summary>
	/// <p> Describes the utilization metric of an Amazon ECS service. </p> <p>To determine the performance difference between your current Amazon ECS service and the recommended option, compare the utilization metric data of your service against its projected utilization metric data.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ECSServiceUtilizationMetric
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public ECSServiceMetricName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statistic")]
		public MetricStatistic Statistic { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ECSServiceLaunchType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EC2 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Fargate = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ECSServiceRecommendationFinding
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Optimized = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Underprovisioned = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Overprovisioned = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ECSServiceRecommendationFindingReasonCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MemoryOverprovisioned = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MemoryUnderprovisioned = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CPUOverprovisioned = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CPUUnderprovisioned = 3,
	}
	
	/// <summary>
	///  Describes the recommendation options for an Amazon ECS service. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ECSServiceRecommendationOption
	{
		
		[System.Runtime.Serialization.DataMember(Name="memory")]
		public System.Nullable<System.Int32> Memory { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cpu")]
		public System.Nullable<System.Int32> Cpu { get; set; }
		
		/// <summary>
		/// <p>Describes the savings opportunity for recommendations of a given resource type or for the recommendation option of an individual resource.</p> <p>Savings opportunity represents the estimated monthly savings you can achieve by implementing a given Compute Optimizer recommendation.</p> <important> <p>Savings opportunity data requires that you opt in to Cost Explorer, as well as activate <b>Receive Amazon EC2 resource recommendations</b> in the Cost Explorer preferences page. That creates a connection between Cost Explorer and Compute Optimizer. With this connection, Cost Explorer generates savings estimates considering the price of existing resources, the price of recommended resources, and historical usage data. Estimated monthly savings reflects the projected dollar savings associated with each of the recommendations generated. For more information, see <a href="https://docs.aws.amazon.com/cost-management/latest/userguide/ce-enable.html">Enabling Cost Explorer</a> and <a href="https://docs.aws.amazon.com/cost-management/latest/userguide/ce-rightsizing.html">Optimizing your cost with Rightsizing Recommendations</a> in the <i>Cost Management User Guide</i>.</p> </important>
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="savingsOpportunity")]
		public SavingsOpportunity SavingsOpportunity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="projectedUtilizationMetrics")]
		public ECSServiceProjectedUtilizationMetric[] ProjectedUtilizationMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="containerRecommendations")]
		public ContainerRecommendation[] ContainerRecommendations { get; set; }
	}
	
	/// <summary>
	/// <p> Describes the projected utilization metrics of an Amazon ECS service recommendation option. </p> <p>To determine the performance difference between your current Amazon ECS service and the recommended option, compare the utilization metric data of your service against its projected utilization metric data.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ECSServiceProjectedUtilizationMetric
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public ECSServiceMetricName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statistic")]
		public MetricStatistic Statistic { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lowerBoundValue")]
		public System.Nullable<System.Double> LowerBoundValue { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="upperBoundValue")]
		public System.Nullable<System.Double> UpperBoundValue { get; set; }
	}
	
	/// <summary>
	///  The CPU and memory recommendations for a container within the tasks of your Amazon ECS service. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ContainerRecommendation
	{
		
		[System.Runtime.Serialization.DataMember(Name="containerName")]
		public string ContainerName { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="memorySizeConfiguration")]
		public MemorySizeConfiguration MemorySizeConfiguration { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="cpu")]
		public System.Nullable<System.Int32> Cpu { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetECSServiceRecommendationsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="serviceArns")]
		public string[] ServiceArns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public ECSServiceRecommendationFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="accountIds")]
		public string[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetEffectiveRecommendationPreferencesResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="enhancedInfrastructureMetrics")]
		public EnhancedInfrastructureMetrics EnhancedInfrastructureMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="externalMetricsPreference")]
		public ExternalMetricsPreference ExternalMetricsPreference { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetEffectiveRecommendationPreferencesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resourceArn")]
		public string ResourceArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetEnrollmentStatusResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public Status Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusReason")]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="memberAccountsEnrolled")]
		public System.Nullable<System.Boolean> MemberAccountsEnrolled { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedTimestamp")]
		public System.DateTimeOffset LastUpdatedTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="numberOfMemberAccountsOptedIn")]
		public System.Nullable<System.Int32> NumberOfMemberAccountsOptedIn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum Status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Pending = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Failed = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetEnrollmentStatusRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetEnrollmentStatusesForOrganizationResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="accountEnrollmentStatuses")]
		public AccountEnrollmentStatus[] AccountEnrollmentStatuses { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Describes the enrollment status of an organization's member accounts in Compute Optimizer.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AccountEnrollmentStatus
	{
		
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public Status Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusReason")]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastUpdatedTimestamp")]
		public System.DateTimeOffset LastUpdatedTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetEnrollmentStatusesForOrganizationRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public EnrollmentFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	/// <summary>
	/// Describes a filter that returns a more specific list of account enrollment statuses. Use this filter with the <a>GetEnrollmentStatusesForOrganization</a> action.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class EnrollmentFilter
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public EnrollmentFilterName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="values")]
		public string[] Values { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum EnrollmentFilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Status = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetLambdaFunctionRecommendationsResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lambdaFunctionRecommendations")]
		public LambdaFunctionRecommendation[] LambdaFunctionRecommendations { get; set; }
	}
	
	/// <summary>
	/// Describes an Lambda function recommendation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LambdaFunctionRecommendation
	{
		
		[System.Runtime.Serialization.DataMember(Name="functionArn")]
		public string FunctionArn { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="functionVersion")]
		public string FunctionVersion { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentMemorySize")]
		public System.Nullable<System.Int32> CurrentMemorySize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="numberOfInvocations")]
		public System.Nullable<System.Int32> NumberOfInvocations { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="utilizationMetrics")]
		public LambdaFunctionUtilizationMetric[] UtilizationMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lookbackPeriodInDays")]
		public System.Nullable<System.Double> LookbackPeriodInDays { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="lastRefreshTimestamp")]
		public System.DateTimeOffset LastRefreshTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="finding")]
		public LambdaFunctionRecommendationFinding Finding { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="findingReasonCodes")]
		public LambdaFunctionRecommendationFindingReasonCode[] FindingReasonCodes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="memorySizeRecommendationOptions")]
		public LambdaFunctionMemoryRecommendationOption[] MemorySizeRecommendationOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentPerformanceRisk")]
		public MigrationEffort CurrentPerformanceRisk { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// Describes a utilization metric of an Lambda function.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LambdaFunctionUtilizationMetric
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public LambdaFunctionMetricName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statistic")]
		public MetricStatistic Statistic { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum LambdaFunctionMetricName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Duration = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Memory = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum LambdaFunctionRecommendationFinding
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Optimized = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotOptimized = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Unavailable = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum LambdaFunctionRecommendationFindingReasonCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MemoryOverprovisioned = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MemoryUnderprovisioned = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InsufficientData = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inconclusive = 3,
	}
	
	/// <summary>
	/// Describes a recommendation option for an Lambda function.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LambdaFunctionMemoryRecommendationOption
	{
		
		[System.Runtime.Serialization.DataMember(Name="rank")]
		public System.Nullable<System.Int32> Rank { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="memorySize")]
		public System.Nullable<System.Int32> MemorySize { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="projectedUtilizationMetrics")]
		public LambdaFunctionMemoryProjectedMetric[] ProjectedUtilizationMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="savingsOpportunity")]
		public SavingsOpportunity SavingsOpportunity { get; set; }
	}
	
	/// <summary>
	/// Describes a projected utilization metric of an Lambda function recommendation option.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class LambdaFunctionMemoryProjectedMetric
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public LambdaFunctionMemoryMetricName Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statistic")]
		public LambdaFunctionMemoryMetricStatistic Statistic { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum LambdaFunctionMemoryMetricName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Duration = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum LambdaFunctionMemoryMetricStatistic
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LowerBound = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UpperBound = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Expected = 2,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetLambdaFunctionRecommendationsRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="functionArns")]
		public string[] FunctionArns { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="accountIds")]
		public string[] AccountIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="filters")]
		public LambdaFunctionRecommendationFilter[] Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetRecommendationPreferencesResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendationPreferencesDetails")]
		public RecommendationPreferencesDetail[] RecommendationPreferencesDetails { get; set; }
	}
	
	/// <summary>
	/// Describes a recommendation preference.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RecommendationPreferencesDetail
	{
		
		[System.Runtime.Serialization.DataMember(Name="scope")]
		public Scope Scope { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="resourceType")]
		public ResourceType ResourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enhancedInfrastructureMetrics")]
		public EnhancedInfrastructureMetrics EnhancedInfrastructureMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inferredWorkloadTypes")]
		public EnhancedInfrastructureMetrics InferredWorkloadTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="externalMetricsPreference")]
		public ExternalMetricsPreference ExternalMetricsPreference { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetRecommendationPreferencesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resourceType")]
		public ResourceType ResourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scope")]
		public Scope Scope { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetRecommendationSummariesResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendationSummaries")]
		public RecommendationSummary[] RecommendationSummaries { get; set; }
	}
	
	/// <summary>
	/// A summary of a recommendation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class RecommendationSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="summaries")]
		public Summary[] Summaries { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="recommendationResourceType")]
		public RecommendationSourceType RecommendationResourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="accountId")]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="savingsOpportunity")]
		public SavingsOpportunity SavingsOpportunity { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="currentPerformanceRiskRatings")]
		public CurrentPerformanceRiskRatings CurrentPerformanceRiskRatings { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inferredWorkloadSavings")]
		public InferredWorkloadSaving[] InferredWorkloadSavings { get; set; }
	}
	
	/// <summary>
	/// The summary of a recommendation.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Summary
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public Finding Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="reasonCodeSummaries")]
		public ReasonCodeSummary[] ReasonCodeSummaries { get; set; }
	}
	
	/// <summary>
	/// A summary of a finding reason code.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ReasonCodeSummary
	{
		
		[System.Runtime.Serialization.DataMember(Name="name")]
		public FindingReasonCode Name { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="value")]
		public System.Nullable<System.Double> Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum FindingReasonCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MemoryOverprovisioned = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MemoryUnderprovisioned = 1,
	}
	
	/// <summary>
	/// <p>Describes the performance risk ratings for a given resource type.</p> <p>Resources with a <code>high</code> or <code>medium</code> rating are at risk of not meeting the performance needs of their workloads, while resources with a <code>low</code> rating are performing well in their workloads.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CurrentPerformanceRiskRatings
	{
		
		[System.Runtime.Serialization.DataMember(Name="high")]
		public System.Nullable<System.Int32> High { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="medium")]
		public System.Nullable<System.Int32> Medium { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="low")]
		public System.Nullable<System.Int32> Low { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="veryLow")]
		public System.Nullable<System.Int32> VeryLow { get; set; }
	}
	
	/// <summary>
	///  The estimated monthly savings after you adjust the configurations of your instances running on the inferred workload types to the recommended configurations. If the <code>inferredWorkloadTypes</code> list contains multiple entries, then the savings are the sum of the monthly savings from instances that run the exact combination of the inferred workload types. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InferredWorkloadSaving
	{
		
		[System.Runtime.Serialization.DataMember(Name="inferredWorkloadTypes")]
		public InferredWorkloadType[] InferredWorkloadTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="estimatedMonthlySavings")]
		public EstimatedMonthlySavings EstimatedMonthlySavings { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class GetRecommendationSummariesRequest
	{
		
		[System.Runtime.Serialization.DataMember(Name="accountIds")]
		public string[] AccountIds { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="nextToken")]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="maxResults")]
		public System.Nullable<System.Int32> MaxResults { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PutRecommendationPreferencesResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PutRecommendationPreferencesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="resourceType")]
		public ResourceType ResourceType { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="scope")]
		public Scope Scope { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="enhancedInfrastructureMetrics")]
		public EnhancedInfrastructureMetrics EnhancedInfrastructureMetrics { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="inferredWorkloadTypes")]
		public EnhancedInfrastructureMetrics InferredWorkloadTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="externalMetricsPreference")]
		public ExternalMetricsPreference ExternalMetricsPreference { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateEnrollmentStatusResponse
	{
		
		[System.Runtime.Serialization.DataMember(Name="status")]
		public Status Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="statusReason")]
		public string StatusReason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateEnrollmentStatusRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="status")]
		public Status Status { get; set; }
		
		[System.Runtime.Serialization.DataMember(Name="includeMemberAccounts")]
		public System.Nullable<System.Boolean> IncludeMemberAccounts { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum CurrentPerformanceRisk
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VeryLow = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Low = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Medium = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		High = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum ECSServiceMetricStatistic
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Maximum = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Average = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum InferredWorkloadTypesPreference
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum LambdaFunctionMetricStatistic
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Maximum = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Average = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public enum LambdaFunctionRecommendationFilterName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Finding = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FindingReasonCode = 1,
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Deletes a recommendation preference, such as enhanced infrastructure metrics.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/enhanced-infrastructure-metrics.html">Activating enhanced infrastructure metrics</a> in the <i>Compute Optimizer User Guide</i>.</p>
		/// DeleteRecommendationPreferences #X-Amz-Target=ComputeOptimizerService.DeleteRecommendationPreferences
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteRecommendationPreferencesResponse> DeleteRecommendationPreferencesAsync(DeleteRecommendationPreferencesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.DeleteRecommendationPreferences";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteRecommendationPreferencesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Describes recommendation export jobs created in the last seven days.</p> <p>Use the <a>ExportAutoScalingGroupRecommendations</a> or <a>ExportEC2InstanceRecommendations</a> actions to request an export of your recommendations. Then use the <a>DescribeRecommendationExportJobs</a> action to view your export jobs.</p>
		/// DescribeRecommendationExportJobs #X-Amz-Target=ComputeOptimizerService.DescribeRecommendationExportJobs
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<DescribeRecommendationExportJobsResponse> DescribeRecommendationExportJobsAsync(string maxResults, string nextToken, DescribeRecommendationExportJobsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.DescribeRecommendationExportJobs?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DescribeRecommendationExportJobsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Exports optimization recommendations for Auto Scaling groups.</p> <p>Recommendations are exported in a comma-separated values (.csv) file, and its metadata in a JavaScript Object Notation (JSON) (.json) file, to an existing Amazon Simple Storage Service (Amazon S3) bucket that you specify. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/exporting-recommendations.html">Exporting Recommendations</a> in the <i>Compute Optimizer User Guide</i>.</p> <p>You can have only one Auto Scaling group export job in progress per Amazon Web Services Region.</p>
		/// ExportAutoScalingGroupRecommendations #X-Amz-Target=ComputeOptimizerService.ExportAutoScalingGroupRecommendations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ExportAutoScalingGroupRecommendationsResponse> ExportAutoScalingGroupRecommendationsAsync(ExportAutoScalingGroupRecommendationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.ExportAutoScalingGroupRecommendations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ExportAutoScalingGroupRecommendationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Exports optimization recommendations for Amazon EBS volumes.</p> <p>Recommendations are exported in a comma-separated values (.csv) file, and its metadata in a JavaScript Object Notation (JSON) (.json) file, to an existing Amazon Simple Storage Service (Amazon S3) bucket that you specify. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/exporting-recommendations.html">Exporting Recommendations</a> in the <i>Compute Optimizer User Guide</i>.</p> <p>You can have only one Amazon EBS volume export job in progress per Amazon Web Services Region.</p>
		/// ExportEBSVolumeRecommendations #X-Amz-Target=ComputeOptimizerService.ExportEBSVolumeRecommendations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ExportEBSVolumeRecommendationsResponse> ExportEBSVolumeRecommendationsAsync(ExportEBSVolumeRecommendationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.ExportEBSVolumeRecommendations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ExportEBSVolumeRecommendationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Exports optimization recommendations for Amazon EC2 instances.</p> <p>Recommendations are exported in a comma-separated values (.csv) file, and its metadata in a JavaScript Object Notation (JSON) (.json) file, to an existing Amazon Simple Storage Service (Amazon S3) bucket that you specify. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/exporting-recommendations.html">Exporting Recommendations</a> in the <i>Compute Optimizer User Guide</i>.</p> <p>You can have only one Amazon EC2 instance export job in progress per Amazon Web Services Region.</p>
		/// ExportEC2InstanceRecommendations #X-Amz-Target=ComputeOptimizerService.ExportEC2InstanceRecommendations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ExportEC2InstanceRecommendationsResponse> ExportEC2InstanceRecommendationsAsync(ExportEC2InstanceRecommendationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.ExportEC2InstanceRecommendations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ExportEC2InstanceRecommendationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p> Exports optimization recommendations for Amazon ECS services on Fargate. </p> <p>Recommendations are exported in a CSV file, and its metadata in a JSON file, to an existing Amazon Simple Storage Service (Amazon S3) bucket that you specify. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/exporting-recommendations.html">Exporting Recommendations</a> in the <i>Compute Optimizer User Guide</i>.</p> <p>You can only have one Amazon ECS service export job in progress per Amazon Web Services Region.</p>
		/// ExportECSServiceRecommendations #X-Amz-Target=ComputeOptimizerService.ExportECSServiceRecommendations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ExportECSServiceRecommendationsResponse> ExportECSServiceRecommendationsAsync(ExportECSServiceRecommendationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.ExportECSServiceRecommendations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ExportECSServiceRecommendationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Exports optimization recommendations for Lambda functions.</p> <p>Recommendations are exported in a comma-separated values (.csv) file, and its metadata in a JavaScript Object Notation (JSON) (.json) file, to an existing Amazon Simple Storage Service (Amazon S3) bucket that you specify. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/exporting-recommendations.html">Exporting Recommendations</a> in the <i>Compute Optimizer User Guide</i>.</p> <p>You can have only one Lambda function export job in progress per Amazon Web Services Region.</p>
		/// ExportLambdaFunctionRecommendations #X-Amz-Target=ComputeOptimizerService.ExportLambdaFunctionRecommendations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<ExportLambdaFunctionRecommendationsResponse> ExportLambdaFunctionRecommendationsAsync(ExportLambdaFunctionRecommendationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.ExportLambdaFunctionRecommendations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ExportLambdaFunctionRecommendationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns Auto Scaling group recommendations.</p> <p>Compute Optimizer generates recommendations for Amazon EC2 Auto Scaling groups that meet a specific set of requirements. For more information, see the <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/requirements.html">Supported resources and requirements</a> in the <i>Compute Optimizer User Guide</i>.</p>
		/// GetAutoScalingGroupRecommendations #X-Amz-Target=ComputeOptimizerService.GetAutoScalingGroupRecommendations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetAutoScalingGroupRecommendationsResponse> GetAutoScalingGroupRecommendationsAsync(GetAutoScalingGroupRecommendationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.GetAutoScalingGroupRecommendations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetAutoScalingGroupRecommendationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns Amazon Elastic Block Store (Amazon EBS) volume recommendations.</p> <p>Compute Optimizer generates recommendations for Amazon EBS volumes that meet a specific set of requirements. For more information, see the <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/requirements.html">Supported resources and requirements</a> in the <i>Compute Optimizer User Guide</i>.</p>
		/// GetEBSVolumeRecommendations #X-Amz-Target=ComputeOptimizerService.GetEBSVolumeRecommendations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetEBSVolumeRecommendationsResponse> GetEBSVolumeRecommendationsAsync(GetEBSVolumeRecommendationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.GetEBSVolumeRecommendations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetEBSVolumeRecommendationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns Amazon EC2 instance recommendations.</p> <p>Compute Optimizer generates recommendations for Amazon Elastic Compute Cloud (Amazon EC2) instances that meet a specific set of requirements. For more information, see the <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/requirements.html">Supported resources and requirements</a> in the <i>Compute Optimizer User Guide</i>.</p>
		/// GetEC2InstanceRecommendations #X-Amz-Target=ComputeOptimizerService.GetEC2InstanceRecommendations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetEC2InstanceRecommendationsResponse> GetEC2InstanceRecommendationsAsync(GetEC2InstanceRecommendationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.GetEC2InstanceRecommendations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetEC2InstanceRecommendationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the projected utilization metrics of Amazon EC2 instance recommendations.</p> <note> <p>The <code>Cpu</code> and <code>Memory</code> metrics are the only projected utilization metrics returned when you run this action. Additionally, the <code>Memory</code> metric is returned only for resources that have the unified CloudWatch agent installed on them. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/metrics.html#cw-agent">Enabling Memory Utilization with the CloudWatch Agent</a>.</p> </note>
		/// GetEC2RecommendationProjectedMetrics #X-Amz-Target=ComputeOptimizerService.GetEC2RecommendationProjectedMetrics
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetEC2RecommendationProjectedMetricsResponse> GetEC2RecommendationProjectedMetricsAsync(GetEC2RecommendationProjectedMetricsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.GetEC2RecommendationProjectedMetrics";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetEC2RecommendationProjectedMetricsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Returns the projected metrics of Amazon ECS service recommendations.
		/// GetECSServiceRecommendationProjectedMetrics #X-Amz-Target=ComputeOptimizerService.GetECSServiceRecommendationProjectedMetrics
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetECSServiceRecommendationProjectedMetricsResponse> GetECSServiceRecommendationProjectedMetricsAsync(GetECSServiceRecommendationProjectedMetricsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.GetECSServiceRecommendationProjectedMetrics";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetECSServiceRecommendationProjectedMetricsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p> Returns Amazon ECS service recommendations. </p> <p> Compute Optimizer generates recommendations for Amazon ECS services on Fargate that meet a specific set of requirements. For more information, see the <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/requirements.html">Supported resources and requirements</a> in the <i>Compute Optimizer User Guide</i>. </p>
		/// GetECSServiceRecommendations #X-Amz-Target=ComputeOptimizerService.GetECSServiceRecommendations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetECSServiceRecommendationsResponse> GetECSServiceRecommendationsAsync(GetECSServiceRecommendationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.GetECSServiceRecommendations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetECSServiceRecommendationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the recommendation preferences that are in effect for a given resource, such as enhanced infrastructure metrics. Considers all applicable preferences that you might have set at the resource, account, and organization level.</p> <p>When you create a recommendation preference, you can set its status to <code>Active</code> or <code>Inactive</code>. Use this action to view the recommendation preferences that are in effect, or <code>Active</code>.</p>
		/// GetEffectiveRecommendationPreferences #X-Amz-Target=ComputeOptimizerService.GetEffectiveRecommendationPreferences
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetEffectiveRecommendationPreferencesResponse> GetEffectiveRecommendationPreferencesAsync(GetEffectiveRecommendationPreferencesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.GetEffectiveRecommendationPreferences";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetEffectiveRecommendationPreferencesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the enrollment (opt in) status of an account to the Compute Optimizer service.</p> <p>If the account is the management account of an organization, this action also confirms the enrollment status of member accounts of the organization. Use the <a>GetEnrollmentStatusesForOrganization</a> action to get detailed information about the enrollment status of member accounts of an organization.</p>
		/// GetEnrollmentStatus #X-Amz-Target=ComputeOptimizerService.GetEnrollmentStatus
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetEnrollmentStatusResponse> GetEnrollmentStatusAsync(GetEnrollmentStatusRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.GetEnrollmentStatus";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetEnrollmentStatusResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the Compute Optimizer enrollment (opt-in) status of organization member accounts, if your account is an organization management account.</p> <p>To get the enrollment status of standalone accounts, use the <a>GetEnrollmentStatus</a> action.</p>
		/// GetEnrollmentStatusesForOrganization #X-Amz-Target=ComputeOptimizerService.GetEnrollmentStatusesForOrganization
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetEnrollmentStatusesForOrganizationResponse> GetEnrollmentStatusesForOrganizationAsync(string maxResults, string nextToken, GetEnrollmentStatusesForOrganizationRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.GetEnrollmentStatusesForOrganization?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetEnrollmentStatusesForOrganizationResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns Lambda function recommendations.</p> <p>Compute Optimizer generates recommendations for functions that meet a specific set of requirements. For more information, see the <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/requirements.html">Supported resources and requirements</a> in the <i>Compute Optimizer User Guide</i>.</p>
		/// GetLambdaFunctionRecommendations #X-Amz-Target=ComputeOptimizerService.GetLambdaFunctionRecommendations
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetLambdaFunctionRecommendationsResponse> GetLambdaFunctionRecommendationsAsync(string maxResults, string nextToken, GetLambdaFunctionRecommendationsRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.GetLambdaFunctionRecommendations?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetLambdaFunctionRecommendationsResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns existing recommendation preferences, such as enhanced infrastructure metrics.</p> <p>Use the <code>scope</code> parameter to specify which preferences to return. You can specify to return preferences for an organization, a specific account ID, or a specific EC2 instance or Auto Scaling group Amazon Resource Name (ARN).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/enhanced-infrastructure-metrics.html">Activating enhanced infrastructure metrics</a> in the <i>Compute Optimizer User Guide</i>.</p>
		/// GetRecommendationPreferences #X-Amz-Target=ComputeOptimizerService.GetRecommendationPreferences
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetRecommendationPreferencesResponse> GetRecommendationPreferencesAsync(string maxResults, string nextToken, GetRecommendationPreferencesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.GetRecommendationPreferences?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetRecommendationPreferencesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the optimization findings for an account.</p> <p>It returns the number of:</p> <ul> <li> <p>Amazon EC2 instances in an account that are <code>Underprovisioned</code>, <code>Overprovisioned</code>, or <code>Optimized</code>.</p> </li> <li> <p>Auto Scaling groups in an account that are <code>NotOptimized</code>, or <code>Optimized</code>.</p> </li> <li> <p>Amazon EBS volumes in an account that are <code>NotOptimized</code>, or <code>Optimized</code>.</p> </li> <li> <p>Lambda functions in an account that are <code>NotOptimized</code>, or <code>Optimized</code>.</p> </li> <li> <p>Amazon ECS services in an account that are <code>Underprovisioned</code>, <code>Overprovisioned</code>, or <code>Optimized</code>.</p> </li> </ul>
		/// GetRecommendationSummaries #X-Amz-Target=ComputeOptimizerService.GetRecommendationSummaries
		/// </summary>
		/// <param name="maxResults">Pagination limit</param>
		/// <param name="nextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<GetRecommendationSummariesResponse> GetRecommendationSummariesAsync(string maxResults, string nextToken, GetRecommendationSummariesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.GetRecommendationSummaries?maxResults=" + (maxResults==null? "" : System.Uri.EscapeDataString(maxResults))+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<GetRecommendationSummariesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new recommendation preference or updates an existing recommendation preference, such as enhanced infrastructure metrics.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/enhanced-infrastructure-metrics.html">Activating enhanced infrastructure metrics</a> in the <i>Compute Optimizer User Guide</i>.</p>
		/// PutRecommendationPreferences #X-Amz-Target=ComputeOptimizerService.PutRecommendationPreferences
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutRecommendationPreferencesResponse> PutRecommendationPreferencesAsync(PutRecommendationPreferencesRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.PutRecommendationPreferences";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<PutRecommendationPreferencesResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// <p>Updates the enrollment (opt in and opt out) status of an account to the Compute Optimizer service.</p> <p>If the account is a management account of an organization, this action can also be used to enroll member accounts of the organization.</p> <p>You must have the appropriate permissions to opt in to Compute Optimizer, to view its recommendations, and to opt out. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/security-iam.html">Controlling access with Amazon Web Services Identity and Access Management</a> in the <i>Compute Optimizer User Guide</i>.</p> <p>When you opt in, Compute Optimizer automatically creates a service-linked role in your account to access its data. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/using-service-linked-roles.html">Using Service-Linked Roles for Compute Optimizer</a> in the <i>Compute Optimizer User Guide</i>.</p>
		/// UpdateEnrollmentStatus #X-Amz-Target=ComputeOptimizerService.UpdateEnrollmentStatus
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateEnrollmentStatusResponse> UpdateEnrollmentStatusAsync(UpdateEnrollmentStatusRequest requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "#X-Amz-Target=ComputeOptimizerService.UpdateEnrollmentStatus";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateEnrollmentStatusResponse>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
	
	public enum DeleteRecommendationPreferencesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.DeleteRecommendationPreferences")]
		ComputeOptimizerService_DeleteRecommendationPreferences = 0,
	}
	
	public enum DescribeRecommendationExportJobsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.DescribeRecommendationExportJobs")]
		ComputeOptimizerService_DescribeRecommendationExportJobs = 0,
	}
	
	public enum ExportAutoScalingGroupRecommendationsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.ExportAutoScalingGroupRecommendations")]
		ComputeOptimizerService_ExportAutoScalingGroupRecommendations = 0,
	}
	
	public enum ExportEBSVolumeRecommendationsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.ExportEBSVolumeRecommendations")]
		ComputeOptimizerService_ExportEBSVolumeRecommendations = 0,
	}
	
	public enum ExportEC2InstanceRecommendationsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.ExportEC2InstanceRecommendations")]
		ComputeOptimizerService_ExportEC2InstanceRecommendations = 0,
	}
	
	public enum ExportECSServiceRecommendationsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.ExportECSServiceRecommendations")]
		ComputeOptimizerService_ExportECSServiceRecommendations = 0,
	}
	
	public enum ExportLambdaFunctionRecommendationsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.ExportLambdaFunctionRecommendations")]
		ComputeOptimizerService_ExportLambdaFunctionRecommendations = 0,
	}
	
	public enum GetAutoScalingGroupRecommendationsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.GetAutoScalingGroupRecommendations")]
		ComputeOptimizerService_GetAutoScalingGroupRecommendations = 0,
	}
	
	public enum GetEBSVolumeRecommendationsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.GetEBSVolumeRecommendations")]
		ComputeOptimizerService_GetEBSVolumeRecommendations = 0,
	}
	
	public enum GetEC2InstanceRecommendationsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.GetEC2InstanceRecommendations")]
		ComputeOptimizerService_GetEC2InstanceRecommendations = 0,
	}
	
	public enum GetEC2RecommendationProjectedMetricsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.GetEC2RecommendationProjectedMetrics")]
		ComputeOptimizerService_GetEC2RecommendationProjectedMetrics = 0,
	}
	
	public enum GetECSServiceRecommendationProjectedMetricsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.GetECSServiceRecommendationProjectedMetrics")]
		ComputeOptimizerService_GetECSServiceRecommendationProjectedMetrics = 0,
	}
	
	public enum GetECSServiceRecommendationsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.GetECSServiceRecommendations")]
		ComputeOptimizerService_GetECSServiceRecommendations = 0,
	}
	
	public enum GetEffectiveRecommendationPreferencesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.GetEffectiveRecommendationPreferences")]
		ComputeOptimizerService_GetEffectiveRecommendationPreferences = 0,
	}
	
	public enum GetEnrollmentStatusX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.GetEnrollmentStatus")]
		ComputeOptimizerService_GetEnrollmentStatus = 0,
	}
	
	public enum GetEnrollmentStatusesForOrganizationX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.GetEnrollmentStatusesForOrganization")]
		ComputeOptimizerService_GetEnrollmentStatusesForOrganization = 0,
	}
	
	public enum GetLambdaFunctionRecommendationsX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.GetLambdaFunctionRecommendations")]
		ComputeOptimizerService_GetLambdaFunctionRecommendations = 0,
	}
	
	public enum GetRecommendationPreferencesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.GetRecommendationPreferences")]
		ComputeOptimizerService_GetRecommendationPreferences = 0,
	}
	
	public enum GetRecommendationSummariesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.GetRecommendationSummaries")]
		ComputeOptimizerService_GetRecommendationSummaries = 0,
	}
	
	public enum PutRecommendationPreferencesX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.PutRecommendationPreferences")]
		ComputeOptimizerService_PutRecommendationPreferences = 0,
	}
	
	public enum UpdateEnrollmentStatusX_Amz_Target
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ComputeOptimizerService.UpdateEnrollmentStatus")]
		ComputeOptimizerService_UpdateEnrollmentStatus = 0,
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

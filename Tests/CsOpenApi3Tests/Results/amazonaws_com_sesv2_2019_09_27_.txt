//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	/// <summary>
	/// Represents the result of processing your metric data batch request
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchGetMetricDataResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MetricDataResult[] Results { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MetricDataError[] Errors { get; set; }
	}
	
	/// <summary>
	/// The result of a single metric data query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MetricDataResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Timestamps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Values { get; set; }
	}
	
	/// <summary>
	/// An error corresponding to the unsuccessful processing of a single metric data query.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MetricDataError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public QueryErrorCode Code { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum QueryErrorCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INTERNAL_FAILURE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCESS_DENIED = 1,
	}
	
	/// <summary>
	/// Represents a single metric data query to include in a batch.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchGetMetricDataQuery
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MetricNamespace Namespace { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Metric Metric { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Dimensions Dimensions { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartDate { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset EndDate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MetricNamespace
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VDM = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Metric
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEND = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLAINT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PERMANENT_BOUNCE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSIENT_BOUNCE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPEN = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLICK = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELIVERY = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELIVERY_OPEN = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELIVERY_CLICK = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELIVERY_COMPLAINT = 9,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Dimensions
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BadRequestException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalServiceErrorException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TooManyRequestsException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotFoundException
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateConfigurationSetResponse
	{
	}
	
	/// <summary>
	/// Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is <code>Require</code>, messages are only delivered if a TLS connection can be established. If the value is <code>Optional</code>, messages can be delivered in plain text if a TLS connection can't be established.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum TlsPolicy
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REQUIRE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPTIONAL = 1,
	}
	
	/// <summary>
	/// <p>An object that defines the tags that are associated with a resource. A <i>tag</i> is a label that you optionally define and associate with a resource. Tags can help you categorize and manage resources in different ways, such as by purpose, owner, environment, or other criteria. A resource can have as many as 50 tags.</p> <p>Each tag consists of a required <i>tag key</i> and an associated <i>tag value</i>, both of which you define. A tag key is a general label that acts as a category for a more specific tag value. A tag value acts as a descriptor within a tag key. A tag key can contain as many as 128 characters. A tag value can contain as many as 256 characters. The characters can be Unicode letters, digits, white space, or one of the following symbols: _ . : / = + -. The following additional restrictions apply to tags:</p> <ul> <li> <p>Tag keys and values are case sensitive.</p> </li> <li> <p>For each associated resource, each tag key must be unique and it can have only one value.</p> </li> <li> <p>The <code>aws:</code> prefix is reserved for use by Amazon Web Services; you can’t use it in any tag keys or values that you define. In addition, you can't edit or remove tag keys or values that use this prefix. Tags that use this prefix don’t count against the limit of 50 tags per resource.</p> </li> <li> <p>You can associate tags with public or shared resources, but the tags are available only for your Amazon Web Services account, not any other accounts that share the resource. In addition, the tags are available only for resources that are located in the specified Amazon Web Services Region for your Amazon Web Services account.</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tag
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Key { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	/// <summary>
	/// <p>The reason that the address was added to the suppression list for your account. The value can be one of the following:</p> <ul> <li> <p> <code>COMPLAINT</code> – Amazon SES added an email address to the suppression list for your account because a message sent to that address results in a complaint.</p> </li> <li> <p> <code>BOUNCE</code> – Amazon SES added an email address to the suppression list for your account because a message sent to that address results in a hard bounce.</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SuppressionListReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOUNCE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLAINT = 1,
	}
	
	/// <summary>
	/// An object containing additional settings for your VDM configuration as applicable to the Dashboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashboardOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FeatureStatus EngagementMetrics { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum FeatureStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ENABLED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 1,
	}
	
	/// <summary>
	/// An object containing additional settings for your VDM configuration as applicable to the Guardian.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GuardianOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FeatureStatus OptimizedSharedDelivery { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AlreadyExistsException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class LimitExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConcurrentModificationException
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateConfigurationSetEventDestinationResponse
	{
	}
	
	/// <summary>
	/// An email sending event type. For example, email sends, opens, and bounces are all email events.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EventType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEND = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BOUNCE = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLAINT = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELIVERY = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPEN = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CLICK = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RENDERING_FAILURE = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELIVERY_DELAY = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUBSCRIPTION = 9,
	}
	
	/// <summary>
	/// An object that defines an Amazon Kinesis Data Firehose destination for email events. You can use Amazon Kinesis Data Firehose to stream data to other services, such as Amazon S3 and Amazon Redshift.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class KinesisFirehoseDestination
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string IamRoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DeliveryStreamArn { get; set; }
	}
	
	/// <summary>
	/// An object that defines an Amazon CloudWatch destination for email events. You can use Amazon CloudWatch to monitor and gain insights on your email sending metrics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudWatchDestination
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchDimensionConfiguration[] DimensionConfigurations { get; set; }
	}
	
	/// <summary>
	/// An object that defines the dimension configuration to use when you send email events to Amazon CloudWatch.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CloudWatchDimensionConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DimensionName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DimensionValueSource DimensionValueSource { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DefaultDimensionValue { get; set; }
	}
	
	/// <summary>
	/// The location where the Amazon SES API v2 finds the value of a dimension to publish to Amazon CloudWatch. To use the message tags that you specify using an <code>X-SES-MESSAGE-TAGS</code> header or a parameter to the <code>SendEmail</code> or <code>SendRawEmail</code> API, choose <code>messageTag</code>. To use your own email headers, choose <code>emailHeader</code>. To use link tags, choose <code>linkTags</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DimensionValueSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MESSAGE_TAG = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAIL_HEADER = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LINK_TAG = 2,
	}
	
	/// <summary>
	/// An object that defines an Amazon SNS destination for email events. You can use Amazon SNS to send notification when certain email events occur.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SnsDestination
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TopicArn { get; set; }
	}
	
	/// <summary>
	/// An object that defines an Amazon Pinpoint project destination for email events. You can send email event data to a Amazon Pinpoint project to view metrics using the Transactional Messaging dashboards that are built in to Amazon Pinpoint. For more information, see <a href="https://docs.aws.amazon.com/pinpoint/latest/userguide/analytics-transactional-messages.html">Transactional Messaging Charts</a> in the <i>Amazon Pinpoint User Guide</i>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PinpointDestination
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ApplicationArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateContactResponse
	{
	}
	
	/// <summary>
	/// The contact's preference for being opted-in to or opted-out of a topic.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicPreference
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TopicName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SubscriptionStatus SubscriptionStatus { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SubscriptionStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPT_IN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPT_OUT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateContactListResponse
	{
	}
	
	/// <summary>
	/// An interest group, theme, or label within a list. Lists can have multiple topics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Topic
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TopicName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DisplayName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SubscriptionStatus DefaultSubscriptionStatus { get; set; }
	}
	
	/// <summary>
	/// If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateCustomVerificationEmailTemplateResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDedicatedIpPoolResponse
	{
	}
	
	/// <summary>
	/// Information about the predictive inbox placement test that you created.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDeliverabilityTestReportResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ReportId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DeliverabilityTestStatus DeliverabilityTestStatus { get; set; }
	}
	
	/// <summary>
	/// The status of a predictive inbox placement test. If the status is <code>IN_PROGRESS</code>, then the predictive inbox placement test is currently running. Predictive inbox placement tests are usually complete within 24 hours of creating the test. If the status is <code>COMPLETE</code>, then the test is finished, and you can use the <code>GetDeliverabilityTestReport</code> operation to view the results of the test.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeliverabilityTestStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 1,
	}
	
	/// <summary>
	/// Represents the email message that you're sending. The <code>Message</code> object consists of a subject line and a message body.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Message
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Content Subject { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Body Body { get; set; }
	}
	
	/// <summary>
	/// An object that represents the content of the email, and optionally a character set specification.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Content
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Data { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Charset { get; set; }
	}
	
	/// <summary>
	/// Represents the body of the email message.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Body
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Content Text { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Content Html { get; set; }
	}
	
	/// <summary>
	/// Represents the raw content of an email message.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class RawMessage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Data { get; set; }
	}
	
	/// <summary>
	/// An object that defines the email template to use for an email message, and the values to use for any message variables in that template. An <i>email template</i> is a type of message template that contains content that you want to define, save, and reuse in email messages that you send.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Template
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateData { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountSuspendedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendingPausedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MessageRejected
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MailFromDomainNotVerifiedException
	{
	}
	
	/// <summary>
	/// <p>If the email identity is a domain, this object contains information about the DKIM verification status for the domain.</p> <p>If the email identity is an email address, this object is empty. </p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEmailIdentityResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public IdentityType IdentityType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> VerifiedForSendingStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DkimAttributes DkimAttributes { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum IdentityType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAIL_ADDRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DOMAIN = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANAGED_DOMAIN = 2,
	}
	
	/// <summary>
	/// <p>An object that contains information about the DKIM authentication status for an email identity.</p> <p>Amazon SES determines the authentication status by searching for specific records in the DNS configuration for the domain. If you used <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a> to set up DKIM authentication, Amazon SES tries to find three unique CNAME records in the DNS configuration for your domain. If you provided a public key to perform DKIM authentication, Amazon SES tries to find a TXT record that uses the selector that you specified. The value of the TXT record must be a public key that's paired with the private key that you specified in the process of creating the identity</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DkimAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SigningEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DkimStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Tokens { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DkimSigningAttributesOrigin SigningAttributesOrigin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DkimSigningKeyLength NextSigningKeyLength { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DkimSigningKeyLength CurrentSigningKeyLength { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastKeyGenerationTimestamp { get; set; }
	}
	
	/// <summary>
	/// <p>The DKIM authentication status of the identity. The status can be one of the following:</p> <ul> <li> <p> <code>PENDING</code> – The verification process was initiated, but Amazon SES hasn't yet detected the DKIM records in the DNS configuration for the domain.</p> </li> <li> <p> <code>SUCCESS</code> – The verification process completed successfully.</p> </li> <li> <p> <code>FAILED</code> – The verification process failed. This typically occurs when Amazon SES fails to find the DKIM records in the DNS configuration of the domain.</p> </li> <li> <p> <code>TEMPORARY_FAILURE</code> – A temporary issue is preventing Amazon SES from determining the DKIM authentication status of the domain.</p> </li> <li> <p> <code>NOT_STARTED</code> – The DKIM verification process hasn't been initiated for the domain.</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DkimStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEMPORARY_FAILURE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_STARTED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DkimSigningAttributesOrigin
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AWS_SES = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EXTERNAL = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DkimSigningKeyLength
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RSA_1024_BIT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RSA_2048_BIT = 1,
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEmailIdentityPolicyResponse
	{
	}
	
	/// <summary>
	/// If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEmailTemplateResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateImportJobResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string JobId { get; set; }
	}
	
	/// <summary>
	/// An object that contains details about the action of suppression list.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SuppressionListDestination
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SuppressionListImportAction SuppressionListImportAction { get; set; }
	}
	
	/// <summary>
	/// <p>The type of action to perform on the address. The following are possible values:</p> <ul> <li> <p>PUT: add the addresses to the suppression list.</p> </li> <li> <p>DELETE: remove the address from the suppression list.</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SuppressionListImportAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUT = 1,
	}
	
	/// <summary>
	/// An object that contains details about the action of a contact list.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContactListDestination
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactListName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SuppressionListImportAction ContactListImportAction { get; set; }
	}
	
	/// <summary>
	/// The data format of the import job's data source.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DataFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CSV = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JSON = 1,
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteConfigurationSetResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteConfigurationSetEventDestinationResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteContactResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteContactListResponse
	{
	}
	
	/// <summary>
	/// If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteCustomVerificationEmailTemplateResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDedicatedIpPoolResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEmailIdentityResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEmailIdentityPolicyResponse
	{
	}
	
	/// <summary>
	/// If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEmailTemplateResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSuppressedDestinationResponse
	{
	}
	
	/// <summary>
	/// A list of details about the email-sending capabilities of your Amazon SES account in the current Amazon Web Services Region.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAccountResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> DedicatedIpAutoWarmupEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EnforcementStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ProductionAccessEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SendQuota SendQuota { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SendingEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SuppressionAttributes SuppressionAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AccountDetails Details { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VdmAttributes VdmAttributes { get; set; }
	}
	
	/// <summary>
	/// An object that contains information about the per-day and per-second sending limits for your Amazon SES account in the current Amazon Web Services Region.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendQuota
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> Max24HourSend { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MaxSendRate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SentLast24Hours { get; set; }
	}
	
	/// <summary>
	/// An object that contains information about the email address suppression preferences for your account in the current Amazon Web Services Region.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SuppressionAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SuppressionListReason[] SuppressedReasons { get; set; }
	}
	
	/// <summary>
	/// An object that contains information about your account details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AccountDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MailType MailType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string WebsiteURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactLanguage ContactLanguage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UseCaseDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AdditionalContactEmailAddresses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReviewDetails ReviewDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MailType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MARKETING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSACTIONAL = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContactLanguage
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		JA = 1,
	}
	
	/// <summary>
	/// An object that contains information about your account details review.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReviewDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ReviewStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CaseId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ReviewStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GRANTED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DENIED = 3,
	}
	
	/// <summary>
	/// The VDM attributes that apply to your Amazon SES account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VdmAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FeatureStatus VdmEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardAttributes DashboardAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GuardianAttributes GuardianAttributes { get; set; }
	}
	
	/// <summary>
	/// An object containing additional settings for your VDM configuration as applicable to the Dashboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashboardAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FeatureStatus EngagementMetrics { get; set; }
	}
	
	/// <summary>
	/// An object containing additional settings for your VDM configuration as applicable to the Guardian.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GuardianAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FeatureStatus OptimizedSharedDelivery { get; set; }
	}
	
	/// <summary>
	/// An object that contains information about blacklist events.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetBlacklistReportsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BlacklistReport BlacklistReport { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BlacklistReport
	{
	}
	
	/// <summary>
	/// Information about a configuration set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetConfigurationSetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrackingOptions TrackingOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeliveryOptions DeliveryOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReputationOptions ReputationOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SendingOptions SendingOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SuppressionOptions SuppressionOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VdmOptions VdmOptions { get; set; }
	}
	
	/// <summary>
	/// <p>An object that defines the tracking options for a configuration set. When you use the Amazon SES API v2 to send an email, it contains an invisible image that's used to track when recipients open your email. If your email contains links, those links are changed slightly in order to track when recipients click them.</p> <p>These images and links include references to a domain operated by Amazon Web Services. You can optionally configure the Amazon SES to use a domain that you operate for these images and links.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TrackingOptions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CustomRedirectDomain { get; set; }
	}
	
	/// <summary>
	/// Used to associate a configuration set with a dedicated IP pool.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeliveryOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TlsPolicy TlsPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SendingPoolName { get; set; }
	}
	
	/// <summary>
	/// Enable or disable collection of reputation metrics for emails that you send using this configuration set in the current Amazon Web Services Region. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReputationOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReputationMetricsEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastFreshStart { get; set; }
	}
	
	/// <summary>
	/// Used to enable or disable email sending for messages that use this configuration set in the current Amazon Web Services Region.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendingOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SendingEnabled { get; set; }
	}
	
	/// <summary>
	/// An object that contains information about the suppression list preferences for your account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SuppressionOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SuppressionListReason[] SuppressedReasons { get; set; }
	}
	
	/// <summary>
	/// An object that defines the VDM settings that apply to emails that you send using the configuration set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VdmOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardOptions DashboardOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GuardianOptions GuardianOptions { get; set; }
	}
	
	/// <summary>
	/// Information about an event destination for a configuration set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetConfigurationSetEventDestinationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EventDestination[] EventDestinations { get; set; }
	}
	
	/// <summary>
	/// In the Amazon SES API v2, <i>events</i> include message sends, deliveries, opens, clicks, bounces, complaints and delivery delays. <i>Event destinations</i> are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventDestination
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EventType[] MatchingEventTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseDestination KinesisFirehoseDestination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchDestination CloudWatchDestination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnsDestination SnsDestination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PinpointDestination PinpointDestination { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetContactResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactListName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EmailAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicPreference[] TopicPreferences { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicPreference[] TopicDefaultPreferences { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UnsubscribeAll { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AttributesData { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetContactListResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactListName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Topic[] Topics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// The following elements are returned by the service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCustomVerificationEmailTemplateResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FromEmailAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSubject { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateContent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SuccessRedirectionURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FailureRedirectionURL { get; set; }
	}
	
	/// <summary>
	/// Information about a dedicated IP address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDedicatedIpResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DedicatedIp DedicatedIp { get; set; }
	}
	
	/// <summary>
	/// <p>Contains information about a dedicated IP address that is associated with your Amazon SES account.</p> <p>To learn more about requesting dedicated IP addresses, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/dedicated-ip-case.html">Requesting and Relinquishing Dedicated IP Addresses</a> in the <i>Amazon SES Developer Guide</i>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DedicatedIp
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Ip { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public WarmupStatus WarmupStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int WarmupPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PoolName { get; set; }
	}
	
	/// <summary>
	/// The warmup status of a dedicated IP.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum WarmupStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IN_PROGRESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DONE = 1,
	}
	
	/// <summary>
	/// The following element is returned by the service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDedicatedIpPoolResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DedicatedIpPool DedicatedIpPool { get; set; }
	}
	
	/// <summary>
	/// Contains information about a dedicated IP pool.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DedicatedIpPool
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PoolName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalingMode ScalingMode { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ScalingMode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STANDARD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANAGED = 1,
	}
	
	/// <summary>
	/// Information about the dedicated IP addresses that are associated with your Amazon Web Services account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDedicatedIpsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DedicatedIp[] DedicatedIps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// An object that shows the status of the Deliverability dashboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDeliverabilityDashboardOptionsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool DashboardEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset SubscriptionExpiryDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeliverabilityDashboardAccountStatus AccountStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainDeliverabilityTrackingOption[] ActiveSubscribedDomains { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainDeliverabilityTrackingOption[] PendingExpirationSubscribedDomains { get; set; }
	}
	
	/// <summary>
	/// The current status of your Deliverability dashboard subscription. If this value is <code>PENDING_EXPIRATION</code>, your subscription is scheduled to expire at the end of the current calendar month.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum DeliverabilityDashboardAccountStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING_EXPIRATION = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DISABLED = 2,
	}
	
	/// <summary>
	/// An object that contains information about the Deliverability dashboard subscription for a verified domain that you use to send email and currently has an active Deliverability dashboard subscription. If a Deliverability dashboard subscription is active for a domain, you gain access to reputation, inbox placement, and other metrics for the domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainDeliverabilityTrackingOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Domain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset SubscriptionStartDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public InboxPlacementTrackingOption InboxPlacementTrackingOption { get; set; }
	}
	
	/// <summary>
	/// An object that contains information about the inbox placement data settings for a verified domain that’s associated with your Amazon Web Services account. This data is available only if you enabled the Deliverability dashboard for the domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InboxPlacementTrackingOption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Global { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] TrackedIsps { get; set; }
	}
	
	/// <summary>
	/// The results of the predictive inbox placement test.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDeliverabilityTestReportResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DeliverabilityTestReport DeliverabilityTestReport { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PlacementStatistics OverallPlacement { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public IspPlacement[] IspPlacements { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// An object that contains metadata related to a predictive inbox placement test.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeliverabilityTestReport
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReportId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ReportName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Subject { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FromEmailAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreateDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeliverabilityTestStatus DeliverabilityTestStatus { get; set; }
	}
	
	/// <summary>
	/// An object that contains inbox placement data for an email provider.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PlacementStatistics
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> InboxPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SpamPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> MissingPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SpfPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DkimPercentage { get; set; }
	}
	
	/// <summary>
	/// An object that describes how email sent during the predictive inbox placement test was handled by a certain email provider.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IspPlacement
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string IspName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PlacementStatistics PlacementStatistics { get; set; }
	}
	
	/// <summary>
	/// An object that contains all the deliverability data for a specific campaign. This data is available for a campaign only if the campaign sent email by using a domain that the Deliverability dashboard is enabled for.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDomainDeliverabilityCampaignResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainDeliverabilityCampaign DomainDeliverabilityCampaign { get; set; }
	}
	
	/// <summary>
	/// An object that contains the deliverability data for a specific campaign. This data is available for a campaign only if the campaign sent email by using a domain that the Deliverability dashboard is enabled for (<code>PutDeliverabilityDashboardOption</code> operation).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainDeliverabilityCampaign
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CampaignId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ImageUrl { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Subject { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FromAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] SendingIps { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset FirstSeenDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastSeenDateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InboxCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SpamCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ReadRate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> DeleteRate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ReadDeleteRate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ProjectedVolume { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Esps { get; set; }
	}
	
	/// <summary>
	/// An object that includes statistics that are related to the domain that you specified.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDomainStatisticsReportResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public OverallVolume OverallVolume { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DailyVolume[] DailyVolumes { get; set; }
	}
	
	/// <summary>
	/// An object that contains information about email that was sent from the selected domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class OverallVolume
	{
		
		[System.Runtime.Serialization.DataMember()]
		public VolumeStatistics VolumeStatistics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ReadRatePercent { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainIspPlacement[] DomainIspPlacements { get; set; }
	}
	
	/// <summary>
	/// An object that contains information about the amount of email that was delivered to recipients.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class VolumeStatistics
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InboxRawCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SpamRawCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ProjectedInbox { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ProjectedSpam { get; set; }
	}
	
	/// <summary>
	/// An object that contains inbox placement data for email sent from one of your email domains to a specific email provider.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DomainIspPlacement
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string IspName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> InboxRawCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SpamRawCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> InboxPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> SpamPercentage { get; set; }
	}
	
	/// <summary>
	/// An object that contains information about the volume of email sent on each day of the analysis period.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DailyVolume
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset StartDate { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VolumeStatistics VolumeStatistics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainIspPlacement[] DomainIspPlacements { get; set; }
	}
	
	/// <summary>
	/// Details about an email identity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEmailIdentityResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public IdentityType IdentityType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> FeedbackForwardingStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> VerifiedForSendingStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DkimAttributes DkimAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MailFromAttributes MailFromAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PolicyMap Policies { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DkimStatus VerificationStatus { get; set; }
	}
	
	/// <summary>
	/// A list of attributes that are associated with a MAIL FROM domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MailFromAttributes
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string MailFromDomain { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MailFromDomainStatus MailFromDomainStatus { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BehaviorOnMxFailure BehaviorOnMxFailure { get; set; }
	}
	
	/// <summary>
	/// <p>The status of the MAIL FROM domain. This status can have the following values:</p> <ul> <li> <p> <code>PENDING</code> – Amazon SES hasn't started searching for the MX record yet.</p> </li> <li> <p> <code>SUCCESS</code> – Amazon SES detected the required MX record for the MAIL FROM domain.</p> </li> <li> <p> <code>FAILED</code> – Amazon SES can't find the required MX record, or the record no longer exists.</p> </li> <li> <p> <code>TEMPORARY_FAILURE</code> – A temporary issue occurred, which prevented Amazon SES from determining the status of the MAIL FROM domain.</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MailFromDomainStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEMPORARY_FAILURE = 3,
	}
	
	/// <summary>
	/// <p>The action to take if the required MX record can't be found when you send an email. When you set this value to <code>UseDefaultValue</code>, the mail is sent using <i>amazonses.com</i> as the MAIL FROM domain. When you set this value to <code>RejectMessage</code>, the Amazon SES API v2 returns a <code>MailFromDomainNotVerified</code> error, and doesn't attempt to deliver the email.</p> <p>These behaviors are taken when the custom MAIL FROM domain configuration is in the <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code> states.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BehaviorOnMxFailure
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		USE_DEFAULT_VALUE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		REJECT_MESSAGE = 1,
	}
	
	/// <summary>
	/// An object that contains mapping between <code>PolicyName</code> and <code>Policy</code> text.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PolicyMap
	{
	}
	
	/// <summary>
	/// Identity policies associated with email identity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEmailIdentityPoliciesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public PolicyMap Policies { get; set; }
	}
	
	/// <summary>
	/// The following element is returned by the service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEmailTemplateResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EmailTemplateContent TemplateContent { get; set; }
	}
	
	/// <summary>
	/// The content of the email, composed of a subject line, an HTML part, and a text-only part.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmailTemplateContent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Subject { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Text { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Html { get; set; }
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetImportJobResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string JobId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImportDestination ImportDestination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ImportDataSource ImportDataSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public FailureInfo FailureInfo { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public JobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CompletedTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ProcessedRecordsCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailedRecordsCount { get; set; }
	}
	
	/// <summary>
	/// An object that contains details about the resource destination the import job is going to target.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportDestination
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SuppressionListDestination SuppressionListDestination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactListDestination ContactListDestination { get; set; }
	}
	
	/// <summary>
	/// An object that contains details about the data source of the import job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportDataSource
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string S3Url { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DataFormat DataFormat { get; set; }
	}
	
	/// <summary>
	/// An object that contains the failure details about an import job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class FailureInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FailedRecordsS3Url { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ErrorMessage { get; set; }
	}
	
	/// <summary>
	/// The status of the import job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum JobStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CREATED = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PROCESSING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPLETED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 3,
	}
	
	/// <summary>
	/// Information about the suppressed email address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSuppressedDestinationResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SuppressedDestination SuppressedDestination { get; set; }
	}
	
	/// <summary>
	/// An object that contains information about an email address that is on the suppression list for your account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SuppressedDestination
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EmailAddress { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SuppressionListReason Reason { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdateTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SuppressedDestinationAttributes Attributes { get; set; }
	}
	
	/// <summary>
	/// An object that contains additional attributes that are related an email address that is on the suppression list for your account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SuppressedDestinationAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MessageId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeedbackId { get; set; }
	}
	
	/// <summary>
	/// A list of configuration sets in your Amazon SES account in the current Amazon Web Services Region.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListConfigurationSetsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ConfigurationSets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListContactListsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ContactList[] ContactLists { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A list that contains contacts that have subscribed to a particular topic or topics.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ContactList
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactListName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTimestamp { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListContactsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Contact[] Contacts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A contact is the end-user who is receiving the email.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Contact
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string EmailAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicPreference[] TopicPreferences { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicPreference[] TopicDefaultPreferences { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UnsubscribeAll { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTimestamp { get; set; }
	}
	
	/// <summary>
	/// Used for filtering by a specific topic preference.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TopicFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseDefaultIfPreferenceUnavailable { get; set; }
	}
	
	/// <summary>
	/// The following elements are returned by the service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListCustomVerificationEmailTemplatesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CustomVerificationEmailTemplateMetadata[] CustomVerificationEmailTemplates { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains information about a custom verification email template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CustomVerificationEmailTemplateMetadata
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FromEmailAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSubject { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SuccessRedirectionURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FailureRedirectionURL { get; set; }
	}
	
	/// <summary>
	/// A list of dedicated IP pools.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDedicatedIpPoolsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DedicatedIpPools { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A list of the predictive inbox placement test reports that are available for your account, regardless of whether or not those tests are complete.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDeliverabilityTestReportsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DeliverabilityTestReport[] DeliverabilityTestReports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// An array of objects that provide deliverability data for all the campaigns that used a specific domain to send email during a specified time range. This data is available for a domain only if you enabled the Deliverability dashboard for the domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDomainDeliverabilityCampaignsResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DomainDeliverabilityCampaign[] DomainDeliverabilityCampaigns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A list of all of the identities that you've attempted to verify, regardless of whether or not those identities were successfully verified.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEmailIdentitiesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public IdentityInfo[] EmailIdentities { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Information about an email identity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class IdentityInfo
	{
		
		[System.Runtime.Serialization.DataMember()]
		public IdentityType IdentityType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string IdentityName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SendingEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DkimStatus VerificationStatus { get; set; }
	}
	
	/// <summary>
	/// The following elements are returned by the service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEmailTemplatesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EmailTemplateMetadata[] TemplatesMetadata { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// Contains information about an email template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmailTemplateMetadata
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTimestamp { get; set; }
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListImportJobsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ImportJobSummary[] ImportJobs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A summary of the import job.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ImportJobSummary
	{
		
		/// <summary>
		/// A string that represents the import job ID.
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string JobId { get; set; }
		
		/// <summary>
		/// An object that contains details about the resource destination the import job is going to target.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ImportDestination ImportDestination { get; set; }
		
		/// <summary>
		/// The status of the import job.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public JobStatus JobStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ProcessedRecordsCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> FailedRecordsCount { get; set; }
	}
	
	/// <summary>
	/// Contains the response to your request to retrieve the list of recommendations for your account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRecommendationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Recommendation[] Recommendations { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A recommendation generated for your account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Recommendation
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset CreatedTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdatedTimestamp { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RecommendationImpact Impact { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RecommendationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DKIM = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DMARC = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SPF = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BIMI = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RecommendationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OPEN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIXED = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum RecommendationImpact
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LOW = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HIGH = 1,
	}
	
	/// <summary>
	/// A list of suppressed email addresses.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSuppressedDestinationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SuppressedDestinationSummary[] SuppressedDestinationSummaries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A summary that describes the suppressed email address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SuppressedDestinationSummary
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EmailAddress { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SuppressionListReason Reason { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastUpdateTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InvalidNextTokenException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutAccountDedicatedIpWarmupAttributesResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutAccountDetailsResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConflictException
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutAccountSendingAttributesResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutAccountSuppressionAttributesResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutAccountVdmAttributesResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutConfigurationSetDeliveryOptionsResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutConfigurationSetReputationOptionsResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutConfigurationSetSendingOptionsResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutConfigurationSetSuppressionOptionsResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutConfigurationSetTrackingOptionsResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutConfigurationSetVdmOptionsResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutDedicatedIpInPoolResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutDedicatedIpPoolScalingAttributesResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutDedicatedIpWarmupAttributesResponse
	{
	}
	
	/// <summary>
	/// A response that indicates whether the Deliverability dashboard is enabled.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutDeliverabilityDashboardOptionResponse
	{
	}
	
	/// <summary>
	/// If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutEmailIdentityConfigurationSetAttributesResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutEmailIdentityDkimAttributesResponse
	{
	}
	
	/// <summary>
	/// <p>If the action is successful, the service sends back an HTTP 200 response.</p> <p>The following data is returned in JSON format by the service.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutEmailIdentityDkimSigningAttributesResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DkimStatus DkimStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] DkimTokens { get; set; }
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutEmailIdentityFeedbackAttributesResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutEmailIdentityMailFromAttributesResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutSuppressedDestinationResponse
	{
	}
	
	/// <summary>
	/// The following data is returned in JSON format by the service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendBulkEmailResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BulkEmailEntryResult[] BulkEmailEntryResults { get; set; }
	}
	
	/// <summary>
	/// The result of the <code>SendBulkEmail</code> operation of each specified <code>BulkEmailEntry</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BulkEmailEntryResult
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BulkEmailStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Error { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MessageId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum BulkEmailStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MESSAGE_REJECTED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MAIL_FROM_DOMAIN_NOT_VERIFIED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONFIGURATION_SET_NOT_FOUND = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEMPLATE_NOT_FOUND = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCOUNT_SUSPENDED = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCOUNT_THROTTLED = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCOUNT_DAILY_QUOTA_EXCEEDED = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_SENDING_POOL_NAME = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACCOUNT_SENDING_PAUSED = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONFIGURATION_SET_SENDING_PAUSED = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		INVALID_PARAMETER = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TRANSIENT_FAILURE = 12,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 13,
	}
	
	/// <summary>
	/// Contains the name and value of a tag that you apply to an email. You can use message tags when you publish email sending events. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MessageTag
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Value { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BulkEmailEntry
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Destination Destination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MessageTag[] ReplacementTags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReplacementEmailContent ReplacementEmailContent { get; set; }
	}
	
	/// <summary>
	/// <p>An object that describes the recipients for an email.</p> <note> <p>Amazon SES does not support the SMTPUTF8 extension, as described in <a href="https://tools.ietf.org/html/rfc6531">RFC6531</a>. For this reason, the <i>local part</i> of a destination email address (the part of the email address that precedes the @ sign) may only contain <a href="https://en.wikipedia.org/wiki/Email_address#Local-part">7-bit ASCII characters</a>. If the <i>domain part</i> of an address (the part after the @ sign) contains non-ASCII characters, they must be encoded using Punycode, as described in <a href="https://tools.ietf.org/html/rfc3492.html">RFC3492</a>.</p> </note>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Destination
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ToAddresses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] CcAddresses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] BccAddresses { get; set; }
	}
	
	/// <summary>
	/// The <code>ReplaceEmailContent</code> object to be used for a specific <code>BulkEmailEntry</code>. The <code>ReplacementTemplate</code> can be specified within this object.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReplacementEmailContent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ReplacementTemplate ReplacementTemplate { get; set; }
	}
	
	/// <summary>
	/// An object which contains <code>ReplacementTemplateData</code> to be used for a specific <code>BulkEmailEntry</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ReplacementTemplate
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReplacementTemplateData { get; set; }
	}
	
	/// <summary>
	/// The following element is returned by the service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendCustomVerificationEmailResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MessageId { get; set; }
	}
	
	/// <summary>
	/// A unique message ID that you receive when an email is accepted for sending.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendEmailResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MessageId { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceResponse
	{
	}
	
	/// <summary>
	/// The following element is returned by the service.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TestRenderEmailTemplateResponse
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RenderedTemplate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateConfigurationSetEventDestinationResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactListResponse
	{
	}
	
	/// <summary>
	/// If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateCustomVerificationEmailTemplateResponse
	{
	}
	
	/// <summary>
	/// An HTTP 200 response if the request succeeds, or an error message if the request fails.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEmailIdentityPolicyResponse
	{
	}
	
	/// <summary>
	/// If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEmailTemplateResponse
	{
	}
	
	/// <summary>
	/// Represents a request to retrieve a batch of metric data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BatchGetMetricDataRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BatchGetMetricDataQuery[] Queries { get; set; }
	}
	
	/// <summary>
	/// An object that contains information about a blacklisting event that impacts one of the dedicated IP addresses that is associated with your account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BlacklistEntry
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string RblName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset ListingTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	/// <summary>
	/// An object that contains the body of the message. You can specify a template message.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class BulkEmailContent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Template Template { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ContactListImportAction
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DELETE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PUT = 1,
	}
	
	/// <summary>
	/// An object that defines the event destination. Specifically, it defines which services receive events from emails sent using the configuration set that the event destination is associated with. Also defines the types of events that are sent to the event destination.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EventDestinationDefinition
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventType[] MatchingEventTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseDestination KinesisFirehoseDestination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchDestination CloudWatchDestination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnsDestination SnsDestination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PinpointDestination PinpointDestination { get; set; }
	}
	
	/// <summary>
	/// A request to add an event destination to a configuration set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateConfigurationSetEventDestinationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EventDestinationName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EventDestinationDefinition EventDestination { get; set; }
	}
	
	/// <summary>
	/// A request to create a configuration set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateConfigurationSetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TrackingOptions TrackingOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DeliveryOptions DeliveryOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ReputationOptions ReputationOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SendingOptions SendingOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// An object that contains information about the suppression list preferences for your account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SuppressionOptions SuppressionOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public VdmOptions VdmOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateContactListRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactListName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Topic[] Topics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateContactRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EmailAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicPreference[] TopicPreferences { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UnsubscribeAll { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AttributesData { get; set; }
	}
	
	/// <summary>
	/// Represents a request to create a custom verification email template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateCustomVerificationEmailTemplateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FromEmailAddress { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSubject { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateContent { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SuccessRedirectionURL { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FailureRedirectionURL { get; set; }
	}
	
	/// <summary>
	/// A request to create a new dedicated IP pool.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDedicatedIpPoolRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PoolName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScalingMode ScalingMode { get; set; }
	}
	
	/// <summary>
	/// An object that defines the entire content of the email, including the message headers and the body content. You can create a simple email message, in which you specify the subject and the text and HTML versions of the message body. You can also create raw messages, in which you specify a complete MIME-formatted message. Raw messages can include attachments and custom headers.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EmailContent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Message Simple { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RawMessage Raw { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Template Template { get; set; }
	}
	
	/// <summary>
	/// A request to perform a predictive inbox placement test. Predictive inbox placement tests can help you predict how your messages will be handled by various email providers around the world. When you perform a predictive inbox placement test, you provide a sample message that contains the content that you plan to send to your customers. We send that message to special email addresses spread across several major email providers around the world. The test takes about 24 hours to complete. When the test is complete, you can use the <code>GetDeliverabilityTestReport</code> operation to view the results of the test.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateDeliverabilityTestReportRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ReportName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FromEmailAddress { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EmailContent Content { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// Represents a request to create a sending authorization policy for an identity. Sending authorization is an Amazon SES feature that enables you to authorize other senders to use your identities. For information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-identity-owner-tasks-management.html">Amazon SES Developer Guide</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEmailIdentityPolicyRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Policy { get; set; }
	}
	
	/// <summary>
	/// An object that contains configuration for Bring Your Own DKIM (BYODKIM), or, for Easy DKIM
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DkimSigningAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainSigningSelector { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainSigningPrivateKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DkimSigningKeyLength NextSigningKeyLength { get; set; }
	}
	
	/// <summary>
	/// A request to begin the verification process for an email identity (an email address or domain).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEmailIdentityRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EmailIdentity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DkimSigningAttributes DkimSigningAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationSetName { get; set; }
	}
	
	/// <summary>
	/// Represents a request to create an email template. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer Guide</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateEmailTemplateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EmailTemplateContent TemplateContent { get; set; }
	}
	
	/// <summary>
	/// Represents a request to create an import job from a data source for a data destination.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateImportJobRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ImportDestination ImportDestination { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ImportDataSource ImportDataSource { get; set; }
	}
	
	/// <summary>
	/// A request to delete an event destination from a configuration set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteConfigurationSetEventDestinationRequest
	{
	}
	
	/// <summary>
	/// A request to delete a configuration set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteConfigurationSetRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteContactListRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteContactRequest
	{
	}
	
	/// <summary>
	/// Represents a request to delete an existing custom verification email template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteCustomVerificationEmailTemplateRequest
	{
	}
	
	/// <summary>
	/// A request to delete a dedicated IP pool.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteDedicatedIpPoolRequest
	{
	}
	
	/// <summary>
	/// Represents a request to delete a sending authorization policy for an identity. Sending authorization is an Amazon SES feature that enables you to authorize other senders to use your identities. For information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-identity-owner-tasks-management.html">Amazon SES Developer Guide</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEmailIdentityPolicyRequest
	{
	}
	
	/// <summary>
	/// A request to delete an existing email identity. When you delete an identity, you lose the ability to send email from that identity. You can restore your ability to send email by completing the verification process for the identity again.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEmailIdentityRequest
	{
	}
	
	/// <summary>
	/// Represents a request to delete an email template. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer Guide</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteEmailTemplateRequest
	{
	}
	
	/// <summary>
	/// A request to remove an email address from the suppression list for your account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteSuppressedDestinationRequest
	{
	}
	
	/// <summary>
	/// A request to obtain information about the email-sending capabilities of your Amazon SES account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetAccountRequest
	{
	}
	
	/// <summary>
	/// A request to retrieve a list of the blacklists that your dedicated IP addresses appear on.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetBlacklistReportsRequest
	{
	}
	
	/// <summary>
	/// A request to obtain information about the event destinations for a configuration set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetConfigurationSetEventDestinationsRequest
	{
	}
	
	/// <summary>
	/// A request to obtain information about a configuration set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetConfigurationSetRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetContactListRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetContactRequest
	{
	}
	
	/// <summary>
	/// Represents a request to retrieve an existing custom verification email template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetCustomVerificationEmailTemplateRequest
	{
	}
	
	/// <summary>
	/// A request to obtain more information about a dedicated IP pool.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDedicatedIpPoolRequest
	{
	}
	
	/// <summary>
	/// A request to obtain more information about a dedicated IP address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDedicatedIpRequest
	{
	}
	
	/// <summary>
	/// A request to obtain more information about dedicated IP pools.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDedicatedIpsRequest
	{
	}
	
	/// <summary>
	/// <p>Retrieve information about the status of the Deliverability dashboard for your Amazon Web Services account. When the Deliverability dashboard is enabled, you gain access to reputation, deliverability, and other metrics for your domains. You also gain the ability to perform predictive inbox placement tests.</p> <p>When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition to any other fees that you accrue by using Amazon SES and other Amazon Web Services services. For more information about the features and cost of a Deliverability dashboard subscription, see <a href="http://aws.amazon.com/pinpoint/pricing/">Amazon Pinpoint Pricing</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDeliverabilityDashboardOptionsRequest
	{
	}
	
	/// <summary>
	/// A request to retrieve the results of a predictive inbox placement test.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDeliverabilityTestReportRequest
	{
	}
	
	/// <summary>
	/// Retrieve all the deliverability data for a specific campaign. This data is available for a campaign only if the campaign sent email by using a domain that the Deliverability dashboard is enabled for (<code>PutDeliverabilityDashboardOption</code> operation).
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDomainDeliverabilityCampaignRequest
	{
	}
	
	/// <summary>
	/// A request to obtain deliverability metrics for a domain.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetDomainStatisticsReportRequest
	{
	}
	
	/// <summary>
	/// A request to return the policies of an email identity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEmailIdentityPoliciesRequest
	{
	}
	
	/// <summary>
	/// A request to return details about an email identity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEmailIdentityRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum VerificationStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PENDING = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUCCESS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FAILED = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TEMPORARY_FAILURE = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NOT_STARTED = 4,
	}
	
	/// <summary>
	/// Represents a request to display the template object (which includes the subject line, HTML part and text part) for the template you specify.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetEmailTemplateRequest
	{
	}
	
	/// <summary>
	/// Represents a request for information about an import job using the import job ID.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetImportJobRequest
	{
	}
	
	/// <summary>
	/// A request to retrieve information about an email address that's on the suppression list for your account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class GetSuppressedDestinationRequest
	{
	}
	
	/// <summary>
	/// The destination of the import job, which can be used to list import jobs that have a certain <code>ImportDestinationType</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ImportDestinationType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SUPPRESSION_LIST = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONTACT_LIST = 1,
	}
	
	/// <summary>
	/// A request to obtain a list of configuration sets for your Amazon SES account in the current Amazon Web Services Region.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListConfigurationSetsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListContactListsRequest
	{
	}
	
	/// <summary>
	/// A filter that can be applied to a list of contacts.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListContactsFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SubscriptionStatus FilteredStatus { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TopicFilter TopicFilter { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListContactsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListContactsFilter Filter { get; set; }
	}
	
	/// <summary>
	/// Represents a request to list the existing custom verification email templates for your account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListCustomVerificationEmailTemplatesRequest
	{
	}
	
	/// <summary>
	/// A request to obtain a list of dedicated IP pools.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDedicatedIpPoolsRequest
	{
	}
	
	/// <summary>
	/// A request to list all of the predictive inbox placement tests that you've performed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDeliverabilityTestReportsRequest
	{
	}
	
	/// <summary>
	/// Retrieve deliverability data for all the campaigns that used a specific domain to send email during a specified time range. This data is available for a domain only if you enabled the Deliverability dashboard.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListDomainDeliverabilityCampaignsRequest
	{
	}
	
	/// <summary>
	/// A request to list all of the email identities associated with your Amazon Web Services account. This list includes identities that you've already verified, identities that are unverified, and identities that were verified in the past, but are no longer verified.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEmailIdentitiesRequest
	{
	}
	
	/// <summary>
	/// Represents a request to list the email templates present in your Amazon SES account in the current Amazon Web Services Region. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer Guide</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListEmailTemplatesRequest
	{
	}
	
	/// <summary>
	/// Represents a request to list all of the import jobs for a data destination within the specified maximum number of import jobs.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListImportJobsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ImportDestinationType ImportDestinationType { get; set; }
	}
	
	/// <summary>
	/// An object used to specify a list or topic to which an email belongs, which will be used when a contact chooses to unsubscribe.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListManagementOptions
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactListName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicName { get; set; }
	}
	
	/// <summary>
	/// An object that contains mapping between <code>ListRecommendationsFilterKey</code> and <code>ListRecommendationFilterValue</code> to filter by.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRecommendationsFilter
	{
	}
	
	/// <summary>
	/// <p>The <code>ListRecommendations</code> filter type. This can be one of the following:</p> <ul> <li> <p> <code>TYPE</code> – The recommendation type, with values like <code>DKIM</code>, <code>SPF</code>, <code>DMARC</code> or <code>BIMI</code>.</p> </li> <li> <p> <code>IMPACT</code> – The recommendation impact, with values like <code>HIGH</code> or <code>LOW</code>.</p> </li> <li> <p> <code>STATUS</code> – The recommendation status, with values like <code>OPEN</code> or <code>FIXED</code>.</p> </li> <li> <p> <code>RESOURCE_ARN</code> – The resource affected by the recommendation, with values like <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ListRecommendationsFilterKey
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TYPE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMPACT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		STATUS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RESOURCE_ARN = 3,
	}
	
	/// <summary>
	/// Represents a request to list the existing recommendations for your account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListRecommendationsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListRecommendationsFilter Filter { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PageSize { get; set; }
	}
	
	/// <summary>
	/// A request to obtain a list of email destinations that are on the suppression list for your account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListSuppressedDestinationsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
	}
	
	/// <summary>
	/// <p>The <code>BatchGetMetricDataQuery</code> dimension name. This can be one of the following:</p> <ul> <li> <p> <code>EMAIL_IDENTITY</code> – The email identity used when sending messages.</p> </li> <li> <p> <code>CONFIGURATION_SET</code> – The configuration set used when sending messages (if one was used).</p> </li> <li> <p> <code>ISP</code> – The recipient ISP (e.g. <code>Gmail</code>, <code>Yahoo</code>, etc.).</p> </li> </ul>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum MetricDimensionName
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EMAIL_IDENTITY = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CONFIGURATION_SET = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ISP = 2,
	}
	
	/// <summary>
	/// A request to enable or disable the automatic IP address warm-up feature.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutAccountDedicatedIpWarmupAttributesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoWarmupEnabled { get; set; }
	}
	
	/// <summary>
	/// A request to submit new account details.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutAccountDetailsRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MailType MailType { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string WebsiteURL { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactLanguage ContactLanguage { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string UseCaseDescription { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AdditionalContactEmailAddresses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ProductionAccessEnabled { get; set; }
	}
	
	/// <summary>
	/// A request to change the ability of your account to send email.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutAccountSendingAttributesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SendingEnabled { get; set; }
	}
	
	/// <summary>
	/// A request to change your account's suppression preferences.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutAccountSuppressionAttributesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SuppressionListReason[] SuppressedReasons { get; set; }
	}
	
	/// <summary>
	/// A request to submit new account VDM attributes.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutAccountVdmAttributesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public VdmAttributes VdmAttributes { get; set; }
	}
	
	/// <summary>
	/// A request to associate a configuration set with a dedicated IP pool.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutConfigurationSetDeliveryOptionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TlsPolicy TlsPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SendingPoolName { get; set; }
	}
	
	/// <summary>
	/// A request to enable or disable tracking of reputation metrics for a configuration set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutConfigurationSetReputationOptionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReputationMetricsEnabled { get; set; }
	}
	
	/// <summary>
	/// A request to enable or disable the ability of Amazon SES to send emails that use a specific configuration set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutConfigurationSetSendingOptionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SendingEnabled { get; set; }
	}
	
	/// <summary>
	/// A request to change the account suppression list preferences for a specific configuration set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutConfigurationSetSuppressionOptionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SuppressionListReason[] SuppressedReasons { get; set; }
	}
	
	/// <summary>
	/// A request to add a custom domain for tracking open and click events to a configuration set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutConfigurationSetTrackingOptionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomRedirectDomain { get; set; }
	}
	
	/// <summary>
	/// A request to add specific VDM settings to a configuration set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutConfigurationSetVdmOptionsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public VdmOptions VdmOptions { get; set; }
	}
	
	/// <summary>
	/// A request to move a dedicated IP address to a dedicated IP pool.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutDedicatedIpInPoolRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DestinationPoolName { get; set; }
	}
	
	/// <summary>
	/// A request to convert a dedicated IP pool to a different scaling mode.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutDedicatedIpPoolScalingAttributesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalingMode ScalingMode { get; set; }
	}
	
	/// <summary>
	/// A request to change the warm-up attributes for a dedicated IP address. This operation is useful when you want to resume the warm-up process for an existing IP address.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutDedicatedIpWarmupAttributesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int WarmupPercentage { get; set; }
	}
	
	/// <summary>
	/// <p>Enable or disable the Deliverability dashboard. When you enable the Deliverability dashboard, you gain access to reputation, deliverability, and other metrics for the domains that you use to send email using Amazon SES API v2. You also gain the ability to perform predictive inbox placement tests.</p> <p>When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition to any other fees that you accrue by using Amazon SES and other Amazon Web Services services. For more information about the features and cost of a Deliverability dashboard subscription, see <a href="http://aws.amazon.com/pinpoint/pricing/">Amazon Pinpoint Pricing</a>.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutDeliverabilityDashboardOptionRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool DashboardEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DomainDeliverabilityTrackingOption[] SubscribedDomains { get; set; }
	}
	
	/// <summary>
	/// A request to associate a configuration set with an email identity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutEmailIdentityConfigurationSetAttributesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationSetName { get; set; }
	}
	
	/// <summary>
	/// A request to enable or disable DKIM signing of email that you send from an email identity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutEmailIdentityDkimAttributesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SigningEnabled { get; set; }
	}
	
	/// <summary>
	/// A request to change the DKIM attributes for an email identity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutEmailIdentityDkimSigningAttributesRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DkimSigningAttributesOrigin SigningAttributesOrigin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DkimSigningAttributes SigningAttributes { get; set; }
	}
	
	/// <summary>
	/// A request to set the attributes that control how bounce and complaint events are processed.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutEmailIdentityFeedbackAttributesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EmailForwardingEnabled { get; set; }
	}
	
	/// <summary>
	/// A request to configure the custom MAIL FROM domain for a verified identity.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutEmailIdentityMailFromAttributesRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string MailFromDomain { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BehaviorOnMxFailure BehaviorOnMxFailure { get; set; }
	}
	
	/// <summary>
	/// A request to add an email destination to the suppression list for your account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PutSuppressedDestinationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EmailAddress { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SuppressionListReason Reason { get; set; }
	}
	
	/// <summary>
	/// Represents a request to send email messages to multiple destinations using Amazon SES. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer Guide</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendBulkEmailRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FromEmailAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FromEmailAddressIdentityArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ReplyToAddresses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeedbackForwardingEmailAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeedbackForwardingEmailAddressIdentityArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MessageTag[] DefaultEmailTags { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BulkEmailContent DefaultContent { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BulkEmailEntry[] BulkEmailEntries { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationSetName { get; set; }
	}
	
	/// <summary>
	/// Represents a request to send a custom verification email to a specified recipient.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendCustomVerificationEmailRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EmailAddress { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationSetName { get; set; }
	}
	
	/// <summary>
	/// Represents a request to send a single formatted email using Amazon SES. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-formatted.html">Amazon SES Developer Guide</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SendEmailRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string FromEmailAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FromEmailAddressIdentityArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Destination Destination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ReplyToAddresses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeedbackForwardingEmailAddress { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string FeedbackForwardingEmailAddressIdentityArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EmailContent Content { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MessageTag[] EmailTags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationSetName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListManagementOptions ListManagementOptions { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	/// <summary>
	/// &gt;Represents a request to create a preview of the MIME content of an email when provided with a template and a set of replacement data.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TestRenderEmailTemplateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateData { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
	}
	
	/// <summary>
	/// A request to change the settings for an event destination for a configuration set.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateConfigurationSetEventDestinationRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EventDestinationDefinition EventDestination { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactListRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Topic[] Topics { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateContactRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TopicPreference[] TopicPreferences { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UnsubscribeAll { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AttributesData { get; set; }
	}
	
	/// <summary>
	/// Represents a request to update an existing custom verification email template.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateCustomVerificationEmailTemplateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FromEmailAddress { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSubject { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateContent { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SuccessRedirectionURL { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FailureRedirectionURL { get; set; }
	}
	
	/// <summary>
	/// Represents a request to update a sending authorization policy for an identity. Sending authorization is an Amazon SES feature that enables you to authorize other senders to use your identities. For information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-identity-owner-tasks-management.html">Amazon SES Developer Guide</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEmailIdentityPolicyRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Policy { get; set; }
	}
	
	/// <summary>
	/// Represents a request to update an email template. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer Guide</a>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdateEmailTemplateRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public EmailTemplateContent TemplateContent { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// <p>Retrieves batches of metric data collected based on your sending activity.</p> <p>You can execute this operation no more than 16 times per second, and with at most 160 queries from the batches per second (cumulative).</p>
		/// BatchGetMetricData v2/email/metrics/batch
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchGetMetricDataResponse> BatchGetMetricDataAsync(BatchGetMetricDataPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/metrics/batch";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<BatchGetMetricDataResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create a configuration set. <i>Configuration sets</i> are groups of rules that you can apply to the emails that you send. You apply a configuration set to an email by specifying the name of the configuration set when you call the Amazon SES API v2. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.
		/// CreateConfigurationSet v2/email/configuration-sets
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateConfigurationSetResponse> CreateConfigurationSetAsync(CreateConfigurationSetPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/configuration-sets";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateConfigurationSetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>List all of the configuration sets associated with your account in the current region.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>
		/// ListConfigurationSets v2/email/configuration-sets
		/// </summary>
		/// <param name="NextToken">A token returned from a previous call to <code>ListConfigurationSets</code> to indicate the position in the list of configuration sets.</param>
		/// <param name="PageSize">The number of results to show in a single call to <code>ListConfigurationSets</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</param>
		/// <returns>Success</returns>
		public async Task<ListConfigurationSetsResponse> ListConfigurationSetsAsync(string NextToken, int PageSize, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/configuration-sets?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&PageSize="+PageSize;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListConfigurationSetsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Create an event destination. <i>Events</i> include message sends, deliveries, opens, clicks, bounces, and complaints. <i>Event destinations</i> are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.</p> <p>A single configuration set can include more than one event destination.</p>
		/// CreateConfigurationSetEventDestination v2/email/configuration-sets/{ConfigurationSetName}/event-destinations
		/// </summary>
		/// <param name="ConfigurationSetName">The name of the configuration set .</param>
		/// <returns>Success</returns>
		public async Task<CreateConfigurationSetEventDestinationResponse> CreateConfigurationSetEventDestinationAsync(string ConfigurationSetName, CreateConfigurationSetEventDestinationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/configuration-sets/"+ (ConfigurationSetName==null? "" : System.Uri.EscapeDataString(ConfigurationSetName))+"/event-destinations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateConfigurationSetEventDestinationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Retrieve a list of event destinations that are associated with a configuration set.</p> <p> <i>Events</i> include message sends, deliveries, opens, clicks, bounces, and complaints. <i>Event destinations</i> are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.</p>
		/// GetConfigurationSetEventDestinations v2/email/configuration-sets/{ConfigurationSetName}/event-destinations
		/// </summary>
		/// <param name="ConfigurationSetName">The name of the configuration set that contains the event destination.</param>
		/// <returns>Success</returns>
		public async Task<GetConfigurationSetEventDestinationsResponse> GetConfigurationSetEventDestinationsAsync(string ConfigurationSetName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/configuration-sets/"+ (ConfigurationSetName==null? "" : System.Uri.EscapeDataString(ConfigurationSetName))+"/event-destinations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetConfigurationSetEventDestinationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a contact, which is an end-user who is receiving the email, and adds them to a contact list.
		/// CreateContact v2/email/contact-lists/{ContactListName}/contacts
		/// </summary>
		/// <param name="ContactListName">The name of the contact list to which the contact should be added.</param>
		/// <returns>Success</returns>
		public async Task<CreateContactResponse> CreateContactAsync(string ContactListName, CreateContactPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/contact-lists/"+ (ContactListName==null? "" : System.Uri.EscapeDataString(ContactListName))+"/contacts";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateContactResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists the contacts present in a specific contact list.
		/// ListContacts v2/email/contact-lists/{ContactListName}/contacts
		/// </summary>
		/// <param name="ContactListName">The name of the contact list.</param>
		/// <param name="PageSize">The number of contacts that may be returned at once, which is dependent on if there are more or less contacts than the value of the PageSize. Use this parameter to paginate results. If additional contacts exist beyond the specified limit, the <code>NextToken</code> element is sent in the response. Use the <code>NextToken</code> value in subsequent requests to retrieve additional contacts.</param>
		/// <param name="NextToken">A string token indicating that there might be additional contacts available to be listed. Use the token provided in the Response to use in the subsequent call to ListContacts with the same parameters to retrieve the next page of contacts.</param>
		/// <returns>Success</returns>
		public async Task<ListContactsResponse> ListContactsAsync(string ContactListName, int PageSize, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/contact-lists/"+ (ContactListName==null? "" : System.Uri.EscapeDataString(ContactListName))+"/contacts&PageSize="+PageSize+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListContactsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a contact list.
		/// CreateContactList v2/email/contact-lists
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateContactListResponse> CreateContactListAsync(CreateContactListPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/contact-lists";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateContactListResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all of the contact lists available.
		/// ListContactLists v2/email/contact-lists
		/// </summary>
		/// <param name="PageSize">Maximum number of contact lists to return at once. Use this parameter to paginate results. If additional contact lists exist beyond the specified limit, the <code>NextToken</code> element is sent in the response. Use the <code>NextToken</code> value in subsequent requests to retrieve additional lists.</param>
		/// <param name="NextToken">A string token indicating that there might be additional contact lists available to be listed. Use the token provided in the Response to use in the subsequent call to ListContactLists with the same parameters to retrieve the next page of contact lists.</param>
		/// <returns>Success</returns>
		public async Task<ListContactListsResponse> ListContactListsAsync(int PageSize, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/contact-lists?PageSize="+PageSize+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListContactListsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a new custom verification email template.</p> <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom">Using custom verification email templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>
		/// CreateCustomVerificationEmailTemplate v2/email/custom-verification-email-templates
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateCustomVerificationEmailTemplateResponse> CreateCustomVerificationEmailTemplateAsync(CreateCustomVerificationEmailTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/custom-verification-email-templates";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateCustomVerificationEmailTemplateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists the existing custom verification email templates for your account in the current Amazon Web Services Region.</p> <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom">Using custom verification email templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>
		/// ListCustomVerificationEmailTemplates v2/email/custom-verification-email-templates
		/// </summary>
		/// <param name="NextToken">A token returned from a previous call to <code>ListCustomVerificationEmailTemplates</code> to indicate the position in the list of custom verification email templates.</param>
		/// <param name="PageSize"><p>The number of results to show in a single call to <code>ListCustomVerificationEmailTemplates</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p> <p>The value you specify has to be at least 1, and can be no more than 50.</p></param>
		/// <returns>Success</returns>
		public async Task<ListCustomVerificationEmailTemplatesResponse> ListCustomVerificationEmailTemplatesAsync(string NextToken, int PageSize, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/custom-verification-email-templates?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&PageSize="+PageSize;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListCustomVerificationEmailTemplatesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create a new pool of dedicated IP addresses. A pool can include one or more dedicated IP addresses that are associated with your Amazon Web Services account. You can associate a pool with a configuration set. When you send an email that uses that configuration set, the message is sent from one of the addresses in the associated pool.
		/// CreateDedicatedIpPool v2/email/dedicated-ip-pools
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateDedicatedIpPoolResponse> CreateDedicatedIpPoolAsync(CreateDedicatedIpPoolPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/dedicated-ip-pools";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateDedicatedIpPoolResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List all of the dedicated IP pools that exist in your Amazon Web Services account in the current Region.
		/// ListDedicatedIpPools v2/email/dedicated-ip-pools
		/// </summary>
		/// <param name="NextToken">A token returned from a previous call to <code>ListDedicatedIpPools</code> to indicate the position in the list of dedicated IP pools.</param>
		/// <param name="PageSize">The number of results to show in a single call to <code>ListDedicatedIpPools</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</param>
		/// <returns>Success</returns>
		public async Task<ListDedicatedIpPoolsResponse> ListDedicatedIpPoolsAsync(string NextToken, int PageSize, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/dedicated-ip-pools?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&PageSize="+PageSize;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListDedicatedIpPoolsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Create a new predictive inbox placement test. Predictive inbox placement tests can help you predict how your messages will be handled by various email providers around the world. When you perform a predictive inbox placement test, you provide a sample message that contains the content that you plan to send to your customers. Amazon SES then sends that message to special email addresses spread across several major email providers. After about 24 hours, the test is complete, and you can use the <code>GetDeliverabilityTestReport</code> operation to view the results of the test.
		/// CreateDeliverabilityTestReport v2/email/deliverability-dashboard/test
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateDeliverabilityTestReportResponse> CreateDeliverabilityTestReportAsync(CreateDeliverabilityTestReportPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/deliverability-dashboard/test";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateDeliverabilityTestReportResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Starts the process of verifying an email identity. An <i>identity</i> is an email address or domain that you use when you send email. Before you can use an identity to send email, you first have to verify it. By verifying an identity, you demonstrate that you're the owner of the identity, and that you've given Amazon SES API v2 permission to send email from the identity.</p> <p>When you verify an email address, Amazon SES sends an email to the address. Your email address is verified as soon as you follow the link in the verification email. </p> <p>When you verify a domain without specifying the <code>DkimSigningAttributes</code> object, this operation provides a set of DKIM tokens. You can convert these tokens into CNAME records, which you then add to the DNS configuration for your domain. Your domain is verified when Amazon SES detects these records in the DNS configuration for your domain. This verification method is known as <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p> <p>Alternatively, you can perform the verification process by providing your own public-private key pair. This verification method is known as Bring Your Own DKIM (BYODKIM). To use BYODKIM, your call to the <code>CreateEmailIdentity</code> operation has to include the <code>DkimSigningAttributes</code> object. When you specify this object, you provide a selector (a component of the DNS record name that identifies the public key to use for DKIM authentication) and a private key.</p> <p>When you verify a domain, this operation provides a set of DKIM tokens, which you can convert into CNAME tokens. You add these CNAME tokens to the DNS configuration for your domain. Your domain is verified when Amazon SES detects these records in the DNS configuration for your domain. For some DNS providers, it can take 72 hours or more to complete the domain verification process.</p> <p>Additionally, you can associate an existing configuration set with the email identity that you're verifying.</p>
		/// CreateEmailIdentity v2/email/identities
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateEmailIdentityResponse> CreateEmailIdentityAsync(CreateEmailIdentityPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/identities";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateEmailIdentityResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of all of the email identities that are associated with your Amazon Web Services account. An identity can be either an email address or a domain. This operation returns identities that are verified as well as those that aren't. This operation returns identities that are associated with Amazon SES and Amazon Pinpoint.
		/// ListEmailIdentities v2/email/identities
		/// </summary>
		/// <param name="NextToken">A token returned from a previous call to <code>ListEmailIdentities</code> to indicate the position in the list of identities.</param>
		/// <param name="PageSize"><p>The number of results to show in a single call to <code>ListEmailIdentities</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p> <p>The value you specify has to be at least 0, and can be no more than 1000.</p></param>
		/// <returns>Success</returns>
		public async Task<ListEmailIdentitiesResponse> ListEmailIdentitiesAsync(string NextToken, int PageSize, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/identities?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&PageSize="+PageSize;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListEmailIdentitiesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates the specified sending authorization policy for the given identity (an email address or a domain).</p> <note> <p>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</p> </note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
		/// CreateEmailIdentityPolicy v2/email/identities/{EmailIdentity}/policies/{PolicyName}
		/// </summary>
		/// <param name="EmailIdentity">The email identity.
		/// Min length: 1
		// </param>
		/// <param name="PolicyName"><p>The name of the policy.</p> <p>The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.</p>
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<CreateEmailIdentityPolicyResponse> CreateEmailIdentityPolicyAsync(string EmailIdentity, string PolicyName, CreateEmailIdentityPolicyPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/identities/"+ (EmailIdentity==null? "" : System.Uri.EscapeDataString(EmailIdentity))+"/policies/"+ (PolicyName==null? "" : System.Uri.EscapeDataString(PolicyName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateEmailIdentityPolicyResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes the specified sending authorization policy for the given identity (an email address or a domain). This API returns successfully even if a policy with the specified name does not exist.</p> <note> <p>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</p> </note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
		/// DeleteEmailIdentityPolicy v2/email/identities/{EmailIdentity}/policies/{PolicyName}
		/// </summary>
		/// <param name="EmailIdentity">The email identity.
		/// Min length: 1
		// </param>
		/// <param name="PolicyName"><p>The name of the policy.</p> <p>The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.</p>
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteEmailIdentityPolicyResponse> DeleteEmailIdentityPolicyAsync(string EmailIdentity, string PolicyName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/identities/"+ (EmailIdentity==null? "" : System.Uri.EscapeDataString(EmailIdentity))+"/policies/"+ (PolicyName==null? "" : System.Uri.EscapeDataString(PolicyName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteEmailIdentityPolicyResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates the specified sending authorization policy for the given identity (an email address or a domain). This API returns successfully even if a policy with the specified name does not exist.</p> <note> <p>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</p> </note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
		/// UpdateEmailIdentityPolicy v2/email/identities/{EmailIdentity}/policies/{PolicyName}
		/// </summary>
		/// <param name="EmailIdentity">The email identity.
		/// Min length: 1
		// </param>
		/// <param name="PolicyName"><p>The name of the policy.</p> <p>The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.</p>
		/// Min length: 1
		/// Max length: 64
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateEmailIdentityPolicyResponse> UpdateEmailIdentityPolicyAsync(string EmailIdentity, string PolicyName, UpdateEmailIdentityPolicyPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/identities/"+ (EmailIdentity==null? "" : System.Uri.EscapeDataString(EmailIdentity))+"/policies/"+ (PolicyName==null? "" : System.Uri.EscapeDataString(PolicyName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateEmailIdentityPolicyResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates an email template. Email templates enable you to send personalized email to one or more destinations in a single API operation. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
		/// CreateEmailTemplate v2/email/templates
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateEmailTemplateResponse> CreateEmailTemplateAsync(CreateEmailTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/templates";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateEmailTemplateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists the email templates present in your Amazon SES account in the current Amazon Web Services Region.</p> <p>You can execute this operation no more than once per second.</p>
		/// ListEmailTemplates v2/email/templates
		/// </summary>
		/// <param name="NextToken">A token returned from a previous call to <code>ListEmailTemplates</code> to indicate the position in the list of email templates.</param>
		/// <param name="PageSize"><p>The number of results to show in a single call to <code>ListEmailTemplates</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p> <p>The value you specify has to be at least 1, and can be no more than 10.</p></param>
		/// <returns>Success</returns>
		public async Task<ListEmailTemplatesResponse> ListEmailTemplatesAsync(string NextToken, int PageSize, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/templates?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&PageSize="+PageSize;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListEmailTemplatesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates an import job for a data destination.
		/// CreateImportJob v2/email/import-jobs
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateImportJobResponse> CreateImportJobAsync(CreateImportJobPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/import-jobs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateImportJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Lists all of the import jobs.
		/// ListImportJobs v2/email/import-jobs
		/// </summary>
		/// <param name="NextToken">A string token indicating that there might be additional import jobs available to be listed. Copy this token to a subsequent call to <code>ListImportJobs</code> with the same parameters to retrieve the next page of import jobs.</param>
		/// <param name="PageSize">Maximum number of import jobs to return at once. Use this parameter to paginate results. If additional import jobs exist beyond the specified limit, the <code>NextToken</code> element is sent in the response. Use the <code>NextToken</code> value in subsequent requests to retrieve additional addresses.</param>
		/// <returns>Success</returns>
		public async Task<ListImportJobsResponse> ListImportJobsAsync(string NextToken, int PageSize, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/import-jobs?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&PageSize="+PageSize;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListImportJobsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Delete an existing configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>
		/// DeleteConfigurationSet v2/email/configuration-sets/{ConfigurationSetName}
		/// </summary>
		/// <param name="ConfigurationSetName">The name of the configuration set.</param>
		/// <returns>Success</returns>
		public async Task<DeleteConfigurationSetResponse> DeleteConfigurationSetAsync(string ConfigurationSetName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/configuration-sets/"+ (ConfigurationSetName==null? "" : System.Uri.EscapeDataString(ConfigurationSetName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteConfigurationSetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Get information about an existing configuration set, including the dedicated IP pool that it's associated with, whether or not it's enabled for sending email, and more.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>
		/// GetConfigurationSet v2/email/configuration-sets/{ConfigurationSetName}
		/// </summary>
		/// <param name="ConfigurationSetName">The name of the configuration set.</param>
		/// <returns>Success</returns>
		public async Task<GetConfigurationSetResponse> GetConfigurationSetAsync(string ConfigurationSetName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/configuration-sets/"+ (ConfigurationSetName==null? "" : System.Uri.EscapeDataString(ConfigurationSetName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetConfigurationSetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Delete an event destination.</p> <p> <i>Events</i> include message sends, deliveries, opens, clicks, bounces, and complaints. <i>Event destinations</i> are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.</p>
		/// DeleteConfigurationSetEventDestination v2/email/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}
		/// </summary>
		/// <param name="ConfigurationSetName">The name of the configuration set that contains the event destination to delete.</param>
		/// <param name="EventDestinationName">The name of the event destination to delete.</param>
		/// <returns>Success</returns>
		public async Task<DeleteConfigurationSetEventDestinationResponse> DeleteConfigurationSetEventDestinationAsync(string ConfigurationSetName, string EventDestinationName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/configuration-sets/"+ (ConfigurationSetName==null? "" : System.Uri.EscapeDataString(ConfigurationSetName))+"/event-destinations/"+ (EventDestinationName==null? "" : System.Uri.EscapeDataString(EventDestinationName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteConfigurationSetEventDestinationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Update the configuration of an event destination for a configuration set.</p> <p> <i>Events</i> include message sends, deliveries, opens, clicks, bounces, and complaints. <i>Event destinations</i> are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.</p>
		/// UpdateConfigurationSetEventDestination v2/email/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}
		/// </summary>
		/// <param name="ConfigurationSetName">The name of the configuration set that contains the event destination to modify.</param>
		/// <param name="EventDestinationName">The name of the event destination.</param>
		/// <returns>Success</returns>
		public async Task<UpdateConfigurationSetEventDestinationResponse> UpdateConfigurationSetEventDestinationAsync(string ConfigurationSetName, string EventDestinationName, UpdateConfigurationSetEventDestinationPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/configuration-sets/"+ (ConfigurationSetName==null? "" : System.Uri.EscapeDataString(ConfigurationSetName))+"/event-destinations/"+ (EventDestinationName==null? "" : System.Uri.EscapeDataString(EventDestinationName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateConfigurationSetEventDestinationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes a contact from a contact list.
		/// DeleteContact v2/email/contact-lists/{ContactListName}/contacts/{EmailAddress}
		/// </summary>
		/// <param name="ContactListName">The name of the contact list from which the contact should be removed.</param>
		/// <param name="EmailAddress">The contact's email address.</param>
		/// <returns>Success</returns>
		public async Task<DeleteContactResponse> DeleteContactAsync(string ContactListName, string EmailAddress, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/contact-lists/"+ (ContactListName==null? "" : System.Uri.EscapeDataString(ContactListName))+"/contacts/"+ (EmailAddress==null? "" : System.Uri.EscapeDataString(EmailAddress));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteContactResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a contact from a contact list.
		/// GetContact v2/email/contact-lists/{ContactListName}/contacts/{EmailAddress}
		/// </summary>
		/// <param name="ContactListName">The name of the contact list to which the contact belongs.</param>
		/// <param name="EmailAddress">The contact's email address.</param>
		/// <returns>Success</returns>
		public async Task<GetContactResponse> GetContactAsync(string ContactListName, string EmailAddress, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/contact-lists/"+ (ContactListName==null? "" : System.Uri.EscapeDataString(ContactListName))+"/contacts/"+ (EmailAddress==null? "" : System.Uri.EscapeDataString(EmailAddress));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetContactResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a contact's preferences for a list. It is not necessary to specify all existing topic preferences in the TopicPreferences object, just the ones that need updating.
		/// UpdateContact v2/email/contact-lists/{ContactListName}/contacts/{EmailAddress}
		/// </summary>
		/// <param name="ContactListName">The name of the contact list.</param>
		/// <param name="EmailAddress">The contact's email address.</param>
		/// <returns>Success</returns>
		public async Task<UpdateContactResponse> UpdateContactAsync(string ContactListName, string EmailAddress, UpdateContactPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/contact-lists/"+ (ContactListName==null? "" : System.Uri.EscapeDataString(ContactListName))+"/contacts/"+ (EmailAddress==null? "" : System.Uri.EscapeDataString(EmailAddress));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateContactResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a contact list and all of the contacts on that list.
		/// DeleteContactList v2/email/contact-lists/{ContactListName}
		/// </summary>
		/// <param name="ContactListName">The name of the contact list.</param>
		/// <returns>Success</returns>
		public async Task<DeleteContactListResponse> DeleteContactListAsync(string ContactListName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/contact-lists/"+ (ContactListName==null? "" : System.Uri.EscapeDataString(ContactListName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteContactListResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns contact list metadata. It does not return any information about the contacts present in the list.
		/// GetContactList v2/email/contact-lists/{ContactListName}
		/// </summary>
		/// <param name="ContactListName">The name of the contact list.</param>
		/// <returns>Success</returns>
		public async Task<GetContactListResponse> GetContactListAsync(string ContactListName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/contact-lists/"+ (ContactListName==null? "" : System.Uri.EscapeDataString(ContactListName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetContactListResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates contact list metadata. This operation does a complete replacement.
		/// UpdateContactList v2/email/contact-lists/{ContactListName}
		/// </summary>
		/// <param name="ContactListName">The name of the contact list.</param>
		/// <returns>Success</returns>
		public async Task<UpdateContactListResponse> UpdateContactListAsync(string ContactListName, UpdateContactListPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/contact-lists/"+ (ContactListName==null? "" : System.Uri.EscapeDataString(ContactListName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateContactListResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes an existing custom verification email template.</p> <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom">Using custom verification email templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>
		/// DeleteCustomVerificationEmailTemplate v2/email/custom-verification-email-templates/{TemplateName}
		/// </summary>
		/// <param name="TemplateName">The name of the custom verification email template that you want to delete.
		/// Min length: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteCustomVerificationEmailTemplateResponse> DeleteCustomVerificationEmailTemplateAsync(string TemplateName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/custom-verification-email-templates/"+ (TemplateName==null? "" : System.Uri.EscapeDataString(TemplateName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteCustomVerificationEmailTemplateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the custom email verification template for the template name you specify.</p> <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom">Using custom verification email templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>
		/// GetCustomVerificationEmailTemplate v2/email/custom-verification-email-templates/{TemplateName}
		/// </summary>
		/// <param name="TemplateName">The name of the custom verification email template that you want to retrieve.
		/// Min length: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<GetCustomVerificationEmailTemplateResponse> GetCustomVerificationEmailTemplateAsync(string TemplateName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/custom-verification-email-templates/"+ (TemplateName==null? "" : System.Uri.EscapeDataString(TemplateName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetCustomVerificationEmailTemplateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates an existing custom verification email template.</p> <p>For more information about custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom">Using custom verification email templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>
		/// UpdateCustomVerificationEmailTemplate v2/email/custom-verification-email-templates/{TemplateName}
		/// </summary>
		/// <param name="TemplateName">The name of the custom verification email template that you want to update.
		/// Min length: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateCustomVerificationEmailTemplateResponse> UpdateCustomVerificationEmailTemplateAsync(string TemplateName, UpdateCustomVerificationEmailTemplatePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/custom-verification-email-templates/"+ (TemplateName==null? "" : System.Uri.EscapeDataString(TemplateName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateCustomVerificationEmailTemplateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Delete a dedicated IP pool.
		/// DeleteDedicatedIpPool v2/email/dedicated-ip-pools/{PoolName}
		/// </summary>
		/// <param name="PoolName">The name of the dedicated IP pool that you want to delete.</param>
		/// <returns>Success</returns>
		public async Task<DeleteDedicatedIpPoolResponse> DeleteDedicatedIpPoolAsync(string PoolName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/dedicated-ip-pools/"+ (PoolName==null? "" : System.Uri.EscapeDataString(PoolName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteDedicatedIpPoolResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve information about the dedicated pool.
		/// GetDedicatedIpPool v2/email/dedicated-ip-pools/{PoolName}
		/// </summary>
		/// <param name="PoolName">The name of the dedicated IP pool to retrieve.</param>
		/// <returns>Success</returns>
		public async Task<GetDedicatedIpPoolResponse> GetDedicatedIpPoolAsync(string PoolName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/dedicated-ip-pools/"+ (PoolName==null? "" : System.Uri.EscapeDataString(PoolName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetDedicatedIpPoolResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an email identity. An identity can be either an email address or a domain name.
		/// DeleteEmailIdentity v2/email/identities/{EmailIdentity}
		/// </summary>
		/// <param name="EmailIdentity">The identity (that is, the email address or domain) to delete.
		/// Min length: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteEmailIdentityResponse> DeleteEmailIdentityAsync(string EmailIdentity, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/identities/"+ (EmailIdentity==null? "" : System.Uri.EscapeDataString(EmailIdentity));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteEmailIdentityResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides information about a specific identity, including the identity's verification status, sending authorization policies, its DKIM authentication status, and its custom Mail-From settings.
		/// GetEmailIdentity v2/email/identities/{EmailIdentity}
		/// </summary>
		/// <param name="EmailIdentity">The email identity.
		/// Min length: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<GetEmailIdentityResponse> GetEmailIdentityAsync(string EmailIdentity, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/identities/"+ (EmailIdentity==null? "" : System.Uri.EscapeDataString(EmailIdentity));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEmailIdentityResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Deletes an email template.</p> <p>You can execute this operation no more than once per second.</p>
		/// DeleteEmailTemplate v2/email/templates/{TemplateName}
		/// </summary>
		/// <param name="TemplateName">The name of the template to be deleted.
		/// Min length: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<DeleteEmailTemplateResponse> DeleteEmailTemplateAsync(string TemplateName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/templates/"+ (TemplateName==null? "" : System.Uri.EscapeDataString(TemplateName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteEmailTemplateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Displays the template object (which includes the subject line, HTML part and text part) for the template you specify.</p> <p>You can execute this operation no more than once per second.</p>
		/// GetEmailTemplate v2/email/templates/{TemplateName}
		/// </summary>
		/// <param name="TemplateName">The name of the template.
		/// Min length: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<GetEmailTemplateResponse> GetEmailTemplateAsync(string TemplateName, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/templates/"+ (TemplateName==null? "" : System.Uri.EscapeDataString(TemplateName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEmailTemplateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Updates an email template. Email templates enable you to send personalized email to one or more destinations in a single API operation. For more information, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
		/// UpdateEmailTemplate v2/email/templates/{TemplateName}
		/// </summary>
		/// <param name="TemplateName">The name of the template.
		/// Min length: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<UpdateEmailTemplateResponse> UpdateEmailTemplateAsync(string TemplateName, UpdateEmailTemplatePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/templates/"+ (TemplateName==null? "" : System.Uri.EscapeDataString(TemplateName));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdateEmailTemplateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes an email address from the suppression list for your account.
		/// DeleteSuppressedDestination v2/email/suppression/addresses/{EmailAddress}
		/// </summary>
		/// <param name="EmailAddress">The suppressed email destination to remove from the account suppression list.</param>
		/// <returns>Success</returns>
		public async Task<DeleteSuppressedDestinationResponse> DeleteSuppressedDestinationAsync(string EmailAddress, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/suppression/addresses/"+ (EmailAddress==null? "" : System.Uri.EscapeDataString(EmailAddress));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DeleteSuppressedDestinationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves information about a specific email address that's on the suppression list for your account.
		/// GetSuppressedDestination v2/email/suppression/addresses/{EmailAddress}
		/// </summary>
		/// <param name="EmailAddress">The email address that's on the account suppression list.</param>
		/// <returns>Success</returns>
		public async Task<GetSuppressedDestinationResponse> GetSuppressedDestinationAsync(string EmailAddress, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/suppression/addresses/"+ (EmailAddress==null? "" : System.Uri.EscapeDataString(EmailAddress));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetSuppressedDestinationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Obtain information about the email-sending status and capabilities of your Amazon SES account in the current Amazon Web Services Region.
		/// GetAccount v2/email/account
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetAccountResponse> GetAccountAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/account";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetAccountResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve a list of the blacklists that your dedicated IP addresses appear on.
		/// GetBlacklistReports v2/email/deliverability-dashboard/blacklist-report#BlacklistItemNames
		/// </summary>
		/// <param name="BlacklistItemNames">A list of IP addresses that you want to retrieve blacklist information about. You can only specify the dedicated IP addresses that you use to send email using Amazon SES or Amazon Pinpoint.</param>
		/// <returns>Success</returns>
		public async Task<GetBlacklistReportsResponse> GetBlacklistReportsAsync(string[] BlacklistItemNames, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/deliverability-dashboard/blacklist-report#BlacklistItemNames?"+string.Join("&", BlacklistItemNames.Select(z => $"BlacklistItemNames={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetBlacklistReportsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Get information about a dedicated IP address, including the name of the dedicated IP pool that it's associated with, as well information about the automatic warm-up process for the address.
		/// GetDedicatedIp v2/email/dedicated-ips/{IP}
		/// </summary>
		/// <param name="IP">The IP address that you want to obtain more information about. The value you specify has to be a dedicated IP address that's assocaited with your Amazon Web Services account.</param>
		/// <returns>Success</returns>
		public async Task<GetDedicatedIpResponse> GetDedicatedIpAsync(string IP, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/dedicated-ips/"+ (IP==null? "" : System.Uri.EscapeDataString(IP));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetDedicatedIpResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// List the dedicated IP addresses that are associated with your Amazon Web Services account.
		/// GetDedicatedIps v2/email/dedicated-ips
		/// </summary>
		/// <param name="PoolName">The name of the IP pool that the dedicated IP address is associated with.</param>
		/// <param name="NextToken">A token returned from a previous call to <code>GetDedicatedIps</code> to indicate the position of the dedicated IP pool in the list of IP pools.</param>
		/// <param name="PageSize">The number of results to show in a single call to <code>GetDedicatedIpsRequest</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</param>
		/// <returns>Success</returns>
		public async Task<GetDedicatedIpsResponse> GetDedicatedIpsAsync(string PoolName, string NextToken, int PageSize, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/dedicated-ips?PoolName=" + (PoolName==null? "" : System.Uri.EscapeDataString(PoolName))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&PageSize="+PageSize;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetDedicatedIpsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Retrieve information about the status of the Deliverability dashboard for your account. When the Deliverability dashboard is enabled, you gain access to reputation, deliverability, and other metrics for the domains that you use to send email. You also gain the ability to perform predictive inbox placement tests.</p> <p>When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition to any other fees that you accrue by using Amazon SES and other Amazon Web Services services. For more information about the features and cost of a Deliverability dashboard subscription, see <a href="http://aws.amazon.com/ses/pricing/">Amazon SES Pricing</a>.</p>
		/// GetDeliverabilityDashboardOptions v2/email/deliverability-dashboard
		/// </summary>
		/// <returns>Success</returns>
		public async Task<GetDeliverabilityDashboardOptionsResponse> GetDeliverabilityDashboardOptionsAsync(Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/deliverability-dashboard";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetDeliverabilityDashboardOptionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Enable or disable the Deliverability dashboard. When you enable the Deliverability dashboard, you gain access to reputation, deliverability, and other metrics for the domains that you use to send email. You also gain the ability to perform predictive inbox placement tests.</p> <p>When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition to any other fees that you accrue by using Amazon SES and other Amazon Web Services services. For more information about the features and cost of a Deliverability dashboard subscription, see <a href="http://aws.amazon.com/ses/pricing/">Amazon SES Pricing</a>.</p>
		/// PutDeliverabilityDashboardOption v2/email/deliverability-dashboard
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutDeliverabilityDashboardOptionResponse> PutDeliverabilityDashboardOptionAsync(PutDeliverabilityDashboardOptionPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/deliverability-dashboard";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutDeliverabilityDashboardOptionResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve the results of a predictive inbox placement test.
		/// GetDeliverabilityTestReport v2/email/deliverability-dashboard/test-reports/{ReportId}
		/// </summary>
		/// <param name="ReportId">A unique string that identifies the predictive inbox placement test.</param>
		/// <returns>Success</returns>
		public async Task<GetDeliverabilityTestReportResponse> GetDeliverabilityTestReportAsync(string ReportId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/deliverability-dashboard/test-reports/"+ (ReportId==null? "" : System.Uri.EscapeDataString(ReportId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetDeliverabilityTestReportResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve all the deliverability data for a specific campaign. This data is available for a campaign only if the campaign sent email by using a domain that the Deliverability dashboard is enabled for.
		/// GetDomainDeliverabilityCampaign v2/email/deliverability-dashboard/campaigns/{CampaignId}
		/// </summary>
		/// <param name="CampaignId">The unique identifier for the campaign. The Deliverability dashboard automatically generates and assigns this identifier to a campaign.</param>
		/// <returns>Success</returns>
		public async Task<GetDomainDeliverabilityCampaignResponse> GetDomainDeliverabilityCampaignAsync(string CampaignId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/deliverability-dashboard/campaigns/"+ (CampaignId==null? "" : System.Uri.EscapeDataString(CampaignId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetDomainDeliverabilityCampaignResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve inbox placement and engagement rates for the domains that you use to send email.
		/// GetDomainStatisticsReport v2/email/deliverability-dashboard/statistics-report/{Domain}#StartDate&EndDate
		/// </summary>
		/// <param name="Domain">The domain that you want to obtain deliverability metrics for.
		/// Min length: 1
		// </param>
		/// <param name="StartDate">The first day (in Unix time) that you want to obtain domain deliverability metrics for.</param>
		/// <param name="EndDate">The last day (in Unix time) that you want to obtain domain deliverability metrics for. The <code>EndDate</code> that you specify has to be less than or equal to 30 days after the <code>StartDate</code>.</param>
		/// <returns>Success</returns>
		public async Task<GetDomainStatisticsReportResponse> GetDomainStatisticsReportAsync(string Domain, System.DateTimeOffset StartDate, System.DateTimeOffset EndDate, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/deliverability-dashboard/statistics-report/"+ (Domain==null? "" : System.Uri.EscapeDataString(Domain))+"#StartDate&EndDate&StartDate=" + StartDate.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&EndDate=" + EndDate.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ");
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetDomainStatisticsReportResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Returns the requested sending authorization policies for the given identity (an email address or a domain). The policies are returned as a map of policy names to policy contents. You can retrieve a maximum of 20 policies at a time.</p> <note> <p>This API is for the identity owner only. If you have not verified the identity, this API will return an error.</p> </note> <p>Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p> <p>You can execute this operation no more than once per second.</p>
		/// GetEmailIdentityPolicies v2/email/identities/{EmailIdentity}/policies
		/// </summary>
		/// <param name="EmailIdentity">The email identity.
		/// Min length: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<GetEmailIdentityPoliciesResponse> GetEmailIdentityPoliciesAsync(string EmailIdentity, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/identities/"+ (EmailIdentity==null? "" : System.Uri.EscapeDataString(EmailIdentity))+"/policies";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetEmailIdentityPoliciesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Provides information about an import job.
		/// GetImportJob v2/email/import-jobs/{JobId}
		/// </summary>
		/// <param name="JobId">The ID of the import job.
		/// Min length: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<GetImportJobResponse> GetImportJobAsync(string JobId, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/import-jobs/"+ (JobId==null? "" : System.Uri.EscapeDataString(JobId));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<GetImportJobResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Show a list of the predictive inbox placement tests that you've performed, regardless of their statuses. For predictive inbox placement tests that are complete, you can use the <code>GetDeliverabilityTestReport</code> operation to view the results.
		/// ListDeliverabilityTestReports v2/email/deliverability-dashboard/test-reports
		/// </summary>
		/// <param name="NextToken">A token returned from a previous call to <code>ListDeliverabilityTestReports</code> to indicate the position in the list of predictive inbox placement tests.</param>
		/// <param name="PageSize"><p>The number of results to show in a single call to <code>ListDeliverabilityTestReports</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p> <p>The value you specify has to be at least 0, and can be no more than 1000.</p></param>
		/// <returns>Success</returns>
		public async Task<ListDeliverabilityTestReportsResponse> ListDeliverabilityTestReportsAsync(string NextToken, int PageSize, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/deliverability-dashboard/test-reports?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&PageSize="+PageSize;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListDeliverabilityTestReportsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve deliverability data for all the campaigns that used a specific domain to send email during a specified time range. This data is available for a domain only if you enabled the Deliverability dashboard for the domain.
		/// ListDomainDeliverabilityCampaigns v2/email/deliverability-dashboard/domains/{SubscribedDomain}/campaigns#StartDate&EndDate
		/// </summary>
		/// <param name="StartDate">The first day that you want to obtain deliverability data for.</param>
		/// <param name="EndDate">The last day that you want to obtain deliverability data for. This value has to be less than or equal to 30 days after the value of the <code>StartDate</code> parameter.</param>
		/// <param name="SubscribedDomain">The domain to obtain deliverability data for.</param>
		/// <param name="NextToken">A token that’s returned from a previous call to the <code>ListDomainDeliverabilityCampaigns</code> operation. This token indicates the position of a campaign in the list of campaigns.</param>
		/// <param name="PageSize">The maximum number of results to include in response to a single call to the <code>ListDomainDeliverabilityCampaigns</code> operation. If the number of results is larger than the number that you specify in this parameter, the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</param>
		/// <returns>Success</returns>
		public async Task<ListDomainDeliverabilityCampaignsResponse> ListDomainDeliverabilityCampaignsAsync(System.DateTimeOffset StartDate, System.DateTimeOffset EndDate, string SubscribedDomain, string NextToken, int PageSize, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/deliverability-dashboard/domains/"+ (SubscribedDomain==null? "" : System.Uri.EscapeDataString(SubscribedDomain))+"/campaigns#StartDate&EndDate?StartDate=" + StartDate.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&EndDate=" + EndDate.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&PageSize="+PageSize;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListDomainDeliverabilityCampaignsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Lists the recommendations present in your Amazon SES account in the current Amazon Web Services Region.</p> <p>You can execute this operation no more than once per second.</p>
		/// ListRecommendations v2/email/vdm/recommendations
		/// </summary>
		/// <param name="PageSize">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListRecommendationsResponse> ListRecommendationsAsync(string PageSize, string NextToken, ListRecommendationsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/vdm/recommendations?PageSize=" + (PageSize==null? "" : System.Uri.EscapeDataString(PageSize))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListRecommendationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieves a list of email addresses that are on the suppression list for your account.
		/// ListSuppressedDestinations v2/email/suppression/addresses
		/// </summary>
		/// <param name="Reason">The factors that caused the email address to be added to .</param>
		/// <param name="StartDate">Used to filter the list of suppressed email destinations so that it only includes addresses that were added to the list after a specific date.</param>
		/// <param name="EndDate">Used to filter the list of suppressed email destinations so that it only includes addresses that were added to the list before a specific date.</param>
		/// <param name="NextToken">A token returned from a previous call to <code>ListSuppressedDestinations</code> to indicate the position in the list of suppressed email addresses.</param>
		/// <param name="PageSize">The number of results to show in a single call to <code>ListSuppressedDestinations</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</param>
		/// <returns>Success</returns>
		public async Task<ListSuppressedDestinationsResponse> ListSuppressedDestinationsAsync(SuppressionListReason[] Reason, System.DateTimeOffset StartDate, System.DateTimeOffset EndDate, string NextToken, int PageSize, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/suppression/addresses?"+string.Join("&", Reason.Select(z => $"Reason={z}"))+"&StartDate=" + StartDate.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&EndDate=" + EndDate.ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ss.fffffffZ")+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken))+"&PageSize="+PageSize;
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListSuppressedDestinationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds an email address to the suppression list for your account.
		/// PutSuppressedDestination v2/email/suppression/addresses
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutSuppressedDestinationResponse> PutSuppressedDestinationAsync(PutSuppressedDestinationPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/suppression/addresses";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutSuppressedDestinationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Retrieve a list of the tags (keys and values) that are associated with a specified resource. A <i>tag</i> is a label that you optionally define and associate with a resource. Each tag consists of a required <i>tag key</i> and an optional associated <i>tag value</i>. A tag key is a general label that acts as a category for more specific tag values. A tag value acts as a descriptor within a tag key.
		/// ListTagsForResource v2/email/tags#ResourceArn
		/// </summary>
		/// <param name="ResourceArn">The Amazon Resource Name (ARN) of the resource that you want to retrieve tag information for.</param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string ResourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/tags#ResourceArn?ResourceArn=" + (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Enable or disable the automatic warm-up feature for dedicated IP addresses.
		/// PutAccountDedicatedIpWarmupAttributes v2/email/account/dedicated-ips/warmup
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutAccountDedicatedIpWarmupAttributesResponse> PutAccountDedicatedIpWarmupAttributesAsync(PutAccountDedicatedIpWarmupAttributesPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/account/dedicated-ips/warmup";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutAccountDedicatedIpWarmupAttributesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Update your Amazon SES account details.
		/// PutAccountDetails v2/email/account/details
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutAccountDetailsResponse> PutAccountDetailsAsync(PutAccountDetailsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/account/details";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutAccountDetailsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Enable or disable the ability of your account to send email.
		/// PutAccountSendingAttributes v2/email/account/sending
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutAccountSendingAttributesResponse> PutAccountSendingAttributesAsync(PutAccountSendingAttributesPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/account/sending";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutAccountSendingAttributesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Change the settings for the account-level suppression list.
		/// PutAccountSuppressionAttributes v2/email/account/suppression
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutAccountSuppressionAttributesResponse> PutAccountSuppressionAttributesAsync(PutAccountSuppressionAttributesPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/account/suppression";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutAccountSuppressionAttributesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Update your Amazon SES account VDM attributes.</p> <p>You can execute this operation no more than once per second.</p>
		/// PutAccountVdmAttributes v2/email/account/vdm
		/// </summary>
		/// <returns>Success</returns>
		public async Task<PutAccountVdmAttributesResponse> PutAccountVdmAttributesAsync(PutAccountVdmAttributesPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/account/vdm";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutAccountVdmAttributesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Associate a configuration set with a dedicated IP pool. You can use dedicated IP pools to create groups of dedicated IP addresses for sending specific types of email.
		/// PutConfigurationSetDeliveryOptions v2/email/configuration-sets/{ConfigurationSetName}/delivery-options
		/// </summary>
		/// <param name="ConfigurationSetName">The name of the configuration set to associate with a dedicated IP pool.</param>
		/// <returns>Success</returns>
		public async Task<PutConfigurationSetDeliveryOptionsResponse> PutConfigurationSetDeliveryOptionsAsync(string ConfigurationSetName, PutConfigurationSetDeliveryOptionsPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/configuration-sets/"+ (ConfigurationSetName==null? "" : System.Uri.EscapeDataString(ConfigurationSetName))+"/delivery-options";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutConfigurationSetDeliveryOptionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Enable or disable collection of reputation metrics for emails that you send using a particular configuration set in a specific Amazon Web Services Region.
		/// PutConfigurationSetReputationOptions v2/email/configuration-sets/{ConfigurationSetName}/reputation-options
		/// </summary>
		/// <param name="ConfigurationSetName">The name of the configuration set.</param>
		/// <returns>Success</returns>
		public async Task<PutConfigurationSetReputationOptionsResponse> PutConfigurationSetReputationOptionsAsync(string ConfigurationSetName, PutConfigurationSetReputationOptionsPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/configuration-sets/"+ (ConfigurationSetName==null? "" : System.Uri.EscapeDataString(ConfigurationSetName))+"/reputation-options";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutConfigurationSetReputationOptionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Enable or disable email sending for messages that use a particular configuration set in a specific Amazon Web Services Region.
		/// PutConfigurationSetSendingOptions v2/email/configuration-sets/{ConfigurationSetName}/sending
		/// </summary>
		/// <param name="ConfigurationSetName">The name of the configuration set to enable or disable email sending for.</param>
		/// <returns>Success</returns>
		public async Task<PutConfigurationSetSendingOptionsResponse> PutConfigurationSetSendingOptionsAsync(string ConfigurationSetName, PutConfigurationSetSendingOptionsPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/configuration-sets/"+ (ConfigurationSetName==null? "" : System.Uri.EscapeDataString(ConfigurationSetName))+"/sending";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutConfigurationSetSendingOptionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Specify the account suppression list preferences for a configuration set.
		/// PutConfigurationSetSuppressionOptions v2/email/configuration-sets/{ConfigurationSetName}/suppression-options
		/// </summary>
		/// <param name="ConfigurationSetName">The name of the configuration set to change the suppression list preferences for.</param>
		/// <returns>Success</returns>
		public async Task<PutConfigurationSetSuppressionOptionsResponse> PutConfigurationSetSuppressionOptionsAsync(string ConfigurationSetName, PutConfigurationSetSuppressionOptionsPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/configuration-sets/"+ (ConfigurationSetName==null? "" : System.Uri.EscapeDataString(ConfigurationSetName))+"/suppression-options";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutConfigurationSetSuppressionOptionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Specify a custom domain to use for open and click tracking elements in email that you send.
		/// PutConfigurationSetTrackingOptions v2/email/configuration-sets/{ConfigurationSetName}/tracking-options
		/// </summary>
		/// <param name="ConfigurationSetName">The name of the configuration set.</param>
		/// <returns>Success</returns>
		public async Task<PutConfigurationSetTrackingOptionsResponse> PutConfigurationSetTrackingOptionsAsync(string ConfigurationSetName, PutConfigurationSetTrackingOptionsPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/configuration-sets/"+ (ConfigurationSetName==null? "" : System.Uri.EscapeDataString(ConfigurationSetName))+"/tracking-options";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutConfigurationSetTrackingOptionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Specify VDM preferences for email that you send using the configuration set.</p> <p>You can execute this operation no more than once per second.</p>
		/// PutConfigurationSetVdmOptions v2/email/configuration-sets/{ConfigurationSetName}/vdm-options
		/// </summary>
		/// <param name="ConfigurationSetName">The name of the configuration set.</param>
		/// <returns>Success</returns>
		public async Task<PutConfigurationSetVdmOptionsResponse> PutConfigurationSetVdmOptionsAsync(string ConfigurationSetName, PutConfigurationSetVdmOptionsPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/configuration-sets/"+ (ConfigurationSetName==null? "" : System.Uri.EscapeDataString(ConfigurationSetName))+"/vdm-options";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutConfigurationSetVdmOptionsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Move a dedicated IP address to an existing dedicated IP pool.</p> <note> <p>The dedicated IP address that you specify must already exist, and must be associated with your Amazon Web Services account. </p> <p>The dedicated IP pool you specify must already exist. You can create a new pool by using the <code>CreateDedicatedIpPool</code> operation.</p> </note>
		/// PutDedicatedIpInPool v2/email/dedicated-ips/{IP}/pool
		/// </summary>
		/// <param name="IP">The IP address that you want to move to the dedicated IP pool. The value you specify has to be a dedicated IP address that's associated with your Amazon Web Services account.</param>
		/// <returns>Success</returns>
		public async Task<PutDedicatedIpInPoolResponse> PutDedicatedIpInPoolAsync(string IP, PutDedicatedIpInPoolPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/dedicated-ips/"+ (IP==null? "" : System.Uri.EscapeDataString(IP))+"/pool";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutDedicatedIpInPoolResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Used to convert a dedicated IP pool to a different scaling mode.</p> <note> <p> <code>MANAGED</code> pools cannot be converted to <code>STANDARD</code> scaling mode.</p> </note>
		/// PutDedicatedIpPoolScalingAttributes v2/email/dedicated-ip-pools/{PoolName}/scaling
		/// </summary>
		/// <param name="PoolName">The name of the dedicated IP pool.</param>
		/// <returns>Success</returns>
		public async Task<PutDedicatedIpPoolScalingAttributesResponse> PutDedicatedIpPoolScalingAttributesAsync(string PoolName, PutDedicatedIpPoolScalingAttributesPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/dedicated-ip-pools/"+ (PoolName==null? "" : System.Uri.EscapeDataString(PoolName))+"/scaling";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutDedicatedIpPoolScalingAttributesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p/>
		/// PutDedicatedIpWarmupAttributes v2/email/dedicated-ips/{IP}/warmup
		/// </summary>
		/// <param name="IP">The dedicated IP address that you want to update the warm-up attributes for.</param>
		/// <returns>Success</returns>
		public async Task<PutDedicatedIpWarmupAttributesResponse> PutDedicatedIpWarmupAttributesAsync(string IP, PutDedicatedIpWarmupAttributesPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/dedicated-ips/"+ (IP==null? "" : System.Uri.EscapeDataString(IP))+"/warmup";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutDedicatedIpWarmupAttributesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Used to associate a configuration set with an email identity.
		/// PutEmailIdentityConfigurationSetAttributes v2/email/identities/{EmailIdentity}/configuration-set
		/// </summary>
		/// <param name="EmailIdentity">The email address or domain to associate with a configuration set.
		/// Min length: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<PutEmailIdentityConfigurationSetAttributesResponse> PutEmailIdentityConfigurationSetAttributesAsync(string EmailIdentity, PutEmailIdentityConfigurationSetAttributesPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/identities/"+ (EmailIdentity==null? "" : System.Uri.EscapeDataString(EmailIdentity))+"/configuration-set";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutEmailIdentityConfigurationSetAttributesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Used to enable or disable DKIM authentication for an email identity.
		/// PutEmailIdentityDkimAttributes v2/email/identities/{EmailIdentity}/dkim
		/// </summary>
		/// <param name="EmailIdentity">The email identity.
		/// Min length: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<PutEmailIdentityDkimAttributesResponse> PutEmailIdentityDkimAttributesAsync(string EmailIdentity, PutEmailIdentityDkimAttributesPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/identities/"+ (EmailIdentity==null? "" : System.Uri.EscapeDataString(EmailIdentity))+"/dkim";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutEmailIdentityDkimAttributesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Used to configure or change the DKIM authentication settings for an email domain identity. You can use this operation to do any of the following:</p> <ul> <li> <p>Update the signing attributes for an identity that uses Bring Your Own DKIM (BYODKIM).</p> </li> <li> <p>Update the key length that should be used for Easy DKIM.</p> </li> <li> <p>Change from using no DKIM authentication to using Easy DKIM.</p> </li> <li> <p>Change from using no DKIM authentication to using BYODKIM.</p> </li> <li> <p>Change from using Easy DKIM to using BYODKIM.</p> </li> <li> <p>Change from using BYODKIM to using Easy DKIM.</p> </li> </ul>
		/// PutEmailIdentityDkimSigningAttributes v1/email/identities/{EmailIdentity}/dkim/signing
		/// </summary>
		/// <param name="EmailIdentity">The email identity.
		/// Min length: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<PutEmailIdentityDkimSigningAttributesResponse> PutEmailIdentityDkimSigningAttributesAsync(string EmailIdentity, PutEmailIdentityDkimSigningAttributesPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v1/email/identities/"+ (EmailIdentity==null? "" : System.Uri.EscapeDataString(EmailIdentity))+"/dkim/signing";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutEmailIdentityDkimSigningAttributesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Used to enable or disable feedback forwarding for an identity. This setting determines what happens when an identity is used to send an email that results in a bounce or complaint event.</p> <p>If the value is <code>true</code>, you receive email notifications when bounce or complaint events occur. These notifications are sent to the address that you specified in the <code>Return-Path</code> header of the original email.</p> <p>You're required to have a method of tracking bounces and complaints. If you haven't set up another mechanism for receiving bounce or complaint notifications (for example, by setting up an event destination), you receive an email notification when these events occur (even if this setting is disabled).</p>
		/// PutEmailIdentityFeedbackAttributes v2/email/identities/{EmailIdentity}/feedback
		/// </summary>
		/// <param name="EmailIdentity">The email identity.
		/// Min length: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<PutEmailIdentityFeedbackAttributesResponse> PutEmailIdentityFeedbackAttributesAsync(string EmailIdentity, PutEmailIdentityFeedbackAttributesPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/identities/"+ (EmailIdentity==null? "" : System.Uri.EscapeDataString(EmailIdentity))+"/feedback";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutEmailIdentityFeedbackAttributesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Used to enable or disable the custom Mail-From domain configuration for an email identity.
		/// PutEmailIdentityMailFromAttributes v2/email/identities/{EmailIdentity}/mail-from
		/// </summary>
		/// <param name="EmailIdentity">The verified email identity.
		/// Min length: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<PutEmailIdentityMailFromAttributesResponse> PutEmailIdentityMailFromAttributesAsync(string EmailIdentity, PutEmailIdentityMailFromAttributesPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/identities/"+ (EmailIdentity==null? "" : System.Uri.EscapeDataString(EmailIdentity))+"/mail-from";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<PutEmailIdentityMailFromAttributesResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Composes an email message to multiple destinations.
		/// SendBulkEmail v2/email/outbound-bulk-emails
		/// </summary>
		/// <returns>Success</returns>
		public async Task<SendBulkEmailResponse> SendBulkEmailAsync(SendBulkEmailPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/outbound-bulk-emails";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SendBulkEmailResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Adds an email address to the list of identities for your Amazon SES account in the current Amazon Web Services Region and attempts to verify it. As a result of executing this operation, a customized verification email is sent to the specified address.</p> <p>To use this operation, you must first create a custom verification email template. For more information about creating and using custom verification email templates, see <a href="https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom">Using custom verification email templates</a> in the <i>Amazon SES Developer Guide</i>.</p> <p>You can execute this operation no more than once per second.</p>
		/// SendCustomVerificationEmail v2/email/outbound-custom-verification-emails
		/// </summary>
		/// <returns>Success</returns>
		public async Task<SendCustomVerificationEmailResponse> SendCustomVerificationEmailAsync(SendCustomVerificationEmailPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/outbound-custom-verification-emails";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SendCustomVerificationEmailResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Sends an email message. You can use the Amazon SES API v2 to send the following types of messages:</p> <ul> <li> <p> <b>Simple</b> – A standard email message. When you create this type of message, you specify the sender, the recipient, and the message body, and Amazon SES assembles the message for you.</p> </li> <li> <p> <b>Raw</b> – A raw, MIME-formatted email message. When you send this type of email, you have to specify all of the message headers, as well as the message body. You can use this message type to send messages that contain attachments. The message that you specify has to be a valid MIME message.</p> </li> <li> <p> <b>Templated</b> – A message that contains personalization tags. When you send this type of email, Amazon SES API v2 automatically replaces the tags with values that you specify.</p> </li> </ul>
		/// SendEmail v2/email/outbound-emails
		/// </summary>
		/// <returns>Success</returns>
		public async Task<SendEmailResponse> SendEmailAsync(SendEmailPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/outbound-emails";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<SendEmailResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Add one or more tags (keys and values) to a specified resource. A <i>tag</i> is a label that you optionally define and associate with a resource. Tags can help you categorize and manage resources in different ways, such as by purpose, owner, environment, or other criteria. A resource can have as many as 50 tags.</p> <p>Each tag consists of a required <i>tag key</i> and an associated <i>tag value</i>, both of which you define. A tag key is a general label that acts as a category for more specific tag values. A tag value acts as a descriptor within a tag key.</p>
		/// TagResource v2/email/tags
		/// </summary>
		/// <returns>Success</returns>
		public async Task<TagResourceResponse> TagResourceAsync(TagResourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/tags";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// <p>Creates a preview of the MIME content of an email when provided with a template and a set of replacement data.</p> <p>You can execute this operation no more than once per second.</p>
		/// TestRenderEmailTemplate v2/email/templates/{TemplateName}/render
		/// </summary>
		/// <param name="TemplateName">The name of the template.
		/// Min length: 1
		// </param>
		/// <returns>Success</returns>
		public async Task<TestRenderEmailTemplateResponse> TestRenderEmailTemplateAsync(string TemplateName, TestRenderEmailTemplatePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/templates/"+ (TemplateName==null? "" : System.Uri.EscapeDataString(TemplateName))+"/render";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<TestRenderEmailTemplateResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Remove one or more tags (keys and values) from a specified resource.
		/// UntagResource v2/email/tags#ResourceArn&TagKeys
		/// </summary>
		/// <param name="ResourceArn">The Amazon Resource Name (ARN) of the resource that you want to remove one or more tags from.</param>
		/// <param name="TagKeys"><p>The tags (tag keys) that you want to remove from the resource. When you specify a tag key, the action removes both that key and its associated tag value.</p> <p>To remove more than one tag from the resource, append the <code>TagKeys</code> parameter and argument for each additional tag to remove, separated by an ampersand. For example: <code>/v2/email/tags?ResourceArn=ResourceArn&amp;TagKeys=Key1&amp;TagKeys=Key2</code> </p></param>
		/// <returns>Success</returns>
		public async Task<UntagResourceResponse> UntagResourceAsync(string ResourceArn, string[] TagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "v2/email/tags#ResourceArn&TagKeys?ResourceArn=" + (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn))+"&"+string.Join("&", TagKeys.Select(z => $"TagKeys={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UntagResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class BatchGetMetricDataPostBody
	{
		
		/// <summary>
		/// A list of queries for metrics to be retrieved.
		/// Required
		/// Minimum items: 1
		/// Maximum items: 10
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(10)]
		public BatchGetMetricDataQuery[] Queries { get; set; }
	}
	
	public class CreateConfigurationSetPostBody
	{
		
		/// <summary>
		/// <p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationSetName { get; set; }
		
		/// <summary>
		/// <p>An object that defines the tracking options for a configuration set. When you use the Amazon SES API v2 to send an email, it contains an invisible image that's used to track when recipients open your email. If your email contains links, those links are changed slightly in order to track when recipients click them.</p> <p>These images and links include references to a domain operated by Amazon Web Services. You can optionally configure the Amazon SES to use a domain that you operate for these images and links.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateConfigurationSetPostBodyTrackingOptions TrackingOptions { get; set; }
		
		/// <summary>
		/// Used to associate a configuration set with a dedicated IP pool.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateConfigurationSetPostBodyDeliveryOptions DeliveryOptions { get; set; }
		
		/// <summary>
		/// Enable or disable collection of reputation metrics for emails that you send using this configuration set in the current Amazon Web Services Region. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateConfigurationSetPostBodyReputationOptions ReputationOptions { get; set; }
		
		/// <summary>
		/// Used to enable or disable email sending for messages that use this configuration set in the current Amazon Web Services Region.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateConfigurationSetPostBodySendingOptions SendingOptions { get; set; }
		
		/// <summary>
		/// An array of objects that define the tags (keys and values) to associate with the configuration set.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// An object that contains information about the suppression list preferences for your account.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateConfigurationSetPostBodySuppressionOptions SuppressionOptions { get; set; }
		
		/// <summary>
		/// An object that defines the VDM settings that apply to emails that you send using the configuration set.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateConfigurationSetPostBodyVdmOptions VdmOptions { get; set; }
	}
	
	public class CreateConfigurationSetPostBodyTrackingOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CustomRedirectDomain { get; set; }
	}
	
	public class CreateConfigurationSetPostBodyDeliveryOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TlsPolicy TlsPolicy { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SendingPoolName { get; set; }
	}
	
	public class CreateConfigurationSetPostBodyReputationOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReputationMetricsEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.DateTimeOffset LastFreshStart { get; set; }
	}
	
	public class CreateConfigurationSetPostBodySendingOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SendingEnabled { get; set; }
	}
	
	public class CreateConfigurationSetPostBodySuppressionOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SuppressionListReason[] SuppressedReasons { get; set; }
	}
	
	public class CreateConfigurationSetPostBodyVdmOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardOptions DashboardOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GuardianOptions GuardianOptions { get; set; }
	}
	
	public class CreateConfigurationSetEventDestinationPostBody
	{
		
		/// <summary>
		/// <p>The name of an event destination.</p> <p> <i>Events</i> include message sends, deliveries, opens, clicks, bounces, and complaints. <i>Event destinations</i> are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.</p>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EventDestinationName { get; set; }
		
		/// <summary>
		/// An object that defines the event destination. Specifically, it defines which services receive events from emails sent using the configuration set that the event destination is associated with. Also defines the types of events that are sent to the event destination.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateConfigurationSetEventDestinationPostBodyEventDestination EventDestination { get; set; }
	}
	
	public class CreateConfigurationSetEventDestinationPostBodyEventDestination
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventType[] MatchingEventTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseDestination KinesisFirehoseDestination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchDestination CloudWatchDestination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnsDestination SnsDestination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PinpointDestination PinpointDestination { get; set; }
	}
	
	public class CreateContactPostBody
	{
		
		/// <summary>
		/// The contact's email address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EmailAddress { get; set; }
		
		/// <summary>
		/// The contact's preferences for being opted-in to or opted-out of topics.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TopicPreference[] TopicPreferences { get; set; }
		
		/// <summary>
		/// A boolean value status noting if the contact is unsubscribed from all contact list topics.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UnsubscribeAll { get; set; }
		
		/// <summary>
		/// The attribute data attached to a contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AttributesData { get; set; }
	}
	
	public class CreateContactListPostBody
	{
		
		/// <summary>
		/// The name of the contact list.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ContactListName { get; set; }
		
		/// <summary>
		/// An interest group, theme, or label within a list. A contact list can have multiple topics.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Topic[] Topics { get; set; }
		
		/// <summary>
		/// A description of what the contact list is about.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// The tags associated with a contact list.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	public class CreateCustomVerificationEmailTemplatePostBody
	{
		
		/// <summary>
		/// The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string TemplateName { get; set; }
		
		/// <summary>
		/// The email address that the custom verification email is sent from.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FromEmailAddress { get; set; }
		
		/// <summary>
		/// The subject line of the email.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSubject { get; set; }
		
		/// <summary>
		/// The content of the custom verification email template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateContent { get; set; }
		
		/// <summary>
		/// The URL that the recipient of the verification email is sent to if his or her address is successfully verified.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SuccessRedirectionURL { get; set; }
		
		/// <summary>
		/// The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FailureRedirectionURL { get; set; }
	}
	
	public class CreateDedicatedIpPoolPostBody
	{
		
		/// <summary>
		/// The name of a dedicated IP pool.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PoolName { get; set; }
		
		/// <summary>
		/// An object that defines the tags (keys and values) that you want to associate with the pool.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// The type of scaling mode.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ScalingMode ScalingMode { get; set; }
	}
	
	public class CreateDeliverabilityTestReportPostBody
	{
		
		/// <summary>
		/// A name that helps you identify a report generated by the Deliverability dashboard.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ReportName { get; set; }
		
		/// <summary>
		/// The email address that the predictive inbox placement test email was sent from.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FromEmailAddress { get; set; }
		
		/// <summary>
		/// An object that defines the entire content of the email, including the message headers and the body content. You can create a simple email message, in which you specify the subject and the text and HTML versions of the message body. You can also create raw messages, in which you specify a complete MIME-formatted message. Raw messages can include attachments and custom headers.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateDeliverabilityTestReportPostBodyContent Content { get; set; }
		
		/// <summary>
		/// An array of objects that define the tags (keys and values) that you want to associate with the predictive inbox placement test.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	public class CreateDeliverabilityTestReportPostBodyContent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Message Simple { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RawMessage Raw { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Template Template { get; set; }
	}
	
	public class CreateEmailIdentityPostBody
	{
		
		/// <summary>
		/// The email address or domain to verify.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string EmailIdentity { get; set; }
		
		/// <summary>
		/// An array of objects that define the tags (keys and values) to associate with the email identity.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
		
		/// <summary>
		/// An object that contains configuration for Bring Your Own DKIM (BYODKIM), or, for Easy DKIM
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateEmailIdentityPostBodyDkimSigningAttributes DkimSigningAttributes { get; set; }
		
		/// <summary>
		/// <p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationSetName { get; set; }
	}
	
	public class CreateEmailIdentityPostBodyDkimSigningAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainSigningSelector { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainSigningPrivateKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DkimSigningKeyLength NextSigningKeyLength { get; set; }
	}
	
	public class CreateEmailIdentityPolicyPostBody
	{
		
		/// <summary>
		/// <p>The text of the policy in JSON format. The policy cannot exceed 4 KB.</p> <p>For information about the syntax of sending authorization policies, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p>
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Policy { get; set; }
	}
	
	public class UpdateEmailIdentityPolicyPutBody
	{
		
		/// <summary>
		/// <p>The text of the policy in JSON format. The policy cannot exceed 4 KB.</p> <p>For information about the syntax of sending authorization policies, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p>
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string Policy { get; set; }
	}
	
	public class CreateEmailTemplatePostBody
	{
		
		/// <summary>
		/// The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string TemplateName { get; set; }
		
		/// <summary>
		/// The content of the email, composed of a subject line, an HTML part, and a text-only part.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateEmailTemplatePostBodyTemplateContent TemplateContent { get; set; }
	}
	
	public class CreateEmailTemplatePostBodyTemplateContent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Subject { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Text { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Html { get; set; }
	}
	
	public class CreateImportJobPostBody
	{
		
		/// <summary>
		/// An object that contains details about the resource destination the import job is going to target.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateImportJobPostBodyImportDestination ImportDestination { get; set; }
		
		/// <summary>
		/// An object that contains details about the data source of the import job.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateImportJobPostBodyImportDataSource ImportDataSource { get; set; }
	}
	
	public class CreateImportJobPostBodyImportDestination
	{
		
		[System.Runtime.Serialization.DataMember()]
		public SuppressionListDestination SuppressionListDestination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ContactListDestination ContactListDestination { get; set; }
	}
	
	public class CreateImportJobPostBodyImportDataSource
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string S3Url { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DataFormat DataFormat { get; set; }
	}
	
	public class UpdateConfigurationSetEventDestinationPutBody
	{
		
		/// <summary>
		/// An object that defines the event destination. Specifically, it defines which services receive events from emails sent using the configuration set that the event destination is associated with. Also defines the types of events that are sent to the event destination.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateConfigurationSetEventDestinationPutBodyEventDestination EventDestination { get; set; }
	}
	
	public class UpdateConfigurationSetEventDestinationPutBodyEventDestination
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> Enabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EventType[] MatchingEventTypes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public KinesisFirehoseDestination KinesisFirehoseDestination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CloudWatchDestination CloudWatchDestination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SnsDestination SnsDestination { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PinpointDestination PinpointDestination { get; set; }
	}
	
	public class UpdateContactPutBody
	{
		
		/// <summary>
		/// The contact's preference for being opted-in to or opted-out of a topic.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TopicPreference[] TopicPreferences { get; set; }
		
		/// <summary>
		/// A boolean value status noting if the contact is unsubscribed from all contact list topics.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UnsubscribeAll { get; set; }
		
		/// <summary>
		/// The attribute data attached to a contact.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string AttributesData { get; set; }
	}
	
	public class UpdateContactListPutBody
	{
		
		/// <summary>
		/// An interest group, theme, or label within a list. A contact list can have multiple topics.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public Topic[] Topics { get; set; }
		
		/// <summary>
		/// A description of what the contact list is about.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	public class UpdateCustomVerificationEmailTemplatePutBody
	{
		
		/// <summary>
		/// The email address that the custom verification email is sent from.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FromEmailAddress { get; set; }
		
		/// <summary>
		/// The subject line of the email.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateSubject { get; set; }
		
		/// <summary>
		/// The content of the custom verification email template.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TemplateContent { get; set; }
		
		/// <summary>
		/// The URL that the recipient of the verification email is sent to if his or her address is successfully verified.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SuccessRedirectionURL { get; set; }
		
		/// <summary>
		/// The URL that the recipient of the verification email is sent to if his or her address is not successfully verified.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string FailureRedirectionURL { get; set; }
	}
	
	public class UpdateEmailTemplatePutBody
	{
		
		/// <summary>
		/// The content of the email, composed of a subject line, an HTML part, and a text-only part.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateEmailTemplatePutBodyTemplateContent TemplateContent { get; set; }
	}
	
	public class UpdateEmailTemplatePutBodyTemplateContent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Subject { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Text { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Html { get; set; }
	}
	
	public class PutDeliverabilityDashboardOptionPutBody
	{
		
		/// <summary>
		/// Specifies whether to enable the Deliverability dashboard. To enable the dashboard, set this value to <code>true</code>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool DashboardEnabled { get; set; }
		
		/// <summary>
		/// An object that contains information about the Deliverability dashboard subscription for a verified domain that you use to send email and currently has an active Deliverability dashboard subscription. If a Deliverability dashboard subscription is active for a domain, you gain access to reputation, inbox placement, and other metrics for the domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DomainDeliverabilityTrackingOption[] SubscribedDomains { get; set; }
	}
	
	public class ListRecommendationsPostBody
	{
		
		/// <summary>
		/// An object that contains mapping between <code>ListRecommendationsFilterKey</code> and <code>ListRecommendationFilterValue</code> to filter by.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Filter { get; set; }
		
		/// <summary>
		/// A token returned from a previous call to <code>ListRecommendations</code> to indicate the position in the list of recommendations.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// <p>The number of results to show in a single call to <code>ListRecommendations</code>. If the number of results is larger than the number you specified in this parameter, then the response includes a <code>NextToken</code> element, which you can use to obtain additional results.</p> <p>The value you specify has to be at least 1, and can be no more than 100.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> PageSize { get; set; }
	}
	
	public class PutSuppressedDestinationPutBody
	{
		
		/// <summary>
		/// The email address that should be added to the suppression list for your account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EmailAddress { get; set; }
		
		/// <summary>
		/// <p>The reason that the address was added to the suppression list for your account. The value can be one of the following:</p> <ul> <li> <p> <code>COMPLAINT</code> – Amazon SES added an email address to the suppression list for your account because a message sent to that address results in a complaint.</p> </li> <li> <p> <code>BOUNCE</code> – Amazon SES added an email address to the suppression list for your account because a message sent to that address results in a hard bounce.</p> </li> </ul>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SuppressionListReason Reason { get; set; }
	}
	
	public class PutAccountDedicatedIpWarmupAttributesPutBody
	{
		
		/// <summary>
		/// Enables or disables the automatic warm-up feature for dedicated IP addresses that are associated with your Amazon SES account in the current Amazon Web Services Region. Set to <code>true</code> to enable the automatic warm-up feature, or set to <code>false</code> to disable it.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoWarmupEnabled { get; set; }
	}
	
	public class PutAccountDetailsPostBody
	{
		
		/// <summary>
		/// The type of email your account will send.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MailType MailType { get; set; }
		
		/// <summary>
		/// The URL of your website. This information helps us better understand the type of content that you plan to send.
		/// Required
		/// Min length: 1
		/// Max length: 1000
		/// Pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(1000)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?")]
		public string WebsiteURL { get; set; }
		
		/// <summary>
		/// The language you would prefer to be contacted with.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ContactLanguage ContactLanguage { get; set; }
		
		/// <summary>
		/// A description of the types of email that you plan to send.
		/// Required
		/// Min length: 1
		/// Max length: 5000
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(5000)]
		public string UseCaseDescription { get; set; }
		
		/// <summary>
		/// Additional email addresses that you would like to be notified regarding Amazon SES matters.
		/// Minimum items: 1
		/// Maximum items: 4
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(4)]
		public string[] AdditionalContactEmailAddresses { get; set; }
		
		/// <summary>
		/// <p>Indicates whether or not your account should have production access in the current Amazon Web Services Region.</p> <p>If the value is <code>false</code>, then your account is in the <i>sandbox</i>. When your account is in the sandbox, you can only send email to verified identities. Additionally, the maximum number of emails you can send in a 24-hour period (your sending quota) is 200, and the maximum number of emails you can send per second (your maximum sending rate) is 1.</p> <p>If the value is <code>true</code>, then your account has production access. When your account has production access, you can send email to any address. The sending quota and maximum sending rate for your account vary based on your specific use case.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ProductionAccessEnabled { get; set; }
	}
	
	public class PutAccountSendingAttributesPutBody
	{
		
		/// <summary>
		/// <p>Enables or disables your account's ability to send email. Set to <code>true</code> to enable email sending, or set to <code>false</code> to disable email sending.</p> <note> <p>If Amazon Web Services paused your account's ability to send email, you can't use this operation to resume your account's ability to send email.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SendingEnabled { get; set; }
	}
	
	public class PutAccountSuppressionAttributesPutBody
	{
		
		/// <summary>
		/// <p>A list that contains the reasons that email addresses will be automatically added to the suppression list for your account. This list can contain any or all of the following:</p> <ul> <li> <p> <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a complaint.</p> </li> <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a hard bounce.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SuppressionListReason[] SuppressedReasons { get; set; }
	}
	
	public class PutAccountVdmAttributesPutBody
	{
		
		/// <summary>
		/// The VDM attributes that apply to your Amazon SES account.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PutAccountVdmAttributesPutBodyVdmAttributes VdmAttributes { get; set; }
	}
	
	public class PutAccountVdmAttributesPutBodyVdmAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public FeatureStatus VdmEnabled { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardAttributes DashboardAttributes { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GuardianAttributes GuardianAttributes { get; set; }
	}
	
	public class PutConfigurationSetDeliveryOptionsPutBody
	{
		
		/// <summary>
		/// Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS). If the value is <code>Require</code>, messages are only delivered if a TLS connection can be established. If the value is <code>Optional</code>, messages can be delivered in plain text if a TLS connection can't be established.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public TlsPolicy TlsPolicy { get; set; }
		
		/// <summary>
		/// The name of the dedicated IP pool to associate with the configuration set.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string SendingPoolName { get; set; }
	}
	
	public class PutConfigurationSetReputationOptionsPutBody
	{
		
		/// <summary>
		/// If <code>true</code>, tracking of reputation metrics is enabled for the configuration set. If <code>false</code>, tracking of reputation metrics is disabled for the configuration set.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> ReputationMetricsEnabled { get; set; }
	}
	
	public class PutConfigurationSetSendingOptionsPutBody
	{
		
		/// <summary>
		/// If <code>true</code>, email sending is enabled for the configuration set. If <code>false</code>, email sending is disabled for the configuration set.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SendingEnabled { get; set; }
	}
	
	public class PutConfigurationSetSuppressionOptionsPutBody
	{
		
		/// <summary>
		/// <p>A list that contains the reasons that email addresses are automatically added to the suppression list for your account. This list can contain any or all of the following:</p> <ul> <li> <p> <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a complaint.</p> </li> <li> <p> <code>BOUNCE</code> – Amazon SES adds an email address to the suppression list for your account when a message sent to that address results in a hard bounce.</p> </li> </ul>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SuppressionListReason[] SuppressedReasons { get; set; }
	}
	
	public class PutConfigurationSetTrackingOptionsPutBody
	{
		
		/// <summary>
		/// The domain to use for tracking open and click events.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string CustomRedirectDomain { get; set; }
	}
	
	public class PutConfigurationSetVdmOptionsPutBody
	{
		
		/// <summary>
		/// An object that defines the VDM settings that apply to emails that you send using the configuration set.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PutConfigurationSetVdmOptionsPutBodyVdmOptions VdmOptions { get; set; }
	}
	
	public class PutConfigurationSetVdmOptionsPutBodyVdmOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DashboardOptions DashboardOptions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public GuardianOptions GuardianOptions { get; set; }
	}
	
	public class PutDedicatedIpInPoolPutBody
	{
		
		/// <summary>
		/// The name of a dedicated IP pool.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string DestinationPoolName { get; set; }
	}
	
	public class PutDedicatedIpPoolScalingAttributesPutBody
	{
		
		/// <summary>
		/// <p>The scaling mode to apply to the dedicated IP pool.</p> <note> <p>Changing the scaling mode from <code>MANAGED</code> to <code>STANDARD</code> is not supported.</p> </note>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ScalingMode ScalingMode { get; set; }
	}
	
	public class PutDedicatedIpWarmupAttributesPutBody
	{
		
		/// <summary>
		/// The warm-up percentage that you want to associate with the dedicated IP address.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public int WarmupPercentage { get; set; }
	}
	
	public class PutEmailIdentityConfigurationSetAttributesPutBody
	{
		
		/// <summary>
		/// <p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationSetName { get; set; }
	}
	
	public class PutEmailIdentityDkimAttributesPutBody
	{
		
		/// <summary>
		/// <p>Sets the DKIM signing configuration for the identity.</p> <p>When you set this value <code>true</code>, then the messages that are sent from the identity are signed using DKIM. If you set this value to <code>false</code>, your messages are sent without DKIM signing.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> SigningEnabled { get; set; }
	}
	
	public class PutEmailIdentityDkimSigningAttributesPutBody
	{
		
		/// <summary>
		/// <p>The method to use to configure DKIM for the identity. There are the following possible values:</p> <ul> <li> <p> <code>AWS_SES</code> – Configure DKIM for the identity by using <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html">Easy DKIM</a>.</p> </li> <li> <p> <code>EXTERNAL</code> – Configure DKIM for the identity by using Bring Your Own DKIM (BYODKIM).</p> </li> </ul>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DkimSigningAttributesOrigin SigningAttributesOrigin { get; set; }
		
		/// <summary>
		/// An object that contains configuration for Bring Your Own DKIM (BYODKIM), or, for Easy DKIM
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PutEmailIdentityDkimSigningAttributesPutBodySigningAttributes SigningAttributes { get; set; }
	}
	
	public class PutEmailIdentityDkimSigningAttributesPutBodySigningAttributes
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainSigningSelector { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainSigningPrivateKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DkimSigningKeyLength NextSigningKeyLength { get; set; }
	}
	
	public class PutEmailIdentityFeedbackAttributesPutBody
	{
		
		/// <summary>
		/// <p>Sets the feedback forwarding configuration for the identity.</p> <p>If the value is <code>true</code>, you receive email notifications when bounce or complaint events occur. These notifications are sent to the address that you specified in the <code>Return-Path</code> header of the original email.</p> <p>You're required to have a method of tracking bounces and complaints. If you haven't set up another mechanism for receiving bounce or complaint notifications (for example, by setting up an event destination), you receive an email notification when these events occur (even if this setting is disabled).</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> EmailForwardingEnabled { get; set; }
	}
	
	public class PutEmailIdentityMailFromAttributesPutBody
	{
		
		/// <summary>
		/// The domain to use as a MAIL FROM domain.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string MailFromDomain { get; set; }
		
		/// <summary>
		/// <p>The action to take if the required MX record can't be found when you send an email. When you set this value to <code>UseDefaultValue</code>, the mail is sent using <i>amazonses.com</i> as the MAIL FROM domain. When you set this value to <code>RejectMessage</code>, the Amazon SES API v2 returns a <code>MailFromDomainNotVerified</code> error, and doesn't attempt to deliver the email.</p> <p>These behaviors are taken when the custom MAIL FROM domain configuration is in the <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code> states.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BehaviorOnMxFailure BehaviorOnMxFailure { get; set; }
	}
	
	public class SendBulkEmailPostBody
	{
		
		/// <summary>
		/// The email address to use as the "From" address for the email. The address that you specify has to be verified.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string FromEmailAddress { get; set; }
		
		/// <summary>
		/// <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FromEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use sender@example.com, then you would specify the <code>FromEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FromEmailAddress</code> to be sender@example.com.</p> <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string FromEmailAddressIdentityArn { get; set; }
		
		/// <summary>
		/// The "Reply-to" email addresses for the message. When the recipient replies to the message, each Reply-to address receives the reply.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] ReplyToAddresses { get; set; }
		
		/// <summary>
		/// The address that you want bounce and complaint notifications to be sent to.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string FeedbackForwardingEmailAddress { get; set; }
		
		/// <summary>
		/// <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FeedbackForwardingEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use feedback@example.com, then you would specify the <code>FeedbackForwardingEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p> <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string FeedbackForwardingEmailAddressIdentityArn { get; set; }
		
		/// <summary>
		/// A list of message tags.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public MessageTag[] DefaultEmailTags { get; set; }
		
		/// <summary>
		/// An object that contains the body of the message. You can specify a template message.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SendBulkEmailPostBodyDefaultContent DefaultContent { get; set; }
		
		/// <summary>
		/// A list of <code>BulkEmailEntry</code> objects.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public BulkEmailEntry[] BulkEmailEntries { get; set; }
		
		/// <summary>
		/// <p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationSetName { get; set; }
	}
	
	public class SendBulkEmailPostBodyDefaultContent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Template Template { get; set; }
	}
	
	public class SendCustomVerificationEmailPostBody
	{
		
		/// <summary>
		/// The email address to verify.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string EmailAddress { get; set; }
		
		/// <summary>
		/// The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations.
		/// Required
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		public string TemplateName { get; set; }
		
		/// <summary>
		/// <p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationSetName { get; set; }
	}
	
	public class SendEmailPostBody
	{
		
		/// <summary>
		/// The email address to use as the "From" address for the email. The address that you specify has to be verified. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string FromEmailAddress { get; set; }
		
		/// <summary>
		/// <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FromEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use sender@example.com, then you would specify the <code>FromEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FromEmailAddress</code> to be sender@example.com.</p> <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p> <p>For Raw emails, the <code>FromEmailAddressIdentityArn</code> value overrides the X-SES-SOURCE-ARN and X-SES-FROM-ARN headers specified in raw email message content.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string FromEmailAddressIdentityArn { get; set; }
		
		/// <summary>
		/// <p>An object that describes the recipients for an email.</p> <note> <p>Amazon SES does not support the SMTPUTF8 extension, as described in <a href="https://tools.ietf.org/html/rfc6531">RFC6531</a>. For this reason, the <i>local part</i> of a destination email address (the part of the email address that precedes the @ sign) may only contain <a href="https://en.wikipedia.org/wiki/Email_address#Local-part">7-bit ASCII characters</a>. If the <i>domain part</i> of an address (the part after the @ sign) contains non-ASCII characters, they must be encoded using Punycode, as described in <a href="https://tools.ietf.org/html/rfc3492.html">RFC3492</a>.</p> </note>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SendEmailPostBodyDestination Destination { get; set; }
		
		/// <summary>
		/// The "Reply-to" email addresses for the message. When the recipient replies to the message, each Reply-to address receives the reply.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string[] ReplyToAddresses { get; set; }
		
		/// <summary>
		/// The address that you want bounce and complaint notifications to be sent to.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string FeedbackForwardingEmailAddress { get; set; }
		
		/// <summary>
		/// <p>This parameter is used only for sending authorization. It is the ARN of the identity that is associated with the sending authorization policy that permits you to use the email address specified in the <code>FeedbackForwardingEmailAddress</code> parameter.</p> <p>For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com) attaches a policy to it that authorizes you to use feedback@example.com, then you would specify the <code>FeedbackForwardingEmailAddressIdentityArn</code> to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the <code>FeedbackForwardingEmailAddress</code> to be feedback@example.com.</p> <p>For more information about sending authorization, see the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html">Amazon SES Developer Guide</a>.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string FeedbackForwardingEmailAddressIdentityArn { get; set; }
		
		/// <summary>
		/// An object that defines the entire content of the email, including the message headers and the body content. You can create a simple email message, in which you specify the subject and the text and HTML versions of the message body. You can also create raw messages, in which you specify a complete MIME-formatted message. Raw messages can include attachments and custom headers.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SendEmailPostBodyContent Content { get; set; }
		
		/// <summary>
		/// A list of message tags.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public MessageTag[] EmailTags { get; set; }
		
		/// <summary>
		/// <p>The name of a configuration set.</p> <p> <i>Configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string ConfigurationSetName { get; set; }
		
		/// <summary>
		/// An object used to specify a list or topic to which an email belongs, which will be used when a contact chooses to unsubscribe.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public SendEmailPostBodyListManagementOptions ListManagementOptions { get; set; }
	}
	
	public class SendEmailPostBodyDestination
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] ToAddresses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] CcAddresses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] BccAddresses { get; set; }
	}
	
	public class SendEmailPostBodyContent
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Message Simple { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public RawMessage Raw { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Template Template { get; set; }
	}
	
	public class SendEmailPostBodyListManagementOptions
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ContactListName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string TopicName { get; set; }
	}
	
	public class TagResourcePostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the resource that you want to add one or more tags to.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string ResourceArn { get; set; }
		
		/// <summary>
		/// A list of the tags that you want to add to the resource. A tag consists of a required tag key (<code>Key</code>) and an associated tag value (<code>Value</code>). The maximum length of a tag key is 128 characters. The maximum length of a tag value is 256 characters.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public Tag[] Tags { get; set; }
	}
	
	public class TestRenderEmailTemplatePostBody
	{
		
		/// <summary>
		/// An object that defines the values to use for message variables in the template. This object is a set of key-value pairs. Each key defines a message variable in the template. The corresponding value defines the value to use for that variable.
		/// Required
		/// Max length: 262144
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MaxLength(262144)]
		public string TemplateData { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public new System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

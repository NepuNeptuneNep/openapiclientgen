//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using Newtonsoft.Json;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AssociateAccountsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ThrottlingException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ConflictException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AccessDeniedException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ValidationException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ServiceLimitExceededException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class InternalServerException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ResourceNotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AssociatePricingRulesOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class BatchAssociateResourcesToCustomLineItemOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AssociateResourceResponseElement[] SuccessfullyAssociatedResources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssociateResourceResponseElement[] FailedAssociatedResources { get; set; }
	}
	
	/// <summary>
	/// A resource association result for a percentage custom line item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AssociateResourceResponseElement
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssociateResourceError Error { get; set; }
	}
	
	/// <summary>
	/// A representation of a resource association error.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AssociateResourceError
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Message { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssociateResourceErrorReason Reason { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum AssociateResourceErrorReason
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INVALID_ARN")]
		INVALID_ARN = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SERVICE_LIMIT_EXCEEDED")]
		SERVICE_LIMIT_EXCEEDED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ILLEGAL_CUSTOMLINEITEM")]
		ILLEGAL_CUSTOMLINEITEM = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INTERNAL_SERVER_EXCEPTION")]
		INTERNAL_SERVER_EXCEPTION = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="INVALID_BILLING_PERIOD_RANGE")]
		INVALID_BILLING_PERIOD_RANGE = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class BatchDisassociateResourcesFromCustomLineItemOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DisassociateResourceResponseElement[] SuccessfullyDisassociatedResources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DisassociateResourceResponseElement[] FailedDisassociatedResources { get; set; }
	}
	
	/// <summary>
	/// A resource disassociation result for a percentage custom line item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DisassociateResourceResponseElement
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public AssociateResourceError Error { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateBillingGroupOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateCustomLineItemOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	/// A representation of the charge details that are associated with a flat custom line item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CustomLineItemFlatChargeDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double ChargeValue { get; set; }
	}
	
	/// <summary>
	/// A representation of the charge details that are associated with a percentage custom line item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CustomLineItemPercentageChargeDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double PercentageValue { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AssociatedValues { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CustomLineItemType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CREDIT")]
		CREDIT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="FEE")]
		FEE = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreatePricingPlanOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreatePricingRuleOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	/// <summary>
	///  The possible Amazon Web Services Free Tier configurations. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateFreeTierConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Activated { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteBillingGroupOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteCustomLineItemOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeletePricingPlanOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeletePricingRuleOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DisassociateAccountsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DisassociatePricingRulesOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListAccountAssociationsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AccountAssociationsListElement[] LinkedAccounts { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A representation of a linked account.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AccountAssociationsListElement
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountEmail { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListBillingGroupCostReportsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BillingGroupCostReportElement[] BillingGroupCostReports { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A summary report of actual Amazon Web Services charges and calculated Amazon Web Services charges, based on the associated pricing plan of a billing group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class BillingGroupCostReportElement
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AWSCost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ProformaCost { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Margin { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string MarginPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Currency { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListBillingGroupsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public BillingGroupListElement[] BillingGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A representation of a billing group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class BillingGroupListElement
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryAccountId { get; set; }
		
		/// <summary>
		/// The preferences and settings that will be used to compute the Amazon Web Services charges for a billing group.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ComputationPreference ComputationPreference { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Size { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BillingGroupStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListBillingGroupAccountGrouping AccountGrouping { get; set; }
	}
	
	/// <summary>
	/// The preferences and settings that will be used to compute the Amazon Web Services charges for a billing group.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ComputationPreference
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PricingPlanArn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum BillingGroupStatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="ACTIVE")]
		ACTIVE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PRIMARY_ACCOUNT_MISSING")]
		PRIMARY_ACCOUNT_MISSING = 1,
	}
	
	/// <summary>
	/// Specifies if the billing group has the following features enabled.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListBillingGroupAccountGrouping
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoAssociate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListCustomLineItemVersionsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CustomLineItemVersionListElement[] CustomLineItemVersions { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A representation of a custom line item version.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CustomLineItemVersionListElement
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		///  A representation of the charge details of a custom line item. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ListCustomLineItemChargeDetails ChargeDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CurrencyCode CurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ProductCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AssociationSize { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StartBillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EndBillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> StartTime { get; set; }
	}
	
	/// <summary>
	///  A representation of the charge details of a custom line item. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListCustomLineItemChargeDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListCustomLineItemFlatChargeDetails Flat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListCustomLineItemPercentageChargeDetails Percentage { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CustomLineItemType Type { get; set; }
	}
	
	/// <summary>
	///  A representation of the charge details that are associated with a flat custom line item. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListCustomLineItemFlatChargeDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double ChargeValue { get; set; }
	}
	
	/// <summary>
	///  A representation of the charge details that are associated with a percentage custom line item. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListCustomLineItemPercentageChargeDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double PercentageValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CurrencyCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="USD")]
		USD = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CNY")]
		CNY = 1,
	}
	
	/// <summary>
	/// A billing period filter that specifies the custom line item versions to retrieve.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListCustomLineItemVersionsBillingPeriodRangeFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string StartBillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EndBillingPeriod { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListCustomLineItemsOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CustomLineItemListElement[] CustomLineItems { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A representation of a custom line item.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CustomLineItemListElement
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListCustomLineItemChargeDetails ChargeDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CurrencyCode CurrencyCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ProductCode { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AssociationSize { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListPricingPlansOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PricingPlanListElement[] PricingPlans { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A representation of a pricing plan.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PricingPlanListElement
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Size { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LastModifiedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListPricingPlansAssociatedWithPricingRuleOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PricingRuleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] PricingPlanArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListPricingRulesOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PricingRuleListElement[] PricingRules { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A representation of a pricing rule.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class PricingRuleListElement
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PricingRuleScope Scope { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PricingRuleType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ModifierPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Service { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AssociatedPricingPlanCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> CreationTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingEntity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tiering Tiering { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UsageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Operation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PricingRuleScope
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="GLOBAL")]
		GLOBAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SERVICE")]
		SERVICE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="BILLING_ENTITY")]
		BILLING_ENTITY = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="SKU")]
		SKU = 3,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum PricingRuleType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="MARKUP")]
		MARKUP = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="DISCOUNT")]
		DISCOUNT = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="TIERING")]
		TIERING = 2,
	}
	
	/// <summary>
	///  The set of tiering configurations for the pricing rule. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class Tiering
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public FreeTierConfig FreeTier { get; set; }
	}
	
	/// <summary>
	///  The possible Amazon Web Services Free Tier configurations. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class FreeTierConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Activated { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListPricingRulesAssociatedToPricingPlanOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PricingPlanArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] PricingRuleArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListResourcesAssociatedToCustomLineItemOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListResourcesAssociatedToCustomLineItemResponseElement[] AssociatedResources { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  A representation of a resource association for a custom line item. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListResourcesAssociatedToCustomLineItemResponseElement
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomLineItemRelationship Relationship { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string EndBillingPeriod { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
	[System.SerializableAttribute()]
	public enum CustomLineItemRelationship
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PARENT")]
		PARENT = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="CHILD")]
		CHILD = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TagMap
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UntagResourceResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateBillingGroupOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryAccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PricingPlanArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Size { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BillingGroupStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string StatusReason { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateBillingGroupAccountGrouping AccountGrouping { get; set; }
	}
	
	/// <summary>
	/// Specifies if the billing group has the following features enabled.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateBillingGroupAccountGrouping
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoAssociate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateCustomLineItemOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListCustomLineItemChargeDetails ChargeDetails { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AssociationSize { get; set; }
	}
	
	/// <summary>
	///  A representation of the new charge details that are associated with a flat custom line item. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateCustomLineItemFlatChargeDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double ChargeValue { get; set; }
	}
	
	/// <summary>
	///  A representation of the new charge details that are associated with a percentage custom line item. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateCustomLineItemPercentageChargeDetails
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public double PercentageValue { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdatePricingPlanOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> Size { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LastModifiedTime { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdatePricingRuleOutput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PricingRuleScope Scope { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PricingRuleType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ModifierPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Service { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> AssociatedPricingPlanCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> LastModifiedTime { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingEntity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateTieringInput Tiering { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UsageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Operation { get; set; }
	}
	
	/// <summary>
	///  The set of tiering configurations for the pricing rule. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateTieringInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public UpdateFreeTierConfig FreeTier { get; set; }
	}
	
	/// <summary>
	///  The possible Amazon Web Services Free Tier configurations. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateFreeTierConfig
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public bool Activated { get; set; }
	}
	
	/// <summary>
	/// The set of accounts that will be under the billing group. The set of accounts resemble the linked accounts in a consolidated billing family.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AccountGrouping
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] LinkedAccountIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoAssociate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AssociateAccountsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class AssociatePricingRulesInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] PricingRuleArns { get; set; }
	}
	
	/// <summary>
	/// The billing period range in which the custom line item request will be applied.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CustomLineItemBillingPeriodRange
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string InclusiveStartBillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExclusiveEndBillingPeriod { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class BatchAssociateResourcesToCustomLineItemInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] ResourceArns { get; set; }
		
		/// <summary>
		/// The billing period range in which the custom line item request will be applied.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CustomLineItemBillingPeriodRange BillingPeriodRange { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class BatchDisassociateResourcesFromCustomLineItemInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string TargetArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] ResourceArns { get; set; }
		
		/// <summary>
		/// The billing period range in which the custom line item request will be applied.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CustomLineItemBillingPeriodRange BillingPeriodRange { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateBillingGroupInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public AccountGrouping AccountGrouping { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public ComputationPreference ComputationPreference { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PrimaryAccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	/// The charge details of a custom line item. It should contain only one of <code>Flat</code> or <code>Percentage</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CustomLineItemChargeDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CustomLineItemFlatChargeDetails Flat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomLineItemPercentageChargeDetails Percentage { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CustomLineItemType Type { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateCustomLineItemInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string BillingGroupArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomLineItemBillingPeriodRange BillingPeriodRange { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CustomLineItemChargeDetails ChargeDetails { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreatePricingPlanInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] PricingRuleArns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	/// <summary>
	///  The set of tiering configurations for the pricing rule. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreateTieringInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateFreeTierConfig FreeTier { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class CreatePricingRuleInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PricingRuleScope Scope { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PricingRuleType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ModifierPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Service { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingEntity { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CreateTieringInput Tiering { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string UsageType { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Operation { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteBillingGroupInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeleteCustomLineItemInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// The billing period range in which the custom line item request will be applied.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CustomLineItemBillingPeriodRange BillingPeriodRange { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeletePricingPlanInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DeletePricingRuleInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DisassociateAccountsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class DisassociatePricingRulesInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] PricingRuleArns { get; set; }
	}
	
	/// <summary>
	/// <p>The filter on the account ID of the linked account, or any of the following:</p> <p> <code>MONITORED</code>: linked accounts that are associated to billing groups.</p> <p> <code>UNMONITORED</code>: linked accounts that are not associated to billing groups.</p> <p> <code>Billing Group Arn</code>: linked accounts that are associated to the provided Billing Group Arn.</p>
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListAccountAssociationsFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Association { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AccountIds { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListAccountAssociationsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListAccountAssociationsFilter Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The filter used to retrieve specific <code>BillingGroupCostReportElements</code>.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListBillingGroupCostReportsFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] BillingGroupArns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListBillingGroupCostReportsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListBillingGroupCostReportsFilter Filters { get; set; }
	}
	
	/// <summary>
	/// The filter that specifies the billing groups and pricing plans to retrieve billing group information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListBillingGroupsFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Arns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PricingPlan { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BillingGroupStatus[] Statuses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoAssociate { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListBillingGroupsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListBillingGroupsFilter Filters { get; set; }
	}
	
	/// <summary>
	/// A filter that specifies the billing period range where the custom line item versions reside.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListCustomLineItemVersionsFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListCustomLineItemVersionsBillingPeriodRangeFilter BillingPeriodRange { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListCustomLineItemVersionsInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListCustomLineItemVersionsFilter Filters { get; set; }
	}
	
	/// <summary>
	/// A filter that specifies the custom line items and billing groups to retrieve FFLI information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListCustomLineItemsFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Names { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] BillingGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Arns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListCustomLineItemsInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListCustomLineItemsFilter Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListPricingPlansAssociatedWithPricingRuleInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingPeriod { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PricingRuleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// The filter that specifies the Amazon Resource Names (ARNs) of pricing plans, to retrieve pricing plan information.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListPricingPlansFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Arns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListPricingPlansInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListPricingPlansFilter Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListPricingRulesAssociatedToPricingPlanInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingPeriod { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PricingPlanArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  The filter that specifies criteria that the pricing rules returned by the <code>ListPricingRules</code> API will adhere to.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListPricingRulesFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Arns { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListPricingRulesInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListPricingRulesFilter Filters { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	///  A filter that specifies the type of resource associations that should be retrieved for a custom line item. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListResourcesAssociatedToCustomLineItemFilter
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CustomLineItemRelationship Relationship { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListResourcesAssociatedToCustomLineItemInput
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string BillingPeriod { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ListResourcesAssociatedToCustomLineItemFilter Filters { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class ListTagsForResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public TagMap Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UntagResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateBillingGroupInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BillingGroupStatus Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ComputationPreference ComputationPreference { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateBillingGroupAccountGrouping AccountGrouping { get; set; }
	}
	
	/// <summary>
	///  A representation of the new charge details of a custom line item. This should contain only one of <code>Flat</code> or <code>Percentage</code>. 
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateCustomLineItemChargeDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateCustomLineItemFlatChargeDetails Flat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateCustomLineItemPercentageChargeDetails Percentage { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdateCustomLineItemInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateCustomLineItemChargeDetails ChargeDetails { get; set; }
		
		/// <summary>
		/// The billing period range in which the custom line item request will be applied.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CustomLineItemBillingPeriodRange BillingPeriodRange { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdatePricingPlanInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="")]
	[System.SerializableAttribute()]
	public class UpdatePricingRuleInput
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Name { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Description { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PricingRuleType Type { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Double> ModifierPercentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateTieringInput Tiering { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerSettings jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerSettings jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Connects an array of account IDs in a consolidated billing family to a predefined billing group. The account IDs must be a part of the consolidated billing family during the current month, and not already associated with another billing group. The maximum number of accounts that can be associated in one call is 30.
		/// AssociateAccounts associate-accounts
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AssociateAccountsOutput> AssociateAccountsAsync(AssociateAccountsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "associate-accounts";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<AssociateAccountsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Connects an array of <code>PricingRuleArns</code> to a defined <code>PricingPlan</code>. The maximum number <code>PricingRuleArn</code> that can be associated in one call is 30.
		/// AssociatePricingRules associate-pricing-rules
		/// </summary>
		/// <returns>Success</returns>
		public async Task<AssociatePricingRulesOutput> AssociatePricingRulesAsync(AssociatePricingRulesPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "associate-pricing-rules";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<AssociatePricingRulesOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Associates a batch of resources to a percentage custom line item.
		/// BatchAssociateResourcesToCustomLineItem batch-associate-resources-to-custom-line-item
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchAssociateResourcesToCustomLineItemOutput> BatchAssociateResourcesToCustomLineItemAsync(BatchAssociateResourcesToCustomLineItemPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "batch-associate-resources-to-custom-line-item";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<BatchAssociateResourcesToCustomLineItemOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Disassociates a batch of resources from a percentage custom line item.
		/// BatchDisassociateResourcesFromCustomLineItem batch-disassociate-resources-from-custom-line-item
		/// </summary>
		/// <returns>Success</returns>
		public async Task<BatchDisassociateResourcesFromCustomLineItemOutput> BatchDisassociateResourcesFromCustomLineItemAsync(BatchDisassociateResourcesFromCustomLineItemPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "batch-disassociate-resources-from-custom-line-item";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<BatchDisassociateResourcesFromCustomLineItemOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a billing group that resembles a consolidated billing family that Amazon Web Services charges, based off of the predefined pricing plan computation.
		/// CreateBillingGroup create-billing-group
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateBillingGroupOutput> CreateBillingGroupAsync(CreateBillingGroupPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "create-billing-group";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CreateBillingGroupOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a custom line item that can be used to create a one-time fixed charge that can be applied to a single billing group for the current or previous billing period. The one-time fixed charge is either a fee or discount.
		/// CreateCustomLineItem create-custom-line-item
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateCustomLineItemOutput> CreateCustomLineItemAsync(CreateCustomLineItemPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "create-custom-line-item";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CreateCustomLineItemOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a pricing plan that is used for computing Amazon Web Services charges for billing groups.
		/// CreatePricingPlan create-pricing-plan
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreatePricingPlanOutput> CreatePricingPlanAsync(CreatePricingPlanPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "create-pricing-plan";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CreatePricingPlanOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Creates a pricing rule can be associated to a pricing plan, or a set of pricing plans.
		/// CreatePricingRule create-pricing-rule
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreatePricingRuleOutput> CreatePricingRuleAsync(CreatePricingRulePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "create-pricing-rule";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<CreatePricingRuleOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes a billing group.
		/// DeleteBillingGroup delete-billing-group
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteBillingGroupOutput> DeleteBillingGroupAsync(DeleteBillingGroupPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "delete-billing-group";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteBillingGroupOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes the custom line item identified by the given ARN in the current, or previous billing period.
		/// DeleteCustomLineItem delete-custom-line-item
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeleteCustomLineItemOutput> DeleteCustomLineItemAsync(DeleteCustomLineItemPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "delete-custom-line-item";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeleteCustomLineItemOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes a pricing plan. The pricing plan must not be associated with any billing groups to delete successfully.
		/// DeletePricingPlan delete-pricing-plan
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeletePricingPlanOutput> DeletePricingPlanAsync(DeletePricingPlanPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "delete-pricing-plan";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeletePricingPlanOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes the pricing rule that's identified by the input Amazon Resource Name (ARN).
		/// DeletePricingRule delete-pricing-rule
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DeletePricingRuleOutput> DeletePricingRuleAsync(DeletePricingRulePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "delete-pricing-rule";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DeletePricingRuleOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Removes the specified list of account IDs from the given billing group.
		/// DisassociateAccounts disassociate-accounts
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DisassociateAccountsOutput> DisassociateAccountsAsync(DisassociateAccountsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "disassociate-accounts";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DisassociateAccountsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Disassociates a list of pricing rules from a pricing plan.
		/// DisassociatePricingRules disassociate-pricing-rules
		/// </summary>
		/// <returns>Success</returns>
		public async Task<DisassociatePricingRulesOutput> DisassociatePricingRulesAsync(DisassociatePricingRulesPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "disassociate-pricing-rules";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<DisassociatePricingRulesOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// This is a paginated call to list linked accounts that are linked to the payer account for the specified time period. If no information is provided, the current billing period is used. The response will optionally include the billing group that's associated with the linked account.
		/// ListAccountAssociations list-account-associations
		/// </summary>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListAccountAssociationsOutput> ListAccountAssociationsAsync(string NextToken, ListAccountAssociationsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "list-account-associations?NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListAccountAssociationsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// A paginated call to retrieve a summary report of actual Amazon Web Services charges and the calculated Amazon Web Services charges based on the associated pricing plan of a billing group.
		/// ListBillingGroupCostReports list-billing-group-cost-reports
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListBillingGroupCostReportsOutput> ListBillingGroupCostReportsAsync(string MaxResults, string NextToken, ListBillingGroupCostReportsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "list-billing-group-cost-reports?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListBillingGroupCostReportsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// A paginated call to retrieve a list of billing groups for the given billing period. If you don't provide a billing group, the current billing period is used.
		/// ListBillingGroups list-billing-groups
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListBillingGroupsOutput> ListBillingGroupsAsync(string MaxResults, string NextToken, ListBillingGroupsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "list-billing-groups?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListBillingGroupsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// A paginated call to get a list of all custom line item versions.
		/// ListCustomLineItemVersions list-custom-line-item-versions
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListCustomLineItemVersionsOutput> ListCustomLineItemVersionsAsync(string MaxResults, string NextToken, ListCustomLineItemVersionsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "list-custom-line-item-versions?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListCustomLineItemVersionsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// A paginated call to get a list of all custom line items (FFLIs) for the given billing period. If you don't provide a billing period, the current billing period is used.
		/// ListCustomLineItems list-custom-line-items
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListCustomLineItemsOutput> ListCustomLineItemsAsync(string MaxResults, string NextToken, ListCustomLineItemsPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "list-custom-line-items?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListCustomLineItemsOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// A paginated call to get pricing plans for the given billing period. If you don't provide a billing period, the current billing period is used.
		/// ListPricingPlans list-pricing-plans
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListPricingPlansOutput> ListPricingPlansAsync(string MaxResults, string NextToken, ListPricingPlansPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "list-pricing-plans?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListPricingPlansOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// A list of the pricing plans that are associated with a pricing rule.
		/// ListPricingPlansAssociatedWithPricingRule list-pricing-plans-associated-with-pricing-rule
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListPricingPlansAssociatedWithPricingRuleOutput> ListPricingPlansAssociatedWithPricingRuleAsync(string MaxResults, string NextToken, ListPricingPlansAssociatedWithPricingRulePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "list-pricing-plans-associated-with-pricing-rule?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListPricingPlansAssociatedWithPricingRuleOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Describes a pricing rule that can be associated to a pricing plan, or set of pricing plans.
		/// ListPricingRules list-pricing-rules
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListPricingRulesOutput> ListPricingRulesAsync(string MaxResults, string NextToken, ListPricingRulesPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "list-pricing-rules?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListPricingRulesOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Lists the pricing rules that are associated with a pricing plan.
		/// ListPricingRulesAssociatedToPricingPlan list-pricing-rules-associated-to-pricing-plan
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListPricingRulesAssociatedToPricingPlanOutput> ListPricingRulesAssociatedToPricingPlanAsync(string MaxResults, string NextToken, ListPricingRulesAssociatedToPricingPlanPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "list-pricing-rules-associated-to-pricing-plan?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListPricingRulesAssociatedToPricingPlanOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// List the resources that are associated to a custom line item.
		/// ListResourcesAssociatedToCustomLineItem list-resources-associated-to-custom-line-item
		/// </summary>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListResourcesAssociatedToCustomLineItemOutput> ListResourcesAssociatedToCustomLineItemAsync(string MaxResults, string NextToken, ListResourcesAssociatedToCustomLineItemPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "list-resources-associated-to-custom-line-item?MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<ListResourcesAssociatedToCustomLineItemOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// A list the tags for a resource.
		/// ListTagsForResource tags/{ResourceArn}
		/// </summary>
		/// <param name="ResourceArn"> The Amazon Resource Name (ARN) that identifies the resource to list the tags. </param>
		public async Task ListTagsForResourceAsync(string ResourceArn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Associates the specified tags to a resource with the specified <code>resourceArn</code>. If existing tags on a resource are not specified in the request parameters, they are not changed.
		/// TagResource tags/{ResourceArn}
		/// </summary>
		/// <param name="ResourceArn"> The Amazon Resource Name (ARN) of the resource to which to add tags. </param>
		public async Task TagResourceAsync(string ResourceArn, TagResourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Deletes specified tags from a resource.
		/// UntagResource tags/{ResourceArn}#tagKeys
		/// </summary>
		/// <param name="ResourceArn"> The Amazon Resource Name (ARN) of the resource to which to delete tags. </param>
		/// <param name="tagKeys"> The tags to delete from the resource as a list of key-value pairs. </param>
		public async Task UntagResourceAsync(string ResourceArn, string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/"+ (ResourceArn==null? "" : System.Uri.EscapeDataString(ResourceArn))+"#tagKeys&"+string.Join("&", tagKeys.Select(z => $"tagKeys={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// This updates an existing billing group.
		/// UpdateBillingGroup update-billing-group
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateBillingGroupOutput> UpdateBillingGroupAsync(UpdateBillingGroupPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "update-billing-group";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateBillingGroupOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Update an existing custom line item in the current or previous billing period.
		/// UpdateCustomLineItem update-custom-line-item
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdateCustomLineItemOutput> UpdateCustomLineItemAsync(UpdateCustomLineItemPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "update-custom-line-item";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdateCustomLineItemOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// This updates an existing pricing plan.
		/// UpdatePricingPlan update-pricing-plan
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdatePricingPlanOutput> UpdatePricingPlanAsync(UpdatePricingPlanPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "update-pricing-plan";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdatePricingPlanOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
		
		/// <summary>
		/// Updates an existing pricing rule.
		/// UpdatePricingRule update-pricing-rule
		/// </summary>
		/// <returns>Success</returns>
		public async Task<UpdatePricingRuleOutput> UpdatePricingRuleAsync(UpdatePricingRulePutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "update-pricing-rule";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			using (var requestWriter = new System.IO.StringWriter())
			{
			var requestSerializer = JsonSerializer.Create(jsonSerializerSettings);
			requestSerializer.Serialize(requestWriter, requestBody);
			var content = new System.Net.Http.StringContent(requestWriter.ToString(), System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var responseMessageStream = await responseMessage.Content.ReadAsStreamAsync();
				using (JsonReader jsonReader = new JsonTextReader(new System.IO.StreamReader(responseMessageStream)))
				{
				var serializer = JsonSerializer.Create(jsonSerializerSettings);
				return serializer.Deserialize<UpdatePricingRuleOutput>(jsonReader);
				}
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
			}
		}
	}
	
	public class AssociateAccountsPostBody
	{
		
		/// <summary>
		///  The Amazon Resource Name (ARN) of the billing group that associates the array of account IDs. 
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:billinggroup/)?[0-9]{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:billinggroup/)?[0-9]{12}")]
		public string Arn { get; set; }
		
		/// <summary>
		///  The associating array of account IDs. 
		/// Required
		/// Minimum items: 1
		/// Maximum items: 30
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(30)]
		public string[] AccountIds { get; set; }
	}
	
	public class AssociatePricingRulesPutBody
	{
		
		/// <summary>
		///  The <code>PricingPlanArn</code> that the <code>PricingRuleArns</code> are associated with. 
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:pricingplan/)?[a-zA-Z0-9]{10}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:pricingplan/)?[a-zA-Z0-9]{10}")]
		public string Arn { get; set; }
		
		/// <summary>
		///  The <code>PricingRuleArns</code> that are associated with the Pricing Plan. 
		/// Required
		/// Minimum items: 1
		/// Maximum items: 30
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(30)]
		public string[] PricingRuleArns { get; set; }
	}
	
	public class BatchAssociateResourcesToCustomLineItemPutBody
	{
		
		/// <summary>
		///  A percentage custom line item ARN to associate the resources to. 
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:customlineitem/)?[a-zA-Z0-9]{10}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:customlineitem/)?[a-zA-Z0-9]{10}")]
		public string TargetArn { get; set; }
		
		/// <summary>
		///  A list containing the ARNs of the resources to be associated. 
		/// Required
		/// Minimum items: 1
		/// Maximum items: 30
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(30)]
		public string[] ResourceArns { get; set; }
		
		/// <summary>
		/// The billing period range in which the custom line item request will be applied.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BatchAssociateResourcesToCustomLineItemPutBodyBillingPeriodRange BillingPeriodRange { get; set; }
	}
	
	public class BatchAssociateResourcesToCustomLineItemPutBodyBillingPeriodRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InclusiveStartBillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExclusiveEndBillingPeriod { get; set; }
	}
	
	public class BatchDisassociateResourcesFromCustomLineItemPutBody
	{
		
		/// <summary>
		///  A percentage custom line item ARN to disassociate the resources from. 
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:customlineitem/)?[a-zA-Z0-9]{10}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:customlineitem/)?[a-zA-Z0-9]{10}")]
		public string TargetArn { get; set; }
		
		/// <summary>
		///  A list containing the ARNs of resources to be disassociated. 
		/// Required
		/// Minimum items: 1
		/// Maximum items: 30
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(30)]
		public string[] ResourceArns { get; set; }
		
		/// <summary>
		/// The billing period range in which the custom line item request will be applied.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BatchDisassociateResourcesFromCustomLineItemPutBodyBillingPeriodRange BillingPeriodRange { get; set; }
	}
	
	public class BatchDisassociateResourcesFromCustomLineItemPutBodyBillingPeriodRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InclusiveStartBillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExclusiveEndBillingPeriod { get; set; }
	}
	
	public class CreateBillingGroupPostBody
	{
		
		/// <summary>
		///  The billing group name. The names must be unique. 
		/// Required
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\+=\.\-@]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\+=\.\-@]+")]
		public string Name { get; set; }
		
		/// <summary>
		/// The set of accounts that will be under the billing group. The set of accounts resemble the linked accounts in a consolidated billing family.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateBillingGroupPostBodyAccountGrouping AccountGrouping { get; set; }
		
		/// <summary>
		/// The preferences and settings that will be used to compute the Amazon Web Services charges for a billing group.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateBillingGroupPostBodyComputationPreference ComputationPreference { get; set; }
		
		/// <summary>
		///  The account ID that serves as the main account in a billing group. 
		/// Pattern: [0-9]{12}
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[0-9]{12}")]
		public string PrimaryAccountId { get; set; }
		
		/// <summary>
		/// The description of the billing group. 
		/// Max length: 1024
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string Description { get; set; }
		
		/// <summary>
		///  A map that contains tag keys and tag values that are attached to a billing group. This feature isn't available during the beta. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreateBillingGroupPostBodyAccountGrouping
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] LinkedAccountIds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoAssociate { get; set; }
	}
	
	public class CreateBillingGroupPostBodyComputationPreference
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PricingPlanArn { get; set; }
	}
	
	public class CreateCustomLineItemPostBody
	{
		
		/// <summary>
		///  The name of the custom line item. 
		/// Required
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\+=\.\-@]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\+=\.\-@]+")]
		public string Name { get; set; }
		
		/// <summary>
		///  The description of the custom line item. This is shown on the Bills page in association with the charge value. 
		/// Required
		/// Max length: 255
		/// Min length: 1
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		public string Description { get; set; }
		
		/// <summary>
		///  The Amazon Resource Name (ARN) that references the billing group where the custom line item applies to. 
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:billinggroup/)?[0-9]{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:billinggroup/)?[0-9]{12}")]
		public string BillingGroupArn { get; set; }
		
		/// <summary>
		/// The billing period range in which the custom line item request will be applied.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreateCustomLineItemPostBodyBillingPeriodRange BillingPeriodRange { get; set; }
		
		/// <summary>
		///  A map that contains tag keys and tag values that are attached to a custom line item. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		/// The charge details of a custom line item. It should contain only one of <code>Flat</code> or <code>Percentage</code>.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public CreateCustomLineItemPostBodyChargeDetails ChargeDetails { get; set; }
	}
	
	public class CreateCustomLineItemPostBodyBillingPeriodRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InclusiveStartBillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExclusiveEndBillingPeriod { get; set; }
	}
	
	public class CreateCustomLineItemPostBodyChargeDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CustomLineItemFlatChargeDetails Flat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomLineItemPercentageChargeDetails Percentage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CustomLineItemType Type { get; set; }
	}
	
	public class CreatePricingPlanPostBody
	{
		
		/// <summary>
		/// The name of the pricing plan. The names must be unique to each pricing plan. 
		/// Required
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\+=\.\-@]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\+=\.\-@]+")]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the pricing plan. 
		/// Max length: 1024
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string Description { get; set; }
		
		/// <summary>
		///  A list of Amazon Resource Names (ARNs) that define the pricing plan parameters. 
		/// Minimum items: 0
		/// Maximum items: 30
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(30)]
		public string[] PricingRuleArns { get; set; }
		
		/// <summary>
		///  A map that contains tag keys and tag values that are attached to a pricing plan. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreatePricingRulePostBody
	{
		
		/// <summary>
		///  The pricing rule name. The names must be unique to each pricing rule. 
		/// Required
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\+=\.\-@]+
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\+=\.\-@]+")]
		public string Name { get; set; }
		
		/// <summary>
		///  The pricing rule description. 
		/// Max length: 1024
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string Description { get; set; }
		
		/// <summary>
		///  The scope of pricing rule that indicates if it's globally applicable, or it's service-specific. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PricingRuleScope Scope { get; set; }
		
		/// <summary>
		///  The type of pricing rule. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PricingRuleType Type { get; set; }
		
		/// <summary>
		///  A percentage modifier that's applied on the public pricing rates. 
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public System.Nullable<System.Double> ModifierPercentage { get; set; }
		
		/// <summary>
		///  If the <code>Scope</code> attribute is set to <code>SERVICE</code> or <code>SKU</code>, the attribute indicates which service the <code>PricingRule</code> is applicable for. 
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9]+")]
		public string Service { get; set; }
		
		/// <summary>
		///  A map that contains tag keys and tag values that are attached to a pricing rule. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
		
		/// <summary>
		///  The seller of services provided by Amazon Web Services, their affiliates, or third-party providers selling services via Amazon Web Services Marketplace. 
		/// Pattern: [a-zA-Z0-9 ]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9 ]+")]
		public string BillingEntity { get; set; }
		
		/// <summary>
		///  The set of tiering configurations for the pricing rule. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public CreatePricingRulePostBodyTiering Tiering { get; set; }
		
		/// <summary>
		/// <p> Usage type is the unit that each service uses to measure the usage of a specific type of resource.</p> <p>If the <code>Scope</code> attribute is set to <code>SKU</code>, this attribute indicates which usage type the <code>PricingRule</code> is modifying. For example, <code>USW2-BoxUsage:m2.2xlarge</code> describes an<code> M2 High Memory Double Extra Large</code> instance in the US West (Oregon) Region. <pre><code>&lt;/p&gt; </code></pre>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: \S+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\S+")]
		public string UsageType { get; set; }
		
		/// <summary>
		/// <p> Operation is the specific Amazon Web Services action covered by this line item. This describes the specific usage of the line item.</p> <p> If the <code>Scope</code> attribute is set to <code>SKU</code>, this attribute indicates which operation the <code>PricingRule</code> is modifying. For example, a value of <code>RunInstances:0202</code> indicates the operation of running an Amazon EC2 instance.</p>
		/// Max length: 256
		/// Min length: 1
		/// Pattern: \S+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(256)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\S+")]
		public string Operation { get; set; }
	}
	
	public class CreatePricingRulePostBodyTiering
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CreateFreeTierConfig FreeTier { get; set; }
	}
	
	public class DeleteBillingGroupPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the billing group that you're deleting.
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:billinggroup/)?[0-9]{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:billinggroup/)?[0-9]{12}")]
		public string Arn { get; set; }
	}
	
	public class DeleteCustomLineItemPostBody
	{
		
		/// <summary>
		///  The ARN of the custom line item to be deleted. 
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:customlineitem/)?[a-zA-Z0-9]{10}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:customlineitem/)?[a-zA-Z0-9]{10}")]
		public string Arn { get; set; }
		
		/// <summary>
		/// The billing period range in which the custom line item request will be applied.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public DeleteCustomLineItemPostBodyBillingPeriodRange BillingPeriodRange { get; set; }
	}
	
	public class DeleteCustomLineItemPostBodyBillingPeriodRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InclusiveStartBillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExclusiveEndBillingPeriod { get; set; }
	}
	
	public class DeletePricingPlanPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the pricing plan that you're deleting. 
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:pricingplan/)?[a-zA-Z0-9]{10}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:pricingplan/)?[a-zA-Z0-9]{10}")]
		public string Arn { get; set; }
	}
	
	public class DeletePricingRulePostBody
	{
		
		/// <summary>
		///  The Amazon Resource Name (ARN) of the pricing rule that you are deleting. 
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:pricingrule/)?[a-zA-Z0-9]{10}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:pricingrule/)?[a-zA-Z0-9]{10}")]
		public string Arn { get; set; }
	}
	
	public class DisassociateAccountsPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the billing group that the array of account IDs will disassociate from. 
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:billinggroup/)?[0-9]{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:billinggroup/)?[0-9]{12}")]
		public string Arn { get; set; }
		
		/// <summary>
		/// The array of account IDs to disassociate. 
		/// Required
		/// Minimum items: 1
		/// Maximum items: 30
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(30)]
		public string[] AccountIds { get; set; }
	}
	
	public class DisassociatePricingRulesPutBody
	{
		
		/// <summary>
		///  The pricing plan Amazon Resource Name (ARN) to disassociate pricing rules from. 
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:pricingplan/)?[a-zA-Z0-9]{10}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:pricingplan/)?[a-zA-Z0-9]{10}")]
		public string Arn { get; set; }
		
		/// <summary>
		///  A list containing the Amazon Resource Name (ARN) of the pricing rules that will be disassociated. 
		/// Required
		/// Minimum items: 1
		/// Maximum items: 30
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(30)]
		public string[] PricingRuleArns { get; set; }
	}
	
	public class ListAccountAssociationsPostBody
	{
		
		/// <summary>
		///  The preferred billing period to get account associations. 
		/// Pattern: \d{4}-(0?[1-9]|1[012])
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{4}-(0?[1-9]|1[012])")]
		public string BillingPeriod { get; set; }
		
		/// <summary>
		/// <p>The filter on the account ID of the linked account, or any of the following:</p> <p> <code>MONITORED</code>: linked accounts that are associated to billing groups.</p> <p> <code>UNMONITORED</code>: linked accounts that are not associated to billing groups.</p> <p> <code>Billing Group Arn</code>: linked accounts that are associated to the provided Billing Group Arn.</p>
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ListAccountAssociationsPostBodyFilters Filters { get; set; }
		
		/// <summary>
		///  The pagination token that's used on subsequent calls to retrieve accounts. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	public class ListAccountAssociationsPostBodyFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Association { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string AccountId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] AccountIds { get; set; }
	}
	
	public class ListBillingGroupCostReportsPostBody
	{
		
		/// <summary>
		/// The preferred billing period for your report. 
		/// Pattern: \d{4}-(0?[1-9]|1[012])
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{4}-(0?[1-9]|1[012])")]
		public string BillingPeriod { get; set; }
		
		/// <summary>
		/// The maximum number of reports to retrieve. 
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The pagination token that's used on subsequent calls to get reports. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The filter used to retrieve specific <code>BillingGroupCostReportElements</code>.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ListBillingGroupCostReportsPostBodyFilters Filters { get; set; }
	}
	
	public class ListBillingGroupCostReportsPostBodyFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] BillingGroupArns { get; set; }
	}
	
	public class ListBillingGroupsPostBody
	{
		
		/// <summary>
		/// The preferred billing period to get billing groups. 
		/// Pattern: \d{4}-(0?[1-9]|1[012])
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{4}-(0?[1-9]|1[012])")]
		public string BillingPeriod { get; set; }
		
		/// <summary>
		/// The maximum number of billing groups to retrieve. 
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The pagination token that's used on subsequent calls to get billing groups. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// The filter that specifies the billing groups and pricing plans to retrieve billing group information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ListBillingGroupsPostBodyFilters Filters { get; set; }
	}
	
	public class ListBillingGroupsPostBodyFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Arns { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PricingPlan { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public BillingGroupStatus[] Statuses { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoAssociate { get; set; }
	}
	
	public class ListCustomLineItemVersionsPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) for the custom line item.
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:customlineitem/)?[a-zA-Z0-9]{10}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:customlineitem/)?[a-zA-Z0-9]{10}")]
		public string Arn { get; set; }
		
		/// <summary>
		/// The maximum number of custom line item versions to retrieve.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The pagination token that's used on subsequent calls to retrieve custom line item versions.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// A filter that specifies the billing period range where the custom line item versions reside.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ListCustomLineItemVersionsPostBodyFilters Filters { get; set; }
	}
	
	public class ListCustomLineItemVersionsPostBodyFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ListCustomLineItemVersionsBillingPeriodRangeFilter BillingPeriodRange { get; set; }
	}
	
	public class ListCustomLineItemsPostBody
	{
		
		/// <summary>
		///  The preferred billing period to get custom line items (FFLIs). 
		/// Pattern: \d{4}-(0?[1-9]|1[012])
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{4}-(0?[1-9]|1[012])")]
		public string BillingPeriod { get; set; }
		
		/// <summary>
		///  The maximum number of billing groups to retrieve. 
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  The pagination token that's used on subsequent calls to get custom line items (FFLIs). 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		/// A filter that specifies the custom line items and billing groups to retrieve FFLI information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ListCustomLineItemsPostBodyFilters Filters { get; set; }
	}
	
	public class ListCustomLineItemsPostBodyFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Names { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] BillingGroups { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Arns { get; set; }
	}
	
	public class ListPricingPlansPostBody
	{
		
		/// <summary>
		/// The preferred billing period to get pricing plan. 
		/// Pattern: \d{4}-(0?[1-9]|1[012])
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{4}-(0?[1-9]|1[012])")]
		public string BillingPeriod { get; set; }
		
		/// <summary>
		/// The filter that specifies the Amazon Resource Names (ARNs) of pricing plans, to retrieve pricing plan information.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ListPricingPlansPostBodyFilters Filters { get; set; }
		
		/// <summary>
		/// The maximum number of pricing plans to retrieve.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		/// The pagination token that's used on subsequent call to get pricing plans. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	public class ListPricingPlansPostBodyFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Arns { get; set; }
	}
	
	public class ListPricingPlansAssociatedWithPricingRulePostBody
	{
		
		/// <summary>
		///  The pricing plan billing period for which associations will be listed. 
		/// Pattern: \d{4}-(0?[1-9]|1[012])
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{4}-(0?[1-9]|1[012])")]
		public string BillingPeriod { get; set; }
		
		/// <summary>
		///  The pricing rule Amazon Resource Name (ARN) for which associations will be listed. 
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:pricingrule/)?[a-zA-Z0-9]{10}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:pricingrule/)?[a-zA-Z0-9]{10}")]
		public string PricingRuleArn { get; set; }
		
		/// <summary>
		///  The optional maximum number of pricing rule associations to retrieve. 
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  The optional pagination token returned by a previous call. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	public class ListPricingRulesPostBody
	{
		
		/// <summary>
		///  The preferred billing period to get the pricing plan. 
		/// Pattern: \d{4}-(0?[1-9]|1[012])
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{4}-(0?[1-9]|1[012])")]
		public string BillingPeriod { get; set; }
		
		/// <summary>
		///  The filter that specifies criteria that the pricing rules returned by the <code>ListPricingRules</code> API will adhere to.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ListPricingRulesPostBodyFilters Filters { get; set; }
		
		/// <summary>
		///  The maximum number of pricing rules to retrieve. 
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  The pagination token that's used on subsequent call to get pricing rules. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	public class ListPricingRulesPostBodyFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string[] Arns { get; set; }
	}
	
	public class ListPricingRulesAssociatedToPricingPlanPostBody
	{
		
		/// <summary>
		///  The billing period for which the pricing rule associations are to be listed. 
		/// Pattern: \d{4}-(0?[1-9]|1[012])
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{4}-(0?[1-9]|1[012])")]
		public string BillingPeriod { get; set; }
		
		/// <summary>
		///  The Amazon Resource Name (ARN) of the pricing plan for which associations are to be listed.
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:pricingplan/)?[a-zA-Z0-9]{10}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:pricingplan/)?[a-zA-Z0-9]{10}")]
		public string PricingPlanArn { get; set; }
		
		/// <summary>
		/// The optional maximum number of pricing rule associations to retrieve.
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  The optional pagination token returned by a previous call. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	public class ListResourcesAssociatedToCustomLineItemPostBody
	{
		
		/// <summary>
		///  The billing period for which the resource associations will be listed. 
		/// Pattern: \d{4}-(0?[1-9]|1[012])
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"\d{4}-(0?[1-9]|1[012])")]
		public string BillingPeriod { get; set; }
		
		/// <summary>
		///  The ARN of the custom line item for which the resource associations will be listed. 
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:customlineitem/)?[a-zA-Z0-9]{10}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:customlineitem/)?[a-zA-Z0-9]{10}")]
		public string Arn { get; set; }
		
		/// <summary>
		///  (Optional) The maximum number of resource associations to be retrieved. 
		/// Minimum: 1
		/// Maximum: 100
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(1, 100)]
		public System.Nullable<System.Int32> MaxResults { get; set; }
		
		/// <summary>
		///  (Optional) The pagination token that's returned by a previous request. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		/// <summary>
		///  A filter that specifies the type of resource associations that should be retrieved for a custom line item. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public ListResourcesAssociatedToCustomLineItemPostBodyFilters Filters { get; set; }
	}
	
	public class ListResourcesAssociatedToCustomLineItemPostBodyFilters
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CustomLineItemRelationship Relationship { get; set; }
	}
	
	public class TagResourcePostBody
	{
		
		/// <summary>
		///  The tags to add to the resource as a list of key-value pairs. 
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class UpdateBillingGroupPostBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the billing group being updated. 
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:billinggroup/)?[0-9]{12}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:billinggroup/)?[0-9]{12}")]
		public string Arn { get; set; }
		
		/// <summary>
		/// The name of the billing group. The names must be unique to each billing group. 
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\+=\.\-@]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\+=\.\-@]+")]
		public string Name { get; set; }
		
		/// <summary>
		/// The status of the billing group. Only one of the valid values can be used. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public BillingGroupStatus Status { get; set; }
		
		/// <summary>
		/// The preferences and settings that will be used to compute the Amazon Web Services charges for a billing group.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateBillingGroupPostBodyComputationPreference ComputationPreference { get; set; }
		
		/// <summary>
		/// A description of the billing group. 
		/// Max length: 1024
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string Description { get; set; }
		
		/// <summary>
		/// Specifies if the billing group has the following features enabled.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateBillingGroupPostBodyAccountGrouping AccountGrouping { get; set; }
	}
	
	public class UpdateBillingGroupPostBodyComputationPreference
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PricingPlanArn { get; set; }
	}
	
	public class UpdateBillingGroupPostBodyAccountGrouping
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> AutoAssociate { get; set; }
	}
	
	public class UpdateCustomLineItemPostBody
	{
		
		/// <summary>
		///  The ARN of the custom line item to be updated. 
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:customlineitem/)?[a-zA-Z0-9]{10}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:customlineitem/)?[a-zA-Z0-9]{10}")]
		public string Arn { get; set; }
		
		/// <summary>
		///  The new name for the custom line item. 
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\+=\.\-@]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\+=\.\-@]+")]
		public string Name { get; set; }
		
		/// <summary>
		///  The new line item description of the custom line item. 
		/// Max length: 255
		/// Min length: 1
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(255)]
		public string Description { get; set; }
		
		/// <summary>
		///  A representation of the new charge details of a custom line item. This should contain only one of <code>Flat</code> or <code>Percentage</code>. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateCustomLineItemPostBodyChargeDetails ChargeDetails { get; set; }
		
		/// <summary>
		/// The billing period range in which the custom line item request will be applied.
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdateCustomLineItemPostBodyBillingPeriodRange BillingPeriodRange { get; set; }
	}
	
	public class UpdateCustomLineItemPostBodyChargeDetails
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateCustomLineItemFlatChargeDetails Flat { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateCustomLineItemPercentageChargeDetails Percentage { get; set; }
	}
	
	public class UpdateCustomLineItemPostBodyBillingPeriodRange
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string InclusiveStartBillingPeriod { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ExclusiveEndBillingPeriod { get; set; }
	}
	
	public class UpdatePricingPlanPutBody
	{
		
		/// <summary>
		/// The Amazon Resource Name (ARN) of the pricing plan that you're updating. 
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:pricingplan/)?[a-zA-Z0-9]{10}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:pricingplan/)?[a-zA-Z0-9]{10}")]
		public string Arn { get; set; }
		
		/// <summary>
		/// The name of the pricing plan. The name must be unique to each pricing plan. 
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\+=\.\-@]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\+=\.\-@]+")]
		public string Name { get; set; }
		
		/// <summary>
		/// The description of the pricing plan. 
		/// Max length: 1024
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string Description { get; set; }
	}
	
	public class UpdatePricingRulePutBody
	{
		
		/// <summary>
		///  The Amazon Resource Name (ARN) of the pricing rule to update. 
		/// Required
		/// Pattern: (arn:aws(-cn)?:billingconductor::[0-9]{12}:pricingrule/)?[a-zA-Z0-9]{10}
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(arn:aws(-cn)?:billingconductor::[0-9]{12}:pricingrule/)?[a-zA-Z0-9]{10}")]
		public string Arn { get; set; }
		
		/// <summary>
		///  The new name of the pricing rule. The name must be unique to each pricing rule. 
		/// Max length: 128
		/// Min length: 1
		/// Pattern: [a-zA-Z0-9_\+=\.\-@]+
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(1)]
		[System.ComponentModel.DataAnnotations.MaxLength(128)]
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"[a-zA-Z0-9_\+=\.\-@]+")]
		public string Name { get; set; }
		
		/// <summary>
		///  The new description for the pricing rule. 
		/// Max length: 1024
		/// Min length: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.MinLength(0)]
		[System.ComponentModel.DataAnnotations.MaxLength(1024)]
		public string Description { get; set; }
		
		/// <summary>
		///  The new pricing rule type. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public PricingRuleType Type { get; set; }
		
		/// <summary>
		///  The new modifier to show pricing plan rates as a percentage. 
		/// Minimum: 0
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		[System.ComponentModel.DataAnnotations.Range(0, System.Double.MaxValue)]
		public System.Nullable<System.Double> ModifierPercentage { get; set; }
		
		/// <summary>
		///  The set of tiering configurations for the pricing rule. 
		/// </summary>
		[System.Runtime.Serialization.DataMember()]
		public UpdatePricingRulePutBodyTiering Tiering { get; set; }
	}
	
	public class UpdatePricingRulePutBodyTiering
	{
		
		[System.Runtime.Serialization.DataMember()]
		public UpdateFreeTierConfig FreeTier { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}

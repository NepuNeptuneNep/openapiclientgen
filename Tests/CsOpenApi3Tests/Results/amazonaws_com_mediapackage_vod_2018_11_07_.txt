//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNS
{
	using System;
	using System.Linq;
	using System.Collections.Generic;
	using System.Threading.Tasks;
	using System.Text.Json;
	using System.Text.Json.Serialization;
	using Fonlow.Net.Http;
	
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfigureLogsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Authorization Authorization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EgressAccessLogs EgressAccessLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// CDN Authorization credentials
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Authorization
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string CdnIdentifierSecret { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SecretsRoleArn { get; set; }
	}
	
	/// <summary>
	/// Configure egress access logging.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EgressAccessLogs
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LogGroupName { get; set; }
	}
	
	/// <summary>
	/// A collection of tags associated with a resource
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class Tags
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UnprocessableEntityException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class InternalServerErrorException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ForbiddenException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class NotFoundException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ServiceUnavailableException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TooManyRequestsException
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAssetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EgressEndpoint[] EgressEndpoints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PackagingGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// The endpoint URL used to access an Asset using one PackagingConfiguration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EgressEndpoint
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string PackagingConfigurationId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Status { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreatePackagingConfigurationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CmafPackage CmafPackage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashPackage DashPackage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HlsPackage HlsPackage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MssPackage MssPackage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PackagingGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// A CMAF packaging configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CmafPackage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CmafEncryption Encryption { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HlsManifest[] HlsManifests { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeEncoderConfigurationInSegments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SegmentDurationSeconds { get; set; }
	}
	
	/// <summary>
	/// A CMAF encryption configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CmafEncryption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ConstantInitializationVector { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SpekeKeyProvider SpekeKeyProvider { get; set; }
	}
	
	/// <summary>
	/// A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class SpekeKeyProvider
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EncryptionContractConfiguration EncryptionContractConfiguration { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string RoleArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string[] SystemIds { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Url { get; set; }
	}
	
	/// <summary>
	/// Use encryptionContractConfiguration to configure one or more content encryption keys for your endpoints that use SPEKE 2.0. 
	///The encryption contract defines which content keys are used to encrypt the audio and video tracks in your stream. 
	///To configure the encryption contract, specify which audio and video encryption presets to use.
	///Note the following considerations when using encryptionContractConfiguration:
	///encryptionContractConfiguration can be used for DASH endpoints that use SPEKE 2.0. SPEKE 2.0 relies on the CPIX 2.3 specification.
	///You must disable key rotation for this endpoint by setting keyRotationIntervalSeconds to 0.
	///
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class EncryptionContractConfiguration
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PresetSpeke20Audio PresetSpeke20Audio { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public PresetSpeke20Video PresetSpeke20Video { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PresetSpeke20Audio
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PRESET-AUDIO-1")]
		PRESETMinusAUDIOMinus1 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PRESET-AUDIO-2")]
		PRESETMinusAUDIOMinus2 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PRESET-AUDIO-3")]
		PRESETMinusAUDIOMinus3 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHARED = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNENCRYPTED = 4,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum PresetSpeke20Video
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PRESET-VIDEO-1")]
		PRESETMinusVIDEOMinus1 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PRESET-VIDEO-2")]
		PRESETMinusVIDEOMinus2 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PRESET-VIDEO-3")]
		PRESETMinusVIDEOMinus3 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PRESET-VIDEO-4")]
		PRESETMinusVIDEOMinus4 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PRESET-VIDEO-5")]
		PRESETMinusVIDEOMinus5 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PRESET-VIDEO-6")]
		PRESETMinusVIDEOMinus6 = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PRESET-VIDEO-7")]
		PRESETMinusVIDEOMinus7 = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute(Value="PRESET-VIDEO-8")]
		PRESETMinusVIDEOMinus8 = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SHARED = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UNENCRYPTED = 9,
	}
	
	/// <summary>
	/// An HTTP Live Streaming (HLS) manifest configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HlsManifest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AdMarkers AdMarkers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeIframeOnlyStream { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ManifestName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ProgramDateTimeIntervalSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> RepeatExtXKey { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StreamSelection StreamSelection { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum AdMarkers
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SCTE35_ENHANCED = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PASSTHROUGH = 2,
	}
	
	/// <summary>
	/// A StreamSelection configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class StreamSelection
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MaxVideoBitsPerSecond { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinVideoBitsPerSecond { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StreamOrder StreamOrder { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum StreamOrder
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ORIGINAL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VIDEO_BITRATE_ASCENDING = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VIDEO_BITRATE_DESCENDING = 2,
	}
	
	/// <summary>
	/// A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashPackage
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public DashManifest[] DashManifests { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashEncryption Encryption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeEncoderConfigurationInSegments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeIframeOnlyStream { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__PeriodTriggersElement[] PeriodTriggers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SegmentDurationSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentTemplateFormat SegmentTemplateFormat { get; set; }
	}
	
	/// <summary>
	/// A DASH manifest configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashManifest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public ManifestLayout ManifestLayout { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ManifestName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> MinBufferTimeSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Profile Profile { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public ScteMarkersSource ScteMarkersSource { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StreamSelection StreamSelection { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ManifestLayout
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FULL = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		COMPACT = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum Profile
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NONE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HBBTV_1_5 = 1,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum ScteMarkersSource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SEGMENTS = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MANIFEST = 1,
	}
	
	/// <summary>
	/// A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DashEncryption
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SpekeKeyProvider SpekeKeyProvider { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum @__PeriodTriggersElement
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ADS = 0,
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum SegmentTemplateFormat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NUMBER_WITH_TIMELINE = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TIME_WITH_TIMELINE = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NUMBER_WITH_DURATION = 2,
	}
	
	/// <summary>
	/// An HTTP Live Streaming (HLS) packaging configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HlsPackage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HlsEncryption Encryption { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public HlsManifest[] HlsManifests { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeDvbSubtitles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SegmentDurationSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseAudioRenditionGroup { get; set; }
	}
	
	/// <summary>
	/// An HTTP Live Streaming (HLS) encryption configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class HlsEncryption
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ConstantInitializationVector { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EncryptionMethod EncryptionMethod { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SpekeKeyProvider SpekeKeyProvider { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public enum EncryptionMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AES_128 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SAMPLE_AES = 1,
	}
	
	/// <summary>
	/// A Microsoft Smooth Streaming (MSS) PackagingConfiguration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MssPackage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MssEncryption Encryption { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public MssManifest[] MssManifests { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SegmentDurationSeconds { get; set; }
	}
	
	/// <summary>
	/// A Microsoft Smooth Streaming (MSS) encryption configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MssEncryption
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public SpekeKeyProvider SpekeKeyProvider { get; set; }
	}
	
	/// <summary>
	/// A Microsoft Smooth Streaming (MSS) manifest configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class MssManifest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string ManifestName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public StreamSelection StreamSelection { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreatePackagingGroupResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Authorization Authorization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EgressAccessLogs EgressAccessLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAssetResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeletePackagingConfigurationResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeletePackagingGroupResponse
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAssetResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EgressEndpoint[] EgressEndpoints { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PackagingGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribePackagingConfigurationResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CmafPackage CmafPackage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashPackage DashPackage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HlsPackage HlsPackage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MssPackage MssPackage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PackagingGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribePackagingGroupResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApproximateAssetCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Authorization Authorization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EgressAccessLogs EgressAccessLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAssetsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public AssetShallow[] Assets { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
	}
	
	/// <summary>
	/// A MediaPackage VOD Asset resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class AssetShallow
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PackagingGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SourceRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListPackagingConfigurationsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PackagingConfiguration[] PackagingConfigurations { get; set; }
	}
	
	/// <summary>
	/// A MediaPackage VOD PackagingConfiguration resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PackagingConfiguration
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public CmafPackage CmafPackage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashPackage DashPackage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HlsPackage HlsPackage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MssPackage MssPackage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string PackagingGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListPackagingGroupsResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string NextToken { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public PackagingGroup[] PackagingGroups { get; set; }
	}
	
	/// <summary>
	/// A MediaPackage VOD PackagingGroup resource.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class PackagingGroup
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApproximateAssetCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Authorization Authorization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EgressAccessLogs EgressAccessLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public @__mapOf__string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class @__mapOf__string
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdatePackagingGroupResponse
	{
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> ApproximateAssetCount { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Arn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Authorization Authorization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string CreatedAt { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string DomainName { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EgressAccessLogs EgressAccessLogs { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// The option to configure log subscription.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ConfigureLogsRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public EgressAccessLogs EgressAccessLogs { get; set; }
	}
	
	/// <summary>
	/// A new MediaPackage VOD Asset configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreateAssetRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PackagingGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string ResourceId { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceArn { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string SourceRoleArn { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// A new MediaPackage VOD PackagingConfiguration resource configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreatePackagingConfigurationRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CmafPackage CmafPackage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashPackage DashPackage { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HlsPackage HlsPackage { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MssPackage MssPackage { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string PackagingGroupId { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	/// <summary>
	/// A new MediaPackage VOD PackagingGroup resource configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class CreatePackagingGroupRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Authorization Authorization { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public EgressAccessLogs EgressAccessLogs { get; set; }
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public string Id { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public Tags Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeleteAssetRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeletePackagingConfigurationRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DeletePackagingGroupRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribeAssetRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribePackagingConfigurationRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class DescribePackagingGroupRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListAssetsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListPackagingConfigurationsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListPackagingGroupsRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class ListTagsForResourceRequest
	{
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class TagResourceRequest
	{
		
		/// <summary>
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember()]
		public @__mapOf__string Tags { get; set; }
	}
	
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UntagResourceRequest
	{
	}
	
	/// <summary>
	/// A MediaPackage VOD PackagingGroup resource configuration.
	/// </summary>
	[System.Runtime.Serialization.DataContract(Namespace="http://fonlow.com/TestOpenApi/2024/04")]
	public class UpdatePackagingGroupRequest
	{
		
		[System.Runtime.Serialization.DataMember()]
		public Authorization Authorization { get; set; }
	}
	
	public partial class Misc
	{
		
		private System.Net.Http.HttpClient httpClient;
		
		private JsonSerializerOptions jsonSerializerSettings;
		
		public Misc(System.Net.Http.HttpClient httpClient, JsonSerializerOptions jsonSerializerSettings=null)
		{
			if (httpClient == null)
				throw new ArgumentNullException("Null HttpClient.", "httpClient");

			if (httpClient.BaseAddress == null)
				throw new ArgumentNullException("HttpClient has no BaseAddress", "httpClient");

			this.httpClient = httpClient;
			this.jsonSerializerSettings = jsonSerializerSettings;
		}
		
		/// <summary>
		/// Changes the packaging group's properities to configure log subscription
		/// ConfigureLogs packaging_groups/{id}/configure_logs
		/// </summary>
		/// <param name="id">The ID of a MediaPackage VOD PackagingGroup resource.</param>
		/// <returns>Success</returns>
		public async Task<ConfigureLogsResponse> ConfigureLogsAsync(string id, ConfigureLogsPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "packaging_groups/"+ (id==null? "" : System.Uri.EscapeDataString(id))+"/configure_logs";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ConfigureLogsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new MediaPackage VOD Asset resource.
		/// CreateAsset assets
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreateAssetResponse> CreateAssetAsync(CreateAssetPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "assets";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreateAssetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a collection of MediaPackage VOD Asset resources.
		/// ListAssets assets
		/// </summary>
		/// <param name="maxResults">Upper bound on number of records to return.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="nextToken">A token used to resume pagination from the end of a previous request.</param>
		/// <param name="packagingGroupId">Returns Assets associated with the specified PackagingGroup.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListAssetsResponse> ListAssetsAsync(int maxResults, string nextToken, string packagingGroupId, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "assets?maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&packagingGroupId=" + (packagingGroupId==null? "" : System.Uri.EscapeDataString(packagingGroupId))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListAssetsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new MediaPackage VOD PackagingConfiguration resource.
		/// CreatePackagingConfiguration packaging_configurations
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreatePackagingConfigurationResponse> CreatePackagingConfigurationAsync(CreatePackagingConfigurationPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "packaging_configurations";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreatePackagingConfigurationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a collection of MediaPackage VOD PackagingConfiguration resources.
		/// ListPackagingConfigurations packaging_configurations
		/// </summary>
		/// <param name="maxResults">Upper bound on number of records to return.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="nextToken">A token used to resume pagination from the end of a previous request.</param>
		/// <param name="packagingGroupId">Returns MediaPackage VOD PackagingConfigurations associated with the specified PackagingGroup.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListPackagingConfigurationsResponse> ListPackagingConfigurationsAsync(int maxResults, string nextToken, string packagingGroupId, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "packaging_configurations?maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&packagingGroupId=" + (packagingGroupId==null? "" : System.Uri.EscapeDataString(packagingGroupId))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListPackagingConfigurationsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Creates a new MediaPackage VOD PackagingGroup resource.
		/// CreatePackagingGroup packaging_groups
		/// </summary>
		/// <returns>Success</returns>
		public async Task<CreatePackagingGroupResponse> CreatePackagingGroupAsync(CreatePackagingGroupPostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "packaging_groups";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<CreatePackagingGroupResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a collection of MediaPackage VOD PackagingGroup resources.
		/// ListPackagingGroups packaging_groups
		/// </summary>
		/// <param name="maxResults">Upper bound on number of records to return.
		/// Minimum: 1
		/// Maximum: 1000
		// </param>
		/// <param name="nextToken">A token used to resume pagination from the end of a previous request.</param>
		/// <param name="MaxResults">Pagination limit</param>
		/// <param name="NextToken">Pagination token</param>
		/// <returns>Success</returns>
		public async Task<ListPackagingGroupsResponse> ListPackagingGroupsAsync(int maxResults, string nextToken, string MaxResults, string NextToken, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "packaging_groups?maxResults="+maxResults+"&nextToken=" + (nextToken==null? "" : System.Uri.EscapeDataString(nextToken))+"&MaxResults=" + (MaxResults==null? "" : System.Uri.EscapeDataString(MaxResults))+"&NextToken=" + (NextToken==null? "" : System.Uri.EscapeDataString(NextToken));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListPackagingGroupsResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes an existing MediaPackage VOD Asset resource.
		/// DeleteAsset assets/{id}
		/// </summary>
		/// <param name="id">The ID of the MediaPackage VOD Asset resource to delete.</param>
		public async Task DeleteAssetAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "assets/"+ (id==null? "" : System.Uri.EscapeDataString(id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a description of a MediaPackage VOD Asset resource.
		/// DescribeAsset assets/{id}
		/// </summary>
		/// <param name="id">The ID of an MediaPackage VOD Asset resource.</param>
		/// <returns>Success</returns>
		public async Task<DescribeAssetResponse> DescribeAssetAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "assets/"+ (id==null? "" : System.Uri.EscapeDataString(id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribeAssetResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a MediaPackage VOD PackagingConfiguration resource.
		/// DeletePackagingConfiguration packaging_configurations/{id}
		/// </summary>
		/// <param name="id">The ID of the MediaPackage VOD PackagingConfiguration resource to delete.</param>
		public async Task DeletePackagingConfigurationAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "packaging_configurations/"+ (id==null? "" : System.Uri.EscapeDataString(id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a description of a MediaPackage VOD PackagingConfiguration resource.
		/// DescribePackagingConfiguration packaging_configurations/{id}
		/// </summary>
		/// <param name="id">The ID of a MediaPackage VOD PackagingConfiguration resource.</param>
		/// <returns>Success</returns>
		public async Task<DescribePackagingConfigurationResponse> DescribePackagingConfigurationAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "packaging_configurations/"+ (id==null? "" : System.Uri.EscapeDataString(id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribePackagingConfigurationResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Deletes a MediaPackage VOD PackagingGroup resource.
		/// DeletePackagingGroup packaging_groups/{id}
		/// </summary>
		/// <param name="id">The ID of the MediaPackage VOD PackagingGroup resource to delete.</param>
		public async Task DeletePackagingGroupAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "packaging_groups/"+ (id==null? "" : System.Uri.EscapeDataString(id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a description of a MediaPackage VOD PackagingGroup resource.
		/// DescribePackagingGroup packaging_groups/{id}
		/// </summary>
		/// <param name="id">The ID of a MediaPackage VOD PackagingGroup resource.</param>
		/// <returns>Success</returns>
		public async Task<DescribePackagingGroupResponse> DescribePackagingGroupAsync(string id, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "packaging_groups/"+ (id==null? "" : System.Uri.EscapeDataString(id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<DescribePackagingGroupResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Updates a specific packaging group. You can't change the id attribute or any other system-generated attributes.
		/// UpdatePackagingGroup packaging_groups/{id}
		/// </summary>
		/// <param name="id">The ID of a MediaPackage VOD PackagingGroup resource.</param>
		/// <returns>Success</returns>
		public async Task<UpdatePackagingGroupResponse> UpdatePackagingGroupAsync(string id, UpdatePackagingGroupPutBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "packaging_groups/"+ (id==null? "" : System.Uri.EscapeDataString(id));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Put, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<UpdatePackagingGroupResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Returns a list of the tags assigned to the specified resource.
		/// ListTagsForResource tags/{resource_arn}
		/// </summary>
		/// <param name="resource_arn">The Amazon Resource Name (ARN) for the resource. You can get this from the response to any request to the resource.</param>
		/// <returns>Success</returns>
		public async Task<ListTagsForResourceResponse> ListTagsForResourceAsync(string resource_arn, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/{resource_arn}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Get, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
				var contentString = await responseMessage.Content.ReadAsStringAsync();
				return JsonSerializer.Deserialize<ListTagsForResourceResponse>(contentString, jsonSerializerSettings);
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Adds tags to the specified resource. You can specify one or more tags to add.
		/// TagResource tags/{resource_arn}
		/// </summary>
		/// <param name="resource_arn">The Amazon Resource Name (ARN) for the resource. You can get this from the response to any request to the resource.</param>
		public async Task TagResourceAsync(string resource_arn, TagResourcePostBody requestBody, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/{resource_arn}";
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Post, requestUri))
			{
			var contentJson = JsonSerializer.Serialize(requestBody, jsonSerializerSettings);
			var content = new System.Net.Http.StringContent(contentJson, System.Text.Encoding.UTF8, "application/json");
			httpRequestMessage.Content = content;
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
		
		/// <summary>
		/// Removes tags from the specified resource. You can specify one or more tags to remove.
		/// UntagResource tags/{resource_arn}#tagKeys
		/// </summary>
		/// <param name="resource_arn">The Amazon Resource Name (ARN) for the resource. You can get this from the response to any request to the resource.</param>
		/// <param name="tagKeys">A comma-separated list of the tag keys to remove from the resource.</param>
		public async Task UntagResourceAsync(string resource_arn, string[] tagKeys, Action<System.Net.Http.Headers.HttpRequestHeaders> handleHeaders = null)
		{
			var requestUri = "tags/{resource_arn}#tagKeys?"+string.Join("&", tagKeys.Select(z => $"tagKeys={System.Uri.EscapeDataString(z.ToString())}"));
			using (var httpRequestMessage = new System.Net.Http.HttpRequestMessage(System.Net.Http.HttpMethod.Delete, requestUri))
			{
			if (handleHeaders != null)
			{
				handleHeaders(httpRequestMessage.Headers);
			}

			var responseMessage = await httpClient.SendAsync(httpRequestMessage);
			try
			{
				responseMessage.EnsureSuccessStatusCodeEx();
			}
			finally
			{
				responseMessage.Dispose();
			}
			}
		}
	}
	
	public class ConfigureLogsPutBody
	{
		
		/// <summary>
		/// Configure egress access logging.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="egressAccessLogs")]
		public ConfigureLogsPutBodyEgressAccessLogs EgressAccessLogs { get; set; }
	}
	
	public class ConfigureLogsPutBodyEgressAccessLogs
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LogGroupName { get; set; }
	}
	
	public class CreateAssetPostBody
	{
		
		/// <summary>
		/// The unique identifier for the Asset.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// The ID of the PackagingGroup for the Asset.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="packagingGroupId")]
		public string PackagingGroupId { get; set; }
		
		/// <summary>
		/// The resource ID to include in SPEKE key requests.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="resourceId")]
		public string ResourceId { get; set; }
		
		/// <summary>
		/// ARN of the source object in S3.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sourceArn")]
		public string SourceArn { get; set; }
		
		/// <summary>
		/// The IAM role ARN used to access the source S3 bucket.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="sourceRoleArn")]
		public string SourceRoleArn { get; set; }
		
		/// <summary>
		/// A collection of tags associated with a resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreatePackagingConfigurationPostBody
	{
		
		/// <summary>
		/// A CMAF packaging configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="cmafPackage")]
		public CreatePackagingConfigurationPostBodyCmafPackage CmafPackage { get; set; }
		
		/// <summary>
		/// A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="dashPackage")]
		public CreatePackagingConfigurationPostBodyDashPackage DashPackage { get; set; }
		
		/// <summary>
		/// An HTTP Live Streaming (HLS) packaging configuration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="hlsPackage")]
		public CreatePackagingConfigurationPostBodyHlsPackage HlsPackage { get; set; }
		
		/// <summary>
		/// The ID of the PackagingConfiguration.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A Microsoft Smooth Streaming (MSS) PackagingConfiguration.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="mssPackage")]
		public CreatePackagingConfigurationPostBodyMssPackage MssPackage { get; set; }
		
		/// <summary>
		/// The ID of a PackagingGroup.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="packagingGroupId")]
		public string PackagingGroupId { get; set; }
		
		/// <summary>
		/// A collection of tags associated with a resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreatePackagingConfigurationPostBodyCmafPackage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public CmafEncryption Encryption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HlsManifest[] HlsManifests { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeEncoderConfigurationInSegments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SegmentDurationSeconds { get; set; }
	}
	
	public class CreatePackagingConfigurationPostBodyDashPackage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public DashManifest[] DashManifests { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public DashEncryption Encryption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeEncoderConfigurationInSegments { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeIframeOnlyStream { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public @__PeriodTriggersElement[] PeriodTriggers { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SegmentDurationSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public SegmentTemplateFormat SegmentTemplateFormat { get; set; }
	}
	
	public class CreatePackagingConfigurationPostBodyHlsPackage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public HlsEncryption Encryption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public HlsManifest[] HlsManifests { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> IncludeDvbSubtitles { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SegmentDurationSeconds { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Boolean> UseAudioRenditionGroup { get; set; }
	}
	
	public class CreatePackagingConfigurationPostBodyMssPackage
	{
		
		[System.Runtime.Serialization.DataMember()]
		public MssEncryption Encryption { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public MssManifest[] MssManifests { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public System.Nullable<System.Int32> SegmentDurationSeconds { get; set; }
	}
	
	public class CreatePackagingGroupPostBody
	{
		
		/// <summary>
		/// CDN Authorization credentials
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authorization")]
		public CreatePackagingGroupPostBodyAuthorization Authorization { get; set; }
		
		/// <summary>
		/// Configure egress access logging.
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="egressAccessLogs")]
		public CreatePackagingGroupPostBodyEgressAccessLogs EgressAccessLogs { get; set; }
		
		/// <summary>
		/// The ID of the PackagingGroup.
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="id")]
		public string Id { get; set; }
		
		/// <summary>
		/// A collection of tags associated with a resource
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
	
	public class CreatePackagingGroupPostBodyAuthorization
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CdnIdentifierSecret { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretsRoleArn { get; set; }
	}
	
	public class CreatePackagingGroupPostBodyEgressAccessLogs
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string LogGroupName { get; set; }
	}
	
	public class UpdatePackagingGroupPutBody
	{
		
		/// <summary>
		/// CDN Authorization credentials
		/// </summary>
		[System.Runtime.Serialization.DataMember(Name="authorization")]
		public UpdatePackagingGroupPutBodyAuthorization Authorization { get; set; }
	}
	
	public class UpdatePackagingGroupPutBodyAuthorization
	{
		
		[System.Runtime.Serialization.DataMember()]
		public string CdnIdentifierSecret { get; set; }
		
		[System.Runtime.Serialization.DataMember()]
		public string SecretsRoleArn { get; set; }
	}
	
	public class TagResourcePostBody
	{
		
		/// <summary>
		/// A collection of tags associated with a resource
		/// Required
		/// </summary>
		[System.ComponentModel.DataAnnotations.Required()]
		[System.Runtime.Serialization.DataMember(Name="tags")]
		public System.Collections.Generic.Dictionary<string, string> Tags { get; set; }
	}
}

namespace Fonlow.Net.Http
{
	using System.Net.Http;

	public class WebApiRequestException : HttpRequestException
	{
		public System.Net.HttpStatusCode StatusCode { get; private set; }

		public string Response { get; private set; }

		public System.Net.Http.Headers.HttpResponseHeaders Headers { get; private set; }

		public System.Net.Http.Headers.MediaTypeHeaderValue ContentType { get; private set; }

		public WebApiRequestException(string message, System.Net.HttpStatusCode statusCode, string response, System.Net.Http.Headers.HttpResponseHeaders headers, System.Net.Http.Headers.MediaTypeHeaderValue contentType) : base(message)
		{
			StatusCode = statusCode;
			Response = response;
			Headers = headers;
			ContentType = contentType;
		}
	}

	public static class ResponseMessageExtensions
	{
		public static void EnsureSuccessStatusCodeEx(this HttpResponseMessage responseMessage)
		{
			if (!responseMessage.IsSuccessStatusCode)
			{
				var responseText = responseMessage.Content.ReadAsStringAsync().Result;
				var contentType = responseMessage.Content.Headers.ContentType;
				throw new WebApiRequestException(responseMessage.ReasonPhrase, responseMessage.StatusCode, responseText, responseMessage.Headers, contentType);
			}
		}
	}
}
